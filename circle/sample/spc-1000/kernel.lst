
kernel.elf:     file format elf32-littlearm


Disassembly of section .text:

00008000 <_start>:
    8000:	e10f0000 	mrs	r0, CPSR
    8004:	e220001a 	eor	r0, r0, #26
    8008:	e310001f 	tst	r0, #31
    800c:	e3c0001f 	bic	r0, r0, #31
    8010:	e38000d3 	orr	r0, r0, #211	; 0xd3
    8014:	1a000004 	bne	802c <_start+0x2c>
    8018:	e3800c01 	orr	r0, r0, #256	; 0x100
    801c:	e28fe00c 	add	lr, pc, #12
    8020:	e16ff000 	msr	SPSR_fsxc, r0
    8024:	e12ef30e 	.word	0xe12ef30e
    8028:	e160006e 	.word	0xe160006e
    802c:	e121f000 	msr	CPSR_c, r0
    8030:	e3a00000 	mov	r0, #0
    8034:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
    8038:	f1020011 	cps	#17
    803c:	e3a0d709 	mov	sp, #2359296	; 0x240000
    8040:	f1020012 	cps	#18
    8044:	e3a0d98e 	mov	sp, #2326528	; 0x238000
    8048:	f1020017 	cps	#23
    804c:	e3a0d823 	mov	sp, #2293760	; 0x230000
    8050:	f102001b 	cps	#27
    8054:	e3a0d823 	mov	sp, #2293760	; 0x230000
    8058:	f102001f 	cps	#31
    805c:	e3a0d98a 	mov	sp, #2260992	; 0x228000
    8060:	ea00b11f 	b	344e4 <sysinit>

00008064 <main>:
    8064:	e92d4010 	push	{r4, lr}
    8068:	e59f003c 	ldr	r0, [pc, #60]	; 80ac <main+0x48>
    806c:	eb000083 	bl	8280 <CKernel::Initialize()>
    8070:	e2504000 	subs	r4, r0, #0
    8074:	0a00000a 	beq	80a4 <main+0x40>
    8078:	e59f002c 	ldr	r0, [pc, #44]	; 80ac <main+0x48>
    807c:	eb000182 	bl	868c <CKernel::Run()>
    8080:	e3500002 	cmp	r0, #2
    8084:	0a000003 	beq	8098 <main+0x34>
    8088:	eb00b107 	bl	344ac <halt>
    808c:	e3a04000 	mov	r4, #0
    8090:	e1a00004 	mov	r0, r4
    8094:	e8bd8010 	pop	{r4, pc}
    8098:	eb00b106 	bl	344b8 <reboot>
    809c:	e3a04001 	mov	r4, #1
    80a0:	eafffffa 	b	8090 <main+0x2c>
    80a4:	eb00b100 	bl	344ac <halt>
    80a8:	eafffff8 	b	8090 <main+0x2c>
    80ac:	00059100 	.word	0x00059100

000080b0 <_GLOBAL__sub_I_Kernel>:
    80b0:	e92d4010 	push	{r4, lr}
    80b4:	e59f4018 	ldr	r4, [pc, #24]	; 80d4 <_GLOBAL__sub_I_Kernel+0x24>
    80b8:	e1a00004 	mov	r0, r4
    80bc:	eb000007 	bl	80e0 <CKernel::CKernel()>
    80c0:	e1a00004 	mov	r0, r4
    80c4:	e8bd4010 	pop	{r4, lr}
    80c8:	e59f2008 	ldr	r2, [pc, #8]	; 80d8 <_GLOBAL__sub_I_Kernel+0x28>
    80cc:	e59f1008 	ldr	r1, [pc, #8]	; 80dc <_GLOBAL__sub_I_Kernel+0x2c>
    80d0:	ea00b0f4 	b	344a8 <__aeabi_atexit>
    80d4:	00059100 	.word	0x00059100
    80d8:	0017af80 	.word	0x0017af80
    80dc:	000085e8 	.word	0x000085e8

000080e0 <CKernel::CKernel()>:
    80e0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    80e4:	e1a04000 	mov	r4, r0
    80e8:	e3a01001 	mov	r1, #1
    80ec:	e2808010 	add	r8, r0, #16
    80f0:	eb00b051 	bl	3423c <CMemorySystem::CMemorySystem(int)>
    80f4:	e1a00008 	mov	r0, r8
    80f8:	eb00ab72 	bl	32ec8 <CActLED::CActLED()>
    80fc:	e284001c 	add	r0, r4, #28
    8100:	eb00b5ad 	bl	357bc <CKernelOptions::CKernelOptions()>
    8104:	e2846e86 	add	r6, r4, #2144	; 0x860
    8108:	e2840e85 	add	r0, r4, #2128	; 0x850
    810c:	e2866004 	add	r6, r6, #4
    8110:	e280000c 	add	r0, r0, #12
    8114:	eb00bc4c 	bl	3724c <CDeviceNameService::CDeviceNameService()>
    8118:	e3a03000 	mov	r3, #0
    811c:	e1a00006 	mov	r0, r6
    8120:	e3a020f0 	mov	r2, #240	; 0xf0
    8124:	e3a01d05 	mov	r1, #320	; 0x140
    8128:	eb00b763 	bl	35ebc <CScreenDevice::CScreenDevice(unsigned int, unsigned int, int)>
    812c:	e3a02000 	mov	r2, #0
    8130:	e2840d23 	add	r0, r4, #2240	; 0x8c0
    8134:	e1a01002 	mov	r1, r2
    8138:	e2845d66 	add	r5, r4, #6528	; 0x1980
    813c:	e2800004 	add	r0, r0, #4
    8140:	eb00be79 	bl	37b2c <CSerialDevice::CSerialDevice(CInterruptSystem*, int)>
    8144:	e2857018 	add	r7, r5, #24
    8148:	e2850014 	add	r0, r5, #20
    814c:	e2845d6f 	add	r5, r4, #7104	; 0x1bc0
    8150:	eb00c437 	bl	39234 <CExceptionHandler::CExceptionHandler()>
    8154:	e2855018 	add	r5, r5, #24
    8158:	e1a00007 	mov	r0, r7
    815c:	eb00c516 	bl	395bc <CInterruptSystem::CInterruptSystem()>
    8160:	e2849b07 	add	r9, r4, #7168	; 0x1c00
    8164:	e1a01007 	mov	r1, r7
    8168:	e1a00005 	mov	r0, r5
    816c:	eb00b114 	bl	345c4 <CTimer::CTimer(CInterruptSystem*)>
    8170:	e1a02005 	mov	r2, r5
    8174:	e1a00009 	mov	r0, r9
    8178:	e3a01000 	mov	r1, #0
    817c:	eb00bcdd 	bl	374f8 <CLogger::CLogger(unsigned int, CTimer*)>
    8180:	e1a02005 	mov	r2, r5
    8184:	e1a01007 	mov	r1, r7
    8188:	e289001c 	add	r0, r9, #28
    818c:	eb007937 	bl	26670 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)>
    8190:	e2840d73 	add	r0, r4, #7360	; 0x1cc0
    8194:	e1a01007 	mov	r1, r7
    8198:	e2800008 	add	r0, r0, #8
    819c:	eb005f14 	bl	1fdf4 <CPWMSound::CPWMSound(CInterruptSystem*)>
    81a0:	e2840d75 	add	r0, r4, #7488	; 0x1d40
    81a4:	e1a01006 	mov	r1, r6
    81a8:	e2800034 	add	r0, r0, #52	; 0x34
    81ac:	eb007815 	bl	26208 <CUGUI::CUGUI(CScreenDevice*)>
    81b0:	e3a02000 	mov	r2, #0
    81b4:	e2843a01 	add	r3, r4, #4096	; 0x1000
    81b8:	e2840d77 	add	r0, r4, #7616	; 0x1dc0
    81bc:	e1a01005 	mov	r1, r5
    81c0:	e5c32de0 	strb	r2, [r3, #3552]	; 0xde0
    81c4:	e2800028 	add	r0, r0, #40	; 0x28
    81c8:	eb005d97 	bl	1f82c <CAY8910::CAY8910(CTimer*)>
    81cc:	e1a00008 	mov	r0, r8
    81d0:	e3a03f7d 	mov	r3, #500	; 0x1f4
    81d4:	e3a020c8 	mov	r2, #200	; 0xc8
    81d8:	e3a01005 	mov	r1, #5
    81dc:	eb00ab81 	bl	32fe8 <CActLED::Blink(unsigned int, unsigned int, unsigned int)>
    81e0:	e59f3008 	ldr	r3, [pc, #8]	; 81f0 <CKernel::CKernel()+0x110>
    81e4:	e1a00004 	mov	r0, r4
    81e8:	e5834000 	str	r4, [r3]
    81ec:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    81f0:	0005af60 	.word	0x0005af60

000081f4 <CKernel::reset()>:
    81f4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    81f8:	e1a06000 	mov	r6, r0
    81fc:	e3a05000 	mov	r5, #0
    8200:	e59f4070 	ldr	r4, [pc, #112]	; 8278 <CKernel::reset()+0x84>
    8204:	e2843a02 	add	r3, r4, #8192	; 0x2000
    8208:	e4c45001 	strb	r5, [r4], #1
    820c:	e1540003 	cmp	r4, r3
    8210:	1afffffc 	bne	8208 <CKernel::reset()+0x14>
    8214:	e3e03000 	mvn	r3, #0
    8218:	e59f705c 	ldr	r7, [pc, #92]	; 827c <CKernel::reset()+0x88>
    821c:	e2860e86 	add	r0, r6, #2144	; 0x860
    8220:	e2800004 	add	r0, r0, #4
    8224:	e5873004 	str	r3, [r7, #4]
    8228:	e5873008 	str	r3, [r7, #8]
    822c:	e1c730bc 	strh	r3, [r7, #12]
    8230:	eb00b740 	bl	35f38 <CScreenDevice::GetDepth() const>
    8234:	e3a09001 	mov	r9, #1
    8238:	e5870010 	str	r0, [r7, #16]
    823c:	e2860d77 	add	r0, r6, #7616	; 0x1dc0
    8240:	e2848902 	add	r8, r4, #32768	; 0x8000
    8244:	e284103c 	add	r1, r4, #60	; 0x3c
    8248:	e2800028 	add	r0, r0, #40	; 0x28
    824c:	e3a02000 	mov	r2, #0
    8250:	e2866a01 	add	r6, r6, #4096	; 0x1000
    8254:	e5c45004 	strb	r5, [r4, #4]
    8258:	e5849000 	str	r9, [r4]
    825c:	e58890c0 	str	r9, [r8, #192]	; 0xc0
    8260:	e58850b8 	str	r5, [r8, #184]	; 0xb8
    8264:	eb005be5 	bl	1f200 <CAY8910::Reset8910(AY8910*, int)>
    8268:	e5869de4 	str	r9, [r6, #3556]	; 0xde4
    826c:	e5875014 	str	r5, [r7, #20]
    8270:	e58850c8 	str	r5, [r8, #200]	; 0xc8
    8274:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8278:	0006cf80 	.word	0x0006cf80
    827c:	0005af60 	.word	0x0005af60

00008280 <CKernel::Initialize()>:
    8280:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    8284:	e2804e86 	add	r4, r0, #2144	; 0x860
    8288:	e2844004 	add	r4, r4, #4
    828c:	e1a06000 	mov	r6, r0
    8290:	e1a00004 	mov	r0, r4
    8294:	eb00baa6 	bl	36d34 <CScreenDevice::Initialize()>
    8298:	e1a05000 	mov	r5, r0
    829c:	e3a024ff 	mov	r2, #-16777216	; 0xff000000
    82a0:	e1a00004 	mov	r0, r4
    82a4:	e3a01000 	mov	r1, #0
    82a8:	eb00b72a 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    82ac:	e1a00004 	mov	r0, r4
    82b0:	e59f21d8 	ldr	r2, [pc, #472]	; 8490 <CKernel::Initialize()+0x210>
    82b4:	e3a01001 	mov	r1, #1
    82b8:	eb00b726 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    82bc:	e1a00004 	mov	r0, r4
    82c0:	e3e028ff 	mvn	r2, #16711680	; 0xff0000
    82c4:	e3a01002 	mov	r1, #2
    82c8:	eb00b722 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    82cc:	e1a00004 	mov	r0, r4
    82d0:	e59f21bc 	ldr	r2, [pc, #444]	; 8494 <CKernel::Initialize()+0x214>
    82d4:	e3a01003 	mov	r1, #3
    82d8:	eb00b71e 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    82dc:	e1a00004 	mov	r0, r4
    82e0:	e59f21b0 	ldr	r2, [pc, #432]	; 8498 <CKernel::Initialize()+0x218>
    82e4:	e3a01004 	mov	r1, #4
    82e8:	eb00b71a 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    82ec:	e1a00004 	mov	r0, r4
    82f0:	e3e02000 	mvn	r2, #0
    82f4:	e3a01005 	mov	r1, #5
    82f8:	eb00b716 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    82fc:	e1a00004 	mov	r0, r4
    8300:	e59f2194 	ldr	r2, [pc, #404]	; 849c <CKernel::Initialize()+0x21c>
    8304:	e3a01006 	mov	r1, #6
    8308:	eb00b712 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    830c:	e1a00004 	mov	r0, r4
    8310:	e3e02ce3 	mvn	r2, #58112	; 0xe300
    8314:	e3a01007 	mov	r1, #7
    8318:	eb00b70e 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    831c:	e1a00004 	mov	r0, r4
    8320:	e59f2178 	ldr	r2, [pc, #376]	; 84a0 <CKernel::Initialize()+0x220>
    8324:	e3a01008 	mov	r1, #8
    8328:	eb00b70a 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    832c:	e1a00004 	mov	r0, r4
    8330:	e59f2158 	ldr	r2, [pc, #344]	; 8490 <CKernel::Initialize()+0x210>
    8334:	e3a01009 	mov	r1, #9
    8338:	eb00b706 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    833c:	e1a00004 	mov	r0, r4
    8340:	e3e02000 	mvn	r2, #0
    8344:	e3a0100a 	mov	r1, #10
    8348:	eb00b702 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    834c:	e1a00004 	mov	r0, r4
    8350:	e59f214c 	ldr	r2, [pc, #332]	; 84a4 <CKernel::Initialize()+0x224>
    8354:	e3a0100b 	mov	r1, #11
    8358:	eb00b6fe 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    835c:	e1a00004 	mov	r0, r4
    8360:	e59f2128 	ldr	r2, [pc, #296]	; 8490 <CKernel::Initialize()+0x210>
    8364:	e3a0100c 	mov	r1, #12
    8368:	eb00b6fa 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    836c:	e1a00004 	mov	r0, r4
    8370:	e59f2130 	ldr	r2, [pc, #304]	; 84a8 <CKernel::Initialize()+0x228>
    8374:	e3a0100d 	mov	r1, #13
    8378:	eb00b6f6 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    837c:	e1a00004 	mov	r0, r4
    8380:	e59f2118 	ldr	r2, [pc, #280]	; 84a0 <CKernel::Initialize()+0x220>
    8384:	e3a0100e 	mov	r1, #14
    8388:	eb00b6f2 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    838c:	e1a00004 	mov	r0, r4
    8390:	e3e02000 	mvn	r2, #0
    8394:	e3a010ff 	mov	r1, #255	; 0xff
    8398:	eb00b6ee 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    839c:	e1a00004 	mov	r0, r4
    83a0:	e59f2104 	ldr	r2, [pc, #260]	; 84ac <CKernel::Initialize()+0x22c>
    83a4:	e3a01046 	mov	r1, #70	; 0x46
    83a8:	eb00b6ea 	bl	35f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>
    83ac:	e1a00004 	mov	r0, r4
    83b0:	eb00b6ea 	bl	35f60 <CScreenDevice::UpdatePalette()>
    83b4:	e3550000 	cmp	r5, #0
    83b8:	1a000010 	bne	8400 <CKernel::Initialize()+0x180>
    83bc:	e3a07000 	mov	r7, #0
    83c0:	e3a0e000 	mov	lr, #0
    83c4:	e59f50e4 	ldr	r5, [pc, #228]	; 84b0 <CKernel::Initialize()+0x230>
    83c8:	e59f40e4 	ldr	r4, [pc, #228]	; 84b4 <CKernel::Initialize()+0x234>
    83cc:	e1a03005 	mov	r3, r5
    83d0:	e1a0220e 	lsl	r2, lr, #4
    83d4:	e1b3c0b2 	ldrh	ip, [r3, r2]!
    83d8:	e28ee001 	add	lr, lr, #1
    83dc:	e35c0000 	cmp	ip, #0
    83e0:	e084c20c 	add	ip, r4, ip, lsl #4
    83e4:	e893000f 	ldm	r3, {r0, r1, r2, r3}
    83e8:	e88c000f 	stm	ip, {r0, r1, r2, r3}
    83ec:	1afffff6 	bne	83cc <CKernel::Initialize()+0x14c>
    83f0:	e1a00006 	mov	r0, r6
    83f4:	ebffff7e 	bl	81f4 <CKernel::reset()>
    83f8:	e1a00007 	mov	r0, r7
    83fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    8400:	e2864d23 	add	r4, r6, #2240	; 0x8c0
    8404:	e2844004 	add	r4, r4, #4
    8408:	e1a00004 	mov	r0, r4
    840c:	e59f10a4 	ldr	r1, [pc, #164]	; 84b8 <CKernel::Initialize()+0x238>
    8410:	eb00bdf4 	bl	37be8 <CSerialDevice::Initialize(unsigned int)>
    8414:	e3500000 	cmp	r0, #0
    8418:	0affffe7 	beq	83bc <CKernel::Initialize()+0x13c>
    841c:	e286001c 	add	r0, r6, #28
    8420:	eb00b4b5 	bl	356fc <CKernelOptions::GetLogDevice() const>
    8424:	e1a01000 	mov	r1, r0
    8428:	e2860e85 	add	r0, r6, #2128	; 0x850
    842c:	e3a02000 	mov	r2, #0
    8430:	e280000c 	add	r0, r0, #12
    8434:	eb00bbdf 	bl	373b8 <CDeviceNameService::GetDevice(char const*, int)>
    8438:	e2865b07 	add	r5, r6, #7168	; 0x1c00
    843c:	e3500000 	cmp	r0, #0
    8440:	11a01000 	movne	r1, r0
    8444:	01a01004 	moveq	r1, r4
    8448:	e1a00005 	mov	r0, r5
    844c:	eb00bd33 	bl	37920 <CLogger::Initialize(CDevice*)>
    8450:	e3500000 	cmp	r0, #0
    8454:	0affffd8 	beq	83bc <CKernel::Initialize()+0x13c>
    8458:	e2860d66 	add	r0, r6, #6528	; 0x1980
    845c:	e2800018 	add	r0, r0, #24
    8460:	eb00c468 	bl	39608 <CInterruptSystem::Initialize()>
    8464:	e3500000 	cmp	r0, #0
    8468:	0affffd3 	beq	83bc <CKernel::Initialize()+0x13c>
    846c:	e2860d6f 	add	r0, r6, #7104	; 0x1bc0
    8470:	e2800018 	add	r0, r0, #24
    8474:	eb00b2ce 	bl	34fb4 <CTimer::Initialize()>
    8478:	e3500000 	cmp	r0, #0
    847c:	0affffce 	beq	83bc <CKernel::Initialize()+0x13c>
    8480:	e285001c 	add	r0, r5, #28
    8484:	eb008070 	bl	2864c <CDWHCIDevice::Initialize()>
    8488:	e1a07000 	mov	r7, r0
    848c:	eaffffcb 	b	83c0 <CKernel::Initialize()+0x140>
    8490:	ff00ff07 	.word	0xff00ff07
    8494:	ffff083b 	.word	0xffff083b
    8498:	ff3b00cc 	.word	0xff3b00cc
    849c:	ff99e307 	.word	0xff99e307
    84a0:	ff0081ff 	.word	0xff0081ff
    84a4:	ff003f00 	.word	0xff003f00
    84a8:	ff000091 	.word	0xff000091
    84ac:	ff0000ff 	.word	0xff0000ff
    84b0:	0004ffc4 	.word	0x0004ffc4
    84b4:	0005af7c 	.word	0x0005af7c
    84b8:	0001c200 	.word	0x0001c200

000084bc <CKernel::rotate(int, int)>:
    84bc:	e2800e86 	add	r0, r0, #2144	; 0x860
    84c0:	e2800004 	add	r0, r0, #4
    84c4:	ea00ba95 	b	36f20 <CScreenDevice::Rotor(unsigned int, unsigned int)>

000084c8 <CKernel::dspcallback(unsigned int*, int)>:
    84c8:	e92d4010 	push	{r4, lr}
    84cc:	e1a04002 	mov	r4, r2
    84d0:	e2800d77 	add	r0, r0, #7616	; 0x1dc0
    84d4:	e2800028 	add	r0, r0, #40	; 0x28
    84d8:	eb005d40 	bl	1f9e0 <CAY8910::DSPCallBack(unsigned int*, int)>
    84dc:	e1a00004 	mov	r0, r4
    84e0:	e8bd8010 	pop	{r4, pc}

000084e4 <ReadVal()>:
    84e4:	e92d4070 	push	{r4, r5, r6, lr}
    84e8:	e59f6050 	ldr	r6, [pc, #80]	; 8540 <ReadVal()+0x5c>
    84ec:	e59f0050 	ldr	r0, [pc, #80]	; 8544 <ReadVal()+0x60>
    84f0:	e5964014 	ldr	r4, [r6, #20]
    84f4:	e0c10094 	smull	r0, r1, r4, r0
    84f8:	e1a02fc4 	asr	r2, r4, #31
    84fc:	e06212c1 	rsb	r1, r2, r1, asr #5
    8500:	e0811101 	add	r1, r1, r1, lsl #2
    8504:	e0811101 	add	r1, r1, r1, lsl #2
    8508:	e0541101 	subs	r1, r4, r1, lsl #2
    850c:	1a000006 	bne	852c <ReadVal()+0x48>
    8510:	e59f3030 	ldr	r3, [pc, #48]	; 8548 <ReadVal()+0x64>
    8514:	e5960000 	ldr	r0, [r6]
    8518:	e0c54394 	smull	r4, r5, r4, r3
    851c:	e2800e86 	add	r0, r0, #2144	; 0x860
    8520:	e0622145 	rsb	r2, r2, r5, asr #2
    8524:	e2800004 	add	r0, r0, #4
    8528:	eb00ba7c 	bl	36f20 <CScreenDevice::Rotor(unsigned int, unsigned int)>
    852c:	e3a00000 	mov	r0, #0
    8530:	e59f3014 	ldr	r3, [pc, #20]	; 854c <ReadVal()+0x68>
    8534:	e5860014 	str	r0, [r6, #20]
    8538:	e58300dc 	str	r0, [r3, #220]	; 0xdc
    853c:	e8bd8070 	pop	{r4, r5, r6, pc}
    8540:	0005af60 	.word	0x0005af60
    8544:	51eb851f 	.word	0x51eb851f
    8548:	66666667 	.word	0x66666667
    854c:	00076f80 	.word	0x00076f80

00008550 <CasWrite(CassetteTape*, int)>:
    8550:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8554:	e59fe05c 	ldr	lr, [pc, #92]	; 85b8 <CasWrite(CassetteTape*, int)+0x68>
    8558:	e5903010 	ldr	r3, [r0, #16]
    855c:	e59ec098 	ldr	ip, [lr, #152]	; 0x98
    8560:	e04c3003 	sub	r3, ip, r3
    8564:	e1a022a3 	lsr	r2, r3, #5
    8568:	e3520064 	cmp	r2, #100	; 0x64
    856c:	83a03000 	movhi	r3, #0
    8570:	8580301c 	strhi	r3, [r0, #28]
    8574:	85803020 	strhi	r3, [r0, #32]
    8578:	e5903028 	ldr	r3, [r0, #40]	; 0x28
    857c:	859ec098 	ldrhi	ip, [lr, #152]	; 0x98
    8580:	e3530001 	cmp	r3, #1
    8584:	03510000 	cmpeq	r1, #0
    8588:	03a03001 	moveq	r3, #1
    858c:	13a03000 	movne	r3, #0
    8590:	e2233001 	eor	r3, r3, #1
    8594:	e3520d0e 	cmp	r2, #896	; 0x380
    8598:	83833001 	orrhi	r3, r3, #1
    859c:	e3530000 	cmp	r3, #0
    85a0:	0590301c 	ldreq	r3, [r0, #28]
    85a4:	e580c010 	str	ip, [r0, #16]
    85a8:	02833001 	addeq	r3, r3, #1
    85ac:	0580301c 	streq	r3, [r0, #28]
    85b0:	e5801028 	str	r1, [r0, #40]	; 0x28
    85b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    85b8:	00076f80 	.word	0x00076f80

000085bc <LoopZ80>:
    85bc:	e3a00000 	mov	r0, #0
    85c0:	e12fff1e 	bx	lr

000085c4 <PatchZ80>:
    85c4:	e12fff1e 	bx	lr

000085c8 <memset(unsigned char*, int, int)>:
    85c8:	e3510000 	cmp	r1, #0
    85cc:	d12fff1e 	bxle	lr
    85d0:	e6ef2072 	uxtb	r2, r2
    85d4:	e0801001 	add	r1, r0, r1
    85d8:	e4c02001 	strb	r2, [r0], #1
    85dc:	e1510000 	cmp	r1, r0
    85e0:	1afffffc 	bne	85d8 <memset(unsigned char*, int, int)+0x10>
    85e4:	e12fff1e 	bx	lr

000085e8 <CKernel::~CKernel()>:
    85e8:	e92d4070 	push	{r4, r5, r6, lr}
    85ec:	e1a04000 	mov	r4, r0
    85f0:	e2800d77 	add	r0, r0, #7616	; 0x1dc0
    85f4:	e2800028 	add	r0, r0, #40	; 0x28
    85f8:	eb00ca3d 	bl	3aef4 <CBcmRandomNumberGenerator::~CBcmRandomNumberGenerator()>
    85fc:	e2840d75 	add	r0, r4, #7488	; 0x1d40
    8600:	e2800034 	add	r0, r0, #52	; 0x34
    8604:	eb007713 	bl	26258 <CUGUI::~CUGUI()>
    8608:	e2840d73 	add	r0, r4, #7360	; 0x1cc0
    860c:	e2845b07 	add	r5, r4, #7168	; 0x1c00
    8610:	e2800008 	add	r0, r0, #8
    8614:	eb005dbe 	bl	1fd14 <CPWMSound::~CPWMSound()>
    8618:	e285001c 	add	r0, r5, #28
    861c:	eb0077df 	bl	265a0 <CDWHCIDevice::~CDWHCIDevice()>
    8620:	e1a00005 	mov	r0, r5
    8624:	eb00bbc5 	bl	37540 <CLogger::~CLogger()>
    8628:	e2840d6f 	add	r0, r4, #7104	; 0x1bc0
    862c:	e2845d66 	add	r5, r4, #6528	; 0x1980
    8630:	e2800018 	add	r0, r0, #24
    8634:	eb00b002 	bl	34644 <CTimer::~CTimer()>
    8638:	e2850018 	add	r0, r5, #24
    863c:	eb00c3ec 	bl	395f4 <CInterruptSystem::~CInterruptSystem()>
    8640:	e2850014 	add	r0, r5, #20
    8644:	eb00c31d 	bl	392c0 <CExceptionHandler::~CExceptionHandler()>
    8648:	e2840d23 	add	r0, r4, #2240	; 0x8c0
    864c:	e2800004 	add	r0, r0, #4
    8650:	eb00bef4 	bl	38228 <CSerialDevice::~CSerialDevice()>
    8654:	e2840e86 	add	r0, r4, #2144	; 0x860
    8658:	e2800004 	add	r0, r0, #4
    865c:	eb00b5bf 	bl	35d60 <CScreenDevice::~CScreenDevice()>
    8660:	e2840e85 	add	r0, r4, #2128	; 0x850
    8664:	e280000c 	add	r0, r0, #12
    8668:	eb00bb0a 	bl	37298 <CDeviceNameService::~CDeviceNameService()>
    866c:	e284001c 	add	r0, r4, #28
    8670:	eb00b418 	bl	356d8 <CKernelOptions::~CKernelOptions()>
    8674:	e2840010 	add	r0, r4, #16
    8678:	eb00a9ed 	bl	32e34 <CActLED::~CActLED()>
    867c:	e1a00004 	mov	r0, r4
    8680:	eb00ae3c 	bl	33f78 <CMemorySystem::~CMemorySystem()>
    8684:	e1a00004 	mov	r0, r4
    8688:	e8bd8070 	pop	{r4, r5, r6, pc}

0000868c <CKernel::Run()>:
    868c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8690:	e1a04000 	mov	r4, r0
    8694:	e2800e85 	add	r0, r0, #2128	; 0x850
    8698:	e24dd01c 	sub	sp, sp, #28
    869c:	e280000c 	add	r0, r0, #12
    86a0:	e3a02000 	mov	r2, #0
    86a4:	e59f11e4 	ldr	r1, [pc, #484]	; 8890 <CKernel::Run()+0x204>
    86a8:	eb00bb42 	bl	373b8 <CDeviceNameService::GetDevice(char const*, int)>
    86ac:	e2845e86 	add	r5, r4, #2144	; 0x860
    86b0:	e3500000 	cmp	r0, #0
    86b4:	e2855004 	add	r5, r5, #4
    86b8:	e2846010 	add	r6, r4, #16
    86bc:	0a00006b 	beq	8870 <CKernel::Run()+0x1e4>
    86c0:	e59f11cc 	ldr	r1, [pc, #460]	; 8894 <CKernel::Run()+0x208>
    86c4:	eb009226 	bl	2cf64 <CUSBKeyboardDevice::RegisterKeyStatusHandlerRaw(void (*)(unsigned char, unsigned char const*))>
    86c8:	e3a0200f 	mov	r2, #15
    86cc:	e59f11c4 	ldr	r1, [pc, #452]	; 8898 <CKernel::Run()+0x20c>
    86d0:	e1a00005 	mov	r0, r5
    86d4:	eb00b96b 	bl	36c88 <CScreenDevice::Write(void const*, unsigned int)>
    86d8:	e3a03f7d 	mov	r3, #500	; 0x1f4
    86dc:	e3a020c8 	mov	r2, #200	; 0xc8
    86e0:	e3a01003 	mov	r1, #3
    86e4:	e1a00006 	mov	r0, r6
    86e8:	eb00aa3e 	bl	32fe8 <CActLED::Blink(unsigned int, unsigned int, unsigned int)>
    86ec:	e28d0008 	add	r0, sp, #8
    86f0:	eb00bf37 	bl	383d4 <CString::CString()>
    86f4:	e2847a01 	add	r7, r4, #4096	; 0x1000
    86f8:	e2840d73 	add	r0, r4, #7360	; 0x1cc0
    86fc:	e5874d54 	str	r4, [r7, #3412]	; 0xd54
    8700:	e2800008 	add	r0, r0, #8
    8704:	eb00c64b 	bl	3a038 <CPWMSoundBaseDevice::Start()>
    8708:	e1a00005 	mov	r0, r5
    870c:	eb00b60d 	bl	35f48 <CScreenDevice::GetBuffer() const>
    8710:	e3a030c0 	mov	r3, #192	; 0xc0
    8714:	e3a02c01 	mov	r2, #256	; 0x100
    8718:	e59f117c 	ldr	r1, [pc, #380]	; 889c <CKernel::Run()+0x210>
    871c:	eb005a3d 	bl	1f018 <InitMC6847>
    8720:	e59f3178 	ldr	r3, [pc, #376]	; 88a0 <CKernel::Run()+0x214>
    8724:	e3a02001 	mov	r2, #1
    8728:	e2836a12 	add	r6, r3, #73728	; 0x12000
    872c:	e1a00006 	mov	r0, r6
    8730:	e2841d77 	add	r1, r4, #7616	; 0x1dc0
    8734:	e3a08000 	mov	r8, #0
    8738:	e1a04000 	mov	r4, r0
    873c:	e3a0aefa 	mov	sl, #4000	; 0xfa0
    8740:	e2811028 	add	r1, r1, #40	; 0x28
    8744:	e58d1000 	str	r1, [sp]
    8748:	e59f5154 	ldr	r5, [pc, #340]	; 88a4 <CKernel::Run()+0x218>
    874c:	e280103c 	add	r1, r0, #60	; 0x3c
    8750:	e2866008 	add	r6, r6, #8
    8754:	e58d1004 	str	r1, [sp, #4]
    8758:	e5872de4 	str	r2, [r7, #3556]	; 0xde4
    875c:	e283ba1a 	add	fp, r3, #106496	; 0x1a000
    8760:	e59f3138 	ldr	r3, [pc, #312]	; 88a0 <CKernel::Run()+0x214>
    8764:	e2839a1a 	add	r9, r3, #106496	; 0x1a000
    8768:	ea00000c 	b	87a0 <CKernel::Run()+0x114>
    876c:	e5943028 	ldr	r3, [r4, #40]	; 0x28
    8770:	e1a00006 	mov	r0, r6
    8774:	e5853018 	str	r3, [r5, #24]
    8778:	eb00377a 	bl	16568 <ExecZ80>
    877c:	e5941028 	ldr	r1, [r4, #40]	; 0x28
    8780:	e5953018 	ldr	r3, [r5, #24]
    8784:	e59b2098 	ldr	r2, [fp, #152]	; 0x98
    8788:	e0433001 	sub	r3, r3, r1
    878c:	e0833002 	add	r3, r3, r2
    8790:	e3510000 	cmp	r1, #0
    8794:	e58b3098 	str	r3, [fp, #152]	; 0x98
    8798:	da00000a 	ble	87c8 <CKernel::Run()+0x13c>
    879c:	e5972de4 	ldr	r2, [r7, #3556]	; 0xde4
    87a0:	e3520000 	cmp	r2, #0
    87a4:	0afffff0 	beq	876c <CKernel::Run()+0xe0>
    87a8:	e1a00006 	mov	r0, r6
    87ac:	eb00375d 	bl	16528 <ResetZ80>
    87b0:	e584a028 	str	sl, [r4, #40]	; 0x28
    87b4:	eb00b006 	bl	347d4 <CTimer::GetClockTicks()>
    87b8:	e3a03000 	mov	r3, #0
    87bc:	e5893098 	str	r3, [r9, #152]	; 0x98
    87c0:	e5873de4 	str	r3, [r7, #3556]	; 0xde4
    87c4:	eaffffe8 	b	876c <CKernel::Run()+0xe0>
    87c8:	e59b3094 	ldr	r3, [fp, #148]	; 0x94
    87cc:	e2811efa 	add	r1, r1, #4000	; 0xfa0
    87d0:	e2888001 	add	r8, r8, #1
    87d4:	e2833001 	add	r3, r3, #1
    87d8:	e5841028 	str	r1, [r4, #40]	; 0x28
    87dc:	e218100f 	ands	r1, r8, #15
    87e0:	e58b3094 	str	r3, [fp, #148]	; 0x94
    87e4:	1a000002 	bne	87f4 <CKernel::Run()+0x168>
    87e8:	e5d43020 	ldrb	r3, [r4, #32]
    87ec:	e3130020 	tst	r3, #32
    87f0:	1a000019 	bne	885c <CKernel::Run()+0x1d0>
    87f4:	e59f30ac 	ldr	r3, [pc, #172]	; 88a8 <CKernel::Run()+0x21c>
    87f8:	e0832398 	umull	r2, r3, r8, r3
    87fc:	e1a031a3 	lsr	r3, r3, #3
    8800:	e0833283 	add	r3, r3, r3, lsl #5
    8804:	e1580003 	cmp	r8, r3
    8808:	0a00000e 	beq	8848 <CKernel::Run()+0x1bc>
    880c:	e1cd00d0 	ldrd	r0, [sp]
    8810:	e3a02001 	mov	r2, #1
    8814:	eb005ba5 	bl	1f6b0 <CAY8910::Loop8910(AY8910*, int)>
    8818:	eb00afed 	bl	347d4 <CTimer::GetClockTicks()>
    881c:	eb00afec 	bl	347d4 <CTimer::GetClockTicks()>
    8820:	e59f3084 	ldr	r3, [pc, #132]	; 88ac <CKernel::Run()+0x220>
    8824:	e0832398 	umull	r2, r3, r8, r3
    8828:	e1a03323 	lsr	r3, r3, #6
    882c:	e0632283 	rsb	r2, r3, r3, lsl #5
    8830:	e0833102 	add	r3, r3, r2, lsl #2
    8834:	e1580183 	cmp	r8, r3, lsl #3
    8838:	1a000000 	bne	8840 <CKernel::Run()+0x1b4>
    883c:	eb00afe4 	bl	347d4 <CTimer::GetClockTicks()>
    8840:	e5972de4 	ldr	r2, [r7, #3556]	; 0xde4
    8844:	eaffffc5 	b	8760 <CKernel::Run()+0xd4>
    8848:	e5d40004 	ldrb	r0, [r4, #4]
    884c:	eb0058ab 	bl	1eb00 <Update6847>
    8850:	e59f0058 	ldr	r0, [pc, #88]	; 88b0 <CKernel::Run()+0x224>
    8854:	eb00b1ff 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
    8858:	eaffffeb 	b	880c <CKernel::Run()+0x180>
    885c:	e3833003 	orr	r3, r3, #3
    8860:	e1a00006 	mov	r0, r6
    8864:	e5c43020 	strb	r3, [r4, #32]
    8868:	eb0046ce 	bl	1a3a8 <IntZ80>
    886c:	eaffffe0 	b	87f4 <CKernel::Run()+0x168>
    8870:	e3a02001 	mov	r2, #1
    8874:	e59f1038 	ldr	r1, [pc, #56]	; 88b4 <CKernel::Run()+0x228>
    8878:	e59f3038 	ldr	r3, [pc, #56]	; 88b8 <CKernel::Run()+0x22c>
    887c:	e2840b07 	add	r0, r4, #7168	; 0x1c00
    8880:	eb00bc1a 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
    8884:	e3a02013 	mov	r2, #19
    8888:	e59f102c 	ldr	r1, [pc, #44]	; 88bc <CKernel::Run()+0x230>
    888c:	eaffff8f 	b	86d0 <CKernel::Run()+0x44>
    8890:	0003c100 	.word	0x0003c100
    8894:	000088c0 	.word	0x000088c0
    8898:	0003c130 	.word	0x0003c130
    889c:	0006cf80 	.word	0x0006cf80
    88a0:	0005cf80 	.word	0x0005cf80
    88a4:	0005af60 	.word	0x0005af60
    88a8:	3e0f83e1 	.word	0x3e0f83e1
    88ac:	10624dd3 	.word	0x10624dd3
    88b0:	0000c350 	.word	0x0000c350
    88b4:	0003c0f8 	.word	0x0003c0f8
    88b8:	0003c108 	.word	0x0003c108
    88bc:	0003c11c 	.word	0x0003c11c

000088c0 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)>:
    88c0:	e92d4070 	push	{r4, r5, r6, lr}
    88c4:	e1a06000 	mov	r6, r0
    88c8:	e1a05001 	mov	r5, r1
    88cc:	e24dd010 	sub	sp, sp, #16
    88d0:	e1a0000d 	mov	r0, sp
    88d4:	eb00bebe 	bl	383d4 <CString::CString()>
    88d8:	e1a03005 	mov	r3, r5
    88dc:	e1a02006 	mov	r2, r6
    88e0:	e1a0000d 	mov	r0, sp
    88e4:	e59f10e4 	ldr	r1, [pc, #228]	; 89d0 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x110>
    88e8:	eb00c241 	bl	391f4 <CString::Format(char const*, ...)>
    88ec:	e3e03000 	mvn	r3, #0
    88f0:	e59f40dc 	ldr	r4, [pc, #220]	; 89d4 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x114>
    88f4:	e3560000 	cmp	r6, #0
    88f8:	e5843004 	str	r3, [r4, #4]
    88fc:	e5843008 	str	r3, [r4, #8]
    8900:	e1c430bc 	strh	r3, [r4, #12]
    8904:	0a000018 	beq	896c <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0xac>
    8908:	e3160011 	tst	r6, #17
    890c:	03a03000 	moveq	r3, #0
    8910:	13a03001 	movne	r3, #1
    8914:	e3160044 	tst	r6, #68	; 0x44
    8918:	03a03000 	moveq	r3, #0
    891c:	e3530000 	cmp	r3, #0
    8920:	1a000024 	bne	89b8 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0xf8>
    8924:	e3a03000 	mov	r3, #0
    8928:	e3a0c001 	mov	ip, #1
    892c:	e59f00a4 	ldr	r0, [pc, #164]	; 89d8 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x118>
    8930:	e1a02356 	asr	r2, r6, r3
    8934:	e3120001 	tst	r2, #1
    8938:	0a000008 	beq	8960 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0xa0>
    893c:	e1a0231c 	lsl	r2, ip, r3
    8940:	e3822c01 	orr	r2, r2, #256	; 0x100
    8944:	e0802202 	add	r2, r0, r2, lsl #4
    8948:	e5921004 	ldr	r1, [r2, #4]
    894c:	e5d2e008 	ldrb	lr, [r2, #8]
    8950:	e0842001 	add	r2, r4, r1
    8954:	e5d21004 	ldrb	r1, [r2, #4]
    8958:	e1c1100e 	bic	r1, r1, lr
    895c:	e5c21004 	strb	r1, [r2, #4]
    8960:	e2833001 	add	r3, r3, #1
    8964:	e3530008 	cmp	r3, #8
    8968:	1afffff0 	bne	8930 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x70>
    896c:	e59f1064 	ldr	r1, [pc, #100]	; 89d8 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x118>
    8970:	e2450001 	sub	r0, r5, #1
    8974:	e2855005 	add	r5, r5, #5
    8978:	e5f02001 	ldrb	r2, [r0, #1]!
    897c:	e3520000 	cmp	r2, #0
    8980:	0a000006 	beq	89a0 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0xe0>
    8984:	e0812202 	add	r2, r1, r2, lsl #4
    8988:	e592c004 	ldr	ip, [r2, #4]
    898c:	e5d23008 	ldrb	r3, [r2, #8]
    8990:	e084200c 	add	r2, r4, ip
    8994:	e5d2c004 	ldrb	ip, [r2, #4]
    8998:	e1ccc003 	bic	ip, ip, r3
    899c:	e5c2c004 	strb	ip, [r2, #4]
    89a0:	e1550000 	cmp	r5, r0
    89a4:	1afffff3 	bne	8978 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0xb8>
    89a8:	e1a0000d 	mov	r0, sp
    89ac:	eb00be55 	bl	38308 <CString::~CString()>
    89b0:	e28dd010 	add	sp, sp, #16
    89b4:	e8bd8070 	pop	{r4, r5, r6, pc}
    89b8:	e5d53000 	ldrb	r3, [r5]
    89bc:	e353004c 	cmp	r3, #76	; 0x4c
    89c0:	1affffd7 	bne	8924 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x64>
    89c4:	e5940000 	ldr	r0, [r4]
    89c8:	ebfffe09 	bl	81f4 <CKernel::reset()>
    89cc:	eaffffd4 	b	8924 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x64>
    89d0:	0003c140 	.word	0x0003c140
    89d4:	0005af60 	.word	0x0005af60
    89d8:	0005af7c 	.word	0x0005af7c

000089dc <CKernel::printf(char const*, ...)>:
    89dc:	e92d000f 	push	{r0, r1, r2, r3}
    89e0:	e92d4010 	push	{r4, lr}
    89e4:	e24dd018 	sub	sp, sp, #24
    89e8:	e28d0008 	add	r0, sp, #8
    89ec:	eb00be78 	bl	383d4 <CString::CString()>
    89f0:	e28d3024 	add	r3, sp, #36	; 0x24
    89f4:	e1a02003 	mov	r2, r3
    89f8:	e59d1020 	ldr	r1, [sp, #32]
    89fc:	e28d0008 	add	r0, sp, #8
    8a00:	e58d3004 	str	r3, [sp, #4]
    8a04:	eb00bfd1 	bl	38950 <CString::FormatV(char const*, std::__va_list)>
    8a08:	e59f3034 	ldr	r3, [pc, #52]	; 8a44 <CKernel::printf(char const*, ...)+0x68>
    8a0c:	e28d0008 	add	r0, sp, #8
    8a10:	e5934000 	ldr	r4, [r3]
    8a14:	eb00be84 	bl	3842c <CString::operator char const*() const>
    8a18:	e2844b07 	add	r4, r4, #7168	; 0x1c00
    8a1c:	e1a01000 	mov	r1, r0
    8a20:	e1a00004 	mov	r0, r4
    8a24:	eb00bad5 	bl	37580 <CLogger::Write(char const*)>
    8a28:	e28d0008 	add	r0, sp, #8
    8a2c:	eb00be35 	bl	38308 <CString::~CString()>
    8a30:	e3a00000 	mov	r0, #0
    8a34:	e28dd018 	add	sp, sp, #24
    8a38:	e8bd4010 	pop	{r4, lr}
    8a3c:	e28dd010 	add	sp, sp, #16
    8a40:	e12fff1e 	bx	lr
    8a44:	0005af60 	.word	0x0005af60

00008a48 <CasRead(CassetteTape*)>:
    8a48:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    8a4c:	e59f30bc 	ldr	r3, [pc, #188]	; 8b10 <CasRead(CassetteTape*)+0xc8>
    8a50:	e59f70bc 	ldr	r7, [pc, #188]	; 8b14 <CasRead(CassetteTape*)+0xcc>
    8a54:	e5932028 	ldr	r2, [r3, #40]	; 0x28
    8a58:	e5975018 	ldr	r5, [r7, #24]
    8a5c:	e2833902 	add	r3, r3, #32768	; 0x8000
    8a60:	e5933098 	ldr	r3, [r3, #152]	; 0x98
    8a64:	e0455002 	sub	r5, r5, r2
    8a68:	e5904010 	ldr	r4, [r0, #16]
    8a6c:	e0855003 	add	r5, r5, r3
    8a70:	e5903018 	ldr	r3, [r0, #24]
    8a74:	e0454004 	sub	r4, r5, r4
    8a78:	e1530004 	cmp	r3, r4
    8a7c:	e1a06000 	mov	r6, r0
    8a80:	da00000e 	ble	8ac0 <CasRead(CassetteTape*)+0x78>
    8a84:	e596300c 	ldr	r3, [r6, #12]
    8a88:	e3530000 	cmp	r3, #0
    8a8c:	0a000007 	beq	8ab0 <CasRead(CassetteTape*)+0x68>
    8a90:	e3530001 	cmp	r3, #1
    8a94:	1a000003 	bne	8aa8 <CasRead(CassetteTape*)+0x60>
    8a98:	e3540c07 	cmp	r4, #1792	; 0x700
    8a9c:	a3a00000 	movge	r0, #0
    8aa0:	b3a00001 	movlt	r0, #1
    8aa4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    8aa8:	e3a00000 	mov	r0, #0
    8aac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    8ab0:	e3540d0e 	cmp	r4, #896	; 0x380
    8ab4:	a3a00000 	movge	r0, #0
    8ab8:	b3a00001 	movlt	r0, #1
    8abc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    8ac0:	ebfffe87 	bl	84e4 <ReadVal()>
    8ac4:	e1a02000 	mov	r2, r0
    8ac8:	e59f1048 	ldr	r1, [pc, #72]	; 8b18 <CasRead(CassetteTape*)+0xd0>
    8acc:	e3520000 	cmp	r2, #0
    8ad0:	e59f3044 	ldr	r3, [pc, #68]	; 8b1c <CasRead(CassetteTape*)+0xd4>
    8ad4:	01a03001 	moveq	r3, r1
    8ad8:	e5970014 	ldr	r0, [r7, #20]
    8adc:	e59f103c 	ldr	r1, [pc, #60]	; 8b20 <CasRead(CassetteTape*)+0xd8>
    8ae0:	e0800100 	add	r0, r0, r0, lsl #2
    8ae4:	e0800100 	add	r0, r0, r0, lsl #2
    8ae8:	e586200c 	str	r2, [r6, #12]
    8aec:	e5865010 	str	r5, [r6, #16]
    8af0:	e5863018 	str	r3, [r6, #24]
    8af4:	e5911460 	ldr	r1, [r1, #1120]	; 0x460
    8af8:	e1a00100 	lsl	r0, r0, #2
    8afc:	eb00acfa 	bl	33eec <__aeabi_idiv>
    8b00:	e1a01000 	mov	r1, r0
    8b04:	e59f0018 	ldr	r0, [pc, #24]	; 8b24 <CasRead(CassetteTape*)+0xdc>
    8b08:	ebffffb3 	bl	89dc <CKernel::printf(char const*, ...)>
    8b0c:	eaffffdc 	b	8a84 <CasRead(CassetteTape*)+0x3c>
    8b10:	0006ef80 	.word	0x0006ef80
    8b14:	0005af60 	.word	0x0005af60
    8b18:	0000064c 	.word	0x0000064c
    8b1c:	00000866 	.word	0x00000866
    8b20:	0004ffc4 	.word	0x0004ffc4
    8b24:	0003c160 	.word	0x0003c160

00008b28 <InZ80>:
    8b28:	e2203902 	eor	r3, r0, #32768	; 0x8000
    8b2c:	e3530009 	cmp	r3, #9
    8b30:	9a00000b 	bls	8b64 <InZ80+0x3c>
    8b34:	e2003a0e 	and	r3, r0, #57344	; 0xe000
    8b38:	e3530a0a 	cmp	r3, #40960	; 0xa000
    8b3c:	0a00000d 	beq	8b78 <InZ80+0x50>
    8b40:	e3530a02 	cmp	r3, #8192	; 0x2000
    8b44:	0a000015 	beq	8ba0 <InZ80+0x78>
    8b48:	e3530000 	cmp	r3, #0
    8b4c:	0a000010 	beq	8b94 <InZ80+0x6c>
    8b50:	e3c03001 	bic	r3, r0, #1
    8b54:	e3530901 	cmp	r3, #16384	; 0x4000
    8b58:	0a000013 	beq	8bac <InZ80+0x84>
    8b5c:	e3a00000 	mov	r0, #0
    8b60:	e12fff1e 	bx	lr
    8b64:	e59f3088 	ldr	r3, [pc, #136]	; 8bf4 <InZ80+0xcc>
    8b68:	e200000f 	and	r0, r0, #15
    8b6c:	e0830000 	add	r0, r3, r0
    8b70:	e5d00004 	ldrb	r0, [r0, #4]
    8b74:	e12fff1e 	bx	lr
    8b78:	e59f2078 	ldr	r2, [pc, #120]	; 8bf8 <InZ80+0xd0>
    8b7c:	e3a00000 	mov	r0, #0
    8b80:	e5923000 	ldr	r3, [r2]
    8b84:	e16f3f13 	clz	r3, r3
    8b88:	e1a032a3 	lsr	r3, r3, #5
    8b8c:	e5823000 	str	r3, [r2]
    8b90:	e12fff1e 	bx	lr
    8b94:	e59f3060 	ldr	r3, [pc, #96]	; 8bfc <InZ80+0xd4>
    8b98:	e7d00003 	ldrb	r0, [r0, r3]
    8b9c:	e12fff1e 	bx	lr
    8ba0:	e59f3050 	ldr	r3, [pc, #80]	; 8bf8 <InZ80+0xd0>
    8ba4:	e5d30004 	ldrb	r0, [r3, #4]
    8ba8:	e12fff1e 	bx	lr
    8bac:	e3500901 	cmp	r0, #16384	; 0x4000
    8bb0:	0affffe9 	beq	8b5c <InZ80+0x34>
    8bb4:	e59f103c 	ldr	r1, [pc, #60]	; 8bf8 <InZ80+0xd0>
    8bb8:	e5d13005 	ldrb	r3, [r1, #5]
    8bbc:	e353000e 	cmp	r3, #14
    8bc0:	0a000005 	beq	8bdc <InZ80+0xb4>
    8bc4:	e59f3028 	ldr	r3, [pc, #40]	; 8bf4 <InZ80+0xcc>
    8bc8:	e281103c 	add	r1, r1, #60	; 0x3c
    8bcc:	e5930000 	ldr	r0, [r3]
    8bd0:	e2800d77 	add	r0, r0, #7616	; 0x1dc0
    8bd4:	e2800028 	add	r0, r0, #40	; 0x28
    8bd8:	ea0059ad 	b	1f294 <CAY8910::RdData8910(AY8910*)>
    8bdc:	e2810902 	add	r0, r1, #32768	; 0x8000
    8be0:	e92d4010 	push	{r4, lr}
    8be4:	e28000b8 	add	r0, r0, #184	; 0xb8
    8be8:	ebffff96 	bl	8a48 <CasRead(CassetteTape*)>
    8bec:	e3a00000 	mov	r0, #0
    8bf0:	e8bd8010 	pop	{r4, pc}
    8bf4:	0005af60 	.word	0x0005af60
    8bf8:	0006ef80 	.word	0x0006ef80
    8bfc:	0006cf80 	.word	0x0006cf80

00008c00 <printf>:
    8c00:	e92d000f 	push	{r0, r1, r2, r3}
    8c04:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8c08:	e24dd01c 	sub	sp, sp, #28
    8c0c:	e28d3024 	add	r3, sp, #36	; 0x24
    8c10:	e28d0008 	add	r0, sp, #8
    8c14:	e58d3004 	str	r3, [sp, #4]
    8c18:	eb00bded 	bl	383d4 <CString::CString()>
    8c1c:	e59d1020 	ldr	r1, [sp, #32]
    8c20:	e28d0008 	add	r0, sp, #8
    8c24:	e59d2004 	ldr	r2, [sp, #4]
    8c28:	eb00bf48 	bl	38950 <CString::FormatV(char const*, std::__va_list)>
    8c2c:	e28d0008 	add	r0, sp, #8
    8c30:	eb00bdb4 	bl	38308 <CString::~CString()>
    8c34:	e3a00001 	mov	r0, #1
    8c38:	e28dd01c 	add	sp, sp, #28
    8c3c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    8c40:	e28dd010 	add	sp, sp, #16
    8c44:	e12fff1e 	bx	lr

00008c48 <OutZ80>:
    8c48:	e92d4070 	push	{r4, r5, r6, lr}
    8c4c:	e1a04000 	mov	r4, r0
    8c50:	e1a02001 	mov	r2, r1
    8c54:	e1a05001 	mov	r5, r1
    8c58:	e59f00f8 	ldr	r0, [pc, #248]	; 8d58 <OutZ80+0x110>
    8c5c:	e1a01004 	mov	r1, r4
    8c60:	ebffffe6 	bl	8c00 <printf>
    8c64:	e2143a0e 	ands	r3, r4, #57344	; 0xe000
    8c68:	0a000014 	beq	8cc0 <OutZ80+0x78>
    8c6c:	e3530a0a 	cmp	r3, #40960	; 0xa000
    8c70:	0a000015 	beq	8ccc <OutZ80+0x84>
    8c74:	e3530a02 	cmp	r3, #8192	; 0x2000
    8c78:	0a000024 	beq	8d10 <OutZ80+0xc8>
    8c7c:	e3530a06 	cmp	r3, #24576	; 0x6000
    8c80:	0a000017 	beq	8ce4 <OutZ80+0x9c>
    8c84:	e3c43001 	bic	r3, r4, #1
    8c88:	e3530901 	cmp	r3, #16384	; 0x4000
    8c8c:	18bd8070 	popne	{r4, r5, r6, pc}
    8c90:	e59f30c4 	ldr	r3, [pc, #196]	; 8d5c <OutZ80+0x114>
    8c94:	e3540901 	cmp	r4, #16384	; 0x4000
    8c98:	e5930000 	ldr	r0, [r3]
    8c9c:	e2800d77 	add	r0, r0, #7616	; 0x1dc0
    8ca0:	e2800028 	add	r0, r0, #40	; 0x28
    8ca4:	1a00001c 	bne	8d1c <OutZ80+0xd4>
    8ca8:	e59f30b0 	ldr	r3, [pc, #176]	; 8d60 <OutZ80+0x118>
    8cac:	e1a02005 	mov	r2, r5
    8cb0:	e5c35005 	strb	r5, [r3, #5]
    8cb4:	e283103c 	add	r1, r3, #60	; 0x3c
    8cb8:	e8bd4070 	pop	{r4, r5, r6, lr}
    8cbc:	ea005971 	b	1f288 <CAY8910::WrCtrl8910(AY8910*, unsigned char)>
    8cc0:	e59f309c 	ldr	r3, [pc, #156]	; 8d64 <OutZ80+0x11c>
    8cc4:	e7c45003 	strb	r5, [r4, r3]
    8cc8:	e8bd8070 	pop	{r4, r5, r6, pc}
    8ccc:	e59f208c 	ldr	r2, [pc, #140]	; 8d60 <OutZ80+0x118>
    8cd0:	e5923000 	ldr	r3, [r2]
    8cd4:	e16f3f13 	clz	r3, r3
    8cd8:	e1a032a3 	lsr	r3, r3, #5
    8cdc:	e5823000 	str	r3, [r2]
    8ce0:	e8bd8070 	pop	{r4, r5, r6, pc}
    8ce4:	e59f307c 	ldr	r3, [pc, #124]	; 8d68 <OutZ80+0x120>
    8ce8:	e59320c0 	ldr	r2, [r3, #192]	; 0xc0
    8cec:	e3520000 	cmp	r2, #0
    8cf0:	08bd8070 	popeq	{r4, r5, r6, pc}
    8cf4:	e2155002 	ands	r5, r5, #2
    8cf8:	e59320bc 	ldr	r2, [r3, #188]	; 0xbc
    8cfc:	0a00000c 	beq	8d34 <OutZ80+0xec>
    8d00:	e3520000 	cmp	r2, #0
    8d04:	03a02001 	moveq	r2, #1
    8d08:	058320bc 	streq	r2, [r3, #188]	; 0xbc
    8d0c:	e8bd8070 	pop	{r4, r5, r6, pc}
    8d10:	e59f3048 	ldr	r3, [pc, #72]	; 8d60 <OutZ80+0x118>
    8d14:	e5c35004 	strb	r5, [r3, #4]
    8d18:	e8bd8070 	pop	{r4, r5, r6, pc}
    8d1c:	e59f103c 	ldr	r1, [pc, #60]	; 8d60 <OutZ80+0x118>
    8d20:	e1a03005 	mov	r3, r5
    8d24:	e8bd4070 	pop	{r4, r5, r6, lr}
    8d28:	e5d12005 	ldrb	r2, [r1, #5]
    8d2c:	e281103c 	add	r1, r1, #60	; 0x3c
    8d30:	ea005989 	b	1f35c <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)>
    8d34:	e3520000 	cmp	r2, #0
    8d38:	08bd8070 	popeq	{r4, r5, r6, pc}
    8d3c:	e59320b8 	ldr	r2, [r3, #184]	; 0xb8
    8d40:	e58350bc 	str	r5, [r3, #188]	; 0xbc
    8d44:	e3520000 	cmp	r2, #0
    8d48:	03a02001 	moveq	r2, #1
    8d4c:	158350b8 	strne	r5, [r3, #184]	; 0xb8
    8d50:	058320b8 	streq	r2, [r3, #184]	; 0xb8
    8d54:	e8bd8070 	pop	{r4, r5, r6, pc}
    8d58:	0003c168 	.word	0x0003c168
    8d5c:	0005af60 	.word	0x0005af60
    8d60:	0006ef80 	.word	0x0006ef80
    8d64:	0006cf80 	.word	0x0006cf80
    8d68:	00076f80 	.word	0x00076f80

00008d6c <CodesCB>:
    8d6c:	e59fcc8c 	ldr	ip, [pc, #3212]	; 9a00 <CodesCB+0xc94>
    8d70:	e1d030bc 	ldrh	r3, [r0, #12]
    8d74:	e28c2a12 	add	r2, ip, #73728	; 0x12000
    8d78:	e92d4010 	push	{r4, lr}
    8d7c:	e592e000 	ldr	lr, [r2]
    8d80:	e2832001 	add	r2, r3, #1
    8d84:	e35e0000 	cmp	lr, #0
    8d88:	e1c020bc 	strh	r2, [r0, #12]
    8d8c:	11a03883 	lslne	r3, r3, #17
    8d90:	159f2c70 	ldrne	r2, [pc, #3184]	; 9a08 <CodesCB+0xc9c>
    8d94:	11a038a3 	lsrne	r3, r3, #17
    8d98:	17d22003 	ldrbne	r2, [r2, r3]
    8d9c:	07dc2003 	ldrbeq	r2, [ip, r3]
    8da0:	e59f1c5c 	ldr	r1, [pc, #3164]	; 9a04 <CodesCB+0xc98>
    8da4:	e5903020 	ldr	r3, [r0, #32]
    8da8:	e7d14002 	ldrb	r4, [r1, r2]
    8dac:	e0433004 	sub	r3, r3, r4
    8db0:	e5803020 	str	r3, [r0, #32]
    8db4:	e35200ff 	cmp	r2, #255	; 0xff
    8db8:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
    8dbc:	ea000103 	b	91d0 <CodesCB+0x464>
    8dc0:	0000b174 	.word	0x0000b174
    8dc4:	0000b14c 	.word	0x0000b14c
    8dc8:	0000b124 	.word	0x0000b124
    8dcc:	0000b0fc 	.word	0x0000b0fc
    8dd0:	0000b0d4 	.word	0x0000b0d4
    8dd4:	0000b0ac 	.word	0x0000b0ac
    8dd8:	0000b06c 	.word	0x0000b06c
    8ddc:	0000b044 	.word	0x0000b044
    8de0:	0000b01c 	.word	0x0000b01c
    8de4:	0000aff4 	.word	0x0000aff4
    8de8:	0000afcc 	.word	0x0000afcc
    8dec:	0000afa4 	.word	0x0000afa4
    8df0:	0000af7c 	.word	0x0000af7c
    8df4:	0000af54 	.word	0x0000af54
    8df8:	0000af14 	.word	0x0000af14
    8dfc:	0000aeec 	.word	0x0000aeec
    8e00:	0000aeb4 	.word	0x0000aeb4
    8e04:	0000ae7c 	.word	0x0000ae7c
    8e08:	0000ae44 	.word	0x0000ae44
    8e0c:	0000ae0c 	.word	0x0000ae0c
    8e10:	0000add4 	.word	0x0000add4
    8e14:	0000ad9c 	.word	0x0000ad9c
    8e18:	0000ad54 	.word	0x0000ad54
    8e1c:	0000ad1c 	.word	0x0000ad1c
    8e20:	0000ace4 	.word	0x0000ace4
    8e24:	0000acac 	.word	0x0000acac
    8e28:	0000ac74 	.word	0x0000ac74
    8e2c:	0000ac3c 	.word	0x0000ac3c
    8e30:	0000ac04 	.word	0x0000ac04
    8e34:	0000abcc 	.word	0x0000abcc
    8e38:	0000ab84 	.word	0x0000ab84
    8e3c:	0000ab4c 	.word	0x0000ab4c
    8e40:	0000ab28 	.word	0x0000ab28
    8e44:	0000ab04 	.word	0x0000ab04
    8e48:	0000aae0 	.word	0x0000aae0
    8e4c:	0000aabc 	.word	0x0000aabc
    8e50:	0000aa98 	.word	0x0000aa98
    8e54:	0000aa74 	.word	0x0000aa74
    8e58:	0000aa38 	.word	0x0000aa38
    8e5c:	0000aa14 	.word	0x0000aa14
    8e60:	0000a9ec 	.word	0x0000a9ec
    8e64:	0000a9c4 	.word	0x0000a9c4
    8e68:	0000a99c 	.word	0x0000a99c
    8e6c:	0000a974 	.word	0x0000a974
    8e70:	0000a94c 	.word	0x0000a94c
    8e74:	0000a924 	.word	0x0000a924
    8e78:	0000a8e4 	.word	0x0000a8e4
    8e7c:	0000a8bc 	.word	0x0000a8bc
    8e80:	0000a894 	.word	0x0000a894
    8e84:	0000a86c 	.word	0x0000a86c
    8e88:	0000a844 	.word	0x0000a844
    8e8c:	0000a81c 	.word	0x0000a81c
    8e90:	0000a7f4 	.word	0x0000a7f4
    8e94:	0000a7cc 	.word	0x0000a7cc
    8e98:	0000a78c 	.word	0x0000a78c
    8e9c:	0000a764 	.word	0x0000a764
    8ea0:	0000a740 	.word	0x0000a740
    8ea4:	0000a71c 	.word	0x0000a71c
    8ea8:	0000a6f8 	.word	0x0000a6f8
    8eac:	0000a6d4 	.word	0x0000a6d4
    8eb0:	0000a6b0 	.word	0x0000a6b0
    8eb4:	0000a68c 	.word	0x0000a68c
    8eb8:	0000a650 	.word	0x0000a650
    8ebc:	0000a62c 	.word	0x0000a62c
    8ec0:	0000a604 	.word	0x0000a604
    8ec4:	0000a5dc 	.word	0x0000a5dc
    8ec8:	0000a5b4 	.word	0x0000a5b4
    8ecc:	0000a58c 	.word	0x0000a58c
    8ed0:	0000a564 	.word	0x0000a564
    8ed4:	0000a53c 	.word	0x0000a53c
    8ed8:	0000a4fc 	.word	0x0000a4fc
    8edc:	0000a4d4 	.word	0x0000a4d4
    8ee0:	0000a4ac 	.word	0x0000a4ac
    8ee4:	0000a484 	.word	0x0000a484
    8ee8:	0000a45c 	.word	0x0000a45c
    8eec:	0000a434 	.word	0x0000a434
    8ef0:	0000a40c 	.word	0x0000a40c
    8ef4:	0000a3e4 	.word	0x0000a3e4
    8ef8:	0000a3a4 	.word	0x0000a3a4
    8efc:	0000a37c 	.word	0x0000a37c
    8f00:	0000a354 	.word	0x0000a354
    8f04:	0000a32c 	.word	0x0000a32c
    8f08:	0000a304 	.word	0x0000a304
    8f0c:	0000a2dc 	.word	0x0000a2dc
    8f10:	0000a2b4 	.word	0x0000a2b4
    8f14:	0000a28c 	.word	0x0000a28c
    8f18:	0000a24c 	.word	0x0000a24c
    8f1c:	0000a224 	.word	0x0000a224
    8f20:	0000a1fc 	.word	0x0000a1fc
    8f24:	0000a1d4 	.word	0x0000a1d4
    8f28:	0000a1ac 	.word	0x0000a1ac
    8f2c:	0000a184 	.word	0x0000a184
    8f30:	0000a15c 	.word	0x0000a15c
    8f34:	0000a134 	.word	0x0000a134
    8f38:	0000a0f4 	.word	0x0000a0f4
    8f3c:	0000a0cc 	.word	0x0000a0cc
    8f40:	0000a0a4 	.word	0x0000a0a4
    8f44:	0000a07c 	.word	0x0000a07c
    8f48:	0000a054 	.word	0x0000a054
    8f4c:	0000a02c 	.word	0x0000a02c
    8f50:	0000a004 	.word	0x0000a004
    8f54:	00009fdc 	.word	0x00009fdc
    8f58:	00009f9c 	.word	0x00009f9c
    8f5c:	00009f74 	.word	0x00009f74
    8f60:	00009f4c 	.word	0x00009f4c
    8f64:	00009f24 	.word	0x00009f24
    8f68:	00009efc 	.word	0x00009efc
    8f6c:	00009ed4 	.word	0x00009ed4
    8f70:	00009eac 	.word	0x00009eac
    8f74:	00009e84 	.word	0x00009e84
    8f78:	00009e44 	.word	0x00009e44
    8f7c:	00009e1c 	.word	0x00009e1c
    8f80:	00009df4 	.word	0x00009df4
    8f84:	00009dcc 	.word	0x00009dcc
    8f88:	00009da4 	.word	0x00009da4
    8f8c:	00009d7c 	.word	0x00009d7c
    8f90:	00009d54 	.word	0x00009d54
    8f94:	00009d2c 	.word	0x00009d2c
    8f98:	00009cec 	.word	0x00009cec
    8f9c:	00009cc4 	.word	0x00009cc4
    8fa0:	00009c9c 	.word	0x00009c9c
    8fa4:	00009c74 	.word	0x00009c74
    8fa8:	00009c4c 	.word	0x00009c4c
    8fac:	00009c24 	.word	0x00009c24
    8fb0:	00009bfc 	.word	0x00009bfc
    8fb4:	00009bd4 	.word	0x00009bd4
    8fb8:	00009b94 	.word	0x00009b94
    8fbc:	00009b6c 	.word	0x00009b6c
    8fc0:	00009b5c 	.word	0x00009b5c
    8fc4:	00009b4c 	.word	0x00009b4c
    8fc8:	00009b3c 	.word	0x00009b3c
    8fcc:	00009b2c 	.word	0x00009b2c
    8fd0:	00009b1c 	.word	0x00009b1c
    8fd4:	00009b0c 	.word	0x00009b0c
    8fd8:	00009ae4 	.word	0x00009ae4
    8fdc:	00009ad4 	.word	0x00009ad4
    8fe0:	00009ac4 	.word	0x00009ac4
    8fe4:	00009ab4 	.word	0x00009ab4
    8fe8:	00009aa4 	.word	0x00009aa4
    8fec:	00009a94 	.word	0x00009a94
    8ff0:	00009a84 	.word	0x00009a84
    8ff4:	00009a74 	.word	0x00009a74
    8ff8:	00009a4c 	.word	0x00009a4c
    8ffc:	00009a3c 	.word	0x00009a3c
    9000:	00009a2c 	.word	0x00009a2c
    9004:	00009a1c 	.word	0x00009a1c
    9008:	00009a0c 	.word	0x00009a0c
    900c:	000099f0 	.word	0x000099f0
    9010:	000099e0 	.word	0x000099e0
    9014:	000099d0 	.word	0x000099d0
    9018:	000099a8 	.word	0x000099a8
    901c:	00009998 	.word	0x00009998
    9020:	00009988 	.word	0x00009988
    9024:	00009978 	.word	0x00009978
    9028:	00009968 	.word	0x00009968
    902c:	00009958 	.word	0x00009958
    9030:	00009948 	.word	0x00009948
    9034:	00009938 	.word	0x00009938
    9038:	00009910 	.word	0x00009910
    903c:	00009900 	.word	0x00009900
    9040:	000098f0 	.word	0x000098f0
    9044:	000098e0 	.word	0x000098e0
    9048:	000098d0 	.word	0x000098d0
    904c:	000098c0 	.word	0x000098c0
    9050:	000098b0 	.word	0x000098b0
    9054:	000098a0 	.word	0x000098a0
    9058:	00009878 	.word	0x00009878
    905c:	00009868 	.word	0x00009868
    9060:	00009858 	.word	0x00009858
    9064:	00009848 	.word	0x00009848
    9068:	00009838 	.word	0x00009838
    906c:	00009828 	.word	0x00009828
    9070:	00009818 	.word	0x00009818
    9074:	00009808 	.word	0x00009808
    9078:	000097e0 	.word	0x000097e0
    907c:	000097d0 	.word	0x000097d0
    9080:	000097c0 	.word	0x000097c0
    9084:	000097b0 	.word	0x000097b0
    9088:	000097a0 	.word	0x000097a0
    908c:	00009790 	.word	0x00009790
    9090:	00009780 	.word	0x00009780
    9094:	00009770 	.word	0x00009770
    9098:	00009748 	.word	0x00009748
    909c:	00009738 	.word	0x00009738
    90a0:	00009728 	.word	0x00009728
    90a4:	00009718 	.word	0x00009718
    90a8:	00009708 	.word	0x00009708
    90ac:	000096f8 	.word	0x000096f8
    90b0:	000096e8 	.word	0x000096e8
    90b4:	000096d8 	.word	0x000096d8
    90b8:	000096b0 	.word	0x000096b0
    90bc:	000096a0 	.word	0x000096a0
    90c0:	00009690 	.word	0x00009690
    90c4:	00009680 	.word	0x00009680
    90c8:	00009670 	.word	0x00009670
    90cc:	00009660 	.word	0x00009660
    90d0:	00009650 	.word	0x00009650
    90d4:	00009640 	.word	0x00009640
    90d8:	00009618 	.word	0x00009618
    90dc:	00009608 	.word	0x00009608
    90e0:	000095f8 	.word	0x000095f8
    90e4:	000095e8 	.word	0x000095e8
    90e8:	000095d8 	.word	0x000095d8
    90ec:	000095c8 	.word	0x000095c8
    90f0:	000095b8 	.word	0x000095b8
    90f4:	000095a8 	.word	0x000095a8
    90f8:	00009580 	.word	0x00009580
    90fc:	00009570 	.word	0x00009570
    9100:	00009560 	.word	0x00009560
    9104:	00009550 	.word	0x00009550
    9108:	00009540 	.word	0x00009540
    910c:	00009530 	.word	0x00009530
    9110:	00009520 	.word	0x00009520
    9114:	00009510 	.word	0x00009510
    9118:	000094e8 	.word	0x000094e8
    911c:	000094d8 	.word	0x000094d8
    9120:	000094c8 	.word	0x000094c8
    9124:	000094b8 	.word	0x000094b8
    9128:	000094a8 	.word	0x000094a8
    912c:	00009498 	.word	0x00009498
    9130:	00009488 	.word	0x00009488
    9134:	00009478 	.word	0x00009478
    9138:	00009450 	.word	0x00009450
    913c:	00009440 	.word	0x00009440
    9140:	00009430 	.word	0x00009430
    9144:	00009420 	.word	0x00009420
    9148:	00009410 	.word	0x00009410
    914c:	00009400 	.word	0x00009400
    9150:	000093f0 	.word	0x000093f0
    9154:	000093e0 	.word	0x000093e0
    9158:	000093b8 	.word	0x000093b8
    915c:	000093a8 	.word	0x000093a8
    9160:	00009398 	.word	0x00009398
    9164:	00009388 	.word	0x00009388
    9168:	00009378 	.word	0x00009378
    916c:	00009368 	.word	0x00009368
    9170:	00009358 	.word	0x00009358
    9174:	00009348 	.word	0x00009348
    9178:	00009320 	.word	0x00009320
    917c:	00009310 	.word	0x00009310
    9180:	00009300 	.word	0x00009300
    9184:	000092f0 	.word	0x000092f0
    9188:	000092e0 	.word	0x000092e0
    918c:	000092d0 	.word	0x000092d0
    9190:	000092c0 	.word	0x000092c0
    9194:	000092b0 	.word	0x000092b0
    9198:	00009288 	.word	0x00009288
    919c:	00009278 	.word	0x00009278
    91a0:	00009264 	.word	0x00009264
    91a4:	00009250 	.word	0x00009250
    91a8:	0000923c 	.word	0x0000923c
    91ac:	00009228 	.word	0x00009228
    91b0:	00009214 	.word	0x00009214
    91b4:	00009200 	.word	0x00009200
    91b8:	000091d4 	.word	0x000091d4
    91bc:	000091c0 	.word	0x000091c0
    91c0:	e5d03001 	ldrb	r3, [r0, #1]
    91c4:	e1e03c83 	mvn	r3, r3, lsl #25
    91c8:	e1e03ca3 	mvn	r3, r3, lsr #25
    91cc:	e5c03001 	strb	r3, [r0, #1]
    91d0:	e8bd8010 	pop	{r4, pc}
    91d4:	e1d020b6 	ldrh	r2, [r0, #6]
    91d8:	e35e0000 	cmp	lr, #0
    91dc:	11a03882 	lslne	r3, r2, #17
    91e0:	159f1820 	ldrne	r1, [pc, #2080]	; 9a08 <CodesCB+0xc9c>
    91e4:	11a038a3 	lsrne	r3, r3, #17
    91e8:	07dc3002 	ldrbeq	r3, [ip, r2]
    91ec:	17d13003 	ldrbne	r3, [r1, r3]
    91f0:	e1e03c83 	mvn	r3, r3, lsl #25
    91f4:	e1e03ca3 	mvn	r3, r3, lsr #25
    91f8:	e7cc3002 	strb	r3, [ip, r2]
    91fc:	e8bd8010 	pop	{r4, pc}
    9200:	e5d03006 	ldrb	r3, [r0, #6]
    9204:	e1e03c83 	mvn	r3, r3, lsl #25
    9208:	e1e03ca3 	mvn	r3, r3, lsr #25
    920c:	e5c03006 	strb	r3, [r0, #6]
    9210:	e8bd8010 	pop	{r4, pc}
    9214:	e5d03007 	ldrb	r3, [r0, #7]
    9218:	e1e03c83 	mvn	r3, r3, lsl #25
    921c:	e1e03ca3 	mvn	r3, r3, lsr #25
    9220:	e5c03007 	strb	r3, [r0, #7]
    9224:	e8bd8010 	pop	{r4, pc}
    9228:	e5d03004 	ldrb	r3, [r0, #4]
    922c:	e1e03c83 	mvn	r3, r3, lsl #25
    9230:	e1e03ca3 	mvn	r3, r3, lsr #25
    9234:	e5c03004 	strb	r3, [r0, #4]
    9238:	e8bd8010 	pop	{r4, pc}
    923c:	e5d03005 	ldrb	r3, [r0, #5]
    9240:	e1e03c83 	mvn	r3, r3, lsl #25
    9244:	e1e03ca3 	mvn	r3, r3, lsr #25
    9248:	e5c03005 	strb	r3, [r0, #5]
    924c:	e8bd8010 	pop	{r4, pc}
    9250:	e5d03002 	ldrb	r3, [r0, #2]
    9254:	e1e03c83 	mvn	r3, r3, lsl #25
    9258:	e1e03ca3 	mvn	r3, r3, lsr #25
    925c:	e5c03002 	strb	r3, [r0, #2]
    9260:	e8bd8010 	pop	{r4, pc}
    9264:	e5d03003 	ldrb	r3, [r0, #3]
    9268:	e1e03c83 	mvn	r3, r3, lsl #25
    926c:	e1e03ca3 	mvn	r3, r3, lsr #25
    9270:	e5c03003 	strb	r3, [r0, #3]
    9274:	e8bd8010 	pop	{r4, pc}
    9278:	e5d03001 	ldrb	r3, [r0, #1]
    927c:	e3833040 	orr	r3, r3, #64	; 0x40
    9280:	e5c03001 	strb	r3, [r0, #1]
    9284:	e8bd8010 	pop	{r4, pc}
    9288:	e1d020b6 	ldrh	r2, [r0, #6]
    928c:	e35e0000 	cmp	lr, #0
    9290:	11a03882 	lslne	r3, r2, #17
    9294:	159f176c 	ldrne	r1, [pc, #1900]	; 9a08 <CodesCB+0xc9c>
    9298:	11a038a3 	lsrne	r3, r3, #17
    929c:	07dc3002 	ldrbeq	r3, [ip, r2]
    92a0:	17d13003 	ldrbne	r3, [r1, r3]
    92a4:	e3833040 	orr	r3, r3, #64	; 0x40
    92a8:	e7cc3002 	strb	r3, [ip, r2]
    92ac:	e8bd8010 	pop	{r4, pc}
    92b0:	e5d03006 	ldrb	r3, [r0, #6]
    92b4:	e3833040 	orr	r3, r3, #64	; 0x40
    92b8:	e5c03006 	strb	r3, [r0, #6]
    92bc:	e8bd8010 	pop	{r4, pc}
    92c0:	e5d03007 	ldrb	r3, [r0, #7]
    92c4:	e3833040 	orr	r3, r3, #64	; 0x40
    92c8:	e5c03007 	strb	r3, [r0, #7]
    92cc:	e8bd8010 	pop	{r4, pc}
    92d0:	e5d03004 	ldrb	r3, [r0, #4]
    92d4:	e3833040 	orr	r3, r3, #64	; 0x40
    92d8:	e5c03004 	strb	r3, [r0, #4]
    92dc:	e8bd8010 	pop	{r4, pc}
    92e0:	e5d03005 	ldrb	r3, [r0, #5]
    92e4:	e3833040 	orr	r3, r3, #64	; 0x40
    92e8:	e5c03005 	strb	r3, [r0, #5]
    92ec:	e8bd8010 	pop	{r4, pc}
    92f0:	e5d03002 	ldrb	r3, [r0, #2]
    92f4:	e3833040 	orr	r3, r3, #64	; 0x40
    92f8:	e5c03002 	strb	r3, [r0, #2]
    92fc:	e8bd8010 	pop	{r4, pc}
    9300:	e5d03003 	ldrb	r3, [r0, #3]
    9304:	e3833040 	orr	r3, r3, #64	; 0x40
    9308:	e5c03003 	strb	r3, [r0, #3]
    930c:	e8bd8010 	pop	{r4, pc}
    9310:	e5d03001 	ldrb	r3, [r0, #1]
    9314:	e3833020 	orr	r3, r3, #32
    9318:	e5c03001 	strb	r3, [r0, #1]
    931c:	e8bd8010 	pop	{r4, pc}
    9320:	e1d020b6 	ldrh	r2, [r0, #6]
    9324:	e35e0000 	cmp	lr, #0
    9328:	11a03882 	lslne	r3, r2, #17
    932c:	159f16d4 	ldrne	r1, [pc, #1748]	; 9a08 <CodesCB+0xc9c>
    9330:	11a038a3 	lsrne	r3, r3, #17
    9334:	07dc3002 	ldrbeq	r3, [ip, r2]
    9338:	17d13003 	ldrbne	r3, [r1, r3]
    933c:	e3833020 	orr	r3, r3, #32
    9340:	e7cc3002 	strb	r3, [ip, r2]
    9344:	e8bd8010 	pop	{r4, pc}
    9348:	e5d03006 	ldrb	r3, [r0, #6]
    934c:	e3833020 	orr	r3, r3, #32
    9350:	e5c03006 	strb	r3, [r0, #6]
    9354:	e8bd8010 	pop	{r4, pc}
    9358:	e5d03007 	ldrb	r3, [r0, #7]
    935c:	e3833020 	orr	r3, r3, #32
    9360:	e5c03007 	strb	r3, [r0, #7]
    9364:	e8bd8010 	pop	{r4, pc}
    9368:	e5d03004 	ldrb	r3, [r0, #4]
    936c:	e3833020 	orr	r3, r3, #32
    9370:	e5c03004 	strb	r3, [r0, #4]
    9374:	e8bd8010 	pop	{r4, pc}
    9378:	e5d03005 	ldrb	r3, [r0, #5]
    937c:	e3833020 	orr	r3, r3, #32
    9380:	e5c03005 	strb	r3, [r0, #5]
    9384:	e8bd8010 	pop	{r4, pc}
    9388:	e5d03002 	ldrb	r3, [r0, #2]
    938c:	e3833020 	orr	r3, r3, #32
    9390:	e5c03002 	strb	r3, [r0, #2]
    9394:	e8bd8010 	pop	{r4, pc}
    9398:	e5d03003 	ldrb	r3, [r0, #3]
    939c:	e3833020 	orr	r3, r3, #32
    93a0:	e5c03003 	strb	r3, [r0, #3]
    93a4:	e8bd8010 	pop	{r4, pc}
    93a8:	e5d03001 	ldrb	r3, [r0, #1]
    93ac:	e3833010 	orr	r3, r3, #16
    93b0:	e5c03001 	strb	r3, [r0, #1]
    93b4:	e8bd8010 	pop	{r4, pc}
    93b8:	e1d020b6 	ldrh	r2, [r0, #6]
    93bc:	e35e0000 	cmp	lr, #0
    93c0:	11a03882 	lslne	r3, r2, #17
    93c4:	159f163c 	ldrne	r1, [pc, #1596]	; 9a08 <CodesCB+0xc9c>
    93c8:	11a038a3 	lsrne	r3, r3, #17
    93cc:	07dc3002 	ldrbeq	r3, [ip, r2]
    93d0:	17d13003 	ldrbne	r3, [r1, r3]
    93d4:	e3833010 	orr	r3, r3, #16
    93d8:	e7cc3002 	strb	r3, [ip, r2]
    93dc:	e8bd8010 	pop	{r4, pc}
    93e0:	e5d03006 	ldrb	r3, [r0, #6]
    93e4:	e3833010 	orr	r3, r3, #16
    93e8:	e5c03006 	strb	r3, [r0, #6]
    93ec:	e8bd8010 	pop	{r4, pc}
    93f0:	e5d03007 	ldrb	r3, [r0, #7]
    93f4:	e3833010 	orr	r3, r3, #16
    93f8:	e5c03007 	strb	r3, [r0, #7]
    93fc:	e8bd8010 	pop	{r4, pc}
    9400:	e5d03004 	ldrb	r3, [r0, #4]
    9404:	e3833010 	orr	r3, r3, #16
    9408:	e5c03004 	strb	r3, [r0, #4]
    940c:	e8bd8010 	pop	{r4, pc}
    9410:	e5d03005 	ldrb	r3, [r0, #5]
    9414:	e3833010 	orr	r3, r3, #16
    9418:	e5c03005 	strb	r3, [r0, #5]
    941c:	e8bd8010 	pop	{r4, pc}
    9420:	e5d03002 	ldrb	r3, [r0, #2]
    9424:	e3833010 	orr	r3, r3, #16
    9428:	e5c03002 	strb	r3, [r0, #2]
    942c:	e8bd8010 	pop	{r4, pc}
    9430:	e5d03003 	ldrb	r3, [r0, #3]
    9434:	e3833010 	orr	r3, r3, #16
    9438:	e5c03003 	strb	r3, [r0, #3]
    943c:	e8bd8010 	pop	{r4, pc}
    9440:	e5d03001 	ldrb	r3, [r0, #1]
    9444:	e3833008 	orr	r3, r3, #8
    9448:	e5c03001 	strb	r3, [r0, #1]
    944c:	e8bd8010 	pop	{r4, pc}
    9450:	e1d020b6 	ldrh	r2, [r0, #6]
    9454:	e35e0000 	cmp	lr, #0
    9458:	11a03882 	lslne	r3, r2, #17
    945c:	159f15a4 	ldrne	r1, [pc, #1444]	; 9a08 <CodesCB+0xc9c>
    9460:	11a038a3 	lsrne	r3, r3, #17
    9464:	07dc3002 	ldrbeq	r3, [ip, r2]
    9468:	17d13003 	ldrbne	r3, [r1, r3]
    946c:	e3833008 	orr	r3, r3, #8
    9470:	e7cc3002 	strb	r3, [ip, r2]
    9474:	e8bd8010 	pop	{r4, pc}
    9478:	e5d03006 	ldrb	r3, [r0, #6]
    947c:	e3833008 	orr	r3, r3, #8
    9480:	e5c03006 	strb	r3, [r0, #6]
    9484:	e8bd8010 	pop	{r4, pc}
    9488:	e5d03007 	ldrb	r3, [r0, #7]
    948c:	e3833008 	orr	r3, r3, #8
    9490:	e5c03007 	strb	r3, [r0, #7]
    9494:	e8bd8010 	pop	{r4, pc}
    9498:	e5d03004 	ldrb	r3, [r0, #4]
    949c:	e3833008 	orr	r3, r3, #8
    94a0:	e5c03004 	strb	r3, [r0, #4]
    94a4:	e8bd8010 	pop	{r4, pc}
    94a8:	e5d03005 	ldrb	r3, [r0, #5]
    94ac:	e3833008 	orr	r3, r3, #8
    94b0:	e5c03005 	strb	r3, [r0, #5]
    94b4:	e8bd8010 	pop	{r4, pc}
    94b8:	e5d03002 	ldrb	r3, [r0, #2]
    94bc:	e3833008 	orr	r3, r3, #8
    94c0:	e5c03002 	strb	r3, [r0, #2]
    94c4:	e8bd8010 	pop	{r4, pc}
    94c8:	e5d03003 	ldrb	r3, [r0, #3]
    94cc:	e3833008 	orr	r3, r3, #8
    94d0:	e5c03003 	strb	r3, [r0, #3]
    94d4:	e8bd8010 	pop	{r4, pc}
    94d8:	e5d03001 	ldrb	r3, [r0, #1]
    94dc:	e3833004 	orr	r3, r3, #4
    94e0:	e5c03001 	strb	r3, [r0, #1]
    94e4:	e8bd8010 	pop	{r4, pc}
    94e8:	e1d020b6 	ldrh	r2, [r0, #6]
    94ec:	e35e0000 	cmp	lr, #0
    94f0:	11a03882 	lslne	r3, r2, #17
    94f4:	159f150c 	ldrne	r1, [pc, #1292]	; 9a08 <CodesCB+0xc9c>
    94f8:	11a038a3 	lsrne	r3, r3, #17
    94fc:	07dc3002 	ldrbeq	r3, [ip, r2]
    9500:	17d13003 	ldrbne	r3, [r1, r3]
    9504:	e3833004 	orr	r3, r3, #4
    9508:	e7cc3002 	strb	r3, [ip, r2]
    950c:	e8bd8010 	pop	{r4, pc}
    9510:	e5d03006 	ldrb	r3, [r0, #6]
    9514:	e3833004 	orr	r3, r3, #4
    9518:	e5c03006 	strb	r3, [r0, #6]
    951c:	e8bd8010 	pop	{r4, pc}
    9520:	e5d03007 	ldrb	r3, [r0, #7]
    9524:	e3833004 	orr	r3, r3, #4
    9528:	e5c03007 	strb	r3, [r0, #7]
    952c:	e8bd8010 	pop	{r4, pc}
    9530:	e5d03004 	ldrb	r3, [r0, #4]
    9534:	e3833004 	orr	r3, r3, #4
    9538:	e5c03004 	strb	r3, [r0, #4]
    953c:	e8bd8010 	pop	{r4, pc}
    9540:	e5d03005 	ldrb	r3, [r0, #5]
    9544:	e3833004 	orr	r3, r3, #4
    9548:	e5c03005 	strb	r3, [r0, #5]
    954c:	e8bd8010 	pop	{r4, pc}
    9550:	e5d03002 	ldrb	r3, [r0, #2]
    9554:	e3833004 	orr	r3, r3, #4
    9558:	e5c03002 	strb	r3, [r0, #2]
    955c:	e8bd8010 	pop	{r4, pc}
    9560:	e5d03003 	ldrb	r3, [r0, #3]
    9564:	e3833004 	orr	r3, r3, #4
    9568:	e5c03003 	strb	r3, [r0, #3]
    956c:	e8bd8010 	pop	{r4, pc}
    9570:	e5d03001 	ldrb	r3, [r0, #1]
    9574:	e3833002 	orr	r3, r3, #2
    9578:	e5c03001 	strb	r3, [r0, #1]
    957c:	e8bd8010 	pop	{r4, pc}
    9580:	e1d020b6 	ldrh	r2, [r0, #6]
    9584:	e35e0000 	cmp	lr, #0
    9588:	11a03882 	lslne	r3, r2, #17
    958c:	159f1474 	ldrne	r1, [pc, #1140]	; 9a08 <CodesCB+0xc9c>
    9590:	11a038a3 	lsrne	r3, r3, #17
    9594:	07dc3002 	ldrbeq	r3, [ip, r2]
    9598:	17d13003 	ldrbne	r3, [r1, r3]
    959c:	e3833002 	orr	r3, r3, #2
    95a0:	e7cc3002 	strb	r3, [ip, r2]
    95a4:	e8bd8010 	pop	{r4, pc}
    95a8:	e5d03006 	ldrb	r3, [r0, #6]
    95ac:	e3833002 	orr	r3, r3, #2
    95b0:	e5c03006 	strb	r3, [r0, #6]
    95b4:	e8bd8010 	pop	{r4, pc}
    95b8:	e5d03007 	ldrb	r3, [r0, #7]
    95bc:	e3833002 	orr	r3, r3, #2
    95c0:	e5c03007 	strb	r3, [r0, #7]
    95c4:	e8bd8010 	pop	{r4, pc}
    95c8:	e5d03004 	ldrb	r3, [r0, #4]
    95cc:	e3833002 	orr	r3, r3, #2
    95d0:	e5c03004 	strb	r3, [r0, #4]
    95d4:	e8bd8010 	pop	{r4, pc}
    95d8:	e5d03005 	ldrb	r3, [r0, #5]
    95dc:	e3833002 	orr	r3, r3, #2
    95e0:	e5c03005 	strb	r3, [r0, #5]
    95e4:	e8bd8010 	pop	{r4, pc}
    95e8:	e5d03002 	ldrb	r3, [r0, #2]
    95ec:	e3833002 	orr	r3, r3, #2
    95f0:	e5c03002 	strb	r3, [r0, #2]
    95f4:	e8bd8010 	pop	{r4, pc}
    95f8:	e5d03003 	ldrb	r3, [r0, #3]
    95fc:	e3833002 	orr	r3, r3, #2
    9600:	e5c03003 	strb	r3, [r0, #3]
    9604:	e8bd8010 	pop	{r4, pc}
    9608:	e5d03001 	ldrb	r3, [r0, #1]
    960c:	e3833001 	orr	r3, r3, #1
    9610:	e5c03001 	strb	r3, [r0, #1]
    9614:	e8bd8010 	pop	{r4, pc}
    9618:	e1d020b6 	ldrh	r2, [r0, #6]
    961c:	e35e0000 	cmp	lr, #0
    9620:	11a03882 	lslne	r3, r2, #17
    9624:	159f13dc 	ldrne	r1, [pc, #988]	; 9a08 <CodesCB+0xc9c>
    9628:	11a038a3 	lsrne	r3, r3, #17
    962c:	07dc3002 	ldrbeq	r3, [ip, r2]
    9630:	17d13003 	ldrbne	r3, [r1, r3]
    9634:	e3833001 	orr	r3, r3, #1
    9638:	e7cc3002 	strb	r3, [ip, r2]
    963c:	e8bd8010 	pop	{r4, pc}
    9640:	e5d03006 	ldrb	r3, [r0, #6]
    9644:	e3833001 	orr	r3, r3, #1
    9648:	e5c03006 	strb	r3, [r0, #6]
    964c:	e8bd8010 	pop	{r4, pc}
    9650:	e5d03007 	ldrb	r3, [r0, #7]
    9654:	e3833001 	orr	r3, r3, #1
    9658:	e5c03007 	strb	r3, [r0, #7]
    965c:	e8bd8010 	pop	{r4, pc}
    9660:	e5d03004 	ldrb	r3, [r0, #4]
    9664:	e3833001 	orr	r3, r3, #1
    9668:	e5c03004 	strb	r3, [r0, #4]
    966c:	e8bd8010 	pop	{r4, pc}
    9670:	e5d03005 	ldrb	r3, [r0, #5]
    9674:	e3833001 	orr	r3, r3, #1
    9678:	e5c03005 	strb	r3, [r0, #5]
    967c:	e8bd8010 	pop	{r4, pc}
    9680:	e5d03002 	ldrb	r3, [r0, #2]
    9684:	e3833001 	orr	r3, r3, #1
    9688:	e5c03002 	strb	r3, [r0, #2]
    968c:	e8bd8010 	pop	{r4, pc}
    9690:	e5d03003 	ldrb	r3, [r0, #3]
    9694:	e3833001 	orr	r3, r3, #1
    9698:	e5c03003 	strb	r3, [r0, #3]
    969c:	e8bd8010 	pop	{r4, pc}
    96a0:	e5d03001 	ldrb	r3, [r0, #1]
    96a4:	e203307f 	and	r3, r3, #127	; 0x7f
    96a8:	e5c03001 	strb	r3, [r0, #1]
    96ac:	e8bd8010 	pop	{r4, pc}
    96b0:	e1d020b6 	ldrh	r2, [r0, #6]
    96b4:	e35e0000 	cmp	lr, #0
    96b8:	11a03882 	lslne	r3, r2, #17
    96bc:	159f1344 	ldrne	r1, [pc, #836]	; 9a08 <CodesCB+0xc9c>
    96c0:	11a038a3 	lsrne	r3, r3, #17
    96c4:	07dc3002 	ldrbeq	r3, [ip, r2]
    96c8:	17d13003 	ldrbne	r3, [r1, r3]
    96cc:	e203307f 	and	r3, r3, #127	; 0x7f
    96d0:	e7cc3002 	strb	r3, [ip, r2]
    96d4:	e8bd8010 	pop	{r4, pc}
    96d8:	e5d03006 	ldrb	r3, [r0, #6]
    96dc:	e203307f 	and	r3, r3, #127	; 0x7f
    96e0:	e5c03006 	strb	r3, [r0, #6]
    96e4:	e8bd8010 	pop	{r4, pc}
    96e8:	e5d03007 	ldrb	r3, [r0, #7]
    96ec:	e203307f 	and	r3, r3, #127	; 0x7f
    96f0:	e5c03007 	strb	r3, [r0, #7]
    96f4:	e8bd8010 	pop	{r4, pc}
    96f8:	e5d03004 	ldrb	r3, [r0, #4]
    96fc:	e203307f 	and	r3, r3, #127	; 0x7f
    9700:	e5c03004 	strb	r3, [r0, #4]
    9704:	e8bd8010 	pop	{r4, pc}
    9708:	e5d03005 	ldrb	r3, [r0, #5]
    970c:	e203307f 	and	r3, r3, #127	; 0x7f
    9710:	e5c03005 	strb	r3, [r0, #5]
    9714:	e8bd8010 	pop	{r4, pc}
    9718:	e5d03002 	ldrb	r3, [r0, #2]
    971c:	e203307f 	and	r3, r3, #127	; 0x7f
    9720:	e5c03002 	strb	r3, [r0, #2]
    9724:	e8bd8010 	pop	{r4, pc}
    9728:	e5d03003 	ldrb	r3, [r0, #3]
    972c:	e203307f 	and	r3, r3, #127	; 0x7f
    9730:	e5c03003 	strb	r3, [r0, #3]
    9734:	e8bd8010 	pop	{r4, pc}
    9738:	e5d03001 	ldrb	r3, [r0, #1]
    973c:	e3c33040 	bic	r3, r3, #64	; 0x40
    9740:	e5c03001 	strb	r3, [r0, #1]
    9744:	e8bd8010 	pop	{r4, pc}
    9748:	e1d020b6 	ldrh	r2, [r0, #6]
    974c:	e35e0000 	cmp	lr, #0
    9750:	11a03882 	lslne	r3, r2, #17
    9754:	159f12ac 	ldrne	r1, [pc, #684]	; 9a08 <CodesCB+0xc9c>
    9758:	11a038a3 	lsrne	r3, r3, #17
    975c:	07dc3002 	ldrbeq	r3, [ip, r2]
    9760:	17d13003 	ldrbne	r3, [r1, r3]
    9764:	e3c33040 	bic	r3, r3, #64	; 0x40
    9768:	e7cc3002 	strb	r3, [ip, r2]
    976c:	e8bd8010 	pop	{r4, pc}
    9770:	e5d03006 	ldrb	r3, [r0, #6]
    9774:	e3c33040 	bic	r3, r3, #64	; 0x40
    9778:	e5c03006 	strb	r3, [r0, #6]
    977c:	e8bd8010 	pop	{r4, pc}
    9780:	e5d03007 	ldrb	r3, [r0, #7]
    9784:	e3c33040 	bic	r3, r3, #64	; 0x40
    9788:	e5c03007 	strb	r3, [r0, #7]
    978c:	e8bd8010 	pop	{r4, pc}
    9790:	e5d03004 	ldrb	r3, [r0, #4]
    9794:	e3c33040 	bic	r3, r3, #64	; 0x40
    9798:	e5c03004 	strb	r3, [r0, #4]
    979c:	e8bd8010 	pop	{r4, pc}
    97a0:	e5d03005 	ldrb	r3, [r0, #5]
    97a4:	e3c33040 	bic	r3, r3, #64	; 0x40
    97a8:	e5c03005 	strb	r3, [r0, #5]
    97ac:	e8bd8010 	pop	{r4, pc}
    97b0:	e5d03002 	ldrb	r3, [r0, #2]
    97b4:	e3c33040 	bic	r3, r3, #64	; 0x40
    97b8:	e5c03002 	strb	r3, [r0, #2]
    97bc:	e8bd8010 	pop	{r4, pc}
    97c0:	e5d03003 	ldrb	r3, [r0, #3]
    97c4:	e3c33040 	bic	r3, r3, #64	; 0x40
    97c8:	e5c03003 	strb	r3, [r0, #3]
    97cc:	e8bd8010 	pop	{r4, pc}
    97d0:	e5d03001 	ldrb	r3, [r0, #1]
    97d4:	e3c33020 	bic	r3, r3, #32
    97d8:	e5c03001 	strb	r3, [r0, #1]
    97dc:	e8bd8010 	pop	{r4, pc}
    97e0:	e1d020b6 	ldrh	r2, [r0, #6]
    97e4:	e35e0000 	cmp	lr, #0
    97e8:	11a03882 	lslne	r3, r2, #17
    97ec:	159f1214 	ldrne	r1, [pc, #532]	; 9a08 <CodesCB+0xc9c>
    97f0:	11a038a3 	lsrne	r3, r3, #17
    97f4:	07dc3002 	ldrbeq	r3, [ip, r2]
    97f8:	17d13003 	ldrbne	r3, [r1, r3]
    97fc:	e3c33020 	bic	r3, r3, #32
    9800:	e7cc3002 	strb	r3, [ip, r2]
    9804:	e8bd8010 	pop	{r4, pc}
    9808:	e5d03006 	ldrb	r3, [r0, #6]
    980c:	e3c33020 	bic	r3, r3, #32
    9810:	e5c03006 	strb	r3, [r0, #6]
    9814:	e8bd8010 	pop	{r4, pc}
    9818:	e5d03007 	ldrb	r3, [r0, #7]
    981c:	e3c33020 	bic	r3, r3, #32
    9820:	e5c03007 	strb	r3, [r0, #7]
    9824:	e8bd8010 	pop	{r4, pc}
    9828:	e5d03004 	ldrb	r3, [r0, #4]
    982c:	e3c33020 	bic	r3, r3, #32
    9830:	e5c03004 	strb	r3, [r0, #4]
    9834:	e8bd8010 	pop	{r4, pc}
    9838:	e5d03005 	ldrb	r3, [r0, #5]
    983c:	e3c33020 	bic	r3, r3, #32
    9840:	e5c03005 	strb	r3, [r0, #5]
    9844:	e8bd8010 	pop	{r4, pc}
    9848:	e5d03002 	ldrb	r3, [r0, #2]
    984c:	e3c33020 	bic	r3, r3, #32
    9850:	e5c03002 	strb	r3, [r0, #2]
    9854:	e8bd8010 	pop	{r4, pc}
    9858:	e5d03003 	ldrb	r3, [r0, #3]
    985c:	e3c33020 	bic	r3, r3, #32
    9860:	e5c03003 	strb	r3, [r0, #3]
    9864:	e8bd8010 	pop	{r4, pc}
    9868:	e5d03001 	ldrb	r3, [r0, #1]
    986c:	e3c33010 	bic	r3, r3, #16
    9870:	e5c03001 	strb	r3, [r0, #1]
    9874:	e8bd8010 	pop	{r4, pc}
    9878:	e1d020b6 	ldrh	r2, [r0, #6]
    987c:	e35e0000 	cmp	lr, #0
    9880:	11a03882 	lslne	r3, r2, #17
    9884:	159f117c 	ldrne	r1, [pc, #380]	; 9a08 <CodesCB+0xc9c>
    9888:	11a038a3 	lsrne	r3, r3, #17
    988c:	07dc3002 	ldrbeq	r3, [ip, r2]
    9890:	17d13003 	ldrbne	r3, [r1, r3]
    9894:	e3c33010 	bic	r3, r3, #16
    9898:	e7cc3002 	strb	r3, [ip, r2]
    989c:	e8bd8010 	pop	{r4, pc}
    98a0:	e5d03006 	ldrb	r3, [r0, #6]
    98a4:	e3c33010 	bic	r3, r3, #16
    98a8:	e5c03006 	strb	r3, [r0, #6]
    98ac:	e8bd8010 	pop	{r4, pc}
    98b0:	e5d03007 	ldrb	r3, [r0, #7]
    98b4:	e3c33010 	bic	r3, r3, #16
    98b8:	e5c03007 	strb	r3, [r0, #7]
    98bc:	e8bd8010 	pop	{r4, pc}
    98c0:	e5d03004 	ldrb	r3, [r0, #4]
    98c4:	e3c33010 	bic	r3, r3, #16
    98c8:	e5c03004 	strb	r3, [r0, #4]
    98cc:	e8bd8010 	pop	{r4, pc}
    98d0:	e5d03005 	ldrb	r3, [r0, #5]
    98d4:	e3c33010 	bic	r3, r3, #16
    98d8:	e5c03005 	strb	r3, [r0, #5]
    98dc:	e8bd8010 	pop	{r4, pc}
    98e0:	e5d03002 	ldrb	r3, [r0, #2]
    98e4:	e3c33010 	bic	r3, r3, #16
    98e8:	e5c03002 	strb	r3, [r0, #2]
    98ec:	e8bd8010 	pop	{r4, pc}
    98f0:	e5d03003 	ldrb	r3, [r0, #3]
    98f4:	e3c33010 	bic	r3, r3, #16
    98f8:	e5c03003 	strb	r3, [r0, #3]
    98fc:	e8bd8010 	pop	{r4, pc}
    9900:	e5d03001 	ldrb	r3, [r0, #1]
    9904:	e3c33008 	bic	r3, r3, #8
    9908:	e5c03001 	strb	r3, [r0, #1]
    990c:	e8bd8010 	pop	{r4, pc}
    9910:	e1d020b6 	ldrh	r2, [r0, #6]
    9914:	e35e0000 	cmp	lr, #0
    9918:	11a03882 	lslne	r3, r2, #17
    991c:	159f10e4 	ldrne	r1, [pc, #228]	; 9a08 <CodesCB+0xc9c>
    9920:	11a038a3 	lsrne	r3, r3, #17
    9924:	07dc3002 	ldrbeq	r3, [ip, r2]
    9928:	17d13003 	ldrbne	r3, [r1, r3]
    992c:	e3c33008 	bic	r3, r3, #8
    9930:	e7cc3002 	strb	r3, [ip, r2]
    9934:	e8bd8010 	pop	{r4, pc}
    9938:	e5d03006 	ldrb	r3, [r0, #6]
    993c:	e3c33008 	bic	r3, r3, #8
    9940:	e5c03006 	strb	r3, [r0, #6]
    9944:	e8bd8010 	pop	{r4, pc}
    9948:	e5d03007 	ldrb	r3, [r0, #7]
    994c:	e3c33008 	bic	r3, r3, #8
    9950:	e5c03007 	strb	r3, [r0, #7]
    9954:	e8bd8010 	pop	{r4, pc}
    9958:	e5d03004 	ldrb	r3, [r0, #4]
    995c:	e3c33008 	bic	r3, r3, #8
    9960:	e5c03004 	strb	r3, [r0, #4]
    9964:	e8bd8010 	pop	{r4, pc}
    9968:	e5d03005 	ldrb	r3, [r0, #5]
    996c:	e3c33008 	bic	r3, r3, #8
    9970:	e5c03005 	strb	r3, [r0, #5]
    9974:	e8bd8010 	pop	{r4, pc}
    9978:	e5d03002 	ldrb	r3, [r0, #2]
    997c:	e3c33008 	bic	r3, r3, #8
    9980:	e5c03002 	strb	r3, [r0, #2]
    9984:	e8bd8010 	pop	{r4, pc}
    9988:	e5d03003 	ldrb	r3, [r0, #3]
    998c:	e3c33008 	bic	r3, r3, #8
    9990:	e5c03003 	strb	r3, [r0, #3]
    9994:	e8bd8010 	pop	{r4, pc}
    9998:	e5d03001 	ldrb	r3, [r0, #1]
    999c:	e3c33004 	bic	r3, r3, #4
    99a0:	e5c03001 	strb	r3, [r0, #1]
    99a4:	e8bd8010 	pop	{r4, pc}
    99a8:	e1d020b6 	ldrh	r2, [r0, #6]
    99ac:	e35e0000 	cmp	lr, #0
    99b0:	11a03882 	lslne	r3, r2, #17
    99b4:	159f104c 	ldrne	r1, [pc, #76]	; 9a08 <CodesCB+0xc9c>
    99b8:	11a038a3 	lsrne	r3, r3, #17
    99bc:	07dc3002 	ldrbeq	r3, [ip, r2]
    99c0:	17d13003 	ldrbne	r3, [r1, r3]
    99c4:	e3c33004 	bic	r3, r3, #4
    99c8:	e7cc3002 	strb	r3, [ip, r2]
    99cc:	e8bd8010 	pop	{r4, pc}
    99d0:	e5d03006 	ldrb	r3, [r0, #6]
    99d4:	e3c33004 	bic	r3, r3, #4
    99d8:	e5c03006 	strb	r3, [r0, #6]
    99dc:	e8bd8010 	pop	{r4, pc}
    99e0:	e5d03007 	ldrb	r3, [r0, #7]
    99e4:	e3c33004 	bic	r3, r3, #4
    99e8:	e5c03007 	strb	r3, [r0, #7]
    99ec:	e8bd8010 	pop	{r4, pc}
    99f0:	e5d03004 	ldrb	r3, [r0, #4]
    99f4:	e3c33004 	bic	r3, r3, #4
    99f8:	e5c03004 	strb	r3, [r0, #4]
    99fc:	e8bd8010 	pop	{r4, pc}
    9a00:	0005cf80 	.word	0x0005cf80
    9a04:	0003c260 	.word	0x0003c260
    9a08:	00050428 	.word	0x00050428
    9a0c:	e5d03005 	ldrb	r3, [r0, #5]
    9a10:	e3c33004 	bic	r3, r3, #4
    9a14:	e5c03005 	strb	r3, [r0, #5]
    9a18:	e8bd8010 	pop	{r4, pc}
    9a1c:	e5d03002 	ldrb	r3, [r0, #2]
    9a20:	e3c33004 	bic	r3, r3, #4
    9a24:	e5c03002 	strb	r3, [r0, #2]
    9a28:	e8bd8010 	pop	{r4, pc}
    9a2c:	e5d03003 	ldrb	r3, [r0, #3]
    9a30:	e3c33004 	bic	r3, r3, #4
    9a34:	e5c03003 	strb	r3, [r0, #3]
    9a38:	e8bd8010 	pop	{r4, pc}
    9a3c:	e5d03001 	ldrb	r3, [r0, #1]
    9a40:	e3c33002 	bic	r3, r3, #2
    9a44:	e5c03001 	strb	r3, [r0, #1]
    9a48:	e8bd8010 	pop	{r4, pc}
    9a4c:	e1d020b6 	ldrh	r2, [r0, #6]
    9a50:	e35e0000 	cmp	lr, #0
    9a54:	11a03882 	lslne	r3, r2, #17
    9a58:	151f1058 	ldrne	r1, [pc, #-88]	; 9a08 <CodesCB+0xc9c>
    9a5c:	11a038a3 	lsrne	r3, r3, #17
    9a60:	07dc3002 	ldrbeq	r3, [ip, r2]
    9a64:	17d13003 	ldrbne	r3, [r1, r3]
    9a68:	e3c33002 	bic	r3, r3, #2
    9a6c:	e7cc3002 	strb	r3, [ip, r2]
    9a70:	e8bd8010 	pop	{r4, pc}
    9a74:	e5d03006 	ldrb	r3, [r0, #6]
    9a78:	e3c33002 	bic	r3, r3, #2
    9a7c:	e5c03006 	strb	r3, [r0, #6]
    9a80:	e8bd8010 	pop	{r4, pc}
    9a84:	e5d03007 	ldrb	r3, [r0, #7]
    9a88:	e3c33002 	bic	r3, r3, #2
    9a8c:	e5c03007 	strb	r3, [r0, #7]
    9a90:	e8bd8010 	pop	{r4, pc}
    9a94:	e5d03004 	ldrb	r3, [r0, #4]
    9a98:	e3c33002 	bic	r3, r3, #2
    9a9c:	e5c03004 	strb	r3, [r0, #4]
    9aa0:	e8bd8010 	pop	{r4, pc}
    9aa4:	e5d03005 	ldrb	r3, [r0, #5]
    9aa8:	e3c33002 	bic	r3, r3, #2
    9aac:	e5c03005 	strb	r3, [r0, #5]
    9ab0:	e8bd8010 	pop	{r4, pc}
    9ab4:	e5d03002 	ldrb	r3, [r0, #2]
    9ab8:	e3c33002 	bic	r3, r3, #2
    9abc:	e5c03002 	strb	r3, [r0, #2]
    9ac0:	e8bd8010 	pop	{r4, pc}
    9ac4:	e5d03003 	ldrb	r3, [r0, #3]
    9ac8:	e3c33002 	bic	r3, r3, #2
    9acc:	e5c03003 	strb	r3, [r0, #3]
    9ad0:	e8bd8010 	pop	{r4, pc}
    9ad4:	e5d03001 	ldrb	r3, [r0, #1]
    9ad8:	e3c33001 	bic	r3, r3, #1
    9adc:	e5c03001 	strb	r3, [r0, #1]
    9ae0:	e8bd8010 	pop	{r4, pc}
    9ae4:	e1d020b6 	ldrh	r2, [r0, #6]
    9ae8:	e35e0000 	cmp	lr, #0
    9aec:	11a03882 	lslne	r3, r2, #17
    9af0:	151f10f0 	ldrne	r1, [pc, #-240]	; 9a08 <CodesCB+0xc9c>
    9af4:	11a038a3 	lsrne	r3, r3, #17
    9af8:	07dc3002 	ldrbeq	r3, [ip, r2]
    9afc:	17d13003 	ldrbne	r3, [r1, r3]
    9b00:	e3c33001 	bic	r3, r3, #1
    9b04:	e7cc3002 	strb	r3, [ip, r2]
    9b08:	e8bd8010 	pop	{r4, pc}
    9b0c:	e5d03006 	ldrb	r3, [r0, #6]
    9b10:	e3c33001 	bic	r3, r3, #1
    9b14:	e5c03006 	strb	r3, [r0, #6]
    9b18:	e8bd8010 	pop	{r4, pc}
    9b1c:	e5d03007 	ldrb	r3, [r0, #7]
    9b20:	e3c33001 	bic	r3, r3, #1
    9b24:	e5c03007 	strb	r3, [r0, #7]
    9b28:	e8bd8010 	pop	{r4, pc}
    9b2c:	e5d03004 	ldrb	r3, [r0, #4]
    9b30:	e3c33001 	bic	r3, r3, #1
    9b34:	e5c03004 	strb	r3, [r0, #4]
    9b38:	e8bd8010 	pop	{r4, pc}
    9b3c:	e5d03005 	ldrb	r3, [r0, #5]
    9b40:	e3c33001 	bic	r3, r3, #1
    9b44:	e5c03005 	strb	r3, [r0, #5]
    9b48:	e8bd8010 	pop	{r4, pc}
    9b4c:	e5d03002 	ldrb	r3, [r0, #2]
    9b50:	e3c33001 	bic	r3, r3, #1
    9b54:	e5c03002 	strb	r3, [r0, #2]
    9b58:	e8bd8010 	pop	{r4, pc}
    9b5c:	e5d03003 	ldrb	r3, [r0, #3]
    9b60:	e3c33001 	bic	r3, r3, #1
    9b64:	e5c03003 	strb	r3, [r0, #3]
    9b68:	e8bd8010 	pop	{r4, pc}
    9b6c:	e5d02001 	ldrb	r2, [r0, #1]
    9b70:	e5d03000 	ldrb	r3, [r0]
    9b74:	e2022080 	and	r2, r2, #128	; 0x80
    9b78:	e0811002 	add	r1, r1, r2
    9b7c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9b80:	e2033001 	and	r3, r3, #1
    9b84:	e3833010 	orr	r3, r3, #16
    9b88:	e1823003 	orr	r3, r2, r3
    9b8c:	e5c03000 	strb	r3, [r0]
    9b90:	e8bd8010 	pop	{r4, pc}
    9b94:	e1d030b6 	ldrh	r3, [r0, #6]
    9b98:	e35e0000 	cmp	lr, #0
    9b9c:	11a03883 	lslne	r3, r3, #17
    9ba0:	151f21a0 	ldrne	r2, [pc, #-416]	; 9a08 <CodesCB+0xc9c>
    9ba4:	11a038a3 	lsrne	r3, r3, #17
    9ba8:	17d22003 	ldrbne	r2, [r2, r3]
    9bac:	07dc2003 	ldrbeq	r2, [ip, r3]
    9bb0:	e5d03000 	ldrb	r3, [r0]
    9bb4:	e2022080 	and	r2, r2, #128	; 0x80
    9bb8:	e0811002 	add	r1, r1, r2
    9bbc:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9bc0:	e2033001 	and	r3, r3, #1
    9bc4:	e3833010 	orr	r3, r3, #16
    9bc8:	e1833002 	orr	r3, r3, r2
    9bcc:	e5c03000 	strb	r3, [r0]
    9bd0:	e8bd8010 	pop	{r4, pc}
    9bd4:	e5d02006 	ldrb	r2, [r0, #6]
    9bd8:	e5d03000 	ldrb	r3, [r0]
    9bdc:	e2022080 	and	r2, r2, #128	; 0x80
    9be0:	e0811002 	add	r1, r1, r2
    9be4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9be8:	e2033001 	and	r3, r3, #1
    9bec:	e3833010 	orr	r3, r3, #16
    9bf0:	e1823003 	orr	r3, r2, r3
    9bf4:	e5c03000 	strb	r3, [r0]
    9bf8:	e8bd8010 	pop	{r4, pc}
    9bfc:	e5d02007 	ldrb	r2, [r0, #7]
    9c00:	e5d03000 	ldrb	r3, [r0]
    9c04:	e2022080 	and	r2, r2, #128	; 0x80
    9c08:	e0811002 	add	r1, r1, r2
    9c0c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9c10:	e2033001 	and	r3, r3, #1
    9c14:	e3833010 	orr	r3, r3, #16
    9c18:	e1823003 	orr	r3, r2, r3
    9c1c:	e5c03000 	strb	r3, [r0]
    9c20:	e8bd8010 	pop	{r4, pc}
    9c24:	e5d02004 	ldrb	r2, [r0, #4]
    9c28:	e5d03000 	ldrb	r3, [r0]
    9c2c:	e2022080 	and	r2, r2, #128	; 0x80
    9c30:	e0811002 	add	r1, r1, r2
    9c34:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9c38:	e2033001 	and	r3, r3, #1
    9c3c:	e3833010 	orr	r3, r3, #16
    9c40:	e1823003 	orr	r3, r2, r3
    9c44:	e5c03000 	strb	r3, [r0]
    9c48:	e8bd8010 	pop	{r4, pc}
    9c4c:	e5d02005 	ldrb	r2, [r0, #5]
    9c50:	e5d03000 	ldrb	r3, [r0]
    9c54:	e2022080 	and	r2, r2, #128	; 0x80
    9c58:	e0811002 	add	r1, r1, r2
    9c5c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9c60:	e2033001 	and	r3, r3, #1
    9c64:	e3833010 	orr	r3, r3, #16
    9c68:	e1823003 	orr	r3, r2, r3
    9c6c:	e5c03000 	strb	r3, [r0]
    9c70:	e8bd8010 	pop	{r4, pc}
    9c74:	e5d02002 	ldrb	r2, [r0, #2]
    9c78:	e5d03000 	ldrb	r3, [r0]
    9c7c:	e2022080 	and	r2, r2, #128	; 0x80
    9c80:	e0811002 	add	r1, r1, r2
    9c84:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9c88:	e2033001 	and	r3, r3, #1
    9c8c:	e3833010 	orr	r3, r3, #16
    9c90:	e1823003 	orr	r3, r2, r3
    9c94:	e5c03000 	strb	r3, [r0]
    9c98:	e8bd8010 	pop	{r4, pc}
    9c9c:	e5d02003 	ldrb	r2, [r0, #3]
    9ca0:	e5d03000 	ldrb	r3, [r0]
    9ca4:	e2022080 	and	r2, r2, #128	; 0x80
    9ca8:	e0811002 	add	r1, r1, r2
    9cac:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9cb0:	e2033001 	and	r3, r3, #1
    9cb4:	e3833010 	orr	r3, r3, #16
    9cb8:	e1823003 	orr	r3, r2, r3
    9cbc:	e5c03000 	strb	r3, [r0]
    9cc0:	e8bd8010 	pop	{r4, pc}
    9cc4:	e5d02001 	ldrb	r2, [r0, #1]
    9cc8:	e5d03000 	ldrb	r3, [r0]
    9ccc:	e2022040 	and	r2, r2, #64	; 0x40
    9cd0:	e0811002 	add	r1, r1, r2
    9cd4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9cd8:	e2033001 	and	r3, r3, #1
    9cdc:	e3833010 	orr	r3, r3, #16
    9ce0:	e1823003 	orr	r3, r2, r3
    9ce4:	e5c03000 	strb	r3, [r0]
    9ce8:	e8bd8010 	pop	{r4, pc}
    9cec:	e1d030b6 	ldrh	r3, [r0, #6]
    9cf0:	e35e0000 	cmp	lr, #0
    9cf4:	11a03883 	lslne	r3, r3, #17
    9cf8:	151f22f8 	ldrne	r2, [pc, #-760]	; 9a08 <CodesCB+0xc9c>
    9cfc:	11a038a3 	lsrne	r3, r3, #17
    9d00:	17d22003 	ldrbne	r2, [r2, r3]
    9d04:	07dc2003 	ldrbeq	r2, [ip, r3]
    9d08:	e5d03000 	ldrb	r3, [r0]
    9d0c:	e2022040 	and	r2, r2, #64	; 0x40
    9d10:	e0811002 	add	r1, r1, r2
    9d14:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9d18:	e2033001 	and	r3, r3, #1
    9d1c:	e3833010 	orr	r3, r3, #16
    9d20:	e1833002 	orr	r3, r3, r2
    9d24:	e5c03000 	strb	r3, [r0]
    9d28:	e8bd8010 	pop	{r4, pc}
    9d2c:	e5d02006 	ldrb	r2, [r0, #6]
    9d30:	e5d03000 	ldrb	r3, [r0]
    9d34:	e2022040 	and	r2, r2, #64	; 0x40
    9d38:	e0811002 	add	r1, r1, r2
    9d3c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9d40:	e2033001 	and	r3, r3, #1
    9d44:	e3833010 	orr	r3, r3, #16
    9d48:	e1823003 	orr	r3, r2, r3
    9d4c:	e5c03000 	strb	r3, [r0]
    9d50:	e8bd8010 	pop	{r4, pc}
    9d54:	e5d02007 	ldrb	r2, [r0, #7]
    9d58:	e5d03000 	ldrb	r3, [r0]
    9d5c:	e2022040 	and	r2, r2, #64	; 0x40
    9d60:	e0811002 	add	r1, r1, r2
    9d64:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9d68:	e2033001 	and	r3, r3, #1
    9d6c:	e3833010 	orr	r3, r3, #16
    9d70:	e1823003 	orr	r3, r2, r3
    9d74:	e5c03000 	strb	r3, [r0]
    9d78:	e8bd8010 	pop	{r4, pc}
    9d7c:	e5d02004 	ldrb	r2, [r0, #4]
    9d80:	e5d03000 	ldrb	r3, [r0]
    9d84:	e2022040 	and	r2, r2, #64	; 0x40
    9d88:	e0811002 	add	r1, r1, r2
    9d8c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9d90:	e2033001 	and	r3, r3, #1
    9d94:	e3833010 	orr	r3, r3, #16
    9d98:	e1823003 	orr	r3, r2, r3
    9d9c:	e5c03000 	strb	r3, [r0]
    9da0:	e8bd8010 	pop	{r4, pc}
    9da4:	e5d02005 	ldrb	r2, [r0, #5]
    9da8:	e5d03000 	ldrb	r3, [r0]
    9dac:	e2022040 	and	r2, r2, #64	; 0x40
    9db0:	e0811002 	add	r1, r1, r2
    9db4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9db8:	e2033001 	and	r3, r3, #1
    9dbc:	e3833010 	orr	r3, r3, #16
    9dc0:	e1823003 	orr	r3, r2, r3
    9dc4:	e5c03000 	strb	r3, [r0]
    9dc8:	e8bd8010 	pop	{r4, pc}
    9dcc:	e5d02002 	ldrb	r2, [r0, #2]
    9dd0:	e5d03000 	ldrb	r3, [r0]
    9dd4:	e2022040 	and	r2, r2, #64	; 0x40
    9dd8:	e0811002 	add	r1, r1, r2
    9ddc:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9de0:	e2033001 	and	r3, r3, #1
    9de4:	e3833010 	orr	r3, r3, #16
    9de8:	e1823003 	orr	r3, r2, r3
    9dec:	e5c03000 	strb	r3, [r0]
    9df0:	e8bd8010 	pop	{r4, pc}
    9df4:	e5d02003 	ldrb	r2, [r0, #3]
    9df8:	e5d03000 	ldrb	r3, [r0]
    9dfc:	e2022040 	and	r2, r2, #64	; 0x40
    9e00:	e0811002 	add	r1, r1, r2
    9e04:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9e08:	e2033001 	and	r3, r3, #1
    9e0c:	e3833010 	orr	r3, r3, #16
    9e10:	e1823003 	orr	r3, r2, r3
    9e14:	e5c03000 	strb	r3, [r0]
    9e18:	e8bd8010 	pop	{r4, pc}
    9e1c:	e5d02001 	ldrb	r2, [r0, #1]
    9e20:	e5d03000 	ldrb	r3, [r0]
    9e24:	e2022020 	and	r2, r2, #32
    9e28:	e0811002 	add	r1, r1, r2
    9e2c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9e30:	e2033001 	and	r3, r3, #1
    9e34:	e3833010 	orr	r3, r3, #16
    9e38:	e1823003 	orr	r3, r2, r3
    9e3c:	e5c03000 	strb	r3, [r0]
    9e40:	e8bd8010 	pop	{r4, pc}
    9e44:	e1d030b6 	ldrh	r3, [r0, #6]
    9e48:	e35e0000 	cmp	lr, #0
    9e4c:	11a03883 	lslne	r3, r3, #17
    9e50:	151f2450 	ldrne	r2, [pc, #-1104]	; 9a08 <CodesCB+0xc9c>
    9e54:	11a038a3 	lsrne	r3, r3, #17
    9e58:	17d22003 	ldrbne	r2, [r2, r3]
    9e5c:	07dc2003 	ldrbeq	r2, [ip, r3]
    9e60:	e5d03000 	ldrb	r3, [r0]
    9e64:	e2022020 	and	r2, r2, #32
    9e68:	e0811002 	add	r1, r1, r2
    9e6c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9e70:	e2033001 	and	r3, r3, #1
    9e74:	e3833010 	orr	r3, r3, #16
    9e78:	e1833002 	orr	r3, r3, r2
    9e7c:	e5c03000 	strb	r3, [r0]
    9e80:	e8bd8010 	pop	{r4, pc}
    9e84:	e5d02006 	ldrb	r2, [r0, #6]
    9e88:	e5d03000 	ldrb	r3, [r0]
    9e8c:	e2022020 	and	r2, r2, #32
    9e90:	e0811002 	add	r1, r1, r2
    9e94:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9e98:	e2033001 	and	r3, r3, #1
    9e9c:	e3833010 	orr	r3, r3, #16
    9ea0:	e1823003 	orr	r3, r2, r3
    9ea4:	e5c03000 	strb	r3, [r0]
    9ea8:	e8bd8010 	pop	{r4, pc}
    9eac:	e5d02007 	ldrb	r2, [r0, #7]
    9eb0:	e5d03000 	ldrb	r3, [r0]
    9eb4:	e2022020 	and	r2, r2, #32
    9eb8:	e0811002 	add	r1, r1, r2
    9ebc:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9ec0:	e2033001 	and	r3, r3, #1
    9ec4:	e3833010 	orr	r3, r3, #16
    9ec8:	e1823003 	orr	r3, r2, r3
    9ecc:	e5c03000 	strb	r3, [r0]
    9ed0:	e8bd8010 	pop	{r4, pc}
    9ed4:	e5d02004 	ldrb	r2, [r0, #4]
    9ed8:	e5d03000 	ldrb	r3, [r0]
    9edc:	e2022020 	and	r2, r2, #32
    9ee0:	e0811002 	add	r1, r1, r2
    9ee4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9ee8:	e2033001 	and	r3, r3, #1
    9eec:	e3833010 	orr	r3, r3, #16
    9ef0:	e1823003 	orr	r3, r2, r3
    9ef4:	e5c03000 	strb	r3, [r0]
    9ef8:	e8bd8010 	pop	{r4, pc}
    9efc:	e5d02005 	ldrb	r2, [r0, #5]
    9f00:	e5d03000 	ldrb	r3, [r0]
    9f04:	e2022020 	and	r2, r2, #32
    9f08:	e0811002 	add	r1, r1, r2
    9f0c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9f10:	e2033001 	and	r3, r3, #1
    9f14:	e3833010 	orr	r3, r3, #16
    9f18:	e1823003 	orr	r3, r2, r3
    9f1c:	e5c03000 	strb	r3, [r0]
    9f20:	e8bd8010 	pop	{r4, pc}
    9f24:	e5d02002 	ldrb	r2, [r0, #2]
    9f28:	e5d03000 	ldrb	r3, [r0]
    9f2c:	e2022020 	and	r2, r2, #32
    9f30:	e0811002 	add	r1, r1, r2
    9f34:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9f38:	e2033001 	and	r3, r3, #1
    9f3c:	e3833010 	orr	r3, r3, #16
    9f40:	e1823003 	orr	r3, r2, r3
    9f44:	e5c03000 	strb	r3, [r0]
    9f48:	e8bd8010 	pop	{r4, pc}
    9f4c:	e5d02003 	ldrb	r2, [r0, #3]
    9f50:	e5d03000 	ldrb	r3, [r0]
    9f54:	e2022020 	and	r2, r2, #32
    9f58:	e0811002 	add	r1, r1, r2
    9f5c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9f60:	e2033001 	and	r3, r3, #1
    9f64:	e3833010 	orr	r3, r3, #16
    9f68:	e1823003 	orr	r3, r2, r3
    9f6c:	e5c03000 	strb	r3, [r0]
    9f70:	e8bd8010 	pop	{r4, pc}
    9f74:	e5d02001 	ldrb	r2, [r0, #1]
    9f78:	e5d03000 	ldrb	r3, [r0]
    9f7c:	e2022010 	and	r2, r2, #16
    9f80:	e0811002 	add	r1, r1, r2
    9f84:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9f88:	e2033001 	and	r3, r3, #1
    9f8c:	e3833010 	orr	r3, r3, #16
    9f90:	e1823003 	orr	r3, r2, r3
    9f94:	e5c03000 	strb	r3, [r0]
    9f98:	e8bd8010 	pop	{r4, pc}
    9f9c:	e1d030b6 	ldrh	r3, [r0, #6]
    9fa0:	e35e0000 	cmp	lr, #0
    9fa4:	11a03883 	lslne	r3, r3, #17
    9fa8:	151f25a8 	ldrne	r2, [pc, #-1448]	; 9a08 <CodesCB+0xc9c>
    9fac:	11a038a3 	lsrne	r3, r3, #17
    9fb0:	17d22003 	ldrbne	r2, [r2, r3]
    9fb4:	07dc2003 	ldrbeq	r2, [ip, r3]
    9fb8:	e5d03000 	ldrb	r3, [r0]
    9fbc:	e2022010 	and	r2, r2, #16
    9fc0:	e0811002 	add	r1, r1, r2
    9fc4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9fc8:	e2033001 	and	r3, r3, #1
    9fcc:	e3833010 	orr	r3, r3, #16
    9fd0:	e1833002 	orr	r3, r3, r2
    9fd4:	e5c03000 	strb	r3, [r0]
    9fd8:	e8bd8010 	pop	{r4, pc}
    9fdc:	e5d02006 	ldrb	r2, [r0, #6]
    9fe0:	e5d03000 	ldrb	r3, [r0]
    9fe4:	e2022010 	and	r2, r2, #16
    9fe8:	e0811002 	add	r1, r1, r2
    9fec:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    9ff0:	e2033001 	and	r3, r3, #1
    9ff4:	e3833010 	orr	r3, r3, #16
    9ff8:	e1823003 	orr	r3, r2, r3
    9ffc:	e5c03000 	strb	r3, [r0]
    a000:	e8bd8010 	pop	{r4, pc}
    a004:	e5d02007 	ldrb	r2, [r0, #7]
    a008:	e5d03000 	ldrb	r3, [r0]
    a00c:	e2022010 	and	r2, r2, #16
    a010:	e0811002 	add	r1, r1, r2
    a014:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a018:	e2033001 	and	r3, r3, #1
    a01c:	e3833010 	orr	r3, r3, #16
    a020:	e1823003 	orr	r3, r2, r3
    a024:	e5c03000 	strb	r3, [r0]
    a028:	e8bd8010 	pop	{r4, pc}
    a02c:	e5d02004 	ldrb	r2, [r0, #4]
    a030:	e5d03000 	ldrb	r3, [r0]
    a034:	e2022010 	and	r2, r2, #16
    a038:	e0811002 	add	r1, r1, r2
    a03c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a040:	e2033001 	and	r3, r3, #1
    a044:	e3833010 	orr	r3, r3, #16
    a048:	e1823003 	orr	r3, r2, r3
    a04c:	e5c03000 	strb	r3, [r0]
    a050:	e8bd8010 	pop	{r4, pc}
    a054:	e5d02005 	ldrb	r2, [r0, #5]
    a058:	e5d03000 	ldrb	r3, [r0]
    a05c:	e2022010 	and	r2, r2, #16
    a060:	e0811002 	add	r1, r1, r2
    a064:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a068:	e2033001 	and	r3, r3, #1
    a06c:	e3833010 	orr	r3, r3, #16
    a070:	e1823003 	orr	r3, r2, r3
    a074:	e5c03000 	strb	r3, [r0]
    a078:	e8bd8010 	pop	{r4, pc}
    a07c:	e5d02002 	ldrb	r2, [r0, #2]
    a080:	e5d03000 	ldrb	r3, [r0]
    a084:	e2022010 	and	r2, r2, #16
    a088:	e0811002 	add	r1, r1, r2
    a08c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a090:	e2033001 	and	r3, r3, #1
    a094:	e3833010 	orr	r3, r3, #16
    a098:	e1823003 	orr	r3, r2, r3
    a09c:	e5c03000 	strb	r3, [r0]
    a0a0:	e8bd8010 	pop	{r4, pc}
    a0a4:	e5d02003 	ldrb	r2, [r0, #3]
    a0a8:	e5d03000 	ldrb	r3, [r0]
    a0ac:	e2022010 	and	r2, r2, #16
    a0b0:	e0811002 	add	r1, r1, r2
    a0b4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a0b8:	e2033001 	and	r3, r3, #1
    a0bc:	e3833010 	orr	r3, r3, #16
    a0c0:	e1823003 	orr	r3, r2, r3
    a0c4:	e5c03000 	strb	r3, [r0]
    a0c8:	e8bd8010 	pop	{r4, pc}
    a0cc:	e5d02001 	ldrb	r2, [r0, #1]
    a0d0:	e5d03000 	ldrb	r3, [r0]
    a0d4:	e2022008 	and	r2, r2, #8
    a0d8:	e0811002 	add	r1, r1, r2
    a0dc:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a0e0:	e2033001 	and	r3, r3, #1
    a0e4:	e3833010 	orr	r3, r3, #16
    a0e8:	e1823003 	orr	r3, r2, r3
    a0ec:	e5c03000 	strb	r3, [r0]
    a0f0:	e8bd8010 	pop	{r4, pc}
    a0f4:	e1d030b6 	ldrh	r3, [r0, #6]
    a0f8:	e35e0000 	cmp	lr, #0
    a0fc:	11a03883 	lslne	r3, r3, #17
    a100:	151f2700 	ldrne	r2, [pc, #-1792]	; 9a08 <CodesCB+0xc9c>
    a104:	11a038a3 	lsrne	r3, r3, #17
    a108:	17d22003 	ldrbne	r2, [r2, r3]
    a10c:	07dc2003 	ldrbeq	r2, [ip, r3]
    a110:	e5d03000 	ldrb	r3, [r0]
    a114:	e2022008 	and	r2, r2, #8
    a118:	e0811002 	add	r1, r1, r2
    a11c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a120:	e2033001 	and	r3, r3, #1
    a124:	e3833010 	orr	r3, r3, #16
    a128:	e1833002 	orr	r3, r3, r2
    a12c:	e5c03000 	strb	r3, [r0]
    a130:	e8bd8010 	pop	{r4, pc}
    a134:	e5d02006 	ldrb	r2, [r0, #6]
    a138:	e5d03000 	ldrb	r3, [r0]
    a13c:	e2022008 	and	r2, r2, #8
    a140:	e0811002 	add	r1, r1, r2
    a144:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a148:	e2033001 	and	r3, r3, #1
    a14c:	e3833010 	orr	r3, r3, #16
    a150:	e1823003 	orr	r3, r2, r3
    a154:	e5c03000 	strb	r3, [r0]
    a158:	e8bd8010 	pop	{r4, pc}
    a15c:	e5d02007 	ldrb	r2, [r0, #7]
    a160:	e5d03000 	ldrb	r3, [r0]
    a164:	e2022008 	and	r2, r2, #8
    a168:	e0811002 	add	r1, r1, r2
    a16c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a170:	e2033001 	and	r3, r3, #1
    a174:	e3833010 	orr	r3, r3, #16
    a178:	e1823003 	orr	r3, r2, r3
    a17c:	e5c03000 	strb	r3, [r0]
    a180:	e8bd8010 	pop	{r4, pc}
    a184:	e5d02004 	ldrb	r2, [r0, #4]
    a188:	e5d03000 	ldrb	r3, [r0]
    a18c:	e2022008 	and	r2, r2, #8
    a190:	e0811002 	add	r1, r1, r2
    a194:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a198:	e2033001 	and	r3, r3, #1
    a19c:	e3833010 	orr	r3, r3, #16
    a1a0:	e1823003 	orr	r3, r2, r3
    a1a4:	e5c03000 	strb	r3, [r0]
    a1a8:	e8bd8010 	pop	{r4, pc}
    a1ac:	e5d02005 	ldrb	r2, [r0, #5]
    a1b0:	e5d03000 	ldrb	r3, [r0]
    a1b4:	e2022008 	and	r2, r2, #8
    a1b8:	e0811002 	add	r1, r1, r2
    a1bc:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a1c0:	e2033001 	and	r3, r3, #1
    a1c4:	e3833010 	orr	r3, r3, #16
    a1c8:	e1823003 	orr	r3, r2, r3
    a1cc:	e5c03000 	strb	r3, [r0]
    a1d0:	e8bd8010 	pop	{r4, pc}
    a1d4:	e5d02002 	ldrb	r2, [r0, #2]
    a1d8:	e5d03000 	ldrb	r3, [r0]
    a1dc:	e2022008 	and	r2, r2, #8
    a1e0:	e0811002 	add	r1, r1, r2
    a1e4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a1e8:	e2033001 	and	r3, r3, #1
    a1ec:	e3833010 	orr	r3, r3, #16
    a1f0:	e1823003 	orr	r3, r2, r3
    a1f4:	e5c03000 	strb	r3, [r0]
    a1f8:	e8bd8010 	pop	{r4, pc}
    a1fc:	e5d02003 	ldrb	r2, [r0, #3]
    a200:	e5d03000 	ldrb	r3, [r0]
    a204:	e2022008 	and	r2, r2, #8
    a208:	e0811002 	add	r1, r1, r2
    a20c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a210:	e2033001 	and	r3, r3, #1
    a214:	e3833010 	orr	r3, r3, #16
    a218:	e1823003 	orr	r3, r2, r3
    a21c:	e5c03000 	strb	r3, [r0]
    a220:	e8bd8010 	pop	{r4, pc}
    a224:	e5d02001 	ldrb	r2, [r0, #1]
    a228:	e5d03000 	ldrb	r3, [r0]
    a22c:	e2022004 	and	r2, r2, #4
    a230:	e0811002 	add	r1, r1, r2
    a234:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a238:	e2033001 	and	r3, r3, #1
    a23c:	e3833010 	orr	r3, r3, #16
    a240:	e1823003 	orr	r3, r2, r3
    a244:	e5c03000 	strb	r3, [r0]
    a248:	e8bd8010 	pop	{r4, pc}
    a24c:	e1d030b6 	ldrh	r3, [r0, #6]
    a250:	e35e0000 	cmp	lr, #0
    a254:	11a03883 	lslne	r3, r3, #17
    a258:	151f2858 	ldrne	r2, [pc, #-2136]	; 9a08 <CodesCB+0xc9c>
    a25c:	11a038a3 	lsrne	r3, r3, #17
    a260:	17d22003 	ldrbne	r2, [r2, r3]
    a264:	07dc2003 	ldrbeq	r2, [ip, r3]
    a268:	e5d03000 	ldrb	r3, [r0]
    a26c:	e2022004 	and	r2, r2, #4
    a270:	e0811002 	add	r1, r1, r2
    a274:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a278:	e2033001 	and	r3, r3, #1
    a27c:	e3833010 	orr	r3, r3, #16
    a280:	e1833002 	orr	r3, r3, r2
    a284:	e5c03000 	strb	r3, [r0]
    a288:	e8bd8010 	pop	{r4, pc}
    a28c:	e5d02006 	ldrb	r2, [r0, #6]
    a290:	e5d03000 	ldrb	r3, [r0]
    a294:	e2022004 	and	r2, r2, #4
    a298:	e0811002 	add	r1, r1, r2
    a29c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a2a0:	e2033001 	and	r3, r3, #1
    a2a4:	e3833010 	orr	r3, r3, #16
    a2a8:	e1823003 	orr	r3, r2, r3
    a2ac:	e5c03000 	strb	r3, [r0]
    a2b0:	e8bd8010 	pop	{r4, pc}
    a2b4:	e5d02007 	ldrb	r2, [r0, #7]
    a2b8:	e5d03000 	ldrb	r3, [r0]
    a2bc:	e2022004 	and	r2, r2, #4
    a2c0:	e0811002 	add	r1, r1, r2
    a2c4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a2c8:	e2033001 	and	r3, r3, #1
    a2cc:	e3833010 	orr	r3, r3, #16
    a2d0:	e1823003 	orr	r3, r2, r3
    a2d4:	e5c03000 	strb	r3, [r0]
    a2d8:	e8bd8010 	pop	{r4, pc}
    a2dc:	e5d02004 	ldrb	r2, [r0, #4]
    a2e0:	e5d03000 	ldrb	r3, [r0]
    a2e4:	e2022004 	and	r2, r2, #4
    a2e8:	e0811002 	add	r1, r1, r2
    a2ec:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a2f0:	e2033001 	and	r3, r3, #1
    a2f4:	e3833010 	orr	r3, r3, #16
    a2f8:	e1823003 	orr	r3, r2, r3
    a2fc:	e5c03000 	strb	r3, [r0]
    a300:	e8bd8010 	pop	{r4, pc}
    a304:	e5d02005 	ldrb	r2, [r0, #5]
    a308:	e5d03000 	ldrb	r3, [r0]
    a30c:	e2022004 	and	r2, r2, #4
    a310:	e0811002 	add	r1, r1, r2
    a314:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a318:	e2033001 	and	r3, r3, #1
    a31c:	e3833010 	orr	r3, r3, #16
    a320:	e1823003 	orr	r3, r2, r3
    a324:	e5c03000 	strb	r3, [r0]
    a328:	e8bd8010 	pop	{r4, pc}
    a32c:	e5d02002 	ldrb	r2, [r0, #2]
    a330:	e5d03000 	ldrb	r3, [r0]
    a334:	e2022004 	and	r2, r2, #4
    a338:	e0811002 	add	r1, r1, r2
    a33c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a340:	e2033001 	and	r3, r3, #1
    a344:	e3833010 	orr	r3, r3, #16
    a348:	e1823003 	orr	r3, r2, r3
    a34c:	e5c03000 	strb	r3, [r0]
    a350:	e8bd8010 	pop	{r4, pc}
    a354:	e5d02003 	ldrb	r2, [r0, #3]
    a358:	e5d03000 	ldrb	r3, [r0]
    a35c:	e2022004 	and	r2, r2, #4
    a360:	e0811002 	add	r1, r1, r2
    a364:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a368:	e2033001 	and	r3, r3, #1
    a36c:	e3833010 	orr	r3, r3, #16
    a370:	e1823003 	orr	r3, r2, r3
    a374:	e5c03000 	strb	r3, [r0]
    a378:	e8bd8010 	pop	{r4, pc}
    a37c:	e5d02001 	ldrb	r2, [r0, #1]
    a380:	e5d03000 	ldrb	r3, [r0]
    a384:	e2022002 	and	r2, r2, #2
    a388:	e0811002 	add	r1, r1, r2
    a38c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a390:	e2033001 	and	r3, r3, #1
    a394:	e3833010 	orr	r3, r3, #16
    a398:	e1823003 	orr	r3, r2, r3
    a39c:	e5c03000 	strb	r3, [r0]
    a3a0:	e8bd8010 	pop	{r4, pc}
    a3a4:	e1d030b6 	ldrh	r3, [r0, #6]
    a3a8:	e35e0000 	cmp	lr, #0
    a3ac:	11a03883 	lslne	r3, r3, #17
    a3b0:	151f29b0 	ldrne	r2, [pc, #-2480]	; 9a08 <CodesCB+0xc9c>
    a3b4:	11a038a3 	lsrne	r3, r3, #17
    a3b8:	17d22003 	ldrbne	r2, [r2, r3]
    a3bc:	07dc2003 	ldrbeq	r2, [ip, r3]
    a3c0:	e5d03000 	ldrb	r3, [r0]
    a3c4:	e2022002 	and	r2, r2, #2
    a3c8:	e0811002 	add	r1, r1, r2
    a3cc:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a3d0:	e2033001 	and	r3, r3, #1
    a3d4:	e3833010 	orr	r3, r3, #16
    a3d8:	e1833002 	orr	r3, r3, r2
    a3dc:	e5c03000 	strb	r3, [r0]
    a3e0:	e8bd8010 	pop	{r4, pc}
    a3e4:	e5d02006 	ldrb	r2, [r0, #6]
    a3e8:	e5d03000 	ldrb	r3, [r0]
    a3ec:	e2022002 	and	r2, r2, #2
    a3f0:	e0811002 	add	r1, r1, r2
    a3f4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a3f8:	e2033001 	and	r3, r3, #1
    a3fc:	e3833010 	orr	r3, r3, #16
    a400:	e1823003 	orr	r3, r2, r3
    a404:	e5c03000 	strb	r3, [r0]
    a408:	e8bd8010 	pop	{r4, pc}
    a40c:	e5d02007 	ldrb	r2, [r0, #7]
    a410:	e5d03000 	ldrb	r3, [r0]
    a414:	e2022002 	and	r2, r2, #2
    a418:	e0811002 	add	r1, r1, r2
    a41c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a420:	e2033001 	and	r3, r3, #1
    a424:	e3833010 	orr	r3, r3, #16
    a428:	e1823003 	orr	r3, r2, r3
    a42c:	e5c03000 	strb	r3, [r0]
    a430:	e8bd8010 	pop	{r4, pc}
    a434:	e5d02004 	ldrb	r2, [r0, #4]
    a438:	e5d03000 	ldrb	r3, [r0]
    a43c:	e2022002 	and	r2, r2, #2
    a440:	e0811002 	add	r1, r1, r2
    a444:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a448:	e2033001 	and	r3, r3, #1
    a44c:	e3833010 	orr	r3, r3, #16
    a450:	e1823003 	orr	r3, r2, r3
    a454:	e5c03000 	strb	r3, [r0]
    a458:	e8bd8010 	pop	{r4, pc}
    a45c:	e5d02005 	ldrb	r2, [r0, #5]
    a460:	e5d03000 	ldrb	r3, [r0]
    a464:	e2022002 	and	r2, r2, #2
    a468:	e0811002 	add	r1, r1, r2
    a46c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a470:	e2033001 	and	r3, r3, #1
    a474:	e3833010 	orr	r3, r3, #16
    a478:	e1823003 	orr	r3, r2, r3
    a47c:	e5c03000 	strb	r3, [r0]
    a480:	e8bd8010 	pop	{r4, pc}
    a484:	e5d02002 	ldrb	r2, [r0, #2]
    a488:	e5d03000 	ldrb	r3, [r0]
    a48c:	e2022002 	and	r2, r2, #2
    a490:	e0811002 	add	r1, r1, r2
    a494:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a498:	e2033001 	and	r3, r3, #1
    a49c:	e3833010 	orr	r3, r3, #16
    a4a0:	e1823003 	orr	r3, r2, r3
    a4a4:	e5c03000 	strb	r3, [r0]
    a4a8:	e8bd8010 	pop	{r4, pc}
    a4ac:	e5d02003 	ldrb	r2, [r0, #3]
    a4b0:	e5d03000 	ldrb	r3, [r0]
    a4b4:	e2022002 	and	r2, r2, #2
    a4b8:	e0811002 	add	r1, r1, r2
    a4bc:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a4c0:	e2033001 	and	r3, r3, #1
    a4c4:	e3833010 	orr	r3, r3, #16
    a4c8:	e1823003 	orr	r3, r2, r3
    a4cc:	e5c03000 	strb	r3, [r0]
    a4d0:	e8bd8010 	pop	{r4, pc}
    a4d4:	e5d02001 	ldrb	r2, [r0, #1]
    a4d8:	e5d03000 	ldrb	r3, [r0]
    a4dc:	e2022001 	and	r2, r2, #1
    a4e0:	e0811002 	add	r1, r1, r2
    a4e4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a4e8:	e2033001 	and	r3, r3, #1
    a4ec:	e3833010 	orr	r3, r3, #16
    a4f0:	e1823003 	orr	r3, r2, r3
    a4f4:	e5c03000 	strb	r3, [r0]
    a4f8:	e8bd8010 	pop	{r4, pc}
    a4fc:	e1d030b6 	ldrh	r3, [r0, #6]
    a500:	e35e0000 	cmp	lr, #0
    a504:	11a03883 	lslne	r3, r3, #17
    a508:	151f2b08 	ldrne	r2, [pc, #-2824]	; 9a08 <CodesCB+0xc9c>
    a50c:	11a038a3 	lsrne	r3, r3, #17
    a510:	17d22003 	ldrbne	r2, [r2, r3]
    a514:	07dc2003 	ldrbeq	r2, [ip, r3]
    a518:	e5d03000 	ldrb	r3, [r0]
    a51c:	e2022001 	and	r2, r2, #1
    a520:	e0811002 	add	r1, r1, r2
    a524:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a528:	e2033001 	and	r3, r3, #1
    a52c:	e3833010 	orr	r3, r3, #16
    a530:	e1833002 	orr	r3, r3, r2
    a534:	e5c03000 	strb	r3, [r0]
    a538:	e8bd8010 	pop	{r4, pc}
    a53c:	e5d02006 	ldrb	r2, [r0, #6]
    a540:	e5d03000 	ldrb	r3, [r0]
    a544:	e2022001 	and	r2, r2, #1
    a548:	e0811002 	add	r1, r1, r2
    a54c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a550:	e2033001 	and	r3, r3, #1
    a554:	e3833010 	orr	r3, r3, #16
    a558:	e1823003 	orr	r3, r2, r3
    a55c:	e5c03000 	strb	r3, [r0]
    a560:	e8bd8010 	pop	{r4, pc}
    a564:	e5d02007 	ldrb	r2, [r0, #7]
    a568:	e5d03000 	ldrb	r3, [r0]
    a56c:	e2022001 	and	r2, r2, #1
    a570:	e0811002 	add	r1, r1, r2
    a574:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a578:	e2033001 	and	r3, r3, #1
    a57c:	e3833010 	orr	r3, r3, #16
    a580:	e1823003 	orr	r3, r2, r3
    a584:	e5c03000 	strb	r3, [r0]
    a588:	e8bd8010 	pop	{r4, pc}
    a58c:	e5d02004 	ldrb	r2, [r0, #4]
    a590:	e5d03000 	ldrb	r3, [r0]
    a594:	e2022001 	and	r2, r2, #1
    a598:	e0811002 	add	r1, r1, r2
    a59c:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a5a0:	e2033001 	and	r3, r3, #1
    a5a4:	e3833010 	orr	r3, r3, #16
    a5a8:	e1823003 	orr	r3, r2, r3
    a5ac:	e5c03000 	strb	r3, [r0]
    a5b0:	e8bd8010 	pop	{r4, pc}
    a5b4:	e5d02005 	ldrb	r2, [r0, #5]
    a5b8:	e5d03000 	ldrb	r3, [r0]
    a5bc:	e2022001 	and	r2, r2, #1
    a5c0:	e0811002 	add	r1, r1, r2
    a5c4:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a5c8:	e2033001 	and	r3, r3, #1
    a5cc:	e3833010 	orr	r3, r3, #16
    a5d0:	e1823003 	orr	r3, r2, r3
    a5d4:	e5c03000 	strb	r3, [r0]
    a5d8:	e8bd8010 	pop	{r4, pc}
    a5dc:	e5d02002 	ldrb	r2, [r0, #2]
    a5e0:	e5d03000 	ldrb	r3, [r0]
    a5e4:	e2022001 	and	r2, r2, #1
    a5e8:	e0811002 	add	r1, r1, r2
    a5ec:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a5f0:	e2033001 	and	r3, r3, #1
    a5f4:	e3833010 	orr	r3, r3, #16
    a5f8:	e1823003 	orr	r3, r2, r3
    a5fc:	e5c03000 	strb	r3, [r0]
    a600:	e8bd8010 	pop	{r4, pc}
    a604:	e5d02003 	ldrb	r2, [r0, #3]
    a608:	e5d03000 	ldrb	r3, [r0]
    a60c:	e2022001 	and	r2, r2, #1
    a610:	e0811002 	add	r1, r1, r2
    a614:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a618:	e2033001 	and	r3, r3, #1
    a61c:	e3833010 	orr	r3, r3, #16
    a620:	e1823003 	orr	r3, r2, r3
    a624:	e5c03000 	strb	r3, [r0]
    a628:	e8bd8010 	pop	{r4, pc}
    a62c:	e5d03001 	ldrb	r3, [r0, #1]
    a630:	e1a020a3 	lsr	r2, r3, #1
    a634:	e0811002 	add	r1, r1, r2
    a638:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a63c:	e2033001 	and	r3, r3, #1
    a640:	e1833001 	orr	r3, r3, r1
    a644:	e5c03000 	strb	r3, [r0]
    a648:	e5c02001 	strb	r2, [r0, #1]
    a64c:	e8bd8010 	pop	{r4, pc}
    a650:	e35e0000 	cmp	lr, #0
    a654:	e1d0e0b6 	ldrh	lr, [r0, #6]
    a658:	151f2c58 	ldrne	r2, [pc, #-3160]	; 9a08 <CodesCB+0xc9c>
    a65c:	11a0388e 	lslne	r3, lr, #17
    a660:	11a038a3 	lsrne	r3, r3, #17
    a664:	07dc300e 	ldrbeq	r3, [ip, lr]
    a668:	17d23003 	ldrbne	r3, [r2, r3]
    a66c:	e1a020a3 	lsr	r2, r3, #1
    a670:	e0811002 	add	r1, r1, r2
    a674:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a678:	e2033001 	and	r3, r3, #1
    a67c:	e1833001 	orr	r3, r3, r1
    a680:	e5c03000 	strb	r3, [r0]
    a684:	e7cc200e 	strb	r2, [ip, lr]
    a688:	e8bd8010 	pop	{r4, pc}
    a68c:	e5d03006 	ldrb	r3, [r0, #6]
    a690:	e1a020a3 	lsr	r2, r3, #1
    a694:	e0811002 	add	r1, r1, r2
    a698:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a69c:	e2033001 	and	r3, r3, #1
    a6a0:	e1833001 	orr	r3, r3, r1
    a6a4:	e5c03000 	strb	r3, [r0]
    a6a8:	e5c02006 	strb	r2, [r0, #6]
    a6ac:	e8bd8010 	pop	{r4, pc}
    a6b0:	e5d03007 	ldrb	r3, [r0, #7]
    a6b4:	e1a020a3 	lsr	r2, r3, #1
    a6b8:	e0811002 	add	r1, r1, r2
    a6bc:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a6c0:	e2033001 	and	r3, r3, #1
    a6c4:	e1833001 	orr	r3, r3, r1
    a6c8:	e5c03000 	strb	r3, [r0]
    a6cc:	e5c02007 	strb	r2, [r0, #7]
    a6d0:	e8bd8010 	pop	{r4, pc}
    a6d4:	e5d03004 	ldrb	r3, [r0, #4]
    a6d8:	e1a020a3 	lsr	r2, r3, #1
    a6dc:	e0811002 	add	r1, r1, r2
    a6e0:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a6e4:	e2033001 	and	r3, r3, #1
    a6e8:	e1833001 	orr	r3, r3, r1
    a6ec:	e5c03000 	strb	r3, [r0]
    a6f0:	e5c02004 	strb	r2, [r0, #4]
    a6f4:	e8bd8010 	pop	{r4, pc}
    a6f8:	e5d03005 	ldrb	r3, [r0, #5]
    a6fc:	e1a020a3 	lsr	r2, r3, #1
    a700:	e0811002 	add	r1, r1, r2
    a704:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a708:	e2033001 	and	r3, r3, #1
    a70c:	e1833001 	orr	r3, r3, r1
    a710:	e5c03000 	strb	r3, [r0]
    a714:	e5c02005 	strb	r2, [r0, #5]
    a718:	e8bd8010 	pop	{r4, pc}
    a71c:	e5d03002 	ldrb	r3, [r0, #2]
    a720:	e1a020a3 	lsr	r2, r3, #1
    a724:	e0811002 	add	r1, r1, r2
    a728:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a72c:	e2033001 	and	r3, r3, #1
    a730:	e1833001 	orr	r3, r3, r1
    a734:	e5c03000 	strb	r3, [r0]
    a738:	e5c02002 	strb	r2, [r0, #2]
    a73c:	e8bd8010 	pop	{r4, pc}
    a740:	e5d03003 	ldrb	r3, [r0, #3]
    a744:	e1a020a3 	lsr	r2, r3, #1
    a748:	e0811002 	add	r1, r1, r2
    a74c:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a750:	e2033001 	and	r3, r3, #1
    a754:	e1833001 	orr	r3, r3, r1
    a758:	e5c03000 	strb	r3, [r0]
    a75c:	e5c02003 	strb	r2, [r0, #3]
    a760:	e8bd8010 	pop	{r4, pc}
    a764:	e5d0c001 	ldrb	ip, [r0, #1]
    a768:	e1a0308c 	lsl	r3, ip, #1
    a76c:	e3833001 	orr	r3, r3, #1
    a770:	e6ef3073 	uxtb	r3, r3
    a774:	e0811003 	add	r1, r1, r3
    a778:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a77c:	e5c03001 	strb	r3, [r0, #1]
    a780:	e18233ac 	orr	r3, r2, ip, lsr #7
    a784:	e5c03000 	strb	r3, [r0]
    a788:	e8bd8010 	pop	{r4, pc}
    a78c:	e35e0000 	cmp	lr, #0
    a790:	e1d0e0b6 	ldrh	lr, [r0, #6]
    a794:	159f2a00 	ldrne	r2, [pc, #2560]	; b19c <CodesCB+0x2430>
    a798:	11a0388e 	lslne	r3, lr, #17
    a79c:	11a038a3 	lsrne	r3, r3, #17
    a7a0:	17d24003 	ldrbne	r4, [r2, r3]
    a7a4:	07dc400e 	ldrbeq	r4, [ip, lr]
    a7a8:	e1a03084 	lsl	r3, r4, #1
    a7ac:	e3833001 	orr	r3, r3, #1
    a7b0:	e6ef3073 	uxtb	r3, r3
    a7b4:	e0811003 	add	r1, r1, r3
    a7b8:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a7bc:	e18223a4 	orr	r2, r2, r4, lsr #7
    a7c0:	e5c02000 	strb	r2, [r0]
    a7c4:	e7cc300e 	strb	r3, [ip, lr]
    a7c8:	e8bd8010 	pop	{r4, pc}
    a7cc:	e5d0c006 	ldrb	ip, [r0, #6]
    a7d0:	e1a0308c 	lsl	r3, ip, #1
    a7d4:	e3833001 	orr	r3, r3, #1
    a7d8:	e6ef3073 	uxtb	r3, r3
    a7dc:	e0811003 	add	r1, r1, r3
    a7e0:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a7e4:	e5c03006 	strb	r3, [r0, #6]
    a7e8:	e18233ac 	orr	r3, r2, ip, lsr #7
    a7ec:	e5c03000 	strb	r3, [r0]
    a7f0:	e8bd8010 	pop	{r4, pc}
    a7f4:	e5d0c007 	ldrb	ip, [r0, #7]
    a7f8:	e1a0308c 	lsl	r3, ip, #1
    a7fc:	e3833001 	orr	r3, r3, #1
    a800:	e6ef3073 	uxtb	r3, r3
    a804:	e0811003 	add	r1, r1, r3
    a808:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a80c:	e5c03007 	strb	r3, [r0, #7]
    a810:	e18233ac 	orr	r3, r2, ip, lsr #7
    a814:	e5c03000 	strb	r3, [r0]
    a818:	e8bd8010 	pop	{r4, pc}
    a81c:	e5d0c004 	ldrb	ip, [r0, #4]
    a820:	e1a0308c 	lsl	r3, ip, #1
    a824:	e3833001 	orr	r3, r3, #1
    a828:	e6ef3073 	uxtb	r3, r3
    a82c:	e0811003 	add	r1, r1, r3
    a830:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a834:	e5c03004 	strb	r3, [r0, #4]
    a838:	e18233ac 	orr	r3, r2, ip, lsr #7
    a83c:	e5c03000 	strb	r3, [r0]
    a840:	e8bd8010 	pop	{r4, pc}
    a844:	e5d0c005 	ldrb	ip, [r0, #5]
    a848:	e1a0308c 	lsl	r3, ip, #1
    a84c:	e3833001 	orr	r3, r3, #1
    a850:	e6ef3073 	uxtb	r3, r3
    a854:	e0811003 	add	r1, r1, r3
    a858:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a85c:	e5c03005 	strb	r3, [r0, #5]
    a860:	e18233ac 	orr	r3, r2, ip, lsr #7
    a864:	e5c03000 	strb	r3, [r0]
    a868:	e8bd8010 	pop	{r4, pc}
    a86c:	e5d0c002 	ldrb	ip, [r0, #2]
    a870:	e1a0308c 	lsl	r3, ip, #1
    a874:	e3833001 	orr	r3, r3, #1
    a878:	e6ef3073 	uxtb	r3, r3
    a87c:	e0811003 	add	r1, r1, r3
    a880:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a884:	e5c03002 	strb	r3, [r0, #2]
    a888:	e18233ac 	orr	r3, r2, ip, lsr #7
    a88c:	e5c03000 	strb	r3, [r0]
    a890:	e8bd8010 	pop	{r4, pc}
    a894:	e5d0c003 	ldrb	ip, [r0, #3]
    a898:	e1a0308c 	lsl	r3, ip, #1
    a89c:	e3833001 	orr	r3, r3, #1
    a8a0:	e6ef3073 	uxtb	r3, r3
    a8a4:	e0811003 	add	r1, r1, r3
    a8a8:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    a8ac:	e5c03003 	strb	r3, [r0, #3]
    a8b0:	e18233ac 	orr	r3, r2, ip, lsr #7
    a8b4:	e5c03000 	strb	r3, [r0]
    a8b8:	e8bd8010 	pop	{r4, pc}
    a8bc:	e5d03001 	ldrb	r3, [r0, #1]
    a8c0:	e3c3207f 	bic	r2, r3, #127	; 0x7f
    a8c4:	e18220a3 	orr	r2, r2, r3, lsr #1
    a8c8:	e0811002 	add	r1, r1, r2
    a8cc:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a8d0:	e2033001 	and	r3, r3, #1
    a8d4:	e1833001 	orr	r3, r3, r1
    a8d8:	e5c02001 	strb	r2, [r0, #1]
    a8dc:	e5c03000 	strb	r3, [r0]
    a8e0:	e8bd8010 	pop	{r4, pc}
    a8e4:	e35e0000 	cmp	lr, #0
    a8e8:	e1d0e0b6 	ldrh	lr, [r0, #6]
    a8ec:	159f28a8 	ldrne	r2, [pc, #2216]	; b19c <CodesCB+0x2430>
    a8f0:	11a0388e 	lslne	r3, lr, #17
    a8f4:	11a038a3 	lsrne	r3, r3, #17
    a8f8:	07dc300e 	ldrbeq	r3, [ip, lr]
    a8fc:	17d23003 	ldrbne	r3, [r2, r3]
    a900:	e3c3207f 	bic	r2, r3, #127	; 0x7f
    a904:	e18220a3 	orr	r2, r2, r3, lsr #1
    a908:	e0811002 	add	r1, r1, r2
    a90c:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a910:	e2033001 	and	r3, r3, #1
    a914:	e1833001 	orr	r3, r3, r1
    a918:	e5c03000 	strb	r3, [r0]
    a91c:	e7cc200e 	strb	r2, [ip, lr]
    a920:	e8bd8010 	pop	{r4, pc}
    a924:	e5d03006 	ldrb	r3, [r0, #6]
    a928:	e3c3207f 	bic	r2, r3, #127	; 0x7f
    a92c:	e18220a3 	orr	r2, r2, r3, lsr #1
    a930:	e0811002 	add	r1, r1, r2
    a934:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a938:	e2033001 	and	r3, r3, #1
    a93c:	e1833001 	orr	r3, r3, r1
    a940:	e5c02006 	strb	r2, [r0, #6]
    a944:	e5c03000 	strb	r3, [r0]
    a948:	e8bd8010 	pop	{r4, pc}
    a94c:	e5d03007 	ldrb	r3, [r0, #7]
    a950:	e3c3207f 	bic	r2, r3, #127	; 0x7f
    a954:	e18220a3 	orr	r2, r2, r3, lsr #1
    a958:	e0811002 	add	r1, r1, r2
    a95c:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a960:	e2033001 	and	r3, r3, #1
    a964:	e1833001 	orr	r3, r3, r1
    a968:	e5c02007 	strb	r2, [r0, #7]
    a96c:	e5c03000 	strb	r3, [r0]
    a970:	e8bd8010 	pop	{r4, pc}
    a974:	e5d03004 	ldrb	r3, [r0, #4]
    a978:	e3c3207f 	bic	r2, r3, #127	; 0x7f
    a97c:	e18220a3 	orr	r2, r2, r3, lsr #1
    a980:	e0811002 	add	r1, r1, r2
    a984:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a988:	e2033001 	and	r3, r3, #1
    a98c:	e1833001 	orr	r3, r3, r1
    a990:	e5c02004 	strb	r2, [r0, #4]
    a994:	e5c03000 	strb	r3, [r0]
    a998:	e8bd8010 	pop	{r4, pc}
    a99c:	e5d03005 	ldrb	r3, [r0, #5]
    a9a0:	e3c3207f 	bic	r2, r3, #127	; 0x7f
    a9a4:	e18220a3 	orr	r2, r2, r3, lsr #1
    a9a8:	e0811002 	add	r1, r1, r2
    a9ac:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a9b0:	e2033001 	and	r3, r3, #1
    a9b4:	e1833001 	orr	r3, r3, r1
    a9b8:	e5c02005 	strb	r2, [r0, #5]
    a9bc:	e5c03000 	strb	r3, [r0]
    a9c0:	e8bd8010 	pop	{r4, pc}
    a9c4:	e5d03002 	ldrb	r3, [r0, #2]
    a9c8:	e3c3207f 	bic	r2, r3, #127	; 0x7f
    a9cc:	e18220a3 	orr	r2, r2, r3, lsr #1
    a9d0:	e0811002 	add	r1, r1, r2
    a9d4:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    a9d8:	e2033001 	and	r3, r3, #1
    a9dc:	e1833001 	orr	r3, r3, r1
    a9e0:	e5c02002 	strb	r2, [r0, #2]
    a9e4:	e5c03000 	strb	r3, [r0]
    a9e8:	e8bd8010 	pop	{r4, pc}
    a9ec:	e5d03003 	ldrb	r3, [r0, #3]
    a9f0:	e3c3207f 	bic	r2, r3, #127	; 0x7f
    a9f4:	e18220a3 	orr	r2, r2, r3, lsr #1
    a9f8:	e0811002 	add	r1, r1, r2
    a9fc:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    aa00:	e2033001 	and	r3, r3, #1
    aa04:	e1833001 	orr	r3, r3, r1
    aa08:	e5c02003 	strb	r2, [r0, #3]
    aa0c:	e5c03000 	strb	r3, [r0]
    aa10:	e8bd8010 	pop	{r4, pc}
    aa14:	e5d0c001 	ldrb	ip, [r0, #1]
    aa18:	e1a0308c 	lsl	r3, ip, #1
    aa1c:	e6ef3073 	uxtb	r3, r3
    aa20:	e0811003 	add	r1, r1, r3
    aa24:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    aa28:	e5c03001 	strb	r3, [r0, #1]
    aa2c:	e18233ac 	orr	r3, r2, ip, lsr #7
    aa30:	e5c03000 	strb	r3, [r0]
    aa34:	e8bd8010 	pop	{r4, pc}
    aa38:	e35e0000 	cmp	lr, #0
    aa3c:	e1d0e0b6 	ldrh	lr, [r0, #6]
    aa40:	159f2754 	ldrne	r2, [pc, #1876]	; b19c <CodesCB+0x2430>
    aa44:	11a0388e 	lslne	r3, lr, #17
    aa48:	11a038a3 	lsrne	r3, r3, #17
    aa4c:	17d24003 	ldrbne	r4, [r2, r3]
    aa50:	07dc400e 	ldrbeq	r4, [ip, lr]
    aa54:	e1a03084 	lsl	r3, r4, #1
    aa58:	e6ef3073 	uxtb	r3, r3
    aa5c:	e0811003 	add	r1, r1, r3
    aa60:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    aa64:	e18223a4 	orr	r2, r2, r4, lsr #7
    aa68:	e5c02000 	strb	r2, [r0]
    aa6c:	e7cc300e 	strb	r3, [ip, lr]
    aa70:	e8bd8010 	pop	{r4, pc}
    aa74:	e5d0c006 	ldrb	ip, [r0, #6]
    aa78:	e1a0308c 	lsl	r3, ip, #1
    aa7c:	e6ef3073 	uxtb	r3, r3
    aa80:	e0811003 	add	r1, r1, r3
    aa84:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    aa88:	e5c03006 	strb	r3, [r0, #6]
    aa8c:	e18233ac 	orr	r3, r2, ip, lsr #7
    aa90:	e5c03000 	strb	r3, [r0]
    aa94:	e8bd8010 	pop	{r4, pc}
    aa98:	e5d0c007 	ldrb	ip, [r0, #7]
    aa9c:	e1a0308c 	lsl	r3, ip, #1
    aaa0:	e6ef3073 	uxtb	r3, r3
    aaa4:	e0811003 	add	r1, r1, r3
    aaa8:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    aaac:	e5c03007 	strb	r3, [r0, #7]
    aab0:	e18233ac 	orr	r3, r2, ip, lsr #7
    aab4:	e5c03000 	strb	r3, [r0]
    aab8:	e8bd8010 	pop	{r4, pc}
    aabc:	e5d0c004 	ldrb	ip, [r0, #4]
    aac0:	e1a0308c 	lsl	r3, ip, #1
    aac4:	e6ef3073 	uxtb	r3, r3
    aac8:	e0811003 	add	r1, r1, r3
    aacc:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    aad0:	e5c03004 	strb	r3, [r0, #4]
    aad4:	e18233ac 	orr	r3, r2, ip, lsr #7
    aad8:	e5c03000 	strb	r3, [r0]
    aadc:	e8bd8010 	pop	{r4, pc}
    aae0:	e5d0c005 	ldrb	ip, [r0, #5]
    aae4:	e1a0308c 	lsl	r3, ip, #1
    aae8:	e6ef3073 	uxtb	r3, r3
    aaec:	e0811003 	add	r1, r1, r3
    aaf0:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    aaf4:	e5c03005 	strb	r3, [r0, #5]
    aaf8:	e18233ac 	orr	r3, r2, ip, lsr #7
    aafc:	e5c03000 	strb	r3, [r0]
    ab00:	e8bd8010 	pop	{r4, pc}
    ab04:	e5d0c002 	ldrb	ip, [r0, #2]
    ab08:	e1a0308c 	lsl	r3, ip, #1
    ab0c:	e6ef3073 	uxtb	r3, r3
    ab10:	e0811003 	add	r1, r1, r3
    ab14:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ab18:	e5c03002 	strb	r3, [r0, #2]
    ab1c:	e18233ac 	orr	r3, r2, ip, lsr #7
    ab20:	e5c03000 	strb	r3, [r0]
    ab24:	e8bd8010 	pop	{r4, pc}
    ab28:	e5d0c003 	ldrb	ip, [r0, #3]
    ab2c:	e1a0308c 	lsl	r3, ip, #1
    ab30:	e6ef3073 	uxtb	r3, r3
    ab34:	e0811003 	add	r1, r1, r3
    ab38:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ab3c:	e5c03003 	strb	r3, [r0, #3]
    ab40:	e18233ac 	orr	r3, r2, ip, lsr #7
    ab44:	e5c03000 	strb	r3, [r0]
    ab48:	e8bd8010 	pop	{r4, pc}
    ab4c:	e5d02001 	ldrb	r2, [r0, #1]
    ab50:	e5d0c000 	ldrb	ip, [r0]
    ab54:	e1a030a2 	lsr	r3, r2, #1
    ab58:	e183338c 	orr	r3, r3, ip, lsl #7
    ab5c:	e6ef3073 	uxtb	r3, r3
    ab60:	e0811003 	add	r1, r1, r3
    ab64:	e3120001 	tst	r2, #1
    ab68:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ab6c:	15c03001 	strbne	r3, [r0, #1]
    ab70:	13822001 	orrne	r2, r2, #1
    ab74:	15c02000 	strbne	r2, [r0]
    ab78:	05c03001 	strbeq	r3, [r0, #1]
    ab7c:	05c02000 	strbeq	r2, [r0]
    ab80:	e8bd8010 	pop	{r4, pc}
    ab84:	e1d020b6 	ldrh	r2, [r0, #6]
    ab88:	e35e0000 	cmp	lr, #0
    ab8c:	11a03882 	lslne	r3, r2, #17
    ab90:	159fe604 	ldrne	lr, [pc, #1540]	; b19c <CodesCB+0x2430>
    ab94:	11a038a3 	lsrne	r3, r3, #17
    ab98:	07dce002 	ldrbeq	lr, [ip, r2]
    ab9c:	17dee003 	ldrbne	lr, [lr, r3]
    aba0:	e5d04000 	ldrb	r4, [r0]
    aba4:	e1a030ae 	lsr	r3, lr, #1
    aba8:	e1833384 	orr	r3, r3, r4, lsl #7
    abac:	e6ef3073 	uxtb	r3, r3
    abb0:	e0811003 	add	r1, r1, r3
    abb4:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    abb8:	e31e0001 	tst	lr, #1
    abbc:	13811001 	orrne	r1, r1, #1
    abc0:	e5c01000 	strb	r1, [r0]
    abc4:	e7cc3002 	strb	r3, [ip, r2]
    abc8:	e8bd8010 	pop	{r4, pc}
    abcc:	e5d02006 	ldrb	r2, [r0, #6]
    abd0:	e5d0c000 	ldrb	ip, [r0]
    abd4:	e1a030a2 	lsr	r3, r2, #1
    abd8:	e183338c 	orr	r3, r3, ip, lsl #7
    abdc:	e6ef3073 	uxtb	r3, r3
    abe0:	e0811003 	add	r1, r1, r3
    abe4:	e3120001 	tst	r2, #1
    abe8:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    abec:	15c03006 	strbne	r3, [r0, #6]
    abf0:	13822001 	orrne	r2, r2, #1
    abf4:	15c02000 	strbne	r2, [r0]
    abf8:	05c03006 	strbeq	r3, [r0, #6]
    abfc:	05c02000 	strbeq	r2, [r0]
    ac00:	e8bd8010 	pop	{r4, pc}
    ac04:	e5d02007 	ldrb	r2, [r0, #7]
    ac08:	e5d0c000 	ldrb	ip, [r0]
    ac0c:	e1a030a2 	lsr	r3, r2, #1
    ac10:	e183338c 	orr	r3, r3, ip, lsl #7
    ac14:	e6ef3073 	uxtb	r3, r3
    ac18:	e0811003 	add	r1, r1, r3
    ac1c:	e3120001 	tst	r2, #1
    ac20:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ac24:	15c03007 	strbne	r3, [r0, #7]
    ac28:	13822001 	orrne	r2, r2, #1
    ac2c:	15c02000 	strbne	r2, [r0]
    ac30:	05c03007 	strbeq	r3, [r0, #7]
    ac34:	05c02000 	strbeq	r2, [r0]
    ac38:	e8bd8010 	pop	{r4, pc}
    ac3c:	e5d02004 	ldrb	r2, [r0, #4]
    ac40:	e5d0c000 	ldrb	ip, [r0]
    ac44:	e1a030a2 	lsr	r3, r2, #1
    ac48:	e183338c 	orr	r3, r3, ip, lsl #7
    ac4c:	e6ef3073 	uxtb	r3, r3
    ac50:	e0811003 	add	r1, r1, r3
    ac54:	e3120001 	tst	r2, #1
    ac58:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ac5c:	15c03004 	strbne	r3, [r0, #4]
    ac60:	13822001 	orrne	r2, r2, #1
    ac64:	15c02000 	strbne	r2, [r0]
    ac68:	05c03004 	strbeq	r3, [r0, #4]
    ac6c:	05c02000 	strbeq	r2, [r0]
    ac70:	e8bd8010 	pop	{r4, pc}
    ac74:	e5d02005 	ldrb	r2, [r0, #5]
    ac78:	e5d0c000 	ldrb	ip, [r0]
    ac7c:	e1a030a2 	lsr	r3, r2, #1
    ac80:	e183338c 	orr	r3, r3, ip, lsl #7
    ac84:	e6ef3073 	uxtb	r3, r3
    ac88:	e0811003 	add	r1, r1, r3
    ac8c:	e3120001 	tst	r2, #1
    ac90:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ac94:	15c03005 	strbne	r3, [r0, #5]
    ac98:	13822001 	orrne	r2, r2, #1
    ac9c:	15c02000 	strbne	r2, [r0]
    aca0:	05c03005 	strbeq	r3, [r0, #5]
    aca4:	05c02000 	strbeq	r2, [r0]
    aca8:	e8bd8010 	pop	{r4, pc}
    acac:	e5d02002 	ldrb	r2, [r0, #2]
    acb0:	e5d0c000 	ldrb	ip, [r0]
    acb4:	e1a030a2 	lsr	r3, r2, #1
    acb8:	e183338c 	orr	r3, r3, ip, lsl #7
    acbc:	e6ef3073 	uxtb	r3, r3
    acc0:	e0811003 	add	r1, r1, r3
    acc4:	e3120001 	tst	r2, #1
    acc8:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    accc:	15c03002 	strbne	r3, [r0, #2]
    acd0:	13822001 	orrne	r2, r2, #1
    acd4:	15c02000 	strbne	r2, [r0]
    acd8:	05c03002 	strbeq	r3, [r0, #2]
    acdc:	05c02000 	strbeq	r2, [r0]
    ace0:	e8bd8010 	pop	{r4, pc}
    ace4:	e5d02003 	ldrb	r2, [r0, #3]
    ace8:	e5d0c000 	ldrb	ip, [r0]
    acec:	e1a030a2 	lsr	r3, r2, #1
    acf0:	e183338c 	orr	r3, r3, ip, lsl #7
    acf4:	e6ef3073 	uxtb	r3, r3
    acf8:	e0811003 	add	r1, r1, r3
    acfc:	e3120001 	tst	r2, #1
    ad00:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ad04:	15c03003 	strbne	r3, [r0, #3]
    ad08:	13822001 	orrne	r2, r2, #1
    ad0c:	15c02000 	strbne	r2, [r0]
    ad10:	05c03003 	strbeq	r3, [r0, #3]
    ad14:	05c02000 	strbeq	r2, [r0]
    ad18:	e8bd8010 	pop	{r4, pc}
    ad1c:	e5d03000 	ldrb	r3, [r0]
    ad20:	e5d02001 	ldrb	r2, [r0, #1]
    ad24:	e2033001 	and	r3, r3, #1
    ad28:	e1833082 	orr	r3, r3, r2, lsl #1
    ad2c:	e6ef3073 	uxtb	r3, r3
    ad30:	e0811003 	add	r1, r1, r3
    ad34:	e3120080 	tst	r2, #128	; 0x80
    ad38:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ad3c:	15c03001 	strbne	r3, [r0, #1]
    ad40:	13822001 	orrne	r2, r2, #1
    ad44:	15c02000 	strbne	r2, [r0]
    ad48:	05c03001 	strbeq	r3, [r0, #1]
    ad4c:	05c02000 	strbeq	r2, [r0]
    ad50:	e8bd8010 	pop	{r4, pc}
    ad54:	e1d020b6 	ldrh	r2, [r0, #6]
    ad58:	e35e0000 	cmp	lr, #0
    ad5c:	11a03882 	lslne	r3, r2, #17
    ad60:	159fe434 	ldrne	lr, [pc, #1076]	; b19c <CodesCB+0x2430>
    ad64:	11a038a3 	lsrne	r3, r3, #17
    ad68:	17dee003 	ldrbne	lr, [lr, r3]
    ad6c:	e5d03000 	ldrb	r3, [r0]
    ad70:	07dce002 	ldrbeq	lr, [ip, r2]
    ad74:	e2033001 	and	r3, r3, #1
    ad78:	e183308e 	orr	r3, r3, lr, lsl #1
    ad7c:	e6ef3073 	uxtb	r3, r3
    ad80:	e0811003 	add	r1, r1, r3
    ad84:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    ad88:	e31e0080 	tst	lr, #128	; 0x80
    ad8c:	13811001 	orrne	r1, r1, #1
    ad90:	e5c01000 	strb	r1, [r0]
    ad94:	e7cc3002 	strb	r3, [ip, r2]
    ad98:	e8bd8010 	pop	{r4, pc}
    ad9c:	e5d03000 	ldrb	r3, [r0]
    ada0:	e5d02006 	ldrb	r2, [r0, #6]
    ada4:	e2033001 	and	r3, r3, #1
    ada8:	e1833082 	orr	r3, r3, r2, lsl #1
    adac:	e6ef3073 	uxtb	r3, r3
    adb0:	e0811003 	add	r1, r1, r3
    adb4:	e3120080 	tst	r2, #128	; 0x80
    adb8:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    adbc:	15c03006 	strbne	r3, [r0, #6]
    adc0:	13822001 	orrne	r2, r2, #1
    adc4:	15c02000 	strbne	r2, [r0]
    adc8:	05c03006 	strbeq	r3, [r0, #6]
    adcc:	05c02000 	strbeq	r2, [r0]
    add0:	e8bd8010 	pop	{r4, pc}
    add4:	e5d03000 	ldrb	r3, [r0]
    add8:	e5d02007 	ldrb	r2, [r0, #7]
    addc:	e2033001 	and	r3, r3, #1
    ade0:	e1833082 	orr	r3, r3, r2, lsl #1
    ade4:	e6ef3073 	uxtb	r3, r3
    ade8:	e0811003 	add	r1, r1, r3
    adec:	e3120080 	tst	r2, #128	; 0x80
    adf0:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    adf4:	15c03007 	strbne	r3, [r0, #7]
    adf8:	13822001 	orrne	r2, r2, #1
    adfc:	15c02000 	strbne	r2, [r0]
    ae00:	05c03007 	strbeq	r3, [r0, #7]
    ae04:	05c02000 	strbeq	r2, [r0]
    ae08:	e8bd8010 	pop	{r4, pc}
    ae0c:	e5d03000 	ldrb	r3, [r0]
    ae10:	e5d02004 	ldrb	r2, [r0, #4]
    ae14:	e2033001 	and	r3, r3, #1
    ae18:	e1833082 	orr	r3, r3, r2, lsl #1
    ae1c:	e6ef3073 	uxtb	r3, r3
    ae20:	e0811003 	add	r1, r1, r3
    ae24:	e3120080 	tst	r2, #128	; 0x80
    ae28:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ae2c:	15c03004 	strbne	r3, [r0, #4]
    ae30:	13822001 	orrne	r2, r2, #1
    ae34:	15c02000 	strbne	r2, [r0]
    ae38:	05c03004 	strbeq	r3, [r0, #4]
    ae3c:	05c02000 	strbeq	r2, [r0]
    ae40:	e8bd8010 	pop	{r4, pc}
    ae44:	e5d03000 	ldrb	r3, [r0]
    ae48:	e5d02005 	ldrb	r2, [r0, #5]
    ae4c:	e2033001 	and	r3, r3, #1
    ae50:	e1833082 	orr	r3, r3, r2, lsl #1
    ae54:	e6ef3073 	uxtb	r3, r3
    ae58:	e0811003 	add	r1, r1, r3
    ae5c:	e3120080 	tst	r2, #128	; 0x80
    ae60:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ae64:	15c03005 	strbne	r3, [r0, #5]
    ae68:	13822001 	orrne	r2, r2, #1
    ae6c:	15c02000 	strbne	r2, [r0]
    ae70:	05c03005 	strbeq	r3, [r0, #5]
    ae74:	05c02000 	strbeq	r2, [r0]
    ae78:	e8bd8010 	pop	{r4, pc}
    ae7c:	e5d03000 	ldrb	r3, [r0]
    ae80:	e5d02002 	ldrb	r2, [r0, #2]
    ae84:	e2033001 	and	r3, r3, #1
    ae88:	e1833082 	orr	r3, r3, r2, lsl #1
    ae8c:	e6ef3073 	uxtb	r3, r3
    ae90:	e0811003 	add	r1, r1, r3
    ae94:	e3120080 	tst	r2, #128	; 0x80
    ae98:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    ae9c:	15c03002 	strbne	r3, [r0, #2]
    aea0:	13822001 	orrne	r2, r2, #1
    aea4:	15c02000 	strbne	r2, [r0]
    aea8:	05c03002 	strbeq	r3, [r0, #2]
    aeac:	05c02000 	strbeq	r2, [r0]
    aeb0:	e8bd8010 	pop	{r4, pc}
    aeb4:	e5d03000 	ldrb	r3, [r0]
    aeb8:	e5d02003 	ldrb	r2, [r0, #3]
    aebc:	e2033001 	and	r3, r3, #1
    aec0:	e1833082 	orr	r3, r3, r2, lsl #1
    aec4:	e6ef3073 	uxtb	r3, r3
    aec8:	e0811003 	add	r1, r1, r3
    aecc:	e3120080 	tst	r2, #128	; 0x80
    aed0:	e5d12100 	ldrb	r2, [r1, #256]	; 0x100
    aed4:	15c03003 	strbne	r3, [r0, #3]
    aed8:	13822001 	orrne	r2, r2, #1
    aedc:	15c02000 	strbne	r2, [r0]
    aee0:	05c03003 	strbeq	r3, [r0, #3]
    aee4:	05c02000 	strbeq	r2, [r0]
    aee8:	e8bd8010 	pop	{r4, pc}
    aeec:	e5d0c001 	ldrb	ip, [r0, #1]
    aef0:	e20c3001 	and	r3, ip, #1
    aef4:	e1a02383 	lsl	r2, r3, #7
    aef8:	e18220ac 	orr	r2, r2, ip, lsr #1
    aefc:	e0811002 	add	r1, r1, r2
    af00:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    af04:	e5c02001 	strb	r2, [r0, #1]
    af08:	e1833001 	orr	r3, r3, r1
    af0c:	e5c03000 	strb	r3, [r0]
    af10:	e8bd8010 	pop	{r4, pc}
    af14:	e35e0000 	cmp	lr, #0
    af18:	e1d0e0b6 	ldrh	lr, [r0, #6]
    af1c:	159f2278 	ldrne	r2, [pc, #632]	; b19c <CodesCB+0x2430>
    af20:	11a0388e 	lslne	r3, lr, #17
    af24:	11a038a3 	lsrne	r3, r3, #17
    af28:	17d24003 	ldrbne	r4, [r2, r3]
    af2c:	07dc400e 	ldrbeq	r4, [ip, lr]
    af30:	e2042001 	and	r2, r4, #1
    af34:	e1a03382 	lsl	r3, r2, #7
    af38:	e18330a4 	orr	r3, r3, r4, lsr #1
    af3c:	e0811003 	add	r1, r1, r3
    af40:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    af44:	e1822001 	orr	r2, r2, r1
    af48:	e5c02000 	strb	r2, [r0]
    af4c:	e7cc300e 	strb	r3, [ip, lr]
    af50:	e8bd8010 	pop	{r4, pc}
    af54:	e5d0c006 	ldrb	ip, [r0, #6]
    af58:	e20c3001 	and	r3, ip, #1
    af5c:	e1a02383 	lsl	r2, r3, #7
    af60:	e18220ac 	orr	r2, r2, ip, lsr #1
    af64:	e0811002 	add	r1, r1, r2
    af68:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    af6c:	e5c02006 	strb	r2, [r0, #6]
    af70:	e1833001 	orr	r3, r3, r1
    af74:	e5c03000 	strb	r3, [r0]
    af78:	e8bd8010 	pop	{r4, pc}
    af7c:	e5d0c007 	ldrb	ip, [r0, #7]
    af80:	e20c3001 	and	r3, ip, #1
    af84:	e1a02383 	lsl	r2, r3, #7
    af88:	e18220ac 	orr	r2, r2, ip, lsr #1
    af8c:	e0811002 	add	r1, r1, r2
    af90:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    af94:	e5c02007 	strb	r2, [r0, #7]
    af98:	e1833001 	orr	r3, r3, r1
    af9c:	e5c03000 	strb	r3, [r0]
    afa0:	e8bd8010 	pop	{r4, pc}
    afa4:	e5d0c004 	ldrb	ip, [r0, #4]
    afa8:	e20c3001 	and	r3, ip, #1
    afac:	e1a02383 	lsl	r2, r3, #7
    afb0:	e18220ac 	orr	r2, r2, ip, lsr #1
    afb4:	e0811002 	add	r1, r1, r2
    afb8:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    afbc:	e5c02004 	strb	r2, [r0, #4]
    afc0:	e1833001 	orr	r3, r3, r1
    afc4:	e5c03000 	strb	r3, [r0]
    afc8:	e8bd8010 	pop	{r4, pc}
    afcc:	e5d0c005 	ldrb	ip, [r0, #5]
    afd0:	e20c3001 	and	r3, ip, #1
    afd4:	e1a02383 	lsl	r2, r3, #7
    afd8:	e18220ac 	orr	r2, r2, ip, lsr #1
    afdc:	e0811002 	add	r1, r1, r2
    afe0:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    afe4:	e5c02005 	strb	r2, [r0, #5]
    afe8:	e1833001 	orr	r3, r3, r1
    afec:	e5c03000 	strb	r3, [r0]
    aff0:	e8bd8010 	pop	{r4, pc}
    aff4:	e5d0c002 	ldrb	ip, [r0, #2]
    aff8:	e20c3001 	and	r3, ip, #1
    affc:	e1a02383 	lsl	r2, r3, #7
    b000:	e18220ac 	orr	r2, r2, ip, lsr #1
    b004:	e0811002 	add	r1, r1, r2
    b008:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b00c:	e5c02002 	strb	r2, [r0, #2]
    b010:	e1833001 	orr	r3, r3, r1
    b014:	e5c03000 	strb	r3, [r0]
    b018:	e8bd8010 	pop	{r4, pc}
    b01c:	e5d0c003 	ldrb	ip, [r0, #3]
    b020:	e20c3001 	and	r3, ip, #1
    b024:	e1a02383 	lsl	r2, r3, #7
    b028:	e18220ac 	orr	r2, r2, ip, lsr #1
    b02c:	e0811002 	add	r1, r1, r2
    b030:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b034:	e5c02003 	strb	r2, [r0, #3]
    b038:	e1833001 	orr	r3, r3, r1
    b03c:	e5c03000 	strb	r3, [r0]
    b040:	e8bd8010 	pop	{r4, pc}
    b044:	e5d03001 	ldrb	r3, [r0, #1]
    b048:	e1a023a3 	lsr	r2, r3, #7
    b04c:	e1823083 	orr	r3, r2, r3, lsl #1
    b050:	e6ef3073 	uxtb	r3, r3
    b054:	e0811003 	add	r1, r1, r3
    b058:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b05c:	e5c03001 	strb	r3, [r0, #1]
    b060:	e1822001 	orr	r2, r2, r1
    b064:	e5c02000 	strb	r2, [r0]
    b068:	e8bd8010 	pop	{r4, pc}
    b06c:	e35e0000 	cmp	lr, #0
    b070:	e1d0e0b6 	ldrh	lr, [r0, #6]
    b074:	159f2120 	ldrne	r2, [pc, #288]	; b19c <CodesCB+0x2430>
    b078:	11a0388e 	lslne	r3, lr, #17
    b07c:	11a038a3 	lsrne	r3, r3, #17
    b080:	07dc300e 	ldrbeq	r3, [ip, lr]
    b084:	17d23003 	ldrbne	r3, [r2, r3]
    b088:	e1a023a3 	lsr	r2, r3, #7
    b08c:	e1823083 	orr	r3, r2, r3, lsl #1
    b090:	e6ef3073 	uxtb	r3, r3
    b094:	e0811003 	add	r1, r1, r3
    b098:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b09c:	e1822001 	orr	r2, r2, r1
    b0a0:	e5c02000 	strb	r2, [r0]
    b0a4:	e7cc300e 	strb	r3, [ip, lr]
    b0a8:	e8bd8010 	pop	{r4, pc}
    b0ac:	e5d03006 	ldrb	r3, [r0, #6]
    b0b0:	e1a023a3 	lsr	r2, r3, #7
    b0b4:	e1823083 	orr	r3, r2, r3, lsl #1
    b0b8:	e6ef3073 	uxtb	r3, r3
    b0bc:	e0811003 	add	r1, r1, r3
    b0c0:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b0c4:	e5c03006 	strb	r3, [r0, #6]
    b0c8:	e1822001 	orr	r2, r2, r1
    b0cc:	e5c02000 	strb	r2, [r0]
    b0d0:	e8bd8010 	pop	{r4, pc}
    b0d4:	e5d03007 	ldrb	r3, [r0, #7]
    b0d8:	e1a023a3 	lsr	r2, r3, #7
    b0dc:	e1823083 	orr	r3, r2, r3, lsl #1
    b0e0:	e6ef3073 	uxtb	r3, r3
    b0e4:	e0811003 	add	r1, r1, r3
    b0e8:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b0ec:	e5c03007 	strb	r3, [r0, #7]
    b0f0:	e1822001 	orr	r2, r2, r1
    b0f4:	e5c02000 	strb	r2, [r0]
    b0f8:	e8bd8010 	pop	{r4, pc}
    b0fc:	e5d03004 	ldrb	r3, [r0, #4]
    b100:	e1a023a3 	lsr	r2, r3, #7
    b104:	e1823083 	orr	r3, r2, r3, lsl #1
    b108:	e6ef3073 	uxtb	r3, r3
    b10c:	e0811003 	add	r1, r1, r3
    b110:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b114:	e5c03004 	strb	r3, [r0, #4]
    b118:	e1822001 	orr	r2, r2, r1
    b11c:	e5c02000 	strb	r2, [r0]
    b120:	e8bd8010 	pop	{r4, pc}
    b124:	e5d03005 	ldrb	r3, [r0, #5]
    b128:	e1a023a3 	lsr	r2, r3, #7
    b12c:	e1823083 	orr	r3, r2, r3, lsl #1
    b130:	e6ef3073 	uxtb	r3, r3
    b134:	e0811003 	add	r1, r1, r3
    b138:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b13c:	e5c03005 	strb	r3, [r0, #5]
    b140:	e1822001 	orr	r2, r2, r1
    b144:	e5c02000 	strb	r2, [r0]
    b148:	e8bd8010 	pop	{r4, pc}
    b14c:	e5d03002 	ldrb	r3, [r0, #2]
    b150:	e1a023a3 	lsr	r2, r3, #7
    b154:	e1823083 	orr	r3, r2, r3, lsl #1
    b158:	e6ef3073 	uxtb	r3, r3
    b15c:	e0811003 	add	r1, r1, r3
    b160:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b164:	e5c03002 	strb	r3, [r0, #2]
    b168:	e1822001 	orr	r2, r2, r1
    b16c:	e5c02000 	strb	r2, [r0]
    b170:	e8bd8010 	pop	{r4, pc}
    b174:	e5d03003 	ldrb	r3, [r0, #3]
    b178:	e1a023a3 	lsr	r2, r3, #7
    b17c:	e1823083 	orr	r3, r2, r3, lsl #1
    b180:	e6ef3073 	uxtb	r3, r3
    b184:	e0811003 	add	r1, r1, r3
    b188:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
    b18c:	e5c03003 	strb	r3, [r0, #3]
    b190:	e1822001 	orr	r2, r2, r1
    b194:	e5c02000 	strb	r2, [r0]
    b198:	e8bd8010 	pop	{r4, pc}
    b19c:	00050428 	.word	0x00050428

0000b1a0 <CodesFD>:
    b1a0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    b1a4:	e59f5cd0 	ldr	r5, [pc, #3280]	; be7c <CodesFD+0xcdc>
    b1a8:	e1d0e0bc 	ldrh	lr, [r0, #12]
    b1ac:	e2853a12 	add	r3, r5, #73728	; 0x12000
    b1b0:	e5936000 	ldr	r6, [r3]
    b1b4:	e28e2001 	add	r2, lr, #1
    b1b8:	e3560000 	cmp	r6, #0
    b1bc:	11a0388e 	lslne	r3, lr, #17
    b1c0:	159f1cc0 	ldrne	r1, [pc, #3264]	; be88 <CodesFD+0xce8>
    b1c4:	e6ff2072 	uxth	r2, r2
    b1c8:	11a038a3 	lsrne	r3, r3, #17
    b1cc:	e1c020bc 	strh	r2, [r0, #12]
    b1d0:	17d13003 	ldrbne	r3, [r1, r3]
    b1d4:	07d5300e 	ldrbeq	r3, [r5, lr]
    b1d8:	e59f4ca0 	ldr	r4, [pc, #3232]	; be80 <CodesFD+0xce0>
    b1dc:	e590c020 	ldr	ip, [r0, #32]
    b1e0:	e0841003 	add	r1, r4, r3
    b1e4:	e5d11200 	ldrb	r1, [r1, #512]	; 0x200
    b1e8:	e2433001 	sub	r3, r3, #1
    b1ec:	e04c1001 	sub	r1, ip, r1
    b1f0:	e5801020 	str	r1, [r0, #32]
    b1f4:	e35300fe 	cmp	r3, #254	; 0xfe
    b1f8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    b1fc:	ea0000fe 	b	b5fc <CodesFD+0x45c>
    b200:	0000f07c 	.word	0x0000f07c
    b204:	0000f0e8 	.word	0x0000f0e8
    b208:	0000efa0 	.word	0x0000efa0
    b20c:	0000f034 	.word	0x0000f034
    b210:	0000efe8 	.word	0x0000efe8
    b214:	0000f0c0 	.word	0x0000f0c0
    b218:	0000ed70 	.word	0x0000ed70
    b21c:	0000efd4 	.word	0x0000efd4
    b220:	0000ef1c 	.word	0x0000ef1c
    b224:	0000efb0 	.word	0x0000efb0
    b228:	0000e750 	.word	0x0000e750
    b22c:	0000e708 	.word	0x0000e708
    b230:	0000e6bc 	.word	0x0000e6bc
    b234:	0000e694 	.word	0x0000e694
    b238:	0000e668 	.word	0x0000e668
    b23c:	0000ee84 	.word	0x0000ee84
    b240:	0000ee40 	.word	0x0000ee40
    b244:	0000ee30 	.word	0x0000ee30
    b248:	0000ee20 	.word	0x0000ee20
    b24c:	0000ef58 	.word	0x0000ef58
    b250:	0000eed0 	.word	0x0000eed0
    b254:	0000e880 	.word	0x0000e880
    b258:	0000e85c 	.word	0x0000e85c
    b25c:	0000edd0 	.word	0x0000edd0
    b260:	0000ed94 	.word	0x0000ed94
    b264:	0000edfc 	.word	0x0000edfc
    b268:	0000e470 	.word	0x0000e470
    b26c:	0000e428 	.word	0x0000e428
    b270:	0000e3dc 	.word	0x0000e3dc
    b274:	0000e3b4 	.word	0x0000e3b4
    b278:	0000e38c 	.word	0x0000e38c
    b27c:	0000e960 	.word	0x0000e960
    b280:	0000e91c 	.word	0x0000e91c
    b284:	0000e8b8 	.word	0x0000e8b8
    b288:	0000e8a8 	.word	0x0000e8a8
    b28c:	0000ea14 	.word	0x0000ea14
    b290:	0000e9a0 	.word	0x0000e9a0
    b294:	0000e9ec 	.word	0x0000e9ec
    b298:	0000e634 	.word	0x0000e634
    b29c:	0000e598 	.word	0x0000e598
    b2a0:	0000e568 	.word	0x0000e568
    b2a4:	0000e5d8 	.word	0x0000e5d8
    b2a8:	0000e558 	.word	0x0000e558
    b2ac:	0000e510 	.word	0x0000e510
    b2b0:	0000e4c4 	.word	0x0000e4c4
    b2b4:	0000e49c 	.word	0x0000e49c
    b2b8:	0000e480 	.word	0x0000e480
    b2bc:	0000eb14 	.word	0x0000eb14
    b2c0:	0000ead0 	.word	0x0000ead0
    b2c4:	0000ea7c 	.word	0x0000ea7c
    b2c8:	0000ea6c 	.word	0x0000ea6c
    b2cc:	0000eb54 	.word	0x0000eb54
    b2d0:	0000e7c0 	.word	0x0000e7c0
    b2d4:	0000e774 	.word	0x0000e774
    b2d8:	0000e760 	.word	0x0000e760
    b2dc:	0000ed30 	.word	0x0000ed30
    b2e0:	0000ec80 	.word	0x0000ec80
    b2e4:	0000ece4 	.word	0x0000ece4
    b2e8:	0000ea5c 	.word	0x0000ea5c
    b2ec:	0000ec38 	.word	0x0000ec38
    b2f0:	0000ebec 	.word	0x0000ebec
    b2f4:	0000ecbc 	.word	0x0000ecbc
    b2f8:	0000dd34 	.word	0x0000dd34
    b2fc:	0000b5fc 	.word	0x0000b5fc
    b300:	0000df94 	.word	0x0000df94
    b304:	0000df88 	.word	0x0000df88
    b308:	0000df7c 	.word	0x0000df7c
    b30c:	0000e014 	.word	0x0000e014
    b310:	0000df70 	.word	0x0000df70
    b314:	0000df38 	.word	0x0000df38
    b318:	0000df2c 	.word	0x0000df2c
    b31c:	0000df20 	.word	0x0000df20
    b320:	0000b5fc 	.word	0x0000b5fc
    b324:	0000def8 	.word	0x0000def8
    b328:	0000deec 	.word	0x0000deec
    b32c:	0000dee0 	.word	0x0000dee0
    b330:	0000ded4 	.word	0x0000ded4
    b334:	0000de9c 	.word	0x0000de9c
    b338:	0000de90 	.word	0x0000de90
    b33c:	0000de78 	.word	0x0000de78
    b340:	0000de6c 	.word	0x0000de6c
    b344:	0000b5fc 	.word	0x0000b5fc
    b348:	0000de3c 	.word	0x0000de3c
    b34c:	0000de84 	.word	0x0000de84
    b350:	0000de30 	.word	0x0000de30
    b354:	0000ddf8 	.word	0x0000ddf8
    b358:	0000ddec 	.word	0x0000ddec
    b35c:	0000dde0 	.word	0x0000dde0
    b360:	0000ddd4 	.word	0x0000ddd4
    b364:	0000ddc8 	.word	0x0000ddc8
    b368:	0000b5fc 	.word	0x0000b5fc
    b36c:	0000dda4 	.word	0x0000dda4
    b370:	0000dd98 	.word	0x0000dd98
    b374:	0000dd60 	.word	0x0000dd60
    b378:	0000dd54 	.word	0x0000dd54
    b37c:	0000e17c 	.word	0x0000e17c
    b380:	0000e170 	.word	0x0000e170
    b384:	0000e164 	.word	0x0000e164
    b388:	0000e158 	.word	0x0000e158
    b38c:	0000b5fc 	.word	0x0000b5fc
    b390:	0000e140 	.word	0x0000e140
    b394:	0000e108 	.word	0x0000e108
    b398:	0000e0fc 	.word	0x0000e0fc
    b39c:	0000e1ac 	.word	0x0000e1ac
    b3a0:	0000e1a0 	.word	0x0000e1a0
    b3a4:	0000e194 	.word	0x0000e194
    b3a8:	0000e188 	.word	0x0000e188
    b3ac:	0000e1b8 	.word	0x0000e1b8
    b3b0:	0000b5fc 	.word	0x0000b5fc
    b3b4:	0000e02c 	.word	0x0000e02c
    b3b8:	0000e020 	.word	0x0000e020
    b3bc:	0000e2b4 	.word	0x0000e2b4
    b3c0:	0000e278 	.word	0x0000e278
    b3c4:	0000e23c 	.word	0x0000e23c
    b3c8:	0000e200 	.word	0x0000e200
    b3cc:	0000e32c 	.word	0x0000e32c
    b3d0:	0000e2f0 	.word	0x0000e2f0
    b3d4:	0000e368 	.word	0x0000e368
    b3d8:	0000e0c0 	.word	0x0000e0c0
    b3dc:	0000e1e8 	.word	0x0000e1e8
    b3e0:	0000e1dc 	.word	0x0000e1dc
    b3e4:	0000e1d0 	.word	0x0000e1d0
    b3e8:	0000e1c4 	.word	0x0000e1c4
    b3ec:	0000e1f4 	.word	0x0000e1f4
    b3f0:	0000c474 	.word	0x0000c474
    b3f4:	0000c43c 	.word	0x0000c43c
    b3f8:	0000b5fc 	.word	0x0000b5fc
    b3fc:	0000d3d4 	.word	0x0000d3d4
    b400:	0000d388 	.word	0x0000d388
    b404:	0000d33c 	.word	0x0000d33c
    b408:	0000d2f0 	.word	0x0000d2f0
    b40c:	0000d2a4 	.word	0x0000d2a4
    b410:	0000d258 	.word	0x0000d258
    b414:	0000d1e0 	.word	0x0000d1e0
    b418:	0000d1a4 	.word	0x0000d1a4
    b41c:	0000d14c 	.word	0x0000d14c
    b420:	0000d0f4 	.word	0x0000d0f4
    b424:	0000d09c 	.word	0x0000d09c
    b428:	0000d044 	.word	0x0000d044
    b42c:	0000cfec 	.word	0x0000cfec
    b430:	0000cf94 	.word	0x0000cf94
    b434:	0000cf10 	.word	0x0000cf10
    b438:	0000cecc 	.word	0x0000cecc
    b43c:	0000d534 	.word	0x0000d534
    b440:	0000d4d8 	.word	0x0000d4d8
    b444:	0000d47c 	.word	0x0000d47c
    b448:	0000d420 	.word	0x0000d420
    b44c:	0000d590 	.word	0x0000d590
    b450:	0000ce70 	.word	0x0000ce70
    b454:	0000cde8 	.word	0x0000cde8
    b458:	0000cddc 	.word	0x0000cddc
    b45c:	0000cd74 	.word	0x0000cd74
    b460:	0000cd0c 	.word	0x0000cd0c
    b464:	0000cca4 	.word	0x0000cca4
    b468:	0000cc3c 	.word	0x0000cc3c
    b46c:	0000cbd4 	.word	0x0000cbd4
    b470:	0000cb6c 	.word	0x0000cb6c
    b474:	0000cad8 	.word	0x0000cad8
    b478:	0000ca98 	.word	0x0000ca98
    b47c:	0000c9d4 	.word	0x0000c9d4
    b480:	0000c9b0 	.word	0x0000c9b0
    b484:	0000c98c 	.word	0x0000c98c
    b488:	0000c968 	.word	0x0000c968
    b48c:	0000c944 	.word	0x0000c944
    b490:	0000c920 	.word	0x0000c920
    b494:	0000c8d0 	.word	0x0000c8d0
    b498:	0000c8b8 	.word	0x0000c8b8
    b49c:	0000ca58 	.word	0x0000ca58
    b4a0:	0000ca38 	.word	0x0000ca38
    b4a4:	0000ca18 	.word	0x0000ca18
    b4a8:	0000c9f8 	.word	0x0000c9f8
    b4ac:	0000ca78 	.word	0x0000ca78
    b4b0:	0000c898 	.word	0x0000c898
    b4b4:	0000c84c 	.word	0x0000c84c
    b4b8:	0000c840 	.word	0x0000c840
    b4bc:	0000c800 	.word	0x0000c800
    b4c0:	0000c7e0 	.word	0x0000c7e0
    b4c4:	0000c7c0 	.word	0x0000c7c0
    b4c8:	0000c7a0 	.word	0x0000c7a0
    b4cc:	0000c820 	.word	0x0000c820
    b4d0:	0000c780 	.word	0x0000c780
    b4d4:	0000c734 	.word	0x0000c734
    b4d8:	0000c720 	.word	0x0000c720
    b4dc:	0000c6c8 	.word	0x0000c6c8
    b4e0:	0000c670 	.word	0x0000c670
    b4e4:	0000c618 	.word	0x0000c618
    b4e8:	0000c5c0 	.word	0x0000c5c0
    b4ec:	0000c568 	.word	0x0000c568
    b4f0:	0000c510 	.word	0x0000c510
    b4f4:	0000c48c 	.word	0x0000c48c
    b4f8:	0000c480 	.word	0x0000c480
    b4fc:	0000d874 	.word	0x0000d874
    b500:	0000d82c 	.word	0x0000d82c
    b504:	0000d7e0 	.word	0x0000d7e0
    b508:	0000d7a0 	.word	0x0000d7a0
    b50c:	0000d96c 	.word	0x0000d96c
    b510:	0000d8d0 	.word	0x0000d8d0
    b514:	0000d904 	.word	0x0000d904
    b518:	0000c3c4 	.word	0x0000c3c4
    b51c:	0000c368 	.word	0x0000c368
    b520:	0000c2d4 	.word	0x0000c2d4
    b524:	0000c31c 	.word	0x0000c31c
    b528:	0000be8c 	.word	0x0000be8c
    b52c:	0000bde8 	.word	0x0000bde8
    b530:	0000bd68 	.word	0x0000bd68
    b534:	0000bcf4 	.word	0x0000bcf4
    b538:	0000bcb8 	.word	0x0000bcb8
    b53c:	0000da84 	.word	0x0000da84
    b540:	0000da3c 	.word	0x0000da3c
    b544:	0000dae8 	.word	0x0000dae8
    b548:	0000d768 	.word	0x0000d768
    b54c:	0000d6d4 	.word	0x0000d6d4
    b550:	0000d6a0 	.word	0x0000d6a0
    b554:	0000d628 	.word	0x0000d628
    b558:	0000d5ec 	.word	0x0000d5ec
    b55c:	0000dcd8 	.word	0x0000dcd8
    b560:	0000db34 	.word	0x0000db34
    b564:	0000dc8c 	.word	0x0000dc8c
    b568:	0000da00 	.word	0x0000da00
    b56c:	0000dbec 	.word	0x0000dbec
    b570:	0000dae0 	.word	0x0000dae0
    b574:	0000db68 	.word	0x0000db68
    b578:	0000bc7c 	.word	0x0000bc7c
    b57c:	0000b9b0 	.word	0x0000b9b0
    b580:	0000b968 	.word	0x0000b968
    b584:	0000b91c 	.word	0x0000b91c
    b588:	0000b8c0 	.word	0x0000b8c0
    b58c:	0000ba80 	.word	0x0000ba80
    b590:	0000ba0c 	.word	0x0000ba0c
    b594:	0000ba40 	.word	0x0000ba40
    b598:	0000b818 	.word	0x0000b818
    b59c:	0000bb50 	.word	0x0000bb50
    b5a0:	0000b8b4 	.word	0x0000b8b4
    b5a4:	0000b868 	.word	0x0000b868
    b5a8:	0000b854 	.word	0x0000b854
    b5ac:	0000bbe8 	.word	0x0000bbe8
    b5b0:	0000b5fc 	.word	0x0000b5fc
    b5b4:	0000bb14 	.word	0x0000bb14
    b5b8:	0000bbac 	.word	0x0000bbac
    b5bc:	0000b7bc 	.word	0x0000b7bc
    b5c0:	0000b774 	.word	0x0000b774
    b5c4:	0000b728 	.word	0x0000b728
    b5c8:	0000b704 	.word	0x0000b704
    b5cc:	0000b670 	.word	0x0000b670
    b5d0:	0000b63c 	.word	0x0000b63c
    b5d4:	0000b600 	.word	0x0000b600
    b5d8:	0000c400 	.word	0x0000c400
    b5dc:	0000e064 	.word	0x0000e064
    b5e0:	0000e14c 	.word	0x0000e14c
    b5e4:	0000ddb0 	.word	0x0000ddb0
    b5e8:	0000de48 	.word	0x0000de48
    b5ec:	0000df04 	.word	0x0000df04
    b5f0:	0000dae0 	.word	0x0000dae0
    b5f4:	0000dfa0 	.word	0x0000dfa0
    b5f8:	0000f0f8 	.word	0x0000f0f8
    b5fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b600:	e3560000 	cmp	r6, #0
    b604:	11a02882 	lslne	r2, r2, #17
    b608:	159f3878 	ldrne	r3, [pc, #2168]	; be88 <CodesFD+0xce8>
    b60c:	e28ee002 	add	lr, lr, #2
    b610:	e1c0e0bc 	strh	lr, [r0, #12]
    b614:	11a028a2 	lsrne	r2, r2, #17
    b618:	17d32002 	ldrbne	r2, [r3, r2]
    b61c:	07d52002 	ldrbeq	r2, [r5, r2]
    b620:	e5d03001 	ldrb	r3, [r0, #1]
    b624:	e1822003 	orr	r2, r2, r3
    b628:	e0843002 	add	r3, r4, r2
    b62c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    b630:	e5c02001 	strb	r2, [r0, #1]
    b634:	e5c03000 	strb	r3, [r0]
    b638:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b63c:	e1d030be 	ldrh	r3, [r0, #14]
    b640:	e5d02001 	ldrb	r2, [r0, #1]
    b644:	e2433001 	sub	r3, r3, #1
    b648:	e6ff3073 	uxth	r3, r3
    b64c:	e1c030be 	strh	r3, [r0, #14]
    b650:	e7c52003 	strb	r2, [r5, r3]
    b654:	e1d030be 	ldrh	r3, [r0, #14]
    b658:	e5d02000 	ldrb	r2, [r0]
    b65c:	e2433001 	sub	r3, r3, #1
    b660:	e6ff3073 	uxth	r3, r3
    b664:	e1c030be 	strh	r3, [r0, #14]
    b668:	e7c52003 	strb	r2, [r5, r3]
    b66c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b670:	e1d030d0 	ldrsb	r3, [r0]
    b674:	e28ec003 	add	ip, lr, #3
    b678:	e3530000 	cmp	r3, #0
    b67c:	e6ffc07c 	uxth	ip, ip
    b680:	ba00129a 	blt	100f0 <CodesFD+0x4f50>
    b684:	e3560000 	cmp	r6, #0
    b688:	e2411007 	sub	r1, r1, #7
    b68c:	159f47f0 	ldrne	r4, [pc, #2032]	; be84 <CodesFD+0xce4>
    b690:	e28ee002 	add	lr, lr, #2
    b694:	e5801020 	str	r1, [r0, #32]
    b698:	e6ffe07e 	uxth	lr, lr
    b69c:	159f17e4 	ldrne	r1, [pc, #2020]	; be88 <CodesFD+0xce8>
    b6a0:	e1c0e0bc 	strh	lr, [r0, #12]
    b6a4:	10022004 	andne	r2, r2, r4
    b6a8:	07d53002 	ldrbeq	r3, [r5, r2]
    b6ac:	17d13002 	ldrbne	r3, [r1, r2]
    b6b0:	e1d020be 	ldrh	r2, [r0, #14]
    b6b4:	11c0c0bc 	strhne	ip, [r0, #12]
    b6b8:	e2422001 	sub	r2, r2, #1
    b6bc:	01c0c0bc 	strheq	ip, [r0, #12]
    b6c0:	e6ff2072 	uxth	r2, r2
    b6c4:	100ee004 	andne	lr, lr, r4
    b6c8:	e1a0c42c 	lsr	ip, ip, #8
    b6cc:	07d5e00e 	ldrbeq	lr, [r5, lr]
    b6d0:	17d1e00e 	ldrbne	lr, [r1, lr]
    b6d4:	e1c020be 	strh	r2, [r0, #14]
    b6d8:	e7c5c002 	strb	ip, [r5, r2]
    b6dc:	e1d020be 	ldrh	r2, [r0, #14]
    b6e0:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
    b6e4:	e5d0c00c 	ldrb	ip, [r0, #12]
    b6e8:	e2423001 	sub	r3, r2, #1
    b6ec:	e6ff3073 	uxth	r3, r3
    b6f0:	e181240e 	orr	r2, r1, lr, lsl #8
    b6f4:	e1c030be 	strh	r3, [r0, #14]
    b6f8:	e7c5c003 	strb	ip, [r5, r3]
    b6fc:	e1c020bc 	strh	r2, [r0, #12]
    b700:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b704:	e5d03018 	ldrb	r3, [r0, #24]
    b708:	e3130020 	tst	r3, #32
    b70c:	15902024 	ldrne	r2, [r0, #36]	; 0x24
    b710:	e3c33029 	bic	r3, r3, #41	; 0x29
    b714:	12422001 	subne	r2, r2, #1
    b718:	10821001 	addne	r1, r2, r1
    b71c:	15801020 	strne	r1, [r0, #32]
    b720:	e5c03018 	strb	r3, [r0, #24]
    b724:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b728:	e1d030d0 	ldrsb	r3, [r0]
    b72c:	e3530000 	cmp	r3, #0
    b730:	ba001270 	blt	100f8 <CodesFD+0x4f58>
    b734:	e3560000 	cmp	r6, #0
    b738:	e28e1002 	add	r1, lr, #2
    b73c:	159fe740 	ldrne	lr, [pc, #1856]	; be84 <CodesFD+0xce4>
    b740:	e6ff1071 	uxth	r1, r1
    b744:	159fc73c 	ldrne	ip, [pc, #1852]	; be88 <CodesFD+0xce8>
    b748:	e1c010bc 	strh	r1, [r0, #12]
    b74c:	1002200e 	andne	r2, r2, lr
    b750:	17dc3002 	ldrbne	r3, [ip, r2]
    b754:	07d53002 	ldrbeq	r3, [r5, r2]
    b758:	1001100e 	andne	r1, r1, lr
    b75c:	17dc2001 	ldrbne	r2, [ip, r1]
    b760:	07d52001 	ldrbeq	r2, [r5, r1]
    b764:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    b768:	e1833402 	orr	r3, r3, r2, lsl #8
    b76c:	e1c030bc 	strh	r3, [r0, #12]
    b770:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b774:	e1d020be 	ldrh	r2, [r0, #14]
    b778:	e3560000 	cmp	r6, #0
    b77c:	e2823001 	add	r3, r2, #1
    b780:	e6ff3073 	uxth	r3, r3
    b784:	e2821002 	add	r1, r2, #2
    b788:	e1c030be 	strh	r3, [r0, #14]
    b78c:	e6ff1071 	uxth	r1, r1
    b790:	0a001016 	beq	f7f0 <CodesFD+0x4650>
    b794:	e59fe6e8 	ldr	lr, [pc, #1768]	; be84 <CodesFD+0xce4>
    b798:	e59fc6e8 	ldr	ip, [pc, #1768]	; be88 <CodesFD+0xce8>
    b79c:	e002200e 	and	r2, r2, lr
    b7a0:	e7dc2002 	ldrb	r2, [ip, r2]
    b7a4:	e003300e 	and	r3, r3, lr
    b7a8:	e5c02000 	strb	r2, [r0]
    b7ac:	e1c010be 	strh	r1, [r0, #14]
    b7b0:	e7dc3003 	ldrb	r3, [ip, r3]
    b7b4:	e5c03001 	strb	r3, [r0, #1]
    b7b8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b7bc:	e1d030d0 	ldrsb	r3, [r0]
    b7c0:	e3530000 	cmp	r3, #0
    b7c4:	b8bd81f0 	poplt	{r4, r5, r6, r7, r8, pc}
    b7c8:	e1d020be 	ldrh	r2, [r0, #14]
    b7cc:	e241c006 	sub	ip, r1, #6
    b7d0:	e2823001 	add	r3, r2, #1
    b7d4:	e6ff3073 	uxth	r3, r3
    b7d8:	e2821002 	add	r1, r2, #2
    b7dc:	e3560000 	cmp	r6, #0
    b7e0:	e580c020 	str	ip, [r0, #32]
    b7e4:	e1c030be 	strh	r3, [r0, #14]
    b7e8:	e6ff1071 	uxth	r1, r1
    b7ec:	0a00120d 	beq	10028 <CodesFD+0x4e88>
    b7f0:	e59fe68c 	ldr	lr, [pc, #1676]	; be84 <CodesFD+0xce4>
    b7f4:	e59fc68c 	ldr	ip, [pc, #1676]	; be88 <CodesFD+0xce8>
    b7f8:	e002200e 	and	r2, r2, lr
    b7fc:	e7dc2002 	ldrb	r2, [ip, r2]
    b800:	e003300e 	and	r3, r3, lr
    b804:	e5c0200c 	strb	r2, [r0, #12]
    b808:	e1c010be 	strh	r1, [r0, #14]
    b80c:	e7dc3003 	ldrb	r3, [ip, r3]
    b810:	e5c0300d 	strb	r3, [r0, #13]
    b814:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b818:	e3a01020 	mov	r1, #32
    b81c:	e1d030be 	ldrh	r3, [r0, #14]
    b820:	e1a02422 	lsr	r2, r2, #8
    b824:	e2433001 	sub	r3, r3, #1
    b828:	e6ff3073 	uxth	r3, r3
    b82c:	e1c030be 	strh	r3, [r0, #14]
    b830:	e7c52003 	strb	r2, [r5, r3]
    b834:	e1d030be 	ldrh	r3, [r0, #14]
    b838:	e5d0200c 	ldrb	r2, [r0, #12]
    b83c:	e2433001 	sub	r3, r3, #1
    b840:	e6ff3073 	uxth	r3, r3
    b844:	e1c030be 	strh	r3, [r0, #14]
    b848:	e7c52003 	strb	r2, [r5, r3]
    b84c:	e1c010bc 	strh	r1, [r0, #12]
    b850:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b854:	e1d020b4 	ldrh	r2, [r0, #4]
    b858:	e1d030b6 	ldrh	r3, [r0, #6]
    b85c:	e1c020b6 	strh	r2, [r0, #6]
    b860:	e1c030b4 	strh	r3, [r0, #4]
    b864:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b868:	e5d03000 	ldrb	r3, [r0]
    b86c:	e3130004 	tst	r3, #4
    b870:	0a00119f 	beq	fef4 <CodesFD+0x4d54>
    b874:	e3560000 	cmp	r6, #0
    b878:	e28e1002 	add	r1, lr, #2
    b87c:	159fe600 	ldrne	lr, [pc, #1536]	; be84 <CodesFD+0xce4>
    b880:	e6ff1071 	uxth	r1, r1
    b884:	159fc5fc 	ldrne	ip, [pc, #1532]	; be88 <CodesFD+0xce8>
    b888:	e1c010bc 	strh	r1, [r0, #12]
    b88c:	1002200e 	andne	r2, r2, lr
    b890:	17dc3002 	ldrbne	r3, [ip, r2]
    b894:	07d53002 	ldrbeq	r3, [r5, r2]
    b898:	1001100e 	andne	r1, r1, lr
    b89c:	17dc2001 	ldrbne	r2, [ip, r1]
    b8a0:	07d52001 	ldrbeq	r2, [r5, r1]
    b8a4:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    b8a8:	e1833402 	orr	r3, r3, r2, lsl #8
    b8ac:	e1c030bc 	strh	r3, [r0, #12]
    b8b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b8b4:	e1d030ba 	ldrh	r3, [r0, #10]
    b8b8:	e1c030bc 	strh	r3, [r0, #12]
    b8bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b8c0:	e1d020be 	ldrh	r2, [r0, #14]
    b8c4:	e3560000 	cmp	r6, #0
    b8c8:	e2821001 	add	r1, r2, #1
    b8cc:	e6ff1071 	uxth	r1, r1
    b8d0:	e5d0e00a 	ldrb	lr, [r0, #10]
    b8d4:	0a00100b 	beq	f908 <CodesFD+0x4768>
    b8d8:	e59fc5a4 	ldr	ip, [pc, #1444]	; be84 <CodesFD+0xce4>
    b8dc:	e59f45a4 	ldr	r4, [pc, #1444]	; be88 <CodesFD+0xce8>
    b8e0:	e002300c 	and	r3, r2, ip
    b8e4:	e7d43003 	ldrb	r3, [r4, r3]
    b8e8:	e1c010be 	strh	r1, [r0, #14]
    b8ec:	e7c5e002 	strb	lr, [r5, r2]
    b8f0:	e1d020be 	ldrh	r2, [r0, #14]
    b8f4:	e00cc002 	and	ip, ip, r2
    b8f8:	e7d4c00c 	ldrb	ip, [r4, ip]
    b8fc:	e5d0100b 	ldrb	r1, [r0, #11]
    b900:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    b904:	e183340c 	orr	r3, r3, ip, lsl #8
    b908:	e242c001 	sub	ip, r2, #1
    b90c:	e1c0c0be 	strh	ip, [r0, #14]
    b910:	e7c51002 	strb	r1, [r5, r2]
    b914:	e1c030ba 	strh	r3, [r0, #10]
    b918:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b91c:	e5d03000 	ldrb	r3, [r0]
    b920:	e3130004 	tst	r3, #4
    b924:	1a00116c 	bne	fedc <CodesFD+0x4d3c>
    b928:	e3560000 	cmp	r6, #0
    b92c:	e28e1002 	add	r1, lr, #2
    b930:	159fe54c 	ldrne	lr, [pc, #1356]	; be84 <CodesFD+0xce4>
    b934:	e6ff1071 	uxth	r1, r1
    b938:	159fc548 	ldrne	ip, [pc, #1352]	; be88 <CodesFD+0xce8>
    b93c:	e1c010bc 	strh	r1, [r0, #12]
    b940:	1002200e 	andne	r2, r2, lr
    b944:	17dc3002 	ldrbne	r3, [ip, r2]
    b948:	07d53002 	ldrbeq	r3, [r5, r2]
    b94c:	1001100e 	andne	r1, r1, lr
    b950:	17dc2001 	ldrbne	r2, [ip, r1]
    b954:	07d52001 	ldrbeq	r2, [r5, r1]
    b958:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    b95c:	e1833402 	orr	r3, r3, r2, lsl #8
    b960:	e1c030bc 	strh	r3, [r0, #12]
    b964:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b968:	e1d020be 	ldrh	r2, [r0, #14]
    b96c:	e3560000 	cmp	r6, #0
    b970:	e2823001 	add	r3, r2, #1
    b974:	e6ff3073 	uxth	r3, r3
    b978:	e2821002 	add	r1, r2, #2
    b97c:	e1c030be 	strh	r3, [r0, #14]
    b980:	e6ff1071 	uxth	r1, r1
    b984:	0a000fda 	beq	f8f4 <CodesFD+0x4754>
    b988:	e59fe4f4 	ldr	lr, [pc, #1268]	; be84 <CodesFD+0xce4>
    b98c:	e59fc4f4 	ldr	ip, [pc, #1268]	; be88 <CodesFD+0xce8>
    b990:	e002200e 	and	r2, r2, lr
    b994:	e7dc2002 	ldrb	r2, [ip, r2]
    b998:	e003300e 	and	r3, r3, lr
    b99c:	e5c0200a 	strb	r2, [r0, #10]
    b9a0:	e1c010be 	strh	r1, [r0, #14]
    b9a4:	e7dc3003 	ldrb	r3, [ip, r3]
    b9a8:	e5c0300b 	strb	r3, [r0, #11]
    b9ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b9b0:	e5d03000 	ldrb	r3, [r0]
    b9b4:	e3130004 	tst	r3, #4
    b9b8:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
    b9bc:	e1d020be 	ldrh	r2, [r0, #14]
    b9c0:	e241c006 	sub	ip, r1, #6
    b9c4:	e2823001 	add	r3, r2, #1
    b9c8:	e6ff3073 	uxth	r3, r3
    b9cc:	e2821002 	add	r1, r2, #2
    b9d0:	e3560000 	cmp	r6, #0
    b9d4:	e580c020 	str	ip, [r0, #32]
    b9d8:	e1c030be 	strh	r3, [r0, #14]
    b9dc:	e6ff1071 	uxth	r1, r1
    b9e0:	0a0011cc 	beq	10118 <CodesFD+0x4f78>
    b9e4:	e59fe498 	ldr	lr, [pc, #1176]	; be84 <CodesFD+0xce4>
    b9e8:	e59fc498 	ldr	ip, [pc, #1176]	; be88 <CodesFD+0xce8>
    b9ec:	e002200e 	and	r2, r2, lr
    b9f0:	e7dc2002 	ldrb	r2, [ip, r2]
    b9f4:	e003300e 	and	r3, r3, lr
    b9f8:	e5c0200c 	strb	r2, [r0, #12]
    b9fc:	e1c010be 	strh	r1, [r0, #14]
    ba00:	e7dc3003 	ldrb	r3, [ip, r3]
    ba04:	e5c0300d 	strb	r3, [r0, #13]
    ba08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ba0c:	e1d030be 	ldrh	r3, [r0, #14]
    ba10:	e5d0200b 	ldrb	r2, [r0, #11]
    ba14:	e2433001 	sub	r3, r3, #1
    ba18:	e6ff3073 	uxth	r3, r3
    ba1c:	e1c030be 	strh	r3, [r0, #14]
    ba20:	e7c52003 	strb	r2, [r5, r3]
    ba24:	e1d030be 	ldrh	r3, [r0, #14]
    ba28:	e5d0200a 	ldrb	r2, [r0, #10]
    ba2c:	e2433001 	sub	r3, r3, #1
    ba30:	e6ff3073 	uxth	r3, r3
    ba34:	e1c030be 	strh	r3, [r0, #14]
    ba38:	e7c52003 	strb	r2, [r5, r3]
    ba3c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ba40:	e3560000 	cmp	r6, #0
    ba44:	11a02882 	lslne	r2, r2, #17
    ba48:	159f3438 	ldrne	r3, [pc, #1080]	; be88 <CodesFD+0xce8>
    ba4c:	e28ee002 	add	lr, lr, #2
    ba50:	e1c0e0bc 	strh	lr, [r0, #12]
    ba54:	11a028a2 	lsrne	r2, r2, #17
    ba58:	17d32002 	ldrbne	r2, [r3, r2]
    ba5c:	07d52002 	ldrbeq	r2, [r5, r2]
    ba60:	e5d03001 	ldrb	r3, [r0, #1]
    ba64:	e0022003 	and	r2, r2, r3
    ba68:	e0843002 	add	r3, r4, r2
    ba6c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    ba70:	e5c02001 	strb	r2, [r0, #1]
    ba74:	e3833010 	orr	r3, r3, #16
    ba78:	e5c03000 	strb	r3, [r0]
    ba7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ba80:	e5d03000 	ldrb	r3, [r0]
    ba84:	e28ec003 	add	ip, lr, #3
    ba88:	e3130004 	tst	r3, #4
    ba8c:	e6ffc07c 	uxth	ip, ip
    ba90:	1a001107 	bne	feb4 <CodesFD+0x4d14>
    ba94:	e3560000 	cmp	r6, #0
    ba98:	e2411007 	sub	r1, r1, #7
    ba9c:	159f43e0 	ldrne	r4, [pc, #992]	; be84 <CodesFD+0xce4>
    baa0:	e28ee002 	add	lr, lr, #2
    baa4:	e5801020 	str	r1, [r0, #32]
    baa8:	e6ffe07e 	uxth	lr, lr
    baac:	159f13d4 	ldrne	r1, [pc, #980]	; be88 <CodesFD+0xce8>
    bab0:	e1c0e0bc 	strh	lr, [r0, #12]
    bab4:	10022004 	andne	r2, r2, r4
    bab8:	07d53002 	ldrbeq	r3, [r5, r2]
    babc:	17d13002 	ldrbne	r3, [r1, r2]
    bac0:	e1d020be 	ldrh	r2, [r0, #14]
    bac4:	11c0c0bc 	strhne	ip, [r0, #12]
    bac8:	e2422001 	sub	r2, r2, #1
    bacc:	01c0c0bc 	strheq	ip, [r0, #12]
    bad0:	e6ff2072 	uxth	r2, r2
    bad4:	100ee004 	andne	lr, lr, r4
    bad8:	e1a0c42c 	lsr	ip, ip, #8
    badc:	07d5e00e 	ldrbeq	lr, [r5, lr]
    bae0:	17d1e00e 	ldrbne	lr, [r1, lr]
    bae4:	e1c020be 	strh	r2, [r0, #14]
    bae8:	e7c5c002 	strb	ip, [r5, r2]
    baec:	e1d020be 	ldrh	r2, [r0, #14]
    baf0:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
    baf4:	e5d0c00c 	ldrb	ip, [r0, #12]
    baf8:	e2423001 	sub	r3, r2, #1
    bafc:	e6ff3073 	uxth	r3, r3
    bb00:	e181240e 	orr	r2, r1, lr, lsl #8
    bb04:	e1c030be 	strh	r3, [r0, #14]
    bb08:	e7c5c003 	strb	ip, [r5, r3]
    bb0c:	e1c020bc 	strh	r2, [r0, #12]
    bb10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    bb14:	e3560000 	cmp	r6, #0
    bb18:	11a02882 	lslne	r2, r2, #17
    bb1c:	159f3364 	ldrne	r3, [pc, #868]	; be88 <CodesFD+0xce8>
    bb20:	e28ee002 	add	lr, lr, #2
    bb24:	e1c0e0bc 	strh	lr, [r0, #12]
    bb28:	11a028a2 	lsrne	r2, r2, #17
    bb2c:	17d32002 	ldrbne	r2, [r3, r2]
    bb30:	07d52002 	ldrbeq	r2, [r5, r2]
    bb34:	e5d03001 	ldrb	r3, [r0, #1]
    bb38:	e0222003 	eor	r2, r2, r3
    bb3c:	e0843002 	add	r3, r4, r2
    bb40:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    bb44:	e5c02001 	strb	r2, [r0, #1]
    bb48:	e5c03000 	strb	r3, [r0]
    bb4c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    bb50:	e5d03000 	ldrb	r3, [r0]
    bb54:	e3130004 	tst	r3, #4
    bb58:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
    bb5c:	e1d020be 	ldrh	r2, [r0, #14]
    bb60:	e241c006 	sub	ip, r1, #6
    bb64:	e2823001 	add	r3, r2, #1
    bb68:	e6ff3073 	uxth	r3, r3
    bb6c:	e2821002 	add	r1, r2, #2
    bb70:	e3560000 	cmp	r6, #0
    bb74:	e580c020 	str	ip, [r0, #32]
    bb78:	e1c030be 	strh	r3, [r0, #14]
    bb7c:	e6ff1071 	uxth	r1, r1
    bb80:	0a00116e 	beq	10140 <CodesFD+0x4fa0>
    bb84:	e59fe2f8 	ldr	lr, [pc, #760]	; be84 <CodesFD+0xce4>
    bb88:	e59fc2f8 	ldr	ip, [pc, #760]	; be88 <CodesFD+0xce8>
    bb8c:	e002200e 	and	r2, r2, lr
    bb90:	e7dc2002 	ldrb	r2, [ip, r2]
    bb94:	e003300e 	and	r3, r3, lr
    bb98:	e5c0200c 	strb	r2, [r0, #12]
    bb9c:	e1c010be 	strh	r1, [r0, #14]
    bba0:	e7dc3003 	ldrb	r3, [ip, r3]
    bba4:	e5c0300d 	strb	r3, [r0, #13]
    bba8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    bbac:	e3a01028 	mov	r1, #40	; 0x28
    bbb0:	e1d030be 	ldrh	r3, [r0, #14]
    bbb4:	e1a02422 	lsr	r2, r2, #8
    bbb8:	e2433001 	sub	r3, r3, #1
    bbbc:	e6ff3073 	uxth	r3, r3
    bbc0:	e1c030be 	strh	r3, [r0, #14]
    bbc4:	e7c52003 	strb	r2, [r5, r3]
    bbc8:	e1d030be 	ldrh	r3, [r0, #14]
    bbcc:	e5d0200c 	ldrb	r2, [r0, #12]
    bbd0:	e2433001 	sub	r3, r3, #1
    bbd4:	e6ff3073 	uxth	r3, r3
    bbd8:	e1c030be 	strh	r3, [r0, #14]
    bbdc:	e7c52003 	strb	r2, [r5, r3]
    bbe0:	e1c010bc 	strh	r1, [r0, #12]
    bbe4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    bbe8:	e5d03000 	ldrb	r3, [r0]
    bbec:	e28ec003 	add	ip, lr, #3
    bbf0:	e3130004 	tst	r3, #4
    bbf4:	e6ffc07c 	uxth	ip, ip
    bbf8:	0a0010cb 	beq	ff2c <CodesFD+0x4d8c>
    bbfc:	e3560000 	cmp	r6, #0
    bc00:	e2411007 	sub	r1, r1, #7
    bc04:	159f4278 	ldrne	r4, [pc, #632]	; be84 <CodesFD+0xce4>
    bc08:	e28ee002 	add	lr, lr, #2
    bc0c:	e5801020 	str	r1, [r0, #32]
    bc10:	e6ffe07e 	uxth	lr, lr
    bc14:	159f126c 	ldrne	r1, [pc, #620]	; be88 <CodesFD+0xce8>
    bc18:	e1c0e0bc 	strh	lr, [r0, #12]
    bc1c:	10022004 	andne	r2, r2, r4
    bc20:	07d53002 	ldrbeq	r3, [r5, r2]
    bc24:	17d13002 	ldrbne	r3, [r1, r2]
    bc28:	e1d020be 	ldrh	r2, [r0, #14]
    bc2c:	11c0c0bc 	strhne	ip, [r0, #12]
    bc30:	e2422001 	sub	r2, r2, #1
    bc34:	01c0c0bc 	strheq	ip, [r0, #12]
    bc38:	e6ff2072 	uxth	r2, r2
    bc3c:	100ee004 	andne	lr, lr, r4
    bc40:	e1a0c42c 	lsr	ip, ip, #8
    bc44:	07d5e00e 	ldrbeq	lr, [r5, lr]
    bc48:	17d1e00e 	ldrbne	lr, [r1, lr]
    bc4c:	e1c020be 	strh	r2, [r0, #14]
    bc50:	e7c5c002 	strb	ip, [r5, r2]
    bc54:	e1d020be 	ldrh	r2, [r0, #14]
    bc58:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
    bc5c:	e5d0c00c 	ldrb	ip, [r0, #12]
    bc60:	e2423001 	sub	r3, r2, #1
    bc64:	e6ff3073 	uxth	r3, r3
    bc68:	e181240e 	orr	r2, r1, lr, lsl #8
    bc6c:	e1c030be 	strh	r3, [r0, #14]
    bc70:	e7c5c003 	strb	ip, [r5, r3]
    bc74:	e1c020bc 	strh	r2, [r0, #12]
    bc78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    bc7c:	e3a01018 	mov	r1, #24
    bc80:	e1d030be 	ldrh	r3, [r0, #14]
    bc84:	e1a02422 	lsr	r2, r2, #8
    bc88:	e2433001 	sub	r3, r3, #1
    bc8c:	e6ff3073 	uxth	r3, r3
    bc90:	e1c030be 	strh	r3, [r0, #14]
    bc94:	e7c52003 	strb	r2, [r5, r3]
    bc98:	e1d030be 	ldrh	r3, [r0, #14]
    bc9c:	e5d0200c 	ldrb	r2, [r0, #12]
    bca0:	e2433001 	sub	r3, r3, #1
    bca4:	e6ff3073 	uxth	r3, r3
    bca8:	e1c030be 	strh	r3, [r0, #14]
    bcac:	e7c52003 	strb	r2, [r5, r3]
    bcb0:	e1c010bc 	strh	r1, [r0, #12]
    bcb4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    bcb8:	e3a01008 	mov	r1, #8
    bcbc:	e1d030be 	ldrh	r3, [r0, #14]
    bcc0:	e1a02132 	lsr	r2, r2, r1
    bcc4:	e2433001 	sub	r3, r3, #1
    bcc8:	e6ff3073 	uxth	r3, r3
    bccc:	e1c030be 	strh	r3, [r0, #14]
    bcd0:	e7c52003 	strb	r2, [r5, r3]
    bcd4:	e1d030be 	ldrh	r3, [r0, #14]
    bcd8:	e5d0200c 	ldrb	r2, [r0, #12]
    bcdc:	e2433001 	sub	r3, r3, #1
    bce0:	e6ff3073 	uxth	r3, r3
    bce4:	e1c030be 	strh	r3, [r0, #14]
    bce8:	e7c52003 	strb	r2, [r5, r3]
    bcec:	e1c010bc 	strh	r1, [r0, #12]
    bcf0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    bcf4:	e3560000 	cmp	r6, #0
    bcf8:	11a02882 	lslne	r2, r2, #17
    bcfc:	e28ee002 	add	lr, lr, #2
    bd00:	159f3180 	ldrne	r3, [pc, #384]	; be88 <CodesFD+0xce8>
    bd04:	11a028a2 	lsrne	r2, r2, #17
    bd08:	e1c0e0bc 	strh	lr, [r0, #12]
    bd0c:	e5d01000 	ldrb	r1, [r0]
    bd10:	17d32002 	ldrbne	r2, [r3, r2]
    bd14:	e5d03001 	ldrb	r3, [r0, #1]
    bd18:	07d52002 	ldrbeq	r2, [r5, r2]
    bd1c:	e2011001 	and	r1, r1, #1
    bd20:	e0811003 	add	r1, r1, r3
    bd24:	e0811002 	add	r1, r1, r2
    bd28:	e6efc071 	uxtb	ip, r1
    bd2c:	e023e002 	eor	lr, r3, r2
    bd30:	e084300c 	add	r3, r4, ip
    bd34:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    bd38:	e022300c 	eor	r3, r2, ip
    bd3c:	e02e200c 	eor	r2, lr, ip
    bd40:	e1c3300e 	bic	r3, r3, lr
    bd44:	e2022010 	and	r2, r2, #16
    bd48:	e1a032c3 	asr	r3, r3, #5
    bd4c:	e1822004 	orr	r2, r2, r4
    bd50:	e2033004 	and	r3, r3, #4
    bd54:	e1821421 	orr	r1, r2, r1, lsr #8
    bd58:	e1833001 	orr	r3, r3, r1
    bd5c:	e5c03000 	strb	r3, [r0]
    bd60:	e5c0c001 	strb	ip, [r0, #1]
    bd64:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    bd68:	e3560000 	cmp	r6, #0
    bd6c:	e28ec002 	add	ip, lr, #2
    bd70:	159f410c 	ldrne	r4, [pc, #268]	; be84 <CodesFD+0xce4>
    bd74:	e6ffc07c 	uxth	ip, ip
    bd78:	e28e1003 	add	r1, lr, #3
    bd7c:	159fe104 	ldrne	lr, [pc, #260]	; be88 <CodesFD+0xce8>
    bd80:	e1c0c0bc 	strh	ip, [r0, #12]
    bd84:	10022004 	andne	r2, r2, r4
    bd88:	07d53002 	ldrbeq	r3, [r5, r2]
    bd8c:	17de3002 	ldrbne	r3, [lr, r2]
    bd90:	e1d020be 	ldrh	r2, [r0, #14]
    bd94:	e6ff1071 	uxth	r1, r1
    bd98:	e2422001 	sub	r2, r2, #1
    bd9c:	11c010bc 	strhne	r1, [r0, #12]
    bda0:	01c010bc 	strheq	r1, [r0, #12]
    bda4:	e6ff2072 	uxth	r2, r2
    bda8:	100cc004 	andne	ip, ip, r4
    bdac:	e1a01421 	lsr	r1, r1, #8
    bdb0:	07d5e00c 	ldrbeq	lr, [r5, ip]
    bdb4:	17dee00c 	ldrbne	lr, [lr, ip]
    bdb8:	e1c020be 	strh	r2, [r0, #14]
    bdbc:	e7c51002 	strb	r1, [r5, r2]
    bdc0:	e1d020be 	ldrh	r2, [r0, #14]
    bdc4:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
    bdc8:	e5d0c00c 	ldrb	ip, [r0, #12]
    bdcc:	e2423001 	sub	r3, r2, #1
    bdd0:	e6ff3073 	uxth	r3, r3
    bdd4:	e181240e 	orr	r2, r1, lr, lsl #8
    bdd8:	e1c030be 	strh	r3, [r0, #14]
    bddc:	e7c5c003 	strb	ip, [r5, r3]
    bde0:	e1c020bc 	strh	r2, [r0, #12]
    bde4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    bde8:	e5d03000 	ldrb	r3, [r0]
    bdec:	e28ec003 	add	ip, lr, #3
    bdf0:	e3130040 	tst	r3, #64	; 0x40
    bdf4:	e6ffc07c 	uxth	ip, ip
    bdf8:	0a001032 	beq	fec8 <CodesFD+0x4d28>
    bdfc:	e3560000 	cmp	r6, #0
    be00:	e2411007 	sub	r1, r1, #7
    be04:	159f4078 	ldrne	r4, [pc, #120]	; be84 <CodesFD+0xce4>
    be08:	e28ee002 	add	lr, lr, #2
    be0c:	e5801020 	str	r1, [r0, #32]
    be10:	e6ffe07e 	uxth	lr, lr
    be14:	159f106c 	ldrne	r1, [pc, #108]	; be88 <CodesFD+0xce8>
    be18:	e1c0e0bc 	strh	lr, [r0, #12]
    be1c:	10022004 	andne	r2, r2, r4
    be20:	07d53002 	ldrbeq	r3, [r5, r2]
    be24:	17d13002 	ldrbne	r3, [r1, r2]
    be28:	e1d020be 	ldrh	r2, [r0, #14]
    be2c:	11c0c0bc 	strhne	ip, [r0, #12]
    be30:	e2422001 	sub	r2, r2, #1
    be34:	01c0c0bc 	strheq	ip, [r0, #12]
    be38:	e6ff2072 	uxth	r2, r2
    be3c:	100ee004 	andne	lr, lr, r4
    be40:	e1a0c42c 	lsr	ip, ip, #8
    be44:	07d5e00e 	ldrbeq	lr, [r5, lr]
    be48:	17d1e00e 	ldrbne	lr, [r1, lr]
    be4c:	e1c020be 	strh	r2, [r0, #14]
    be50:	e7c5c002 	strb	ip, [r5, r2]
    be54:	e1d020be 	ldrh	r2, [r0, #14]
    be58:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
    be5c:	e5d0c00c 	ldrb	ip, [r0, #12]
    be60:	e2423001 	sub	r3, r2, #1
    be64:	e6ff3073 	uxth	r3, r3
    be68:	e181240e 	orr	r2, r1, lr, lsl #8
    be6c:	e1c030be 	strh	r3, [r0, #14]
    be70:	e7c5c003 	strb	ip, [r5, r3]
    be74:	e1c020bc 	strh	r2, [r0, #12]
    be78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    be7c:	0005cf80 	.word	0x0005cf80
    be80:	0003c260 	.word	0x0003c260
    be84:	00007fff 	.word	0x00007fff
    be88:	00050428 	.word	0x00050428
    be8c:	e28e3002 	add	r3, lr, #2
    be90:	e6ff3073 	uxth	r3, r3
    be94:	e28ec003 	add	ip, lr, #3
    be98:	e3560000 	cmp	r6, #0
    be9c:	e1c030bc 	strh	r3, [r0, #12]
    bea0:	e6ffc07c 	uxth	ip, ip
    bea4:	e1d070ba 	ldrh	r7, [r0, #10]
    bea8:	0a000eb0 	beq	f970 <CodesFD+0x47d0>
    beac:	e51f8030 	ldr	r8, [pc, #-48]	; be84 <CodesFD+0xce4>
    beb0:	e51fe030 	ldr	lr, [pc, #-48]	; be88 <CodesFD+0xce8>
    beb4:	e0022008 	and	r2, r2, r8
    beb8:	e19e20d2 	ldrsb	r2, [lr, r2]
    bebc:	e0033008 	and	r3, r3, r8
    bec0:	e1c0c0bc 	strh	ip, [r0, #12]
    bec4:	e7de3003 	ldrb	r3, [lr, r3]
    bec8:	e0877002 	add	r7, r7, r2
    becc:	e0842003 	add	r2, r4, r3
    bed0:	e5d22400 	ldrb	r2, [r2, #1024]	; 0x400
    bed4:	e2433006 	sub	r3, r3, #6
    bed8:	e0411002 	sub	r1, r1, r2
    bedc:	e5801020 	str	r1, [r0, #32]
    bee0:	e6ff2077 	uxth	r2, r7
    bee4:	e35300f8 	cmp	r3, #248	; 0xf8
    bee8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    beec:	eafffdc2 	b	b5fc <CodesFD+0x45c>
    bef0:	00010190 	.word	0x00010190
    bef4:	0000b5fc 	.word	0x0000b5fc
    bef8:	0000b5fc 	.word	0x0000b5fc
    befc:	0000b5fc 	.word	0x0000b5fc
    bf00:	0000b5fc 	.word	0x0000b5fc
    bf04:	0000b5fc 	.word	0x0000b5fc
    bf08:	0000b5fc 	.word	0x0000b5fc
    bf0c:	0000b5fc 	.word	0x0000b5fc
    bf10:	0000f4ac 	.word	0x0000f4ac
    bf14:	0000b5fc 	.word	0x0000b5fc
    bf18:	0000b5fc 	.word	0x0000b5fc
    bf1c:	0000b5fc 	.word	0x0000b5fc
    bf20:	0000b5fc 	.word	0x0000b5fc
    bf24:	0000b5fc 	.word	0x0000b5fc
    bf28:	0000b5fc 	.word	0x0000b5fc
    bf2c:	0000b5fc 	.word	0x0000b5fc
    bf30:	0000f328 	.word	0x0000f328
    bf34:	0000b5fc 	.word	0x0000b5fc
    bf38:	0000b5fc 	.word	0x0000b5fc
    bf3c:	0000b5fc 	.word	0x0000b5fc
    bf40:	0000b5fc 	.word	0x0000b5fc
    bf44:	0000b5fc 	.word	0x0000b5fc
    bf48:	0000b5fc 	.word	0x0000b5fc
    bf4c:	0000b5fc 	.word	0x0000b5fc
    bf50:	0000f638 	.word	0x0000f638
    bf54:	0000b5fc 	.word	0x0000b5fc
    bf58:	0000b5fc 	.word	0x0000b5fc
    bf5c:	0000b5fc 	.word	0x0000b5fc
    bf60:	0000b5fc 	.word	0x0000b5fc
    bf64:	0000b5fc 	.word	0x0000b5fc
    bf68:	0000b5fc 	.word	0x0000b5fc
    bf6c:	0000b5fc 	.word	0x0000b5fc
    bf70:	0000f3f4 	.word	0x0000f3f4
    bf74:	0000b5fc 	.word	0x0000b5fc
    bf78:	0000b5fc 	.word	0x0000b5fc
    bf7c:	0000b5fc 	.word	0x0000b5fc
    bf80:	0000b5fc 	.word	0x0000b5fc
    bf84:	0000b5fc 	.word	0x0000b5fc
    bf88:	0000b5fc 	.word	0x0000b5fc
    bf8c:	0000b5fc 	.word	0x0000b5fc
    bf90:	0000f568 	.word	0x0000f568
    bf94:	0000b5fc 	.word	0x0000b5fc
    bf98:	0000b5fc 	.word	0x0000b5fc
    bf9c:	0000b5fc 	.word	0x0000b5fc
    bfa0:	0000b5fc 	.word	0x0000b5fc
    bfa4:	0000b5fc 	.word	0x0000b5fc
    bfa8:	0000b5fc 	.word	0x0000b5fc
    bfac:	0000b5fc 	.word	0x0000b5fc
    bfb0:	0000f26c 	.word	0x0000f26c
    bfb4:	0000b5fc 	.word	0x0000b5fc
    bfb8:	0000b5fc 	.word	0x0000b5fc
    bfbc:	0000b5fc 	.word	0x0000b5fc
    bfc0:	0000b5fc 	.word	0x0000b5fc
    bfc4:	0000b5fc 	.word	0x0000b5fc
    bfc8:	0000b5fc 	.word	0x0000b5fc
    bfcc:	0000b5fc 	.word	0x0000b5fc
    bfd0:	0000f6b4 	.word	0x0000f6b4
    bfd4:	0000b5fc 	.word	0x0000b5fc
    bfd8:	0000f450 	.word	0x0000f450
    bfdc:	0000f450 	.word	0x0000f450
    bfe0:	0000f450 	.word	0x0000f450
    bfe4:	0000f450 	.word	0x0000f450
    bfe8:	0000f450 	.word	0x0000f450
    bfec:	0000f450 	.word	0x0000f450
    bff0:	0000f450 	.word	0x0000f450
    bff4:	0000f450 	.word	0x0000f450
    bff8:	0000f5c8 	.word	0x0000f5c8
    bffc:	0000f5c8 	.word	0x0000f5c8
    c000:	0000f5c8 	.word	0x0000f5c8
    c004:	0000f5c8 	.word	0x0000f5c8
    c008:	0000f5c8 	.word	0x0000f5c8
    c00c:	0000f5c8 	.word	0x0000f5c8
    c010:	0000f5c8 	.word	0x0000f5c8
    c014:	0000f5c8 	.word	0x0000f5c8
    c018:	0000f2cc 	.word	0x0000f2cc
    c01c:	0000f2cc 	.word	0x0000f2cc
    c020:	0000f2cc 	.word	0x0000f2cc
    c024:	0000f2cc 	.word	0x0000f2cc
    c028:	0000f2cc 	.word	0x0000f2cc
    c02c:	0000f2cc 	.word	0x0000f2cc
    c030:	0000f2cc 	.word	0x0000f2cc
    c034:	0000f2cc 	.word	0x0000f2cc
    c038:	0000f67c 	.word	0x0000f67c
    c03c:	0000f67c 	.word	0x0000f67c
    c040:	0000f67c 	.word	0x0000f67c
    c044:	0000f67c 	.word	0x0000f67c
    c048:	0000f67c 	.word	0x0000f67c
    c04c:	0000f67c 	.word	0x0000f67c
    c050:	0000f67c 	.word	0x0000f67c
    c054:	0000f67c 	.word	0x0000f67c
    c058:	0000f398 	.word	0x0000f398
    c05c:	0000f398 	.word	0x0000f398
    c060:	0000f398 	.word	0x0000f398
    c064:	0000f398 	.word	0x0000f398
    c068:	0000f398 	.word	0x0000f398
    c06c:	0000f398 	.word	0x0000f398
    c070:	0000f398 	.word	0x0000f398
    c074:	0000f398 	.word	0x0000f398
    c078:	0000f50c 	.word	0x0000f50c
    c07c:	0000f50c 	.word	0x0000f50c
    c080:	0000f50c 	.word	0x0000f50c
    c084:	0000f50c 	.word	0x0000f50c
    c088:	0000f50c 	.word	0x0000f50c
    c08c:	0000f50c 	.word	0x0000f50c
    c090:	0000f50c 	.word	0x0000f50c
    c094:	0000f50c 	.word	0x0000f50c
    c098:	0000f210 	.word	0x0000f210
    c09c:	0000f210 	.word	0x0000f210
    c0a0:	0000f210 	.word	0x0000f210
    c0a4:	0000f210 	.word	0x0000f210
    c0a8:	0000f210 	.word	0x0000f210
    c0ac:	0000f210 	.word	0x0000f210
    c0b0:	0000f210 	.word	0x0000f210
    c0b4:	0000f210 	.word	0x0000f210
    c0b8:	0000f600 	.word	0x0000f600
    c0bc:	0000f600 	.word	0x0000f600
    c0c0:	0000f600 	.word	0x0000f600
    c0c4:	0000f600 	.word	0x0000f600
    c0c8:	0000f600 	.word	0x0000f600
    c0cc:	0000f600 	.word	0x0000f600
    c0d0:	0000f600 	.word	0x0000f600
    c0d4:	0000f600 	.word	0x0000f600
    c0d8:	0000b5fc 	.word	0x0000b5fc
    c0dc:	0000b5fc 	.word	0x0000b5fc
    c0e0:	0000b5fc 	.word	0x0000b5fc
    c0e4:	0000b5fc 	.word	0x0000b5fc
    c0e8:	0000b5fc 	.word	0x0000b5fc
    c0ec:	0000b5fc 	.word	0x0000b5fc
    c0f0:	0000f488 	.word	0x0000f488
    c0f4:	0000b5fc 	.word	0x0000b5fc
    c0f8:	0000b5fc 	.word	0x0000b5fc
    c0fc:	0000b5fc 	.word	0x0000b5fc
    c100:	0000b5fc 	.word	0x0000b5fc
    c104:	0000b5fc 	.word	0x0000b5fc
    c108:	0000b5fc 	.word	0x0000b5fc
    c10c:	0000b5fc 	.word	0x0000b5fc
    c110:	0000f544 	.word	0x0000f544
    c114:	0000b5fc 	.word	0x0000b5fc
    c118:	0000b5fc 	.word	0x0000b5fc
    c11c:	0000b5fc 	.word	0x0000b5fc
    c120:	0000b5fc 	.word	0x0000b5fc
    c124:	0000b5fc 	.word	0x0000b5fc
    c128:	0000b5fc 	.word	0x0000b5fc
    c12c:	0000b5fc 	.word	0x0000b5fc
    c130:	0000f304 	.word	0x0000f304
    c134:	0000b5fc 	.word	0x0000b5fc
    c138:	0000b5fc 	.word	0x0000b5fc
    c13c:	0000b5fc 	.word	0x0000b5fc
    c140:	0000b5fc 	.word	0x0000b5fc
    c144:	0000b5fc 	.word	0x0000b5fc
    c148:	0000b5fc 	.word	0x0000b5fc
    c14c:	0000b5fc 	.word	0x0000b5fc
    c150:	0000f5a4 	.word	0x0000f5a4
    c154:	0000b5fc 	.word	0x0000b5fc
    c158:	0000b5fc 	.word	0x0000b5fc
    c15c:	0000b5fc 	.word	0x0000b5fc
    c160:	0000b5fc 	.word	0x0000b5fc
    c164:	0000b5fc 	.word	0x0000b5fc
    c168:	0000b5fc 	.word	0x0000b5fc
    c16c:	0000b5fc 	.word	0x0000b5fc
    c170:	0000f3d0 	.word	0x0000f3d0
    c174:	0000b5fc 	.word	0x0000b5fc
    c178:	0000b5fc 	.word	0x0000b5fc
    c17c:	0000b5fc 	.word	0x0000b5fc
    c180:	0000b5fc 	.word	0x0000b5fc
    c184:	0000b5fc 	.word	0x0000b5fc
    c188:	0000b5fc 	.word	0x0000b5fc
    c18c:	0000b5fc 	.word	0x0000b5fc
    c190:	0000f4e8 	.word	0x0000f4e8
    c194:	0000b5fc 	.word	0x0000b5fc
    c198:	0000b5fc 	.word	0x0000b5fc
    c19c:	0000b5fc 	.word	0x0000b5fc
    c1a0:	0000b5fc 	.word	0x0000b5fc
    c1a4:	0000b5fc 	.word	0x0000b5fc
    c1a8:	0000b5fc 	.word	0x0000b5fc
    c1ac:	0000b5fc 	.word	0x0000b5fc
    c1b0:	0000f248 	.word	0x0000f248
    c1b4:	0000b5fc 	.word	0x0000b5fc
    c1b8:	0000b5fc 	.word	0x0000b5fc
    c1bc:	0000b5fc 	.word	0x0000b5fc
    c1c0:	0000b5fc 	.word	0x0000b5fc
    c1c4:	0000b5fc 	.word	0x0000b5fc
    c1c8:	0000b5fc 	.word	0x0000b5fc
    c1cc:	0000b5fc 	.word	0x0000b5fc
    c1d0:	0000f42c 	.word	0x0000f42c
    c1d4:	0000b5fc 	.word	0x0000b5fc
    c1d8:	0000b5fc 	.word	0x0000b5fc
    c1dc:	0000b5fc 	.word	0x0000b5fc
    c1e0:	0000b5fc 	.word	0x0000b5fc
    c1e4:	0000b5fc 	.word	0x0000b5fc
    c1e8:	0000b5fc 	.word	0x0000b5fc
    c1ec:	0000b5fc 	.word	0x0000b5fc
    c1f0:	0000f2a8 	.word	0x0000f2a8
    c1f4:	0000b5fc 	.word	0x0000b5fc
    c1f8:	0000b5fc 	.word	0x0000b5fc
    c1fc:	0000b5fc 	.word	0x0000b5fc
    c200:	0000b5fc 	.word	0x0000b5fc
    c204:	0000b5fc 	.word	0x0000b5fc
    c208:	0000b5fc 	.word	0x0000b5fc
    c20c:	0000b5fc 	.word	0x0000b5fc
    c210:	0000f374 	.word	0x0000f374
    c214:	0000b5fc 	.word	0x0000b5fc
    c218:	0000b5fc 	.word	0x0000b5fc
    c21c:	0000b5fc 	.word	0x0000b5fc
    c220:	0000b5fc 	.word	0x0000b5fc
    c224:	0000b5fc 	.word	0x0000b5fc
    c228:	0000b5fc 	.word	0x0000b5fc
    c22c:	0000b5fc 	.word	0x0000b5fc
    c230:	0000f1c4 	.word	0x0000f1c4
    c234:	0000b5fc 	.word	0x0000b5fc
    c238:	0000b5fc 	.word	0x0000b5fc
    c23c:	0000b5fc 	.word	0x0000b5fc
    c240:	0000b5fc 	.word	0x0000b5fc
    c244:	0000b5fc 	.word	0x0000b5fc
    c248:	0000b5fc 	.word	0x0000b5fc
    c24c:	0000b5fc 	.word	0x0000b5fc
    c250:	0000f1a0 	.word	0x0000f1a0
    c254:	0000b5fc 	.word	0x0000b5fc
    c258:	0000b5fc 	.word	0x0000b5fc
    c25c:	0000b5fc 	.word	0x0000b5fc
    c260:	0000b5fc 	.word	0x0000b5fc
    c264:	0000b5fc 	.word	0x0000b5fc
    c268:	0000b5fc 	.word	0x0000b5fc
    c26c:	0000b5fc 	.word	0x0000b5fc
    c270:	0000f17c 	.word	0x0000f17c
    c274:	0000b5fc 	.word	0x0000b5fc
    c278:	0000b5fc 	.word	0x0000b5fc
    c27c:	0000b5fc 	.word	0x0000b5fc
    c280:	0000b5fc 	.word	0x0000b5fc
    c284:	0000b5fc 	.word	0x0000b5fc
    c288:	0000b5fc 	.word	0x0000b5fc
    c28c:	0000b5fc 	.word	0x0000b5fc
    c290:	0000f158 	.word	0x0000f158
    c294:	0000b5fc 	.word	0x0000b5fc
    c298:	0000b5fc 	.word	0x0000b5fc
    c29c:	0000b5fc 	.word	0x0000b5fc
    c2a0:	0000b5fc 	.word	0x0000b5fc
    c2a4:	0000b5fc 	.word	0x0000b5fc
    c2a8:	0000b5fc 	.word	0x0000b5fc
    c2ac:	0000b5fc 	.word	0x0000b5fc
    c2b0:	0000f134 	.word	0x0000f134
    c2b4:	0000b5fc 	.word	0x0000b5fc
    c2b8:	0000b5fc 	.word	0x0000b5fc
    c2bc:	0000b5fc 	.word	0x0000b5fc
    c2c0:	0000b5fc 	.word	0x0000b5fc
    c2c4:	0000b5fc 	.word	0x0000b5fc
    c2c8:	0000b5fc 	.word	0x0000b5fc
    c2cc:	0000b5fc 	.word	0x0000b5fc
    c2d0:	0000f1e8 	.word	0x0000f1e8
    c2d4:	e1d020be 	ldrh	r2, [r0, #14]
    c2d8:	e3560000 	cmp	r6, #0
    c2dc:	e2823001 	add	r3, r2, #1
    c2e0:	e6ff3073 	uxth	r3, r3
    c2e4:	e2821002 	add	r1, r2, #2
    c2e8:	e1c030be 	strh	r3, [r0, #14]
    c2ec:	e6ff1071 	uxth	r1, r1
    c2f0:	0a000d99 	beq	f95c <CodesFD+0x47bc>
    c2f4:	e51fe478 	ldr	lr, [pc, #-1144]	; be84 <CodesFD+0xce4>
    c2f8:	e51fc478 	ldr	ip, [pc, #-1144]	; be88 <CodesFD+0xce8>
    c2fc:	e002200e 	and	r2, r2, lr
    c300:	e7dc2002 	ldrb	r2, [ip, r2]
    c304:	e003300e 	and	r3, r3, lr
    c308:	e5c0200c 	strb	r2, [r0, #12]
    c30c:	e1c010be 	strh	r1, [r0, #14]
    c310:	e7dc3003 	ldrb	r3, [ip, r3]
    c314:	e5c0300d 	strb	r3, [r0, #13]
    c318:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c31c:	e5d03000 	ldrb	r3, [r0]
    c320:	e3130040 	tst	r3, #64	; 0x40
    c324:	0a000ee4 	beq	febc <CodesFD+0x4d1c>
    c328:	e3560000 	cmp	r6, #0
    c32c:	e28e1002 	add	r1, lr, #2
    c330:	151fe4b4 	ldrne	lr, [pc, #-1204]	; be84 <CodesFD+0xce4>
    c334:	e6ff1071 	uxth	r1, r1
    c338:	151fc4b8 	ldrne	ip, [pc, #-1208]	; be88 <CodesFD+0xce8>
    c33c:	e1c010bc 	strh	r1, [r0, #12]
    c340:	1002200e 	andne	r2, r2, lr
    c344:	17dc3002 	ldrbne	r3, [ip, r2]
    c348:	07d53002 	ldrbeq	r3, [r5, r2]
    c34c:	1001100e 	andne	r1, r1, lr
    c350:	17dc2001 	ldrbne	r2, [ip, r1]
    c354:	07d52001 	ldrbeq	r2, [r5, r1]
    c358:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    c35c:	e1833402 	orr	r3, r3, r2, lsl #8
    c360:	e1c030bc 	strh	r3, [r0, #12]
    c364:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c368:	e5d03000 	ldrb	r3, [r0]
    c36c:	e3130040 	tst	r3, #64	; 0x40
    c370:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
    c374:	e1d020be 	ldrh	r2, [r0, #14]
    c378:	e241c006 	sub	ip, r1, #6
    c37c:	e2823001 	add	r3, r2, #1
    c380:	e6ff3073 	uxth	r3, r3
    c384:	e2821002 	add	r1, r2, #2
    c388:	e3560000 	cmp	r6, #0
    c38c:	e580c020 	str	ip, [r0, #32]
    c390:	e1c030be 	strh	r3, [r0, #14]
    c394:	e6ff1071 	uxth	r1, r1
    c398:	0a000f6d 	beq	10154 <CodesFD+0x4fb4>
    c39c:	e51fe520 	ldr	lr, [pc, #-1312]	; be84 <CodesFD+0xce4>
    c3a0:	e51fc520 	ldr	ip, [pc, #-1312]	; be88 <CodesFD+0xce8>
    c3a4:	e002200e 	and	r2, r2, lr
    c3a8:	e7dc2002 	ldrb	r2, [ip, r2]
    c3ac:	e003300e 	and	r3, r3, lr
    c3b0:	e5c0200c 	strb	r2, [r0, #12]
    c3b4:	e1c010be 	strh	r1, [r0, #14]
    c3b8:	e7dc3003 	ldrb	r3, [ip, r3]
    c3bc:	e5c0300d 	strb	r3, [r0, #13]
    c3c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c3c4:	e3a01000 	mov	r1, #0
    c3c8:	e1d030be 	ldrh	r3, [r0, #14]
    c3cc:	e1a02422 	lsr	r2, r2, #8
    c3d0:	e2433001 	sub	r3, r3, #1
    c3d4:	e6ff3073 	uxth	r3, r3
    c3d8:	e1c030be 	strh	r3, [r0, #14]
    c3dc:	e7c52003 	strb	r2, [r5, r3]
    c3e0:	e1d030be 	ldrh	r3, [r0, #14]
    c3e4:	e5d0200c 	ldrb	r2, [r0, #12]
    c3e8:	e2433001 	sub	r3, r3, #1
    c3ec:	e6ff3073 	uxth	r3, r3
    c3f0:	e1c030be 	strh	r3, [r0, #14]
    c3f4:	e7c52003 	strb	r2, [r5, r3]
    c3f8:	e1c010bc 	strh	r1, [r0, #12]
    c3fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c400:	e3a01030 	mov	r1, #48	; 0x30
    c404:	e1d030be 	ldrh	r3, [r0, #14]
    c408:	e1a02422 	lsr	r2, r2, #8
    c40c:	e2433001 	sub	r3, r3, #1
    c410:	e6ff3073 	uxth	r3, r3
    c414:	e1c030be 	strh	r3, [r0, #14]
    c418:	e7c52003 	strb	r2, [r5, r3]
    c41c:	e1d030be 	ldrh	r3, [r0, #14]
    c420:	e5d0200c 	ldrb	r2, [r0, #12]
    c424:	e2433001 	sub	r3, r3, #1
    c428:	e6ff3073 	uxth	r3, r3
    c42c:	e1c030be 	strh	r3, [r0, #14]
    c430:	e7c52003 	strb	r2, [r5, r3]
    c434:	e1c010bc 	strh	r1, [r0, #12]
    c438:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c43c:	e28ee002 	add	lr, lr, #2
    c440:	e3560000 	cmp	r6, #0
    c444:	e1c0e0bc 	strh	lr, [r0, #12]
    c448:	e1d030ba 	ldrh	r3, [r0, #10]
    c44c:	0a000cdf 	beq	f7d0 <CodesFD+0x4630>
    c450:	e51fc5d4 	ldr	ip, [pc, #-1492]	; be84 <CodesFD+0xce4>
    c454:	e51f15d4 	ldr	r1, [pc, #-1492]	; be88 <CodesFD+0xce8>
    c458:	e002200c 	and	r2, r2, ip
    c45c:	e19120d2 	ldrsb	r2, [r1, r2]
    c460:	e0833002 	add	r3, r3, r2
    c464:	e003300c 	and	r3, r3, ip
    c468:	e7d13003 	ldrb	r3, [r1, r3]
    c46c:	e5c03001 	strb	r3, [r0, #1]
    c470:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c474:	e5d0300a 	ldrb	r3, [r0, #10]
    c478:	e5c03001 	strb	r3, [r0, #1]
    c47c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c480:	e3a03042 	mov	r3, #66	; 0x42
    c484:	e5c03000 	strb	r3, [r0]
    c488:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c48c:	e28ee002 	add	lr, lr, #2
    c490:	e3560000 	cmp	r6, #0
    c494:	e1c0e0bc 	strh	lr, [r0, #12]
    c498:	e1d030ba 	ldrh	r3, [r0, #10]
    c49c:	0a000d29 	beq	f948 <CodesFD+0x47a8>
    c4a0:	e51fc624 	ldr	ip, [pc, #-1572]	; be84 <CodesFD+0xce4>
    c4a4:	e51f1624 	ldr	r1, [pc, #-1572]	; be88 <CodesFD+0xce8>
    c4a8:	e002200c 	and	r2, r2, ip
    c4ac:	e19120d2 	ldrsb	r2, [r1, r2]
    c4b0:	e0833002 	add	r3, r3, r2
    c4b4:	e003300c 	and	r3, r3, ip
    c4b8:	e7d11003 	ldrb	r1, [r1, r3]
    c4bc:	e5d0e001 	ldrb	lr, [r0, #1]
    c4c0:	e04ec001 	sub	ip, lr, r1
    c4c4:	e6ffc07c 	uxth	ip, ip
    c4c8:	e6ef207c 	uxtb	r2, ip
    c4cc:	e0843002 	add	r3, r4, r2
    c4d0:	e021100e 	eor	r1, r1, lr
    c4d4:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    c4d8:	e02ee002 	eor	lr, lr, r2
    c4dc:	e0213002 	eor	r3, r1, r2
    c4e0:	e3844002 	orr	r4, r4, #2
    c4e4:	e001200e 	and	r2, r1, lr
    c4e8:	e2033010 	and	r3, r3, #16
    c4ec:	e1a0142c 	lsr	r1, ip, #8
    c4f0:	e1a022a2 	lsr	r2, r2, #5
    c4f4:	e1833004 	orr	r3, r3, r4
    c4f8:	e2611000 	rsb	r1, r1, #0
    c4fc:	e2022004 	and	r2, r2, #4
    c500:	e1833001 	orr	r3, r3, r1
    c504:	e1833002 	orr	r3, r3, r2
    c508:	e5c03000 	strb	r3, [r0]
    c50c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c510:	e5d0e001 	ldrb	lr, [r0, #1]
    c514:	e5d0100a 	ldrb	r1, [r0, #10]
    c518:	e04ec001 	sub	ip, lr, r1
    c51c:	e6ffc07c 	uxth	ip, ip
    c520:	e6ef207c 	uxtb	r2, ip
    c524:	e0843002 	add	r3, r4, r2
    c528:	e021100e 	eor	r1, r1, lr
    c52c:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    c530:	e02ee002 	eor	lr, lr, r2
    c534:	e0213002 	eor	r3, r1, r2
    c538:	e3844002 	orr	r4, r4, #2
    c53c:	e001200e 	and	r2, r1, lr
    c540:	e2033010 	and	r3, r3, #16
    c544:	e1a0142c 	lsr	r1, ip, #8
    c548:	e1a022a2 	lsr	r2, r2, #5
    c54c:	e1833004 	orr	r3, r3, r4
    c550:	e2611000 	rsb	r1, r1, #0
    c554:	e2022004 	and	r2, r2, #4
    c558:	e1833001 	orr	r3, r3, r1
    c55c:	e1833002 	orr	r3, r3, r2
    c560:	e5c03000 	strb	r3, [r0]
    c564:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c568:	e5d0e001 	ldrb	lr, [r0, #1]
    c56c:	e5d0100b 	ldrb	r1, [r0, #11]
    c570:	e04ec001 	sub	ip, lr, r1
    c574:	e6ffc07c 	uxth	ip, ip
    c578:	e6ef207c 	uxtb	r2, ip
    c57c:	e0843002 	add	r3, r4, r2
    c580:	e021100e 	eor	r1, r1, lr
    c584:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    c588:	e02ee002 	eor	lr, lr, r2
    c58c:	e0213002 	eor	r3, r1, r2
    c590:	e3844002 	orr	r4, r4, #2
    c594:	e001200e 	and	r2, r1, lr
    c598:	e2033010 	and	r3, r3, #16
    c59c:	e1a0142c 	lsr	r1, ip, #8
    c5a0:	e1a022a2 	lsr	r2, r2, #5
    c5a4:	e1833004 	orr	r3, r3, r4
    c5a8:	e2611000 	rsb	r1, r1, #0
    c5ac:	e2022004 	and	r2, r2, #4
    c5b0:	e1833001 	orr	r3, r3, r1
    c5b4:	e1833002 	orr	r3, r3, r2
    c5b8:	e5c03000 	strb	r3, [r0]
    c5bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c5c0:	e5d0e001 	ldrb	lr, [r0, #1]
    c5c4:	e5d01004 	ldrb	r1, [r0, #4]
    c5c8:	e04ec001 	sub	ip, lr, r1
    c5cc:	e6ffc07c 	uxth	ip, ip
    c5d0:	e6ef207c 	uxtb	r2, ip
    c5d4:	e0843002 	add	r3, r4, r2
    c5d8:	e021100e 	eor	r1, r1, lr
    c5dc:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    c5e0:	e02ee002 	eor	lr, lr, r2
    c5e4:	e0213002 	eor	r3, r1, r2
    c5e8:	e3844002 	orr	r4, r4, #2
    c5ec:	e001200e 	and	r2, r1, lr
    c5f0:	e2033010 	and	r3, r3, #16
    c5f4:	e1a0142c 	lsr	r1, ip, #8
    c5f8:	e1a022a2 	lsr	r2, r2, #5
    c5fc:	e1833004 	orr	r3, r3, r4
    c600:	e2611000 	rsb	r1, r1, #0
    c604:	e2022004 	and	r2, r2, #4
    c608:	e1833001 	orr	r3, r3, r1
    c60c:	e1833002 	orr	r3, r3, r2
    c610:	e5c03000 	strb	r3, [r0]
    c614:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c618:	e5d0e001 	ldrb	lr, [r0, #1]
    c61c:	e5d01005 	ldrb	r1, [r0, #5]
    c620:	e04ec001 	sub	ip, lr, r1
    c624:	e6ffc07c 	uxth	ip, ip
    c628:	e6ef207c 	uxtb	r2, ip
    c62c:	e0843002 	add	r3, r4, r2
    c630:	e021100e 	eor	r1, r1, lr
    c634:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    c638:	e02ee002 	eor	lr, lr, r2
    c63c:	e0213002 	eor	r3, r1, r2
    c640:	e3844002 	orr	r4, r4, #2
    c644:	e001200e 	and	r2, r1, lr
    c648:	e2033010 	and	r3, r3, #16
    c64c:	e1a0142c 	lsr	r1, ip, #8
    c650:	e1a022a2 	lsr	r2, r2, #5
    c654:	e1833004 	orr	r3, r3, r4
    c658:	e2611000 	rsb	r1, r1, #0
    c65c:	e2022004 	and	r2, r2, #4
    c660:	e1833001 	orr	r3, r3, r1
    c664:	e1833002 	orr	r3, r3, r2
    c668:	e5c03000 	strb	r3, [r0]
    c66c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c670:	e5d0e001 	ldrb	lr, [r0, #1]
    c674:	e5d01002 	ldrb	r1, [r0, #2]
    c678:	e04ec001 	sub	ip, lr, r1
    c67c:	e6ffc07c 	uxth	ip, ip
    c680:	e6ef207c 	uxtb	r2, ip
    c684:	e0843002 	add	r3, r4, r2
    c688:	e021100e 	eor	r1, r1, lr
    c68c:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    c690:	e02ee002 	eor	lr, lr, r2
    c694:	e0213002 	eor	r3, r1, r2
    c698:	e3844002 	orr	r4, r4, #2
    c69c:	e001200e 	and	r2, r1, lr
    c6a0:	e2033010 	and	r3, r3, #16
    c6a4:	e1a0142c 	lsr	r1, ip, #8
    c6a8:	e1a022a2 	lsr	r2, r2, #5
    c6ac:	e1833004 	orr	r3, r3, r4
    c6b0:	e2611000 	rsb	r1, r1, #0
    c6b4:	e2022004 	and	r2, r2, #4
    c6b8:	e1833001 	orr	r3, r3, r1
    c6bc:	e1833002 	orr	r3, r3, r2
    c6c0:	e5c03000 	strb	r3, [r0]
    c6c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c6c8:	e5d0e001 	ldrb	lr, [r0, #1]
    c6cc:	e5d01003 	ldrb	r1, [r0, #3]
    c6d0:	e04ec001 	sub	ip, lr, r1
    c6d4:	e6ffc07c 	uxth	ip, ip
    c6d8:	e6ef207c 	uxtb	r2, ip
    c6dc:	e0843002 	add	r3, r4, r2
    c6e0:	e021100e 	eor	r1, r1, lr
    c6e4:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    c6e8:	e02ee002 	eor	lr, lr, r2
    c6ec:	e0213002 	eor	r3, r1, r2
    c6f0:	e3844002 	orr	r4, r4, #2
    c6f4:	e001200e 	and	r2, r1, lr
    c6f8:	e2033010 	and	r3, r3, #16
    c6fc:	e1a0142c 	lsr	r1, ip, #8
    c700:	e1a022a2 	lsr	r2, r2, #5
    c704:	e1833004 	orr	r3, r3, r4
    c708:	e2611000 	rsb	r1, r1, #0
    c70c:	e2022004 	and	r2, r2, #4
    c710:	e1833001 	orr	r3, r3, r1
    c714:	e1833002 	orr	r3, r3, r2
    c718:	e5c03000 	strb	r3, [r0]
    c71c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c720:	e5d03001 	ldrb	r3, [r0, #1]
    c724:	e0843003 	add	r3, r4, r3
    c728:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c72c:	e5c03000 	strb	r3, [r0]
    c730:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c734:	e28ee002 	add	lr, lr, #2
    c738:	e3560000 	cmp	r6, #0
    c73c:	e1c0e0bc 	strh	lr, [r0, #12]
    c740:	e1d030ba 	ldrh	r3, [r0, #10]
    c744:	0a000c75 	beq	f920 <CodesFD+0x4780>
    c748:	e51fc8cc 	ldr	ip, [pc, #-2252]	; be84 <CodesFD+0xce4>
    c74c:	e51f18cc 	ldr	r1, [pc, #-2252]	; be88 <CodesFD+0xce8>
    c750:	e002200c 	and	r2, r2, ip
    c754:	e19120d2 	ldrsb	r2, [r1, r2]
    c758:	e0833002 	add	r3, r3, r2
    c75c:	e003300c 	and	r3, r3, ip
    c760:	e7d12003 	ldrb	r2, [r1, r3]
    c764:	e5d03001 	ldrb	r3, [r0, #1]
    c768:	e1822003 	orr	r2, r2, r3
    c76c:	e0843002 	add	r3, r4, r2
    c770:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c774:	e5c02001 	strb	r2, [r0, #1]
    c778:	e5c03000 	strb	r3, [r0]
    c77c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c780:	e5d02001 	ldrb	r2, [r0, #1]
    c784:	e5d0300a 	ldrb	r3, [r0, #10]
    c788:	e1822003 	orr	r2, r2, r3
    c78c:	e0843002 	add	r3, r4, r2
    c790:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c794:	e5c02001 	strb	r2, [r0, #1]
    c798:	e5c03000 	strb	r3, [r0]
    c79c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c7a0:	e5d02001 	ldrb	r2, [r0, #1]
    c7a4:	e5d03004 	ldrb	r3, [r0, #4]
    c7a8:	e1822003 	orr	r2, r2, r3
    c7ac:	e0843002 	add	r3, r4, r2
    c7b0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c7b4:	e5c02001 	strb	r2, [r0, #1]
    c7b8:	e5c03000 	strb	r3, [r0]
    c7bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c7c0:	e5d02001 	ldrb	r2, [r0, #1]
    c7c4:	e5d03005 	ldrb	r3, [r0, #5]
    c7c8:	e1822003 	orr	r2, r2, r3
    c7cc:	e0843002 	add	r3, r4, r2
    c7d0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c7d4:	e5c02001 	strb	r2, [r0, #1]
    c7d8:	e5c03000 	strb	r3, [r0]
    c7dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c7e0:	e5d02001 	ldrb	r2, [r0, #1]
    c7e4:	e5d03002 	ldrb	r3, [r0, #2]
    c7e8:	e1822003 	orr	r2, r2, r3
    c7ec:	e0843002 	add	r3, r4, r2
    c7f0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c7f4:	e5c02001 	strb	r2, [r0, #1]
    c7f8:	e5c03000 	strb	r3, [r0]
    c7fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c800:	e5d02001 	ldrb	r2, [r0, #1]
    c804:	e5d03003 	ldrb	r3, [r0, #3]
    c808:	e1822003 	orr	r2, r2, r3
    c80c:	e0843002 	add	r3, r4, r2
    c810:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c814:	e5c02001 	strb	r2, [r0, #1]
    c818:	e5c03000 	strb	r3, [r0]
    c81c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c820:	e5d02001 	ldrb	r2, [r0, #1]
    c824:	e5d0300b 	ldrb	r3, [r0, #11]
    c828:	e1822003 	orr	r2, r2, r3
    c82c:	e0843002 	add	r3, r4, r2
    c830:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c834:	e5c02001 	strb	r2, [r0, #1]
    c838:	e5c03000 	strb	r3, [r0]
    c83c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c840:	e3a03044 	mov	r3, #68	; 0x44
    c844:	e1c030b0 	strh	r3, [r0]
    c848:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c84c:	e28ee002 	add	lr, lr, #2
    c850:	e3560000 	cmp	r6, #0
    c854:	e1c0e0bc 	strh	lr, [r0, #12]
    c858:	e1d030ba 	ldrh	r3, [r0, #10]
    c85c:	0a000c15 	beq	f8b8 <CodesFD+0x4718>
    c860:	e51fc9e4 	ldr	ip, [pc, #-2532]	; be84 <CodesFD+0xce4>
    c864:	e51f19e4 	ldr	r1, [pc, #-2532]	; be88 <CodesFD+0xce8>
    c868:	e002200c 	and	r2, r2, ip
    c86c:	e19120d2 	ldrsb	r2, [r1, r2]
    c870:	e0833002 	add	r3, r3, r2
    c874:	e003300c 	and	r3, r3, ip
    c878:	e7d12003 	ldrb	r2, [r1, r3]
    c87c:	e5d03001 	ldrb	r3, [r0, #1]
    c880:	e0222003 	eor	r2, r2, r3
    c884:	e0843002 	add	r3, r4, r2
    c888:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c88c:	e5c02001 	strb	r2, [r0, #1]
    c890:	e5c03000 	strb	r3, [r0]
    c894:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c898:	e5d02001 	ldrb	r2, [r0, #1]
    c89c:	e5d0300a 	ldrb	r3, [r0, #10]
    c8a0:	e0222003 	eor	r2, r2, r3
    c8a4:	e0843002 	add	r3, r4, r2
    c8a8:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c8ac:	e5c02001 	strb	r2, [r0, #1]
    c8b0:	e5c03000 	strb	r3, [r0]
    c8b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c8b8:	e5d03001 	ldrb	r3, [r0, #1]
    c8bc:	e0843003 	add	r3, r4, r3
    c8c0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c8c4:	e3833010 	orr	r3, r3, #16
    c8c8:	e5c03000 	strb	r3, [r0]
    c8cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c8d0:	e28ee002 	add	lr, lr, #2
    c8d4:	e3560000 	cmp	r6, #0
    c8d8:	e1c0e0bc 	strh	lr, [r0, #12]
    c8dc:	e1d030ba 	ldrh	r3, [r0, #10]
    c8e0:	0a000c13 	beq	f934 <CodesFD+0x4794>
    c8e4:	e51fca68 	ldr	ip, [pc, #-2664]	; be84 <CodesFD+0xce4>
    c8e8:	e51f1a68 	ldr	r1, [pc, #-2664]	; be88 <CodesFD+0xce8>
    c8ec:	e002200c 	and	r2, r2, ip
    c8f0:	e19120d2 	ldrsb	r2, [r1, r2]
    c8f4:	e0833002 	add	r3, r3, r2
    c8f8:	e003300c 	and	r3, r3, ip
    c8fc:	e7d12003 	ldrb	r2, [r1, r3]
    c900:	e5d03001 	ldrb	r3, [r0, #1]
    c904:	e0022003 	and	r2, r2, r3
    c908:	e0843002 	add	r3, r4, r2
    c90c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c910:	e5c02001 	strb	r2, [r0, #1]
    c914:	e3833010 	orr	r3, r3, #16
    c918:	e5c03000 	strb	r3, [r0]
    c91c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c920:	e5d02001 	ldrb	r2, [r0, #1]
    c924:	e5d0300a 	ldrb	r3, [r0, #10]
    c928:	e0022003 	and	r2, r2, r3
    c92c:	e0843002 	add	r3, r4, r2
    c930:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c934:	e5c02001 	strb	r2, [r0, #1]
    c938:	e3833010 	orr	r3, r3, #16
    c93c:	e5c03000 	strb	r3, [r0]
    c940:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c944:	e5d02001 	ldrb	r2, [r0, #1]
    c948:	e5d0300b 	ldrb	r3, [r0, #11]
    c94c:	e0022003 	and	r2, r2, r3
    c950:	e0843002 	add	r3, r4, r2
    c954:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c958:	e5c02001 	strb	r2, [r0, #1]
    c95c:	e3833010 	orr	r3, r3, #16
    c960:	e5c03000 	strb	r3, [r0]
    c964:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c968:	e5d02001 	ldrb	r2, [r0, #1]
    c96c:	e5d03004 	ldrb	r3, [r0, #4]
    c970:	e0022003 	and	r2, r2, r3
    c974:	e0843002 	add	r3, r4, r2
    c978:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c97c:	e5c02001 	strb	r2, [r0, #1]
    c980:	e3833010 	orr	r3, r3, #16
    c984:	e5c03000 	strb	r3, [r0]
    c988:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c98c:	e5d02001 	ldrb	r2, [r0, #1]
    c990:	e5d03005 	ldrb	r3, [r0, #5]
    c994:	e0022003 	and	r2, r2, r3
    c998:	e0843002 	add	r3, r4, r2
    c99c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c9a0:	e5c02001 	strb	r2, [r0, #1]
    c9a4:	e3833010 	orr	r3, r3, #16
    c9a8:	e5c03000 	strb	r3, [r0]
    c9ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c9b0:	e5d02001 	ldrb	r2, [r0, #1]
    c9b4:	e5d03002 	ldrb	r3, [r0, #2]
    c9b8:	e0022003 	and	r2, r2, r3
    c9bc:	e0843002 	add	r3, r4, r2
    c9c0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c9c4:	e5c02001 	strb	r2, [r0, #1]
    c9c8:	e3833010 	orr	r3, r3, #16
    c9cc:	e5c03000 	strb	r3, [r0]
    c9d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c9d4:	e5d02001 	ldrb	r2, [r0, #1]
    c9d8:	e5d03003 	ldrb	r3, [r0, #3]
    c9dc:	e0022003 	and	r2, r2, r3
    c9e0:	e0843002 	add	r3, r4, r2
    c9e4:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    c9e8:	e5c02001 	strb	r2, [r0, #1]
    c9ec:	e3833010 	orr	r3, r3, #16
    c9f0:	e5c03000 	strb	r3, [r0]
    c9f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    c9f8:	e5d02001 	ldrb	r2, [r0, #1]
    c9fc:	e5d03004 	ldrb	r3, [r0, #4]
    ca00:	e0222003 	eor	r2, r2, r3
    ca04:	e0843002 	add	r3, r4, r2
    ca08:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    ca0c:	e5c02001 	strb	r2, [r0, #1]
    ca10:	e5c03000 	strb	r3, [r0]
    ca14:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ca18:	e5d02001 	ldrb	r2, [r0, #1]
    ca1c:	e5d03005 	ldrb	r3, [r0, #5]
    ca20:	e0222003 	eor	r2, r2, r3
    ca24:	e0843002 	add	r3, r4, r2
    ca28:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    ca2c:	e5c02001 	strb	r2, [r0, #1]
    ca30:	e5c03000 	strb	r3, [r0]
    ca34:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ca38:	e5d02001 	ldrb	r2, [r0, #1]
    ca3c:	e5d03002 	ldrb	r3, [r0, #2]
    ca40:	e0222003 	eor	r2, r2, r3
    ca44:	e0843002 	add	r3, r4, r2
    ca48:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    ca4c:	e5c02001 	strb	r2, [r0, #1]
    ca50:	e5c03000 	strb	r3, [r0]
    ca54:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ca58:	e5d02001 	ldrb	r2, [r0, #1]
    ca5c:	e5d03003 	ldrb	r3, [r0, #3]
    ca60:	e0222003 	eor	r2, r2, r3
    ca64:	e0843002 	add	r3, r4, r2
    ca68:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    ca6c:	e5c02001 	strb	r2, [r0, #1]
    ca70:	e5c03000 	strb	r3, [r0]
    ca74:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ca78:	e5d02001 	ldrb	r2, [r0, #1]
    ca7c:	e5d0300b 	ldrb	r3, [r0, #11]
    ca80:	e0222003 	eor	r2, r2, r3
    ca84:	e0843002 	add	r3, r4, r2
    ca88:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    ca8c:	e5c02001 	strb	r2, [r0, #1]
    ca90:	e5c03000 	strb	r3, [r0]
    ca94:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ca98:	e5d03000 	ldrb	r3, [r0]
    ca9c:	e2133001 	ands	r3, r3, #1
    caa0:	13e03000 	mvnne	r3, #0
    caa4:	e6ff3073 	uxth	r3, r3
    caa8:	e6ef2073 	uxtb	r2, r3
    caac:	e1a03423 	lsr	r3, r3, #8
    cab0:	e2633000 	rsb	r3, r3, #0
    cab4:	e0844002 	add	r4, r4, r2
    cab8:	e202c010 	and	ip, r2, #16
    cabc:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    cac0:	e183300c 	orr	r3, r3, ip
    cac4:	e3833002 	orr	r3, r3, #2
    cac8:	e1833001 	orr	r3, r3, r1
    cacc:	e5c02001 	strb	r2, [r0, #1]
    cad0:	e5c03000 	strb	r3, [r0]
    cad4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cad8:	e28ee002 	add	lr, lr, #2
    cadc:	e3560000 	cmp	r6, #0
    cae0:	e1c0e0bc 	strh	lr, [r0, #12]
    cae4:	e1d030ba 	ldrh	r3, [r0, #10]
    cae8:	0a000b77 	beq	f8cc <CodesFD+0x472c>
    caec:	e51fcc70 	ldr	ip, [pc, #-3184]	; be84 <CodesFD+0xce4>
    caf0:	e51f1c70 	ldr	r1, [pc, #-3184]	; be88 <CodesFD+0xce8>
    caf4:	e002200c 	and	r2, r2, ip
    caf8:	e19120d2 	ldrsb	r2, [r1, r2]
    cafc:	e0833002 	add	r3, r3, r2
    cb00:	e003300c 	and	r3, r3, ip
    cb04:	e7d1e003 	ldrb	lr, [r1, r3]
    cb08:	e5d01001 	ldrb	r1, [r0, #1]
    cb0c:	e5d03000 	ldrb	r3, [r0]
    cb10:	e041200e 	sub	r2, r1, lr
    cb14:	e2033001 	and	r3, r3, #1
    cb18:	e0422003 	sub	r2, r2, r3
    cb1c:	e6ff2072 	uxth	r2, r2
    cb20:	e6efc072 	uxtb	ip, r2
    cb24:	e1a03422 	lsr	r3, r2, #8
    cb28:	e084400c 	add	r4, r4, ip
    cb2c:	e02ee001 	eor	lr, lr, r1
    cb30:	e02c2001 	eor	r2, ip, r1
    cb34:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    cb38:	e2633000 	rsb	r3, r3, #0
    cb3c:	e002200e 	and	r2, r2, lr
    cb40:	e3833002 	orr	r3, r3, #2
    cb44:	e02c100e 	eor	r1, ip, lr
    cb48:	e1a022a2 	lsr	r2, r2, #5
    cb4c:	e1833004 	orr	r3, r3, r4
    cb50:	e2011010 	and	r1, r1, #16
    cb54:	e2022004 	and	r2, r2, #4
    cb58:	e1833001 	orr	r3, r3, r1
    cb5c:	e1833002 	orr	r3, r3, r2
    cb60:	e5c03000 	strb	r3, [r0]
    cb64:	e5c0c001 	strb	ip, [r0, #1]
    cb68:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cb6c:	e5d01001 	ldrb	r1, [r0, #1]
    cb70:	e5d0e00a 	ldrb	lr, [r0, #10]
    cb74:	e5d03000 	ldrb	r3, [r0]
    cb78:	e041200e 	sub	r2, r1, lr
    cb7c:	e2033001 	and	r3, r3, #1
    cb80:	e0422003 	sub	r2, r2, r3
    cb84:	e6ff2072 	uxth	r2, r2
    cb88:	e6efc072 	uxtb	ip, r2
    cb8c:	e1a03422 	lsr	r3, r2, #8
    cb90:	e084400c 	add	r4, r4, ip
    cb94:	e02ee001 	eor	lr, lr, r1
    cb98:	e02c2001 	eor	r2, ip, r1
    cb9c:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    cba0:	e2633000 	rsb	r3, r3, #0
    cba4:	e002200e 	and	r2, r2, lr
    cba8:	e3833002 	orr	r3, r3, #2
    cbac:	e02c100e 	eor	r1, ip, lr
    cbb0:	e1a022a2 	lsr	r2, r2, #5
    cbb4:	e1833004 	orr	r3, r3, r4
    cbb8:	e2011010 	and	r1, r1, #16
    cbbc:	e2022004 	and	r2, r2, #4
    cbc0:	e1833001 	orr	r3, r3, r1
    cbc4:	e1833002 	orr	r3, r3, r2
    cbc8:	e5c03000 	strb	r3, [r0]
    cbcc:	e5c0c001 	strb	ip, [r0, #1]
    cbd0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cbd4:	e5d01001 	ldrb	r1, [r0, #1]
    cbd8:	e5d0e00b 	ldrb	lr, [r0, #11]
    cbdc:	e5d03000 	ldrb	r3, [r0]
    cbe0:	e041200e 	sub	r2, r1, lr
    cbe4:	e2033001 	and	r3, r3, #1
    cbe8:	e0422003 	sub	r2, r2, r3
    cbec:	e6ff2072 	uxth	r2, r2
    cbf0:	e6efc072 	uxtb	ip, r2
    cbf4:	e1a03422 	lsr	r3, r2, #8
    cbf8:	e084400c 	add	r4, r4, ip
    cbfc:	e02ee001 	eor	lr, lr, r1
    cc00:	e021200c 	eor	r2, r1, ip
    cc04:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    cc08:	e2633000 	rsb	r3, r3, #0
    cc0c:	e002200e 	and	r2, r2, lr
    cc10:	e3833002 	orr	r3, r3, #2
    cc14:	e02e100c 	eor	r1, lr, ip
    cc18:	e1a022a2 	lsr	r2, r2, #5
    cc1c:	e1833004 	orr	r3, r3, r4
    cc20:	e2011010 	and	r1, r1, #16
    cc24:	e2022004 	and	r2, r2, #4
    cc28:	e1833001 	orr	r3, r3, r1
    cc2c:	e1833002 	orr	r3, r3, r2
    cc30:	e5c03000 	strb	r3, [r0]
    cc34:	e5c0c001 	strb	ip, [r0, #1]
    cc38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cc3c:	e5d01001 	ldrb	r1, [r0, #1]
    cc40:	e5d0e004 	ldrb	lr, [r0, #4]
    cc44:	e5d03000 	ldrb	r3, [r0]
    cc48:	e041200e 	sub	r2, r1, lr
    cc4c:	e2033001 	and	r3, r3, #1
    cc50:	e0422003 	sub	r2, r2, r3
    cc54:	e6ff2072 	uxth	r2, r2
    cc58:	e6efc072 	uxtb	ip, r2
    cc5c:	e1a03422 	lsr	r3, r2, #8
    cc60:	e084400c 	add	r4, r4, ip
    cc64:	e02ee001 	eor	lr, lr, r1
    cc68:	e021200c 	eor	r2, r1, ip
    cc6c:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    cc70:	e2633000 	rsb	r3, r3, #0
    cc74:	e002200e 	and	r2, r2, lr
    cc78:	e3833002 	orr	r3, r3, #2
    cc7c:	e02e100c 	eor	r1, lr, ip
    cc80:	e1a022a2 	lsr	r2, r2, #5
    cc84:	e1833004 	orr	r3, r3, r4
    cc88:	e2011010 	and	r1, r1, #16
    cc8c:	e2022004 	and	r2, r2, #4
    cc90:	e1833001 	orr	r3, r3, r1
    cc94:	e1833002 	orr	r3, r3, r2
    cc98:	e5c03000 	strb	r3, [r0]
    cc9c:	e5c0c001 	strb	ip, [r0, #1]
    cca0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cca4:	e5d01001 	ldrb	r1, [r0, #1]
    cca8:	e5d0e005 	ldrb	lr, [r0, #5]
    ccac:	e5d03000 	ldrb	r3, [r0]
    ccb0:	e041200e 	sub	r2, r1, lr
    ccb4:	e2033001 	and	r3, r3, #1
    ccb8:	e0422003 	sub	r2, r2, r3
    ccbc:	e6ff2072 	uxth	r2, r2
    ccc0:	e6efc072 	uxtb	ip, r2
    ccc4:	e1a03422 	lsr	r3, r2, #8
    ccc8:	e084400c 	add	r4, r4, ip
    cccc:	e02ee001 	eor	lr, lr, r1
    ccd0:	e021200c 	eor	r2, r1, ip
    ccd4:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    ccd8:	e2633000 	rsb	r3, r3, #0
    ccdc:	e002200e 	and	r2, r2, lr
    cce0:	e3833002 	orr	r3, r3, #2
    cce4:	e02e100c 	eor	r1, lr, ip
    cce8:	e1a022a2 	lsr	r2, r2, #5
    ccec:	e1833004 	orr	r3, r3, r4
    ccf0:	e2011010 	and	r1, r1, #16
    ccf4:	e2022004 	and	r2, r2, #4
    ccf8:	e1833001 	orr	r3, r3, r1
    ccfc:	e1833002 	orr	r3, r3, r2
    cd00:	e5c03000 	strb	r3, [r0]
    cd04:	e5c0c001 	strb	ip, [r0, #1]
    cd08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cd0c:	e5d01001 	ldrb	r1, [r0, #1]
    cd10:	e5d0e002 	ldrb	lr, [r0, #2]
    cd14:	e5d03000 	ldrb	r3, [r0]
    cd18:	e041200e 	sub	r2, r1, lr
    cd1c:	e2033001 	and	r3, r3, #1
    cd20:	e0422003 	sub	r2, r2, r3
    cd24:	e6ff2072 	uxth	r2, r2
    cd28:	e6efc072 	uxtb	ip, r2
    cd2c:	e1a03422 	lsr	r3, r2, #8
    cd30:	e084400c 	add	r4, r4, ip
    cd34:	e02ee001 	eor	lr, lr, r1
    cd38:	e021200c 	eor	r2, r1, ip
    cd3c:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    cd40:	e2633000 	rsb	r3, r3, #0
    cd44:	e002200e 	and	r2, r2, lr
    cd48:	e3833002 	orr	r3, r3, #2
    cd4c:	e02e100c 	eor	r1, lr, ip
    cd50:	e1a022a2 	lsr	r2, r2, #5
    cd54:	e1833004 	orr	r3, r3, r4
    cd58:	e2011010 	and	r1, r1, #16
    cd5c:	e2022004 	and	r2, r2, #4
    cd60:	e1833001 	orr	r3, r3, r1
    cd64:	e1833002 	orr	r3, r3, r2
    cd68:	e5c03000 	strb	r3, [r0]
    cd6c:	e5c0c001 	strb	ip, [r0, #1]
    cd70:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cd74:	e5d01001 	ldrb	r1, [r0, #1]
    cd78:	e5d0e003 	ldrb	lr, [r0, #3]
    cd7c:	e5d03000 	ldrb	r3, [r0]
    cd80:	e041200e 	sub	r2, r1, lr
    cd84:	e2033001 	and	r3, r3, #1
    cd88:	e0422003 	sub	r2, r2, r3
    cd8c:	e6ff2072 	uxth	r2, r2
    cd90:	e6efc072 	uxtb	ip, r2
    cd94:	e1a03422 	lsr	r3, r2, #8
    cd98:	e084400c 	add	r4, r4, ip
    cd9c:	e02ee001 	eor	lr, lr, r1
    cda0:	e02c2001 	eor	r2, ip, r1
    cda4:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    cda8:	e2633000 	rsb	r3, r3, #0
    cdac:	e002200e 	and	r2, r2, lr
    cdb0:	e3833002 	orr	r3, r3, #2
    cdb4:	e02c100e 	eor	r1, ip, lr
    cdb8:	e1a022a2 	lsr	r2, r2, #5
    cdbc:	e1833004 	orr	r3, r3, r4
    cdc0:	e2011010 	and	r1, r1, #16
    cdc4:	e2022004 	and	r2, r2, #4
    cdc8:	e1833001 	orr	r3, r3, r1
    cdcc:	e1833002 	orr	r3, r3, r2
    cdd0:	e5c03000 	strb	r3, [r0]
    cdd4:	e5c0c001 	strb	ip, [r0, #1]
    cdd8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cddc:	e3a03042 	mov	r3, #66	; 0x42
    cde0:	e1c030b0 	strh	r3, [r0]
    cde4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cde8:	e28ee002 	add	lr, lr, #2
    cdec:	e3560000 	cmp	r6, #0
    cdf0:	e1c0e0bc 	strh	lr, [r0, #12]
    cdf4:	e1d030ba 	ldrh	r3, [r0, #10]
    cdf8:	0a000a9f 	beq	f87c <CodesFD+0x46dc>
    cdfc:	e59fce80 	ldr	ip, [pc, #3712]	; dc84 <CodesFD+0x2ae4>
    ce00:	e59f1e80 	ldr	r1, [pc, #3712]	; dc88 <CodesFD+0x2ae8>
    ce04:	e002200c 	and	r2, r2, ip
    ce08:	e19120d2 	ldrsb	r2, [r1, r2]
    ce0c:	e0833002 	add	r3, r3, r2
    ce10:	e003300c 	and	r3, r3, ip
    ce14:	e7d12003 	ldrb	r2, [r1, r3]
    ce18:	e5d01001 	ldrb	r1, [r0, #1]
    ce1c:	e041c002 	sub	ip, r1, r2
    ce20:	e6ffc07c 	uxth	ip, ip
    ce24:	e6efe07c 	uxtb	lr, ip
    ce28:	e084300e 	add	r3, r4, lr
    ce2c:	e0222001 	eor	r2, r2, r1
    ce30:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    ce34:	e021300e 	eor	r3, r1, lr
    ce38:	e022100e 	eor	r1, r2, lr
    ce3c:	e0033002 	and	r3, r3, r2
    ce40:	e3844002 	orr	r4, r4, #2
    ce44:	e2012010 	and	r2, r1, #16
    ce48:	e1a0142c 	lsr	r1, ip, #8
    ce4c:	e1a032a3 	lsr	r3, r3, #5
    ce50:	e1822004 	orr	r2, r2, r4
    ce54:	e2611000 	rsb	r1, r1, #0
    ce58:	e2033004 	and	r3, r3, #4
    ce5c:	e1822001 	orr	r2, r2, r1
    ce60:	e1823003 	orr	r3, r2, r3
    ce64:	e5c03000 	strb	r3, [r0]
    ce68:	e5c0e001 	strb	lr, [r0, #1]
    ce6c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ce70:	e5d01001 	ldrb	r1, [r0, #1]
    ce74:	e5d0200a 	ldrb	r2, [r0, #10]
    ce78:	e041c002 	sub	ip, r1, r2
    ce7c:	e6ffc07c 	uxth	ip, ip
    ce80:	e6efe07c 	uxtb	lr, ip
    ce84:	e084300e 	add	r3, r4, lr
    ce88:	e0222001 	eor	r2, r2, r1
    ce8c:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    ce90:	e021300e 	eor	r3, r1, lr
    ce94:	e022100e 	eor	r1, r2, lr
    ce98:	e0033002 	and	r3, r3, r2
    ce9c:	e3844002 	orr	r4, r4, #2
    cea0:	e2012010 	and	r2, r1, #16
    cea4:	e1a0142c 	lsr	r1, ip, #8
    cea8:	e1a032a3 	lsr	r3, r3, #5
    ceac:	e1822004 	orr	r2, r2, r4
    ceb0:	e2611000 	rsb	r1, r1, #0
    ceb4:	e2033004 	and	r3, r3, #4
    ceb8:	e1822001 	orr	r2, r2, r1
    cebc:	e1823003 	orr	r3, r2, r3
    cec0:	e5c03000 	strb	r3, [r0]
    cec4:	e5c0e001 	strb	lr, [r0, #1]
    cec8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cecc:	e5d01000 	ldrb	r1, [r0]
    ced0:	e5d02001 	ldrb	r2, [r0, #1]
    ced4:	e2011001 	and	r1, r1, #1
    ced8:	e0811082 	add	r1, r1, r2, lsl #1
    cedc:	e6efc071 	uxtb	ip, r1
    cee0:	e084300c 	add	r3, r4, ip
    cee4:	e5d3e300 	ldrb	lr, [r3, #768]	; 0x300
    cee8:	e02c3002 	eor	r3, ip, r2
    ceec:	e2012010 	and	r2, r1, #16
    cef0:	e1a032a3 	lsr	r3, r3, #5
    cef4:	e1822421 	orr	r2, r2, r1, lsr #8
    cef8:	e2033004 	and	r3, r3, #4
    cefc:	e182200e 	orr	r2, r2, lr
    cf00:	e1823003 	orr	r3, r2, r3
    cf04:	e5c0c001 	strb	ip, [r0, #1]
    cf08:	e5c03000 	strb	r3, [r0]
    cf0c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cf10:	e28ee002 	add	lr, lr, #2
    cf14:	e3560000 	cmp	r6, #0
    cf18:	e1c0e0bc 	strh	lr, [r0, #12]
    cf1c:	e1d030ba 	ldrh	r3, [r0, #10]
    cf20:	0a000a5a 	beq	f890 <CodesFD+0x46f0>
    cf24:	e59fcd58 	ldr	ip, [pc, #3416]	; dc84 <CodesFD+0x2ae4>
    cf28:	e59f1d58 	ldr	r1, [pc, #3416]	; dc88 <CodesFD+0x2ae8>
    cf2c:	e002200c 	and	r2, r2, ip
    cf30:	e19120d2 	ldrsb	r2, [r1, r2]
    cf34:	e0833002 	add	r3, r3, r2
    cf38:	e003300c 	and	r3, r3, ip
    cf3c:	e7d12003 	ldrb	r2, [r1, r3]
    cf40:	e5d01000 	ldrb	r1, [r0]
    cf44:	e5d03001 	ldrb	r3, [r0, #1]
    cf48:	e2011001 	and	r1, r1, #1
    cf4c:	e0811003 	add	r1, r1, r3
    cf50:	e0811002 	add	r1, r1, r2
    cf54:	e6efc071 	uxtb	ip, r1
    cf58:	e023e002 	eor	lr, r3, r2
    cf5c:	e084300c 	add	r3, r4, ip
    cf60:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    cf64:	e02c3002 	eor	r3, ip, r2
    cf68:	e02c200e 	eor	r2, ip, lr
    cf6c:	e1c3300e 	bic	r3, r3, lr
    cf70:	e2022010 	and	r2, r2, #16
    cf74:	e1a032c3 	asr	r3, r3, #5
    cf78:	e1822004 	orr	r2, r2, r4
    cf7c:	e2033004 	and	r3, r3, #4
    cf80:	e1821421 	orr	r1, r2, r1, lsr #8
    cf84:	e1833001 	orr	r3, r3, r1
    cf88:	e5c03000 	strb	r3, [r0]
    cf8c:	e5c0c001 	strb	ip, [r0, #1]
    cf90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cf94:	e5d03001 	ldrb	r3, [r0, #1]
    cf98:	e5d0200a 	ldrb	r2, [r0, #10]
    cf9c:	e5d01000 	ldrb	r1, [r0]
    cfa0:	e083e002 	add	lr, r3, r2
    cfa4:	e2011001 	and	r1, r1, #1
    cfa8:	e081e00e 	add	lr, r1, lr
    cfac:	e6efc07e 	uxtb	ip, lr
    cfb0:	e0231002 	eor	r1, r3, r2
    cfb4:	e084300c 	add	r3, r4, ip
    cfb8:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    cfbc:	e022300c 	eor	r3, r2, ip
    cfc0:	e021200c 	eor	r2, r1, ip
    cfc4:	e1c33001 	bic	r3, r3, r1
    cfc8:	e2022010 	and	r2, r2, #16
    cfcc:	e1a032c3 	asr	r3, r3, #5
    cfd0:	e1822004 	orr	r2, r2, r4
    cfd4:	e2033004 	and	r3, r3, #4
    cfd8:	e182242e 	orr	r2, r2, lr, lsr #8
    cfdc:	e1833002 	orr	r3, r3, r2
    cfe0:	e5c03000 	strb	r3, [r0]
    cfe4:	e5c0c001 	strb	ip, [r0, #1]
    cfe8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    cfec:	e5d03001 	ldrb	r3, [r0, #1]
    cff0:	e5d0200b 	ldrb	r2, [r0, #11]
    cff4:	e5d01000 	ldrb	r1, [r0]
    cff8:	e083e002 	add	lr, r3, r2
    cffc:	e2011001 	and	r1, r1, #1
    d000:	e081e00e 	add	lr, r1, lr
    d004:	e6efc07e 	uxtb	ip, lr
    d008:	e0231002 	eor	r1, r3, r2
    d00c:	e084300c 	add	r3, r4, ip
    d010:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d014:	e022300c 	eor	r3, r2, ip
    d018:	e021200c 	eor	r2, r1, ip
    d01c:	e1c33001 	bic	r3, r3, r1
    d020:	e2022010 	and	r2, r2, #16
    d024:	e1a032c3 	asr	r3, r3, #5
    d028:	e1822004 	orr	r2, r2, r4
    d02c:	e2033004 	and	r3, r3, #4
    d030:	e182242e 	orr	r2, r2, lr, lsr #8
    d034:	e1833002 	orr	r3, r3, r2
    d038:	e5c03000 	strb	r3, [r0]
    d03c:	e5c0c001 	strb	ip, [r0, #1]
    d040:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d044:	e5d03001 	ldrb	r3, [r0, #1]
    d048:	e5d02004 	ldrb	r2, [r0, #4]
    d04c:	e5d01000 	ldrb	r1, [r0]
    d050:	e083e002 	add	lr, r3, r2
    d054:	e2011001 	and	r1, r1, #1
    d058:	e081e00e 	add	lr, r1, lr
    d05c:	e6efc07e 	uxtb	ip, lr
    d060:	e0231002 	eor	r1, r3, r2
    d064:	e084300c 	add	r3, r4, ip
    d068:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d06c:	e02c3002 	eor	r3, ip, r2
    d070:	e02c2001 	eor	r2, ip, r1
    d074:	e1c33001 	bic	r3, r3, r1
    d078:	e2022010 	and	r2, r2, #16
    d07c:	e1a032c3 	asr	r3, r3, #5
    d080:	e1822004 	orr	r2, r2, r4
    d084:	e2033004 	and	r3, r3, #4
    d088:	e182242e 	orr	r2, r2, lr, lsr #8
    d08c:	e1833002 	orr	r3, r3, r2
    d090:	e5c03000 	strb	r3, [r0]
    d094:	e5c0c001 	strb	ip, [r0, #1]
    d098:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d09c:	e5d03001 	ldrb	r3, [r0, #1]
    d0a0:	e5d02005 	ldrb	r2, [r0, #5]
    d0a4:	e5d01000 	ldrb	r1, [r0]
    d0a8:	e083e002 	add	lr, r3, r2
    d0ac:	e2011001 	and	r1, r1, #1
    d0b0:	e081e00e 	add	lr, r1, lr
    d0b4:	e6efc07e 	uxtb	ip, lr
    d0b8:	e0231002 	eor	r1, r3, r2
    d0bc:	e084300c 	add	r3, r4, ip
    d0c0:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d0c4:	e02c3002 	eor	r3, ip, r2
    d0c8:	e02c2001 	eor	r2, ip, r1
    d0cc:	e1c33001 	bic	r3, r3, r1
    d0d0:	e2022010 	and	r2, r2, #16
    d0d4:	e1a032c3 	asr	r3, r3, #5
    d0d8:	e1822004 	orr	r2, r2, r4
    d0dc:	e2033004 	and	r3, r3, #4
    d0e0:	e182242e 	orr	r2, r2, lr, lsr #8
    d0e4:	e1833002 	orr	r3, r3, r2
    d0e8:	e5c03000 	strb	r3, [r0]
    d0ec:	e5c0c001 	strb	ip, [r0, #1]
    d0f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d0f4:	e5d03001 	ldrb	r3, [r0, #1]
    d0f8:	e5d02002 	ldrb	r2, [r0, #2]
    d0fc:	e5d01000 	ldrb	r1, [r0]
    d100:	e083e002 	add	lr, r3, r2
    d104:	e2011001 	and	r1, r1, #1
    d108:	e081e00e 	add	lr, r1, lr
    d10c:	e6efc07e 	uxtb	ip, lr
    d110:	e0231002 	eor	r1, r3, r2
    d114:	e084300c 	add	r3, r4, ip
    d118:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d11c:	e02c3002 	eor	r3, ip, r2
    d120:	e02c2001 	eor	r2, ip, r1
    d124:	e1c33001 	bic	r3, r3, r1
    d128:	e2022010 	and	r2, r2, #16
    d12c:	e1a032c3 	asr	r3, r3, #5
    d130:	e1822004 	orr	r2, r2, r4
    d134:	e2033004 	and	r3, r3, #4
    d138:	e182242e 	orr	r2, r2, lr, lsr #8
    d13c:	e1833002 	orr	r3, r3, r2
    d140:	e5c03000 	strb	r3, [r0]
    d144:	e5c0c001 	strb	ip, [r0, #1]
    d148:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d14c:	e5d03001 	ldrb	r3, [r0, #1]
    d150:	e5d02003 	ldrb	r2, [r0, #3]
    d154:	e5d01000 	ldrb	r1, [r0]
    d158:	e083e002 	add	lr, r3, r2
    d15c:	e2011001 	and	r1, r1, #1
    d160:	e081e00e 	add	lr, r1, lr
    d164:	e6efc07e 	uxtb	ip, lr
    d168:	e0231002 	eor	r1, r3, r2
    d16c:	e084300c 	add	r3, r4, ip
    d170:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d174:	e022300c 	eor	r3, r2, ip
    d178:	e021200c 	eor	r2, r1, ip
    d17c:	e1c33001 	bic	r3, r3, r1
    d180:	e2022010 	and	r2, r2, #16
    d184:	e1a032c3 	asr	r3, r3, #5
    d188:	e1822004 	orr	r2, r2, r4
    d18c:	e2033004 	and	r3, r3, #4
    d190:	e182242e 	orr	r2, r2, lr, lsr #8
    d194:	e1833002 	orr	r3, r3, r2
    d198:	e5c03000 	strb	r3, [r0]
    d19c:	e5c0c001 	strb	ip, [r0, #1]
    d1a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d1a4:	e5d02001 	ldrb	r2, [r0, #1]
    d1a8:	e1a0c082 	lsl	ip, r2, #1
    d1ac:	e6ef107c 	uxtb	r1, ip
    d1b0:	e0843001 	add	r3, r4, r1
    d1b4:	e5d3e300 	ldrb	lr, [r3, #768]	; 0x300
    d1b8:	e0223001 	eor	r3, r2, r1
    d1bc:	e20c2010 	and	r2, ip, #16
    d1c0:	e1a032a3 	lsr	r3, r3, #5
    d1c4:	e182242c 	orr	r2, r2, ip, lsr #8
    d1c8:	e2033004 	and	r3, r3, #4
    d1cc:	e182200e 	orr	r2, r2, lr
    d1d0:	e1823003 	orr	r3, r2, r3
    d1d4:	e5c01001 	strb	r1, [r0, #1]
    d1d8:	e5c03000 	strb	r3, [r0]
    d1dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d1e0:	e28ee002 	add	lr, lr, #2
    d1e4:	e3560000 	cmp	r6, #0
    d1e8:	e1c0e0bc 	strh	lr, [r0, #12]
    d1ec:	e1d030ba 	ldrh	r3, [r0, #10]
    d1f0:	0a0009ab 	beq	f8a4 <CodesFD+0x4704>
    d1f4:	e59fca88 	ldr	ip, [pc, #2696]	; dc84 <CodesFD+0x2ae4>
    d1f8:	e59f1a88 	ldr	r1, [pc, #2696]	; dc88 <CodesFD+0x2ae8>
    d1fc:	e002200c 	and	r2, r2, ip
    d200:	e19120d2 	ldrsb	r2, [r1, r2]
    d204:	e0833002 	add	r3, r3, r2
    d208:	e003300c 	and	r3, r3, ip
    d20c:	e7d13003 	ldrb	r3, [r1, r3]
    d210:	e5d01001 	ldrb	r1, [r0, #1]
    d214:	e081e003 	add	lr, r1, r3
    d218:	e6efc07e 	uxtb	ip, lr
    d21c:	e0211003 	eor	r1, r1, r3
    d220:	e021200c 	eor	r2, r1, ip
    d224:	e023300c 	eor	r3, r3, ip
    d228:	e084400c 	add	r4, r4, ip
    d22c:	e1c33001 	bic	r3, r3, r1
    d230:	e2022010 	and	r2, r2, #16
    d234:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    d238:	e1a032c3 	asr	r3, r3, #5
    d23c:	e182242e 	orr	r2, r2, lr, lsr #8
    d240:	e2033004 	and	r3, r3, #4
    d244:	e1822001 	orr	r2, r2, r1
    d248:	e1833002 	orr	r3, r3, r2
    d24c:	e5c03000 	strb	r3, [r0]
    d250:	e5c0c001 	strb	ip, [r0, #1]
    d254:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d258:	e5d01001 	ldrb	r1, [r0, #1]
    d25c:	e5d0300a 	ldrb	r3, [r0, #10]
    d260:	e081e003 	add	lr, r1, r3
    d264:	e6efc07e 	uxtb	ip, lr
    d268:	e0211003 	eor	r1, r1, r3
    d26c:	e021200c 	eor	r2, r1, ip
    d270:	e023300c 	eor	r3, r3, ip
    d274:	e084400c 	add	r4, r4, ip
    d278:	e1c33001 	bic	r3, r3, r1
    d27c:	e2022010 	and	r2, r2, #16
    d280:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    d284:	e1a032c3 	asr	r3, r3, #5
    d288:	e182242e 	orr	r2, r2, lr, lsr #8
    d28c:	e2033004 	and	r3, r3, #4
    d290:	e1822001 	orr	r2, r2, r1
    d294:	e1833002 	orr	r3, r3, r2
    d298:	e5c03000 	strb	r3, [r0]
    d29c:	e5c0c001 	strb	ip, [r0, #1]
    d2a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d2a4:	e5d01001 	ldrb	r1, [r0, #1]
    d2a8:	e5d0300b 	ldrb	r3, [r0, #11]
    d2ac:	e081e003 	add	lr, r1, r3
    d2b0:	e6efc07e 	uxtb	ip, lr
    d2b4:	e0211003 	eor	r1, r1, r3
    d2b8:	e021200c 	eor	r2, r1, ip
    d2bc:	e023300c 	eor	r3, r3, ip
    d2c0:	e084400c 	add	r4, r4, ip
    d2c4:	e1c33001 	bic	r3, r3, r1
    d2c8:	e2022010 	and	r2, r2, #16
    d2cc:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    d2d0:	e1a032c3 	asr	r3, r3, #5
    d2d4:	e182242e 	orr	r2, r2, lr, lsr #8
    d2d8:	e2033004 	and	r3, r3, #4
    d2dc:	e1822001 	orr	r2, r2, r1
    d2e0:	e1833002 	orr	r3, r3, r2
    d2e4:	e5c03000 	strb	r3, [r0]
    d2e8:	e5c0c001 	strb	ip, [r0, #1]
    d2ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d2f0:	e5d01001 	ldrb	r1, [r0, #1]
    d2f4:	e5d03004 	ldrb	r3, [r0, #4]
    d2f8:	e081e003 	add	lr, r1, r3
    d2fc:	e6efc07e 	uxtb	ip, lr
    d300:	e0211003 	eor	r1, r1, r3
    d304:	e021200c 	eor	r2, r1, ip
    d308:	e023300c 	eor	r3, r3, ip
    d30c:	e084400c 	add	r4, r4, ip
    d310:	e1c33001 	bic	r3, r3, r1
    d314:	e2022010 	and	r2, r2, #16
    d318:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    d31c:	e1a032c3 	asr	r3, r3, #5
    d320:	e182242e 	orr	r2, r2, lr, lsr #8
    d324:	e2033004 	and	r3, r3, #4
    d328:	e1822001 	orr	r2, r2, r1
    d32c:	e1833002 	orr	r3, r3, r2
    d330:	e5c03000 	strb	r3, [r0]
    d334:	e5c0c001 	strb	ip, [r0, #1]
    d338:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d33c:	e5d01001 	ldrb	r1, [r0, #1]
    d340:	e5d03005 	ldrb	r3, [r0, #5]
    d344:	e081e003 	add	lr, r1, r3
    d348:	e6efc07e 	uxtb	ip, lr
    d34c:	e0211003 	eor	r1, r1, r3
    d350:	e021200c 	eor	r2, r1, ip
    d354:	e023300c 	eor	r3, r3, ip
    d358:	e084400c 	add	r4, r4, ip
    d35c:	e1c33001 	bic	r3, r3, r1
    d360:	e2022010 	and	r2, r2, #16
    d364:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    d368:	e1a032c3 	asr	r3, r3, #5
    d36c:	e182242e 	orr	r2, r2, lr, lsr #8
    d370:	e2033004 	and	r3, r3, #4
    d374:	e1822001 	orr	r2, r2, r1
    d378:	e1833002 	orr	r3, r3, r2
    d37c:	e5c03000 	strb	r3, [r0]
    d380:	e5c0c001 	strb	ip, [r0, #1]
    d384:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d388:	e5d01001 	ldrb	r1, [r0, #1]
    d38c:	e5d03002 	ldrb	r3, [r0, #2]
    d390:	e081e003 	add	lr, r1, r3
    d394:	e6efc07e 	uxtb	ip, lr
    d398:	e0211003 	eor	r1, r1, r3
    d39c:	e021200c 	eor	r2, r1, ip
    d3a0:	e023300c 	eor	r3, r3, ip
    d3a4:	e084400c 	add	r4, r4, ip
    d3a8:	e1c33001 	bic	r3, r3, r1
    d3ac:	e2022010 	and	r2, r2, #16
    d3b0:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    d3b4:	e1a032c3 	asr	r3, r3, #5
    d3b8:	e182242e 	orr	r2, r2, lr, lsr #8
    d3bc:	e2033004 	and	r3, r3, #4
    d3c0:	e1822001 	orr	r2, r2, r1
    d3c4:	e1833002 	orr	r3, r3, r2
    d3c8:	e5c03000 	strb	r3, [r0]
    d3cc:	e5c0c001 	strb	ip, [r0, #1]
    d3d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d3d4:	e5d01001 	ldrb	r1, [r0, #1]
    d3d8:	e5d03003 	ldrb	r3, [r0, #3]
    d3dc:	e081e003 	add	lr, r1, r3
    d3e0:	e6efc07e 	uxtb	ip, lr
    d3e4:	e0211003 	eor	r1, r1, r3
    d3e8:	e021200c 	eor	r2, r1, ip
    d3ec:	e023300c 	eor	r3, r3, ip
    d3f0:	e084400c 	add	r4, r4, ip
    d3f4:	e1c33001 	bic	r3, r3, r1
    d3f8:	e2022010 	and	r2, r2, #16
    d3fc:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    d400:	e1a032c3 	asr	r3, r3, #5
    d404:	e182242e 	orr	r2, r2, lr, lsr #8
    d408:	e2033004 	and	r3, r3, #4
    d40c:	e1822001 	orr	r2, r2, r1
    d410:	e1833002 	orr	r3, r3, r2
    d414:	e5c03000 	strb	r3, [r0]
    d418:	e5c0c001 	strb	ip, [r0, #1]
    d41c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d420:	e5d01001 	ldrb	r1, [r0, #1]
    d424:	e5d02004 	ldrb	r2, [r0, #4]
    d428:	e041c002 	sub	ip, r1, r2
    d42c:	e6ffc07c 	uxth	ip, ip
    d430:	e6efe07c 	uxtb	lr, ip
    d434:	e084300e 	add	r3, r4, lr
    d438:	e0222001 	eor	r2, r2, r1
    d43c:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d440:	e021300e 	eor	r3, r1, lr
    d444:	e022100e 	eor	r1, r2, lr
    d448:	e0033002 	and	r3, r3, r2
    d44c:	e3844002 	orr	r4, r4, #2
    d450:	e2012010 	and	r2, r1, #16
    d454:	e1a0142c 	lsr	r1, ip, #8
    d458:	e1a032a3 	lsr	r3, r3, #5
    d45c:	e1822004 	orr	r2, r2, r4
    d460:	e2611000 	rsb	r1, r1, #0
    d464:	e2033004 	and	r3, r3, #4
    d468:	e1822001 	orr	r2, r2, r1
    d46c:	e1823003 	orr	r3, r2, r3
    d470:	e5c03000 	strb	r3, [r0]
    d474:	e5c0e001 	strb	lr, [r0, #1]
    d478:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d47c:	e5d01001 	ldrb	r1, [r0, #1]
    d480:	e5d02005 	ldrb	r2, [r0, #5]
    d484:	e041c002 	sub	ip, r1, r2
    d488:	e6ffc07c 	uxth	ip, ip
    d48c:	e6efe07c 	uxtb	lr, ip
    d490:	e084300e 	add	r3, r4, lr
    d494:	e0222001 	eor	r2, r2, r1
    d498:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d49c:	e021300e 	eor	r3, r1, lr
    d4a0:	e022100e 	eor	r1, r2, lr
    d4a4:	e0033002 	and	r3, r3, r2
    d4a8:	e3844002 	orr	r4, r4, #2
    d4ac:	e2012010 	and	r2, r1, #16
    d4b0:	e1a0142c 	lsr	r1, ip, #8
    d4b4:	e1a032a3 	lsr	r3, r3, #5
    d4b8:	e1822004 	orr	r2, r2, r4
    d4bc:	e2611000 	rsb	r1, r1, #0
    d4c0:	e2033004 	and	r3, r3, #4
    d4c4:	e1822001 	orr	r2, r2, r1
    d4c8:	e1823003 	orr	r3, r2, r3
    d4cc:	e5c03000 	strb	r3, [r0]
    d4d0:	e5c0e001 	strb	lr, [r0, #1]
    d4d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d4d8:	e5d01001 	ldrb	r1, [r0, #1]
    d4dc:	e5d02002 	ldrb	r2, [r0, #2]
    d4e0:	e041c002 	sub	ip, r1, r2
    d4e4:	e6ffc07c 	uxth	ip, ip
    d4e8:	e6efe07c 	uxtb	lr, ip
    d4ec:	e084300e 	add	r3, r4, lr
    d4f0:	e0222001 	eor	r2, r2, r1
    d4f4:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d4f8:	e021300e 	eor	r3, r1, lr
    d4fc:	e022100e 	eor	r1, r2, lr
    d500:	e0033002 	and	r3, r3, r2
    d504:	e3844002 	orr	r4, r4, #2
    d508:	e2012010 	and	r2, r1, #16
    d50c:	e1a0142c 	lsr	r1, ip, #8
    d510:	e1a032a3 	lsr	r3, r3, #5
    d514:	e1822004 	orr	r2, r2, r4
    d518:	e2611000 	rsb	r1, r1, #0
    d51c:	e2033004 	and	r3, r3, #4
    d520:	e1822001 	orr	r2, r2, r1
    d524:	e1823003 	orr	r3, r2, r3
    d528:	e5c03000 	strb	r3, [r0]
    d52c:	e5c0e001 	strb	lr, [r0, #1]
    d530:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d534:	e5d01001 	ldrb	r1, [r0, #1]
    d538:	e5d02003 	ldrb	r2, [r0, #3]
    d53c:	e041c002 	sub	ip, r1, r2
    d540:	e6ffc07c 	uxth	ip, ip
    d544:	e6efe07c 	uxtb	lr, ip
    d548:	e084300e 	add	r3, r4, lr
    d54c:	e0222001 	eor	r2, r2, r1
    d550:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d554:	e021300e 	eor	r3, r1, lr
    d558:	e022100e 	eor	r1, r2, lr
    d55c:	e0033002 	and	r3, r3, r2
    d560:	e3844002 	orr	r4, r4, #2
    d564:	e2012010 	and	r2, r1, #16
    d568:	e1a0142c 	lsr	r1, ip, #8
    d56c:	e1a032a3 	lsr	r3, r3, #5
    d570:	e1822004 	orr	r2, r2, r4
    d574:	e2611000 	rsb	r1, r1, #0
    d578:	e2033004 	and	r3, r3, #4
    d57c:	e1822001 	orr	r2, r2, r1
    d580:	e1823003 	orr	r3, r2, r3
    d584:	e5c03000 	strb	r3, [r0]
    d588:	e5c0e001 	strb	lr, [r0, #1]
    d58c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d590:	e5d01001 	ldrb	r1, [r0, #1]
    d594:	e5d0200b 	ldrb	r2, [r0, #11]
    d598:	e041c002 	sub	ip, r1, r2
    d59c:	e6ffc07c 	uxth	ip, ip
    d5a0:	e6efe07c 	uxtb	lr, ip
    d5a4:	e084300e 	add	r3, r4, lr
    d5a8:	e0222001 	eor	r2, r2, r1
    d5ac:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d5b0:	e021300e 	eor	r3, r1, lr
    d5b4:	e022100e 	eor	r1, r2, lr
    d5b8:	e0033002 	and	r3, r3, r2
    d5bc:	e3844002 	orr	r4, r4, #2
    d5c0:	e2012010 	and	r2, r1, #16
    d5c4:	e1a0142c 	lsr	r1, ip, #8
    d5c8:	e1a032a3 	lsr	r3, r3, #5
    d5cc:	e1822004 	orr	r2, r2, r4
    d5d0:	e2611000 	rsb	r1, r1, #0
    d5d4:	e2033004 	and	r3, r3, #4
    d5d8:	e1822001 	orr	r2, r2, r1
    d5dc:	e1823003 	orr	r3, r2, r3
    d5e0:	e5c03000 	strb	r3, [r0]
    d5e4:	e5c0e001 	strb	lr, [r0, #1]
    d5e8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d5ec:	e3a01010 	mov	r1, #16
    d5f0:	e1d030be 	ldrh	r3, [r0, #14]
    d5f4:	e1a02422 	lsr	r2, r2, #8
    d5f8:	e2433001 	sub	r3, r3, #1
    d5fc:	e6ff3073 	uxth	r3, r3
    d600:	e1c030be 	strh	r3, [r0, #14]
    d604:	e7c52003 	strb	r2, [r5, r3]
    d608:	e1d030be 	ldrh	r3, [r0, #14]
    d60c:	e5d0200c 	ldrb	r2, [r0, #12]
    d610:	e2433001 	sub	r3, r3, #1
    d614:	e6ff3073 	uxth	r3, r3
    d618:	e1c030be 	strh	r3, [r0, #14]
    d61c:	e7c52003 	strb	r2, [r5, r3]
    d620:	e1c010bc 	strh	r1, [r0, #12]
    d624:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d628:	e3560000 	cmp	r6, #0
    d62c:	11a02882 	lslne	r2, r2, #17
    d630:	e28ee002 	add	lr, lr, #2
    d634:	159f364c 	ldrne	r3, [pc, #1612]	; dc88 <CodesFD+0x2ae8>
    d638:	e1c0e0bc 	strh	lr, [r0, #12]
    d63c:	11a028a2 	lsrne	r2, r2, #17
    d640:	17d32002 	ldrbne	r2, [r3, r2]
    d644:	e5d01001 	ldrb	r1, [r0, #1]
    d648:	07d52002 	ldrbeq	r2, [r5, r2]
    d64c:	e041c002 	sub	ip, r1, r2
    d650:	e6ffc07c 	uxth	ip, ip
    d654:	e6efe07c 	uxtb	lr, ip
    d658:	e084300e 	add	r3, r4, lr
    d65c:	e0222001 	eor	r2, r2, r1
    d660:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    d664:	e021300e 	eor	r3, r1, lr
    d668:	e022100e 	eor	r1, r2, lr
    d66c:	e0033002 	and	r3, r3, r2
    d670:	e3844002 	orr	r4, r4, #2
    d674:	e2012010 	and	r2, r1, #16
    d678:	e1a0142c 	lsr	r1, ip, #8
    d67c:	e1a032a3 	lsr	r3, r3, #5
    d680:	e1822004 	orr	r2, r2, r4
    d684:	e2611000 	rsb	r1, r1, #0
    d688:	e2033004 	and	r3, r3, #4
    d68c:	e1822001 	orr	r2, r2, r1
    d690:	e1823003 	orr	r3, r2, r3
    d694:	e5c03000 	strb	r3, [r0]
    d698:	e5c0e001 	strb	lr, [r0, #1]
    d69c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d6a0:	e1d030be 	ldrh	r3, [r0, #14]
    d6a4:	e5d02005 	ldrb	r2, [r0, #5]
    d6a8:	e2433001 	sub	r3, r3, #1
    d6ac:	e6ff3073 	uxth	r3, r3
    d6b0:	e1c030be 	strh	r3, [r0, #14]
    d6b4:	e7c52003 	strb	r2, [r5, r3]
    d6b8:	e1d030be 	ldrh	r3, [r0, #14]
    d6bc:	e5d02004 	ldrb	r2, [r0, #4]
    d6c0:	e2433001 	sub	r3, r3, #1
    d6c4:	e6ff3073 	uxth	r3, r3
    d6c8:	e1c030be 	strh	r3, [r0, #14]
    d6cc:	e7c52003 	strb	r2, [r5, r3]
    d6d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d6d4:	e5d03000 	ldrb	r3, [r0]
    d6d8:	e28ec003 	add	ip, lr, #3
    d6dc:	e3130001 	tst	r3, #1
    d6e0:	e6ffc07c 	uxth	ip, ip
    d6e4:	1a000a0e 	bne	ff24 <CodesFD+0x4d84>
    d6e8:	e3560000 	cmp	r6, #0
    d6ec:	e2411007 	sub	r1, r1, #7
    d6f0:	159f458c 	ldrne	r4, [pc, #1420]	; dc84 <CodesFD+0x2ae4>
    d6f4:	e28ee002 	add	lr, lr, #2
    d6f8:	e5801020 	str	r1, [r0, #32]
    d6fc:	e6ffe07e 	uxth	lr, lr
    d700:	159f1580 	ldrne	r1, [pc, #1408]	; dc88 <CodesFD+0x2ae8>
    d704:	e1c0e0bc 	strh	lr, [r0, #12]
    d708:	10022004 	andne	r2, r2, r4
    d70c:	07d53002 	ldrbeq	r3, [r5, r2]
    d710:	17d13002 	ldrbne	r3, [r1, r2]
    d714:	e1d020be 	ldrh	r2, [r0, #14]
    d718:	11c0c0bc 	strhne	ip, [r0, #12]
    d71c:	e2422001 	sub	r2, r2, #1
    d720:	01c0c0bc 	strheq	ip, [r0, #12]
    d724:	e6ff2072 	uxth	r2, r2
    d728:	100ee004 	andne	lr, lr, r4
    d72c:	e1a0c42c 	lsr	ip, ip, #8
    d730:	07d5e00e 	ldrbeq	lr, [r5, lr]
    d734:	17d1e00e 	ldrbne	lr, [r1, lr]
    d738:	e1c020be 	strh	r2, [r0, #14]
    d73c:	e7c5c002 	strb	ip, [r5, r2]
    d740:	e1d020be 	ldrh	r2, [r0, #14]
    d744:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
    d748:	e5d0c00c 	ldrb	ip, [r0, #12]
    d74c:	e2423001 	sub	r3, r2, #1
    d750:	e6ff3073 	uxth	r3, r3
    d754:	e181240e 	orr	r2, r1, lr, lsl #8
    d758:	e1c030be 	strh	r3, [r0, #14]
    d75c:	e7c5c003 	strb	ip, [r5, r3]
    d760:	e1c020bc 	strh	r2, [r0, #12]
    d764:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d768:	e3560000 	cmp	r6, #0
    d76c:	11a02882 	lslne	r2, r2, #17
    d770:	e28ee002 	add	lr, lr, #2
    d774:	159f350c 	ldrne	r3, [pc, #1292]	; dc88 <CodesFD+0x2ae8>
    d778:	e1c0e0bc 	strh	lr, [r0, #12]
    d77c:	11a028a2 	lsrne	r2, r2, #17
    d780:	17d32002 	ldrbne	r2, [r3, r2]
    d784:	e1d030b0 	ldrh	r3, [r0]
    d788:	07d52002 	ldrbeq	r2, [r5, r2]
    d78c:	e3c330ff 	bic	r3, r3, #255	; 0xff
    d790:	e5d01001 	ldrb	r1, [r0, #1]
    d794:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    d798:	e1830002 	orr	r0, r3, r2
    d79c:	eaffed29 	b	8c48 <OutZ80>
    d7a0:	e3560000 	cmp	r6, #0
    d7a4:	e28e1002 	add	r1, lr, #2
    d7a8:	159fe4d4 	ldrne	lr, [pc, #1236]	; dc84 <CodesFD+0x2ae4>
    d7ac:	e6ff1071 	uxth	r1, r1
    d7b0:	159fc4d0 	ldrne	ip, [pc, #1232]	; dc88 <CodesFD+0x2ae8>
    d7b4:	e1c010bc 	strh	r1, [r0, #12]
    d7b8:	1002200e 	andne	r2, r2, lr
    d7bc:	17dc3002 	ldrbne	r3, [ip, r2]
    d7c0:	07d53002 	ldrbeq	r3, [r5, r2]
    d7c4:	1001100e 	andne	r1, r1, lr
    d7c8:	17dc2001 	ldrbne	r2, [ip, r1]
    d7cc:	07d52001 	ldrbeq	r2, [r5, r1]
    d7d0:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    d7d4:	e1833402 	orr	r3, r3, r2, lsl #8
    d7d8:	e1c030bc 	strh	r3, [r0, #12]
    d7dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d7e0:	e5d03000 	ldrb	r3, [r0]
    d7e4:	e3130040 	tst	r3, #64	; 0x40
    d7e8:	1a0009be 	bne	fee8 <CodesFD+0x4d48>
    d7ec:	e3560000 	cmp	r6, #0
    d7f0:	e28e1002 	add	r1, lr, #2
    d7f4:	159fe488 	ldrne	lr, [pc, #1160]	; dc84 <CodesFD+0x2ae4>
    d7f8:	e6ff1071 	uxth	r1, r1
    d7fc:	159fc484 	ldrne	ip, [pc, #1156]	; dc88 <CodesFD+0x2ae8>
    d800:	e1c010bc 	strh	r1, [r0, #12]
    d804:	1002200e 	andne	r2, r2, lr
    d808:	17dc3002 	ldrbne	r3, [ip, r2]
    d80c:	07d53002 	ldrbeq	r3, [r5, r2]
    d810:	1001100e 	andne	r1, r1, lr
    d814:	17dc2001 	ldrbne	r2, [ip, r1]
    d818:	07d52001 	ldrbeq	r2, [r5, r1]
    d81c:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    d820:	e1833402 	orr	r3, r3, r2, lsl #8
    d824:	e1c030bc 	strh	r3, [r0, #12]
    d828:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d82c:	e1d020be 	ldrh	r2, [r0, #14]
    d830:	e3560000 	cmp	r6, #0
    d834:	e2823001 	add	r3, r2, #1
    d838:	e6ff3073 	uxth	r3, r3
    d83c:	e2821002 	add	r1, r2, #2
    d840:	e1c030be 	strh	r3, [r0, #14]
    d844:	e6ff1071 	uxth	r1, r1
    d848:	0a000806 	beq	f868 <CodesFD+0x46c8>
    d84c:	e59fe430 	ldr	lr, [pc, #1072]	; dc84 <CodesFD+0x2ae4>
    d850:	e59fc430 	ldr	ip, [pc, #1072]	; dc88 <CodesFD+0x2ae8>
    d854:	e002200e 	and	r2, r2, lr
    d858:	e7dc2002 	ldrb	r2, [ip, r2]
    d85c:	e003300e 	and	r3, r3, lr
    d860:	e5c02002 	strb	r2, [r0, #2]
    d864:	e1c010be 	strh	r1, [r0, #14]
    d868:	e7dc3003 	ldrb	r3, [ip, r3]
    d86c:	e5c03003 	strb	r3, [r0, #3]
    d870:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d874:	e5d03000 	ldrb	r3, [r0]
    d878:	e3130040 	tst	r3, #64	; 0x40
    d87c:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
    d880:	e1d020be 	ldrh	r2, [r0, #14]
    d884:	e241c006 	sub	ip, r1, #6
    d888:	e2823001 	add	r3, r2, #1
    d88c:	e6ff3073 	uxth	r3, r3
    d890:	e2821002 	add	r1, r2, #2
    d894:	e3560000 	cmp	r6, #0
    d898:	e580c020 	str	ip, [r0, #32]
    d89c:	e1c030be 	strh	r3, [r0, #14]
    d8a0:	e6ff1071 	uxth	r1, r1
    d8a4:	0a000a2f 	beq	10168 <CodesFD+0x4fc8>
    d8a8:	e59fe3d4 	ldr	lr, [pc, #980]	; dc84 <CodesFD+0x2ae4>
    d8ac:	e59fc3d4 	ldr	ip, [pc, #980]	; dc88 <CodesFD+0x2ae8>
    d8b0:	e002200e 	and	r2, r2, lr
    d8b4:	e7dc2002 	ldrb	r2, [ip, r2]
    d8b8:	e003300e 	and	r3, r3, lr
    d8bc:	e5c0200c 	strb	r2, [r0, #12]
    d8c0:	e1c010be 	strh	r1, [r0, #14]
    d8c4:	e7dc3003 	ldrb	r3, [ip, r3]
    d8c8:	e5c0300d 	strb	r3, [r0, #13]
    d8cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d8d0:	e1d030be 	ldrh	r3, [r0, #14]
    d8d4:	e5d02003 	ldrb	r2, [r0, #3]
    d8d8:	e2433001 	sub	r3, r3, #1
    d8dc:	e6ff3073 	uxth	r3, r3
    d8e0:	e1c030be 	strh	r3, [r0, #14]
    d8e4:	e7c52003 	strb	r2, [r5, r3]
    d8e8:	e1d030be 	ldrh	r3, [r0, #14]
    d8ec:	e5d02002 	ldrb	r2, [r0, #2]
    d8f0:	e2433001 	sub	r3, r3, #1
    d8f4:	e6ff3073 	uxth	r3, r3
    d8f8:	e1c030be 	strh	r3, [r0, #14]
    d8fc:	e7c52003 	strb	r2, [r5, r3]
    d900:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d904:	e3560000 	cmp	r6, #0
    d908:	159f3378 	ldrne	r3, [pc, #888]	; dc88 <CodesFD+0x2ae8>
    d90c:	11a02882 	lslne	r2, r2, #17
    d910:	e28ee002 	add	lr, lr, #2
    d914:	e1c0e0bc 	strh	lr, [r0, #12]
    d918:	11a028a2 	lsrne	r2, r2, #17
    d91c:	17d33002 	ldrbne	r3, [r3, r2]
    d920:	07d53002 	ldrbeq	r3, [r5, r2]
    d924:	e5d01001 	ldrb	r1, [r0, #1]
    d928:	e081e003 	add	lr, r1, r3
    d92c:	e6efc07e 	uxtb	ip, lr
    d930:	e0211003 	eor	r1, r1, r3
    d934:	e021200c 	eor	r2, r1, ip
    d938:	e023300c 	eor	r3, r3, ip
    d93c:	e084400c 	add	r4, r4, ip
    d940:	e1c33001 	bic	r3, r3, r1
    d944:	e2022010 	and	r2, r2, #16
    d948:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    d94c:	e1a032c3 	asr	r3, r3, #5
    d950:	e182242e 	orr	r2, r2, lr, lsr #8
    d954:	e2033004 	and	r3, r3, #4
    d958:	e1822001 	orr	r2, r2, r1
    d95c:	e1833002 	orr	r3, r3, r2
    d960:	e5c03000 	strb	r3, [r0]
    d964:	e5c0c001 	strb	ip, [r0, #1]
    d968:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    d96c:	e5d03000 	ldrb	r3, [r0]
    d970:	e28ec003 	add	ip, lr, #3
    d974:	e3130040 	tst	r3, #64	; 0x40
    d978:	e6ffc07c 	uxth	ip, ip
    d97c:	1a00096c 	bne	ff34 <CodesFD+0x4d94>
    d980:	e3560000 	cmp	r6, #0
    d984:	e2411007 	sub	r1, r1, #7
    d988:	159f42f4 	ldrne	r4, [pc, #756]	; dc84 <CodesFD+0x2ae4>
    d98c:	e28ee002 	add	lr, lr, #2
    d990:	e5801020 	str	r1, [r0, #32]
    d994:	e6ffe07e 	uxth	lr, lr
    d998:	159f12e8 	ldrne	r1, [pc, #744]	; dc88 <CodesFD+0x2ae8>
    d99c:	e1c0e0bc 	strh	lr, [r0, #12]
    d9a0:	10022004 	andne	r2, r2, r4
    d9a4:	07d53002 	ldrbeq	r3, [r5, r2]
    d9a8:	17d13002 	ldrbne	r3, [r1, r2]
    d9ac:	e1d020be 	ldrh	r2, [r0, #14]
    d9b0:	11c0c0bc 	strhne	ip, [r0, #12]
    d9b4:	e2422001 	sub	r2, r2, #1
    d9b8:	01c0c0bc 	strheq	ip, [r0, #12]
    d9bc:	e6ff2072 	uxth	r2, r2
    d9c0:	100ee004 	andne	lr, lr, r4
    d9c4:	e1a0c42c 	lsr	ip, ip, #8
    d9c8:	07d5e00e 	ldrbeq	lr, [r5, lr]
    d9cc:	17d1e00e 	ldrbne	lr, [r1, lr]
    d9d0:	e1c020be 	strh	r2, [r0, #14]
    d9d4:	e7c5c002 	strb	ip, [r5, r2]
    d9d8:	e1d020be 	ldrh	r2, [r0, #14]
    d9dc:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
    d9e0:	e5d0c00c 	ldrb	ip, [r0, #12]
    d9e4:	e2423001 	sub	r3, r2, #1
    d9e8:	e6ff3073 	uxth	r3, r3
    d9ec:	e181240e 	orr	r2, r1, lr, lsl #8
    d9f0:	e1c030be 	strh	r3, [r0, #14]
    d9f4:	e7c5c003 	strb	ip, [r5, r3]
    d9f8:	e1c020bc 	strh	r2, [r0, #12]
    d9fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    da00:	e3560000 	cmp	r6, #0
    da04:	11a02882 	lslne	r2, r2, #17
    da08:	159f3278 	ldrne	r3, [pc, #632]	; dc88 <CodesFD+0x2ae8>
    da0c:	e28ee002 	add	lr, lr, #2
    da10:	e1c0e0bc 	strh	lr, [r0, #12]
    da14:	11a028a2 	lsrne	r2, r2, #17
    da18:	17d32002 	ldrbne	r2, [r3, r2]
    da1c:	e1d030b0 	ldrh	r3, [r0]
    da20:	07d52002 	ldrbeq	r2, [r5, r2]
    da24:	e3c330ff 	bic	r3, r3, #255	; 0xff
    da28:	e1a04000 	mov	r4, r0
    da2c:	e1830002 	orr	r0, r3, r2
    da30:	ebffec3c 	bl	8b28 <InZ80>
    da34:	e5c40001 	strb	r0, [r4, #1]
    da38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    da3c:	e1d020be 	ldrh	r2, [r0, #14]
    da40:	e3560000 	cmp	r6, #0
    da44:	e2823001 	add	r3, r2, #1
    da48:	e6ff3073 	uxth	r3, r3
    da4c:	e2821002 	add	r1, r2, #2
    da50:	e1c030be 	strh	r3, [r0, #14]
    da54:	e6ff1071 	uxth	r1, r1
    da58:	0a0007a0 	beq	f8e0 <CodesFD+0x4740>
    da5c:	e59fe220 	ldr	lr, [pc, #544]	; dc84 <CodesFD+0x2ae4>
    da60:	e59fc220 	ldr	ip, [pc, #544]	; dc88 <CodesFD+0x2ae8>
    da64:	e002200e 	and	r2, r2, lr
    da68:	e7dc2002 	ldrb	r2, [ip, r2]
    da6c:	e003300e 	and	r3, r3, lr
    da70:	e5c02004 	strb	r2, [r0, #4]
    da74:	e1c010be 	strh	r1, [r0, #14]
    da78:	e7dc3003 	ldrb	r3, [ip, r3]
    da7c:	e5c03005 	strb	r3, [r0, #5]
    da80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    da84:	e5d03000 	ldrb	r3, [r0]
    da88:	e3130001 	tst	r3, #1
    da8c:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
    da90:	e1d020be 	ldrh	r2, [r0, #14]
    da94:	e241c006 	sub	ip, r1, #6
    da98:	e2823001 	add	r3, r2, #1
    da9c:	e6ff3073 	uxth	r3, r3
    daa0:	e2821002 	add	r1, r2, #2
    daa4:	e3560000 	cmp	r6, #0
    daa8:	e580c020 	str	ip, [r0, #32]
    daac:	e1c030be 	strh	r3, [r0, #14]
    dab0:	e6ff1071 	uxth	r1, r1
    dab4:	0a00099c 	beq	1012c <CodesFD+0x4f8c>
    dab8:	e59fe1c4 	ldr	lr, [pc, #452]	; dc84 <CodesFD+0x2ae4>
    dabc:	e59fc1c4 	ldr	ip, [pc, #452]	; dc88 <CodesFD+0x2ae8>
    dac0:	e002200e 	and	r2, r2, lr
    dac4:	e7dc2002 	ldrb	r2, [ip, r2]
    dac8:	e003300e 	and	r3, r3, lr
    dacc:	e5c0200c 	strb	r2, [r0, #12]
    dad0:	e1c010be 	strh	r1, [r0, #14]
    dad4:	e7dc3003 	ldrb	r3, [ip, r3]
    dad8:	e5c0300d 	strb	r3, [r0, #13]
    dadc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dae0:	e1c0e0bc 	strh	lr, [r0, #12]
    dae4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dae8:	e5d03000 	ldrb	r3, [r0]
    daec:	e3130001 	tst	r3, #1
    daf0:	1a000913 	bne	ff44 <CodesFD+0x4da4>
    daf4:	e3560000 	cmp	r6, #0
    daf8:	e28e1002 	add	r1, lr, #2
    dafc:	159fe180 	ldrne	lr, [pc, #384]	; dc84 <CodesFD+0x2ae4>
    db00:	e6ff1071 	uxth	r1, r1
    db04:	159fc17c 	ldrne	ip, [pc, #380]	; dc88 <CodesFD+0x2ae8>
    db08:	e1c010bc 	strh	r1, [r0, #12]
    db0c:	1002200e 	andne	r2, r2, lr
    db10:	17dc3002 	ldrbne	r3, [ip, r2]
    db14:	07d53002 	ldrbeq	r3, [r5, r2]
    db18:	1001100e 	andne	r1, r1, lr
    db1c:	17dc2001 	ldrbne	r2, [ip, r1]
    db20:	07d52001 	ldrbeq	r2, [r5, r1]
    db24:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    db28:	e1833402 	orr	r3, r3, r2, lsl #8
    db2c:	e1c030bc 	strh	r3, [r0, #12]
    db30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    db34:	e1d030b2 	ldrh	r3, [r0, #2]
    db38:	e1d0e1b2 	ldrh	lr, [r0, #18]
    db3c:	e1d0c0b4 	ldrh	ip, [r0, #4]
    db40:	e1d011b4 	ldrh	r1, [r0, #20]
    db44:	e1d020b6 	ldrh	r2, [r0, #6]
    db48:	e1c031b2 	strh	r3, [r0, #18]
    db4c:	e1d031b6 	ldrh	r3, [r0, #22]
    db50:	e1c0e0b2 	strh	lr, [r0, #2]
    db54:	e1c0c1b4 	strh	ip, [r0, #20]
    db58:	e1c010b4 	strh	r1, [r0, #4]
    db5c:	e1c021b6 	strh	r2, [r0, #22]
    db60:	e1c030b6 	strh	r3, [r0, #6]
    db64:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    db68:	e3560000 	cmp	r6, #0
    db6c:	e28ee002 	add	lr, lr, #2
    db70:	11a02882 	lslne	r2, r2, #17
    db74:	159f310c 	ldrne	r3, [pc, #268]	; dc88 <CodesFD+0x2ae8>
    db78:	e1c0e0bc 	strh	lr, [r0, #12]
    db7c:	11a028a2 	lsrne	r2, r2, #17
    db80:	17d3e002 	ldrbne	lr, [r3, r2]
    db84:	e5d01001 	ldrb	r1, [r0, #1]
    db88:	07d5e002 	ldrbeq	lr, [r5, r2]
    db8c:	e5d03000 	ldrb	r3, [r0]
    db90:	e041200e 	sub	r2, r1, lr
    db94:	e2033001 	and	r3, r3, #1
    db98:	e0422003 	sub	r2, r2, r3
    db9c:	e6ff2072 	uxth	r2, r2
    dba0:	e6efc072 	uxtb	ip, r2
    dba4:	e1a03422 	lsr	r3, r2, #8
    dba8:	e084400c 	add	r4, r4, ip
    dbac:	e02ee001 	eor	lr, lr, r1
    dbb0:	e02c2001 	eor	r2, ip, r1
    dbb4:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    dbb8:	e2633000 	rsb	r3, r3, #0
    dbbc:	e002200e 	and	r2, r2, lr
    dbc0:	e3833002 	orr	r3, r3, #2
    dbc4:	e02c100e 	eor	r1, ip, lr
    dbc8:	e1a022a2 	lsr	r2, r2, #5
    dbcc:	e1833004 	orr	r3, r3, r4
    dbd0:	e2011010 	and	r1, r1, #16
    dbd4:	e2022004 	and	r2, r2, #4
    dbd8:	e1833001 	orr	r3, r3, r1
    dbdc:	e1833002 	orr	r3, r3, r2
    dbe0:	e5c03000 	strb	r3, [r0]
    dbe4:	e5c0c001 	strb	ip, [r0, #1]
    dbe8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dbec:	e5d03000 	ldrb	r3, [r0]
    dbf0:	e28ec003 	add	ip, lr, #3
    dbf4:	e3130001 	tst	r3, #1
    dbf8:	e6ffc07c 	uxth	ip, ip
    dbfc:	0a0008ce 	beq	ff3c <CodesFD+0x4d9c>
    dc00:	e3560000 	cmp	r6, #0
    dc04:	e2411007 	sub	r1, r1, #7
    dc08:	159f4074 	ldrne	r4, [pc, #116]	; dc84 <CodesFD+0x2ae4>
    dc0c:	e28ee002 	add	lr, lr, #2
    dc10:	e5801020 	str	r1, [r0, #32]
    dc14:	e6ffe07e 	uxth	lr, lr
    dc18:	159f1068 	ldrne	r1, [pc, #104]	; dc88 <CodesFD+0x2ae8>
    dc1c:	e1c0e0bc 	strh	lr, [r0, #12]
    dc20:	10022004 	andne	r2, r2, r4
    dc24:	07d53002 	ldrbeq	r3, [r5, r2]
    dc28:	17d13002 	ldrbne	r3, [r1, r2]
    dc2c:	e1d020be 	ldrh	r2, [r0, #14]
    dc30:	11c0c0bc 	strhne	ip, [r0, #12]
    dc34:	e2422001 	sub	r2, r2, #1
    dc38:	01c0c0bc 	strheq	ip, [r0, #12]
    dc3c:	e6ff2072 	uxth	r2, r2
    dc40:	100ee004 	andne	lr, lr, r4
    dc44:	e1a0c42c 	lsr	ip, ip, #8
    dc48:	07d5e00e 	ldrbeq	lr, [r5, lr]
    dc4c:	17d1e00e 	ldrbne	lr, [r1, lr]
    dc50:	e1c020be 	strh	r2, [r0, #14]
    dc54:	e7c5c002 	strb	ip, [r5, r2]
    dc58:	e1d020be 	ldrh	r2, [r0, #14]
    dc5c:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
    dc60:	e5d0c00c 	ldrb	ip, [r0, #12]
    dc64:	e2423001 	sub	r3, r2, #1
    dc68:	e6ff3073 	uxth	r3, r3
    dc6c:	e181240e 	orr	r2, r1, lr, lsl #8
    dc70:	e1c030be 	strh	r3, [r0, #14]
    dc74:	e7c5c003 	strb	ip, [r5, r3]
    dc78:	e1c020bc 	strh	r2, [r0, #12]
    dc7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dc80:	0003c960 	.word	0x0003c960
    dc84:	00007fff 	.word	0x00007fff
    dc88:	00050428 	.word	0x00050428
    dc8c:	e5d03000 	ldrb	r3, [r0]
    dc90:	e3130001 	tst	r3, #1
    dc94:	0a0008ad 	beq	ff50 <CodesFD+0x4db0>
    dc98:	e3560000 	cmp	r6, #0
    dc9c:	e28e1002 	add	r1, lr, #2
    dca0:	151fe024 	ldrne	lr, [pc, #-36]	; dc84 <CodesFD+0x2ae4>
    dca4:	e6ff1071 	uxth	r1, r1
    dca8:	151fc028 	ldrne	ip, [pc, #-40]	; dc88 <CodesFD+0x2ae8>
    dcac:	e1c010bc 	strh	r1, [r0, #12]
    dcb0:	1002200e 	andne	r2, r2, lr
    dcb4:	17dc3002 	ldrbne	r3, [ip, r2]
    dcb8:	07d53002 	ldrbeq	r3, [r5, r2]
    dcbc:	1001100e 	andne	r1, r1, lr
    dcc0:	17dc2001 	ldrbne	r2, [ip, r1]
    dcc4:	07d52001 	ldrbeq	r2, [r5, r1]
    dcc8:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    dccc:	e1833402 	orr	r3, r3, r2, lsl #8
    dcd0:	e1c030bc 	strh	r3, [r0, #12]
    dcd4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dcd8:	e5d03000 	ldrb	r3, [r0]
    dcdc:	e3130001 	tst	r3, #1
    dce0:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
    dce4:	e1d020be 	ldrh	r2, [r0, #14]
    dce8:	e241c006 	sub	ip, r1, #6
    dcec:	e2823001 	add	r3, r2, #1
    dcf0:	e6ff3073 	uxth	r3, r3
    dcf4:	e2821002 	add	r1, r2, #2
    dcf8:	e3560000 	cmp	r6, #0
    dcfc:	e580c020 	str	ip, [r0, #32]
    dd00:	e1c030be 	strh	r3, [r0, #14]
    dd04:	e6ff1071 	uxth	r1, r1
    dd08:	0a0008fd 	beq	10104 <CodesFD+0x4f64>
    dd0c:	e51fe090 	ldr	lr, [pc, #-144]	; dc84 <CodesFD+0x2ae4>
    dd10:	e51fc090 	ldr	ip, [pc, #-144]	; dc88 <CodesFD+0x2ae8>
    dd14:	e002200e 	and	r2, r2, lr
    dd18:	e7dc2002 	ldrb	r2, [ip, r2]
    dd1c:	e003300e 	and	r3, r3, lr
    dd20:	e5c0200c 	strb	r2, [r0, #12]
    dd24:	e1c010be 	strh	r1, [r0, #14]
    dd28:	e7dc3003 	ldrb	r3, [ip, r3]
    dd2c:	e5c0300d 	strb	r3, [r0, #13]
    dd30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dd34:	e5d02000 	ldrb	r2, [r0]
    dd38:	e2223001 	eor	r3, r2, #1
    dd3c:	e3c33012 	bic	r3, r3, #18
    dd40:	e6af3073 	sxtb	r3, r3
    dd44:	e3120001 	tst	r2, #1
    dd48:	13833010 	orrne	r3, r3, #16
    dd4c:	e5c03000 	strb	r3, [r0]
    dd50:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dd54:	e5d03001 	ldrb	r3, [r0, #1]
    dd58:	e5c03004 	strb	r3, [r0, #4]
    dd5c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dd60:	e28ee002 	add	lr, lr, #2
    dd64:	e3560000 	cmp	r6, #0
    dd68:	e1c0e0bc 	strh	lr, [r0, #12]
    dd6c:	e1d030ba 	ldrh	r3, [r0, #10]
    dd70:	0a0006b7 	beq	f854 <CodesFD+0x46b4>
    dd74:	e51fc0f8 	ldr	ip, [pc, #-248]	; dc84 <CodesFD+0x2ae4>
    dd78:	e51f10f8 	ldr	r1, [pc, #-248]	; dc88 <CodesFD+0x2ae8>
    dd7c:	e002200c 	and	r2, r2, ip
    dd80:	e19120d2 	ldrsb	r2, [r1, r2]
    dd84:	e0833002 	add	r3, r3, r2
    dd88:	e003300c 	and	r3, r3, ip
    dd8c:	e7d13003 	ldrb	r3, [r1, r3]
    dd90:	e5c03004 	strb	r3, [r0, #4]
    dd94:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dd98:	e5d0300a 	ldrb	r3, [r0, #10]
    dd9c:	e5c03004 	strb	r3, [r0, #4]
    dda0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dda4:	e5d0300b 	ldrb	r3, [r0, #11]
    dda8:	e5c03004 	strb	r3, [r0, #4]
    ddac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ddb0:	e1d030d0 	ldrsb	r3, [r0]
    ddb4:	e3530000 	cmp	r3, #0
    ddb8:	ba000887 	blt	ffdc <CodesFD+0x4e3c>
    ddbc:	e28ee003 	add	lr, lr, #3
    ddc0:	e1c0e0bc 	strh	lr, [r0, #12]
    ddc4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ddc8:	e5d03005 	ldrb	r3, [r0, #5]
    ddcc:	e5c03004 	strb	r3, [r0, #4]
    ddd0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ddd4:	e5d03002 	ldrb	r3, [r0, #2]
    ddd8:	e5c03004 	strb	r3, [r0, #4]
    dddc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dde0:	e5d03003 	ldrb	r3, [r0, #3]
    dde4:	e5c03004 	strb	r3, [r0, #4]
    dde8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ddec:	e5d03001 	ldrb	r3, [r0, #1]
    ddf0:	e5c03005 	strb	r3, [r0, #5]
    ddf4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ddf8:	e28ee002 	add	lr, lr, #2
    ddfc:	e3560000 	cmp	r6, #0
    de00:	e1c0e0bc 	strh	lr, [r0, #12]
    de04:	e1d030ba 	ldrh	r3, [r0, #10]
    de08:	0a00068c 	beq	f840 <CodesFD+0x46a0>
    de0c:	e51fc190 	ldr	ip, [pc, #-400]	; dc84 <CodesFD+0x2ae4>
    de10:	e51f1190 	ldr	r1, [pc, #-400]	; dc88 <CodesFD+0x2ae8>
    de14:	e002200c 	and	r2, r2, ip
    de18:	e19120d2 	ldrsb	r2, [r1, r2]
    de1c:	e0833002 	add	r3, r3, r2
    de20:	e003300c 	and	r3, r3, ip
    de24:	e7d13003 	ldrb	r3, [r1, r3]
    de28:	e5c03005 	strb	r3, [r0, #5]
    de2c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    de30:	e5d0300a 	ldrb	r3, [r0, #10]
    de34:	e5c03005 	strb	r3, [r0, #5]
    de38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    de3c:	e5d03004 	ldrb	r3, [r0, #4]
    de40:	e5c03005 	strb	r3, [r0, #5]
    de44:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    de48:	e5d03018 	ldrb	r3, [r0, #24]
    de4c:	e3130021 	tst	r3, #33	; 0x21
    de50:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
    de54:	e3a02001 	mov	r2, #1
    de58:	e3833028 	orr	r3, r3, #40	; 0x28
    de5c:	e5c03018 	strb	r3, [r0, #24]
    de60:	e5801024 	str	r1, [r0, #36]	; 0x24
    de64:	e5802020 	str	r2, [r0, #32]
    de68:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    de6c:	e5d03002 	ldrb	r3, [r0, #2]
    de70:	e5c03005 	strb	r3, [r0, #5]
    de74:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    de78:	e5d03003 	ldrb	r3, [r0, #3]
    de7c:	e5c03005 	strb	r3, [r0, #5]
    de80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    de84:	e5d0300b 	ldrb	r3, [r0, #11]
    de88:	e5c03005 	strb	r3, [r0, #5]
    de8c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    de90:	e5d03001 	ldrb	r3, [r0, #1]
    de94:	e5c03002 	strb	r3, [r0, #2]
    de98:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    de9c:	e28ee002 	add	lr, lr, #2
    dea0:	e3560000 	cmp	r6, #0
    dea4:	e1c0e0bc 	strh	lr, [r0, #12]
    dea8:	e1d030ba 	ldrh	r3, [r0, #10]
    deac:	0a00065e 	beq	f82c <CodesFD+0x468c>
    deb0:	e51fc234 	ldr	ip, [pc, #-564]	; dc84 <CodesFD+0x2ae4>
    deb4:	e51f1234 	ldr	r1, [pc, #-564]	; dc88 <CodesFD+0x2ae8>
    deb8:	e002200c 	and	r2, r2, ip
    debc:	e19120d2 	ldrsb	r2, [r1, r2]
    dec0:	e0833002 	add	r3, r3, r2
    dec4:	e003300c 	and	r3, r3, ip
    dec8:	e7d13003 	ldrb	r3, [r1, r3]
    decc:	e5c03002 	strb	r3, [r0, #2]
    ded0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ded4:	e5d0300a 	ldrb	r3, [r0, #10]
    ded8:	e5c03002 	strb	r3, [r0, #2]
    dedc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dee0:	e5d0300b 	ldrb	r3, [r0, #11]
    dee4:	e5c03002 	strb	r3, [r0, #2]
    dee8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    deec:	e5d03004 	ldrb	r3, [r0, #4]
    def0:	e5c03002 	strb	r3, [r0, #2]
    def4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    def8:	e5d03005 	ldrb	r3, [r0, #5]
    defc:	e5c03002 	strb	r3, [r0, #2]
    df00:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    df04:	e1d0c0d0 	ldrsb	ip, [r0]
    df08:	e28e3003 	add	r3, lr, #3
    df0c:	e35c0000 	cmp	ip, #0
    df10:	e6ff4073 	uxth	r4, r3
    df14:	ba000810 	blt	ff5c <CodesFD+0x4dbc>
    df18:	e1c040bc 	strh	r4, [r0, #12]
    df1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    df20:	e5d03003 	ldrb	r3, [r0, #3]
    df24:	e5c03002 	strb	r3, [r0, #2]
    df28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    df2c:	e5d03001 	ldrb	r3, [r0, #1]
    df30:	e5c03003 	strb	r3, [r0, #3]
    df34:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    df38:	e28ee002 	add	lr, lr, #2
    df3c:	e3560000 	cmp	r6, #0
    df40:	e1c0e0bc 	strh	lr, [r0, #12]
    df44:	e1d030ba 	ldrh	r3, [r0, #10]
    df48:	0a00062d 	beq	f804 <CodesFD+0x4664>
    df4c:	e51fc2d0 	ldr	ip, [pc, #-720]	; dc84 <CodesFD+0x2ae4>
    df50:	e51f12d0 	ldr	r1, [pc, #-720]	; dc88 <CodesFD+0x2ae8>
    df54:	e002200c 	and	r2, r2, ip
    df58:	e19120d2 	ldrsb	r2, [r1, r2]
    df5c:	e0833002 	add	r3, r3, r2
    df60:	e003300c 	and	r3, r3, ip
    df64:	e7d13003 	ldrb	r3, [r1, r3]
    df68:	e5c03003 	strb	r3, [r0, #3]
    df6c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    df70:	e5d0300a 	ldrb	r3, [r0, #10]
    df74:	e5c03003 	strb	r3, [r0, #3]
    df78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    df7c:	e5d03004 	ldrb	r3, [r0, #4]
    df80:	e5c03003 	strb	r3, [r0, #3]
    df84:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    df88:	e5d03005 	ldrb	r3, [r0, #5]
    df8c:	e5c03003 	strb	r3, [r0, #3]
    df90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    df94:	e5d03002 	ldrb	r3, [r0, #2]
    df98:	e5c03003 	strb	r3, [r0, #3]
    df9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    dfa0:	e3560000 	cmp	r6, #0
    dfa4:	11a02882 	lslne	r2, r2, #17
    dfa8:	e28ee002 	add	lr, lr, #2
    dfac:	151f332c 	ldrne	r3, [pc, #-812]	; dc88 <CodesFD+0x2ae8>
    dfb0:	e1c0e0bc 	strh	lr, [r0, #12]
    dfb4:	11a028a2 	lsrne	r2, r2, #17
    dfb8:	17d31002 	ldrbne	r1, [r3, r2]
    dfbc:	07d51002 	ldrbeq	r1, [r5, r2]
    dfc0:	e5d0e001 	ldrb	lr, [r0, #1]
    dfc4:	e04ec001 	sub	ip, lr, r1
    dfc8:	e6ffc07c 	uxth	ip, ip
    dfcc:	e6ef207c 	uxtb	r2, ip
    dfd0:	e0843002 	add	r3, r4, r2
    dfd4:	e021100e 	eor	r1, r1, lr
    dfd8:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
    dfdc:	e02ee002 	eor	lr, lr, r2
    dfe0:	e0213002 	eor	r3, r1, r2
    dfe4:	e3844002 	orr	r4, r4, #2
    dfe8:	e001200e 	and	r2, r1, lr
    dfec:	e2033010 	and	r3, r3, #16
    dff0:	e1a0142c 	lsr	r1, ip, #8
    dff4:	e1a022a2 	lsr	r2, r2, #5
    dff8:	e1833004 	orr	r3, r3, r4
    dffc:	e2611000 	rsb	r1, r1, #0
    e000:	e2022004 	and	r2, r2, #4
    e004:	e1833001 	orr	r3, r3, r1
    e008:	e1833002 	orr	r3, r3, r2
    e00c:	e5c03000 	strb	r3, [r0]
    e010:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e014:	e5d0300b 	ldrb	r3, [r0, #11]
    e018:	e5c03003 	strb	r3, [r0, #3]
    e01c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e020:	e5d03001 	ldrb	r3, [r0, #1]
    e024:	e5c0300a 	strb	r3, [r0, #10]
    e028:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e02c:	e28ee002 	add	lr, lr, #2
    e030:	e3560000 	cmp	r6, #0
    e034:	e1c0e0bc 	strh	lr, [r0, #12]
    e038:	e1d030ba 	ldrh	r3, [r0, #10]
    e03c:	0a0005de 	beq	f7bc <CodesFD+0x461c>
    e040:	e51fc3c4 	ldr	ip, [pc, #-964]	; dc84 <CodesFD+0x2ae4>
    e044:	e51f13c4 	ldr	r1, [pc, #-964]	; dc88 <CodesFD+0x2ae8>
    e048:	e002200c 	and	r2, r2, ip
    e04c:	e19120d2 	ldrsb	r2, [r1, r2]
    e050:	e0833002 	add	r3, r3, r2
    e054:	e003300c 	and	r3, r3, ip
    e058:	e7d13003 	ldrb	r3, [r1, r3]
    e05c:	e5c03006 	strb	r3, [r0, #6]
    e060:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e064:	e1d030d0 	ldrsb	r3, [r0]
    e068:	e3530000 	cmp	r3, #0
    e06c:	a8bd81f0 	popge	{r4, r5, r6, r7, r8, pc}
    e070:	e1d020be 	ldrh	r2, [r0, #14]
    e074:	e241c006 	sub	ip, r1, #6
    e078:	e2823001 	add	r3, r2, #1
    e07c:	e6ff3073 	uxth	r3, r3
    e080:	e2821002 	add	r1, r2, #2
    e084:	e3560000 	cmp	r6, #0
    e088:	e580c020 	str	ip, [r0, #32]
    e08c:	e1c030be 	strh	r3, [r0, #14]
    e090:	e6ff1071 	uxth	r1, r1
    e094:	0a000838 	beq	1017c <CodesFD+0x4fdc>
    e098:	e51fe41c 	ldr	lr, [pc, #-1052]	; dc84 <CodesFD+0x2ae4>
    e09c:	e51fc41c 	ldr	ip, [pc, #-1052]	; dc88 <CodesFD+0x2ae8>
    e0a0:	e002200e 	and	r2, r2, lr
    e0a4:	e7dc2002 	ldrb	r2, [ip, r2]
    e0a8:	e003300e 	and	r3, r3, lr
    e0ac:	e5c0200c 	strb	r2, [r0, #12]
    e0b0:	e1c010be 	strh	r1, [r0, #14]
    e0b4:	e7dc3003 	ldrb	r3, [ip, r3]
    e0b8:	e5c0300d 	strb	r3, [r0, #13]
    e0bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e0c0:	e3560000 	cmp	r6, #0
    e0c4:	11a02882 	lslne	r2, r2, #17
    e0c8:	e28ee002 	add	lr, lr, #2
    e0cc:	151f144c 	ldrne	r1, [pc, #-1100]	; dc88 <CodesFD+0x2ae8>
    e0d0:	e1c0e0bc 	strh	lr, [r0, #12]
    e0d4:	11a028a2 	lsrne	r2, r2, #17
    e0d8:	07d52002 	ldrbeq	r2, [r5, r2]
    e0dc:	17d12002 	ldrbne	r2, [r1, r2]
    e0e0:	e1d030ba 	ldrh	r3, [r0, #10]
    e0e4:	e6af2072 	sxtb	r2, r2
    e0e8:	e0833002 	add	r3, r3, r2
    e0ec:	e5d02001 	ldrb	r2, [r0, #1]
    e0f0:	e6ff3073 	uxth	r3, r3
    e0f4:	e7c52003 	strb	r2, [r5, r3]
    e0f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e0fc:	e5d03001 	ldrb	r3, [r0, #1]
    e100:	e5c0300b 	strb	r3, [r0, #11]
    e104:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e108:	e28ee002 	add	lr, lr, #2
    e10c:	e3560000 	cmp	r6, #0
    e110:	e1c0e0bc 	strh	lr, [r0, #12]
    e114:	e1d030ba 	ldrh	r3, [r0, #10]
    e118:	0a0005be 	beq	f818 <CodesFD+0x4678>
    e11c:	e51fc4a0 	ldr	ip, [pc, #-1184]	; dc84 <CodesFD+0x2ae4>
    e120:	e51f14a0 	ldr	r1, [pc, #-1184]	; dc88 <CodesFD+0x2ae8>
    e124:	e002200c 	and	r2, r2, ip
    e128:	e19120d2 	ldrsb	r2, [r1, r2]
    e12c:	e0833002 	add	r3, r3, r2
    e130:	e003300c 	and	r3, r3, ip
    e134:	e7d13003 	ldrb	r3, [r1, r3]
    e138:	e5c03007 	strb	r3, [r0, #7]
    e13c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e140:	e5d0300a 	ldrb	r3, [r0, #10]
    e144:	e5c0300b 	strb	r3, [r0, #11]
    e148:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e14c:	e1d030ba 	ldrh	r3, [r0, #10]
    e150:	e1c030be 	strh	r3, [r0, #14]
    e154:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e158:	e5d03004 	ldrb	r3, [r0, #4]
    e15c:	e5c0300b 	strb	r3, [r0, #11]
    e160:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e164:	e5d03005 	ldrb	r3, [r0, #5]
    e168:	e5c0300b 	strb	r3, [r0, #11]
    e16c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e170:	e5d03002 	ldrb	r3, [r0, #2]
    e174:	e5c0300b 	strb	r3, [r0, #11]
    e178:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e17c:	e5d03003 	ldrb	r3, [r0, #3]
    e180:	e5c0300b 	strb	r3, [r0, #11]
    e184:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e188:	e5d03004 	ldrb	r3, [r0, #4]
    e18c:	e5c0300a 	strb	r3, [r0, #10]
    e190:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e194:	e5d03005 	ldrb	r3, [r0, #5]
    e198:	e5c0300a 	strb	r3, [r0, #10]
    e19c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e1a0:	e5d03002 	ldrb	r3, [r0, #2]
    e1a4:	e5c0300a 	strb	r3, [r0, #10]
    e1a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e1ac:	e5d03003 	ldrb	r3, [r0, #3]
    e1b0:	e5c0300a 	strb	r3, [r0, #10]
    e1b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e1b8:	e5d0300b 	ldrb	r3, [r0, #11]
    e1bc:	e5c0300a 	strb	r3, [r0, #10]
    e1c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e1c4:	e5d03004 	ldrb	r3, [r0, #4]
    e1c8:	e5c03001 	strb	r3, [r0, #1]
    e1cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e1d0:	e5d03005 	ldrb	r3, [r0, #5]
    e1d4:	e5c03001 	strb	r3, [r0, #1]
    e1d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e1dc:	e5d03002 	ldrb	r3, [r0, #2]
    e1e0:	e5c03001 	strb	r3, [r0, #1]
    e1e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e1e8:	e5d03003 	ldrb	r3, [r0, #3]
    e1ec:	e5c03001 	strb	r3, [r0, #1]
    e1f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e1f4:	e5d0300b 	ldrb	r3, [r0, #11]
    e1f8:	e5c03001 	strb	r3, [r0, #1]
    e1fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e200:	e3560000 	cmp	r6, #0
    e204:	11a02882 	lslne	r2, r2, #17
    e208:	e28ee002 	add	lr, lr, #2
    e20c:	151f158c 	ldrne	r1, [pc, #-1420]	; dc88 <CodesFD+0x2ae8>
    e210:	e1c0e0bc 	strh	lr, [r0, #12]
    e214:	11a028a2 	lsrne	r2, r2, #17
    e218:	07d52002 	ldrbeq	r2, [r5, r2]
    e21c:	17d12002 	ldrbne	r2, [r1, r2]
    e220:	e1d030ba 	ldrh	r3, [r0, #10]
    e224:	e6af2072 	sxtb	r2, r2
    e228:	e0833002 	add	r3, r3, r2
    e22c:	e5d02004 	ldrb	r2, [r0, #4]
    e230:	e6ff3073 	uxth	r3, r3
    e234:	e7c52003 	strb	r2, [r5, r3]
    e238:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e23c:	e3560000 	cmp	r6, #0
    e240:	11a02882 	lslne	r2, r2, #17
    e244:	e28ee002 	add	lr, lr, #2
    e248:	151f15c8 	ldrne	r1, [pc, #-1480]	; dc88 <CodesFD+0x2ae8>
    e24c:	e1c0e0bc 	strh	lr, [r0, #12]
    e250:	11a028a2 	lsrne	r2, r2, #17
    e254:	07d52002 	ldrbeq	r2, [r5, r2]
    e258:	17d12002 	ldrbne	r2, [r1, r2]
    e25c:	e1d030ba 	ldrh	r3, [r0, #10]
    e260:	e6af2072 	sxtb	r2, r2
    e264:	e0833002 	add	r3, r3, r2
    e268:	e5d02005 	ldrb	r2, [r0, #5]
    e26c:	e6ff3073 	uxth	r3, r3
    e270:	e7c52003 	strb	r2, [r5, r3]
    e274:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e278:	e3560000 	cmp	r6, #0
    e27c:	11a02882 	lslne	r2, r2, #17
    e280:	e28ee002 	add	lr, lr, #2
    e284:	151f1604 	ldrne	r1, [pc, #-1540]	; dc88 <CodesFD+0x2ae8>
    e288:	e1c0e0bc 	strh	lr, [r0, #12]
    e28c:	11a028a2 	lsrne	r2, r2, #17
    e290:	07d52002 	ldrbeq	r2, [r5, r2]
    e294:	17d12002 	ldrbne	r2, [r1, r2]
    e298:	e1d030ba 	ldrh	r3, [r0, #10]
    e29c:	e6af2072 	sxtb	r2, r2
    e2a0:	e0833002 	add	r3, r3, r2
    e2a4:	e5d02002 	ldrb	r2, [r0, #2]
    e2a8:	e6ff3073 	uxth	r3, r3
    e2ac:	e7c52003 	strb	r2, [r5, r3]
    e2b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e2b4:	e3560000 	cmp	r6, #0
    e2b8:	11a02882 	lslne	r2, r2, #17
    e2bc:	e28ee002 	add	lr, lr, #2
    e2c0:	151f1640 	ldrne	r1, [pc, #-1600]	; dc88 <CodesFD+0x2ae8>
    e2c4:	e1c0e0bc 	strh	lr, [r0, #12]
    e2c8:	11a028a2 	lsrne	r2, r2, #17
    e2cc:	07d52002 	ldrbeq	r2, [r5, r2]
    e2d0:	17d12002 	ldrbne	r2, [r1, r2]
    e2d4:	e1d030ba 	ldrh	r3, [r0, #10]
    e2d8:	e6af2072 	sxtb	r2, r2
    e2dc:	e0833002 	add	r3, r3, r2
    e2e0:	e5d02003 	ldrb	r2, [r0, #3]
    e2e4:	e6ff3073 	uxth	r3, r3
    e2e8:	e7c52003 	strb	r2, [r5, r3]
    e2ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e2f0:	e3560000 	cmp	r6, #0
    e2f4:	11a02882 	lslne	r2, r2, #17
    e2f8:	e28ee002 	add	lr, lr, #2
    e2fc:	151f167c 	ldrne	r1, [pc, #-1660]	; dc88 <CodesFD+0x2ae8>
    e300:	e1c0e0bc 	strh	lr, [r0, #12]
    e304:	11a028a2 	lsrne	r2, r2, #17
    e308:	07d52002 	ldrbeq	r2, [r5, r2]
    e30c:	17d12002 	ldrbne	r2, [r1, r2]
    e310:	e1d030ba 	ldrh	r3, [r0, #10]
    e314:	e6af2072 	sxtb	r2, r2
    e318:	e0833002 	add	r3, r3, r2
    e31c:	e5d02006 	ldrb	r2, [r0, #6]
    e320:	e6ff3073 	uxth	r3, r3
    e324:	e7c52003 	strb	r2, [r5, r3]
    e328:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e32c:	e3560000 	cmp	r6, #0
    e330:	11a02882 	lslne	r2, r2, #17
    e334:	e28ee002 	add	lr, lr, #2
    e338:	151f16b8 	ldrne	r1, [pc, #-1720]	; dc88 <CodesFD+0x2ae8>
    e33c:	e1c0e0bc 	strh	lr, [r0, #12]
    e340:	11a028a2 	lsrne	r2, r2, #17
    e344:	07d52002 	ldrbeq	r2, [r5, r2]
    e348:	17d12002 	ldrbne	r2, [r1, r2]
    e34c:	e1d030ba 	ldrh	r3, [r0, #10]
    e350:	e6af2072 	sxtb	r2, r2
    e354:	e0833002 	add	r3, r3, r2
    e358:	e5d02007 	ldrb	r2, [r0, #7]
    e35c:	e6ff3073 	uxth	r3, r3
    e360:	e7c52003 	strb	r2, [r5, r3]
    e364:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e368:	e5d03018 	ldrb	r3, [r0, #24]
    e36c:	e3a02000 	mov	r2, #0
    e370:	e1e03c83 	mvn	r3, r3, lsl #25
    e374:	e1e03ca3 	mvn	r3, r3, lsr #25
    e378:	e1c0e0bc 	strh	lr, [r0, #12]
    e37c:	e5c03018 	strb	r3, [r0, #24]
    e380:	e5802024 	str	r2, [r0, #36]	; 0x24
    e384:	e5802020 	str	r2, [r0, #32]
    e388:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e38c:	e5d01001 	ldrb	r1, [r0, #1]
    e390:	e5d03000 	ldrb	r3, [r0]
    e394:	e201c001 	and	ip, r1, #1
    e398:	e3c32013 	bic	r2, r3, #19
    e39c:	e1a03383 	lsl	r3, r3, #7
    e3a0:	e182200c 	orr	r2, r2, ip
    e3a4:	e18330a1 	orr	r3, r3, r1, lsr #1
    e3a8:	e5c02000 	strb	r2, [r0]
    e3ac:	e5c03001 	strb	r3, [r0, #1]
    e3b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e3b4:	e3560000 	cmp	r6, #0
    e3b8:	11a02882 	lslne	r2, r2, #17
    e3bc:	151f373c 	ldrne	r3, [pc, #-1852]	; dc88 <CodesFD+0x2ae8>
    e3c0:	e28ee002 	add	lr, lr, #2
    e3c4:	e1c0e0bc 	strh	lr, [r0, #12]
    e3c8:	11a028a2 	lsrne	r2, r2, #17
    e3cc:	17d33002 	ldrbne	r3, [r3, r2]
    e3d0:	07d53002 	ldrbeq	r3, [r5, r2]
    e3d4:	e5c03004 	strb	r3, [r0, #4]
    e3d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e3dc:	e5d02004 	ldrb	r2, [r0, #4]
    e3e0:	e5d03000 	ldrb	r3, [r0]
    e3e4:	e2422001 	sub	r2, r2, #1
    e3e8:	e6ef2072 	uxtb	r2, r2
    e3ec:	e0844002 	add	r4, r4, r2
    e3f0:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    e3f4:	e2033001 	and	r3, r3, #1
    e3f8:	e352007f 	cmp	r2, #127	; 0x7f
    e3fc:	e5c02004 	strb	r2, [r0, #4]
    e400:	e1833001 	orr	r3, r3, r1
    e404:	0a000727 	beq	100a8 <CodesFD+0x4f08>
    e408:	e202200f 	and	r2, r2, #15
    e40c:	e352000f 	cmp	r2, #15
    e410:	13a02000 	movne	r2, #0
    e414:	03a02010 	moveq	r2, #16
    e418:	e1823003 	orr	r3, r2, r3
    e41c:	e3833002 	orr	r3, r3, #2
    e420:	e5c03000 	strb	r3, [r0]
    e424:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e428:	e5d02004 	ldrb	r2, [r0, #4]
    e42c:	e5d03000 	ldrb	r3, [r0]
    e430:	e2822001 	add	r2, r2, #1
    e434:	e6ef2072 	uxtb	r2, r2
    e438:	e0844002 	add	r4, r4, r2
    e43c:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    e440:	e2033001 	and	r3, r3, #1
    e444:	e1833001 	orr	r3, r3, r1
    e448:	e3520080 	cmp	r2, #128	; 0x80
    e44c:	e5c02004 	strb	r2, [r0, #4]
    e450:	e6af3073 	sxtb	r3, r3
    e454:	0a0006fe 	beq	10054 <CodesFD+0x4eb4>
    e458:	e312000f 	tst	r2, #15
    e45c:	03a02010 	moveq	r2, #16
    e460:	13a02000 	movne	r2, #0
    e464:	e1823003 	orr	r3, r2, r3
    e468:	e5c03000 	strb	r3, [r0]
    e46c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e470:	e1d030b4 	ldrh	r3, [r0, #4]
    e474:	e2433001 	sub	r3, r3, #1
    e478:	e1c030b4 	strh	r3, [r0, #4]
    e47c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e480:	e5d02001 	ldrb	r2, [r0, #1]
    e484:	e5d03000 	ldrb	r3, [r0]
    e488:	e1e02002 	mvn	r2, r2
    e48c:	e3833012 	orr	r3, r3, #18
    e490:	e5c02001 	strb	r2, [r0, #1]
    e494:	e5c03000 	strb	r3, [r0]
    e498:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e49c:	e3560000 	cmp	r6, #0
    e4a0:	11a02882 	lslne	r2, r2, #17
    e4a4:	151f3824 	ldrne	r3, [pc, #-2084]	; dc88 <CodesFD+0x2ae8>
    e4a8:	e28ee002 	add	lr, lr, #2
    e4ac:	e1c0e0bc 	strh	lr, [r0, #12]
    e4b0:	11a028a2 	lsrne	r2, r2, #17
    e4b4:	17d33002 	ldrbne	r3, [r3, r2]
    e4b8:	07d53002 	ldrbeq	r3, [r5, r2]
    e4bc:	e5c0300a 	strb	r3, [r0, #10]
    e4c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e4c4:	e5d0200a 	ldrb	r2, [r0, #10]
    e4c8:	e5d03000 	ldrb	r3, [r0]
    e4cc:	e2422001 	sub	r2, r2, #1
    e4d0:	e6ef2072 	uxtb	r2, r2
    e4d4:	e0844002 	add	r4, r4, r2
    e4d8:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    e4dc:	e2033001 	and	r3, r3, #1
    e4e0:	e352007f 	cmp	r2, #127	; 0x7f
    e4e4:	e5c0200a 	strb	r2, [r0, #10]
    e4e8:	e1833001 	orr	r3, r3, r1
    e4ec:	0a0006e4 	beq	10084 <CodesFD+0x4ee4>
    e4f0:	e202200f 	and	r2, r2, #15
    e4f4:	e352000f 	cmp	r2, #15
    e4f8:	13a02000 	movne	r2, #0
    e4fc:	03a02010 	moveq	r2, #16
    e500:	e1823003 	orr	r3, r2, r3
    e504:	e3833002 	orr	r3, r3, #2
    e508:	e5c03000 	strb	r3, [r0]
    e50c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e510:	e5d0200a 	ldrb	r2, [r0, #10]
    e514:	e5d03000 	ldrb	r3, [r0]
    e518:	e2822001 	add	r2, r2, #1
    e51c:	e6ef2072 	uxtb	r2, r2
    e520:	e0844002 	add	r4, r4, r2
    e524:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    e528:	e2033001 	and	r3, r3, #1
    e52c:	e1833001 	orr	r3, r3, r1
    e530:	e3520080 	cmp	r2, #128	; 0x80
    e534:	e5c0200a 	strb	r2, [r0, #10]
    e538:	e6af3073 	sxtb	r3, r3
    e53c:	0a0006d6 	beq	1009c <CodesFD+0x4efc>
    e540:	e312000f 	tst	r2, #15
    e544:	03a02010 	moveq	r2, #16
    e548:	13a02000 	movne	r2, #0
    e54c:	e1823003 	orr	r3, r2, r3
    e550:	e5c03000 	strb	r3, [r0]
    e554:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e558:	e1d030ba 	ldrh	r3, [r0, #10]
    e55c:	e2433001 	sub	r3, r3, #1
    e560:	e1c030ba 	strh	r3, [r0, #10]
    e564:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e568:	e1d020ba 	ldrh	r2, [r0, #10]
    e56c:	e5d03000 	ldrb	r3, [r0]
    e570:	e1a02082 	lsl	r2, r2, #1
    e574:	e6ffc072 	uxth	ip, r2
    e578:	e1a0144c 	asr	r1, ip, #8
    e57c:	e3c33013 	bic	r3, r3, #19
    e580:	e2011010 	and	r1, r1, #16
    e584:	e1833822 	orr	r3, r3, r2, lsr #16
    e588:	e1833001 	orr	r3, r3, r1
    e58c:	e1c0c0ba 	strh	ip, [r0, #10]
    e590:	e5c03000 	strb	r3, [r0]
    e594:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e598:	e5d03000 	ldrb	r3, [r0]
    e59c:	e3130040 	tst	r3, #64	; 0x40
    e5a0:	0a00064a 	beq	fed0 <CodesFD+0x4d30>
    e5a4:	e3560000 	cmp	r6, #0
    e5a8:	e2411005 	sub	r1, r1, #5
    e5ac:	11a03882 	lslne	r3, r2, #17
    e5b0:	e5801020 	str	r1, [r0, #32]
    e5b4:	151f1934 	ldrne	r1, [pc, #-2356]	; dc88 <CodesFD+0x2ae8>
    e5b8:	11a038a3 	lsrne	r3, r3, #17
    e5bc:	07d53002 	ldrbeq	r3, [r5, r2]
    e5c0:	17d13003 	ldrbne	r3, [r1, r3]
    e5c4:	e6af3073 	sxtb	r3, r3
    e5c8:	e2833001 	add	r3, r3, #1
    e5cc:	e0822003 	add	r2, r2, r3
    e5d0:	e1c020bc 	strh	r2, [r0, #12]
    e5d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e5d8:	e28e3002 	add	r3, lr, #2
    e5dc:	e6ff3073 	uxth	r3, r3
    e5e0:	e28e1003 	add	r1, lr, #3
    e5e4:	e3560000 	cmp	r6, #0
    e5e8:	e1c030bc 	strh	r3, [r0, #12]
    e5ec:	e6ff1071 	uxth	r1, r1
    e5f0:	0a000447 	beq	f714 <CodesFD+0x4574>
    e5f4:	e51fe978 	ldr	lr, [pc, #-2424]	; dc84 <CodesFD+0x2ae4>
    e5f8:	e51fc978 	ldr	ip, [pc, #-2424]	; dc88 <CodesFD+0x2ae8>
    e5fc:	e002200e 	and	r2, r2, lr
    e600:	e7dc2002 	ldrb	r2, [ip, r2]
    e604:	e003300e 	and	r3, r3, lr
    e608:	e1c010bc 	strh	r1, [r0, #12]
    e60c:	e7dc3003 	ldrb	r3, [ip, r3]
    e610:	e1823403 	orr	r3, r2, r3, lsl #8
    e614:	e003200e 	and	r2, r3, lr
    e618:	e7dc2002 	ldrb	r2, [ip, r2]
    e61c:	e2833001 	add	r3, r3, #1
    e620:	e5c0200a 	strb	r2, [r0, #10]
    e624:	e003300e 	and	r3, r3, lr
    e628:	e7dc3003 	ldrb	r3, [ip, r3]
    e62c:	e5c0300b 	strb	r3, [r0, #11]
    e630:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e634:	e5d02000 	ldrb	r2, [r0]
    e638:	e5d03001 	ldrb	r3, [r0, #1]
    e63c:	e3120001 	tst	r2, #1
    e640:	13833c01 	orrne	r3, r3, #256	; 0x100
    e644:	e3120010 	tst	r2, #16
    e648:	13833c02 	orrne	r3, r3, #512	; 0x200
    e64c:	e3120002 	tst	r2, #2
    e650:	13833b01 	orrne	r3, r3, #1024	; 0x400
    e654:	e51f29dc 	ldr	r2, [pc, #-2524]	; dc80 <CodesFD+0x2ae0>
    e658:	e1a03083 	lsl	r3, r3, #1
    e65c:	e19230b3 	ldrh	r3, [r2, r3]
    e660:	e1c030b0 	strh	r3, [r0]
    e664:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e668:	e5d03001 	ldrb	r3, [r0, #1]
    e66c:	e5d02000 	ldrb	r2, [r0]
    e670:	e2131001 	ands	r1, r3, #1
    e674:	e1a030a3 	lsr	r3, r3, #1
    e678:	11e03c83 	mvnne	r3, r3, lsl #25
    e67c:	11e03ca3 	mvnne	r3, r3, lsr #25
    e680:	e5c03001 	strb	r3, [r0, #1]
    e684:	e3c23013 	bic	r3, r2, #19
    e688:	e1833001 	orr	r3, r3, r1
    e68c:	e5c03000 	strb	r3, [r0]
    e690:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e694:	e3560000 	cmp	r6, #0
    e698:	11a02882 	lslne	r2, r2, #17
    e69c:	151f3a1c 	ldrne	r3, [pc, #-2588]	; dc88 <CodesFD+0x2ae8>
    e6a0:	e28ee002 	add	lr, lr, #2
    e6a4:	e1c0e0bc 	strh	lr, [r0, #12]
    e6a8:	11a028a2 	lsrne	r2, r2, #17
    e6ac:	17d33002 	ldrbne	r3, [r3, r2]
    e6b0:	07d53002 	ldrbeq	r3, [r5, r2]
    e6b4:	e5c03002 	strb	r3, [r0, #2]
    e6b8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e6bc:	e5d02002 	ldrb	r2, [r0, #2]
    e6c0:	e5d03000 	ldrb	r3, [r0]
    e6c4:	e2422001 	sub	r2, r2, #1
    e6c8:	e6ef2072 	uxtb	r2, r2
    e6cc:	e0844002 	add	r4, r4, r2
    e6d0:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    e6d4:	e2033001 	and	r3, r3, #1
    e6d8:	e352007f 	cmp	r2, #127	; 0x7f
    e6dc:	e5c02002 	strb	r2, [r0, #2]
    e6e0:	e1833001 	orr	r3, r3, r1
    e6e4:	0a000669 	beq	10090 <CodesFD+0x4ef0>
    e6e8:	e202200f 	and	r2, r2, #15
    e6ec:	e352000f 	cmp	r2, #15
    e6f0:	13a02000 	movne	r2, #0
    e6f4:	03a02010 	moveq	r2, #16
    e6f8:	e1823003 	orr	r3, r2, r3
    e6fc:	e3833002 	orr	r3, r3, #2
    e700:	e5c03000 	strb	r3, [r0]
    e704:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e708:	e5d02002 	ldrb	r2, [r0, #2]
    e70c:	e5d03000 	ldrb	r3, [r0]
    e710:	e2822001 	add	r2, r2, #1
    e714:	e6ef2072 	uxtb	r2, r2
    e718:	e0844002 	add	r4, r4, r2
    e71c:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    e720:	e2033001 	and	r3, r3, #1
    e724:	e1833001 	orr	r3, r3, r1
    e728:	e3520080 	cmp	r2, #128	; 0x80
    e72c:	e5c02002 	strb	r2, [r0, #2]
    e730:	e6af3073 	sxtb	r3, r3
    e734:	0a00065e 	beq	100b4 <CodesFD+0x4f14>
    e738:	e312000f 	tst	r2, #15
    e73c:	03a02010 	moveq	r2, #16
    e740:	13a02000 	movne	r2, #0
    e744:	e1823003 	orr	r3, r2, r3
    e748:	e5c03000 	strb	r3, [r0]
    e74c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e750:	e1d030b2 	ldrh	r3, [r0, #2]
    e754:	e2433001 	sub	r3, r3, #1
    e758:	e1c030b2 	strh	r3, [r0, #2]
    e75c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e760:	e5d03000 	ldrb	r3, [r0]
    e764:	e3c33012 	bic	r3, r3, #18
    e768:	e3833001 	orr	r3, r3, #1
    e76c:	e5c03000 	strb	r3, [r0]
    e770:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e774:	e28e1002 	add	r1, lr, #2
    e778:	e6ff1071 	uxth	r1, r1
    e77c:	e28ec003 	add	ip, lr, #3
    e780:	e3560000 	cmp	r6, #0
    e784:	e1c010bc 	strh	r1, [r0, #12]
    e788:	e6ffc07c 	uxth	ip, ip
    e78c:	e1d030ba 	ldrh	r3, [r0, #10]
    e790:	0a0003e9 	beq	f73c <CodesFD+0x459c>
    e794:	e51f4b18 	ldr	r4, [pc, #-2840]	; dc84 <CodesFD+0x2ae4>
    e798:	e51feb18 	ldr	lr, [pc, #-2840]	; dc88 <CodesFD+0x2ae8>
    e79c:	e0022004 	and	r2, r2, r4
    e7a0:	e19e20d2 	ldrsb	r2, [lr, r2]
    e7a4:	e0011004 	and	r1, r1, r4
    e7a8:	e1c0c0bc 	strh	ip, [r0, #12]
    e7ac:	e0833002 	add	r3, r3, r2
    e7b0:	e7de2001 	ldrb	r2, [lr, r1]
    e7b4:	e6ff3073 	uxth	r3, r3
    e7b8:	e7c52003 	strb	r2, [r5, r3]
    e7bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e7c0:	e3560000 	cmp	r6, #0
    e7c4:	e1d0c0ba 	ldrh	ip, [r0, #10]
    e7c8:	0a0003f6 	beq	f7a8 <CodesFD+0x4608>
    e7cc:	e51f7b50 	ldr	r7, [pc, #-2896]	; dc84 <CodesFD+0x2ae4>
    e7d0:	e51f1b50 	ldr	r1, [pc, #-2896]	; dc88 <CodesFD+0x2ae8>
    e7d4:	e0023007 	and	r3, r2, r7
    e7d8:	e19130d3 	ldrsb	r3, [r1, r3]
    e7dc:	e08c3003 	add	r3, ip, r3
    e7e0:	e0033007 	and	r3, r3, r7
    e7e4:	e7d11003 	ldrb	r1, [r1, r3]
    e7e8:	e2411001 	sub	r1, r1, #1
    e7ec:	e6ef1071 	uxtb	r1, r1
    e7f0:	e0844001 	add	r4, r4, r1
    e7f4:	e5d03000 	ldrb	r3, [r0]
    e7f8:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    e7fc:	e2033001 	and	r3, r3, #1
    e800:	e351007f 	cmp	r1, #127	; 0x7f
    e804:	e1833004 	orr	r3, r3, r4
    e808:	0a00060b 	beq	1003c <CodesFD+0x4e9c>
    e80c:	e201400f 	and	r4, r1, #15
    e810:	e354000f 	cmp	r4, #15
    e814:	13a04000 	movne	r4, #0
    e818:	03a04010 	moveq	r4, #16
    e81c:	e1843003 	orr	r3, r4, r3
    e820:	e3833002 	orr	r3, r3, #2
    e824:	e3560000 	cmp	r6, #0
    e828:	e5c03000 	strb	r3, [r0]
    e82c:	11a02882 	lslne	r2, r2, #17
    e830:	151f3bb0 	ldrne	r3, [pc, #-2992]	; dc88 <CodesFD+0x2ae8>
    e834:	e28ee002 	add	lr, lr, #2
    e838:	e1c0e0bc 	strh	lr, [r0, #12]
    e83c:	11a028a2 	lsrne	r2, r2, #17
    e840:	07d53002 	ldrbeq	r3, [r5, r2]
    e844:	17d33002 	ldrbne	r3, [r3, r2]
    e848:	e6af3073 	sxtb	r3, r3
    e84c:	e08c3003 	add	r3, ip, r3
    e850:	e6ff3073 	uxth	r3, r3
    e854:	e7c51003 	strb	r1, [r5, r3]
    e858:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e85c:	e1d030d0 	ldrsb	r3, [r0]
    e860:	e5d01001 	ldrb	r1, [r0, #1]
    e864:	e2032001 	and	r2, r3, #1
    e868:	e3c33013 	bic	r3, r3, #19
    e86c:	e1822081 	orr	r2, r2, r1, lsl #1
    e870:	e18333a1 	orr	r3, r3, r1, lsr #7
    e874:	e5c02001 	strb	r2, [r0, #1]
    e878:	e5c03000 	strb	r3, [r0]
    e87c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e880:	e3560000 	cmp	r6, #0
    e884:	11a02882 	lslne	r2, r2, #17
    e888:	151f3c08 	ldrne	r3, [pc, #-3080]	; dc88 <CodesFD+0x2ae8>
    e88c:	e28ee002 	add	lr, lr, #2
    e890:	e1c0e0bc 	strh	lr, [r0, #12]
    e894:	11a028a2 	lsrne	r2, r2, #17
    e898:	17d33002 	ldrbne	r3, [r3, r2]
    e89c:	07d53002 	ldrbeq	r3, [r5, r2]
    e8a0:	e5c03005 	strb	r3, [r0, #5]
    e8a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e8a8:	e1d030ba 	ldrh	r3, [r0, #10]
    e8ac:	e2833001 	add	r3, r3, #1
    e8b0:	e1c030ba 	strh	r3, [r0, #10]
    e8b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e8b8:	e3560000 	cmp	r6, #0
    e8bc:	e28e1002 	add	r1, lr, #2
    e8c0:	151f4c44 	ldrne	r4, [pc, #-3140]	; dc84 <CodesFD+0x2ae4>
    e8c4:	e6ff1071 	uxth	r1, r1
    e8c8:	e28ec003 	add	ip, lr, #3
    e8cc:	151fec4c 	ldrne	lr, [pc, #-3148]	; dc88 <CodesFD+0x2ae8>
    e8d0:	e1c010bc 	strh	r1, [r0, #12]
    e8d4:	e6ffc07c 	uxth	ip, ip
    e8d8:	10022004 	andne	r2, r2, r4
    e8dc:	07d53002 	ldrbeq	r3, [r5, r2]
    e8e0:	17de3002 	ldrbne	r3, [lr, r2]
    e8e4:	01c0c0bc 	strheq	ip, [r0, #12]
    e8e8:	11c0c0bc 	strhne	ip, [r0, #12]
    e8ec:	10011004 	andne	r1, r1, r4
    e8f0:	07d51001 	ldrbeq	r1, [r5, r1]
    e8f4:	17de1001 	ldrbne	r1, [lr, r1]
    e8f8:	e5d0200a 	ldrb	r2, [r0, #10]
    e8fc:	e6ef3073 	uxtb	r3, r3
    e900:	e1833401 	orr	r3, r3, r1, lsl #8
    e904:	e7c52003 	strb	r2, [r5, r3]
    e908:	e5d0200b 	ldrb	r2, [r0, #11]
    e90c:	e2833001 	add	r3, r3, #1
    e910:	e6ff3073 	uxth	r3, r3
    e914:	e7c52003 	strb	r2, [r5, r3]
    e918:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e91c:	e28e3002 	add	r3, lr, #2
    e920:	e6ff3073 	uxth	r3, r3
    e924:	e28e1003 	add	r1, lr, #3
    e928:	e3560000 	cmp	r6, #0
    e92c:	e1c030bc 	strh	r3, [r0, #12]
    e930:	e6ff1071 	uxth	r1, r1
    e934:	0a000371 	beq	f700 <CodesFD+0x4560>
    e938:	e51fecbc 	ldr	lr, [pc, #-3260]	; dc84 <CodesFD+0x2ae4>
    e93c:	e51fccbc 	ldr	ip, [pc, #-3260]	; dc88 <CodesFD+0x2ae8>
    e940:	e002200e 	and	r2, r2, lr
    e944:	e7dc2002 	ldrb	r2, [ip, r2]
    e948:	e003300e 	and	r3, r3, lr
    e94c:	e5c0200a 	strb	r2, [r0, #10]
    e950:	e1c010bc 	strh	r1, [r0, #12]
    e954:	e7dc3003 	ldrb	r3, [ip, r3]
    e958:	e5c0300b 	strb	r3, [r0, #11]
    e95c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e960:	e5d03000 	ldrb	r3, [r0]
    e964:	e3130040 	tst	r3, #64	; 0x40
    e968:	1a00054e 	bne	fea8 <CodesFD+0x4d08>
    e96c:	e3560000 	cmp	r6, #0
    e970:	e2411005 	sub	r1, r1, #5
    e974:	11a03882 	lslne	r3, r2, #17
    e978:	e5801020 	str	r1, [r0, #32]
    e97c:	151f1cfc 	ldrne	r1, [pc, #-3324]	; dc88 <CodesFD+0x2ae8>
    e980:	11a038a3 	lsrne	r3, r3, #17
    e984:	07d53002 	ldrbeq	r3, [r5, r2]
    e988:	17d13003 	ldrbne	r3, [r1, r3]
    e98c:	e6af3073 	sxtb	r3, r3
    e990:	e2833001 	add	r3, r3, #1
    e994:	e0822003 	add	r2, r2, r3
    e998:	e1c020bc 	strh	r2, [r0, #12]
    e99c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e9a0:	e5d0200b 	ldrb	r2, [r0, #11]
    e9a4:	e5d03000 	ldrb	r3, [r0]
    e9a8:	e2422001 	sub	r2, r2, #1
    e9ac:	e6ef2072 	uxtb	r2, r2
    e9b0:	e0844002 	add	r4, r4, r2
    e9b4:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    e9b8:	e2033001 	and	r3, r3, #1
    e9bc:	e352007f 	cmp	r2, #127	; 0x7f
    e9c0:	e5c0200b 	strb	r2, [r0, #11]
    e9c4:	e1833001 	orr	r3, r3, r1
    e9c8:	0a000593 	beq	1001c <CodesFD+0x4e7c>
    e9cc:	e202200f 	and	r2, r2, #15
    e9d0:	e352000f 	cmp	r2, #15
    e9d4:	13a02000 	movne	r2, #0
    e9d8:	03a02010 	moveq	r2, #16
    e9dc:	e1823003 	orr	r3, r2, r3
    e9e0:	e3833002 	orr	r3, r3, #2
    e9e4:	e5c03000 	strb	r3, [r0]
    e9e8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e9ec:	e3560000 	cmp	r6, #0
    e9f0:	11a02882 	lslne	r2, r2, #17
    e9f4:	159f3de8 	ldrne	r3, [pc, #3560]	; f7e4 <CodesFD+0x4644>
    e9f8:	e28ee002 	add	lr, lr, #2
    e9fc:	e1c0e0bc 	strh	lr, [r0, #12]
    ea00:	11a028a2 	lsrne	r2, r2, #17
    ea04:	17d33002 	ldrbne	r3, [r3, r2]
    ea08:	07d53002 	ldrbeq	r3, [r5, r2]
    ea0c:	e5c0300b 	strb	r3, [r0, #11]
    ea10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ea14:	e5d0200b 	ldrb	r2, [r0, #11]
    ea18:	e5d03000 	ldrb	r3, [r0]
    ea1c:	e2822001 	add	r2, r2, #1
    ea20:	e6ef2072 	uxtb	r2, r2
    ea24:	e0844002 	add	r4, r4, r2
    ea28:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    ea2c:	e2033001 	and	r3, r3, #1
    ea30:	e1833001 	orr	r3, r3, r1
    ea34:	e3520080 	cmp	r2, #128	; 0x80
    ea38:	e5c0200b 	strb	r2, [r0, #11]
    ea3c:	e6af3073 	sxtb	r3, r3
    ea40:	0a00058c 	beq	10078 <CodesFD+0x4ed8>
    ea44:	e312000f 	tst	r2, #15
    ea48:	03a02010 	moveq	r2, #16
    ea4c:	13a02000 	movne	r2, #0
    ea50:	e1823003 	orr	r3, r2, r3
    ea54:	e5c03000 	strb	r3, [r0]
    ea58:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ea5c:	e1d030be 	ldrh	r3, [r0, #14]
    ea60:	e2433001 	sub	r3, r3, #1
    ea64:	e1c030be 	strh	r3, [r0, #14]
    ea68:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ea6c:	e1d030be 	ldrh	r3, [r0, #14]
    ea70:	e2833001 	add	r3, r3, #1
    ea74:	e1c030be 	strh	r3, [r0, #14]
    ea78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ea7c:	e3560000 	cmp	r6, #0
    ea80:	e28e1002 	add	r1, lr, #2
    ea84:	159f4d5c 	ldrne	r4, [pc, #3420]	; f7e8 <CodesFD+0x4648>
    ea88:	e6ff1071 	uxth	r1, r1
    ea8c:	e28ec003 	add	ip, lr, #3
    ea90:	159fed4c 	ldrne	lr, [pc, #3404]	; f7e4 <CodesFD+0x4644>
    ea94:	e1c010bc 	strh	r1, [r0, #12]
    ea98:	e6ffc07c 	uxth	ip, ip
    ea9c:	10022004 	andne	r2, r2, r4
    eaa0:	07d53002 	ldrbeq	r3, [r5, r2]
    eaa4:	17de3002 	ldrbne	r3, [lr, r2]
    eaa8:	10011004 	andne	r1, r1, r4
    eaac:	11c0c0bc 	strhne	ip, [r0, #12]
    eab0:	01c0c0bc 	strheq	ip, [r0, #12]
    eab4:	07d51001 	ldrbeq	r1, [r5, r1]
    eab8:	17de1001 	ldrbne	r1, [lr, r1]
    eabc:	e6ef3073 	uxtb	r3, r3
    eac0:	e5d02001 	ldrb	r2, [r0, #1]
    eac4:	e1833401 	orr	r3, r3, r1, lsl #8
    eac8:	e7c52003 	strb	r2, [r5, r3]
    eacc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ead0:	e28e3002 	add	r3, lr, #2
    ead4:	e6ff3073 	uxth	r3, r3
    ead8:	e28e1003 	add	r1, lr, #3
    eadc:	e3560000 	cmp	r6, #0
    eae0:	e1c030bc 	strh	r3, [r0, #12]
    eae4:	e6ff1071 	uxth	r1, r1
    eae8:	0a000319 	beq	f754 <CodesFD+0x45b4>
    eaec:	e59fecf4 	ldr	lr, [pc, #3316]	; f7e8 <CodesFD+0x4648>
    eaf0:	e59fccec 	ldr	ip, [pc, #3308]	; f7e4 <CodesFD+0x4644>
    eaf4:	e002200e 	and	r2, r2, lr
    eaf8:	e7dc2002 	ldrb	r2, [ip, r2]
    eafc:	e003300e 	and	r3, r3, lr
    eb00:	e5c0200e 	strb	r2, [r0, #14]
    eb04:	e1c010bc 	strh	r1, [r0, #12]
    eb08:	e7dc3003 	ldrb	r3, [ip, r3]
    eb0c:	e5c0300f 	strb	r3, [r0, #15]
    eb10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    eb14:	e5d03000 	ldrb	r3, [r0]
    eb18:	e3130001 	tst	r3, #1
    eb1c:	1a0004fa 	bne	ff0c <CodesFD+0x4d6c>
    eb20:	e3560000 	cmp	r6, #0
    eb24:	e2411005 	sub	r1, r1, #5
    eb28:	11a03882 	lslne	r3, r2, #17
    eb2c:	e5801020 	str	r1, [r0, #32]
    eb30:	159f1cac 	ldrne	r1, [pc, #3244]	; f7e4 <CodesFD+0x4644>
    eb34:	11a038a3 	lsrne	r3, r3, #17
    eb38:	07d53002 	ldrbeq	r3, [r5, r2]
    eb3c:	17d13003 	ldrbne	r3, [r1, r3]
    eb40:	e6af3073 	sxtb	r3, r3
    eb44:	e2833001 	add	r3, r3, #1
    eb48:	e0822003 	add	r2, r2, r3
    eb4c:	e1c020bc 	strh	r2, [r0, #12]
    eb50:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    eb54:	e3560000 	cmp	r6, #0
    eb58:	e1d0c0ba 	ldrh	ip, [r0, #10]
    eb5c:	0a000301 	beq	f768 <CodesFD+0x45c8>
    eb60:	e59f7c80 	ldr	r7, [pc, #3200]	; f7e8 <CodesFD+0x4648>
    eb64:	e59f1c78 	ldr	r1, [pc, #3192]	; f7e4 <CodesFD+0x4644>
    eb68:	e0023007 	and	r3, r2, r7
    eb6c:	e19130d3 	ldrsb	r3, [r1, r3]
    eb70:	e08c3003 	add	r3, ip, r3
    eb74:	e0033007 	and	r3, r3, r7
    eb78:	e7d11003 	ldrb	r1, [r1, r3]
    eb7c:	e2811001 	add	r1, r1, #1
    eb80:	e6ef1071 	uxtb	r1, r1
    eb84:	e0844001 	add	r4, r4, r1
    eb88:	e5d03000 	ldrb	r3, [r0]
    eb8c:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
    eb90:	e2033001 	and	r3, r3, #1
    eb94:	e1833004 	orr	r3, r3, r4
    eb98:	e3510080 	cmp	r1, #128	; 0x80
    eb9c:	e6af3073 	sxtb	r3, r3
    eba0:	0a000531 	beq	1006c <CodesFD+0x4ecc>
    eba4:	e311000f 	tst	r1, #15
    eba8:	03a04010 	moveq	r4, #16
    ebac:	13a04000 	movne	r4, #0
    ebb0:	e1843003 	orr	r3, r4, r3
    ebb4:	e3560000 	cmp	r6, #0
    ebb8:	e5c03000 	strb	r3, [r0]
    ebbc:	11a02882 	lslne	r2, r2, #17
    ebc0:	159f3c1c 	ldrne	r3, [pc, #3100]	; f7e4 <CodesFD+0x4644>
    ebc4:	e28ee002 	add	lr, lr, #2
    ebc8:	e1c0e0bc 	strh	lr, [r0, #12]
    ebcc:	11a028a2 	lsrne	r2, r2, #17
    ebd0:	07d53002 	ldrbeq	r3, [r5, r2]
    ebd4:	17d33002 	ldrbne	r3, [r3, r2]
    ebd8:	e6af3073 	sxtb	r3, r3
    ebdc:	e08c3003 	add	r3, ip, r3
    ebe0:	e6ff3073 	uxth	r3, r3
    ebe4:	e7c51003 	strb	r1, [r5, r3]
    ebe8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ebec:	e5d02001 	ldrb	r2, [r0, #1]
    ebf0:	e5d03000 	ldrb	r3, [r0]
    ebf4:	e2422001 	sub	r2, r2, #1
    ebf8:	e6ef2072 	uxtb	r2, r2
    ebfc:	e0844002 	add	r4, r4, r2
    ec00:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    ec04:	e2033001 	and	r3, r3, #1
    ec08:	e352007f 	cmp	r2, #127	; 0x7f
    ec0c:	e5c02001 	strb	r2, [r0, #1]
    ec10:	e1833001 	orr	r3, r3, r1
    ec14:	0a000511 	beq	10060 <CodesFD+0x4ec0>
    ec18:	e202200f 	and	r2, r2, #15
    ec1c:	e352000f 	cmp	r2, #15
    ec20:	13a02000 	movne	r2, #0
    ec24:	03a02010 	moveq	r2, #16
    ec28:	e1823003 	orr	r3, r2, r3
    ec2c:	e3833002 	orr	r3, r3, #2
    ec30:	e5c03000 	strb	r3, [r0]
    ec34:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ec38:	e5d02001 	ldrb	r2, [r0, #1]
    ec3c:	e5d03000 	ldrb	r3, [r0]
    ec40:	e2822001 	add	r2, r2, #1
    ec44:	e6ef2072 	uxtb	r2, r2
    ec48:	e0844002 	add	r4, r4, r2
    ec4c:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    ec50:	e2033001 	and	r3, r3, #1
    ec54:	e1833001 	orr	r3, r3, r1
    ec58:	e3520080 	cmp	r2, #128	; 0x80
    ec5c:	e5c02001 	strb	r2, [r0, #1]
    ec60:	e6af3073 	sxtb	r3, r3
    ec64:	0a0004f7 	beq	10048 <CodesFD+0x4ea8>
    ec68:	e312000f 	tst	r2, #15
    ec6c:	03a02010 	moveq	r2, #16
    ec70:	13a02000 	movne	r2, #0
    ec74:	e1823003 	orr	r3, r2, r3
    ec78:	e5c03000 	strb	r3, [r0]
    ec7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ec80:	e1d030ba 	ldrh	r3, [r0, #10]
    ec84:	e1d010be 	ldrh	r1, [r0, #14]
    ec88:	e5d02000 	ldrb	r2, [r0]
    ec8c:	e083c001 	add	ip, r3, r1
    ec90:	e0233001 	eor	r3, r3, r1
    ec94:	e6ff107c 	uxth	r1, ip
    ec98:	e0233001 	eor	r3, r3, r1
    ec9c:	e1a03443 	asr	r3, r3, #8
    eca0:	e3c22013 	bic	r2, r2, #19
    eca4:	e2033010 	and	r3, r3, #16
    eca8:	e182282c 	orr	r2, r2, ip, lsr #16
    ecac:	e1823003 	orr	r3, r2, r3
    ecb0:	e1c010ba 	strh	r1, [r0, #10]
    ecb4:	e5c03000 	strb	r3, [r0]
    ecb8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ecbc:	e3560000 	cmp	r6, #0
    ecc0:	11a02882 	lslne	r2, r2, #17
    ecc4:	159f3b18 	ldrne	r3, [pc, #2840]	; f7e4 <CodesFD+0x4644>
    ecc8:	e28ee002 	add	lr, lr, #2
    eccc:	e1c0e0bc 	strh	lr, [r0, #12]
    ecd0:	11a028a2 	lsrne	r2, r2, #17
    ecd4:	17d33002 	ldrbne	r3, [r3, r2]
    ecd8:	07d53002 	ldrbeq	r3, [r5, r2]
    ecdc:	e5c03001 	strb	r3, [r0, #1]
    ece0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ece4:	e28e3002 	add	r3, lr, #2
    ece8:	e6ff3073 	uxth	r3, r3
    ecec:	e28e1003 	add	r1, lr, #3
    ecf0:	e3560000 	cmp	r6, #0
    ecf4:	e1c030bc 	strh	r3, [r0, #12]
    ecf8:	e6ff1071 	uxth	r1, r1
    ecfc:	0a00029e 	beq	f77c <CodesFD+0x45dc>
    ed00:	e59feae0 	ldr	lr, [pc, #2784]	; f7e8 <CodesFD+0x4648>
    ed04:	e59fcad8 	ldr	ip, [pc, #2776]	; f7e4 <CodesFD+0x4644>
    ed08:	e002200e 	and	r2, r2, lr
    ed0c:	e7dc2002 	ldrb	r2, [ip, r2]
    ed10:	e003300e 	and	r3, r3, lr
    ed14:	e1c010bc 	strh	r1, [r0, #12]
    ed18:	e7dc3003 	ldrb	r3, [ip, r3]
    ed1c:	e1823403 	orr	r3, r2, r3, lsl #8
    ed20:	e003300e 	and	r3, r3, lr
    ed24:	e7dc3003 	ldrb	r3, [ip, r3]
    ed28:	e5c03001 	strb	r3, [r0, #1]
    ed2c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ed30:	e5d03000 	ldrb	r3, [r0]
    ed34:	e3130001 	tst	r3, #1
    ed38:	0a000476 	beq	ff18 <CodesFD+0x4d78>
    ed3c:	e3560000 	cmp	r6, #0
    ed40:	e2411005 	sub	r1, r1, #5
    ed44:	11a03882 	lslne	r3, r2, #17
    ed48:	e5801020 	str	r1, [r0, #32]
    ed4c:	159f1a90 	ldrne	r1, [pc, #2704]	; f7e4 <CodesFD+0x4644>
    ed50:	11a038a3 	lsrne	r3, r3, #17
    ed54:	07d53002 	ldrbeq	r3, [r5, r2]
    ed58:	17d13003 	ldrbne	r3, [r1, r3]
    ed5c:	e6af3073 	sxtb	r3, r3
    ed60:	e2833001 	add	r3, r3, #1
    ed64:	e0822003 	add	r2, r2, r3
    ed68:	e1c020bc 	strh	r2, [r0, #12]
    ed6c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ed70:	e5d02001 	ldrb	r2, [r0, #1]
    ed74:	e5d01000 	ldrb	r1, [r0]
    ed78:	e1a033a2 	lsr	r3, r2, #7
    ed7c:	e3c11013 	bic	r1, r1, #19
    ed80:	e1832082 	orr	r2, r3, r2, lsl #1
    ed84:	e1833001 	orr	r3, r3, r1
    ed88:	e5c02001 	strb	r2, [r0, #1]
    ed8c:	e5c03000 	strb	r3, [r0]
    ed90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ed94:	e1d030ba 	ldrh	r3, [r0, #10]
    ed98:	e1d010b4 	ldrh	r1, [r0, #4]
    ed9c:	e5d02000 	ldrb	r2, [r0]
    eda0:	e083c001 	add	ip, r3, r1
    eda4:	e0233001 	eor	r3, r3, r1
    eda8:	e6ff107c 	uxth	r1, ip
    edac:	e0233001 	eor	r3, r3, r1
    edb0:	e1a03443 	asr	r3, r3, #8
    edb4:	e3c22013 	bic	r2, r2, #19
    edb8:	e2033010 	and	r3, r3, #16
    edbc:	e182282c 	orr	r2, r2, ip, lsr #16
    edc0:	e1823003 	orr	r3, r2, r3
    edc4:	e1c010ba 	strh	r1, [r0, #10]
    edc8:	e5c03000 	strb	r3, [r0]
    edcc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    edd0:	e3560000 	cmp	r6, #0
    edd4:	11a03882 	lslne	r3, r2, #17
    edd8:	159f1a04 	ldrne	r1, [pc, #2564]	; f7e4 <CodesFD+0x4644>
    eddc:	11a038a3 	lsrne	r3, r3, #17
    ede0:	07d53002 	ldrbeq	r3, [r5, r2]
    ede4:	17d13003 	ldrbne	r3, [r1, r3]
    ede8:	e6af3073 	sxtb	r3, r3
    edec:	e2833001 	add	r3, r3, #1
    edf0:	e0822003 	add	r2, r2, r3
    edf4:	e1c020bc 	strh	r2, [r0, #12]
    edf8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    edfc:	e1d030b4 	ldrh	r3, [r0, #4]
    ee00:	e3560000 	cmp	r6, #0
    ee04:	11a03883 	lslne	r3, r3, #17
    ee08:	159f29d4 	ldrne	r2, [pc, #2516]	; f7e4 <CodesFD+0x4644>
    ee0c:	11a038a3 	lsrne	r3, r3, #17
    ee10:	17d23003 	ldrbne	r3, [r2, r3]
    ee14:	07d53003 	ldrbeq	r3, [r5, r3]
    ee18:	e5c03001 	strb	r3, [r0, #1]
    ee1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ee20:	e1d030b4 	ldrh	r3, [r0, #4]
    ee24:	e2833001 	add	r3, r3, #1
    ee28:	e1c030b4 	strh	r3, [r0, #4]
    ee2c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ee30:	e5d02001 	ldrb	r2, [r0, #1]
    ee34:	e1d030b4 	ldrh	r3, [r0, #4]
    ee38:	e7c52003 	strb	r2, [r5, r3]
    ee3c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ee40:	e28e3002 	add	r3, lr, #2
    ee44:	e6ff3073 	uxth	r3, r3
    ee48:	e28e1003 	add	r1, lr, #3
    ee4c:	e3560000 	cmp	r6, #0
    ee50:	e1c030bc 	strh	r3, [r0, #12]
    ee54:	e6ff1071 	uxth	r1, r1
    ee58:	0a00024d 	beq	f794 <CodesFD+0x45f4>
    ee5c:	e59fe984 	ldr	lr, [pc, #2436]	; f7e8 <CodesFD+0x4648>
    ee60:	e59fc97c 	ldr	ip, [pc, #2428]	; f7e4 <CodesFD+0x4644>
    ee64:	e002200e 	and	r2, r2, lr
    ee68:	e7dc2002 	ldrb	r2, [ip, r2]
    ee6c:	e003300e 	and	r3, r3, lr
    ee70:	e5c02004 	strb	r2, [r0, #4]
    ee74:	e1c010bc 	strh	r1, [r0, #12]
    ee78:	e7dc3003 	ldrb	r3, [ip, r3]
    ee7c:	e5c03005 	strb	r3, [r0, #5]
    ee80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ee84:	e5d03003 	ldrb	r3, [r0, #3]
    ee88:	e2433001 	sub	r3, r3, #1
    ee8c:	e6ef3073 	uxtb	r3, r3
    ee90:	e3530000 	cmp	r3, #0
    ee94:	e5c03003 	strb	r3, [r0, #3]
    ee98:	0a000418 	beq	ff00 <CodesFD+0x4d60>
    ee9c:	e3560000 	cmp	r6, #0
    eea0:	e2411005 	sub	r1, r1, #5
    eea4:	11a03882 	lslne	r3, r2, #17
    eea8:	e5801020 	str	r1, [r0, #32]
    eeac:	159f1930 	ldrne	r1, [pc, #2352]	; f7e4 <CodesFD+0x4644>
    eeb0:	11a038a3 	lsrne	r3, r3, #17
    eeb4:	07d53002 	ldrbeq	r3, [r5, r2]
    eeb8:	17d13003 	ldrbne	r3, [r1, r3]
    eebc:	e6af3073 	sxtb	r3, r3
    eec0:	e2833001 	add	r3, r3, #1
    eec4:	e0822003 	add	r2, r2, r3
    eec8:	e1c020bc 	strh	r2, [r0, #12]
    eecc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    eed0:	e5d02005 	ldrb	r2, [r0, #5]
    eed4:	e5d03000 	ldrb	r3, [r0]
    eed8:	e2422001 	sub	r2, r2, #1
    eedc:	e6ef2072 	uxtb	r2, r2
    eee0:	e0844002 	add	r4, r4, r2
    eee4:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    eee8:	e2033001 	and	r3, r3, #1
    eeec:	e352007f 	cmp	r2, #127	; 0x7f
    eef0:	e5c02005 	strb	r2, [r0, #5]
    eef4:	e1833001 	orr	r3, r3, r1
    eef8:	0a000476 	beq	100d8 <CodesFD+0x4f38>
    eefc:	e202200f 	and	r2, r2, #15
    ef00:	e352000f 	cmp	r2, #15
    ef04:	13a02000 	movne	r2, #0
    ef08:	03a02010 	moveq	r2, #16
    ef0c:	e1823003 	orr	r3, r2, r3
    ef10:	e3833002 	orr	r3, r3, #2
    ef14:	e5c03000 	strb	r3, [r0]
    ef18:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ef1c:	e1d030ba 	ldrh	r3, [r0, #10]
    ef20:	e1d010b2 	ldrh	r1, [r0, #2]
    ef24:	e5d02000 	ldrb	r2, [r0]
    ef28:	e083c001 	add	ip, r3, r1
    ef2c:	e0233001 	eor	r3, r3, r1
    ef30:	e6ff107c 	uxth	r1, ip
    ef34:	e0233001 	eor	r3, r3, r1
    ef38:	e1a03443 	asr	r3, r3, #8
    ef3c:	e3c22013 	bic	r2, r2, #19
    ef40:	e2033010 	and	r3, r3, #16
    ef44:	e182282c 	orr	r2, r2, ip, lsr #16
    ef48:	e1823003 	orr	r3, r2, r3
    ef4c:	e1c010ba 	strh	r1, [r0, #10]
    ef50:	e5c03000 	strb	r3, [r0]
    ef54:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ef58:	e5d02005 	ldrb	r2, [r0, #5]
    ef5c:	e5d03000 	ldrb	r3, [r0]
    ef60:	e2822001 	add	r2, r2, #1
    ef64:	e6ef2072 	uxtb	r2, r2
    ef68:	e0844002 	add	r4, r4, r2
    ef6c:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    ef70:	e2033001 	and	r3, r3, #1
    ef74:	e1833001 	orr	r3, r3, r1
    ef78:	e3520080 	cmp	r2, #128	; 0x80
    ef7c:	e5c02005 	strb	r2, [r0, #5]
    ef80:	e6af3073 	sxtb	r3, r3
    ef84:	0a00044d 	beq	100c0 <CodesFD+0x4f20>
    ef88:	e312000f 	tst	r2, #15
    ef8c:	03a02010 	moveq	r2, #16
    ef90:	13a02000 	movne	r2, #0
    ef94:	e1823003 	orr	r3, r2, r3
    ef98:	e5c03000 	strb	r3, [r0]
    ef9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    efa0:	e1d030b2 	ldrh	r3, [r0, #2]
    efa4:	e2833001 	add	r3, r3, #1
    efa8:	e1c030b2 	strh	r3, [r0, #2]
    efac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    efb0:	e1d030b2 	ldrh	r3, [r0, #2]
    efb4:	e3560000 	cmp	r6, #0
    efb8:	11a03883 	lslne	r3, r3, #17
    efbc:	159f2820 	ldrne	r2, [pc, #2080]	; f7e4 <CodesFD+0x4644>
    efc0:	11a038a3 	lsrne	r3, r3, #17
    efc4:	17d23003 	ldrbne	r3, [r2, r3]
    efc8:	07d53003 	ldrbeq	r3, [r5, r3]
    efcc:	e5c03001 	strb	r3, [r0, #1]
    efd0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    efd4:	e1d020b0 	ldrh	r2, [r0]
    efd8:	e1d031b0 	ldrh	r3, [r0, #16]
    efdc:	e1c021b0 	strh	r2, [r0, #16]
    efe0:	e1c030b0 	strh	r3, [r0]
    efe4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    efe8:	e5d02003 	ldrb	r2, [r0, #3]
    efec:	e5d03000 	ldrb	r3, [r0]
    eff0:	e2422001 	sub	r2, r2, #1
    eff4:	e6ef2072 	uxtb	r2, r2
    eff8:	e0844002 	add	r4, r4, r2
    effc:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    f000:	e2033001 	and	r3, r3, #1
    f004:	e352007f 	cmp	r2, #127	; 0x7f
    f008:	e5c02003 	strb	r2, [r0, #3]
    f00c:	e1833001 	orr	r3, r3, r1
    f010:	0a000433 	beq	100e4 <CodesFD+0x4f44>
    f014:	e202200f 	and	r2, r2, #15
    f018:	e352000f 	cmp	r2, #15
    f01c:	13a02000 	movne	r2, #0
    f020:	03a02010 	moveq	r2, #16
    f024:	e1823003 	orr	r3, r2, r3
    f028:	e3833002 	orr	r3, r3, #2
    f02c:	e5c03000 	strb	r3, [r0]
    f030:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f034:	e5d02003 	ldrb	r2, [r0, #3]
    f038:	e5d03000 	ldrb	r3, [r0]
    f03c:	e2822001 	add	r2, r2, #1
    f040:	e6ef2072 	uxtb	r2, r2
    f044:	e0844002 	add	r4, r4, r2
    f048:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
    f04c:	e2033001 	and	r3, r3, #1
    f050:	e1833001 	orr	r3, r3, r1
    f054:	e3520080 	cmp	r2, #128	; 0x80
    f058:	e5c02003 	strb	r2, [r0, #3]
    f05c:	e6af3073 	sxtb	r3, r3
    f060:	0a000419 	beq	100cc <CodesFD+0x4f2c>
    f064:	e312000f 	tst	r2, #15
    f068:	03a02010 	moveq	r2, #16
    f06c:	13a02000 	movne	r2, #0
    f070:	e1823003 	orr	r3, r2, r3
    f074:	e5c03000 	strb	r3, [r0]
    f078:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f07c:	e28e3002 	add	r3, lr, #2
    f080:	e6ff3073 	uxth	r3, r3
    f084:	e28e1003 	add	r1, lr, #3
    f088:	e3560000 	cmp	r6, #0
    f08c:	e1c030bc 	strh	r3, [r0, #12]
    f090:	e6ff1071 	uxth	r1, r1
    f094:	0a000194 	beq	f6ec <CodesFD+0x454c>
    f098:	e59fe748 	ldr	lr, [pc, #1864]	; f7e8 <CodesFD+0x4648>
    f09c:	e59fc740 	ldr	ip, [pc, #1856]	; f7e4 <CodesFD+0x4644>
    f0a0:	e002200e 	and	r2, r2, lr
    f0a4:	e7dc2002 	ldrb	r2, [ip, r2]
    f0a8:	e003300e 	and	r3, r3, lr
    f0ac:	e5c02002 	strb	r2, [r0, #2]
    f0b0:	e1c010bc 	strh	r1, [r0, #12]
    f0b4:	e7dc3003 	ldrb	r3, [ip, r3]
    f0b8:	e5c03003 	strb	r3, [r0, #3]
    f0bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f0c0:	e3560000 	cmp	r6, #0
    f0c4:	11a02882 	lslne	r2, r2, #17
    f0c8:	159f3714 	ldrne	r3, [pc, #1812]	; f7e4 <CodesFD+0x4644>
    f0cc:	e28ee002 	add	lr, lr, #2
    f0d0:	e1c0e0bc 	strh	lr, [r0, #12]
    f0d4:	11a028a2 	lsrne	r2, r2, #17
    f0d8:	17d33002 	ldrbne	r3, [r3, r2]
    f0dc:	07d53002 	ldrbeq	r3, [r5, r2]
    f0e0:	e5c03003 	strb	r3, [r0, #3]
    f0e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f0e8:	e5d02001 	ldrb	r2, [r0, #1]
    f0ec:	e1d030b2 	ldrh	r3, [r0, #2]
    f0f0:	e7c52003 	strb	r2, [r5, r3]
    f0f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f0f8:	e3a01038 	mov	r1, #56	; 0x38
    f0fc:	e1d030be 	ldrh	r3, [r0, #14]
    f100:	e1a02422 	lsr	r2, r2, #8
    f104:	e2433001 	sub	r3, r3, #1
    f108:	e6ff3073 	uxth	r3, r3
    f10c:	e1c030be 	strh	r3, [r0, #14]
    f110:	e7c52003 	strb	r2, [r5, r3]
    f114:	e1d030be 	ldrh	r3, [r0, #14]
    f118:	e5d0200c 	ldrb	r2, [r0, #12]
    f11c:	e2433001 	sub	r3, r3, #1
    f120:	e6ff3073 	uxth	r3, r3
    f124:	e1c030be 	strh	r3, [r0, #14]
    f128:	e7c52003 	strb	r2, [r5, r3]
    f12c:	e1c010bc 	strh	r1, [r0, #12]
    f130:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f134:	e3560000 	cmp	r6, #0
    f138:	0a000350 	beq	fe80 <CodesFD+0x4ce0>
    f13c:	e1a03882 	lsl	r3, r2, #17
    f140:	e59f169c 	ldr	r1, [pc, #1692]	; f7e4 <CodesFD+0x4644>
    f144:	e1a038a3 	lsr	r3, r3, #17
    f148:	e7d13003 	ldrb	r3, [r1, r3]
    f14c:	e3833040 	orr	r3, r3, #64	; 0x40
    f150:	e7c53002 	strb	r3, [r5, r2]
    f154:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f158:	e3560000 	cmp	r6, #0
    f15c:	0a000349 	beq	fe88 <CodesFD+0x4ce8>
    f160:	e1a03882 	lsl	r3, r2, #17
    f164:	e59f1678 	ldr	r1, [pc, #1656]	; f7e4 <CodesFD+0x4644>
    f168:	e1a038a3 	lsr	r3, r3, #17
    f16c:	e7d13003 	ldrb	r3, [r1, r3]
    f170:	e3833020 	orr	r3, r3, #32
    f174:	e7c53002 	strb	r3, [r5, r2]
    f178:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f17c:	e3560000 	cmp	r6, #0
    f180:	0a000342 	beq	fe90 <CodesFD+0x4cf0>
    f184:	e1a03882 	lsl	r3, r2, #17
    f188:	e59f1654 	ldr	r1, [pc, #1620]	; f7e4 <CodesFD+0x4644>
    f18c:	e1a038a3 	lsr	r3, r3, #17
    f190:	e7d13003 	ldrb	r3, [r1, r3]
    f194:	e3833010 	orr	r3, r3, #16
    f198:	e7c53002 	strb	r3, [r5, r2]
    f19c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f1a0:	e3560000 	cmp	r6, #0
    f1a4:	0a00031d 	beq	fe20 <CodesFD+0x4c80>
    f1a8:	e1a03882 	lsl	r3, r2, #17
    f1ac:	e59f1630 	ldr	r1, [pc, #1584]	; f7e4 <CodesFD+0x4644>
    f1b0:	e1a038a3 	lsr	r3, r3, #17
    f1b4:	e7d13003 	ldrb	r3, [r1, r3]
    f1b8:	e3833008 	orr	r3, r3, #8
    f1bc:	e7c53002 	strb	r3, [r5, r2]
    f1c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f1c4:	e3560000 	cmp	r6, #0
    f1c8:	0a000332 	beq	fe98 <CodesFD+0x4cf8>
    f1cc:	e1a03882 	lsl	r3, r2, #17
    f1d0:	e59f160c 	ldr	r1, [pc, #1548]	; f7e4 <CodesFD+0x4644>
    f1d4:	e1a038a3 	lsr	r3, r3, #17
    f1d8:	e7d13003 	ldrb	r3, [r1, r3]
    f1dc:	e3833004 	orr	r3, r3, #4
    f1e0:	e7c53002 	strb	r3, [r5, r2]
    f1e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f1e8:	e3560000 	cmp	r6, #0
    f1ec:	0a0002e5 	beq	fd88 <CodesFD+0x4be8>
    f1f0:	e1a03882 	lsl	r3, r2, #17
    f1f4:	e59f15e8 	ldr	r1, [pc, #1512]	; f7e4 <CodesFD+0x4644>
    f1f8:	e1a038a3 	lsr	r3, r3, #17
    f1fc:	e7d13003 	ldrb	r3, [r1, r3]
    f200:	e1e03c83 	mvn	r3, r3, lsl #25
    f204:	e1e03ca3 	mvn	r3, r3, lsr #25
    f208:	e7c53002 	strb	r3, [r5, r2]
    f20c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f210:	e3560000 	cmp	r6, #0
    f214:	0a0002f7 	beq	fdf8 <CodesFD+0x4c58>
    f218:	e1a02882 	lsl	r2, r2, #17
    f21c:	e1a028a2 	lsr	r2, r2, #17
    f220:	e7de3002 	ldrb	r3, [lr, r2]
    f224:	e2032040 	and	r2, r3, #64	; 0x40
    f228:	e5d03000 	ldrb	r3, [r0]
    f22c:	e0844002 	add	r4, r4, r2
    f230:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
    f234:	e2033001 	and	r3, r3, #1
    f238:	e3833010 	orr	r3, r3, #16
    f23c:	e1833002 	orr	r3, r3, r2
    f240:	e5c03000 	strb	r3, [r0]
    f244:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f248:	e3560000 	cmp	r6, #0
    f24c:	0a0002d5 	beq	fda8 <CodesFD+0x4c08>
    f250:	e1a03882 	lsl	r3, r2, #17
    f254:	e59f1588 	ldr	r1, [pc, #1416]	; f7e4 <CodesFD+0x4644>
    f258:	e1a038a3 	lsr	r3, r3, #17
    f25c:	e7d13003 	ldrb	r3, [r1, r3]
    f260:	e3c33040 	bic	r3, r3, #64	; 0x40
    f264:	e7c53002 	strb	r3, [r5, r2]
    f268:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f26c:	e3560000 	cmp	r6, #0
    f270:	0a0002ec 	beq	fe28 <CodesFD+0x4c88>
    f274:	e1a03882 	lsl	r3, r2, #17
    f278:	e59f1564 	ldr	r1, [pc, #1380]	; f7e4 <CodesFD+0x4644>
    f27c:	e1a038a3 	lsr	r3, r3, #17
    f280:	e7d1c003 	ldrb	ip, [r1, r3]
    f284:	e1a0108c 	lsl	r1, ip, #1
    f288:	e3811001 	orr	r1, r1, #1
    f28c:	e6ef1071 	uxtb	r1, r1
    f290:	e0843001 	add	r3, r4, r1
    f294:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    f298:	e18333ac 	orr	r3, r3, ip, lsr #7
    f29c:	e5c03000 	strb	r3, [r0]
    f2a0:	e7c51002 	strb	r1, [r5, r2]
    f2a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f2a8:	e3560000 	cmp	r6, #0
    f2ac:	0a0002b7 	beq	fd90 <CodesFD+0x4bf0>
    f2b0:	e1a03882 	lsl	r3, r2, #17
    f2b4:	e59f1528 	ldr	r1, [pc, #1320]	; f7e4 <CodesFD+0x4644>
    f2b8:	e1a038a3 	lsr	r3, r3, #17
    f2bc:	e7d13003 	ldrb	r3, [r1, r3]
    f2c0:	e3833001 	orr	r3, r3, #1
    f2c4:	e7c53002 	strb	r3, [r5, r2]
    f2c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f2cc:	e3560000 	cmp	r6, #0
    f2d0:	0a0002ca 	beq	fe00 <CodesFD+0x4c60>
    f2d4:	e1a02882 	lsl	r2, r2, #17
    f2d8:	e1a028a2 	lsr	r2, r2, #17
    f2dc:	e7de3002 	ldrb	r3, [lr, r2]
    f2e0:	e2032004 	and	r2, r3, #4
    f2e4:	e5d03000 	ldrb	r3, [r0]
    f2e8:	e0844002 	add	r4, r4, r2
    f2ec:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
    f2f0:	e2033001 	and	r3, r3, #1
    f2f4:	e3833010 	orr	r3, r3, #16
    f2f8:	e1833002 	orr	r3, r3, r2
    f2fc:	e5c03000 	strb	r3, [r0]
    f300:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f304:	e3560000 	cmp	r6, #0
    f308:	0a0002ac 	beq	fdc0 <CodesFD+0x4c20>
    f30c:	e1a03882 	lsl	r3, r2, #17
    f310:	e59f14cc 	ldr	r1, [pc, #1228]	; f7e4 <CodesFD+0x4644>
    f314:	e1a038a3 	lsr	r3, r3, #17
    f318:	e7d13003 	ldrb	r3, [r1, r3]
    f31c:	e3c33004 	bic	r3, r3, #4
    f320:	e7c53002 	strb	r3, [r5, r2]
    f324:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f328:	e3560000 	cmp	r6, #0
    f32c:	0a0002c5 	beq	fe48 <CodesFD+0x4ca8>
    f330:	e1a03882 	lsl	r3, r2, #17
    f334:	e59f14a8 	ldr	r1, [pc, #1192]	; f7e4 <CodesFD+0x4644>
    f338:	e1a038a3 	lsr	r3, r3, #17
    f33c:	e7d13003 	ldrb	r3, [r1, r3]
    f340:	e5d01000 	ldrb	r1, [r0]
    f344:	e3130080 	tst	r3, #128	; 0x80
    f348:	e1a03083 	lsl	r3, r3, #1
    f34c:	e2011001 	and	r1, r1, #1
    f350:	e6af3073 	sxtb	r3, r3
    f354:	e1833001 	orr	r3, r3, r1
    f358:	e6ef1073 	uxtb	r1, r3
    f35c:	e0843001 	add	r3, r4, r1
    f360:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    f364:	13833001 	orrne	r3, r3, #1
    f368:	e5c03000 	strb	r3, [r0]
    f36c:	e7c51002 	strb	r1, [r5, r2]
    f370:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f374:	e3560000 	cmp	r6, #0
    f378:	0a0002c8 	beq	fea0 <CodesFD+0x4d00>
    f37c:	e1a03882 	lsl	r3, r2, #17
    f380:	e59f145c 	ldr	r1, [pc, #1116]	; f7e4 <CodesFD+0x4644>
    f384:	e1a038a3 	lsr	r3, r3, #17
    f388:	e7d13003 	ldrb	r3, [r1, r3]
    f38c:	e3833002 	orr	r3, r3, #2
    f390:	e7c53002 	strb	r3, [r5, r2]
    f394:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f398:	e3560000 	cmp	r6, #0
    f39c:	0a000291 	beq	fde8 <CodesFD+0x4c48>
    f3a0:	e1a02882 	lsl	r2, r2, #17
    f3a4:	e1a028a2 	lsr	r2, r2, #17
    f3a8:	e7de3002 	ldrb	r3, [lr, r2]
    f3ac:	e2032010 	and	r2, r3, #16
    f3b0:	e5d03000 	ldrb	r3, [r0]
    f3b4:	e0844002 	add	r4, r4, r2
    f3b8:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
    f3bc:	e2033001 	and	r3, r3, #1
    f3c0:	e3833010 	orr	r3, r3, #16
    f3c4:	e1833002 	orr	r3, r3, r2
    f3c8:	e5c03000 	strb	r3, [r0]
    f3cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f3d0:	e3560000 	cmp	r6, #0
    f3d4:	0a000275 	beq	fdb0 <CodesFD+0x4c10>
    f3d8:	e1a03882 	lsl	r3, r2, #17
    f3dc:	e59f1400 	ldr	r1, [pc, #1024]	; f7e4 <CodesFD+0x4644>
    f3e0:	e1a038a3 	lsr	r3, r3, #17
    f3e4:	e7d13003 	ldrb	r3, [r1, r3]
    f3e8:	e3c33010 	bic	r3, r3, #16
    f3ec:	e7c53002 	strb	r3, [r5, r2]
    f3f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f3f4:	e3560000 	cmp	r6, #0
    f3f8:	0a00028e 	beq	fe38 <CodesFD+0x4c98>
    f3fc:	e1a03882 	lsl	r3, r2, #17
    f400:	e59f13dc 	ldr	r1, [pc, #988]	; f7e4 <CodesFD+0x4644>
    f404:	e1a038a3 	lsr	r3, r3, #17
    f408:	e7d1c003 	ldrb	ip, [r1, r3]
    f40c:	e1a0108c 	lsl	r1, ip, #1
    f410:	e6ef1071 	uxtb	r1, r1
    f414:	e0843001 	add	r3, r4, r1
    f418:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    f41c:	e18333ac 	orr	r3, r3, ip, lsr #7
    f420:	e5c03000 	strb	r3, [r0]
    f424:	e7c51002 	strb	r1, [r5, r2]
    f428:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f42c:	e3560000 	cmp	r6, #0
    f430:	0a000258 	beq	fd98 <CodesFD+0x4bf8>
    f434:	e1a03882 	lsl	r3, r2, #17
    f438:	e59f13a4 	ldr	r1, [pc, #932]	; f7e4 <CodesFD+0x4644>
    f43c:	e1a038a3 	lsr	r3, r3, #17
    f440:	e7d13003 	ldrb	r3, [r1, r3]
    f444:	e203307f 	and	r3, r3, #127	; 0x7f
    f448:	e7c53002 	strb	r3, [r5, r2]
    f44c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f450:	e3560000 	cmp	r6, #0
    f454:	0a00026d 	beq	fe10 <CodesFD+0x4c70>
    f458:	e1a02882 	lsl	r2, r2, #17
    f45c:	e1a028a2 	lsr	r2, r2, #17
    f460:	e7de3002 	ldrb	r3, [lr, r2]
    f464:	e2032001 	and	r2, r3, #1
    f468:	e5d03000 	ldrb	r3, [r0]
    f46c:	e0844002 	add	r4, r4, r2
    f470:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
    f474:	e2033001 	and	r3, r3, #1
    f478:	e3833010 	orr	r3, r3, #16
    f47c:	e1833002 	orr	r3, r3, r2
    f480:	e5c03000 	strb	r3, [r0]
    f484:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f488:	e3560000 	cmp	r6, #0
    f48c:	0a00024f 	beq	fdd0 <CodesFD+0x4c30>
    f490:	e1a03882 	lsl	r3, r2, #17
    f494:	e59f1348 	ldr	r1, [pc, #840]	; f7e4 <CodesFD+0x4644>
    f498:	e1a038a3 	lsr	r3, r3, #17
    f49c:	e7d13003 	ldrb	r3, [r1, r3]
    f4a0:	e3c33001 	bic	r3, r3, #1
    f4a4:	e7c53002 	strb	r3, [r5, r2]
    f4a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f4ac:	e3560000 	cmp	r6, #0
    f4b0:	0a000266 	beq	fe50 <CodesFD+0x4cb0>
    f4b4:	e1a03882 	lsl	r3, r2, #17
    f4b8:	e59f1324 	ldr	r1, [pc, #804]	; f7e4 <CodesFD+0x4644>
    f4bc:	e1a038a3 	lsr	r3, r3, #17
    f4c0:	e7d13003 	ldrb	r3, [r1, r3]
    f4c4:	e203c001 	and	ip, r3, #1
    f4c8:	e1a0138c 	lsl	r1, ip, #7
    f4cc:	e18110a3 	orr	r1, r1, r3, lsr #1
    f4d0:	e0843001 	add	r3, r4, r1
    f4d4:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    f4d8:	e18cc003 	orr	ip, ip, r3
    f4dc:	e5c0c000 	strb	ip, [r0]
    f4e0:	e7c51002 	strb	r1, [r5, r2]
    f4e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f4e8:	e3560000 	cmp	r6, #0
    f4ec:	0a00022b 	beq	fda0 <CodesFD+0x4c00>
    f4f0:	e1a03882 	lsl	r3, r2, #17
    f4f4:	e59f12e8 	ldr	r1, [pc, #744]	; f7e4 <CodesFD+0x4644>
    f4f8:	e1a038a3 	lsr	r3, r3, #17
    f4fc:	e7d13003 	ldrb	r3, [r1, r3]
    f500:	e3c33020 	bic	r3, r3, #32
    f504:	e7c53002 	strb	r3, [r5, r2]
    f508:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f50c:	e3560000 	cmp	r6, #0
    f510:	0a000232 	beq	fde0 <CodesFD+0x4c40>
    f514:	e1a02882 	lsl	r2, r2, #17
    f518:	e1a028a2 	lsr	r2, r2, #17
    f51c:	e7de3002 	ldrb	r3, [lr, r2]
    f520:	e2032020 	and	r2, r3, #32
    f524:	e5d03000 	ldrb	r3, [r0]
    f528:	e0844002 	add	r4, r4, r2
    f52c:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
    f530:	e2033001 	and	r3, r3, #1
    f534:	e3833010 	orr	r3, r3, #16
    f538:	e1833002 	orr	r3, r3, r2
    f53c:	e5c03000 	strb	r3, [r0]
    f540:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f544:	e3560000 	cmp	r6, #0
    f548:	0a00021e 	beq	fdc8 <CodesFD+0x4c28>
    f54c:	e1a03882 	lsl	r3, r2, #17
    f550:	e59f128c 	ldr	r1, [pc, #652]	; f7e4 <CodesFD+0x4644>
    f554:	e1a038a3 	lsr	r3, r3, #17
    f558:	e7d13003 	ldrb	r3, [r1, r3]
    f55c:	e3c33002 	bic	r3, r3, #2
    f560:	e7c53002 	strb	r3, [r5, r2]
    f564:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f568:	e3560000 	cmp	r6, #0
    f56c:	0a00022f 	beq	fe30 <CodesFD+0x4c90>
    f570:	e1a03882 	lsl	r3, r2, #17
    f574:	e59f1268 	ldr	r1, [pc, #616]	; f7e4 <CodesFD+0x4644>
    f578:	e1a038a3 	lsr	r3, r3, #17
    f57c:	e7d11003 	ldrb	r1, [r1, r3]
    f580:	e3c1c07f 	bic	ip, r1, #127	; 0x7f
    f584:	e18cc0a1 	orr	ip, ip, r1, lsr #1
    f588:	e084300c 	add	r3, r4, ip
    f58c:	e5d3e100 	ldrb	lr, [r3, #256]	; 0x100
    f590:	e2013001 	and	r3, r1, #1
    f594:	e183300e 	orr	r3, r3, lr
    f598:	e5c03000 	strb	r3, [r0]
    f59c:	e7c5c002 	strb	ip, [r5, r2]
    f5a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f5a4:	e3560000 	cmp	r6, #0
    f5a8:	0a000202 	beq	fdb8 <CodesFD+0x4c18>
    f5ac:	e1a03882 	lsl	r3, r2, #17
    f5b0:	e59f122c 	ldr	r1, [pc, #556]	; f7e4 <CodesFD+0x4644>
    f5b4:	e1a038a3 	lsr	r3, r3, #17
    f5b8:	e7d13003 	ldrb	r3, [r1, r3]
    f5bc:	e3c33008 	bic	r3, r3, #8
    f5c0:	e7c53002 	strb	r3, [r5, r2]
    f5c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f5c8:	e3560000 	cmp	r6, #0
    f5cc:	0a00020d 	beq	fe08 <CodesFD+0x4c68>
    f5d0:	e1a02882 	lsl	r2, r2, #17
    f5d4:	e1a028a2 	lsr	r2, r2, #17
    f5d8:	e7de3002 	ldrb	r3, [lr, r2]
    f5dc:	e2032002 	and	r2, r3, #2
    f5e0:	e5d03000 	ldrb	r3, [r0]
    f5e4:	e0844002 	add	r4, r4, r2
    f5e8:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
    f5ec:	e2033001 	and	r3, r3, #1
    f5f0:	e3833010 	orr	r3, r3, #16
    f5f4:	e1833002 	orr	r3, r3, r2
    f5f8:	e5c03000 	strb	r3, [r0]
    f5fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f600:	e3560000 	cmp	r6, #0
    f604:	0a0001f3 	beq	fdd8 <CodesFD+0x4c38>
    f608:	e1a02882 	lsl	r2, r2, #17
    f60c:	e1a028a2 	lsr	r2, r2, #17
    f610:	e7de3002 	ldrb	r3, [lr, r2]
    f614:	e5d02000 	ldrb	r2, [r0]
    f618:	e2033080 	and	r3, r3, #128	; 0x80
    f61c:	e0843003 	add	r3, r4, r3
    f620:	e5d31100 	ldrb	r1, [r3, #256]	; 0x100
    f624:	e2023001 	and	r3, r2, #1
    f628:	e3833010 	orr	r3, r3, #16
    f62c:	e1833001 	orr	r3, r3, r1
    f630:	e5c03000 	strb	r3, [r0]
    f634:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f638:	e3560000 	cmp	r6, #0
    f63c:	0a0001ff 	beq	fe40 <CodesFD+0x4ca0>
    f640:	e1a03882 	lsl	r3, r2, #17
    f644:	e59f1198 	ldr	r1, [pc, #408]	; f7e4 <CodesFD+0x4644>
    f648:	e1a038a3 	lsr	r3, r3, #17
    f64c:	e7d13003 	ldrb	r3, [r1, r3]
    f650:	e5d01000 	ldrb	r1, [r0]
    f654:	e3130001 	tst	r3, #1
    f658:	e1a030a3 	lsr	r3, r3, #1
    f65c:	e1833381 	orr	r3, r3, r1, lsl #7
    f660:	e6ef1073 	uxtb	r1, r3
    f664:	e0843001 	add	r3, r4, r1
    f668:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    f66c:	13833001 	orrne	r3, r3, #1
    f670:	e5c03000 	strb	r3, [r0]
    f674:	e7c51002 	strb	r1, [r5, r2]
    f678:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f67c:	e3560000 	cmp	r6, #0
    f680:	0a0001da 	beq	fdf0 <CodesFD+0x4c50>
    f684:	e1a02882 	lsl	r2, r2, #17
    f688:	e1a028a2 	lsr	r2, r2, #17
    f68c:	e7de3002 	ldrb	r3, [lr, r2]
    f690:	e2032008 	and	r2, r3, #8
    f694:	e5d03000 	ldrb	r3, [r0]
    f698:	e0844002 	add	r4, r4, r2
    f69c:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
    f6a0:	e2033001 	and	r3, r3, #1
    f6a4:	e3833010 	orr	r3, r3, #16
    f6a8:	e1833002 	orr	r3, r3, r2
    f6ac:	e5c03000 	strb	r3, [r0]
    f6b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f6b4:	e3560000 	cmp	r6, #0
    f6b8:	0a0001d6 	beq	fe18 <CodesFD+0x4c78>
    f6bc:	e1a03882 	lsl	r3, r2, #17
    f6c0:	e59f111c 	ldr	r1, [pc, #284]	; f7e4 <CodesFD+0x4644>
    f6c4:	e1a038a3 	lsr	r3, r3, #17
    f6c8:	e7d11003 	ldrb	r1, [r1, r3]
    f6cc:	e1a0c0a1 	lsr	ip, r1, #1
    f6d0:	e084300c 	add	r3, r4, ip
    f6d4:	e5d3e100 	ldrb	lr, [r3, #256]	; 0x100
    f6d8:	e2013001 	and	r3, r1, #1
    f6dc:	e183300e 	orr	r3, r3, lr
    f6e0:	e5c03000 	strb	r3, [r0]
    f6e4:	e7c5c002 	strb	ip, [r5, r2]
    f6e8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    f6ec:	e7d52002 	ldrb	r2, [r5, r2]
    f6f0:	e1c010bc 	strh	r1, [r0, #12]
    f6f4:	e5c02002 	strb	r2, [r0, #2]
    f6f8:	e7d53003 	ldrb	r3, [r5, r3]
    f6fc:	eafffe6d 	b	f0b8 <CodesFD+0x3f18>
    f700:	e7d52002 	ldrb	r2, [r5, r2]
    f704:	e1c010bc 	strh	r1, [r0, #12]
    f708:	e5c0200a 	strb	r2, [r0, #10]
    f70c:	e7d53003 	ldrb	r3, [r5, r3]
    f710:	eafffc90 	b	e958 <CodesFD+0x37b8>
    f714:	e7d52002 	ldrb	r2, [r5, r2]
    f718:	e1c010bc 	strh	r1, [r0, #12]
    f71c:	e7d53003 	ldrb	r3, [r5, r3]
    f720:	e1823403 	orr	r3, r2, r3, lsl #8
    f724:	e7d52003 	ldrb	r2, [r5, r3]
    f728:	e2833001 	add	r3, r3, #1
    f72c:	e5c0200a 	strb	r2, [r0, #10]
    f730:	e6ff3073 	uxth	r3, r3
    f734:	e7d53003 	ldrb	r3, [r5, r3]
    f738:	eafffbbb 	b	e62c <CodesFD+0x348c>
    f73c:	e19520d2 	ldrsb	r2, [r5, r2]
    f740:	e1c0c0bc 	strh	ip, [r0, #12]
    f744:	e0833002 	add	r3, r3, r2
    f748:	e6ff3073 	uxth	r3, r3
    f74c:	e7d52001 	ldrb	r2, [r5, r1]
    f750:	eafffc18 	b	e7b8 <CodesFD+0x3618>
    f754:	e7d52002 	ldrb	r2, [r5, r2]
    f758:	e1c010bc 	strh	r1, [r0, #12]
    f75c:	e5c0200e 	strb	r2, [r0, #14]
    f760:	e7d53003 	ldrb	r3, [r5, r3]
    f764:	eafffce8 	b	eb0c <CodesFD+0x396c>
    f768:	e19530d2 	ldrsb	r3, [r5, r2]
    f76c:	e08c3003 	add	r3, ip, r3
    f770:	e6ff3073 	uxth	r3, r3
    f774:	e7d51003 	ldrb	r1, [r5, r3]
    f778:	eafffcff 	b	eb7c <CodesFD+0x39dc>
    f77c:	e7d52002 	ldrb	r2, [r5, r2]
    f780:	e1c010bc 	strh	r1, [r0, #12]
    f784:	e7d53003 	ldrb	r3, [r5, r3]
    f788:	e1823403 	orr	r3, r2, r3, lsl #8
    f78c:	e7d53003 	ldrb	r3, [r5, r3]
    f790:	eafffd64 	b	ed28 <CodesFD+0x3b88>
    f794:	e7d52002 	ldrb	r2, [r5, r2]
    f798:	e1c010bc 	strh	r1, [r0, #12]
    f79c:	e5c02004 	strb	r2, [r0, #4]
    f7a0:	e7d53003 	ldrb	r3, [r5, r3]
    f7a4:	eafffdb4 	b	ee7c <CodesFD+0x3cdc>
    f7a8:	e19530d2 	ldrsb	r3, [r5, r2]
    f7ac:	e08c3003 	add	r3, ip, r3
    f7b0:	e6ff3073 	uxth	r3, r3
    f7b4:	e7d51003 	ldrb	r1, [r5, r3]
    f7b8:	eafffc0a 	b	e7e8 <CodesFD+0x3648>
    f7bc:	e19520d2 	ldrsb	r2, [r5, r2]
    f7c0:	e0833002 	add	r3, r3, r2
    f7c4:	e6ff3073 	uxth	r3, r3
    f7c8:	e7d53003 	ldrb	r3, [r5, r3]
    f7cc:	eafffa22 	b	e05c <CodesFD+0x2ebc>
    f7d0:	e19520d2 	ldrsb	r2, [r5, r2]
    f7d4:	e0833002 	add	r3, r3, r2
    f7d8:	e6ff3073 	uxth	r3, r3
    f7dc:	e7d53003 	ldrb	r3, [r5, r3]
    f7e0:	eafff321 	b	c46c <CodesFD+0x12cc>
    f7e4:	00050428 	.word	0x00050428
    f7e8:	00007fff 	.word	0x00007fff
    f7ec:	00050428 	.word	0x00050428
    f7f0:	e7d52002 	ldrb	r2, [r5, r2]
    f7f4:	e1c010be 	strh	r1, [r0, #14]
    f7f8:	e5c02000 	strb	r2, [r0]
    f7fc:	e7d53003 	ldrb	r3, [r5, r3]
    f800:	eaffefeb 	b	b7b4 <CodesFD+0x614>
    f804:	e19520d2 	ldrsb	r2, [r5, r2]
    f808:	e0833002 	add	r3, r3, r2
    f80c:	e6ff3073 	uxth	r3, r3
    f810:	e7d53003 	ldrb	r3, [r5, r3]
    f814:	eafff9d3 	b	df68 <CodesFD+0x2dc8>
    f818:	e19520d2 	ldrsb	r2, [r5, r2]
    f81c:	e0833002 	add	r3, r3, r2
    f820:	e6ff3073 	uxth	r3, r3
    f824:	e7d53003 	ldrb	r3, [r5, r3]
    f828:	eafffa42 	b	e138 <CodesFD+0x2f98>
    f82c:	e19520d2 	ldrsb	r2, [r5, r2]
    f830:	e0833002 	add	r3, r3, r2
    f834:	e6ff3073 	uxth	r3, r3
    f838:	e7d53003 	ldrb	r3, [r5, r3]
    f83c:	eafff9a2 	b	decc <CodesFD+0x2d2c>
    f840:	e19520d2 	ldrsb	r2, [r5, r2]
    f844:	e0833002 	add	r3, r3, r2
    f848:	e6ff3073 	uxth	r3, r3
    f84c:	e7d53003 	ldrb	r3, [r5, r3]
    f850:	eafff974 	b	de28 <CodesFD+0x2c88>
    f854:	e19520d2 	ldrsb	r2, [r5, r2]
    f858:	e0833002 	add	r3, r3, r2
    f85c:	e6ff3073 	uxth	r3, r3
    f860:	e7d53003 	ldrb	r3, [r5, r3]
    f864:	eafff949 	b	dd90 <CodesFD+0x2bf0>
    f868:	e7d52002 	ldrb	r2, [r5, r2]
    f86c:	e1c010be 	strh	r1, [r0, #14]
    f870:	e5c02002 	strb	r2, [r0, #2]
    f874:	e7d53003 	ldrb	r3, [r5, r3]
    f878:	eafff7fb 	b	d86c <CodesFD+0x26cc>
    f87c:	e19520d2 	ldrsb	r2, [r5, r2]
    f880:	e0833002 	add	r3, r3, r2
    f884:	e6ff3073 	uxth	r3, r3
    f888:	e7d52003 	ldrb	r2, [r5, r3]
    f88c:	eafff561 	b	ce18 <CodesFD+0x1c78>
    f890:	e19520d2 	ldrsb	r2, [r5, r2]
    f894:	e0833002 	add	r3, r3, r2
    f898:	e6ff3073 	uxth	r3, r3
    f89c:	e7d52003 	ldrb	r2, [r5, r3]
    f8a0:	eafff5a6 	b	cf40 <CodesFD+0x1da0>
    f8a4:	e19520d2 	ldrsb	r2, [r5, r2]
    f8a8:	e0833002 	add	r3, r3, r2
    f8ac:	e6ff3073 	uxth	r3, r3
    f8b0:	e7d53003 	ldrb	r3, [r5, r3]
    f8b4:	eafff655 	b	d210 <CodesFD+0x2070>
    f8b8:	e19520d2 	ldrsb	r2, [r5, r2]
    f8bc:	e0833002 	add	r3, r3, r2
    f8c0:	e6ff3073 	uxth	r3, r3
    f8c4:	e7d52003 	ldrb	r2, [r5, r3]
    f8c8:	eafff3eb 	b	c87c <CodesFD+0x16dc>
    f8cc:	e19520d2 	ldrsb	r2, [r5, r2]
    f8d0:	e0833002 	add	r3, r3, r2
    f8d4:	e6ff3073 	uxth	r3, r3
    f8d8:	e7d5e003 	ldrb	lr, [r5, r3]
    f8dc:	eafff489 	b	cb08 <CodesFD+0x1968>
    f8e0:	e7d52002 	ldrb	r2, [r5, r2]
    f8e4:	e1c010be 	strh	r1, [r0, #14]
    f8e8:	e5c02004 	strb	r2, [r0, #4]
    f8ec:	e7d53003 	ldrb	r3, [r5, r3]
    f8f0:	eafff861 	b	da7c <CodesFD+0x28dc>
    f8f4:	e7d52002 	ldrb	r2, [r5, r2]
    f8f8:	e1c010be 	strh	r1, [r0, #14]
    f8fc:	e5c0200a 	strb	r2, [r0, #10]
    f900:	e7d53003 	ldrb	r3, [r5, r3]
    f904:	eafff027 	b	b9a8 <CodesFD+0x808>
    f908:	e7d53002 	ldrb	r3, [r5, r2]
    f90c:	e1c010be 	strh	r1, [r0, #14]
    f910:	e7c5e002 	strb	lr, [r5, r2]
    f914:	e1d020be 	ldrh	r2, [r0, #14]
    f918:	e7d5c002 	ldrb	ip, [r5, r2]
    f91c:	eaffeff6 	b	b8fc <CodesFD+0x75c>
    f920:	e19520d2 	ldrsb	r2, [r5, r2]
    f924:	e0833002 	add	r3, r3, r2
    f928:	e6ff3073 	uxth	r3, r3
    f92c:	e7d52003 	ldrb	r2, [r5, r3]
    f930:	eafff38b 	b	c764 <CodesFD+0x15c4>
    f934:	e19520d2 	ldrsb	r2, [r5, r2]
    f938:	e0833002 	add	r3, r3, r2
    f93c:	e6ff3073 	uxth	r3, r3
    f940:	e7d52003 	ldrb	r2, [r5, r3]
    f944:	eafff3ed 	b	c900 <CodesFD+0x1760>
    f948:	e19520d2 	ldrsb	r2, [r5, r2]
    f94c:	e0833002 	add	r3, r3, r2
    f950:	e6ff3073 	uxth	r3, r3
    f954:	e7d51003 	ldrb	r1, [r5, r3]
    f958:	eafff2d7 	b	c4bc <CodesFD+0x131c>
    f95c:	e7d52002 	ldrb	r2, [r5, r2]
    f960:	e1c010be 	strh	r1, [r0, #14]
    f964:	e5c0200c 	strb	r2, [r0, #12]
    f968:	e7d53003 	ldrb	r3, [r5, r3]
    f96c:	eafff268 	b	c314 <CodesFD+0x1174>
    f970:	e19520d2 	ldrsb	r2, [r5, r2]
    f974:	e1c0c0bc 	strh	ip, [r0, #12]
    f978:	e7d53003 	ldrb	r3, [r5, r3]
    f97c:	e0872002 	add	r2, r7, r2
    f980:	e084c003 	add	ip, r4, r3
    f984:	e5dcc400 	ldrb	ip, [ip, #1024]	; 0x400
    f988:	e2433006 	sub	r3, r3, #6
    f98c:	e041100c 	sub	r1, r1, ip
    f990:	e6ff2072 	uxth	r2, r2
    f994:	e5801020 	str	r1, [r0, #32]
    f998:	e35300f8 	cmp	r3, #248	; 0xf8
    f99c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    f9a0:	eaffef15 	b	b5fc <CodesFD+0x45c>
    f9a4:	0000fe58 	.word	0x0000fe58
    f9a8:	0000b5fc 	.word	0x0000b5fc
    f9ac:	0000b5fc 	.word	0x0000b5fc
    f9b0:	0000b5fc 	.word	0x0000b5fc
    f9b4:	0000b5fc 	.word	0x0000b5fc
    f9b8:	0000b5fc 	.word	0x0000b5fc
    f9bc:	0000b5fc 	.word	0x0000b5fc
    f9c0:	0000b5fc 	.word	0x0000b5fc
    f9c4:	0000fe50 	.word	0x0000fe50
    f9c8:	0000b5fc 	.word	0x0000b5fc
    f9cc:	0000b5fc 	.word	0x0000b5fc
    f9d0:	0000b5fc 	.word	0x0000b5fc
    f9d4:	0000b5fc 	.word	0x0000b5fc
    f9d8:	0000b5fc 	.word	0x0000b5fc
    f9dc:	0000b5fc 	.word	0x0000b5fc
    f9e0:	0000b5fc 	.word	0x0000b5fc
    f9e4:	0000fe48 	.word	0x0000fe48
    f9e8:	0000b5fc 	.word	0x0000b5fc
    f9ec:	0000b5fc 	.word	0x0000b5fc
    f9f0:	0000b5fc 	.word	0x0000b5fc
    f9f4:	0000b5fc 	.word	0x0000b5fc
    f9f8:	0000b5fc 	.word	0x0000b5fc
    f9fc:	0000b5fc 	.word	0x0000b5fc
    fa00:	0000b5fc 	.word	0x0000b5fc
    fa04:	0000fe40 	.word	0x0000fe40
    fa08:	0000b5fc 	.word	0x0000b5fc
    fa0c:	0000b5fc 	.word	0x0000b5fc
    fa10:	0000b5fc 	.word	0x0000b5fc
    fa14:	0000b5fc 	.word	0x0000b5fc
    fa18:	0000b5fc 	.word	0x0000b5fc
    fa1c:	0000b5fc 	.word	0x0000b5fc
    fa20:	0000b5fc 	.word	0x0000b5fc
    fa24:	0000fe38 	.word	0x0000fe38
    fa28:	0000b5fc 	.word	0x0000b5fc
    fa2c:	0000b5fc 	.word	0x0000b5fc
    fa30:	0000b5fc 	.word	0x0000b5fc
    fa34:	0000b5fc 	.word	0x0000b5fc
    fa38:	0000b5fc 	.word	0x0000b5fc
    fa3c:	0000b5fc 	.word	0x0000b5fc
    fa40:	0000b5fc 	.word	0x0000b5fc
    fa44:	0000fe30 	.word	0x0000fe30
    fa48:	0000b5fc 	.word	0x0000b5fc
    fa4c:	0000b5fc 	.word	0x0000b5fc
    fa50:	0000b5fc 	.word	0x0000b5fc
    fa54:	0000b5fc 	.word	0x0000b5fc
    fa58:	0000b5fc 	.word	0x0000b5fc
    fa5c:	0000b5fc 	.word	0x0000b5fc
    fa60:	0000b5fc 	.word	0x0000b5fc
    fa64:	0000fe28 	.word	0x0000fe28
    fa68:	0000b5fc 	.word	0x0000b5fc
    fa6c:	0000b5fc 	.word	0x0000b5fc
    fa70:	0000b5fc 	.word	0x0000b5fc
    fa74:	0000b5fc 	.word	0x0000b5fc
    fa78:	0000b5fc 	.word	0x0000b5fc
    fa7c:	0000b5fc 	.word	0x0000b5fc
    fa80:	0000b5fc 	.word	0x0000b5fc
    fa84:	0000fe18 	.word	0x0000fe18
    fa88:	0000b5fc 	.word	0x0000b5fc
    fa8c:	0000fe10 	.word	0x0000fe10
    fa90:	0000fe10 	.word	0x0000fe10
    fa94:	0000fe10 	.word	0x0000fe10
    fa98:	0000fe10 	.word	0x0000fe10
    fa9c:	0000fe10 	.word	0x0000fe10
    faa0:	0000fe10 	.word	0x0000fe10
    faa4:	0000fe10 	.word	0x0000fe10
    faa8:	0000fe10 	.word	0x0000fe10
    faac:	0000fe08 	.word	0x0000fe08
    fab0:	0000fe08 	.word	0x0000fe08
    fab4:	0000fe08 	.word	0x0000fe08
    fab8:	0000fe08 	.word	0x0000fe08
    fabc:	0000fe08 	.word	0x0000fe08
    fac0:	0000fe08 	.word	0x0000fe08
    fac4:	0000fe08 	.word	0x0000fe08
    fac8:	0000fe08 	.word	0x0000fe08
    facc:	0000fe00 	.word	0x0000fe00
    fad0:	0000fe00 	.word	0x0000fe00
    fad4:	0000fe00 	.word	0x0000fe00
    fad8:	0000fe00 	.word	0x0000fe00
    fadc:	0000fe00 	.word	0x0000fe00
    fae0:	0000fe00 	.word	0x0000fe00
    fae4:	0000fe00 	.word	0x0000fe00
    fae8:	0000fe00 	.word	0x0000fe00
    faec:	0000fdf0 	.word	0x0000fdf0
    faf0:	0000fdf0 	.word	0x0000fdf0
    faf4:	0000fdf0 	.word	0x0000fdf0
    faf8:	0000fdf0 	.word	0x0000fdf0
    fafc:	0000fdf0 	.word	0x0000fdf0
    fb00:	0000fdf0 	.word	0x0000fdf0
    fb04:	0000fdf0 	.word	0x0000fdf0
    fb08:	0000fdf0 	.word	0x0000fdf0
    fb0c:	0000fde8 	.word	0x0000fde8
    fb10:	0000fde8 	.word	0x0000fde8
    fb14:	0000fde8 	.word	0x0000fde8
    fb18:	0000fde8 	.word	0x0000fde8
    fb1c:	0000fde8 	.word	0x0000fde8
    fb20:	0000fde8 	.word	0x0000fde8
    fb24:	0000fde8 	.word	0x0000fde8
    fb28:	0000fde8 	.word	0x0000fde8
    fb2c:	0000fde0 	.word	0x0000fde0
    fb30:	0000fde0 	.word	0x0000fde0
    fb34:	0000fde0 	.word	0x0000fde0
    fb38:	0000fde0 	.word	0x0000fde0
    fb3c:	0000fde0 	.word	0x0000fde0
    fb40:	0000fde0 	.word	0x0000fde0
    fb44:	0000fde0 	.word	0x0000fde0
    fb48:	0000fde0 	.word	0x0000fde0
    fb4c:	0000fdf8 	.word	0x0000fdf8
    fb50:	0000fdf8 	.word	0x0000fdf8
    fb54:	0000fdf8 	.word	0x0000fdf8
    fb58:	0000fdf8 	.word	0x0000fdf8
    fb5c:	0000fdf8 	.word	0x0000fdf8
    fb60:	0000fdf8 	.word	0x0000fdf8
    fb64:	0000fdf8 	.word	0x0000fdf8
    fb68:	0000fdf8 	.word	0x0000fdf8
    fb6c:	0000fdd8 	.word	0x0000fdd8
    fb70:	0000fdd8 	.word	0x0000fdd8
    fb74:	0000fdd8 	.word	0x0000fdd8
    fb78:	0000fdd8 	.word	0x0000fdd8
    fb7c:	0000fdd8 	.word	0x0000fdd8
    fb80:	0000fdd8 	.word	0x0000fdd8
    fb84:	0000fdd8 	.word	0x0000fdd8
    fb88:	0000fdd8 	.word	0x0000fdd8
    fb8c:	0000b5fc 	.word	0x0000b5fc
    fb90:	0000b5fc 	.word	0x0000b5fc
    fb94:	0000b5fc 	.word	0x0000b5fc
    fb98:	0000b5fc 	.word	0x0000b5fc
    fb9c:	0000b5fc 	.word	0x0000b5fc
    fba0:	0000b5fc 	.word	0x0000b5fc
    fba4:	0000fdd0 	.word	0x0000fdd0
    fba8:	0000b5fc 	.word	0x0000b5fc
    fbac:	0000b5fc 	.word	0x0000b5fc
    fbb0:	0000b5fc 	.word	0x0000b5fc
    fbb4:	0000b5fc 	.word	0x0000b5fc
    fbb8:	0000b5fc 	.word	0x0000b5fc
    fbbc:	0000b5fc 	.word	0x0000b5fc
    fbc0:	0000b5fc 	.word	0x0000b5fc
    fbc4:	0000fdc8 	.word	0x0000fdc8
    fbc8:	0000b5fc 	.word	0x0000b5fc
    fbcc:	0000b5fc 	.word	0x0000b5fc
    fbd0:	0000b5fc 	.word	0x0000b5fc
    fbd4:	0000b5fc 	.word	0x0000b5fc
    fbd8:	0000b5fc 	.word	0x0000b5fc
    fbdc:	0000b5fc 	.word	0x0000b5fc
    fbe0:	0000b5fc 	.word	0x0000b5fc
    fbe4:	0000fdc0 	.word	0x0000fdc0
    fbe8:	0000b5fc 	.word	0x0000b5fc
    fbec:	0000b5fc 	.word	0x0000b5fc
    fbf0:	0000b5fc 	.word	0x0000b5fc
    fbf4:	0000b5fc 	.word	0x0000b5fc
    fbf8:	0000b5fc 	.word	0x0000b5fc
    fbfc:	0000b5fc 	.word	0x0000b5fc
    fc00:	0000b5fc 	.word	0x0000b5fc
    fc04:	0000fdb8 	.word	0x0000fdb8
    fc08:	0000b5fc 	.word	0x0000b5fc
    fc0c:	0000b5fc 	.word	0x0000b5fc
    fc10:	0000b5fc 	.word	0x0000b5fc
    fc14:	0000b5fc 	.word	0x0000b5fc
    fc18:	0000b5fc 	.word	0x0000b5fc
    fc1c:	0000b5fc 	.word	0x0000b5fc
    fc20:	0000b5fc 	.word	0x0000b5fc
    fc24:	0000fdb0 	.word	0x0000fdb0
    fc28:	0000b5fc 	.word	0x0000b5fc
    fc2c:	0000b5fc 	.word	0x0000b5fc
    fc30:	0000b5fc 	.word	0x0000b5fc
    fc34:	0000b5fc 	.word	0x0000b5fc
    fc38:	0000b5fc 	.word	0x0000b5fc
    fc3c:	0000b5fc 	.word	0x0000b5fc
    fc40:	0000b5fc 	.word	0x0000b5fc
    fc44:	0000fda0 	.word	0x0000fda0
    fc48:	0000b5fc 	.word	0x0000b5fc
    fc4c:	0000b5fc 	.word	0x0000b5fc
    fc50:	0000b5fc 	.word	0x0000b5fc
    fc54:	0000b5fc 	.word	0x0000b5fc
    fc58:	0000b5fc 	.word	0x0000b5fc
    fc5c:	0000b5fc 	.word	0x0000b5fc
    fc60:	0000b5fc 	.word	0x0000b5fc
    fc64:	0000fda8 	.word	0x0000fda8
    fc68:	0000b5fc 	.word	0x0000b5fc
    fc6c:	0000b5fc 	.word	0x0000b5fc
    fc70:	0000b5fc 	.word	0x0000b5fc
    fc74:	0000b5fc 	.word	0x0000b5fc
    fc78:	0000b5fc 	.word	0x0000b5fc
    fc7c:	0000b5fc 	.word	0x0000b5fc
    fc80:	0000b5fc 	.word	0x0000b5fc
    fc84:	0000fd98 	.word	0x0000fd98
    fc88:	0000b5fc 	.word	0x0000b5fc
    fc8c:	0000b5fc 	.word	0x0000b5fc
    fc90:	0000b5fc 	.word	0x0000b5fc
    fc94:	0000b5fc 	.word	0x0000b5fc
    fc98:	0000b5fc 	.word	0x0000b5fc
    fc9c:	0000b5fc 	.word	0x0000b5fc
    fca0:	0000b5fc 	.word	0x0000b5fc
    fca4:	0000fd90 	.word	0x0000fd90
    fca8:	0000b5fc 	.word	0x0000b5fc
    fcac:	0000b5fc 	.word	0x0000b5fc
    fcb0:	0000b5fc 	.word	0x0000b5fc
    fcb4:	0000b5fc 	.word	0x0000b5fc
    fcb8:	0000b5fc 	.word	0x0000b5fc
    fcbc:	0000b5fc 	.word	0x0000b5fc
    fcc0:	0000b5fc 	.word	0x0000b5fc
    fcc4:	0000fea0 	.word	0x0000fea0
    fcc8:	0000b5fc 	.word	0x0000b5fc
    fccc:	0000b5fc 	.word	0x0000b5fc
    fcd0:	0000b5fc 	.word	0x0000b5fc
    fcd4:	0000b5fc 	.word	0x0000b5fc
    fcd8:	0000b5fc 	.word	0x0000b5fc
    fcdc:	0000b5fc 	.word	0x0000b5fc
    fce0:	0000b5fc 	.word	0x0000b5fc
    fce4:	0000fe98 	.word	0x0000fe98
    fce8:	0000b5fc 	.word	0x0000b5fc
    fcec:	0000b5fc 	.word	0x0000b5fc
    fcf0:	0000b5fc 	.word	0x0000b5fc
    fcf4:	0000b5fc 	.word	0x0000b5fc
    fcf8:	0000b5fc 	.word	0x0000b5fc
    fcfc:	0000b5fc 	.word	0x0000b5fc
    fd00:	0000b5fc 	.word	0x0000b5fc
    fd04:	0000fe20 	.word	0x0000fe20
    fd08:	0000b5fc 	.word	0x0000b5fc
    fd0c:	0000b5fc 	.word	0x0000b5fc
    fd10:	0000b5fc 	.word	0x0000b5fc
    fd14:	0000b5fc 	.word	0x0000b5fc
    fd18:	0000b5fc 	.word	0x0000b5fc
    fd1c:	0000b5fc 	.word	0x0000b5fc
    fd20:	0000b5fc 	.word	0x0000b5fc
    fd24:	0000fe90 	.word	0x0000fe90
    fd28:	0000b5fc 	.word	0x0000b5fc
    fd2c:	0000b5fc 	.word	0x0000b5fc
    fd30:	0000b5fc 	.word	0x0000b5fc
    fd34:	0000b5fc 	.word	0x0000b5fc
    fd38:	0000b5fc 	.word	0x0000b5fc
    fd3c:	0000b5fc 	.word	0x0000b5fc
    fd40:	0000b5fc 	.word	0x0000b5fc
    fd44:	0000fe88 	.word	0x0000fe88
    fd48:	0000b5fc 	.word	0x0000b5fc
    fd4c:	0000b5fc 	.word	0x0000b5fc
    fd50:	0000b5fc 	.word	0x0000b5fc
    fd54:	0000b5fc 	.word	0x0000b5fc
    fd58:	0000b5fc 	.word	0x0000b5fc
    fd5c:	0000b5fc 	.word	0x0000b5fc
    fd60:	0000b5fc 	.word	0x0000b5fc
    fd64:	0000fe80 	.word	0x0000fe80
    fd68:	0000b5fc 	.word	0x0000b5fc
    fd6c:	0000b5fc 	.word	0x0000b5fc
    fd70:	0000b5fc 	.word	0x0000b5fc
    fd74:	0000b5fc 	.word	0x0000b5fc
    fd78:	0000b5fc 	.word	0x0000b5fc
    fd7c:	0000b5fc 	.word	0x0000b5fc
    fd80:	0000b5fc 	.word	0x0000b5fc
    fd84:	0000fd88 	.word	0x0000fd88
    fd88:	e7d53002 	ldrb	r3, [r5, r2]
    fd8c:	eafffd1b 	b	f200 <CodesFD+0x4060>
    fd90:	e7d53002 	ldrb	r3, [r5, r2]
    fd94:	eafffd49 	b	f2c0 <CodesFD+0x4120>
    fd98:	e7d53002 	ldrb	r3, [r5, r2]
    fd9c:	eafffda8 	b	f444 <CodesFD+0x42a4>
    fda0:	e7d53002 	ldrb	r3, [r5, r2]
    fda4:	eafffdd5 	b	f500 <CodesFD+0x4360>
    fda8:	e7d53002 	ldrb	r3, [r5, r2]
    fdac:	eafffd2b 	b	f260 <CodesFD+0x40c0>
    fdb0:	e7d53002 	ldrb	r3, [r5, r2]
    fdb4:	eafffd8b 	b	f3e8 <CodesFD+0x4248>
    fdb8:	e7d53002 	ldrb	r3, [r5, r2]
    fdbc:	eafffdfe 	b	f5bc <CodesFD+0x441c>
    fdc0:	e7d53002 	ldrb	r3, [r5, r2]
    fdc4:	eafffd54 	b	f31c <CodesFD+0x417c>
    fdc8:	e7d53002 	ldrb	r3, [r5, r2]
    fdcc:	eafffde2 	b	f55c <CodesFD+0x43bc>
    fdd0:	e7d53002 	ldrb	r3, [r5, r2]
    fdd4:	eafffdb1 	b	f4a0 <CodesFD+0x4300>
    fdd8:	e7d53002 	ldrb	r3, [r5, r2]
    fddc:	eafffe0c 	b	f614 <CodesFD+0x4474>
    fde0:	e7d53002 	ldrb	r3, [r5, r2]
    fde4:	eafffdcd 	b	f520 <CodesFD+0x4380>
    fde8:	e7d53002 	ldrb	r3, [r5, r2]
    fdec:	eafffd6e 	b	f3ac <CodesFD+0x420c>
    fdf0:	e7d53002 	ldrb	r3, [r5, r2]
    fdf4:	eafffe25 	b	f690 <CodesFD+0x44f0>
    fdf8:	e7d53002 	ldrb	r3, [r5, r2]
    fdfc:	eafffd08 	b	f224 <CodesFD+0x4084>
    fe00:	e7d53002 	ldrb	r3, [r5, r2]
    fe04:	eafffd35 	b	f2e0 <CodesFD+0x4140>
    fe08:	e7d53002 	ldrb	r3, [r5, r2]
    fe0c:	eafffdf2 	b	f5dc <CodesFD+0x443c>
    fe10:	e7d53002 	ldrb	r3, [r5, r2]
    fe14:	eafffd92 	b	f464 <CodesFD+0x42c4>
    fe18:	e7d51002 	ldrb	r1, [r5, r2]
    fe1c:	eafffe2a 	b	f6cc <CodesFD+0x452c>
    fe20:	e7d53002 	ldrb	r3, [r5, r2]
    fe24:	eafffce3 	b	f1b8 <CodesFD+0x4018>
    fe28:	e7d5c002 	ldrb	ip, [r5, r2]
    fe2c:	eafffd14 	b	f284 <CodesFD+0x40e4>
    fe30:	e7d51002 	ldrb	r1, [r5, r2]
    fe34:	eafffdd1 	b	f580 <CodesFD+0x43e0>
    fe38:	e7d5c002 	ldrb	ip, [r5, r2]
    fe3c:	eafffd72 	b	f40c <CodesFD+0x426c>
    fe40:	e7d53002 	ldrb	r3, [r5, r2]
    fe44:	eafffe01 	b	f650 <CodesFD+0x44b0>
    fe48:	e7d53002 	ldrb	r3, [r5, r2]
    fe4c:	eafffd3b 	b	f340 <CodesFD+0x41a0>
    fe50:	e7d53002 	ldrb	r3, [r5, r2]
    fe54:	eafffd9a 	b	f4c4 <CodesFD+0x4324>
    fe58:	e7d53002 	ldrb	r3, [r5, r2]
    fe5c:	e1a0c3a3 	lsr	ip, r3, #7
    fe60:	e18c3083 	orr	r3, ip, r3, lsl #1
    fe64:	e6ef1073 	uxtb	r1, r3
    fe68:	e0843001 	add	r3, r4, r1
    fe6c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
    fe70:	e18cc003 	orr	ip, ip, r3
    fe74:	e5c0c000 	strb	ip, [r0]
    fe78:	e7c51002 	strb	r1, [r5, r2]
    fe7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    fe80:	e7d53002 	ldrb	r3, [r5, r2]
    fe84:	eafffcb0 	b	f14c <CodesFD+0x3fac>
    fe88:	e7d53002 	ldrb	r3, [r5, r2]
    fe8c:	eafffcb7 	b	f170 <CodesFD+0x3fd0>
    fe90:	e7d53002 	ldrb	r3, [r5, r2]
    fe94:	eafffcbe 	b	f194 <CodesFD+0x3ff4>
    fe98:	e7d53002 	ldrb	r3, [r5, r2]
    fe9c:	eafffcce 	b	f1dc <CodesFD+0x403c>
    fea0:	e7d53002 	ldrb	r3, [r5, r2]
    fea4:	eafffd38 	b	f38c <CodesFD+0x41ec>
    fea8:	e28ee002 	add	lr, lr, #2
    feac:	e1c0e0bc 	strh	lr, [r0, #12]
    feb0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    feb4:	e1c0c0bc 	strh	ip, [r0, #12]
    feb8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    febc:	e28ee003 	add	lr, lr, #3
    fec0:	e1c0e0bc 	strh	lr, [r0, #12]
    fec4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    fec8:	e1c0c0bc 	strh	ip, [r0, #12]
    fecc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    fed0:	e28ee002 	add	lr, lr, #2
    fed4:	e1c0e0bc 	strh	lr, [r0, #12]
    fed8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    fedc:	e28ee003 	add	lr, lr, #3
    fee0:	e1c0e0bc 	strh	lr, [r0, #12]
    fee4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    fee8:	e28ee003 	add	lr, lr, #3
    feec:	e1c0e0bc 	strh	lr, [r0, #12]
    fef0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    fef4:	e28ee003 	add	lr, lr, #3
    fef8:	e1c0e0bc 	strh	lr, [r0, #12]
    fefc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff00:	e28ee002 	add	lr, lr, #2
    ff04:	e1c0e0bc 	strh	lr, [r0, #12]
    ff08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff0c:	e28ee002 	add	lr, lr, #2
    ff10:	e1c0e0bc 	strh	lr, [r0, #12]
    ff14:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff18:	e28ee002 	add	lr, lr, #2
    ff1c:	e1c0e0bc 	strh	lr, [r0, #12]
    ff20:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff24:	e1c0c0bc 	strh	ip, [r0, #12]
    ff28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff2c:	e1c0c0bc 	strh	ip, [r0, #12]
    ff30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff34:	e1c0c0bc 	strh	ip, [r0, #12]
    ff38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff3c:	e1c0c0bc 	strh	ip, [r0, #12]
    ff40:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff44:	e28ee003 	add	lr, lr, #3
    ff48:	e1c0e0bc 	strh	lr, [r0, #12]
    ff4c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff50:	e28ee003 	add	lr, lr, #3
    ff54:	e1c0e0bc 	strh	lr, [r0, #12]
    ff58:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ff5c:	e3560000 	cmp	r6, #0
    ff60:	e2411007 	sub	r1, r1, #7
    ff64:	e28ec002 	add	ip, lr, #2
    ff68:	151fe788 	ldrne	lr, [pc, #-1928]	; f7e8 <CodesFD+0x4648>
    ff6c:	e5801020 	str	r1, [r0, #32]
    ff70:	e6ffc07c 	uxth	ip, ip
    ff74:	151f1790 	ldrne	r1, [pc, #-1936]	; f7ec <CodesFD+0x464c>
    ff78:	e1c0c0bc 	strh	ip, [r0, #12]
    ff7c:	1002200e 	andne	r2, r2, lr
    ff80:	07d53002 	ldrbeq	r3, [r5, r2]
    ff84:	17d13002 	ldrbne	r3, [r1, r2]
    ff88:	e1d020be 	ldrh	r2, [r0, #14]
    ff8c:	11c040bc 	strhne	r4, [r0, #12]
    ff90:	e2422001 	sub	r2, r2, #1
    ff94:	01c040bc 	strheq	r4, [r0, #12]
    ff98:	100cc00e 	andne	ip, ip, lr
    ff9c:	e6ff2072 	uxth	r2, r2
    ffa0:	e1a04424 	lsr	r4, r4, #8
    ffa4:	07d5c00c 	ldrbeq	ip, [r5, ip]
    ffa8:	17d1c00c 	ldrbne	ip, [r1, ip]
    ffac:	e1c020be 	strh	r2, [r0, #14]
    ffb0:	e7c54002 	strb	r4, [r5, r2]
    ffb4:	e1d020be 	ldrh	r2, [r0, #14]
    ffb8:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
    ffbc:	e5d0e00c 	ldrb	lr, [r0, #12]
    ffc0:	e2423001 	sub	r3, r2, #1
    ffc4:	e6ff3073 	uxth	r3, r3
    ffc8:	e181240c 	orr	r2, r1, ip, lsl #8
    ffcc:	e1c030be 	strh	r3, [r0, #14]
    ffd0:	e7c5e003 	strb	lr, [r5, r3]
    ffd4:	e1c020bc 	strh	r2, [r0, #12]
    ffd8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    ffdc:	e3560000 	cmp	r6, #0
    ffe0:	e28e1002 	add	r1, lr, #2
    ffe4:	151fe804 	ldrne	lr, [pc, #-2052]	; f7e8 <CodesFD+0x4648>
    ffe8:	e6ff1071 	uxth	r1, r1
    ffec:	151fc808 	ldrne	ip, [pc, #-2056]	; f7ec <CodesFD+0x464c>
    fff0:	e1c010bc 	strh	r1, [r0, #12]
    fff4:	1002200e 	andne	r2, r2, lr
    fff8:	17dc3002 	ldrbne	r3, [ip, r2]
    fffc:	07d53002 	ldrbeq	r3, [r5, r2]
   10000:	1001100e 	andne	r1, r1, lr
   10004:	17dc2001 	ldrbne	r2, [ip, r1]
   10008:	07d52001 	ldrbeq	r2, [r5, r1]
   1000c:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   10010:	e1833402 	orr	r3, r3, r2, lsl #8
   10014:	e1c030bc 	strh	r3, [r0, #12]
   10018:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1001c:	e3833004 	orr	r3, r3, #4
   10020:	e3a02010 	mov	r2, #16
   10024:	eafffa6c 	b	e9dc <CodesFD+0x383c>
   10028:	e7d52002 	ldrb	r2, [r5, r2]
   1002c:	e1c010be 	strh	r1, [r0, #14]
   10030:	e5c0200c 	strb	r2, [r0, #12]
   10034:	e7d53003 	ldrb	r3, [r5, r3]
   10038:	eaffedf4 	b	b810 <CodesFD+0x670>
   1003c:	e3833004 	orr	r3, r3, #4
   10040:	e3a04010 	mov	r4, #16
   10044:	eafff9f4 	b	e81c <CodesFD+0x367c>
   10048:	e3833004 	orr	r3, r3, #4
   1004c:	e3a02010 	mov	r2, #16
   10050:	eafffb07 	b	ec74 <CodesFD+0x3ad4>
   10054:	e3833004 	orr	r3, r3, #4
   10058:	e3a02010 	mov	r2, #16
   1005c:	eafff900 	b	e464 <CodesFD+0x32c4>
   10060:	e3833004 	orr	r3, r3, #4
   10064:	e3a02010 	mov	r2, #16
   10068:	eafffaee 	b	ec28 <CodesFD+0x3a88>
   1006c:	e3833004 	orr	r3, r3, #4
   10070:	e3a04010 	mov	r4, #16
   10074:	eafffacd 	b	ebb0 <CodesFD+0x3a10>
   10078:	e3833004 	orr	r3, r3, #4
   1007c:	e3a02010 	mov	r2, #16
   10080:	eafffa72 	b	ea50 <CodesFD+0x38b0>
   10084:	e3833004 	orr	r3, r3, #4
   10088:	e3a02010 	mov	r2, #16
   1008c:	eafff91b 	b	e500 <CodesFD+0x3360>
   10090:	e3833004 	orr	r3, r3, #4
   10094:	e3a02010 	mov	r2, #16
   10098:	eafff996 	b	e6f8 <CodesFD+0x3558>
   1009c:	e3833004 	orr	r3, r3, #4
   100a0:	e3a02010 	mov	r2, #16
   100a4:	eafff928 	b	e54c <CodesFD+0x33ac>
   100a8:	e3833004 	orr	r3, r3, #4
   100ac:	e3a02010 	mov	r2, #16
   100b0:	eafff8d8 	b	e418 <CodesFD+0x3278>
   100b4:	e3833004 	orr	r3, r3, #4
   100b8:	e3a02010 	mov	r2, #16
   100bc:	eafff9a0 	b	e744 <CodesFD+0x35a4>
   100c0:	e3833004 	orr	r3, r3, #4
   100c4:	e3a02010 	mov	r2, #16
   100c8:	eafffbb1 	b	ef94 <CodesFD+0x3df4>
   100cc:	e3833004 	orr	r3, r3, #4
   100d0:	e3a02010 	mov	r2, #16
   100d4:	eafffbe5 	b	f070 <CodesFD+0x3ed0>
   100d8:	e3833004 	orr	r3, r3, #4
   100dc:	e3a02010 	mov	r2, #16
   100e0:	eafffb89 	b	ef0c <CodesFD+0x3d6c>
   100e4:	e3833004 	orr	r3, r3, #4
   100e8:	e3a02010 	mov	r2, #16
   100ec:	eafffbcc 	b	f024 <CodesFD+0x3e84>
   100f0:	e1c0c0bc 	strh	ip, [r0, #12]
   100f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   100f8:	e28ee003 	add	lr, lr, #3
   100fc:	e1c0e0bc 	strh	lr, [r0, #12]
   10100:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10104:	e7d52002 	ldrb	r2, [r5, r2]
   10108:	e1c010be 	strh	r1, [r0, #14]
   1010c:	e5c0200c 	strb	r2, [r0, #12]
   10110:	e7d53003 	ldrb	r3, [r5, r3]
   10114:	eafff704 	b	dd2c <CodesFD+0x2b8c>
   10118:	e7d52002 	ldrb	r2, [r5, r2]
   1011c:	e1c010be 	strh	r1, [r0, #14]
   10120:	e5c0200c 	strb	r2, [r0, #12]
   10124:	e7d53003 	ldrb	r3, [r5, r3]
   10128:	eaffee35 	b	ba04 <CodesFD+0x864>
   1012c:	e7d52002 	ldrb	r2, [r5, r2]
   10130:	e1c010be 	strh	r1, [r0, #14]
   10134:	e5c0200c 	strb	r2, [r0, #12]
   10138:	e7d53003 	ldrb	r3, [r5, r3]
   1013c:	eafff665 	b	dad8 <CodesFD+0x2938>
   10140:	e7d52002 	ldrb	r2, [r5, r2]
   10144:	e1c010be 	strh	r1, [r0, #14]
   10148:	e5c0200c 	strb	r2, [r0, #12]
   1014c:	e7d53003 	ldrb	r3, [r5, r3]
   10150:	eaffee93 	b	bba4 <CodesFD+0xa04>
   10154:	e7d52002 	ldrb	r2, [r5, r2]
   10158:	e1c010be 	strh	r1, [r0, #14]
   1015c:	e5c0200c 	strb	r2, [r0, #12]
   10160:	e7d53003 	ldrb	r3, [r5, r3]
   10164:	eafff094 	b	c3bc <CodesFD+0x121c>
   10168:	e7d52002 	ldrb	r2, [r5, r2]
   1016c:	e1c010be 	strh	r1, [r0, #14]
   10170:	e5c0200c 	strb	r2, [r0, #12]
   10174:	e7d53003 	ldrb	r3, [r5, r3]
   10178:	eafff5d2 	b	d8c8 <CodesFD+0x2728>
   1017c:	e7d52002 	ldrb	r2, [r5, r2]
   10180:	e1c010be 	strh	r1, [r0, #14]
   10184:	e5c0200c 	strb	r2, [r0, #12]
   10188:	e7d53003 	ldrb	r3, [r5, r3]
   1018c:	eafff7c9 	b	e0b8 <CodesFD+0x2f18>
   10190:	e1a03882 	lsl	r3, r2, #17
   10194:	e1a038a3 	lsr	r3, r3, #17
   10198:	e7de3003 	ldrb	r3, [lr, r3]
   1019c:	eaffff2e 	b	fe5c <CodesFD+0x4cbc>

000101a0 <CodesDD>:
   101a0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   101a4:	e59f5cd0 	ldr	r5, [pc, #3280]	; 10e7c <CodesDD+0xcdc>
   101a8:	e1d0e0bc 	ldrh	lr, [r0, #12]
   101ac:	e2853a12 	add	r3, r5, #73728	; 0x12000
   101b0:	e5936000 	ldr	r6, [r3]
   101b4:	e28e2001 	add	r2, lr, #1
   101b8:	e3560000 	cmp	r6, #0
   101bc:	11a0388e 	lslne	r3, lr, #17
   101c0:	159f1cc0 	ldrne	r1, [pc, #3264]	; 10e88 <CodesDD+0xce8>
   101c4:	e6ff2072 	uxth	r2, r2
   101c8:	11a038a3 	lsrne	r3, r3, #17
   101cc:	e1c020bc 	strh	r2, [r0, #12]
   101d0:	17d13003 	ldrbne	r3, [r1, r3]
   101d4:	07d5300e 	ldrbeq	r3, [r5, lr]
   101d8:	e59f4ca0 	ldr	r4, [pc, #3232]	; 10e80 <CodesDD+0xce0>
   101dc:	e590c020 	ldr	ip, [r0, #32]
   101e0:	e0841003 	add	r1, r4, r3
   101e4:	e5d11200 	ldrb	r1, [r1, #512]	; 0x200
   101e8:	e2433001 	sub	r3, r3, #1
   101ec:	e04c1001 	sub	r1, ip, r1
   101f0:	e5801020 	str	r1, [r0, #32]
   101f4:	e35300fe 	cmp	r3, #254	; 0xfe
   101f8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   101fc:	ea0000fe 	b	105fc <CodesDD+0x45c>
   10200:	0001407c 	.word	0x0001407c
   10204:	000140e8 	.word	0x000140e8
   10208:	00013fa0 	.word	0x00013fa0
   1020c:	00014034 	.word	0x00014034
   10210:	00013fe8 	.word	0x00013fe8
   10214:	000140c0 	.word	0x000140c0
   10218:	00013d70 	.word	0x00013d70
   1021c:	00013fd4 	.word	0x00013fd4
   10220:	00013f1c 	.word	0x00013f1c
   10224:	00013fb0 	.word	0x00013fb0
   10228:	00013750 	.word	0x00013750
   1022c:	00013708 	.word	0x00013708
   10230:	000136bc 	.word	0x000136bc
   10234:	00013694 	.word	0x00013694
   10238:	00013668 	.word	0x00013668
   1023c:	00013e84 	.word	0x00013e84
   10240:	00013e40 	.word	0x00013e40
   10244:	00013e30 	.word	0x00013e30
   10248:	00013e20 	.word	0x00013e20
   1024c:	00013f58 	.word	0x00013f58
   10250:	00013ed0 	.word	0x00013ed0
   10254:	00013880 	.word	0x00013880
   10258:	0001385c 	.word	0x0001385c
   1025c:	00013dd0 	.word	0x00013dd0
   10260:	00013d94 	.word	0x00013d94
   10264:	00013dfc 	.word	0x00013dfc
   10268:	00013470 	.word	0x00013470
   1026c:	00013428 	.word	0x00013428
   10270:	000133dc 	.word	0x000133dc
   10274:	000133b4 	.word	0x000133b4
   10278:	0001338c 	.word	0x0001338c
   1027c:	00013960 	.word	0x00013960
   10280:	0001391c 	.word	0x0001391c
   10284:	000138b8 	.word	0x000138b8
   10288:	000138a8 	.word	0x000138a8
   1028c:	00013a14 	.word	0x00013a14
   10290:	000139a0 	.word	0x000139a0
   10294:	000139ec 	.word	0x000139ec
   10298:	00013634 	.word	0x00013634
   1029c:	00013598 	.word	0x00013598
   102a0:	00013568 	.word	0x00013568
   102a4:	000135d8 	.word	0x000135d8
   102a8:	00013558 	.word	0x00013558
   102ac:	00013510 	.word	0x00013510
   102b0:	000134c4 	.word	0x000134c4
   102b4:	0001349c 	.word	0x0001349c
   102b8:	00013480 	.word	0x00013480
   102bc:	00013b14 	.word	0x00013b14
   102c0:	00013ad0 	.word	0x00013ad0
   102c4:	00013a7c 	.word	0x00013a7c
   102c8:	00013a6c 	.word	0x00013a6c
   102cc:	00013b54 	.word	0x00013b54
   102d0:	000137c0 	.word	0x000137c0
   102d4:	00013774 	.word	0x00013774
   102d8:	00013760 	.word	0x00013760
   102dc:	00013d30 	.word	0x00013d30
   102e0:	00013c80 	.word	0x00013c80
   102e4:	00013ce4 	.word	0x00013ce4
   102e8:	00013a5c 	.word	0x00013a5c
   102ec:	00013c38 	.word	0x00013c38
   102f0:	00013bec 	.word	0x00013bec
   102f4:	00013cbc 	.word	0x00013cbc
   102f8:	00012d34 	.word	0x00012d34
   102fc:	000105fc 	.word	0x000105fc
   10300:	00012f94 	.word	0x00012f94
   10304:	00012f88 	.word	0x00012f88
   10308:	00012f7c 	.word	0x00012f7c
   1030c:	00013014 	.word	0x00013014
   10310:	00012f70 	.word	0x00012f70
   10314:	00012f38 	.word	0x00012f38
   10318:	00012f2c 	.word	0x00012f2c
   1031c:	00012f20 	.word	0x00012f20
   10320:	000105fc 	.word	0x000105fc
   10324:	00012ef8 	.word	0x00012ef8
   10328:	00012eec 	.word	0x00012eec
   1032c:	00012ee0 	.word	0x00012ee0
   10330:	00012ed4 	.word	0x00012ed4
   10334:	00012e9c 	.word	0x00012e9c
   10338:	00012e90 	.word	0x00012e90
   1033c:	00012e78 	.word	0x00012e78
   10340:	00012e6c 	.word	0x00012e6c
   10344:	000105fc 	.word	0x000105fc
   10348:	00012e3c 	.word	0x00012e3c
   1034c:	00012e84 	.word	0x00012e84
   10350:	00012e30 	.word	0x00012e30
   10354:	00012df8 	.word	0x00012df8
   10358:	00012dec 	.word	0x00012dec
   1035c:	00012de0 	.word	0x00012de0
   10360:	00012dd4 	.word	0x00012dd4
   10364:	00012dc8 	.word	0x00012dc8
   10368:	000105fc 	.word	0x000105fc
   1036c:	00012da4 	.word	0x00012da4
   10370:	00012d98 	.word	0x00012d98
   10374:	00012d60 	.word	0x00012d60
   10378:	00012d54 	.word	0x00012d54
   1037c:	0001317c 	.word	0x0001317c
   10380:	00013170 	.word	0x00013170
   10384:	00013164 	.word	0x00013164
   10388:	00013158 	.word	0x00013158
   1038c:	000105fc 	.word	0x000105fc
   10390:	00013140 	.word	0x00013140
   10394:	00013108 	.word	0x00013108
   10398:	000130fc 	.word	0x000130fc
   1039c:	000131ac 	.word	0x000131ac
   103a0:	000131a0 	.word	0x000131a0
   103a4:	00013194 	.word	0x00013194
   103a8:	00013188 	.word	0x00013188
   103ac:	000131b8 	.word	0x000131b8
   103b0:	000105fc 	.word	0x000105fc
   103b4:	0001302c 	.word	0x0001302c
   103b8:	00013020 	.word	0x00013020
   103bc:	000132b4 	.word	0x000132b4
   103c0:	00013278 	.word	0x00013278
   103c4:	0001323c 	.word	0x0001323c
   103c8:	00013200 	.word	0x00013200
   103cc:	0001332c 	.word	0x0001332c
   103d0:	000132f0 	.word	0x000132f0
   103d4:	00013368 	.word	0x00013368
   103d8:	000130c0 	.word	0x000130c0
   103dc:	000131e8 	.word	0x000131e8
   103e0:	000131dc 	.word	0x000131dc
   103e4:	000131d0 	.word	0x000131d0
   103e8:	000131c4 	.word	0x000131c4
   103ec:	000131f4 	.word	0x000131f4
   103f0:	00011474 	.word	0x00011474
   103f4:	0001143c 	.word	0x0001143c
   103f8:	000105fc 	.word	0x000105fc
   103fc:	000123d4 	.word	0x000123d4
   10400:	00012388 	.word	0x00012388
   10404:	0001233c 	.word	0x0001233c
   10408:	000122f0 	.word	0x000122f0
   1040c:	000122a4 	.word	0x000122a4
   10410:	00012258 	.word	0x00012258
   10414:	000121e0 	.word	0x000121e0
   10418:	000121a4 	.word	0x000121a4
   1041c:	0001214c 	.word	0x0001214c
   10420:	000120f4 	.word	0x000120f4
   10424:	0001209c 	.word	0x0001209c
   10428:	00012044 	.word	0x00012044
   1042c:	00011fec 	.word	0x00011fec
   10430:	00011f94 	.word	0x00011f94
   10434:	00011f10 	.word	0x00011f10
   10438:	00011ecc 	.word	0x00011ecc
   1043c:	00012534 	.word	0x00012534
   10440:	000124d8 	.word	0x000124d8
   10444:	0001247c 	.word	0x0001247c
   10448:	00012420 	.word	0x00012420
   1044c:	00012590 	.word	0x00012590
   10450:	00011e70 	.word	0x00011e70
   10454:	00011de8 	.word	0x00011de8
   10458:	00011ddc 	.word	0x00011ddc
   1045c:	00011d74 	.word	0x00011d74
   10460:	00011d0c 	.word	0x00011d0c
   10464:	00011ca4 	.word	0x00011ca4
   10468:	00011c3c 	.word	0x00011c3c
   1046c:	00011bd4 	.word	0x00011bd4
   10470:	00011b6c 	.word	0x00011b6c
   10474:	00011ad8 	.word	0x00011ad8
   10478:	00011a98 	.word	0x00011a98
   1047c:	000119d4 	.word	0x000119d4
   10480:	000119b0 	.word	0x000119b0
   10484:	0001198c 	.word	0x0001198c
   10488:	00011968 	.word	0x00011968
   1048c:	00011944 	.word	0x00011944
   10490:	00011920 	.word	0x00011920
   10494:	000118d0 	.word	0x000118d0
   10498:	000118b8 	.word	0x000118b8
   1049c:	00011a58 	.word	0x00011a58
   104a0:	00011a38 	.word	0x00011a38
   104a4:	00011a18 	.word	0x00011a18
   104a8:	000119f8 	.word	0x000119f8
   104ac:	00011a78 	.word	0x00011a78
   104b0:	00011898 	.word	0x00011898
   104b4:	0001184c 	.word	0x0001184c
   104b8:	00011840 	.word	0x00011840
   104bc:	00011800 	.word	0x00011800
   104c0:	000117e0 	.word	0x000117e0
   104c4:	000117c0 	.word	0x000117c0
   104c8:	000117a0 	.word	0x000117a0
   104cc:	00011820 	.word	0x00011820
   104d0:	00011780 	.word	0x00011780
   104d4:	00011734 	.word	0x00011734
   104d8:	00011720 	.word	0x00011720
   104dc:	000116c8 	.word	0x000116c8
   104e0:	00011670 	.word	0x00011670
   104e4:	00011618 	.word	0x00011618
   104e8:	000115c0 	.word	0x000115c0
   104ec:	00011568 	.word	0x00011568
   104f0:	00011510 	.word	0x00011510
   104f4:	0001148c 	.word	0x0001148c
   104f8:	00011480 	.word	0x00011480
   104fc:	00012874 	.word	0x00012874
   10500:	0001282c 	.word	0x0001282c
   10504:	000127e0 	.word	0x000127e0
   10508:	000127a0 	.word	0x000127a0
   1050c:	0001296c 	.word	0x0001296c
   10510:	000128d0 	.word	0x000128d0
   10514:	00012904 	.word	0x00012904
   10518:	000113c4 	.word	0x000113c4
   1051c:	00011368 	.word	0x00011368
   10520:	000112d4 	.word	0x000112d4
   10524:	0001131c 	.word	0x0001131c
   10528:	00010e8c 	.word	0x00010e8c
   1052c:	00010de8 	.word	0x00010de8
   10530:	00010d68 	.word	0x00010d68
   10534:	00010cf4 	.word	0x00010cf4
   10538:	00010cb8 	.word	0x00010cb8
   1053c:	00012a84 	.word	0x00012a84
   10540:	00012a3c 	.word	0x00012a3c
   10544:	00012ae8 	.word	0x00012ae8
   10548:	00012768 	.word	0x00012768
   1054c:	000126d4 	.word	0x000126d4
   10550:	000126a0 	.word	0x000126a0
   10554:	00012628 	.word	0x00012628
   10558:	000125ec 	.word	0x000125ec
   1055c:	00012cd8 	.word	0x00012cd8
   10560:	00012b34 	.word	0x00012b34
   10564:	00012c8c 	.word	0x00012c8c
   10568:	00012a00 	.word	0x00012a00
   1056c:	00012bec 	.word	0x00012bec
   10570:	00012ae0 	.word	0x00012ae0
   10574:	00012b68 	.word	0x00012b68
   10578:	00010c7c 	.word	0x00010c7c
   1057c:	000109b0 	.word	0x000109b0
   10580:	00010968 	.word	0x00010968
   10584:	0001091c 	.word	0x0001091c
   10588:	000108c0 	.word	0x000108c0
   1058c:	00010a80 	.word	0x00010a80
   10590:	00010a0c 	.word	0x00010a0c
   10594:	00010a40 	.word	0x00010a40
   10598:	00010818 	.word	0x00010818
   1059c:	00010b50 	.word	0x00010b50
   105a0:	000108b4 	.word	0x000108b4
   105a4:	00010868 	.word	0x00010868
   105a8:	00010854 	.word	0x00010854
   105ac:	00010be8 	.word	0x00010be8
   105b0:	000105fc 	.word	0x000105fc
   105b4:	00010b14 	.word	0x00010b14
   105b8:	00010bac 	.word	0x00010bac
   105bc:	000107bc 	.word	0x000107bc
   105c0:	00010774 	.word	0x00010774
   105c4:	00010728 	.word	0x00010728
   105c8:	00010704 	.word	0x00010704
   105cc:	00010670 	.word	0x00010670
   105d0:	0001063c 	.word	0x0001063c
   105d4:	00010600 	.word	0x00010600
   105d8:	00011400 	.word	0x00011400
   105dc:	00013064 	.word	0x00013064
   105e0:	0001314c 	.word	0x0001314c
   105e4:	00012db0 	.word	0x00012db0
   105e8:	00012e48 	.word	0x00012e48
   105ec:	00012f04 	.word	0x00012f04
   105f0:	00012ae0 	.word	0x00012ae0
   105f4:	00012fa0 	.word	0x00012fa0
   105f8:	000140f8 	.word	0x000140f8
   105fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10600:	e3560000 	cmp	r6, #0
   10604:	11a02882 	lslne	r2, r2, #17
   10608:	159f3878 	ldrne	r3, [pc, #2168]	; 10e88 <CodesDD+0xce8>
   1060c:	e28ee002 	add	lr, lr, #2
   10610:	e1c0e0bc 	strh	lr, [r0, #12]
   10614:	11a028a2 	lsrne	r2, r2, #17
   10618:	17d32002 	ldrbne	r2, [r3, r2]
   1061c:	07d52002 	ldrbeq	r2, [r5, r2]
   10620:	e5d03001 	ldrb	r3, [r0, #1]
   10624:	e1822003 	orr	r2, r2, r3
   10628:	e0843002 	add	r3, r4, r2
   1062c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   10630:	e5c02001 	strb	r2, [r0, #1]
   10634:	e5c03000 	strb	r3, [r0]
   10638:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1063c:	e1d030be 	ldrh	r3, [r0, #14]
   10640:	e5d02001 	ldrb	r2, [r0, #1]
   10644:	e2433001 	sub	r3, r3, #1
   10648:	e6ff3073 	uxth	r3, r3
   1064c:	e1c030be 	strh	r3, [r0, #14]
   10650:	e7c52003 	strb	r2, [r5, r3]
   10654:	e1d030be 	ldrh	r3, [r0, #14]
   10658:	e5d02000 	ldrb	r2, [r0]
   1065c:	e2433001 	sub	r3, r3, #1
   10660:	e6ff3073 	uxth	r3, r3
   10664:	e1c030be 	strh	r3, [r0, #14]
   10668:	e7c52003 	strb	r2, [r5, r3]
   1066c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10670:	e1d030d0 	ldrsb	r3, [r0]
   10674:	e28ec003 	add	ip, lr, #3
   10678:	e3530000 	cmp	r3, #0
   1067c:	e6ffc07c 	uxth	ip, ip
   10680:	ba00129a 	blt	150f0 <CodesDD+0x4f50>
   10684:	e3560000 	cmp	r6, #0
   10688:	e2411007 	sub	r1, r1, #7
   1068c:	159f47f0 	ldrne	r4, [pc, #2032]	; 10e84 <CodesDD+0xce4>
   10690:	e28ee002 	add	lr, lr, #2
   10694:	e5801020 	str	r1, [r0, #32]
   10698:	e6ffe07e 	uxth	lr, lr
   1069c:	159f17e4 	ldrne	r1, [pc, #2020]	; 10e88 <CodesDD+0xce8>
   106a0:	e1c0e0bc 	strh	lr, [r0, #12]
   106a4:	10022004 	andne	r2, r2, r4
   106a8:	07d53002 	ldrbeq	r3, [r5, r2]
   106ac:	17d13002 	ldrbne	r3, [r1, r2]
   106b0:	e1d020be 	ldrh	r2, [r0, #14]
   106b4:	11c0c0bc 	strhne	ip, [r0, #12]
   106b8:	e2422001 	sub	r2, r2, #1
   106bc:	01c0c0bc 	strheq	ip, [r0, #12]
   106c0:	e6ff2072 	uxth	r2, r2
   106c4:	100ee004 	andne	lr, lr, r4
   106c8:	e1a0c42c 	lsr	ip, ip, #8
   106cc:	07d5e00e 	ldrbeq	lr, [r5, lr]
   106d0:	17d1e00e 	ldrbne	lr, [r1, lr]
   106d4:	e1c020be 	strh	r2, [r0, #14]
   106d8:	e7c5c002 	strb	ip, [r5, r2]
   106dc:	e1d020be 	ldrh	r2, [r0, #14]
   106e0:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
   106e4:	e5d0c00c 	ldrb	ip, [r0, #12]
   106e8:	e2423001 	sub	r3, r2, #1
   106ec:	e6ff3073 	uxth	r3, r3
   106f0:	e181240e 	orr	r2, r1, lr, lsl #8
   106f4:	e1c030be 	strh	r3, [r0, #14]
   106f8:	e7c5c003 	strb	ip, [r5, r3]
   106fc:	e1c020bc 	strh	r2, [r0, #12]
   10700:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10704:	e5d03018 	ldrb	r3, [r0, #24]
   10708:	e3130020 	tst	r3, #32
   1070c:	15902024 	ldrne	r2, [r0, #36]	; 0x24
   10710:	e3c33029 	bic	r3, r3, #41	; 0x29
   10714:	12422001 	subne	r2, r2, #1
   10718:	10821001 	addne	r1, r2, r1
   1071c:	15801020 	strne	r1, [r0, #32]
   10720:	e5c03018 	strb	r3, [r0, #24]
   10724:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10728:	e1d030d0 	ldrsb	r3, [r0]
   1072c:	e3530000 	cmp	r3, #0
   10730:	ba001270 	blt	150f8 <CodesDD+0x4f58>
   10734:	e3560000 	cmp	r6, #0
   10738:	e28e1002 	add	r1, lr, #2
   1073c:	159fe740 	ldrne	lr, [pc, #1856]	; 10e84 <CodesDD+0xce4>
   10740:	e6ff1071 	uxth	r1, r1
   10744:	159fc73c 	ldrne	ip, [pc, #1852]	; 10e88 <CodesDD+0xce8>
   10748:	e1c010bc 	strh	r1, [r0, #12]
   1074c:	1002200e 	andne	r2, r2, lr
   10750:	17dc3002 	ldrbne	r3, [ip, r2]
   10754:	07d53002 	ldrbeq	r3, [r5, r2]
   10758:	1001100e 	andne	r1, r1, lr
   1075c:	17dc2001 	ldrbne	r2, [ip, r1]
   10760:	07d52001 	ldrbeq	r2, [r5, r1]
   10764:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   10768:	e1833402 	orr	r3, r3, r2, lsl #8
   1076c:	e1c030bc 	strh	r3, [r0, #12]
   10770:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10774:	e1d020be 	ldrh	r2, [r0, #14]
   10778:	e3560000 	cmp	r6, #0
   1077c:	e2823001 	add	r3, r2, #1
   10780:	e6ff3073 	uxth	r3, r3
   10784:	e2821002 	add	r1, r2, #2
   10788:	e1c030be 	strh	r3, [r0, #14]
   1078c:	e6ff1071 	uxth	r1, r1
   10790:	0a001016 	beq	147f0 <CodesDD+0x4650>
   10794:	e59fe6e8 	ldr	lr, [pc, #1768]	; 10e84 <CodesDD+0xce4>
   10798:	e59fc6e8 	ldr	ip, [pc, #1768]	; 10e88 <CodesDD+0xce8>
   1079c:	e002200e 	and	r2, r2, lr
   107a0:	e7dc2002 	ldrb	r2, [ip, r2]
   107a4:	e003300e 	and	r3, r3, lr
   107a8:	e5c02000 	strb	r2, [r0]
   107ac:	e1c010be 	strh	r1, [r0, #14]
   107b0:	e7dc3003 	ldrb	r3, [ip, r3]
   107b4:	e5c03001 	strb	r3, [r0, #1]
   107b8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   107bc:	e1d030d0 	ldrsb	r3, [r0]
   107c0:	e3530000 	cmp	r3, #0
   107c4:	b8bd81f0 	poplt	{r4, r5, r6, r7, r8, pc}
   107c8:	e1d020be 	ldrh	r2, [r0, #14]
   107cc:	e241c006 	sub	ip, r1, #6
   107d0:	e2823001 	add	r3, r2, #1
   107d4:	e6ff3073 	uxth	r3, r3
   107d8:	e2821002 	add	r1, r2, #2
   107dc:	e3560000 	cmp	r6, #0
   107e0:	e580c020 	str	ip, [r0, #32]
   107e4:	e1c030be 	strh	r3, [r0, #14]
   107e8:	e6ff1071 	uxth	r1, r1
   107ec:	0a00120d 	beq	15028 <CodesDD+0x4e88>
   107f0:	e59fe68c 	ldr	lr, [pc, #1676]	; 10e84 <CodesDD+0xce4>
   107f4:	e59fc68c 	ldr	ip, [pc, #1676]	; 10e88 <CodesDD+0xce8>
   107f8:	e002200e 	and	r2, r2, lr
   107fc:	e7dc2002 	ldrb	r2, [ip, r2]
   10800:	e003300e 	and	r3, r3, lr
   10804:	e5c0200c 	strb	r2, [r0, #12]
   10808:	e1c010be 	strh	r1, [r0, #14]
   1080c:	e7dc3003 	ldrb	r3, [ip, r3]
   10810:	e5c0300d 	strb	r3, [r0, #13]
   10814:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10818:	e3a01020 	mov	r1, #32
   1081c:	e1d030be 	ldrh	r3, [r0, #14]
   10820:	e1a02422 	lsr	r2, r2, #8
   10824:	e2433001 	sub	r3, r3, #1
   10828:	e6ff3073 	uxth	r3, r3
   1082c:	e1c030be 	strh	r3, [r0, #14]
   10830:	e7c52003 	strb	r2, [r5, r3]
   10834:	e1d030be 	ldrh	r3, [r0, #14]
   10838:	e5d0200c 	ldrb	r2, [r0, #12]
   1083c:	e2433001 	sub	r3, r3, #1
   10840:	e6ff3073 	uxth	r3, r3
   10844:	e1c030be 	strh	r3, [r0, #14]
   10848:	e7c52003 	strb	r2, [r5, r3]
   1084c:	e1c010bc 	strh	r1, [r0, #12]
   10850:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10854:	e1d020b4 	ldrh	r2, [r0, #4]
   10858:	e1d030b6 	ldrh	r3, [r0, #6]
   1085c:	e1c020b6 	strh	r2, [r0, #6]
   10860:	e1c030b4 	strh	r3, [r0, #4]
   10864:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10868:	e5d03000 	ldrb	r3, [r0]
   1086c:	e3130004 	tst	r3, #4
   10870:	0a00119f 	beq	14ef4 <CodesDD+0x4d54>
   10874:	e3560000 	cmp	r6, #0
   10878:	e28e1002 	add	r1, lr, #2
   1087c:	159fe600 	ldrne	lr, [pc, #1536]	; 10e84 <CodesDD+0xce4>
   10880:	e6ff1071 	uxth	r1, r1
   10884:	159fc5fc 	ldrne	ip, [pc, #1532]	; 10e88 <CodesDD+0xce8>
   10888:	e1c010bc 	strh	r1, [r0, #12]
   1088c:	1002200e 	andne	r2, r2, lr
   10890:	17dc3002 	ldrbne	r3, [ip, r2]
   10894:	07d53002 	ldrbeq	r3, [r5, r2]
   10898:	1001100e 	andne	r1, r1, lr
   1089c:	17dc2001 	ldrbne	r2, [ip, r1]
   108a0:	07d52001 	ldrbeq	r2, [r5, r1]
   108a4:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   108a8:	e1833402 	orr	r3, r3, r2, lsl #8
   108ac:	e1c030bc 	strh	r3, [r0, #12]
   108b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   108b4:	e1d030b8 	ldrh	r3, [r0, #8]
   108b8:	e1c030bc 	strh	r3, [r0, #12]
   108bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   108c0:	e1d020be 	ldrh	r2, [r0, #14]
   108c4:	e3560000 	cmp	r6, #0
   108c8:	e2821001 	add	r1, r2, #1
   108cc:	e6ff1071 	uxth	r1, r1
   108d0:	e5d0e008 	ldrb	lr, [r0, #8]
   108d4:	0a00100b 	beq	14908 <CodesDD+0x4768>
   108d8:	e59fc5a4 	ldr	ip, [pc, #1444]	; 10e84 <CodesDD+0xce4>
   108dc:	e59f45a4 	ldr	r4, [pc, #1444]	; 10e88 <CodesDD+0xce8>
   108e0:	e002300c 	and	r3, r2, ip
   108e4:	e7d43003 	ldrb	r3, [r4, r3]
   108e8:	e1c010be 	strh	r1, [r0, #14]
   108ec:	e7c5e002 	strb	lr, [r5, r2]
   108f0:	e1d020be 	ldrh	r2, [r0, #14]
   108f4:	e00cc002 	and	ip, ip, r2
   108f8:	e7d4c00c 	ldrb	ip, [r4, ip]
   108fc:	e5d01009 	ldrb	r1, [r0, #9]
   10900:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   10904:	e183340c 	orr	r3, r3, ip, lsl #8
   10908:	e242c001 	sub	ip, r2, #1
   1090c:	e1c0c0be 	strh	ip, [r0, #14]
   10910:	e7c51002 	strb	r1, [r5, r2]
   10914:	e1c030b8 	strh	r3, [r0, #8]
   10918:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1091c:	e5d03000 	ldrb	r3, [r0]
   10920:	e3130004 	tst	r3, #4
   10924:	1a00116c 	bne	14edc <CodesDD+0x4d3c>
   10928:	e3560000 	cmp	r6, #0
   1092c:	e28e1002 	add	r1, lr, #2
   10930:	159fe54c 	ldrne	lr, [pc, #1356]	; 10e84 <CodesDD+0xce4>
   10934:	e6ff1071 	uxth	r1, r1
   10938:	159fc548 	ldrne	ip, [pc, #1352]	; 10e88 <CodesDD+0xce8>
   1093c:	e1c010bc 	strh	r1, [r0, #12]
   10940:	1002200e 	andne	r2, r2, lr
   10944:	17dc3002 	ldrbne	r3, [ip, r2]
   10948:	07d53002 	ldrbeq	r3, [r5, r2]
   1094c:	1001100e 	andne	r1, r1, lr
   10950:	17dc2001 	ldrbne	r2, [ip, r1]
   10954:	07d52001 	ldrbeq	r2, [r5, r1]
   10958:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   1095c:	e1833402 	orr	r3, r3, r2, lsl #8
   10960:	e1c030bc 	strh	r3, [r0, #12]
   10964:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10968:	e1d020be 	ldrh	r2, [r0, #14]
   1096c:	e3560000 	cmp	r6, #0
   10970:	e2823001 	add	r3, r2, #1
   10974:	e6ff3073 	uxth	r3, r3
   10978:	e2821002 	add	r1, r2, #2
   1097c:	e1c030be 	strh	r3, [r0, #14]
   10980:	e6ff1071 	uxth	r1, r1
   10984:	0a000fda 	beq	148f4 <CodesDD+0x4754>
   10988:	e59fe4f4 	ldr	lr, [pc, #1268]	; 10e84 <CodesDD+0xce4>
   1098c:	e59fc4f4 	ldr	ip, [pc, #1268]	; 10e88 <CodesDD+0xce8>
   10990:	e002200e 	and	r2, r2, lr
   10994:	e7dc2002 	ldrb	r2, [ip, r2]
   10998:	e003300e 	and	r3, r3, lr
   1099c:	e5c02008 	strb	r2, [r0, #8]
   109a0:	e1c010be 	strh	r1, [r0, #14]
   109a4:	e7dc3003 	ldrb	r3, [ip, r3]
   109a8:	e5c03009 	strb	r3, [r0, #9]
   109ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   109b0:	e5d03000 	ldrb	r3, [r0]
   109b4:	e3130004 	tst	r3, #4
   109b8:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
   109bc:	e1d020be 	ldrh	r2, [r0, #14]
   109c0:	e241c006 	sub	ip, r1, #6
   109c4:	e2823001 	add	r3, r2, #1
   109c8:	e6ff3073 	uxth	r3, r3
   109cc:	e2821002 	add	r1, r2, #2
   109d0:	e3560000 	cmp	r6, #0
   109d4:	e580c020 	str	ip, [r0, #32]
   109d8:	e1c030be 	strh	r3, [r0, #14]
   109dc:	e6ff1071 	uxth	r1, r1
   109e0:	0a0011cc 	beq	15118 <CodesDD+0x4f78>
   109e4:	e59fe498 	ldr	lr, [pc, #1176]	; 10e84 <CodesDD+0xce4>
   109e8:	e59fc498 	ldr	ip, [pc, #1176]	; 10e88 <CodesDD+0xce8>
   109ec:	e002200e 	and	r2, r2, lr
   109f0:	e7dc2002 	ldrb	r2, [ip, r2]
   109f4:	e003300e 	and	r3, r3, lr
   109f8:	e5c0200c 	strb	r2, [r0, #12]
   109fc:	e1c010be 	strh	r1, [r0, #14]
   10a00:	e7dc3003 	ldrb	r3, [ip, r3]
   10a04:	e5c0300d 	strb	r3, [r0, #13]
   10a08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10a0c:	e1d030be 	ldrh	r3, [r0, #14]
   10a10:	e5d02009 	ldrb	r2, [r0, #9]
   10a14:	e2433001 	sub	r3, r3, #1
   10a18:	e6ff3073 	uxth	r3, r3
   10a1c:	e1c030be 	strh	r3, [r0, #14]
   10a20:	e7c52003 	strb	r2, [r5, r3]
   10a24:	e1d030be 	ldrh	r3, [r0, #14]
   10a28:	e5d02008 	ldrb	r2, [r0, #8]
   10a2c:	e2433001 	sub	r3, r3, #1
   10a30:	e6ff3073 	uxth	r3, r3
   10a34:	e1c030be 	strh	r3, [r0, #14]
   10a38:	e7c52003 	strb	r2, [r5, r3]
   10a3c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10a40:	e3560000 	cmp	r6, #0
   10a44:	11a02882 	lslne	r2, r2, #17
   10a48:	159f3438 	ldrne	r3, [pc, #1080]	; 10e88 <CodesDD+0xce8>
   10a4c:	e28ee002 	add	lr, lr, #2
   10a50:	e1c0e0bc 	strh	lr, [r0, #12]
   10a54:	11a028a2 	lsrne	r2, r2, #17
   10a58:	17d32002 	ldrbne	r2, [r3, r2]
   10a5c:	07d52002 	ldrbeq	r2, [r5, r2]
   10a60:	e5d03001 	ldrb	r3, [r0, #1]
   10a64:	e0022003 	and	r2, r2, r3
   10a68:	e0843002 	add	r3, r4, r2
   10a6c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   10a70:	e5c02001 	strb	r2, [r0, #1]
   10a74:	e3833010 	orr	r3, r3, #16
   10a78:	e5c03000 	strb	r3, [r0]
   10a7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10a80:	e5d03000 	ldrb	r3, [r0]
   10a84:	e28ec003 	add	ip, lr, #3
   10a88:	e3130004 	tst	r3, #4
   10a8c:	e6ffc07c 	uxth	ip, ip
   10a90:	1a001107 	bne	14eb4 <CodesDD+0x4d14>
   10a94:	e3560000 	cmp	r6, #0
   10a98:	e2411007 	sub	r1, r1, #7
   10a9c:	159f43e0 	ldrne	r4, [pc, #992]	; 10e84 <CodesDD+0xce4>
   10aa0:	e28ee002 	add	lr, lr, #2
   10aa4:	e5801020 	str	r1, [r0, #32]
   10aa8:	e6ffe07e 	uxth	lr, lr
   10aac:	159f13d4 	ldrne	r1, [pc, #980]	; 10e88 <CodesDD+0xce8>
   10ab0:	e1c0e0bc 	strh	lr, [r0, #12]
   10ab4:	10022004 	andne	r2, r2, r4
   10ab8:	07d53002 	ldrbeq	r3, [r5, r2]
   10abc:	17d13002 	ldrbne	r3, [r1, r2]
   10ac0:	e1d020be 	ldrh	r2, [r0, #14]
   10ac4:	11c0c0bc 	strhne	ip, [r0, #12]
   10ac8:	e2422001 	sub	r2, r2, #1
   10acc:	01c0c0bc 	strheq	ip, [r0, #12]
   10ad0:	e6ff2072 	uxth	r2, r2
   10ad4:	100ee004 	andne	lr, lr, r4
   10ad8:	e1a0c42c 	lsr	ip, ip, #8
   10adc:	07d5e00e 	ldrbeq	lr, [r5, lr]
   10ae0:	17d1e00e 	ldrbne	lr, [r1, lr]
   10ae4:	e1c020be 	strh	r2, [r0, #14]
   10ae8:	e7c5c002 	strb	ip, [r5, r2]
   10aec:	e1d020be 	ldrh	r2, [r0, #14]
   10af0:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
   10af4:	e5d0c00c 	ldrb	ip, [r0, #12]
   10af8:	e2423001 	sub	r3, r2, #1
   10afc:	e6ff3073 	uxth	r3, r3
   10b00:	e181240e 	orr	r2, r1, lr, lsl #8
   10b04:	e1c030be 	strh	r3, [r0, #14]
   10b08:	e7c5c003 	strb	ip, [r5, r3]
   10b0c:	e1c020bc 	strh	r2, [r0, #12]
   10b10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10b14:	e3560000 	cmp	r6, #0
   10b18:	11a02882 	lslne	r2, r2, #17
   10b1c:	159f3364 	ldrne	r3, [pc, #868]	; 10e88 <CodesDD+0xce8>
   10b20:	e28ee002 	add	lr, lr, #2
   10b24:	e1c0e0bc 	strh	lr, [r0, #12]
   10b28:	11a028a2 	lsrne	r2, r2, #17
   10b2c:	17d32002 	ldrbne	r2, [r3, r2]
   10b30:	07d52002 	ldrbeq	r2, [r5, r2]
   10b34:	e5d03001 	ldrb	r3, [r0, #1]
   10b38:	e0222003 	eor	r2, r2, r3
   10b3c:	e0843002 	add	r3, r4, r2
   10b40:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   10b44:	e5c02001 	strb	r2, [r0, #1]
   10b48:	e5c03000 	strb	r3, [r0]
   10b4c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10b50:	e5d03000 	ldrb	r3, [r0]
   10b54:	e3130004 	tst	r3, #4
   10b58:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   10b5c:	e1d020be 	ldrh	r2, [r0, #14]
   10b60:	e241c006 	sub	ip, r1, #6
   10b64:	e2823001 	add	r3, r2, #1
   10b68:	e6ff3073 	uxth	r3, r3
   10b6c:	e2821002 	add	r1, r2, #2
   10b70:	e3560000 	cmp	r6, #0
   10b74:	e580c020 	str	ip, [r0, #32]
   10b78:	e1c030be 	strh	r3, [r0, #14]
   10b7c:	e6ff1071 	uxth	r1, r1
   10b80:	0a00116e 	beq	15140 <CodesDD+0x4fa0>
   10b84:	e59fe2f8 	ldr	lr, [pc, #760]	; 10e84 <CodesDD+0xce4>
   10b88:	e59fc2f8 	ldr	ip, [pc, #760]	; 10e88 <CodesDD+0xce8>
   10b8c:	e002200e 	and	r2, r2, lr
   10b90:	e7dc2002 	ldrb	r2, [ip, r2]
   10b94:	e003300e 	and	r3, r3, lr
   10b98:	e5c0200c 	strb	r2, [r0, #12]
   10b9c:	e1c010be 	strh	r1, [r0, #14]
   10ba0:	e7dc3003 	ldrb	r3, [ip, r3]
   10ba4:	e5c0300d 	strb	r3, [r0, #13]
   10ba8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10bac:	e3a01028 	mov	r1, #40	; 0x28
   10bb0:	e1d030be 	ldrh	r3, [r0, #14]
   10bb4:	e1a02422 	lsr	r2, r2, #8
   10bb8:	e2433001 	sub	r3, r3, #1
   10bbc:	e6ff3073 	uxth	r3, r3
   10bc0:	e1c030be 	strh	r3, [r0, #14]
   10bc4:	e7c52003 	strb	r2, [r5, r3]
   10bc8:	e1d030be 	ldrh	r3, [r0, #14]
   10bcc:	e5d0200c 	ldrb	r2, [r0, #12]
   10bd0:	e2433001 	sub	r3, r3, #1
   10bd4:	e6ff3073 	uxth	r3, r3
   10bd8:	e1c030be 	strh	r3, [r0, #14]
   10bdc:	e7c52003 	strb	r2, [r5, r3]
   10be0:	e1c010bc 	strh	r1, [r0, #12]
   10be4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10be8:	e5d03000 	ldrb	r3, [r0]
   10bec:	e28ec003 	add	ip, lr, #3
   10bf0:	e3130004 	tst	r3, #4
   10bf4:	e6ffc07c 	uxth	ip, ip
   10bf8:	0a0010cb 	beq	14f2c <CodesDD+0x4d8c>
   10bfc:	e3560000 	cmp	r6, #0
   10c00:	e2411007 	sub	r1, r1, #7
   10c04:	159f4278 	ldrne	r4, [pc, #632]	; 10e84 <CodesDD+0xce4>
   10c08:	e28ee002 	add	lr, lr, #2
   10c0c:	e5801020 	str	r1, [r0, #32]
   10c10:	e6ffe07e 	uxth	lr, lr
   10c14:	159f126c 	ldrne	r1, [pc, #620]	; 10e88 <CodesDD+0xce8>
   10c18:	e1c0e0bc 	strh	lr, [r0, #12]
   10c1c:	10022004 	andne	r2, r2, r4
   10c20:	07d53002 	ldrbeq	r3, [r5, r2]
   10c24:	17d13002 	ldrbne	r3, [r1, r2]
   10c28:	e1d020be 	ldrh	r2, [r0, #14]
   10c2c:	11c0c0bc 	strhne	ip, [r0, #12]
   10c30:	e2422001 	sub	r2, r2, #1
   10c34:	01c0c0bc 	strheq	ip, [r0, #12]
   10c38:	e6ff2072 	uxth	r2, r2
   10c3c:	100ee004 	andne	lr, lr, r4
   10c40:	e1a0c42c 	lsr	ip, ip, #8
   10c44:	07d5e00e 	ldrbeq	lr, [r5, lr]
   10c48:	17d1e00e 	ldrbne	lr, [r1, lr]
   10c4c:	e1c020be 	strh	r2, [r0, #14]
   10c50:	e7c5c002 	strb	ip, [r5, r2]
   10c54:	e1d020be 	ldrh	r2, [r0, #14]
   10c58:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
   10c5c:	e5d0c00c 	ldrb	ip, [r0, #12]
   10c60:	e2423001 	sub	r3, r2, #1
   10c64:	e6ff3073 	uxth	r3, r3
   10c68:	e181240e 	orr	r2, r1, lr, lsl #8
   10c6c:	e1c030be 	strh	r3, [r0, #14]
   10c70:	e7c5c003 	strb	ip, [r5, r3]
   10c74:	e1c020bc 	strh	r2, [r0, #12]
   10c78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10c7c:	e3a01018 	mov	r1, #24
   10c80:	e1d030be 	ldrh	r3, [r0, #14]
   10c84:	e1a02422 	lsr	r2, r2, #8
   10c88:	e2433001 	sub	r3, r3, #1
   10c8c:	e6ff3073 	uxth	r3, r3
   10c90:	e1c030be 	strh	r3, [r0, #14]
   10c94:	e7c52003 	strb	r2, [r5, r3]
   10c98:	e1d030be 	ldrh	r3, [r0, #14]
   10c9c:	e5d0200c 	ldrb	r2, [r0, #12]
   10ca0:	e2433001 	sub	r3, r3, #1
   10ca4:	e6ff3073 	uxth	r3, r3
   10ca8:	e1c030be 	strh	r3, [r0, #14]
   10cac:	e7c52003 	strb	r2, [r5, r3]
   10cb0:	e1c010bc 	strh	r1, [r0, #12]
   10cb4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10cb8:	e3a01008 	mov	r1, #8
   10cbc:	e1d030be 	ldrh	r3, [r0, #14]
   10cc0:	e1a02132 	lsr	r2, r2, r1
   10cc4:	e2433001 	sub	r3, r3, #1
   10cc8:	e6ff3073 	uxth	r3, r3
   10ccc:	e1c030be 	strh	r3, [r0, #14]
   10cd0:	e7c52003 	strb	r2, [r5, r3]
   10cd4:	e1d030be 	ldrh	r3, [r0, #14]
   10cd8:	e5d0200c 	ldrb	r2, [r0, #12]
   10cdc:	e2433001 	sub	r3, r3, #1
   10ce0:	e6ff3073 	uxth	r3, r3
   10ce4:	e1c030be 	strh	r3, [r0, #14]
   10ce8:	e7c52003 	strb	r2, [r5, r3]
   10cec:	e1c010bc 	strh	r1, [r0, #12]
   10cf0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10cf4:	e3560000 	cmp	r6, #0
   10cf8:	11a02882 	lslne	r2, r2, #17
   10cfc:	e28ee002 	add	lr, lr, #2
   10d00:	159f3180 	ldrne	r3, [pc, #384]	; 10e88 <CodesDD+0xce8>
   10d04:	11a028a2 	lsrne	r2, r2, #17
   10d08:	e1c0e0bc 	strh	lr, [r0, #12]
   10d0c:	e5d01000 	ldrb	r1, [r0]
   10d10:	17d32002 	ldrbne	r2, [r3, r2]
   10d14:	e5d03001 	ldrb	r3, [r0, #1]
   10d18:	07d52002 	ldrbeq	r2, [r5, r2]
   10d1c:	e2011001 	and	r1, r1, #1
   10d20:	e0811003 	add	r1, r1, r3
   10d24:	e0811002 	add	r1, r1, r2
   10d28:	e6efc071 	uxtb	ip, r1
   10d2c:	e023e002 	eor	lr, r3, r2
   10d30:	e084300c 	add	r3, r4, ip
   10d34:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   10d38:	e022300c 	eor	r3, r2, ip
   10d3c:	e02e200c 	eor	r2, lr, ip
   10d40:	e1c3300e 	bic	r3, r3, lr
   10d44:	e2022010 	and	r2, r2, #16
   10d48:	e1a032c3 	asr	r3, r3, #5
   10d4c:	e1822004 	orr	r2, r2, r4
   10d50:	e2033004 	and	r3, r3, #4
   10d54:	e1821421 	orr	r1, r2, r1, lsr #8
   10d58:	e1833001 	orr	r3, r3, r1
   10d5c:	e5c03000 	strb	r3, [r0]
   10d60:	e5c0c001 	strb	ip, [r0, #1]
   10d64:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10d68:	e3560000 	cmp	r6, #0
   10d6c:	e28ec002 	add	ip, lr, #2
   10d70:	159f410c 	ldrne	r4, [pc, #268]	; 10e84 <CodesDD+0xce4>
   10d74:	e6ffc07c 	uxth	ip, ip
   10d78:	e28e1003 	add	r1, lr, #3
   10d7c:	159fe104 	ldrne	lr, [pc, #260]	; 10e88 <CodesDD+0xce8>
   10d80:	e1c0c0bc 	strh	ip, [r0, #12]
   10d84:	10022004 	andne	r2, r2, r4
   10d88:	07d53002 	ldrbeq	r3, [r5, r2]
   10d8c:	17de3002 	ldrbne	r3, [lr, r2]
   10d90:	e1d020be 	ldrh	r2, [r0, #14]
   10d94:	e6ff1071 	uxth	r1, r1
   10d98:	e2422001 	sub	r2, r2, #1
   10d9c:	11c010bc 	strhne	r1, [r0, #12]
   10da0:	01c010bc 	strheq	r1, [r0, #12]
   10da4:	e6ff2072 	uxth	r2, r2
   10da8:	100cc004 	andne	ip, ip, r4
   10dac:	e1a01421 	lsr	r1, r1, #8
   10db0:	07d5e00c 	ldrbeq	lr, [r5, ip]
   10db4:	17dee00c 	ldrbne	lr, [lr, ip]
   10db8:	e1c020be 	strh	r2, [r0, #14]
   10dbc:	e7c51002 	strb	r1, [r5, r2]
   10dc0:	e1d020be 	ldrh	r2, [r0, #14]
   10dc4:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
   10dc8:	e5d0c00c 	ldrb	ip, [r0, #12]
   10dcc:	e2423001 	sub	r3, r2, #1
   10dd0:	e6ff3073 	uxth	r3, r3
   10dd4:	e181240e 	orr	r2, r1, lr, lsl #8
   10dd8:	e1c030be 	strh	r3, [r0, #14]
   10ddc:	e7c5c003 	strb	ip, [r5, r3]
   10de0:	e1c020bc 	strh	r2, [r0, #12]
   10de4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10de8:	e5d03000 	ldrb	r3, [r0]
   10dec:	e28ec003 	add	ip, lr, #3
   10df0:	e3130040 	tst	r3, #64	; 0x40
   10df4:	e6ffc07c 	uxth	ip, ip
   10df8:	0a001032 	beq	14ec8 <CodesDD+0x4d28>
   10dfc:	e3560000 	cmp	r6, #0
   10e00:	e2411007 	sub	r1, r1, #7
   10e04:	159f4078 	ldrne	r4, [pc, #120]	; 10e84 <CodesDD+0xce4>
   10e08:	e28ee002 	add	lr, lr, #2
   10e0c:	e5801020 	str	r1, [r0, #32]
   10e10:	e6ffe07e 	uxth	lr, lr
   10e14:	159f106c 	ldrne	r1, [pc, #108]	; 10e88 <CodesDD+0xce8>
   10e18:	e1c0e0bc 	strh	lr, [r0, #12]
   10e1c:	10022004 	andne	r2, r2, r4
   10e20:	07d53002 	ldrbeq	r3, [r5, r2]
   10e24:	17d13002 	ldrbne	r3, [r1, r2]
   10e28:	e1d020be 	ldrh	r2, [r0, #14]
   10e2c:	11c0c0bc 	strhne	ip, [r0, #12]
   10e30:	e2422001 	sub	r2, r2, #1
   10e34:	01c0c0bc 	strheq	ip, [r0, #12]
   10e38:	e6ff2072 	uxth	r2, r2
   10e3c:	100ee004 	andne	lr, lr, r4
   10e40:	e1a0c42c 	lsr	ip, ip, #8
   10e44:	07d5e00e 	ldrbeq	lr, [r5, lr]
   10e48:	17d1e00e 	ldrbne	lr, [r1, lr]
   10e4c:	e1c020be 	strh	r2, [r0, #14]
   10e50:	e7c5c002 	strb	ip, [r5, r2]
   10e54:	e1d020be 	ldrh	r2, [r0, #14]
   10e58:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
   10e5c:	e5d0c00c 	ldrb	ip, [r0, #12]
   10e60:	e2423001 	sub	r3, r2, #1
   10e64:	e6ff3073 	uxth	r3, r3
   10e68:	e181240e 	orr	r2, r1, lr, lsl #8
   10e6c:	e1c030be 	strh	r3, [r0, #14]
   10e70:	e7c5c003 	strb	ip, [r5, r3]
   10e74:	e1c020bc 	strh	r2, [r0, #12]
   10e78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10e7c:	0005cf80 	.word	0x0005cf80
   10e80:	0003c260 	.word	0x0003c260
   10e84:	00007fff 	.word	0x00007fff
   10e88:	00050428 	.word	0x00050428
   10e8c:	e28e3002 	add	r3, lr, #2
   10e90:	e6ff3073 	uxth	r3, r3
   10e94:	e28ec003 	add	ip, lr, #3
   10e98:	e3560000 	cmp	r6, #0
   10e9c:	e1c030bc 	strh	r3, [r0, #12]
   10ea0:	e6ffc07c 	uxth	ip, ip
   10ea4:	e1d070b8 	ldrh	r7, [r0, #8]
   10ea8:	0a000eb0 	beq	14970 <CodesDD+0x47d0>
   10eac:	e51f8030 	ldr	r8, [pc, #-48]	; 10e84 <CodesDD+0xce4>
   10eb0:	e51fe030 	ldr	lr, [pc, #-48]	; 10e88 <CodesDD+0xce8>
   10eb4:	e0022008 	and	r2, r2, r8
   10eb8:	e19e20d2 	ldrsb	r2, [lr, r2]
   10ebc:	e0033008 	and	r3, r3, r8
   10ec0:	e1c0c0bc 	strh	ip, [r0, #12]
   10ec4:	e7de3003 	ldrb	r3, [lr, r3]
   10ec8:	e0877002 	add	r7, r7, r2
   10ecc:	e0842003 	add	r2, r4, r3
   10ed0:	e5d22400 	ldrb	r2, [r2, #1024]	; 0x400
   10ed4:	e2433006 	sub	r3, r3, #6
   10ed8:	e0411002 	sub	r1, r1, r2
   10edc:	e5801020 	str	r1, [r0, #32]
   10ee0:	e6ff2077 	uxth	r2, r7
   10ee4:	e35300f8 	cmp	r3, #248	; 0xf8
   10ee8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   10eec:	eafffdc2 	b	105fc <CodesDD+0x45c>
   10ef0:	00015190 	.word	0x00015190
   10ef4:	000105fc 	.word	0x000105fc
   10ef8:	000105fc 	.word	0x000105fc
   10efc:	000105fc 	.word	0x000105fc
   10f00:	000105fc 	.word	0x000105fc
   10f04:	000105fc 	.word	0x000105fc
   10f08:	000105fc 	.word	0x000105fc
   10f0c:	000105fc 	.word	0x000105fc
   10f10:	000144ac 	.word	0x000144ac
   10f14:	000105fc 	.word	0x000105fc
   10f18:	000105fc 	.word	0x000105fc
   10f1c:	000105fc 	.word	0x000105fc
   10f20:	000105fc 	.word	0x000105fc
   10f24:	000105fc 	.word	0x000105fc
   10f28:	000105fc 	.word	0x000105fc
   10f2c:	000105fc 	.word	0x000105fc
   10f30:	00014328 	.word	0x00014328
   10f34:	000105fc 	.word	0x000105fc
   10f38:	000105fc 	.word	0x000105fc
   10f3c:	000105fc 	.word	0x000105fc
   10f40:	000105fc 	.word	0x000105fc
   10f44:	000105fc 	.word	0x000105fc
   10f48:	000105fc 	.word	0x000105fc
   10f4c:	000105fc 	.word	0x000105fc
   10f50:	00014638 	.word	0x00014638
   10f54:	000105fc 	.word	0x000105fc
   10f58:	000105fc 	.word	0x000105fc
   10f5c:	000105fc 	.word	0x000105fc
   10f60:	000105fc 	.word	0x000105fc
   10f64:	000105fc 	.word	0x000105fc
   10f68:	000105fc 	.word	0x000105fc
   10f6c:	000105fc 	.word	0x000105fc
   10f70:	000143f4 	.word	0x000143f4
   10f74:	000105fc 	.word	0x000105fc
   10f78:	000105fc 	.word	0x000105fc
   10f7c:	000105fc 	.word	0x000105fc
   10f80:	000105fc 	.word	0x000105fc
   10f84:	000105fc 	.word	0x000105fc
   10f88:	000105fc 	.word	0x000105fc
   10f8c:	000105fc 	.word	0x000105fc
   10f90:	00014568 	.word	0x00014568
   10f94:	000105fc 	.word	0x000105fc
   10f98:	000105fc 	.word	0x000105fc
   10f9c:	000105fc 	.word	0x000105fc
   10fa0:	000105fc 	.word	0x000105fc
   10fa4:	000105fc 	.word	0x000105fc
   10fa8:	000105fc 	.word	0x000105fc
   10fac:	000105fc 	.word	0x000105fc
   10fb0:	0001426c 	.word	0x0001426c
   10fb4:	000105fc 	.word	0x000105fc
   10fb8:	000105fc 	.word	0x000105fc
   10fbc:	000105fc 	.word	0x000105fc
   10fc0:	000105fc 	.word	0x000105fc
   10fc4:	000105fc 	.word	0x000105fc
   10fc8:	000105fc 	.word	0x000105fc
   10fcc:	000105fc 	.word	0x000105fc
   10fd0:	000146b4 	.word	0x000146b4
   10fd4:	000105fc 	.word	0x000105fc
   10fd8:	00014450 	.word	0x00014450
   10fdc:	00014450 	.word	0x00014450
   10fe0:	00014450 	.word	0x00014450
   10fe4:	00014450 	.word	0x00014450
   10fe8:	00014450 	.word	0x00014450
   10fec:	00014450 	.word	0x00014450
   10ff0:	00014450 	.word	0x00014450
   10ff4:	00014450 	.word	0x00014450
   10ff8:	000145c8 	.word	0x000145c8
   10ffc:	000145c8 	.word	0x000145c8
   11000:	000145c8 	.word	0x000145c8
   11004:	000145c8 	.word	0x000145c8
   11008:	000145c8 	.word	0x000145c8
   1100c:	000145c8 	.word	0x000145c8
   11010:	000145c8 	.word	0x000145c8
   11014:	000145c8 	.word	0x000145c8
   11018:	000142cc 	.word	0x000142cc
   1101c:	000142cc 	.word	0x000142cc
   11020:	000142cc 	.word	0x000142cc
   11024:	000142cc 	.word	0x000142cc
   11028:	000142cc 	.word	0x000142cc
   1102c:	000142cc 	.word	0x000142cc
   11030:	000142cc 	.word	0x000142cc
   11034:	000142cc 	.word	0x000142cc
   11038:	0001467c 	.word	0x0001467c
   1103c:	0001467c 	.word	0x0001467c
   11040:	0001467c 	.word	0x0001467c
   11044:	0001467c 	.word	0x0001467c
   11048:	0001467c 	.word	0x0001467c
   1104c:	0001467c 	.word	0x0001467c
   11050:	0001467c 	.word	0x0001467c
   11054:	0001467c 	.word	0x0001467c
   11058:	00014398 	.word	0x00014398
   1105c:	00014398 	.word	0x00014398
   11060:	00014398 	.word	0x00014398
   11064:	00014398 	.word	0x00014398
   11068:	00014398 	.word	0x00014398
   1106c:	00014398 	.word	0x00014398
   11070:	00014398 	.word	0x00014398
   11074:	00014398 	.word	0x00014398
   11078:	0001450c 	.word	0x0001450c
   1107c:	0001450c 	.word	0x0001450c
   11080:	0001450c 	.word	0x0001450c
   11084:	0001450c 	.word	0x0001450c
   11088:	0001450c 	.word	0x0001450c
   1108c:	0001450c 	.word	0x0001450c
   11090:	0001450c 	.word	0x0001450c
   11094:	0001450c 	.word	0x0001450c
   11098:	00014210 	.word	0x00014210
   1109c:	00014210 	.word	0x00014210
   110a0:	00014210 	.word	0x00014210
   110a4:	00014210 	.word	0x00014210
   110a8:	00014210 	.word	0x00014210
   110ac:	00014210 	.word	0x00014210
   110b0:	00014210 	.word	0x00014210
   110b4:	00014210 	.word	0x00014210
   110b8:	00014600 	.word	0x00014600
   110bc:	00014600 	.word	0x00014600
   110c0:	00014600 	.word	0x00014600
   110c4:	00014600 	.word	0x00014600
   110c8:	00014600 	.word	0x00014600
   110cc:	00014600 	.word	0x00014600
   110d0:	00014600 	.word	0x00014600
   110d4:	00014600 	.word	0x00014600
   110d8:	000105fc 	.word	0x000105fc
   110dc:	000105fc 	.word	0x000105fc
   110e0:	000105fc 	.word	0x000105fc
   110e4:	000105fc 	.word	0x000105fc
   110e8:	000105fc 	.word	0x000105fc
   110ec:	000105fc 	.word	0x000105fc
   110f0:	00014488 	.word	0x00014488
   110f4:	000105fc 	.word	0x000105fc
   110f8:	000105fc 	.word	0x000105fc
   110fc:	000105fc 	.word	0x000105fc
   11100:	000105fc 	.word	0x000105fc
   11104:	000105fc 	.word	0x000105fc
   11108:	000105fc 	.word	0x000105fc
   1110c:	000105fc 	.word	0x000105fc
   11110:	00014544 	.word	0x00014544
   11114:	000105fc 	.word	0x000105fc
   11118:	000105fc 	.word	0x000105fc
   1111c:	000105fc 	.word	0x000105fc
   11120:	000105fc 	.word	0x000105fc
   11124:	000105fc 	.word	0x000105fc
   11128:	000105fc 	.word	0x000105fc
   1112c:	000105fc 	.word	0x000105fc
   11130:	00014304 	.word	0x00014304
   11134:	000105fc 	.word	0x000105fc
   11138:	000105fc 	.word	0x000105fc
   1113c:	000105fc 	.word	0x000105fc
   11140:	000105fc 	.word	0x000105fc
   11144:	000105fc 	.word	0x000105fc
   11148:	000105fc 	.word	0x000105fc
   1114c:	000105fc 	.word	0x000105fc
   11150:	000145a4 	.word	0x000145a4
   11154:	000105fc 	.word	0x000105fc
   11158:	000105fc 	.word	0x000105fc
   1115c:	000105fc 	.word	0x000105fc
   11160:	000105fc 	.word	0x000105fc
   11164:	000105fc 	.word	0x000105fc
   11168:	000105fc 	.word	0x000105fc
   1116c:	000105fc 	.word	0x000105fc
   11170:	000143d0 	.word	0x000143d0
   11174:	000105fc 	.word	0x000105fc
   11178:	000105fc 	.word	0x000105fc
   1117c:	000105fc 	.word	0x000105fc
   11180:	000105fc 	.word	0x000105fc
   11184:	000105fc 	.word	0x000105fc
   11188:	000105fc 	.word	0x000105fc
   1118c:	000105fc 	.word	0x000105fc
   11190:	000144e8 	.word	0x000144e8
   11194:	000105fc 	.word	0x000105fc
   11198:	000105fc 	.word	0x000105fc
   1119c:	000105fc 	.word	0x000105fc
   111a0:	000105fc 	.word	0x000105fc
   111a4:	000105fc 	.word	0x000105fc
   111a8:	000105fc 	.word	0x000105fc
   111ac:	000105fc 	.word	0x000105fc
   111b0:	00014248 	.word	0x00014248
   111b4:	000105fc 	.word	0x000105fc
   111b8:	000105fc 	.word	0x000105fc
   111bc:	000105fc 	.word	0x000105fc
   111c0:	000105fc 	.word	0x000105fc
   111c4:	000105fc 	.word	0x000105fc
   111c8:	000105fc 	.word	0x000105fc
   111cc:	000105fc 	.word	0x000105fc
   111d0:	0001442c 	.word	0x0001442c
   111d4:	000105fc 	.word	0x000105fc
   111d8:	000105fc 	.word	0x000105fc
   111dc:	000105fc 	.word	0x000105fc
   111e0:	000105fc 	.word	0x000105fc
   111e4:	000105fc 	.word	0x000105fc
   111e8:	000105fc 	.word	0x000105fc
   111ec:	000105fc 	.word	0x000105fc
   111f0:	000142a8 	.word	0x000142a8
   111f4:	000105fc 	.word	0x000105fc
   111f8:	000105fc 	.word	0x000105fc
   111fc:	000105fc 	.word	0x000105fc
   11200:	000105fc 	.word	0x000105fc
   11204:	000105fc 	.word	0x000105fc
   11208:	000105fc 	.word	0x000105fc
   1120c:	000105fc 	.word	0x000105fc
   11210:	00014374 	.word	0x00014374
   11214:	000105fc 	.word	0x000105fc
   11218:	000105fc 	.word	0x000105fc
   1121c:	000105fc 	.word	0x000105fc
   11220:	000105fc 	.word	0x000105fc
   11224:	000105fc 	.word	0x000105fc
   11228:	000105fc 	.word	0x000105fc
   1122c:	000105fc 	.word	0x000105fc
   11230:	000141c4 	.word	0x000141c4
   11234:	000105fc 	.word	0x000105fc
   11238:	000105fc 	.word	0x000105fc
   1123c:	000105fc 	.word	0x000105fc
   11240:	000105fc 	.word	0x000105fc
   11244:	000105fc 	.word	0x000105fc
   11248:	000105fc 	.word	0x000105fc
   1124c:	000105fc 	.word	0x000105fc
   11250:	000141a0 	.word	0x000141a0
   11254:	000105fc 	.word	0x000105fc
   11258:	000105fc 	.word	0x000105fc
   1125c:	000105fc 	.word	0x000105fc
   11260:	000105fc 	.word	0x000105fc
   11264:	000105fc 	.word	0x000105fc
   11268:	000105fc 	.word	0x000105fc
   1126c:	000105fc 	.word	0x000105fc
   11270:	0001417c 	.word	0x0001417c
   11274:	000105fc 	.word	0x000105fc
   11278:	000105fc 	.word	0x000105fc
   1127c:	000105fc 	.word	0x000105fc
   11280:	000105fc 	.word	0x000105fc
   11284:	000105fc 	.word	0x000105fc
   11288:	000105fc 	.word	0x000105fc
   1128c:	000105fc 	.word	0x000105fc
   11290:	00014158 	.word	0x00014158
   11294:	000105fc 	.word	0x000105fc
   11298:	000105fc 	.word	0x000105fc
   1129c:	000105fc 	.word	0x000105fc
   112a0:	000105fc 	.word	0x000105fc
   112a4:	000105fc 	.word	0x000105fc
   112a8:	000105fc 	.word	0x000105fc
   112ac:	000105fc 	.word	0x000105fc
   112b0:	00014134 	.word	0x00014134
   112b4:	000105fc 	.word	0x000105fc
   112b8:	000105fc 	.word	0x000105fc
   112bc:	000105fc 	.word	0x000105fc
   112c0:	000105fc 	.word	0x000105fc
   112c4:	000105fc 	.word	0x000105fc
   112c8:	000105fc 	.word	0x000105fc
   112cc:	000105fc 	.word	0x000105fc
   112d0:	000141e8 	.word	0x000141e8
   112d4:	e1d020be 	ldrh	r2, [r0, #14]
   112d8:	e3560000 	cmp	r6, #0
   112dc:	e2823001 	add	r3, r2, #1
   112e0:	e6ff3073 	uxth	r3, r3
   112e4:	e2821002 	add	r1, r2, #2
   112e8:	e1c030be 	strh	r3, [r0, #14]
   112ec:	e6ff1071 	uxth	r1, r1
   112f0:	0a000d99 	beq	1495c <CodesDD+0x47bc>
   112f4:	e51fe478 	ldr	lr, [pc, #-1144]	; 10e84 <CodesDD+0xce4>
   112f8:	e51fc478 	ldr	ip, [pc, #-1144]	; 10e88 <CodesDD+0xce8>
   112fc:	e002200e 	and	r2, r2, lr
   11300:	e7dc2002 	ldrb	r2, [ip, r2]
   11304:	e003300e 	and	r3, r3, lr
   11308:	e5c0200c 	strb	r2, [r0, #12]
   1130c:	e1c010be 	strh	r1, [r0, #14]
   11310:	e7dc3003 	ldrb	r3, [ip, r3]
   11314:	e5c0300d 	strb	r3, [r0, #13]
   11318:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1131c:	e5d03000 	ldrb	r3, [r0]
   11320:	e3130040 	tst	r3, #64	; 0x40
   11324:	0a000ee4 	beq	14ebc <CodesDD+0x4d1c>
   11328:	e3560000 	cmp	r6, #0
   1132c:	e28e1002 	add	r1, lr, #2
   11330:	151fe4b4 	ldrne	lr, [pc, #-1204]	; 10e84 <CodesDD+0xce4>
   11334:	e6ff1071 	uxth	r1, r1
   11338:	151fc4b8 	ldrne	ip, [pc, #-1208]	; 10e88 <CodesDD+0xce8>
   1133c:	e1c010bc 	strh	r1, [r0, #12]
   11340:	1002200e 	andne	r2, r2, lr
   11344:	17dc3002 	ldrbne	r3, [ip, r2]
   11348:	07d53002 	ldrbeq	r3, [r5, r2]
   1134c:	1001100e 	andne	r1, r1, lr
   11350:	17dc2001 	ldrbne	r2, [ip, r1]
   11354:	07d52001 	ldrbeq	r2, [r5, r1]
   11358:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   1135c:	e1833402 	orr	r3, r3, r2, lsl #8
   11360:	e1c030bc 	strh	r3, [r0, #12]
   11364:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11368:	e5d03000 	ldrb	r3, [r0]
   1136c:	e3130040 	tst	r3, #64	; 0x40
   11370:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   11374:	e1d020be 	ldrh	r2, [r0, #14]
   11378:	e241c006 	sub	ip, r1, #6
   1137c:	e2823001 	add	r3, r2, #1
   11380:	e6ff3073 	uxth	r3, r3
   11384:	e2821002 	add	r1, r2, #2
   11388:	e3560000 	cmp	r6, #0
   1138c:	e580c020 	str	ip, [r0, #32]
   11390:	e1c030be 	strh	r3, [r0, #14]
   11394:	e6ff1071 	uxth	r1, r1
   11398:	0a000f6d 	beq	15154 <CodesDD+0x4fb4>
   1139c:	e51fe520 	ldr	lr, [pc, #-1312]	; 10e84 <CodesDD+0xce4>
   113a0:	e51fc520 	ldr	ip, [pc, #-1312]	; 10e88 <CodesDD+0xce8>
   113a4:	e002200e 	and	r2, r2, lr
   113a8:	e7dc2002 	ldrb	r2, [ip, r2]
   113ac:	e003300e 	and	r3, r3, lr
   113b0:	e5c0200c 	strb	r2, [r0, #12]
   113b4:	e1c010be 	strh	r1, [r0, #14]
   113b8:	e7dc3003 	ldrb	r3, [ip, r3]
   113bc:	e5c0300d 	strb	r3, [r0, #13]
   113c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   113c4:	e3a01000 	mov	r1, #0
   113c8:	e1d030be 	ldrh	r3, [r0, #14]
   113cc:	e1a02422 	lsr	r2, r2, #8
   113d0:	e2433001 	sub	r3, r3, #1
   113d4:	e6ff3073 	uxth	r3, r3
   113d8:	e1c030be 	strh	r3, [r0, #14]
   113dc:	e7c52003 	strb	r2, [r5, r3]
   113e0:	e1d030be 	ldrh	r3, [r0, #14]
   113e4:	e5d0200c 	ldrb	r2, [r0, #12]
   113e8:	e2433001 	sub	r3, r3, #1
   113ec:	e6ff3073 	uxth	r3, r3
   113f0:	e1c030be 	strh	r3, [r0, #14]
   113f4:	e7c52003 	strb	r2, [r5, r3]
   113f8:	e1c010bc 	strh	r1, [r0, #12]
   113fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11400:	e3a01030 	mov	r1, #48	; 0x30
   11404:	e1d030be 	ldrh	r3, [r0, #14]
   11408:	e1a02422 	lsr	r2, r2, #8
   1140c:	e2433001 	sub	r3, r3, #1
   11410:	e6ff3073 	uxth	r3, r3
   11414:	e1c030be 	strh	r3, [r0, #14]
   11418:	e7c52003 	strb	r2, [r5, r3]
   1141c:	e1d030be 	ldrh	r3, [r0, #14]
   11420:	e5d0200c 	ldrb	r2, [r0, #12]
   11424:	e2433001 	sub	r3, r3, #1
   11428:	e6ff3073 	uxth	r3, r3
   1142c:	e1c030be 	strh	r3, [r0, #14]
   11430:	e7c52003 	strb	r2, [r5, r3]
   11434:	e1c010bc 	strh	r1, [r0, #12]
   11438:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1143c:	e28ee002 	add	lr, lr, #2
   11440:	e3560000 	cmp	r6, #0
   11444:	e1c0e0bc 	strh	lr, [r0, #12]
   11448:	e1d030b8 	ldrh	r3, [r0, #8]
   1144c:	0a000cdf 	beq	147d0 <CodesDD+0x4630>
   11450:	e51fc5d4 	ldr	ip, [pc, #-1492]	; 10e84 <CodesDD+0xce4>
   11454:	e51f15d4 	ldr	r1, [pc, #-1492]	; 10e88 <CodesDD+0xce8>
   11458:	e002200c 	and	r2, r2, ip
   1145c:	e19120d2 	ldrsb	r2, [r1, r2]
   11460:	e0833002 	add	r3, r3, r2
   11464:	e003300c 	and	r3, r3, ip
   11468:	e7d13003 	ldrb	r3, [r1, r3]
   1146c:	e5c03001 	strb	r3, [r0, #1]
   11470:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11474:	e5d03008 	ldrb	r3, [r0, #8]
   11478:	e5c03001 	strb	r3, [r0, #1]
   1147c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11480:	e3a03042 	mov	r3, #66	; 0x42
   11484:	e5c03000 	strb	r3, [r0]
   11488:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1148c:	e28ee002 	add	lr, lr, #2
   11490:	e3560000 	cmp	r6, #0
   11494:	e1c0e0bc 	strh	lr, [r0, #12]
   11498:	e1d030b8 	ldrh	r3, [r0, #8]
   1149c:	0a000d29 	beq	14948 <CodesDD+0x47a8>
   114a0:	e51fc624 	ldr	ip, [pc, #-1572]	; 10e84 <CodesDD+0xce4>
   114a4:	e51f1624 	ldr	r1, [pc, #-1572]	; 10e88 <CodesDD+0xce8>
   114a8:	e002200c 	and	r2, r2, ip
   114ac:	e19120d2 	ldrsb	r2, [r1, r2]
   114b0:	e0833002 	add	r3, r3, r2
   114b4:	e003300c 	and	r3, r3, ip
   114b8:	e7d11003 	ldrb	r1, [r1, r3]
   114bc:	e5d0e001 	ldrb	lr, [r0, #1]
   114c0:	e04ec001 	sub	ip, lr, r1
   114c4:	e6ffc07c 	uxth	ip, ip
   114c8:	e6ef207c 	uxtb	r2, ip
   114cc:	e0843002 	add	r3, r4, r2
   114d0:	e021100e 	eor	r1, r1, lr
   114d4:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   114d8:	e02ee002 	eor	lr, lr, r2
   114dc:	e0213002 	eor	r3, r1, r2
   114e0:	e3844002 	orr	r4, r4, #2
   114e4:	e001200e 	and	r2, r1, lr
   114e8:	e2033010 	and	r3, r3, #16
   114ec:	e1a0142c 	lsr	r1, ip, #8
   114f0:	e1a022a2 	lsr	r2, r2, #5
   114f4:	e1833004 	orr	r3, r3, r4
   114f8:	e2611000 	rsb	r1, r1, #0
   114fc:	e2022004 	and	r2, r2, #4
   11500:	e1833001 	orr	r3, r3, r1
   11504:	e1833002 	orr	r3, r3, r2
   11508:	e5c03000 	strb	r3, [r0]
   1150c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11510:	e5d0e001 	ldrb	lr, [r0, #1]
   11514:	e5d01008 	ldrb	r1, [r0, #8]
   11518:	e04ec001 	sub	ip, lr, r1
   1151c:	e6ffc07c 	uxth	ip, ip
   11520:	e6ef207c 	uxtb	r2, ip
   11524:	e0843002 	add	r3, r4, r2
   11528:	e021100e 	eor	r1, r1, lr
   1152c:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   11530:	e02ee002 	eor	lr, lr, r2
   11534:	e0213002 	eor	r3, r1, r2
   11538:	e3844002 	orr	r4, r4, #2
   1153c:	e001200e 	and	r2, r1, lr
   11540:	e2033010 	and	r3, r3, #16
   11544:	e1a0142c 	lsr	r1, ip, #8
   11548:	e1a022a2 	lsr	r2, r2, #5
   1154c:	e1833004 	orr	r3, r3, r4
   11550:	e2611000 	rsb	r1, r1, #0
   11554:	e2022004 	and	r2, r2, #4
   11558:	e1833001 	orr	r3, r3, r1
   1155c:	e1833002 	orr	r3, r3, r2
   11560:	e5c03000 	strb	r3, [r0]
   11564:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11568:	e5d0e001 	ldrb	lr, [r0, #1]
   1156c:	e5d01009 	ldrb	r1, [r0, #9]
   11570:	e04ec001 	sub	ip, lr, r1
   11574:	e6ffc07c 	uxth	ip, ip
   11578:	e6ef207c 	uxtb	r2, ip
   1157c:	e0843002 	add	r3, r4, r2
   11580:	e021100e 	eor	r1, r1, lr
   11584:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   11588:	e02ee002 	eor	lr, lr, r2
   1158c:	e0213002 	eor	r3, r1, r2
   11590:	e3844002 	orr	r4, r4, #2
   11594:	e001200e 	and	r2, r1, lr
   11598:	e2033010 	and	r3, r3, #16
   1159c:	e1a0142c 	lsr	r1, ip, #8
   115a0:	e1a022a2 	lsr	r2, r2, #5
   115a4:	e1833004 	orr	r3, r3, r4
   115a8:	e2611000 	rsb	r1, r1, #0
   115ac:	e2022004 	and	r2, r2, #4
   115b0:	e1833001 	orr	r3, r3, r1
   115b4:	e1833002 	orr	r3, r3, r2
   115b8:	e5c03000 	strb	r3, [r0]
   115bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   115c0:	e5d0e001 	ldrb	lr, [r0, #1]
   115c4:	e5d01004 	ldrb	r1, [r0, #4]
   115c8:	e04ec001 	sub	ip, lr, r1
   115cc:	e6ffc07c 	uxth	ip, ip
   115d0:	e6ef207c 	uxtb	r2, ip
   115d4:	e0843002 	add	r3, r4, r2
   115d8:	e021100e 	eor	r1, r1, lr
   115dc:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   115e0:	e02ee002 	eor	lr, lr, r2
   115e4:	e0213002 	eor	r3, r1, r2
   115e8:	e3844002 	orr	r4, r4, #2
   115ec:	e001200e 	and	r2, r1, lr
   115f0:	e2033010 	and	r3, r3, #16
   115f4:	e1a0142c 	lsr	r1, ip, #8
   115f8:	e1a022a2 	lsr	r2, r2, #5
   115fc:	e1833004 	orr	r3, r3, r4
   11600:	e2611000 	rsb	r1, r1, #0
   11604:	e2022004 	and	r2, r2, #4
   11608:	e1833001 	orr	r3, r3, r1
   1160c:	e1833002 	orr	r3, r3, r2
   11610:	e5c03000 	strb	r3, [r0]
   11614:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11618:	e5d0e001 	ldrb	lr, [r0, #1]
   1161c:	e5d01005 	ldrb	r1, [r0, #5]
   11620:	e04ec001 	sub	ip, lr, r1
   11624:	e6ffc07c 	uxth	ip, ip
   11628:	e6ef207c 	uxtb	r2, ip
   1162c:	e0843002 	add	r3, r4, r2
   11630:	e021100e 	eor	r1, r1, lr
   11634:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   11638:	e02ee002 	eor	lr, lr, r2
   1163c:	e0213002 	eor	r3, r1, r2
   11640:	e3844002 	orr	r4, r4, #2
   11644:	e001200e 	and	r2, r1, lr
   11648:	e2033010 	and	r3, r3, #16
   1164c:	e1a0142c 	lsr	r1, ip, #8
   11650:	e1a022a2 	lsr	r2, r2, #5
   11654:	e1833004 	orr	r3, r3, r4
   11658:	e2611000 	rsb	r1, r1, #0
   1165c:	e2022004 	and	r2, r2, #4
   11660:	e1833001 	orr	r3, r3, r1
   11664:	e1833002 	orr	r3, r3, r2
   11668:	e5c03000 	strb	r3, [r0]
   1166c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11670:	e5d0e001 	ldrb	lr, [r0, #1]
   11674:	e5d01002 	ldrb	r1, [r0, #2]
   11678:	e04ec001 	sub	ip, lr, r1
   1167c:	e6ffc07c 	uxth	ip, ip
   11680:	e6ef207c 	uxtb	r2, ip
   11684:	e0843002 	add	r3, r4, r2
   11688:	e021100e 	eor	r1, r1, lr
   1168c:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   11690:	e02ee002 	eor	lr, lr, r2
   11694:	e0213002 	eor	r3, r1, r2
   11698:	e3844002 	orr	r4, r4, #2
   1169c:	e001200e 	and	r2, r1, lr
   116a0:	e2033010 	and	r3, r3, #16
   116a4:	e1a0142c 	lsr	r1, ip, #8
   116a8:	e1a022a2 	lsr	r2, r2, #5
   116ac:	e1833004 	orr	r3, r3, r4
   116b0:	e2611000 	rsb	r1, r1, #0
   116b4:	e2022004 	and	r2, r2, #4
   116b8:	e1833001 	orr	r3, r3, r1
   116bc:	e1833002 	orr	r3, r3, r2
   116c0:	e5c03000 	strb	r3, [r0]
   116c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   116c8:	e5d0e001 	ldrb	lr, [r0, #1]
   116cc:	e5d01003 	ldrb	r1, [r0, #3]
   116d0:	e04ec001 	sub	ip, lr, r1
   116d4:	e6ffc07c 	uxth	ip, ip
   116d8:	e6ef207c 	uxtb	r2, ip
   116dc:	e0843002 	add	r3, r4, r2
   116e0:	e021100e 	eor	r1, r1, lr
   116e4:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   116e8:	e02ee002 	eor	lr, lr, r2
   116ec:	e0213002 	eor	r3, r1, r2
   116f0:	e3844002 	orr	r4, r4, #2
   116f4:	e001200e 	and	r2, r1, lr
   116f8:	e2033010 	and	r3, r3, #16
   116fc:	e1a0142c 	lsr	r1, ip, #8
   11700:	e1a022a2 	lsr	r2, r2, #5
   11704:	e1833004 	orr	r3, r3, r4
   11708:	e2611000 	rsb	r1, r1, #0
   1170c:	e2022004 	and	r2, r2, #4
   11710:	e1833001 	orr	r3, r3, r1
   11714:	e1833002 	orr	r3, r3, r2
   11718:	e5c03000 	strb	r3, [r0]
   1171c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11720:	e5d03001 	ldrb	r3, [r0, #1]
   11724:	e0843003 	add	r3, r4, r3
   11728:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   1172c:	e5c03000 	strb	r3, [r0]
   11730:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11734:	e28ee002 	add	lr, lr, #2
   11738:	e3560000 	cmp	r6, #0
   1173c:	e1c0e0bc 	strh	lr, [r0, #12]
   11740:	e1d030b8 	ldrh	r3, [r0, #8]
   11744:	0a000c75 	beq	14920 <CodesDD+0x4780>
   11748:	e51fc8cc 	ldr	ip, [pc, #-2252]	; 10e84 <CodesDD+0xce4>
   1174c:	e51f18cc 	ldr	r1, [pc, #-2252]	; 10e88 <CodesDD+0xce8>
   11750:	e002200c 	and	r2, r2, ip
   11754:	e19120d2 	ldrsb	r2, [r1, r2]
   11758:	e0833002 	add	r3, r3, r2
   1175c:	e003300c 	and	r3, r3, ip
   11760:	e7d12003 	ldrb	r2, [r1, r3]
   11764:	e5d03001 	ldrb	r3, [r0, #1]
   11768:	e1822003 	orr	r2, r2, r3
   1176c:	e0843002 	add	r3, r4, r2
   11770:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11774:	e5c02001 	strb	r2, [r0, #1]
   11778:	e5c03000 	strb	r3, [r0]
   1177c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11780:	e5d02001 	ldrb	r2, [r0, #1]
   11784:	e5d03008 	ldrb	r3, [r0, #8]
   11788:	e1822003 	orr	r2, r2, r3
   1178c:	e0843002 	add	r3, r4, r2
   11790:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11794:	e5c02001 	strb	r2, [r0, #1]
   11798:	e5c03000 	strb	r3, [r0]
   1179c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   117a0:	e5d02001 	ldrb	r2, [r0, #1]
   117a4:	e5d03004 	ldrb	r3, [r0, #4]
   117a8:	e1822003 	orr	r2, r2, r3
   117ac:	e0843002 	add	r3, r4, r2
   117b0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   117b4:	e5c02001 	strb	r2, [r0, #1]
   117b8:	e5c03000 	strb	r3, [r0]
   117bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   117c0:	e5d02001 	ldrb	r2, [r0, #1]
   117c4:	e5d03005 	ldrb	r3, [r0, #5]
   117c8:	e1822003 	orr	r2, r2, r3
   117cc:	e0843002 	add	r3, r4, r2
   117d0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   117d4:	e5c02001 	strb	r2, [r0, #1]
   117d8:	e5c03000 	strb	r3, [r0]
   117dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   117e0:	e5d02001 	ldrb	r2, [r0, #1]
   117e4:	e5d03002 	ldrb	r3, [r0, #2]
   117e8:	e1822003 	orr	r2, r2, r3
   117ec:	e0843002 	add	r3, r4, r2
   117f0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   117f4:	e5c02001 	strb	r2, [r0, #1]
   117f8:	e5c03000 	strb	r3, [r0]
   117fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11800:	e5d02001 	ldrb	r2, [r0, #1]
   11804:	e5d03003 	ldrb	r3, [r0, #3]
   11808:	e1822003 	orr	r2, r2, r3
   1180c:	e0843002 	add	r3, r4, r2
   11810:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11814:	e5c02001 	strb	r2, [r0, #1]
   11818:	e5c03000 	strb	r3, [r0]
   1181c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11820:	e5d02001 	ldrb	r2, [r0, #1]
   11824:	e5d03009 	ldrb	r3, [r0, #9]
   11828:	e1822003 	orr	r2, r2, r3
   1182c:	e0843002 	add	r3, r4, r2
   11830:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11834:	e5c02001 	strb	r2, [r0, #1]
   11838:	e5c03000 	strb	r3, [r0]
   1183c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11840:	e3a03044 	mov	r3, #68	; 0x44
   11844:	e1c030b0 	strh	r3, [r0]
   11848:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1184c:	e28ee002 	add	lr, lr, #2
   11850:	e3560000 	cmp	r6, #0
   11854:	e1c0e0bc 	strh	lr, [r0, #12]
   11858:	e1d030b8 	ldrh	r3, [r0, #8]
   1185c:	0a000c15 	beq	148b8 <CodesDD+0x4718>
   11860:	e51fc9e4 	ldr	ip, [pc, #-2532]	; 10e84 <CodesDD+0xce4>
   11864:	e51f19e4 	ldr	r1, [pc, #-2532]	; 10e88 <CodesDD+0xce8>
   11868:	e002200c 	and	r2, r2, ip
   1186c:	e19120d2 	ldrsb	r2, [r1, r2]
   11870:	e0833002 	add	r3, r3, r2
   11874:	e003300c 	and	r3, r3, ip
   11878:	e7d12003 	ldrb	r2, [r1, r3]
   1187c:	e5d03001 	ldrb	r3, [r0, #1]
   11880:	e0222003 	eor	r2, r2, r3
   11884:	e0843002 	add	r3, r4, r2
   11888:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   1188c:	e5c02001 	strb	r2, [r0, #1]
   11890:	e5c03000 	strb	r3, [r0]
   11894:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11898:	e5d02001 	ldrb	r2, [r0, #1]
   1189c:	e5d03008 	ldrb	r3, [r0, #8]
   118a0:	e0222003 	eor	r2, r2, r3
   118a4:	e0843002 	add	r3, r4, r2
   118a8:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   118ac:	e5c02001 	strb	r2, [r0, #1]
   118b0:	e5c03000 	strb	r3, [r0]
   118b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   118b8:	e5d03001 	ldrb	r3, [r0, #1]
   118bc:	e0843003 	add	r3, r4, r3
   118c0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   118c4:	e3833010 	orr	r3, r3, #16
   118c8:	e5c03000 	strb	r3, [r0]
   118cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   118d0:	e28ee002 	add	lr, lr, #2
   118d4:	e3560000 	cmp	r6, #0
   118d8:	e1c0e0bc 	strh	lr, [r0, #12]
   118dc:	e1d030b8 	ldrh	r3, [r0, #8]
   118e0:	0a000c13 	beq	14934 <CodesDD+0x4794>
   118e4:	e51fca68 	ldr	ip, [pc, #-2664]	; 10e84 <CodesDD+0xce4>
   118e8:	e51f1a68 	ldr	r1, [pc, #-2664]	; 10e88 <CodesDD+0xce8>
   118ec:	e002200c 	and	r2, r2, ip
   118f0:	e19120d2 	ldrsb	r2, [r1, r2]
   118f4:	e0833002 	add	r3, r3, r2
   118f8:	e003300c 	and	r3, r3, ip
   118fc:	e7d12003 	ldrb	r2, [r1, r3]
   11900:	e5d03001 	ldrb	r3, [r0, #1]
   11904:	e0022003 	and	r2, r2, r3
   11908:	e0843002 	add	r3, r4, r2
   1190c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11910:	e5c02001 	strb	r2, [r0, #1]
   11914:	e3833010 	orr	r3, r3, #16
   11918:	e5c03000 	strb	r3, [r0]
   1191c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11920:	e5d02001 	ldrb	r2, [r0, #1]
   11924:	e5d03008 	ldrb	r3, [r0, #8]
   11928:	e0022003 	and	r2, r2, r3
   1192c:	e0843002 	add	r3, r4, r2
   11930:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11934:	e5c02001 	strb	r2, [r0, #1]
   11938:	e3833010 	orr	r3, r3, #16
   1193c:	e5c03000 	strb	r3, [r0]
   11940:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11944:	e5d02001 	ldrb	r2, [r0, #1]
   11948:	e5d03009 	ldrb	r3, [r0, #9]
   1194c:	e0022003 	and	r2, r2, r3
   11950:	e0843002 	add	r3, r4, r2
   11954:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11958:	e5c02001 	strb	r2, [r0, #1]
   1195c:	e3833010 	orr	r3, r3, #16
   11960:	e5c03000 	strb	r3, [r0]
   11964:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11968:	e5d02001 	ldrb	r2, [r0, #1]
   1196c:	e5d03004 	ldrb	r3, [r0, #4]
   11970:	e0022003 	and	r2, r2, r3
   11974:	e0843002 	add	r3, r4, r2
   11978:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   1197c:	e5c02001 	strb	r2, [r0, #1]
   11980:	e3833010 	orr	r3, r3, #16
   11984:	e5c03000 	strb	r3, [r0]
   11988:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1198c:	e5d02001 	ldrb	r2, [r0, #1]
   11990:	e5d03005 	ldrb	r3, [r0, #5]
   11994:	e0022003 	and	r2, r2, r3
   11998:	e0843002 	add	r3, r4, r2
   1199c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   119a0:	e5c02001 	strb	r2, [r0, #1]
   119a4:	e3833010 	orr	r3, r3, #16
   119a8:	e5c03000 	strb	r3, [r0]
   119ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   119b0:	e5d02001 	ldrb	r2, [r0, #1]
   119b4:	e5d03002 	ldrb	r3, [r0, #2]
   119b8:	e0022003 	and	r2, r2, r3
   119bc:	e0843002 	add	r3, r4, r2
   119c0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   119c4:	e5c02001 	strb	r2, [r0, #1]
   119c8:	e3833010 	orr	r3, r3, #16
   119cc:	e5c03000 	strb	r3, [r0]
   119d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   119d4:	e5d02001 	ldrb	r2, [r0, #1]
   119d8:	e5d03003 	ldrb	r3, [r0, #3]
   119dc:	e0022003 	and	r2, r2, r3
   119e0:	e0843002 	add	r3, r4, r2
   119e4:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   119e8:	e5c02001 	strb	r2, [r0, #1]
   119ec:	e3833010 	orr	r3, r3, #16
   119f0:	e5c03000 	strb	r3, [r0]
   119f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   119f8:	e5d02001 	ldrb	r2, [r0, #1]
   119fc:	e5d03004 	ldrb	r3, [r0, #4]
   11a00:	e0222003 	eor	r2, r2, r3
   11a04:	e0843002 	add	r3, r4, r2
   11a08:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11a0c:	e5c02001 	strb	r2, [r0, #1]
   11a10:	e5c03000 	strb	r3, [r0]
   11a14:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11a18:	e5d02001 	ldrb	r2, [r0, #1]
   11a1c:	e5d03005 	ldrb	r3, [r0, #5]
   11a20:	e0222003 	eor	r2, r2, r3
   11a24:	e0843002 	add	r3, r4, r2
   11a28:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11a2c:	e5c02001 	strb	r2, [r0, #1]
   11a30:	e5c03000 	strb	r3, [r0]
   11a34:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11a38:	e5d02001 	ldrb	r2, [r0, #1]
   11a3c:	e5d03002 	ldrb	r3, [r0, #2]
   11a40:	e0222003 	eor	r2, r2, r3
   11a44:	e0843002 	add	r3, r4, r2
   11a48:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11a4c:	e5c02001 	strb	r2, [r0, #1]
   11a50:	e5c03000 	strb	r3, [r0]
   11a54:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11a58:	e5d02001 	ldrb	r2, [r0, #1]
   11a5c:	e5d03003 	ldrb	r3, [r0, #3]
   11a60:	e0222003 	eor	r2, r2, r3
   11a64:	e0843002 	add	r3, r4, r2
   11a68:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11a6c:	e5c02001 	strb	r2, [r0, #1]
   11a70:	e5c03000 	strb	r3, [r0]
   11a74:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11a78:	e5d02001 	ldrb	r2, [r0, #1]
   11a7c:	e5d03009 	ldrb	r3, [r0, #9]
   11a80:	e0222003 	eor	r2, r2, r3
   11a84:	e0843002 	add	r3, r4, r2
   11a88:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   11a8c:	e5c02001 	strb	r2, [r0, #1]
   11a90:	e5c03000 	strb	r3, [r0]
   11a94:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11a98:	e5d03000 	ldrb	r3, [r0]
   11a9c:	e2133001 	ands	r3, r3, #1
   11aa0:	13e03000 	mvnne	r3, #0
   11aa4:	e6ff3073 	uxth	r3, r3
   11aa8:	e6ef2073 	uxtb	r2, r3
   11aac:	e1a03423 	lsr	r3, r3, #8
   11ab0:	e2633000 	rsb	r3, r3, #0
   11ab4:	e0844002 	add	r4, r4, r2
   11ab8:	e202c010 	and	ip, r2, #16
   11abc:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   11ac0:	e183300c 	orr	r3, r3, ip
   11ac4:	e3833002 	orr	r3, r3, #2
   11ac8:	e1833001 	orr	r3, r3, r1
   11acc:	e5c02001 	strb	r2, [r0, #1]
   11ad0:	e5c03000 	strb	r3, [r0]
   11ad4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11ad8:	e28ee002 	add	lr, lr, #2
   11adc:	e3560000 	cmp	r6, #0
   11ae0:	e1c0e0bc 	strh	lr, [r0, #12]
   11ae4:	e1d030b8 	ldrh	r3, [r0, #8]
   11ae8:	0a000b77 	beq	148cc <CodesDD+0x472c>
   11aec:	e51fcc70 	ldr	ip, [pc, #-3184]	; 10e84 <CodesDD+0xce4>
   11af0:	e51f1c70 	ldr	r1, [pc, #-3184]	; 10e88 <CodesDD+0xce8>
   11af4:	e002200c 	and	r2, r2, ip
   11af8:	e19120d2 	ldrsb	r2, [r1, r2]
   11afc:	e0833002 	add	r3, r3, r2
   11b00:	e003300c 	and	r3, r3, ip
   11b04:	e7d1e003 	ldrb	lr, [r1, r3]
   11b08:	e5d01001 	ldrb	r1, [r0, #1]
   11b0c:	e5d03000 	ldrb	r3, [r0]
   11b10:	e041200e 	sub	r2, r1, lr
   11b14:	e2033001 	and	r3, r3, #1
   11b18:	e0422003 	sub	r2, r2, r3
   11b1c:	e6ff2072 	uxth	r2, r2
   11b20:	e6efc072 	uxtb	ip, r2
   11b24:	e1a03422 	lsr	r3, r2, #8
   11b28:	e084400c 	add	r4, r4, ip
   11b2c:	e02ee001 	eor	lr, lr, r1
   11b30:	e02c2001 	eor	r2, ip, r1
   11b34:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   11b38:	e2633000 	rsb	r3, r3, #0
   11b3c:	e002200e 	and	r2, r2, lr
   11b40:	e3833002 	orr	r3, r3, #2
   11b44:	e02c100e 	eor	r1, ip, lr
   11b48:	e1a022a2 	lsr	r2, r2, #5
   11b4c:	e1833004 	orr	r3, r3, r4
   11b50:	e2011010 	and	r1, r1, #16
   11b54:	e2022004 	and	r2, r2, #4
   11b58:	e1833001 	orr	r3, r3, r1
   11b5c:	e1833002 	orr	r3, r3, r2
   11b60:	e5c03000 	strb	r3, [r0]
   11b64:	e5c0c001 	strb	ip, [r0, #1]
   11b68:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11b6c:	e5d01001 	ldrb	r1, [r0, #1]
   11b70:	e5d0e008 	ldrb	lr, [r0, #8]
   11b74:	e5d03000 	ldrb	r3, [r0]
   11b78:	e041200e 	sub	r2, r1, lr
   11b7c:	e2033001 	and	r3, r3, #1
   11b80:	e0422003 	sub	r2, r2, r3
   11b84:	e6ff2072 	uxth	r2, r2
   11b88:	e6efc072 	uxtb	ip, r2
   11b8c:	e1a03422 	lsr	r3, r2, #8
   11b90:	e084400c 	add	r4, r4, ip
   11b94:	e02ee001 	eor	lr, lr, r1
   11b98:	e02c2001 	eor	r2, ip, r1
   11b9c:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   11ba0:	e2633000 	rsb	r3, r3, #0
   11ba4:	e002200e 	and	r2, r2, lr
   11ba8:	e3833002 	orr	r3, r3, #2
   11bac:	e02c100e 	eor	r1, ip, lr
   11bb0:	e1a022a2 	lsr	r2, r2, #5
   11bb4:	e1833004 	orr	r3, r3, r4
   11bb8:	e2011010 	and	r1, r1, #16
   11bbc:	e2022004 	and	r2, r2, #4
   11bc0:	e1833001 	orr	r3, r3, r1
   11bc4:	e1833002 	orr	r3, r3, r2
   11bc8:	e5c03000 	strb	r3, [r0]
   11bcc:	e5c0c001 	strb	ip, [r0, #1]
   11bd0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11bd4:	e5d01001 	ldrb	r1, [r0, #1]
   11bd8:	e5d0e009 	ldrb	lr, [r0, #9]
   11bdc:	e5d03000 	ldrb	r3, [r0]
   11be0:	e041200e 	sub	r2, r1, lr
   11be4:	e2033001 	and	r3, r3, #1
   11be8:	e0422003 	sub	r2, r2, r3
   11bec:	e6ff2072 	uxth	r2, r2
   11bf0:	e6efc072 	uxtb	ip, r2
   11bf4:	e1a03422 	lsr	r3, r2, #8
   11bf8:	e084400c 	add	r4, r4, ip
   11bfc:	e02ee001 	eor	lr, lr, r1
   11c00:	e021200c 	eor	r2, r1, ip
   11c04:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   11c08:	e2633000 	rsb	r3, r3, #0
   11c0c:	e002200e 	and	r2, r2, lr
   11c10:	e3833002 	orr	r3, r3, #2
   11c14:	e02e100c 	eor	r1, lr, ip
   11c18:	e1a022a2 	lsr	r2, r2, #5
   11c1c:	e1833004 	orr	r3, r3, r4
   11c20:	e2011010 	and	r1, r1, #16
   11c24:	e2022004 	and	r2, r2, #4
   11c28:	e1833001 	orr	r3, r3, r1
   11c2c:	e1833002 	orr	r3, r3, r2
   11c30:	e5c03000 	strb	r3, [r0]
   11c34:	e5c0c001 	strb	ip, [r0, #1]
   11c38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11c3c:	e5d01001 	ldrb	r1, [r0, #1]
   11c40:	e5d0e004 	ldrb	lr, [r0, #4]
   11c44:	e5d03000 	ldrb	r3, [r0]
   11c48:	e041200e 	sub	r2, r1, lr
   11c4c:	e2033001 	and	r3, r3, #1
   11c50:	e0422003 	sub	r2, r2, r3
   11c54:	e6ff2072 	uxth	r2, r2
   11c58:	e6efc072 	uxtb	ip, r2
   11c5c:	e1a03422 	lsr	r3, r2, #8
   11c60:	e084400c 	add	r4, r4, ip
   11c64:	e02ee001 	eor	lr, lr, r1
   11c68:	e021200c 	eor	r2, r1, ip
   11c6c:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   11c70:	e2633000 	rsb	r3, r3, #0
   11c74:	e002200e 	and	r2, r2, lr
   11c78:	e3833002 	orr	r3, r3, #2
   11c7c:	e02e100c 	eor	r1, lr, ip
   11c80:	e1a022a2 	lsr	r2, r2, #5
   11c84:	e1833004 	orr	r3, r3, r4
   11c88:	e2011010 	and	r1, r1, #16
   11c8c:	e2022004 	and	r2, r2, #4
   11c90:	e1833001 	orr	r3, r3, r1
   11c94:	e1833002 	orr	r3, r3, r2
   11c98:	e5c03000 	strb	r3, [r0]
   11c9c:	e5c0c001 	strb	ip, [r0, #1]
   11ca0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11ca4:	e5d01001 	ldrb	r1, [r0, #1]
   11ca8:	e5d0e005 	ldrb	lr, [r0, #5]
   11cac:	e5d03000 	ldrb	r3, [r0]
   11cb0:	e041200e 	sub	r2, r1, lr
   11cb4:	e2033001 	and	r3, r3, #1
   11cb8:	e0422003 	sub	r2, r2, r3
   11cbc:	e6ff2072 	uxth	r2, r2
   11cc0:	e6efc072 	uxtb	ip, r2
   11cc4:	e1a03422 	lsr	r3, r2, #8
   11cc8:	e084400c 	add	r4, r4, ip
   11ccc:	e02ee001 	eor	lr, lr, r1
   11cd0:	e021200c 	eor	r2, r1, ip
   11cd4:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   11cd8:	e2633000 	rsb	r3, r3, #0
   11cdc:	e002200e 	and	r2, r2, lr
   11ce0:	e3833002 	orr	r3, r3, #2
   11ce4:	e02e100c 	eor	r1, lr, ip
   11ce8:	e1a022a2 	lsr	r2, r2, #5
   11cec:	e1833004 	orr	r3, r3, r4
   11cf0:	e2011010 	and	r1, r1, #16
   11cf4:	e2022004 	and	r2, r2, #4
   11cf8:	e1833001 	orr	r3, r3, r1
   11cfc:	e1833002 	orr	r3, r3, r2
   11d00:	e5c03000 	strb	r3, [r0]
   11d04:	e5c0c001 	strb	ip, [r0, #1]
   11d08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11d0c:	e5d01001 	ldrb	r1, [r0, #1]
   11d10:	e5d0e002 	ldrb	lr, [r0, #2]
   11d14:	e5d03000 	ldrb	r3, [r0]
   11d18:	e041200e 	sub	r2, r1, lr
   11d1c:	e2033001 	and	r3, r3, #1
   11d20:	e0422003 	sub	r2, r2, r3
   11d24:	e6ff2072 	uxth	r2, r2
   11d28:	e6efc072 	uxtb	ip, r2
   11d2c:	e1a03422 	lsr	r3, r2, #8
   11d30:	e084400c 	add	r4, r4, ip
   11d34:	e02ee001 	eor	lr, lr, r1
   11d38:	e021200c 	eor	r2, r1, ip
   11d3c:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   11d40:	e2633000 	rsb	r3, r3, #0
   11d44:	e002200e 	and	r2, r2, lr
   11d48:	e3833002 	orr	r3, r3, #2
   11d4c:	e02e100c 	eor	r1, lr, ip
   11d50:	e1a022a2 	lsr	r2, r2, #5
   11d54:	e1833004 	orr	r3, r3, r4
   11d58:	e2011010 	and	r1, r1, #16
   11d5c:	e2022004 	and	r2, r2, #4
   11d60:	e1833001 	orr	r3, r3, r1
   11d64:	e1833002 	orr	r3, r3, r2
   11d68:	e5c03000 	strb	r3, [r0]
   11d6c:	e5c0c001 	strb	ip, [r0, #1]
   11d70:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11d74:	e5d01001 	ldrb	r1, [r0, #1]
   11d78:	e5d0e003 	ldrb	lr, [r0, #3]
   11d7c:	e5d03000 	ldrb	r3, [r0]
   11d80:	e041200e 	sub	r2, r1, lr
   11d84:	e2033001 	and	r3, r3, #1
   11d88:	e0422003 	sub	r2, r2, r3
   11d8c:	e6ff2072 	uxth	r2, r2
   11d90:	e6efc072 	uxtb	ip, r2
   11d94:	e1a03422 	lsr	r3, r2, #8
   11d98:	e084400c 	add	r4, r4, ip
   11d9c:	e02ee001 	eor	lr, lr, r1
   11da0:	e02c2001 	eor	r2, ip, r1
   11da4:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   11da8:	e2633000 	rsb	r3, r3, #0
   11dac:	e002200e 	and	r2, r2, lr
   11db0:	e3833002 	orr	r3, r3, #2
   11db4:	e02c100e 	eor	r1, ip, lr
   11db8:	e1a022a2 	lsr	r2, r2, #5
   11dbc:	e1833004 	orr	r3, r3, r4
   11dc0:	e2011010 	and	r1, r1, #16
   11dc4:	e2022004 	and	r2, r2, #4
   11dc8:	e1833001 	orr	r3, r3, r1
   11dcc:	e1833002 	orr	r3, r3, r2
   11dd0:	e5c03000 	strb	r3, [r0]
   11dd4:	e5c0c001 	strb	ip, [r0, #1]
   11dd8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11ddc:	e3a03042 	mov	r3, #66	; 0x42
   11de0:	e1c030b0 	strh	r3, [r0]
   11de4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11de8:	e28ee002 	add	lr, lr, #2
   11dec:	e3560000 	cmp	r6, #0
   11df0:	e1c0e0bc 	strh	lr, [r0, #12]
   11df4:	e1d030b8 	ldrh	r3, [r0, #8]
   11df8:	0a000a9f 	beq	1487c <CodesDD+0x46dc>
   11dfc:	e59fce80 	ldr	ip, [pc, #3712]	; 12c84 <CodesDD+0x2ae4>
   11e00:	e59f1e80 	ldr	r1, [pc, #3712]	; 12c88 <CodesDD+0x2ae8>
   11e04:	e002200c 	and	r2, r2, ip
   11e08:	e19120d2 	ldrsb	r2, [r1, r2]
   11e0c:	e0833002 	add	r3, r3, r2
   11e10:	e003300c 	and	r3, r3, ip
   11e14:	e7d12003 	ldrb	r2, [r1, r3]
   11e18:	e5d01001 	ldrb	r1, [r0, #1]
   11e1c:	e041c002 	sub	ip, r1, r2
   11e20:	e6ffc07c 	uxth	ip, ip
   11e24:	e6efe07c 	uxtb	lr, ip
   11e28:	e084300e 	add	r3, r4, lr
   11e2c:	e0222001 	eor	r2, r2, r1
   11e30:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   11e34:	e021300e 	eor	r3, r1, lr
   11e38:	e022100e 	eor	r1, r2, lr
   11e3c:	e0033002 	and	r3, r3, r2
   11e40:	e3844002 	orr	r4, r4, #2
   11e44:	e2012010 	and	r2, r1, #16
   11e48:	e1a0142c 	lsr	r1, ip, #8
   11e4c:	e1a032a3 	lsr	r3, r3, #5
   11e50:	e1822004 	orr	r2, r2, r4
   11e54:	e2611000 	rsb	r1, r1, #0
   11e58:	e2033004 	and	r3, r3, #4
   11e5c:	e1822001 	orr	r2, r2, r1
   11e60:	e1823003 	orr	r3, r2, r3
   11e64:	e5c03000 	strb	r3, [r0]
   11e68:	e5c0e001 	strb	lr, [r0, #1]
   11e6c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11e70:	e5d01001 	ldrb	r1, [r0, #1]
   11e74:	e5d02008 	ldrb	r2, [r0, #8]
   11e78:	e041c002 	sub	ip, r1, r2
   11e7c:	e6ffc07c 	uxth	ip, ip
   11e80:	e6efe07c 	uxtb	lr, ip
   11e84:	e084300e 	add	r3, r4, lr
   11e88:	e0222001 	eor	r2, r2, r1
   11e8c:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   11e90:	e021300e 	eor	r3, r1, lr
   11e94:	e022100e 	eor	r1, r2, lr
   11e98:	e0033002 	and	r3, r3, r2
   11e9c:	e3844002 	orr	r4, r4, #2
   11ea0:	e2012010 	and	r2, r1, #16
   11ea4:	e1a0142c 	lsr	r1, ip, #8
   11ea8:	e1a032a3 	lsr	r3, r3, #5
   11eac:	e1822004 	orr	r2, r2, r4
   11eb0:	e2611000 	rsb	r1, r1, #0
   11eb4:	e2033004 	and	r3, r3, #4
   11eb8:	e1822001 	orr	r2, r2, r1
   11ebc:	e1823003 	orr	r3, r2, r3
   11ec0:	e5c03000 	strb	r3, [r0]
   11ec4:	e5c0e001 	strb	lr, [r0, #1]
   11ec8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11ecc:	e5d01000 	ldrb	r1, [r0]
   11ed0:	e5d02001 	ldrb	r2, [r0, #1]
   11ed4:	e2011001 	and	r1, r1, #1
   11ed8:	e0811082 	add	r1, r1, r2, lsl #1
   11edc:	e6efc071 	uxtb	ip, r1
   11ee0:	e084300c 	add	r3, r4, ip
   11ee4:	e5d3e300 	ldrb	lr, [r3, #768]	; 0x300
   11ee8:	e02c3002 	eor	r3, ip, r2
   11eec:	e2012010 	and	r2, r1, #16
   11ef0:	e1a032a3 	lsr	r3, r3, #5
   11ef4:	e1822421 	orr	r2, r2, r1, lsr #8
   11ef8:	e2033004 	and	r3, r3, #4
   11efc:	e182200e 	orr	r2, r2, lr
   11f00:	e1823003 	orr	r3, r2, r3
   11f04:	e5c0c001 	strb	ip, [r0, #1]
   11f08:	e5c03000 	strb	r3, [r0]
   11f0c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11f10:	e28ee002 	add	lr, lr, #2
   11f14:	e3560000 	cmp	r6, #0
   11f18:	e1c0e0bc 	strh	lr, [r0, #12]
   11f1c:	e1d030b8 	ldrh	r3, [r0, #8]
   11f20:	0a000a5a 	beq	14890 <CodesDD+0x46f0>
   11f24:	e59fcd58 	ldr	ip, [pc, #3416]	; 12c84 <CodesDD+0x2ae4>
   11f28:	e59f1d58 	ldr	r1, [pc, #3416]	; 12c88 <CodesDD+0x2ae8>
   11f2c:	e002200c 	and	r2, r2, ip
   11f30:	e19120d2 	ldrsb	r2, [r1, r2]
   11f34:	e0833002 	add	r3, r3, r2
   11f38:	e003300c 	and	r3, r3, ip
   11f3c:	e7d12003 	ldrb	r2, [r1, r3]
   11f40:	e5d01000 	ldrb	r1, [r0]
   11f44:	e5d03001 	ldrb	r3, [r0, #1]
   11f48:	e2011001 	and	r1, r1, #1
   11f4c:	e0811003 	add	r1, r1, r3
   11f50:	e0811002 	add	r1, r1, r2
   11f54:	e6efc071 	uxtb	ip, r1
   11f58:	e023e002 	eor	lr, r3, r2
   11f5c:	e084300c 	add	r3, r4, ip
   11f60:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   11f64:	e02c3002 	eor	r3, ip, r2
   11f68:	e02c200e 	eor	r2, ip, lr
   11f6c:	e1c3300e 	bic	r3, r3, lr
   11f70:	e2022010 	and	r2, r2, #16
   11f74:	e1a032c3 	asr	r3, r3, #5
   11f78:	e1822004 	orr	r2, r2, r4
   11f7c:	e2033004 	and	r3, r3, #4
   11f80:	e1821421 	orr	r1, r2, r1, lsr #8
   11f84:	e1833001 	orr	r3, r3, r1
   11f88:	e5c03000 	strb	r3, [r0]
   11f8c:	e5c0c001 	strb	ip, [r0, #1]
   11f90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11f94:	e5d03001 	ldrb	r3, [r0, #1]
   11f98:	e5d02008 	ldrb	r2, [r0, #8]
   11f9c:	e5d01000 	ldrb	r1, [r0]
   11fa0:	e083e002 	add	lr, r3, r2
   11fa4:	e2011001 	and	r1, r1, #1
   11fa8:	e081e00e 	add	lr, r1, lr
   11fac:	e6efc07e 	uxtb	ip, lr
   11fb0:	e0231002 	eor	r1, r3, r2
   11fb4:	e084300c 	add	r3, r4, ip
   11fb8:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   11fbc:	e022300c 	eor	r3, r2, ip
   11fc0:	e021200c 	eor	r2, r1, ip
   11fc4:	e1c33001 	bic	r3, r3, r1
   11fc8:	e2022010 	and	r2, r2, #16
   11fcc:	e1a032c3 	asr	r3, r3, #5
   11fd0:	e1822004 	orr	r2, r2, r4
   11fd4:	e2033004 	and	r3, r3, #4
   11fd8:	e182242e 	orr	r2, r2, lr, lsr #8
   11fdc:	e1833002 	orr	r3, r3, r2
   11fe0:	e5c03000 	strb	r3, [r0]
   11fe4:	e5c0c001 	strb	ip, [r0, #1]
   11fe8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11fec:	e5d03001 	ldrb	r3, [r0, #1]
   11ff0:	e5d02009 	ldrb	r2, [r0, #9]
   11ff4:	e5d01000 	ldrb	r1, [r0]
   11ff8:	e083e002 	add	lr, r3, r2
   11ffc:	e2011001 	and	r1, r1, #1
   12000:	e081e00e 	add	lr, r1, lr
   12004:	e6efc07e 	uxtb	ip, lr
   12008:	e0231002 	eor	r1, r3, r2
   1200c:	e084300c 	add	r3, r4, ip
   12010:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   12014:	e022300c 	eor	r3, r2, ip
   12018:	e021200c 	eor	r2, r1, ip
   1201c:	e1c33001 	bic	r3, r3, r1
   12020:	e2022010 	and	r2, r2, #16
   12024:	e1a032c3 	asr	r3, r3, #5
   12028:	e1822004 	orr	r2, r2, r4
   1202c:	e2033004 	and	r3, r3, #4
   12030:	e182242e 	orr	r2, r2, lr, lsr #8
   12034:	e1833002 	orr	r3, r3, r2
   12038:	e5c03000 	strb	r3, [r0]
   1203c:	e5c0c001 	strb	ip, [r0, #1]
   12040:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12044:	e5d03001 	ldrb	r3, [r0, #1]
   12048:	e5d02004 	ldrb	r2, [r0, #4]
   1204c:	e5d01000 	ldrb	r1, [r0]
   12050:	e083e002 	add	lr, r3, r2
   12054:	e2011001 	and	r1, r1, #1
   12058:	e081e00e 	add	lr, r1, lr
   1205c:	e6efc07e 	uxtb	ip, lr
   12060:	e0231002 	eor	r1, r3, r2
   12064:	e084300c 	add	r3, r4, ip
   12068:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   1206c:	e02c3002 	eor	r3, ip, r2
   12070:	e02c2001 	eor	r2, ip, r1
   12074:	e1c33001 	bic	r3, r3, r1
   12078:	e2022010 	and	r2, r2, #16
   1207c:	e1a032c3 	asr	r3, r3, #5
   12080:	e1822004 	orr	r2, r2, r4
   12084:	e2033004 	and	r3, r3, #4
   12088:	e182242e 	orr	r2, r2, lr, lsr #8
   1208c:	e1833002 	orr	r3, r3, r2
   12090:	e5c03000 	strb	r3, [r0]
   12094:	e5c0c001 	strb	ip, [r0, #1]
   12098:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1209c:	e5d03001 	ldrb	r3, [r0, #1]
   120a0:	e5d02005 	ldrb	r2, [r0, #5]
   120a4:	e5d01000 	ldrb	r1, [r0]
   120a8:	e083e002 	add	lr, r3, r2
   120ac:	e2011001 	and	r1, r1, #1
   120b0:	e081e00e 	add	lr, r1, lr
   120b4:	e6efc07e 	uxtb	ip, lr
   120b8:	e0231002 	eor	r1, r3, r2
   120bc:	e084300c 	add	r3, r4, ip
   120c0:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   120c4:	e02c3002 	eor	r3, ip, r2
   120c8:	e02c2001 	eor	r2, ip, r1
   120cc:	e1c33001 	bic	r3, r3, r1
   120d0:	e2022010 	and	r2, r2, #16
   120d4:	e1a032c3 	asr	r3, r3, #5
   120d8:	e1822004 	orr	r2, r2, r4
   120dc:	e2033004 	and	r3, r3, #4
   120e0:	e182242e 	orr	r2, r2, lr, lsr #8
   120e4:	e1833002 	orr	r3, r3, r2
   120e8:	e5c03000 	strb	r3, [r0]
   120ec:	e5c0c001 	strb	ip, [r0, #1]
   120f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   120f4:	e5d03001 	ldrb	r3, [r0, #1]
   120f8:	e5d02002 	ldrb	r2, [r0, #2]
   120fc:	e5d01000 	ldrb	r1, [r0]
   12100:	e083e002 	add	lr, r3, r2
   12104:	e2011001 	and	r1, r1, #1
   12108:	e081e00e 	add	lr, r1, lr
   1210c:	e6efc07e 	uxtb	ip, lr
   12110:	e0231002 	eor	r1, r3, r2
   12114:	e084300c 	add	r3, r4, ip
   12118:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   1211c:	e02c3002 	eor	r3, ip, r2
   12120:	e02c2001 	eor	r2, ip, r1
   12124:	e1c33001 	bic	r3, r3, r1
   12128:	e2022010 	and	r2, r2, #16
   1212c:	e1a032c3 	asr	r3, r3, #5
   12130:	e1822004 	orr	r2, r2, r4
   12134:	e2033004 	and	r3, r3, #4
   12138:	e182242e 	orr	r2, r2, lr, lsr #8
   1213c:	e1833002 	orr	r3, r3, r2
   12140:	e5c03000 	strb	r3, [r0]
   12144:	e5c0c001 	strb	ip, [r0, #1]
   12148:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1214c:	e5d03001 	ldrb	r3, [r0, #1]
   12150:	e5d02003 	ldrb	r2, [r0, #3]
   12154:	e5d01000 	ldrb	r1, [r0]
   12158:	e083e002 	add	lr, r3, r2
   1215c:	e2011001 	and	r1, r1, #1
   12160:	e081e00e 	add	lr, r1, lr
   12164:	e6efc07e 	uxtb	ip, lr
   12168:	e0231002 	eor	r1, r3, r2
   1216c:	e084300c 	add	r3, r4, ip
   12170:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   12174:	e022300c 	eor	r3, r2, ip
   12178:	e021200c 	eor	r2, r1, ip
   1217c:	e1c33001 	bic	r3, r3, r1
   12180:	e2022010 	and	r2, r2, #16
   12184:	e1a032c3 	asr	r3, r3, #5
   12188:	e1822004 	orr	r2, r2, r4
   1218c:	e2033004 	and	r3, r3, #4
   12190:	e182242e 	orr	r2, r2, lr, lsr #8
   12194:	e1833002 	orr	r3, r3, r2
   12198:	e5c03000 	strb	r3, [r0]
   1219c:	e5c0c001 	strb	ip, [r0, #1]
   121a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   121a4:	e5d02001 	ldrb	r2, [r0, #1]
   121a8:	e1a0c082 	lsl	ip, r2, #1
   121ac:	e6ef107c 	uxtb	r1, ip
   121b0:	e0843001 	add	r3, r4, r1
   121b4:	e5d3e300 	ldrb	lr, [r3, #768]	; 0x300
   121b8:	e0223001 	eor	r3, r2, r1
   121bc:	e20c2010 	and	r2, ip, #16
   121c0:	e1a032a3 	lsr	r3, r3, #5
   121c4:	e182242c 	orr	r2, r2, ip, lsr #8
   121c8:	e2033004 	and	r3, r3, #4
   121cc:	e182200e 	orr	r2, r2, lr
   121d0:	e1823003 	orr	r3, r2, r3
   121d4:	e5c01001 	strb	r1, [r0, #1]
   121d8:	e5c03000 	strb	r3, [r0]
   121dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   121e0:	e28ee002 	add	lr, lr, #2
   121e4:	e3560000 	cmp	r6, #0
   121e8:	e1c0e0bc 	strh	lr, [r0, #12]
   121ec:	e1d030b8 	ldrh	r3, [r0, #8]
   121f0:	0a0009ab 	beq	148a4 <CodesDD+0x4704>
   121f4:	e59fca88 	ldr	ip, [pc, #2696]	; 12c84 <CodesDD+0x2ae4>
   121f8:	e59f1a88 	ldr	r1, [pc, #2696]	; 12c88 <CodesDD+0x2ae8>
   121fc:	e002200c 	and	r2, r2, ip
   12200:	e19120d2 	ldrsb	r2, [r1, r2]
   12204:	e0833002 	add	r3, r3, r2
   12208:	e003300c 	and	r3, r3, ip
   1220c:	e7d13003 	ldrb	r3, [r1, r3]
   12210:	e5d01001 	ldrb	r1, [r0, #1]
   12214:	e081e003 	add	lr, r1, r3
   12218:	e6efc07e 	uxtb	ip, lr
   1221c:	e0211003 	eor	r1, r1, r3
   12220:	e021200c 	eor	r2, r1, ip
   12224:	e023300c 	eor	r3, r3, ip
   12228:	e084400c 	add	r4, r4, ip
   1222c:	e1c33001 	bic	r3, r3, r1
   12230:	e2022010 	and	r2, r2, #16
   12234:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   12238:	e1a032c3 	asr	r3, r3, #5
   1223c:	e182242e 	orr	r2, r2, lr, lsr #8
   12240:	e2033004 	and	r3, r3, #4
   12244:	e1822001 	orr	r2, r2, r1
   12248:	e1833002 	orr	r3, r3, r2
   1224c:	e5c03000 	strb	r3, [r0]
   12250:	e5c0c001 	strb	ip, [r0, #1]
   12254:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12258:	e5d01001 	ldrb	r1, [r0, #1]
   1225c:	e5d03008 	ldrb	r3, [r0, #8]
   12260:	e081e003 	add	lr, r1, r3
   12264:	e6efc07e 	uxtb	ip, lr
   12268:	e0211003 	eor	r1, r1, r3
   1226c:	e021200c 	eor	r2, r1, ip
   12270:	e023300c 	eor	r3, r3, ip
   12274:	e084400c 	add	r4, r4, ip
   12278:	e1c33001 	bic	r3, r3, r1
   1227c:	e2022010 	and	r2, r2, #16
   12280:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   12284:	e1a032c3 	asr	r3, r3, #5
   12288:	e182242e 	orr	r2, r2, lr, lsr #8
   1228c:	e2033004 	and	r3, r3, #4
   12290:	e1822001 	orr	r2, r2, r1
   12294:	e1833002 	orr	r3, r3, r2
   12298:	e5c03000 	strb	r3, [r0]
   1229c:	e5c0c001 	strb	ip, [r0, #1]
   122a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   122a4:	e5d01001 	ldrb	r1, [r0, #1]
   122a8:	e5d03009 	ldrb	r3, [r0, #9]
   122ac:	e081e003 	add	lr, r1, r3
   122b0:	e6efc07e 	uxtb	ip, lr
   122b4:	e0211003 	eor	r1, r1, r3
   122b8:	e021200c 	eor	r2, r1, ip
   122bc:	e023300c 	eor	r3, r3, ip
   122c0:	e084400c 	add	r4, r4, ip
   122c4:	e1c33001 	bic	r3, r3, r1
   122c8:	e2022010 	and	r2, r2, #16
   122cc:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   122d0:	e1a032c3 	asr	r3, r3, #5
   122d4:	e182242e 	orr	r2, r2, lr, lsr #8
   122d8:	e2033004 	and	r3, r3, #4
   122dc:	e1822001 	orr	r2, r2, r1
   122e0:	e1833002 	orr	r3, r3, r2
   122e4:	e5c03000 	strb	r3, [r0]
   122e8:	e5c0c001 	strb	ip, [r0, #1]
   122ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   122f0:	e5d01001 	ldrb	r1, [r0, #1]
   122f4:	e5d03004 	ldrb	r3, [r0, #4]
   122f8:	e081e003 	add	lr, r1, r3
   122fc:	e6efc07e 	uxtb	ip, lr
   12300:	e0211003 	eor	r1, r1, r3
   12304:	e021200c 	eor	r2, r1, ip
   12308:	e023300c 	eor	r3, r3, ip
   1230c:	e084400c 	add	r4, r4, ip
   12310:	e1c33001 	bic	r3, r3, r1
   12314:	e2022010 	and	r2, r2, #16
   12318:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   1231c:	e1a032c3 	asr	r3, r3, #5
   12320:	e182242e 	orr	r2, r2, lr, lsr #8
   12324:	e2033004 	and	r3, r3, #4
   12328:	e1822001 	orr	r2, r2, r1
   1232c:	e1833002 	orr	r3, r3, r2
   12330:	e5c03000 	strb	r3, [r0]
   12334:	e5c0c001 	strb	ip, [r0, #1]
   12338:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1233c:	e5d01001 	ldrb	r1, [r0, #1]
   12340:	e5d03005 	ldrb	r3, [r0, #5]
   12344:	e081e003 	add	lr, r1, r3
   12348:	e6efc07e 	uxtb	ip, lr
   1234c:	e0211003 	eor	r1, r1, r3
   12350:	e021200c 	eor	r2, r1, ip
   12354:	e023300c 	eor	r3, r3, ip
   12358:	e084400c 	add	r4, r4, ip
   1235c:	e1c33001 	bic	r3, r3, r1
   12360:	e2022010 	and	r2, r2, #16
   12364:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   12368:	e1a032c3 	asr	r3, r3, #5
   1236c:	e182242e 	orr	r2, r2, lr, lsr #8
   12370:	e2033004 	and	r3, r3, #4
   12374:	e1822001 	orr	r2, r2, r1
   12378:	e1833002 	orr	r3, r3, r2
   1237c:	e5c03000 	strb	r3, [r0]
   12380:	e5c0c001 	strb	ip, [r0, #1]
   12384:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12388:	e5d01001 	ldrb	r1, [r0, #1]
   1238c:	e5d03002 	ldrb	r3, [r0, #2]
   12390:	e081e003 	add	lr, r1, r3
   12394:	e6efc07e 	uxtb	ip, lr
   12398:	e0211003 	eor	r1, r1, r3
   1239c:	e021200c 	eor	r2, r1, ip
   123a0:	e023300c 	eor	r3, r3, ip
   123a4:	e084400c 	add	r4, r4, ip
   123a8:	e1c33001 	bic	r3, r3, r1
   123ac:	e2022010 	and	r2, r2, #16
   123b0:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   123b4:	e1a032c3 	asr	r3, r3, #5
   123b8:	e182242e 	orr	r2, r2, lr, lsr #8
   123bc:	e2033004 	and	r3, r3, #4
   123c0:	e1822001 	orr	r2, r2, r1
   123c4:	e1833002 	orr	r3, r3, r2
   123c8:	e5c03000 	strb	r3, [r0]
   123cc:	e5c0c001 	strb	ip, [r0, #1]
   123d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   123d4:	e5d01001 	ldrb	r1, [r0, #1]
   123d8:	e5d03003 	ldrb	r3, [r0, #3]
   123dc:	e081e003 	add	lr, r1, r3
   123e0:	e6efc07e 	uxtb	ip, lr
   123e4:	e0211003 	eor	r1, r1, r3
   123e8:	e021200c 	eor	r2, r1, ip
   123ec:	e023300c 	eor	r3, r3, ip
   123f0:	e084400c 	add	r4, r4, ip
   123f4:	e1c33001 	bic	r3, r3, r1
   123f8:	e2022010 	and	r2, r2, #16
   123fc:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   12400:	e1a032c3 	asr	r3, r3, #5
   12404:	e182242e 	orr	r2, r2, lr, lsr #8
   12408:	e2033004 	and	r3, r3, #4
   1240c:	e1822001 	orr	r2, r2, r1
   12410:	e1833002 	orr	r3, r3, r2
   12414:	e5c03000 	strb	r3, [r0]
   12418:	e5c0c001 	strb	ip, [r0, #1]
   1241c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12420:	e5d01001 	ldrb	r1, [r0, #1]
   12424:	e5d02004 	ldrb	r2, [r0, #4]
   12428:	e041c002 	sub	ip, r1, r2
   1242c:	e6ffc07c 	uxth	ip, ip
   12430:	e6efe07c 	uxtb	lr, ip
   12434:	e084300e 	add	r3, r4, lr
   12438:	e0222001 	eor	r2, r2, r1
   1243c:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   12440:	e021300e 	eor	r3, r1, lr
   12444:	e022100e 	eor	r1, r2, lr
   12448:	e0033002 	and	r3, r3, r2
   1244c:	e3844002 	orr	r4, r4, #2
   12450:	e2012010 	and	r2, r1, #16
   12454:	e1a0142c 	lsr	r1, ip, #8
   12458:	e1a032a3 	lsr	r3, r3, #5
   1245c:	e1822004 	orr	r2, r2, r4
   12460:	e2611000 	rsb	r1, r1, #0
   12464:	e2033004 	and	r3, r3, #4
   12468:	e1822001 	orr	r2, r2, r1
   1246c:	e1823003 	orr	r3, r2, r3
   12470:	e5c03000 	strb	r3, [r0]
   12474:	e5c0e001 	strb	lr, [r0, #1]
   12478:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1247c:	e5d01001 	ldrb	r1, [r0, #1]
   12480:	e5d02005 	ldrb	r2, [r0, #5]
   12484:	e041c002 	sub	ip, r1, r2
   12488:	e6ffc07c 	uxth	ip, ip
   1248c:	e6efe07c 	uxtb	lr, ip
   12490:	e084300e 	add	r3, r4, lr
   12494:	e0222001 	eor	r2, r2, r1
   12498:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   1249c:	e021300e 	eor	r3, r1, lr
   124a0:	e022100e 	eor	r1, r2, lr
   124a4:	e0033002 	and	r3, r3, r2
   124a8:	e3844002 	orr	r4, r4, #2
   124ac:	e2012010 	and	r2, r1, #16
   124b0:	e1a0142c 	lsr	r1, ip, #8
   124b4:	e1a032a3 	lsr	r3, r3, #5
   124b8:	e1822004 	orr	r2, r2, r4
   124bc:	e2611000 	rsb	r1, r1, #0
   124c0:	e2033004 	and	r3, r3, #4
   124c4:	e1822001 	orr	r2, r2, r1
   124c8:	e1823003 	orr	r3, r2, r3
   124cc:	e5c03000 	strb	r3, [r0]
   124d0:	e5c0e001 	strb	lr, [r0, #1]
   124d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   124d8:	e5d01001 	ldrb	r1, [r0, #1]
   124dc:	e5d02002 	ldrb	r2, [r0, #2]
   124e0:	e041c002 	sub	ip, r1, r2
   124e4:	e6ffc07c 	uxth	ip, ip
   124e8:	e6efe07c 	uxtb	lr, ip
   124ec:	e084300e 	add	r3, r4, lr
   124f0:	e0222001 	eor	r2, r2, r1
   124f4:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   124f8:	e021300e 	eor	r3, r1, lr
   124fc:	e022100e 	eor	r1, r2, lr
   12500:	e0033002 	and	r3, r3, r2
   12504:	e3844002 	orr	r4, r4, #2
   12508:	e2012010 	and	r2, r1, #16
   1250c:	e1a0142c 	lsr	r1, ip, #8
   12510:	e1a032a3 	lsr	r3, r3, #5
   12514:	e1822004 	orr	r2, r2, r4
   12518:	e2611000 	rsb	r1, r1, #0
   1251c:	e2033004 	and	r3, r3, #4
   12520:	e1822001 	orr	r2, r2, r1
   12524:	e1823003 	orr	r3, r2, r3
   12528:	e5c03000 	strb	r3, [r0]
   1252c:	e5c0e001 	strb	lr, [r0, #1]
   12530:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12534:	e5d01001 	ldrb	r1, [r0, #1]
   12538:	e5d02003 	ldrb	r2, [r0, #3]
   1253c:	e041c002 	sub	ip, r1, r2
   12540:	e6ffc07c 	uxth	ip, ip
   12544:	e6efe07c 	uxtb	lr, ip
   12548:	e084300e 	add	r3, r4, lr
   1254c:	e0222001 	eor	r2, r2, r1
   12550:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   12554:	e021300e 	eor	r3, r1, lr
   12558:	e022100e 	eor	r1, r2, lr
   1255c:	e0033002 	and	r3, r3, r2
   12560:	e3844002 	orr	r4, r4, #2
   12564:	e2012010 	and	r2, r1, #16
   12568:	e1a0142c 	lsr	r1, ip, #8
   1256c:	e1a032a3 	lsr	r3, r3, #5
   12570:	e1822004 	orr	r2, r2, r4
   12574:	e2611000 	rsb	r1, r1, #0
   12578:	e2033004 	and	r3, r3, #4
   1257c:	e1822001 	orr	r2, r2, r1
   12580:	e1823003 	orr	r3, r2, r3
   12584:	e5c03000 	strb	r3, [r0]
   12588:	e5c0e001 	strb	lr, [r0, #1]
   1258c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12590:	e5d01001 	ldrb	r1, [r0, #1]
   12594:	e5d02009 	ldrb	r2, [r0, #9]
   12598:	e041c002 	sub	ip, r1, r2
   1259c:	e6ffc07c 	uxth	ip, ip
   125a0:	e6efe07c 	uxtb	lr, ip
   125a4:	e084300e 	add	r3, r4, lr
   125a8:	e0222001 	eor	r2, r2, r1
   125ac:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   125b0:	e021300e 	eor	r3, r1, lr
   125b4:	e022100e 	eor	r1, r2, lr
   125b8:	e0033002 	and	r3, r3, r2
   125bc:	e3844002 	orr	r4, r4, #2
   125c0:	e2012010 	and	r2, r1, #16
   125c4:	e1a0142c 	lsr	r1, ip, #8
   125c8:	e1a032a3 	lsr	r3, r3, #5
   125cc:	e1822004 	orr	r2, r2, r4
   125d0:	e2611000 	rsb	r1, r1, #0
   125d4:	e2033004 	and	r3, r3, #4
   125d8:	e1822001 	orr	r2, r2, r1
   125dc:	e1823003 	orr	r3, r2, r3
   125e0:	e5c03000 	strb	r3, [r0]
   125e4:	e5c0e001 	strb	lr, [r0, #1]
   125e8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   125ec:	e3a01010 	mov	r1, #16
   125f0:	e1d030be 	ldrh	r3, [r0, #14]
   125f4:	e1a02422 	lsr	r2, r2, #8
   125f8:	e2433001 	sub	r3, r3, #1
   125fc:	e6ff3073 	uxth	r3, r3
   12600:	e1c030be 	strh	r3, [r0, #14]
   12604:	e7c52003 	strb	r2, [r5, r3]
   12608:	e1d030be 	ldrh	r3, [r0, #14]
   1260c:	e5d0200c 	ldrb	r2, [r0, #12]
   12610:	e2433001 	sub	r3, r3, #1
   12614:	e6ff3073 	uxth	r3, r3
   12618:	e1c030be 	strh	r3, [r0, #14]
   1261c:	e7c52003 	strb	r2, [r5, r3]
   12620:	e1c010bc 	strh	r1, [r0, #12]
   12624:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12628:	e3560000 	cmp	r6, #0
   1262c:	11a02882 	lslne	r2, r2, #17
   12630:	e28ee002 	add	lr, lr, #2
   12634:	159f364c 	ldrne	r3, [pc, #1612]	; 12c88 <CodesDD+0x2ae8>
   12638:	e1c0e0bc 	strh	lr, [r0, #12]
   1263c:	11a028a2 	lsrne	r2, r2, #17
   12640:	17d32002 	ldrbne	r2, [r3, r2]
   12644:	e5d01001 	ldrb	r1, [r0, #1]
   12648:	07d52002 	ldrbeq	r2, [r5, r2]
   1264c:	e041c002 	sub	ip, r1, r2
   12650:	e6ffc07c 	uxth	ip, ip
   12654:	e6efe07c 	uxtb	lr, ip
   12658:	e084300e 	add	r3, r4, lr
   1265c:	e0222001 	eor	r2, r2, r1
   12660:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   12664:	e021300e 	eor	r3, r1, lr
   12668:	e022100e 	eor	r1, r2, lr
   1266c:	e0033002 	and	r3, r3, r2
   12670:	e3844002 	orr	r4, r4, #2
   12674:	e2012010 	and	r2, r1, #16
   12678:	e1a0142c 	lsr	r1, ip, #8
   1267c:	e1a032a3 	lsr	r3, r3, #5
   12680:	e1822004 	orr	r2, r2, r4
   12684:	e2611000 	rsb	r1, r1, #0
   12688:	e2033004 	and	r3, r3, #4
   1268c:	e1822001 	orr	r2, r2, r1
   12690:	e1823003 	orr	r3, r2, r3
   12694:	e5c03000 	strb	r3, [r0]
   12698:	e5c0e001 	strb	lr, [r0, #1]
   1269c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   126a0:	e1d030be 	ldrh	r3, [r0, #14]
   126a4:	e5d02005 	ldrb	r2, [r0, #5]
   126a8:	e2433001 	sub	r3, r3, #1
   126ac:	e6ff3073 	uxth	r3, r3
   126b0:	e1c030be 	strh	r3, [r0, #14]
   126b4:	e7c52003 	strb	r2, [r5, r3]
   126b8:	e1d030be 	ldrh	r3, [r0, #14]
   126bc:	e5d02004 	ldrb	r2, [r0, #4]
   126c0:	e2433001 	sub	r3, r3, #1
   126c4:	e6ff3073 	uxth	r3, r3
   126c8:	e1c030be 	strh	r3, [r0, #14]
   126cc:	e7c52003 	strb	r2, [r5, r3]
   126d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   126d4:	e5d03000 	ldrb	r3, [r0]
   126d8:	e28ec003 	add	ip, lr, #3
   126dc:	e3130001 	tst	r3, #1
   126e0:	e6ffc07c 	uxth	ip, ip
   126e4:	1a000a0e 	bne	14f24 <CodesDD+0x4d84>
   126e8:	e3560000 	cmp	r6, #0
   126ec:	e2411007 	sub	r1, r1, #7
   126f0:	159f458c 	ldrne	r4, [pc, #1420]	; 12c84 <CodesDD+0x2ae4>
   126f4:	e28ee002 	add	lr, lr, #2
   126f8:	e5801020 	str	r1, [r0, #32]
   126fc:	e6ffe07e 	uxth	lr, lr
   12700:	159f1580 	ldrne	r1, [pc, #1408]	; 12c88 <CodesDD+0x2ae8>
   12704:	e1c0e0bc 	strh	lr, [r0, #12]
   12708:	10022004 	andne	r2, r2, r4
   1270c:	07d53002 	ldrbeq	r3, [r5, r2]
   12710:	17d13002 	ldrbne	r3, [r1, r2]
   12714:	e1d020be 	ldrh	r2, [r0, #14]
   12718:	11c0c0bc 	strhne	ip, [r0, #12]
   1271c:	e2422001 	sub	r2, r2, #1
   12720:	01c0c0bc 	strheq	ip, [r0, #12]
   12724:	e6ff2072 	uxth	r2, r2
   12728:	100ee004 	andne	lr, lr, r4
   1272c:	e1a0c42c 	lsr	ip, ip, #8
   12730:	07d5e00e 	ldrbeq	lr, [r5, lr]
   12734:	17d1e00e 	ldrbne	lr, [r1, lr]
   12738:	e1c020be 	strh	r2, [r0, #14]
   1273c:	e7c5c002 	strb	ip, [r5, r2]
   12740:	e1d020be 	ldrh	r2, [r0, #14]
   12744:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
   12748:	e5d0c00c 	ldrb	ip, [r0, #12]
   1274c:	e2423001 	sub	r3, r2, #1
   12750:	e6ff3073 	uxth	r3, r3
   12754:	e181240e 	orr	r2, r1, lr, lsl #8
   12758:	e1c030be 	strh	r3, [r0, #14]
   1275c:	e7c5c003 	strb	ip, [r5, r3]
   12760:	e1c020bc 	strh	r2, [r0, #12]
   12764:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12768:	e3560000 	cmp	r6, #0
   1276c:	11a02882 	lslne	r2, r2, #17
   12770:	e28ee002 	add	lr, lr, #2
   12774:	159f350c 	ldrne	r3, [pc, #1292]	; 12c88 <CodesDD+0x2ae8>
   12778:	e1c0e0bc 	strh	lr, [r0, #12]
   1277c:	11a028a2 	lsrne	r2, r2, #17
   12780:	17d32002 	ldrbne	r2, [r3, r2]
   12784:	e1d030b0 	ldrh	r3, [r0]
   12788:	07d52002 	ldrbeq	r2, [r5, r2]
   1278c:	e3c330ff 	bic	r3, r3, #255	; 0xff
   12790:	e5d01001 	ldrb	r1, [r0, #1]
   12794:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   12798:	e1830002 	orr	r0, r3, r2
   1279c:	eaffd929 	b	8c48 <OutZ80>
   127a0:	e3560000 	cmp	r6, #0
   127a4:	e28e1002 	add	r1, lr, #2
   127a8:	159fe4d4 	ldrne	lr, [pc, #1236]	; 12c84 <CodesDD+0x2ae4>
   127ac:	e6ff1071 	uxth	r1, r1
   127b0:	159fc4d0 	ldrne	ip, [pc, #1232]	; 12c88 <CodesDD+0x2ae8>
   127b4:	e1c010bc 	strh	r1, [r0, #12]
   127b8:	1002200e 	andne	r2, r2, lr
   127bc:	17dc3002 	ldrbne	r3, [ip, r2]
   127c0:	07d53002 	ldrbeq	r3, [r5, r2]
   127c4:	1001100e 	andne	r1, r1, lr
   127c8:	17dc2001 	ldrbne	r2, [ip, r1]
   127cc:	07d52001 	ldrbeq	r2, [r5, r1]
   127d0:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   127d4:	e1833402 	orr	r3, r3, r2, lsl #8
   127d8:	e1c030bc 	strh	r3, [r0, #12]
   127dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   127e0:	e5d03000 	ldrb	r3, [r0]
   127e4:	e3130040 	tst	r3, #64	; 0x40
   127e8:	1a0009be 	bne	14ee8 <CodesDD+0x4d48>
   127ec:	e3560000 	cmp	r6, #0
   127f0:	e28e1002 	add	r1, lr, #2
   127f4:	159fe488 	ldrne	lr, [pc, #1160]	; 12c84 <CodesDD+0x2ae4>
   127f8:	e6ff1071 	uxth	r1, r1
   127fc:	159fc484 	ldrne	ip, [pc, #1156]	; 12c88 <CodesDD+0x2ae8>
   12800:	e1c010bc 	strh	r1, [r0, #12]
   12804:	1002200e 	andne	r2, r2, lr
   12808:	17dc3002 	ldrbne	r3, [ip, r2]
   1280c:	07d53002 	ldrbeq	r3, [r5, r2]
   12810:	1001100e 	andne	r1, r1, lr
   12814:	17dc2001 	ldrbne	r2, [ip, r1]
   12818:	07d52001 	ldrbeq	r2, [r5, r1]
   1281c:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   12820:	e1833402 	orr	r3, r3, r2, lsl #8
   12824:	e1c030bc 	strh	r3, [r0, #12]
   12828:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1282c:	e1d020be 	ldrh	r2, [r0, #14]
   12830:	e3560000 	cmp	r6, #0
   12834:	e2823001 	add	r3, r2, #1
   12838:	e6ff3073 	uxth	r3, r3
   1283c:	e2821002 	add	r1, r2, #2
   12840:	e1c030be 	strh	r3, [r0, #14]
   12844:	e6ff1071 	uxth	r1, r1
   12848:	0a000806 	beq	14868 <CodesDD+0x46c8>
   1284c:	e59fe430 	ldr	lr, [pc, #1072]	; 12c84 <CodesDD+0x2ae4>
   12850:	e59fc430 	ldr	ip, [pc, #1072]	; 12c88 <CodesDD+0x2ae8>
   12854:	e002200e 	and	r2, r2, lr
   12858:	e7dc2002 	ldrb	r2, [ip, r2]
   1285c:	e003300e 	and	r3, r3, lr
   12860:	e5c02002 	strb	r2, [r0, #2]
   12864:	e1c010be 	strh	r1, [r0, #14]
   12868:	e7dc3003 	ldrb	r3, [ip, r3]
   1286c:	e5c03003 	strb	r3, [r0, #3]
   12870:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12874:	e5d03000 	ldrb	r3, [r0]
   12878:	e3130040 	tst	r3, #64	; 0x40
   1287c:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
   12880:	e1d020be 	ldrh	r2, [r0, #14]
   12884:	e241c006 	sub	ip, r1, #6
   12888:	e2823001 	add	r3, r2, #1
   1288c:	e6ff3073 	uxth	r3, r3
   12890:	e2821002 	add	r1, r2, #2
   12894:	e3560000 	cmp	r6, #0
   12898:	e580c020 	str	ip, [r0, #32]
   1289c:	e1c030be 	strh	r3, [r0, #14]
   128a0:	e6ff1071 	uxth	r1, r1
   128a4:	0a000a2f 	beq	15168 <CodesDD+0x4fc8>
   128a8:	e59fe3d4 	ldr	lr, [pc, #980]	; 12c84 <CodesDD+0x2ae4>
   128ac:	e59fc3d4 	ldr	ip, [pc, #980]	; 12c88 <CodesDD+0x2ae8>
   128b0:	e002200e 	and	r2, r2, lr
   128b4:	e7dc2002 	ldrb	r2, [ip, r2]
   128b8:	e003300e 	and	r3, r3, lr
   128bc:	e5c0200c 	strb	r2, [r0, #12]
   128c0:	e1c010be 	strh	r1, [r0, #14]
   128c4:	e7dc3003 	ldrb	r3, [ip, r3]
   128c8:	e5c0300d 	strb	r3, [r0, #13]
   128cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   128d0:	e1d030be 	ldrh	r3, [r0, #14]
   128d4:	e5d02003 	ldrb	r2, [r0, #3]
   128d8:	e2433001 	sub	r3, r3, #1
   128dc:	e6ff3073 	uxth	r3, r3
   128e0:	e1c030be 	strh	r3, [r0, #14]
   128e4:	e7c52003 	strb	r2, [r5, r3]
   128e8:	e1d030be 	ldrh	r3, [r0, #14]
   128ec:	e5d02002 	ldrb	r2, [r0, #2]
   128f0:	e2433001 	sub	r3, r3, #1
   128f4:	e6ff3073 	uxth	r3, r3
   128f8:	e1c030be 	strh	r3, [r0, #14]
   128fc:	e7c52003 	strb	r2, [r5, r3]
   12900:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12904:	e3560000 	cmp	r6, #0
   12908:	159f3378 	ldrne	r3, [pc, #888]	; 12c88 <CodesDD+0x2ae8>
   1290c:	11a02882 	lslne	r2, r2, #17
   12910:	e28ee002 	add	lr, lr, #2
   12914:	e1c0e0bc 	strh	lr, [r0, #12]
   12918:	11a028a2 	lsrne	r2, r2, #17
   1291c:	17d33002 	ldrbne	r3, [r3, r2]
   12920:	07d53002 	ldrbeq	r3, [r5, r2]
   12924:	e5d01001 	ldrb	r1, [r0, #1]
   12928:	e081e003 	add	lr, r1, r3
   1292c:	e6efc07e 	uxtb	ip, lr
   12930:	e0211003 	eor	r1, r1, r3
   12934:	e021200c 	eor	r2, r1, ip
   12938:	e023300c 	eor	r3, r3, ip
   1293c:	e084400c 	add	r4, r4, ip
   12940:	e1c33001 	bic	r3, r3, r1
   12944:	e2022010 	and	r2, r2, #16
   12948:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   1294c:	e1a032c3 	asr	r3, r3, #5
   12950:	e182242e 	orr	r2, r2, lr, lsr #8
   12954:	e2033004 	and	r3, r3, #4
   12958:	e1822001 	orr	r2, r2, r1
   1295c:	e1833002 	orr	r3, r3, r2
   12960:	e5c03000 	strb	r3, [r0]
   12964:	e5c0c001 	strb	ip, [r0, #1]
   12968:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1296c:	e5d03000 	ldrb	r3, [r0]
   12970:	e28ec003 	add	ip, lr, #3
   12974:	e3130040 	tst	r3, #64	; 0x40
   12978:	e6ffc07c 	uxth	ip, ip
   1297c:	1a00096c 	bne	14f34 <CodesDD+0x4d94>
   12980:	e3560000 	cmp	r6, #0
   12984:	e2411007 	sub	r1, r1, #7
   12988:	159f42f4 	ldrne	r4, [pc, #756]	; 12c84 <CodesDD+0x2ae4>
   1298c:	e28ee002 	add	lr, lr, #2
   12990:	e5801020 	str	r1, [r0, #32]
   12994:	e6ffe07e 	uxth	lr, lr
   12998:	159f12e8 	ldrne	r1, [pc, #744]	; 12c88 <CodesDD+0x2ae8>
   1299c:	e1c0e0bc 	strh	lr, [r0, #12]
   129a0:	10022004 	andne	r2, r2, r4
   129a4:	07d53002 	ldrbeq	r3, [r5, r2]
   129a8:	17d13002 	ldrbne	r3, [r1, r2]
   129ac:	e1d020be 	ldrh	r2, [r0, #14]
   129b0:	11c0c0bc 	strhne	ip, [r0, #12]
   129b4:	e2422001 	sub	r2, r2, #1
   129b8:	01c0c0bc 	strheq	ip, [r0, #12]
   129bc:	e6ff2072 	uxth	r2, r2
   129c0:	100ee004 	andne	lr, lr, r4
   129c4:	e1a0c42c 	lsr	ip, ip, #8
   129c8:	07d5e00e 	ldrbeq	lr, [r5, lr]
   129cc:	17d1e00e 	ldrbne	lr, [r1, lr]
   129d0:	e1c020be 	strh	r2, [r0, #14]
   129d4:	e7c5c002 	strb	ip, [r5, r2]
   129d8:	e1d020be 	ldrh	r2, [r0, #14]
   129dc:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
   129e0:	e5d0c00c 	ldrb	ip, [r0, #12]
   129e4:	e2423001 	sub	r3, r2, #1
   129e8:	e6ff3073 	uxth	r3, r3
   129ec:	e181240e 	orr	r2, r1, lr, lsl #8
   129f0:	e1c030be 	strh	r3, [r0, #14]
   129f4:	e7c5c003 	strb	ip, [r5, r3]
   129f8:	e1c020bc 	strh	r2, [r0, #12]
   129fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12a00:	e3560000 	cmp	r6, #0
   12a04:	11a02882 	lslne	r2, r2, #17
   12a08:	159f3278 	ldrne	r3, [pc, #632]	; 12c88 <CodesDD+0x2ae8>
   12a0c:	e28ee002 	add	lr, lr, #2
   12a10:	e1c0e0bc 	strh	lr, [r0, #12]
   12a14:	11a028a2 	lsrne	r2, r2, #17
   12a18:	17d32002 	ldrbne	r2, [r3, r2]
   12a1c:	e1d030b0 	ldrh	r3, [r0]
   12a20:	07d52002 	ldrbeq	r2, [r5, r2]
   12a24:	e3c330ff 	bic	r3, r3, #255	; 0xff
   12a28:	e1a04000 	mov	r4, r0
   12a2c:	e1830002 	orr	r0, r3, r2
   12a30:	ebffd83c 	bl	8b28 <InZ80>
   12a34:	e5c40001 	strb	r0, [r4, #1]
   12a38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12a3c:	e1d020be 	ldrh	r2, [r0, #14]
   12a40:	e3560000 	cmp	r6, #0
   12a44:	e2823001 	add	r3, r2, #1
   12a48:	e6ff3073 	uxth	r3, r3
   12a4c:	e2821002 	add	r1, r2, #2
   12a50:	e1c030be 	strh	r3, [r0, #14]
   12a54:	e6ff1071 	uxth	r1, r1
   12a58:	0a0007a0 	beq	148e0 <CodesDD+0x4740>
   12a5c:	e59fe220 	ldr	lr, [pc, #544]	; 12c84 <CodesDD+0x2ae4>
   12a60:	e59fc220 	ldr	ip, [pc, #544]	; 12c88 <CodesDD+0x2ae8>
   12a64:	e002200e 	and	r2, r2, lr
   12a68:	e7dc2002 	ldrb	r2, [ip, r2]
   12a6c:	e003300e 	and	r3, r3, lr
   12a70:	e5c02004 	strb	r2, [r0, #4]
   12a74:	e1c010be 	strh	r1, [r0, #14]
   12a78:	e7dc3003 	ldrb	r3, [ip, r3]
   12a7c:	e5c03005 	strb	r3, [r0, #5]
   12a80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12a84:	e5d03000 	ldrb	r3, [r0]
   12a88:	e3130001 	tst	r3, #1
   12a8c:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
   12a90:	e1d020be 	ldrh	r2, [r0, #14]
   12a94:	e241c006 	sub	ip, r1, #6
   12a98:	e2823001 	add	r3, r2, #1
   12a9c:	e6ff3073 	uxth	r3, r3
   12aa0:	e2821002 	add	r1, r2, #2
   12aa4:	e3560000 	cmp	r6, #0
   12aa8:	e580c020 	str	ip, [r0, #32]
   12aac:	e1c030be 	strh	r3, [r0, #14]
   12ab0:	e6ff1071 	uxth	r1, r1
   12ab4:	0a00099c 	beq	1512c <CodesDD+0x4f8c>
   12ab8:	e59fe1c4 	ldr	lr, [pc, #452]	; 12c84 <CodesDD+0x2ae4>
   12abc:	e59fc1c4 	ldr	ip, [pc, #452]	; 12c88 <CodesDD+0x2ae8>
   12ac0:	e002200e 	and	r2, r2, lr
   12ac4:	e7dc2002 	ldrb	r2, [ip, r2]
   12ac8:	e003300e 	and	r3, r3, lr
   12acc:	e5c0200c 	strb	r2, [r0, #12]
   12ad0:	e1c010be 	strh	r1, [r0, #14]
   12ad4:	e7dc3003 	ldrb	r3, [ip, r3]
   12ad8:	e5c0300d 	strb	r3, [r0, #13]
   12adc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12ae0:	e1c0e0bc 	strh	lr, [r0, #12]
   12ae4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12ae8:	e5d03000 	ldrb	r3, [r0]
   12aec:	e3130001 	tst	r3, #1
   12af0:	1a000913 	bne	14f44 <CodesDD+0x4da4>
   12af4:	e3560000 	cmp	r6, #0
   12af8:	e28e1002 	add	r1, lr, #2
   12afc:	159fe180 	ldrne	lr, [pc, #384]	; 12c84 <CodesDD+0x2ae4>
   12b00:	e6ff1071 	uxth	r1, r1
   12b04:	159fc17c 	ldrne	ip, [pc, #380]	; 12c88 <CodesDD+0x2ae8>
   12b08:	e1c010bc 	strh	r1, [r0, #12]
   12b0c:	1002200e 	andne	r2, r2, lr
   12b10:	17dc3002 	ldrbne	r3, [ip, r2]
   12b14:	07d53002 	ldrbeq	r3, [r5, r2]
   12b18:	1001100e 	andne	r1, r1, lr
   12b1c:	17dc2001 	ldrbne	r2, [ip, r1]
   12b20:	07d52001 	ldrbeq	r2, [r5, r1]
   12b24:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   12b28:	e1833402 	orr	r3, r3, r2, lsl #8
   12b2c:	e1c030bc 	strh	r3, [r0, #12]
   12b30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12b34:	e1d030b2 	ldrh	r3, [r0, #2]
   12b38:	e1d0e1b2 	ldrh	lr, [r0, #18]
   12b3c:	e1d0c0b4 	ldrh	ip, [r0, #4]
   12b40:	e1d011b4 	ldrh	r1, [r0, #20]
   12b44:	e1d020b6 	ldrh	r2, [r0, #6]
   12b48:	e1c031b2 	strh	r3, [r0, #18]
   12b4c:	e1d031b6 	ldrh	r3, [r0, #22]
   12b50:	e1c0e0b2 	strh	lr, [r0, #2]
   12b54:	e1c0c1b4 	strh	ip, [r0, #20]
   12b58:	e1c010b4 	strh	r1, [r0, #4]
   12b5c:	e1c021b6 	strh	r2, [r0, #22]
   12b60:	e1c030b6 	strh	r3, [r0, #6]
   12b64:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12b68:	e3560000 	cmp	r6, #0
   12b6c:	e28ee002 	add	lr, lr, #2
   12b70:	11a02882 	lslne	r2, r2, #17
   12b74:	159f310c 	ldrne	r3, [pc, #268]	; 12c88 <CodesDD+0x2ae8>
   12b78:	e1c0e0bc 	strh	lr, [r0, #12]
   12b7c:	11a028a2 	lsrne	r2, r2, #17
   12b80:	17d3e002 	ldrbne	lr, [r3, r2]
   12b84:	e5d01001 	ldrb	r1, [r0, #1]
   12b88:	07d5e002 	ldrbeq	lr, [r5, r2]
   12b8c:	e5d03000 	ldrb	r3, [r0]
   12b90:	e041200e 	sub	r2, r1, lr
   12b94:	e2033001 	and	r3, r3, #1
   12b98:	e0422003 	sub	r2, r2, r3
   12b9c:	e6ff2072 	uxth	r2, r2
   12ba0:	e6efc072 	uxtb	ip, r2
   12ba4:	e1a03422 	lsr	r3, r2, #8
   12ba8:	e084400c 	add	r4, r4, ip
   12bac:	e02ee001 	eor	lr, lr, r1
   12bb0:	e02c2001 	eor	r2, ip, r1
   12bb4:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   12bb8:	e2633000 	rsb	r3, r3, #0
   12bbc:	e002200e 	and	r2, r2, lr
   12bc0:	e3833002 	orr	r3, r3, #2
   12bc4:	e02c100e 	eor	r1, ip, lr
   12bc8:	e1a022a2 	lsr	r2, r2, #5
   12bcc:	e1833004 	orr	r3, r3, r4
   12bd0:	e2011010 	and	r1, r1, #16
   12bd4:	e2022004 	and	r2, r2, #4
   12bd8:	e1833001 	orr	r3, r3, r1
   12bdc:	e1833002 	orr	r3, r3, r2
   12be0:	e5c03000 	strb	r3, [r0]
   12be4:	e5c0c001 	strb	ip, [r0, #1]
   12be8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12bec:	e5d03000 	ldrb	r3, [r0]
   12bf0:	e28ec003 	add	ip, lr, #3
   12bf4:	e3130001 	tst	r3, #1
   12bf8:	e6ffc07c 	uxth	ip, ip
   12bfc:	0a0008ce 	beq	14f3c <CodesDD+0x4d9c>
   12c00:	e3560000 	cmp	r6, #0
   12c04:	e2411007 	sub	r1, r1, #7
   12c08:	159f4074 	ldrne	r4, [pc, #116]	; 12c84 <CodesDD+0x2ae4>
   12c0c:	e28ee002 	add	lr, lr, #2
   12c10:	e5801020 	str	r1, [r0, #32]
   12c14:	e6ffe07e 	uxth	lr, lr
   12c18:	159f1068 	ldrne	r1, [pc, #104]	; 12c88 <CodesDD+0x2ae8>
   12c1c:	e1c0e0bc 	strh	lr, [r0, #12]
   12c20:	10022004 	andne	r2, r2, r4
   12c24:	07d53002 	ldrbeq	r3, [r5, r2]
   12c28:	17d13002 	ldrbne	r3, [r1, r2]
   12c2c:	e1d020be 	ldrh	r2, [r0, #14]
   12c30:	11c0c0bc 	strhne	ip, [r0, #12]
   12c34:	e2422001 	sub	r2, r2, #1
   12c38:	01c0c0bc 	strheq	ip, [r0, #12]
   12c3c:	e6ff2072 	uxth	r2, r2
   12c40:	100ee004 	andne	lr, lr, r4
   12c44:	e1a0c42c 	lsr	ip, ip, #8
   12c48:	07d5e00e 	ldrbeq	lr, [r5, lr]
   12c4c:	17d1e00e 	ldrbne	lr, [r1, lr]
   12c50:	e1c020be 	strh	r2, [r0, #14]
   12c54:	e7c5c002 	strb	ip, [r5, r2]
   12c58:	e1d020be 	ldrh	r2, [r0, #14]
   12c5c:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
   12c60:	e5d0c00c 	ldrb	ip, [r0, #12]
   12c64:	e2423001 	sub	r3, r2, #1
   12c68:	e6ff3073 	uxth	r3, r3
   12c6c:	e181240e 	orr	r2, r1, lr, lsl #8
   12c70:	e1c030be 	strh	r3, [r0, #14]
   12c74:	e7c5c003 	strb	ip, [r5, r3]
   12c78:	e1c020bc 	strh	r2, [r0, #12]
   12c7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12c80:	0003c960 	.word	0x0003c960
   12c84:	00007fff 	.word	0x00007fff
   12c88:	00050428 	.word	0x00050428
   12c8c:	e5d03000 	ldrb	r3, [r0]
   12c90:	e3130001 	tst	r3, #1
   12c94:	0a0008ad 	beq	14f50 <CodesDD+0x4db0>
   12c98:	e3560000 	cmp	r6, #0
   12c9c:	e28e1002 	add	r1, lr, #2
   12ca0:	151fe024 	ldrne	lr, [pc, #-36]	; 12c84 <CodesDD+0x2ae4>
   12ca4:	e6ff1071 	uxth	r1, r1
   12ca8:	151fc028 	ldrne	ip, [pc, #-40]	; 12c88 <CodesDD+0x2ae8>
   12cac:	e1c010bc 	strh	r1, [r0, #12]
   12cb0:	1002200e 	andne	r2, r2, lr
   12cb4:	17dc3002 	ldrbne	r3, [ip, r2]
   12cb8:	07d53002 	ldrbeq	r3, [r5, r2]
   12cbc:	1001100e 	andne	r1, r1, lr
   12cc0:	17dc2001 	ldrbne	r2, [ip, r1]
   12cc4:	07d52001 	ldrbeq	r2, [r5, r1]
   12cc8:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   12ccc:	e1833402 	orr	r3, r3, r2, lsl #8
   12cd0:	e1c030bc 	strh	r3, [r0, #12]
   12cd4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12cd8:	e5d03000 	ldrb	r3, [r0]
   12cdc:	e3130001 	tst	r3, #1
   12ce0:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   12ce4:	e1d020be 	ldrh	r2, [r0, #14]
   12ce8:	e241c006 	sub	ip, r1, #6
   12cec:	e2823001 	add	r3, r2, #1
   12cf0:	e6ff3073 	uxth	r3, r3
   12cf4:	e2821002 	add	r1, r2, #2
   12cf8:	e3560000 	cmp	r6, #0
   12cfc:	e580c020 	str	ip, [r0, #32]
   12d00:	e1c030be 	strh	r3, [r0, #14]
   12d04:	e6ff1071 	uxth	r1, r1
   12d08:	0a0008fd 	beq	15104 <CodesDD+0x4f64>
   12d0c:	e51fe090 	ldr	lr, [pc, #-144]	; 12c84 <CodesDD+0x2ae4>
   12d10:	e51fc090 	ldr	ip, [pc, #-144]	; 12c88 <CodesDD+0x2ae8>
   12d14:	e002200e 	and	r2, r2, lr
   12d18:	e7dc2002 	ldrb	r2, [ip, r2]
   12d1c:	e003300e 	and	r3, r3, lr
   12d20:	e5c0200c 	strb	r2, [r0, #12]
   12d24:	e1c010be 	strh	r1, [r0, #14]
   12d28:	e7dc3003 	ldrb	r3, [ip, r3]
   12d2c:	e5c0300d 	strb	r3, [r0, #13]
   12d30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12d34:	e5d02000 	ldrb	r2, [r0]
   12d38:	e2223001 	eor	r3, r2, #1
   12d3c:	e3c33012 	bic	r3, r3, #18
   12d40:	e6af3073 	sxtb	r3, r3
   12d44:	e3120001 	tst	r2, #1
   12d48:	13833010 	orrne	r3, r3, #16
   12d4c:	e5c03000 	strb	r3, [r0]
   12d50:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12d54:	e5d03001 	ldrb	r3, [r0, #1]
   12d58:	e5c03004 	strb	r3, [r0, #4]
   12d5c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12d60:	e28ee002 	add	lr, lr, #2
   12d64:	e3560000 	cmp	r6, #0
   12d68:	e1c0e0bc 	strh	lr, [r0, #12]
   12d6c:	e1d030b8 	ldrh	r3, [r0, #8]
   12d70:	0a0006b7 	beq	14854 <CodesDD+0x46b4>
   12d74:	e51fc0f8 	ldr	ip, [pc, #-248]	; 12c84 <CodesDD+0x2ae4>
   12d78:	e51f10f8 	ldr	r1, [pc, #-248]	; 12c88 <CodesDD+0x2ae8>
   12d7c:	e002200c 	and	r2, r2, ip
   12d80:	e19120d2 	ldrsb	r2, [r1, r2]
   12d84:	e0833002 	add	r3, r3, r2
   12d88:	e003300c 	and	r3, r3, ip
   12d8c:	e7d13003 	ldrb	r3, [r1, r3]
   12d90:	e5c03004 	strb	r3, [r0, #4]
   12d94:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12d98:	e5d03008 	ldrb	r3, [r0, #8]
   12d9c:	e5c03004 	strb	r3, [r0, #4]
   12da0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12da4:	e5d03009 	ldrb	r3, [r0, #9]
   12da8:	e5c03004 	strb	r3, [r0, #4]
   12dac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12db0:	e1d030d0 	ldrsb	r3, [r0]
   12db4:	e3530000 	cmp	r3, #0
   12db8:	ba000887 	blt	14fdc <CodesDD+0x4e3c>
   12dbc:	e28ee003 	add	lr, lr, #3
   12dc0:	e1c0e0bc 	strh	lr, [r0, #12]
   12dc4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12dc8:	e5d03005 	ldrb	r3, [r0, #5]
   12dcc:	e5c03004 	strb	r3, [r0, #4]
   12dd0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12dd4:	e5d03002 	ldrb	r3, [r0, #2]
   12dd8:	e5c03004 	strb	r3, [r0, #4]
   12ddc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12de0:	e5d03003 	ldrb	r3, [r0, #3]
   12de4:	e5c03004 	strb	r3, [r0, #4]
   12de8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12dec:	e5d03001 	ldrb	r3, [r0, #1]
   12df0:	e5c03005 	strb	r3, [r0, #5]
   12df4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12df8:	e28ee002 	add	lr, lr, #2
   12dfc:	e3560000 	cmp	r6, #0
   12e00:	e1c0e0bc 	strh	lr, [r0, #12]
   12e04:	e1d030b8 	ldrh	r3, [r0, #8]
   12e08:	0a00068c 	beq	14840 <CodesDD+0x46a0>
   12e0c:	e51fc190 	ldr	ip, [pc, #-400]	; 12c84 <CodesDD+0x2ae4>
   12e10:	e51f1190 	ldr	r1, [pc, #-400]	; 12c88 <CodesDD+0x2ae8>
   12e14:	e002200c 	and	r2, r2, ip
   12e18:	e19120d2 	ldrsb	r2, [r1, r2]
   12e1c:	e0833002 	add	r3, r3, r2
   12e20:	e003300c 	and	r3, r3, ip
   12e24:	e7d13003 	ldrb	r3, [r1, r3]
   12e28:	e5c03005 	strb	r3, [r0, #5]
   12e2c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12e30:	e5d03008 	ldrb	r3, [r0, #8]
   12e34:	e5c03005 	strb	r3, [r0, #5]
   12e38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12e3c:	e5d03004 	ldrb	r3, [r0, #4]
   12e40:	e5c03005 	strb	r3, [r0, #5]
   12e44:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12e48:	e5d03018 	ldrb	r3, [r0, #24]
   12e4c:	e3130021 	tst	r3, #33	; 0x21
   12e50:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
   12e54:	e3a02001 	mov	r2, #1
   12e58:	e3833028 	orr	r3, r3, #40	; 0x28
   12e5c:	e5c03018 	strb	r3, [r0, #24]
   12e60:	e5801024 	str	r1, [r0, #36]	; 0x24
   12e64:	e5802020 	str	r2, [r0, #32]
   12e68:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12e6c:	e5d03002 	ldrb	r3, [r0, #2]
   12e70:	e5c03005 	strb	r3, [r0, #5]
   12e74:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12e78:	e5d03003 	ldrb	r3, [r0, #3]
   12e7c:	e5c03005 	strb	r3, [r0, #5]
   12e80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12e84:	e5d03009 	ldrb	r3, [r0, #9]
   12e88:	e5c03005 	strb	r3, [r0, #5]
   12e8c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12e90:	e5d03001 	ldrb	r3, [r0, #1]
   12e94:	e5c03002 	strb	r3, [r0, #2]
   12e98:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12e9c:	e28ee002 	add	lr, lr, #2
   12ea0:	e3560000 	cmp	r6, #0
   12ea4:	e1c0e0bc 	strh	lr, [r0, #12]
   12ea8:	e1d030b8 	ldrh	r3, [r0, #8]
   12eac:	0a00065e 	beq	1482c <CodesDD+0x468c>
   12eb0:	e51fc234 	ldr	ip, [pc, #-564]	; 12c84 <CodesDD+0x2ae4>
   12eb4:	e51f1234 	ldr	r1, [pc, #-564]	; 12c88 <CodesDD+0x2ae8>
   12eb8:	e002200c 	and	r2, r2, ip
   12ebc:	e19120d2 	ldrsb	r2, [r1, r2]
   12ec0:	e0833002 	add	r3, r3, r2
   12ec4:	e003300c 	and	r3, r3, ip
   12ec8:	e7d13003 	ldrb	r3, [r1, r3]
   12ecc:	e5c03002 	strb	r3, [r0, #2]
   12ed0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12ed4:	e5d03008 	ldrb	r3, [r0, #8]
   12ed8:	e5c03002 	strb	r3, [r0, #2]
   12edc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12ee0:	e5d03009 	ldrb	r3, [r0, #9]
   12ee4:	e5c03002 	strb	r3, [r0, #2]
   12ee8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12eec:	e5d03004 	ldrb	r3, [r0, #4]
   12ef0:	e5c03002 	strb	r3, [r0, #2]
   12ef4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12ef8:	e5d03005 	ldrb	r3, [r0, #5]
   12efc:	e5c03002 	strb	r3, [r0, #2]
   12f00:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12f04:	e1d0c0d0 	ldrsb	ip, [r0]
   12f08:	e28e3003 	add	r3, lr, #3
   12f0c:	e35c0000 	cmp	ip, #0
   12f10:	e6ff4073 	uxth	r4, r3
   12f14:	ba000810 	blt	14f5c <CodesDD+0x4dbc>
   12f18:	e1c040bc 	strh	r4, [r0, #12]
   12f1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12f20:	e5d03003 	ldrb	r3, [r0, #3]
   12f24:	e5c03002 	strb	r3, [r0, #2]
   12f28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12f2c:	e5d03001 	ldrb	r3, [r0, #1]
   12f30:	e5c03003 	strb	r3, [r0, #3]
   12f34:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12f38:	e28ee002 	add	lr, lr, #2
   12f3c:	e3560000 	cmp	r6, #0
   12f40:	e1c0e0bc 	strh	lr, [r0, #12]
   12f44:	e1d030b8 	ldrh	r3, [r0, #8]
   12f48:	0a00062d 	beq	14804 <CodesDD+0x4664>
   12f4c:	e51fc2d0 	ldr	ip, [pc, #-720]	; 12c84 <CodesDD+0x2ae4>
   12f50:	e51f12d0 	ldr	r1, [pc, #-720]	; 12c88 <CodesDD+0x2ae8>
   12f54:	e002200c 	and	r2, r2, ip
   12f58:	e19120d2 	ldrsb	r2, [r1, r2]
   12f5c:	e0833002 	add	r3, r3, r2
   12f60:	e003300c 	and	r3, r3, ip
   12f64:	e7d13003 	ldrb	r3, [r1, r3]
   12f68:	e5c03003 	strb	r3, [r0, #3]
   12f6c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12f70:	e5d03008 	ldrb	r3, [r0, #8]
   12f74:	e5c03003 	strb	r3, [r0, #3]
   12f78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12f7c:	e5d03004 	ldrb	r3, [r0, #4]
   12f80:	e5c03003 	strb	r3, [r0, #3]
   12f84:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12f88:	e5d03005 	ldrb	r3, [r0, #5]
   12f8c:	e5c03003 	strb	r3, [r0, #3]
   12f90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12f94:	e5d03002 	ldrb	r3, [r0, #2]
   12f98:	e5c03003 	strb	r3, [r0, #3]
   12f9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   12fa0:	e3560000 	cmp	r6, #0
   12fa4:	11a02882 	lslne	r2, r2, #17
   12fa8:	e28ee002 	add	lr, lr, #2
   12fac:	151f332c 	ldrne	r3, [pc, #-812]	; 12c88 <CodesDD+0x2ae8>
   12fb0:	e1c0e0bc 	strh	lr, [r0, #12]
   12fb4:	11a028a2 	lsrne	r2, r2, #17
   12fb8:	17d31002 	ldrbne	r1, [r3, r2]
   12fbc:	07d51002 	ldrbeq	r1, [r5, r2]
   12fc0:	e5d0e001 	ldrb	lr, [r0, #1]
   12fc4:	e04ec001 	sub	ip, lr, r1
   12fc8:	e6ffc07c 	uxth	ip, ip
   12fcc:	e6ef207c 	uxtb	r2, ip
   12fd0:	e0843002 	add	r3, r4, r2
   12fd4:	e021100e 	eor	r1, r1, lr
   12fd8:	e5d34300 	ldrb	r4, [r3, #768]	; 0x300
   12fdc:	e02ee002 	eor	lr, lr, r2
   12fe0:	e0213002 	eor	r3, r1, r2
   12fe4:	e3844002 	orr	r4, r4, #2
   12fe8:	e001200e 	and	r2, r1, lr
   12fec:	e2033010 	and	r3, r3, #16
   12ff0:	e1a0142c 	lsr	r1, ip, #8
   12ff4:	e1a022a2 	lsr	r2, r2, #5
   12ff8:	e1833004 	orr	r3, r3, r4
   12ffc:	e2611000 	rsb	r1, r1, #0
   13000:	e2022004 	and	r2, r2, #4
   13004:	e1833001 	orr	r3, r3, r1
   13008:	e1833002 	orr	r3, r3, r2
   1300c:	e5c03000 	strb	r3, [r0]
   13010:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13014:	e5d03009 	ldrb	r3, [r0, #9]
   13018:	e5c03003 	strb	r3, [r0, #3]
   1301c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13020:	e5d03001 	ldrb	r3, [r0, #1]
   13024:	e5c03008 	strb	r3, [r0, #8]
   13028:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1302c:	e28ee002 	add	lr, lr, #2
   13030:	e3560000 	cmp	r6, #0
   13034:	e1c0e0bc 	strh	lr, [r0, #12]
   13038:	e1d030b8 	ldrh	r3, [r0, #8]
   1303c:	0a0005de 	beq	147bc <CodesDD+0x461c>
   13040:	e51fc3c4 	ldr	ip, [pc, #-964]	; 12c84 <CodesDD+0x2ae4>
   13044:	e51f13c4 	ldr	r1, [pc, #-964]	; 12c88 <CodesDD+0x2ae8>
   13048:	e002200c 	and	r2, r2, ip
   1304c:	e19120d2 	ldrsb	r2, [r1, r2]
   13050:	e0833002 	add	r3, r3, r2
   13054:	e003300c 	and	r3, r3, ip
   13058:	e7d13003 	ldrb	r3, [r1, r3]
   1305c:	e5c03006 	strb	r3, [r0, #6]
   13060:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13064:	e1d030d0 	ldrsb	r3, [r0]
   13068:	e3530000 	cmp	r3, #0
   1306c:	a8bd81f0 	popge	{r4, r5, r6, r7, r8, pc}
   13070:	e1d020be 	ldrh	r2, [r0, #14]
   13074:	e241c006 	sub	ip, r1, #6
   13078:	e2823001 	add	r3, r2, #1
   1307c:	e6ff3073 	uxth	r3, r3
   13080:	e2821002 	add	r1, r2, #2
   13084:	e3560000 	cmp	r6, #0
   13088:	e580c020 	str	ip, [r0, #32]
   1308c:	e1c030be 	strh	r3, [r0, #14]
   13090:	e6ff1071 	uxth	r1, r1
   13094:	0a000838 	beq	1517c <CodesDD+0x4fdc>
   13098:	e51fe41c 	ldr	lr, [pc, #-1052]	; 12c84 <CodesDD+0x2ae4>
   1309c:	e51fc41c 	ldr	ip, [pc, #-1052]	; 12c88 <CodesDD+0x2ae8>
   130a0:	e002200e 	and	r2, r2, lr
   130a4:	e7dc2002 	ldrb	r2, [ip, r2]
   130a8:	e003300e 	and	r3, r3, lr
   130ac:	e5c0200c 	strb	r2, [r0, #12]
   130b0:	e1c010be 	strh	r1, [r0, #14]
   130b4:	e7dc3003 	ldrb	r3, [ip, r3]
   130b8:	e5c0300d 	strb	r3, [r0, #13]
   130bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   130c0:	e3560000 	cmp	r6, #0
   130c4:	11a02882 	lslne	r2, r2, #17
   130c8:	e28ee002 	add	lr, lr, #2
   130cc:	151f144c 	ldrne	r1, [pc, #-1100]	; 12c88 <CodesDD+0x2ae8>
   130d0:	e1c0e0bc 	strh	lr, [r0, #12]
   130d4:	11a028a2 	lsrne	r2, r2, #17
   130d8:	07d52002 	ldrbeq	r2, [r5, r2]
   130dc:	17d12002 	ldrbne	r2, [r1, r2]
   130e0:	e1d030b8 	ldrh	r3, [r0, #8]
   130e4:	e6af2072 	sxtb	r2, r2
   130e8:	e0833002 	add	r3, r3, r2
   130ec:	e5d02001 	ldrb	r2, [r0, #1]
   130f0:	e6ff3073 	uxth	r3, r3
   130f4:	e7c52003 	strb	r2, [r5, r3]
   130f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   130fc:	e5d03001 	ldrb	r3, [r0, #1]
   13100:	e5c03009 	strb	r3, [r0, #9]
   13104:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13108:	e28ee002 	add	lr, lr, #2
   1310c:	e3560000 	cmp	r6, #0
   13110:	e1c0e0bc 	strh	lr, [r0, #12]
   13114:	e1d030b8 	ldrh	r3, [r0, #8]
   13118:	0a0005be 	beq	14818 <CodesDD+0x4678>
   1311c:	e51fc4a0 	ldr	ip, [pc, #-1184]	; 12c84 <CodesDD+0x2ae4>
   13120:	e51f14a0 	ldr	r1, [pc, #-1184]	; 12c88 <CodesDD+0x2ae8>
   13124:	e002200c 	and	r2, r2, ip
   13128:	e19120d2 	ldrsb	r2, [r1, r2]
   1312c:	e0833002 	add	r3, r3, r2
   13130:	e003300c 	and	r3, r3, ip
   13134:	e7d13003 	ldrb	r3, [r1, r3]
   13138:	e5c03007 	strb	r3, [r0, #7]
   1313c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13140:	e5d03008 	ldrb	r3, [r0, #8]
   13144:	e5c03009 	strb	r3, [r0, #9]
   13148:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1314c:	e1d030b8 	ldrh	r3, [r0, #8]
   13150:	e1c030be 	strh	r3, [r0, #14]
   13154:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13158:	e5d03004 	ldrb	r3, [r0, #4]
   1315c:	e5c03009 	strb	r3, [r0, #9]
   13160:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13164:	e5d03005 	ldrb	r3, [r0, #5]
   13168:	e5c03009 	strb	r3, [r0, #9]
   1316c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13170:	e5d03002 	ldrb	r3, [r0, #2]
   13174:	e5c03009 	strb	r3, [r0, #9]
   13178:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1317c:	e5d03003 	ldrb	r3, [r0, #3]
   13180:	e5c03009 	strb	r3, [r0, #9]
   13184:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13188:	e5d03004 	ldrb	r3, [r0, #4]
   1318c:	e5c03008 	strb	r3, [r0, #8]
   13190:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13194:	e5d03005 	ldrb	r3, [r0, #5]
   13198:	e5c03008 	strb	r3, [r0, #8]
   1319c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   131a0:	e5d03002 	ldrb	r3, [r0, #2]
   131a4:	e5c03008 	strb	r3, [r0, #8]
   131a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   131ac:	e5d03003 	ldrb	r3, [r0, #3]
   131b0:	e5c03008 	strb	r3, [r0, #8]
   131b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   131b8:	e5d03009 	ldrb	r3, [r0, #9]
   131bc:	e5c03008 	strb	r3, [r0, #8]
   131c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   131c4:	e5d03004 	ldrb	r3, [r0, #4]
   131c8:	e5c03001 	strb	r3, [r0, #1]
   131cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   131d0:	e5d03005 	ldrb	r3, [r0, #5]
   131d4:	e5c03001 	strb	r3, [r0, #1]
   131d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   131dc:	e5d03002 	ldrb	r3, [r0, #2]
   131e0:	e5c03001 	strb	r3, [r0, #1]
   131e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   131e8:	e5d03003 	ldrb	r3, [r0, #3]
   131ec:	e5c03001 	strb	r3, [r0, #1]
   131f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   131f4:	e5d03009 	ldrb	r3, [r0, #9]
   131f8:	e5c03001 	strb	r3, [r0, #1]
   131fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13200:	e3560000 	cmp	r6, #0
   13204:	11a02882 	lslne	r2, r2, #17
   13208:	e28ee002 	add	lr, lr, #2
   1320c:	151f158c 	ldrne	r1, [pc, #-1420]	; 12c88 <CodesDD+0x2ae8>
   13210:	e1c0e0bc 	strh	lr, [r0, #12]
   13214:	11a028a2 	lsrne	r2, r2, #17
   13218:	07d52002 	ldrbeq	r2, [r5, r2]
   1321c:	17d12002 	ldrbne	r2, [r1, r2]
   13220:	e1d030b8 	ldrh	r3, [r0, #8]
   13224:	e6af2072 	sxtb	r2, r2
   13228:	e0833002 	add	r3, r3, r2
   1322c:	e5d02004 	ldrb	r2, [r0, #4]
   13230:	e6ff3073 	uxth	r3, r3
   13234:	e7c52003 	strb	r2, [r5, r3]
   13238:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1323c:	e3560000 	cmp	r6, #0
   13240:	11a02882 	lslne	r2, r2, #17
   13244:	e28ee002 	add	lr, lr, #2
   13248:	151f15c8 	ldrne	r1, [pc, #-1480]	; 12c88 <CodesDD+0x2ae8>
   1324c:	e1c0e0bc 	strh	lr, [r0, #12]
   13250:	11a028a2 	lsrne	r2, r2, #17
   13254:	07d52002 	ldrbeq	r2, [r5, r2]
   13258:	17d12002 	ldrbne	r2, [r1, r2]
   1325c:	e1d030b8 	ldrh	r3, [r0, #8]
   13260:	e6af2072 	sxtb	r2, r2
   13264:	e0833002 	add	r3, r3, r2
   13268:	e5d02005 	ldrb	r2, [r0, #5]
   1326c:	e6ff3073 	uxth	r3, r3
   13270:	e7c52003 	strb	r2, [r5, r3]
   13274:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13278:	e3560000 	cmp	r6, #0
   1327c:	11a02882 	lslne	r2, r2, #17
   13280:	e28ee002 	add	lr, lr, #2
   13284:	151f1604 	ldrne	r1, [pc, #-1540]	; 12c88 <CodesDD+0x2ae8>
   13288:	e1c0e0bc 	strh	lr, [r0, #12]
   1328c:	11a028a2 	lsrne	r2, r2, #17
   13290:	07d52002 	ldrbeq	r2, [r5, r2]
   13294:	17d12002 	ldrbne	r2, [r1, r2]
   13298:	e1d030b8 	ldrh	r3, [r0, #8]
   1329c:	e6af2072 	sxtb	r2, r2
   132a0:	e0833002 	add	r3, r3, r2
   132a4:	e5d02002 	ldrb	r2, [r0, #2]
   132a8:	e6ff3073 	uxth	r3, r3
   132ac:	e7c52003 	strb	r2, [r5, r3]
   132b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   132b4:	e3560000 	cmp	r6, #0
   132b8:	11a02882 	lslne	r2, r2, #17
   132bc:	e28ee002 	add	lr, lr, #2
   132c0:	151f1640 	ldrne	r1, [pc, #-1600]	; 12c88 <CodesDD+0x2ae8>
   132c4:	e1c0e0bc 	strh	lr, [r0, #12]
   132c8:	11a028a2 	lsrne	r2, r2, #17
   132cc:	07d52002 	ldrbeq	r2, [r5, r2]
   132d0:	17d12002 	ldrbne	r2, [r1, r2]
   132d4:	e1d030b8 	ldrh	r3, [r0, #8]
   132d8:	e6af2072 	sxtb	r2, r2
   132dc:	e0833002 	add	r3, r3, r2
   132e0:	e5d02003 	ldrb	r2, [r0, #3]
   132e4:	e6ff3073 	uxth	r3, r3
   132e8:	e7c52003 	strb	r2, [r5, r3]
   132ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   132f0:	e3560000 	cmp	r6, #0
   132f4:	11a02882 	lslne	r2, r2, #17
   132f8:	e28ee002 	add	lr, lr, #2
   132fc:	151f167c 	ldrne	r1, [pc, #-1660]	; 12c88 <CodesDD+0x2ae8>
   13300:	e1c0e0bc 	strh	lr, [r0, #12]
   13304:	11a028a2 	lsrne	r2, r2, #17
   13308:	07d52002 	ldrbeq	r2, [r5, r2]
   1330c:	17d12002 	ldrbne	r2, [r1, r2]
   13310:	e1d030b8 	ldrh	r3, [r0, #8]
   13314:	e6af2072 	sxtb	r2, r2
   13318:	e0833002 	add	r3, r3, r2
   1331c:	e5d02006 	ldrb	r2, [r0, #6]
   13320:	e6ff3073 	uxth	r3, r3
   13324:	e7c52003 	strb	r2, [r5, r3]
   13328:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1332c:	e3560000 	cmp	r6, #0
   13330:	11a02882 	lslne	r2, r2, #17
   13334:	e28ee002 	add	lr, lr, #2
   13338:	151f16b8 	ldrne	r1, [pc, #-1720]	; 12c88 <CodesDD+0x2ae8>
   1333c:	e1c0e0bc 	strh	lr, [r0, #12]
   13340:	11a028a2 	lsrne	r2, r2, #17
   13344:	07d52002 	ldrbeq	r2, [r5, r2]
   13348:	17d12002 	ldrbne	r2, [r1, r2]
   1334c:	e1d030b8 	ldrh	r3, [r0, #8]
   13350:	e6af2072 	sxtb	r2, r2
   13354:	e0833002 	add	r3, r3, r2
   13358:	e5d02007 	ldrb	r2, [r0, #7]
   1335c:	e6ff3073 	uxth	r3, r3
   13360:	e7c52003 	strb	r2, [r5, r3]
   13364:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13368:	e5d03018 	ldrb	r3, [r0, #24]
   1336c:	e3a02000 	mov	r2, #0
   13370:	e1e03c83 	mvn	r3, r3, lsl #25
   13374:	e1e03ca3 	mvn	r3, r3, lsr #25
   13378:	e1c0e0bc 	strh	lr, [r0, #12]
   1337c:	e5c03018 	strb	r3, [r0, #24]
   13380:	e5802024 	str	r2, [r0, #36]	; 0x24
   13384:	e5802020 	str	r2, [r0, #32]
   13388:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1338c:	e5d01001 	ldrb	r1, [r0, #1]
   13390:	e5d03000 	ldrb	r3, [r0]
   13394:	e201c001 	and	ip, r1, #1
   13398:	e3c32013 	bic	r2, r3, #19
   1339c:	e1a03383 	lsl	r3, r3, #7
   133a0:	e182200c 	orr	r2, r2, ip
   133a4:	e18330a1 	orr	r3, r3, r1, lsr #1
   133a8:	e5c02000 	strb	r2, [r0]
   133ac:	e5c03001 	strb	r3, [r0, #1]
   133b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   133b4:	e3560000 	cmp	r6, #0
   133b8:	11a02882 	lslne	r2, r2, #17
   133bc:	151f373c 	ldrne	r3, [pc, #-1852]	; 12c88 <CodesDD+0x2ae8>
   133c0:	e28ee002 	add	lr, lr, #2
   133c4:	e1c0e0bc 	strh	lr, [r0, #12]
   133c8:	11a028a2 	lsrne	r2, r2, #17
   133cc:	17d33002 	ldrbne	r3, [r3, r2]
   133d0:	07d53002 	ldrbeq	r3, [r5, r2]
   133d4:	e5c03004 	strb	r3, [r0, #4]
   133d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   133dc:	e5d02004 	ldrb	r2, [r0, #4]
   133e0:	e5d03000 	ldrb	r3, [r0]
   133e4:	e2422001 	sub	r2, r2, #1
   133e8:	e6ef2072 	uxtb	r2, r2
   133ec:	e0844002 	add	r4, r4, r2
   133f0:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   133f4:	e2033001 	and	r3, r3, #1
   133f8:	e352007f 	cmp	r2, #127	; 0x7f
   133fc:	e5c02004 	strb	r2, [r0, #4]
   13400:	e1833001 	orr	r3, r3, r1
   13404:	0a000727 	beq	150a8 <CodesDD+0x4f08>
   13408:	e202200f 	and	r2, r2, #15
   1340c:	e352000f 	cmp	r2, #15
   13410:	13a02000 	movne	r2, #0
   13414:	03a02010 	moveq	r2, #16
   13418:	e1823003 	orr	r3, r2, r3
   1341c:	e3833002 	orr	r3, r3, #2
   13420:	e5c03000 	strb	r3, [r0]
   13424:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13428:	e5d02004 	ldrb	r2, [r0, #4]
   1342c:	e5d03000 	ldrb	r3, [r0]
   13430:	e2822001 	add	r2, r2, #1
   13434:	e6ef2072 	uxtb	r2, r2
   13438:	e0844002 	add	r4, r4, r2
   1343c:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   13440:	e2033001 	and	r3, r3, #1
   13444:	e1833001 	orr	r3, r3, r1
   13448:	e3520080 	cmp	r2, #128	; 0x80
   1344c:	e5c02004 	strb	r2, [r0, #4]
   13450:	e6af3073 	sxtb	r3, r3
   13454:	0a0006fe 	beq	15054 <CodesDD+0x4eb4>
   13458:	e312000f 	tst	r2, #15
   1345c:	03a02010 	moveq	r2, #16
   13460:	13a02000 	movne	r2, #0
   13464:	e1823003 	orr	r3, r2, r3
   13468:	e5c03000 	strb	r3, [r0]
   1346c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13470:	e1d030b4 	ldrh	r3, [r0, #4]
   13474:	e2433001 	sub	r3, r3, #1
   13478:	e1c030b4 	strh	r3, [r0, #4]
   1347c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13480:	e5d02001 	ldrb	r2, [r0, #1]
   13484:	e5d03000 	ldrb	r3, [r0]
   13488:	e1e02002 	mvn	r2, r2
   1348c:	e3833012 	orr	r3, r3, #18
   13490:	e5c02001 	strb	r2, [r0, #1]
   13494:	e5c03000 	strb	r3, [r0]
   13498:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1349c:	e3560000 	cmp	r6, #0
   134a0:	11a02882 	lslne	r2, r2, #17
   134a4:	151f3824 	ldrne	r3, [pc, #-2084]	; 12c88 <CodesDD+0x2ae8>
   134a8:	e28ee002 	add	lr, lr, #2
   134ac:	e1c0e0bc 	strh	lr, [r0, #12]
   134b0:	11a028a2 	lsrne	r2, r2, #17
   134b4:	17d33002 	ldrbne	r3, [r3, r2]
   134b8:	07d53002 	ldrbeq	r3, [r5, r2]
   134bc:	e5c03008 	strb	r3, [r0, #8]
   134c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   134c4:	e5d02008 	ldrb	r2, [r0, #8]
   134c8:	e5d03000 	ldrb	r3, [r0]
   134cc:	e2422001 	sub	r2, r2, #1
   134d0:	e6ef2072 	uxtb	r2, r2
   134d4:	e0844002 	add	r4, r4, r2
   134d8:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   134dc:	e2033001 	and	r3, r3, #1
   134e0:	e352007f 	cmp	r2, #127	; 0x7f
   134e4:	e5c02008 	strb	r2, [r0, #8]
   134e8:	e1833001 	orr	r3, r3, r1
   134ec:	0a0006e4 	beq	15084 <CodesDD+0x4ee4>
   134f0:	e202200f 	and	r2, r2, #15
   134f4:	e352000f 	cmp	r2, #15
   134f8:	13a02000 	movne	r2, #0
   134fc:	03a02010 	moveq	r2, #16
   13500:	e1823003 	orr	r3, r2, r3
   13504:	e3833002 	orr	r3, r3, #2
   13508:	e5c03000 	strb	r3, [r0]
   1350c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13510:	e5d02008 	ldrb	r2, [r0, #8]
   13514:	e5d03000 	ldrb	r3, [r0]
   13518:	e2822001 	add	r2, r2, #1
   1351c:	e6ef2072 	uxtb	r2, r2
   13520:	e0844002 	add	r4, r4, r2
   13524:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   13528:	e2033001 	and	r3, r3, #1
   1352c:	e1833001 	orr	r3, r3, r1
   13530:	e3520080 	cmp	r2, #128	; 0x80
   13534:	e5c02008 	strb	r2, [r0, #8]
   13538:	e6af3073 	sxtb	r3, r3
   1353c:	0a0006d6 	beq	1509c <CodesDD+0x4efc>
   13540:	e312000f 	tst	r2, #15
   13544:	03a02010 	moveq	r2, #16
   13548:	13a02000 	movne	r2, #0
   1354c:	e1823003 	orr	r3, r2, r3
   13550:	e5c03000 	strb	r3, [r0]
   13554:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13558:	e1d030b8 	ldrh	r3, [r0, #8]
   1355c:	e2433001 	sub	r3, r3, #1
   13560:	e1c030b8 	strh	r3, [r0, #8]
   13564:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13568:	e1d020b8 	ldrh	r2, [r0, #8]
   1356c:	e5d03000 	ldrb	r3, [r0]
   13570:	e1a02082 	lsl	r2, r2, #1
   13574:	e6ffc072 	uxth	ip, r2
   13578:	e1a0144c 	asr	r1, ip, #8
   1357c:	e3c33013 	bic	r3, r3, #19
   13580:	e2011010 	and	r1, r1, #16
   13584:	e1833822 	orr	r3, r3, r2, lsr #16
   13588:	e1833001 	orr	r3, r3, r1
   1358c:	e1c0c0b8 	strh	ip, [r0, #8]
   13590:	e5c03000 	strb	r3, [r0]
   13594:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13598:	e5d03000 	ldrb	r3, [r0]
   1359c:	e3130040 	tst	r3, #64	; 0x40
   135a0:	0a00064a 	beq	14ed0 <CodesDD+0x4d30>
   135a4:	e3560000 	cmp	r6, #0
   135a8:	e2411005 	sub	r1, r1, #5
   135ac:	11a03882 	lslne	r3, r2, #17
   135b0:	e5801020 	str	r1, [r0, #32]
   135b4:	151f1934 	ldrne	r1, [pc, #-2356]	; 12c88 <CodesDD+0x2ae8>
   135b8:	11a038a3 	lsrne	r3, r3, #17
   135bc:	07d53002 	ldrbeq	r3, [r5, r2]
   135c0:	17d13003 	ldrbne	r3, [r1, r3]
   135c4:	e6af3073 	sxtb	r3, r3
   135c8:	e2833001 	add	r3, r3, #1
   135cc:	e0822003 	add	r2, r2, r3
   135d0:	e1c020bc 	strh	r2, [r0, #12]
   135d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   135d8:	e28e3002 	add	r3, lr, #2
   135dc:	e6ff3073 	uxth	r3, r3
   135e0:	e28e1003 	add	r1, lr, #3
   135e4:	e3560000 	cmp	r6, #0
   135e8:	e1c030bc 	strh	r3, [r0, #12]
   135ec:	e6ff1071 	uxth	r1, r1
   135f0:	0a000447 	beq	14714 <CodesDD+0x4574>
   135f4:	e51fe978 	ldr	lr, [pc, #-2424]	; 12c84 <CodesDD+0x2ae4>
   135f8:	e51fc978 	ldr	ip, [pc, #-2424]	; 12c88 <CodesDD+0x2ae8>
   135fc:	e002200e 	and	r2, r2, lr
   13600:	e7dc2002 	ldrb	r2, [ip, r2]
   13604:	e003300e 	and	r3, r3, lr
   13608:	e1c010bc 	strh	r1, [r0, #12]
   1360c:	e7dc3003 	ldrb	r3, [ip, r3]
   13610:	e1823403 	orr	r3, r2, r3, lsl #8
   13614:	e003200e 	and	r2, r3, lr
   13618:	e7dc2002 	ldrb	r2, [ip, r2]
   1361c:	e2833001 	add	r3, r3, #1
   13620:	e5c02008 	strb	r2, [r0, #8]
   13624:	e003300e 	and	r3, r3, lr
   13628:	e7dc3003 	ldrb	r3, [ip, r3]
   1362c:	e5c03009 	strb	r3, [r0, #9]
   13630:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13634:	e5d02000 	ldrb	r2, [r0]
   13638:	e5d03001 	ldrb	r3, [r0, #1]
   1363c:	e3120001 	tst	r2, #1
   13640:	13833c01 	orrne	r3, r3, #256	; 0x100
   13644:	e3120010 	tst	r2, #16
   13648:	13833c02 	orrne	r3, r3, #512	; 0x200
   1364c:	e3120002 	tst	r2, #2
   13650:	13833b01 	orrne	r3, r3, #1024	; 0x400
   13654:	e51f29dc 	ldr	r2, [pc, #-2524]	; 12c80 <CodesDD+0x2ae0>
   13658:	e1a03083 	lsl	r3, r3, #1
   1365c:	e19230b3 	ldrh	r3, [r2, r3]
   13660:	e1c030b0 	strh	r3, [r0]
   13664:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13668:	e5d03001 	ldrb	r3, [r0, #1]
   1366c:	e5d02000 	ldrb	r2, [r0]
   13670:	e2131001 	ands	r1, r3, #1
   13674:	e1a030a3 	lsr	r3, r3, #1
   13678:	11e03c83 	mvnne	r3, r3, lsl #25
   1367c:	11e03ca3 	mvnne	r3, r3, lsr #25
   13680:	e5c03001 	strb	r3, [r0, #1]
   13684:	e3c23013 	bic	r3, r2, #19
   13688:	e1833001 	orr	r3, r3, r1
   1368c:	e5c03000 	strb	r3, [r0]
   13690:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13694:	e3560000 	cmp	r6, #0
   13698:	11a02882 	lslne	r2, r2, #17
   1369c:	151f3a1c 	ldrne	r3, [pc, #-2588]	; 12c88 <CodesDD+0x2ae8>
   136a0:	e28ee002 	add	lr, lr, #2
   136a4:	e1c0e0bc 	strh	lr, [r0, #12]
   136a8:	11a028a2 	lsrne	r2, r2, #17
   136ac:	17d33002 	ldrbne	r3, [r3, r2]
   136b0:	07d53002 	ldrbeq	r3, [r5, r2]
   136b4:	e5c03002 	strb	r3, [r0, #2]
   136b8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   136bc:	e5d02002 	ldrb	r2, [r0, #2]
   136c0:	e5d03000 	ldrb	r3, [r0]
   136c4:	e2422001 	sub	r2, r2, #1
   136c8:	e6ef2072 	uxtb	r2, r2
   136cc:	e0844002 	add	r4, r4, r2
   136d0:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   136d4:	e2033001 	and	r3, r3, #1
   136d8:	e352007f 	cmp	r2, #127	; 0x7f
   136dc:	e5c02002 	strb	r2, [r0, #2]
   136e0:	e1833001 	orr	r3, r3, r1
   136e4:	0a000669 	beq	15090 <CodesDD+0x4ef0>
   136e8:	e202200f 	and	r2, r2, #15
   136ec:	e352000f 	cmp	r2, #15
   136f0:	13a02000 	movne	r2, #0
   136f4:	03a02010 	moveq	r2, #16
   136f8:	e1823003 	orr	r3, r2, r3
   136fc:	e3833002 	orr	r3, r3, #2
   13700:	e5c03000 	strb	r3, [r0]
   13704:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13708:	e5d02002 	ldrb	r2, [r0, #2]
   1370c:	e5d03000 	ldrb	r3, [r0]
   13710:	e2822001 	add	r2, r2, #1
   13714:	e6ef2072 	uxtb	r2, r2
   13718:	e0844002 	add	r4, r4, r2
   1371c:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   13720:	e2033001 	and	r3, r3, #1
   13724:	e1833001 	orr	r3, r3, r1
   13728:	e3520080 	cmp	r2, #128	; 0x80
   1372c:	e5c02002 	strb	r2, [r0, #2]
   13730:	e6af3073 	sxtb	r3, r3
   13734:	0a00065e 	beq	150b4 <CodesDD+0x4f14>
   13738:	e312000f 	tst	r2, #15
   1373c:	03a02010 	moveq	r2, #16
   13740:	13a02000 	movne	r2, #0
   13744:	e1823003 	orr	r3, r2, r3
   13748:	e5c03000 	strb	r3, [r0]
   1374c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13750:	e1d030b2 	ldrh	r3, [r0, #2]
   13754:	e2433001 	sub	r3, r3, #1
   13758:	e1c030b2 	strh	r3, [r0, #2]
   1375c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13760:	e5d03000 	ldrb	r3, [r0]
   13764:	e3c33012 	bic	r3, r3, #18
   13768:	e3833001 	orr	r3, r3, #1
   1376c:	e5c03000 	strb	r3, [r0]
   13770:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13774:	e28e1002 	add	r1, lr, #2
   13778:	e6ff1071 	uxth	r1, r1
   1377c:	e28ec003 	add	ip, lr, #3
   13780:	e3560000 	cmp	r6, #0
   13784:	e1c010bc 	strh	r1, [r0, #12]
   13788:	e6ffc07c 	uxth	ip, ip
   1378c:	e1d030b8 	ldrh	r3, [r0, #8]
   13790:	0a0003e9 	beq	1473c <CodesDD+0x459c>
   13794:	e51f4b18 	ldr	r4, [pc, #-2840]	; 12c84 <CodesDD+0x2ae4>
   13798:	e51feb18 	ldr	lr, [pc, #-2840]	; 12c88 <CodesDD+0x2ae8>
   1379c:	e0022004 	and	r2, r2, r4
   137a0:	e19e20d2 	ldrsb	r2, [lr, r2]
   137a4:	e0011004 	and	r1, r1, r4
   137a8:	e1c0c0bc 	strh	ip, [r0, #12]
   137ac:	e0833002 	add	r3, r3, r2
   137b0:	e7de2001 	ldrb	r2, [lr, r1]
   137b4:	e6ff3073 	uxth	r3, r3
   137b8:	e7c52003 	strb	r2, [r5, r3]
   137bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   137c0:	e3560000 	cmp	r6, #0
   137c4:	e1d0c0b8 	ldrh	ip, [r0, #8]
   137c8:	0a0003f6 	beq	147a8 <CodesDD+0x4608>
   137cc:	e51f7b50 	ldr	r7, [pc, #-2896]	; 12c84 <CodesDD+0x2ae4>
   137d0:	e51f1b50 	ldr	r1, [pc, #-2896]	; 12c88 <CodesDD+0x2ae8>
   137d4:	e0023007 	and	r3, r2, r7
   137d8:	e19130d3 	ldrsb	r3, [r1, r3]
   137dc:	e08c3003 	add	r3, ip, r3
   137e0:	e0033007 	and	r3, r3, r7
   137e4:	e7d11003 	ldrb	r1, [r1, r3]
   137e8:	e2411001 	sub	r1, r1, #1
   137ec:	e6ef1071 	uxtb	r1, r1
   137f0:	e0844001 	add	r4, r4, r1
   137f4:	e5d03000 	ldrb	r3, [r0]
   137f8:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   137fc:	e2033001 	and	r3, r3, #1
   13800:	e351007f 	cmp	r1, #127	; 0x7f
   13804:	e1833004 	orr	r3, r3, r4
   13808:	0a00060b 	beq	1503c <CodesDD+0x4e9c>
   1380c:	e201400f 	and	r4, r1, #15
   13810:	e354000f 	cmp	r4, #15
   13814:	13a04000 	movne	r4, #0
   13818:	03a04010 	moveq	r4, #16
   1381c:	e1843003 	orr	r3, r4, r3
   13820:	e3833002 	orr	r3, r3, #2
   13824:	e3560000 	cmp	r6, #0
   13828:	e5c03000 	strb	r3, [r0]
   1382c:	11a02882 	lslne	r2, r2, #17
   13830:	151f3bb0 	ldrne	r3, [pc, #-2992]	; 12c88 <CodesDD+0x2ae8>
   13834:	e28ee002 	add	lr, lr, #2
   13838:	e1c0e0bc 	strh	lr, [r0, #12]
   1383c:	11a028a2 	lsrne	r2, r2, #17
   13840:	07d53002 	ldrbeq	r3, [r5, r2]
   13844:	17d33002 	ldrbne	r3, [r3, r2]
   13848:	e6af3073 	sxtb	r3, r3
   1384c:	e08c3003 	add	r3, ip, r3
   13850:	e6ff3073 	uxth	r3, r3
   13854:	e7c51003 	strb	r1, [r5, r3]
   13858:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1385c:	e1d030d0 	ldrsb	r3, [r0]
   13860:	e5d01001 	ldrb	r1, [r0, #1]
   13864:	e2032001 	and	r2, r3, #1
   13868:	e3c33013 	bic	r3, r3, #19
   1386c:	e1822081 	orr	r2, r2, r1, lsl #1
   13870:	e18333a1 	orr	r3, r3, r1, lsr #7
   13874:	e5c02001 	strb	r2, [r0, #1]
   13878:	e5c03000 	strb	r3, [r0]
   1387c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13880:	e3560000 	cmp	r6, #0
   13884:	11a02882 	lslne	r2, r2, #17
   13888:	151f3c08 	ldrne	r3, [pc, #-3080]	; 12c88 <CodesDD+0x2ae8>
   1388c:	e28ee002 	add	lr, lr, #2
   13890:	e1c0e0bc 	strh	lr, [r0, #12]
   13894:	11a028a2 	lsrne	r2, r2, #17
   13898:	17d33002 	ldrbne	r3, [r3, r2]
   1389c:	07d53002 	ldrbeq	r3, [r5, r2]
   138a0:	e5c03005 	strb	r3, [r0, #5]
   138a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   138a8:	e1d030b8 	ldrh	r3, [r0, #8]
   138ac:	e2833001 	add	r3, r3, #1
   138b0:	e1c030b8 	strh	r3, [r0, #8]
   138b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   138b8:	e3560000 	cmp	r6, #0
   138bc:	e28e1002 	add	r1, lr, #2
   138c0:	151f4c44 	ldrne	r4, [pc, #-3140]	; 12c84 <CodesDD+0x2ae4>
   138c4:	e6ff1071 	uxth	r1, r1
   138c8:	e28ec003 	add	ip, lr, #3
   138cc:	151fec4c 	ldrne	lr, [pc, #-3148]	; 12c88 <CodesDD+0x2ae8>
   138d0:	e1c010bc 	strh	r1, [r0, #12]
   138d4:	e6ffc07c 	uxth	ip, ip
   138d8:	10022004 	andne	r2, r2, r4
   138dc:	07d53002 	ldrbeq	r3, [r5, r2]
   138e0:	17de3002 	ldrbne	r3, [lr, r2]
   138e4:	01c0c0bc 	strheq	ip, [r0, #12]
   138e8:	11c0c0bc 	strhne	ip, [r0, #12]
   138ec:	10011004 	andne	r1, r1, r4
   138f0:	07d51001 	ldrbeq	r1, [r5, r1]
   138f4:	17de1001 	ldrbne	r1, [lr, r1]
   138f8:	e5d02008 	ldrb	r2, [r0, #8]
   138fc:	e6ef3073 	uxtb	r3, r3
   13900:	e1833401 	orr	r3, r3, r1, lsl #8
   13904:	e7c52003 	strb	r2, [r5, r3]
   13908:	e5d02009 	ldrb	r2, [r0, #9]
   1390c:	e2833001 	add	r3, r3, #1
   13910:	e6ff3073 	uxth	r3, r3
   13914:	e7c52003 	strb	r2, [r5, r3]
   13918:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1391c:	e28e3002 	add	r3, lr, #2
   13920:	e6ff3073 	uxth	r3, r3
   13924:	e28e1003 	add	r1, lr, #3
   13928:	e3560000 	cmp	r6, #0
   1392c:	e1c030bc 	strh	r3, [r0, #12]
   13930:	e6ff1071 	uxth	r1, r1
   13934:	0a000371 	beq	14700 <CodesDD+0x4560>
   13938:	e51fecbc 	ldr	lr, [pc, #-3260]	; 12c84 <CodesDD+0x2ae4>
   1393c:	e51fccbc 	ldr	ip, [pc, #-3260]	; 12c88 <CodesDD+0x2ae8>
   13940:	e002200e 	and	r2, r2, lr
   13944:	e7dc2002 	ldrb	r2, [ip, r2]
   13948:	e003300e 	and	r3, r3, lr
   1394c:	e5c02008 	strb	r2, [r0, #8]
   13950:	e1c010bc 	strh	r1, [r0, #12]
   13954:	e7dc3003 	ldrb	r3, [ip, r3]
   13958:	e5c03009 	strb	r3, [r0, #9]
   1395c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13960:	e5d03000 	ldrb	r3, [r0]
   13964:	e3130040 	tst	r3, #64	; 0x40
   13968:	1a00054e 	bne	14ea8 <CodesDD+0x4d08>
   1396c:	e3560000 	cmp	r6, #0
   13970:	e2411005 	sub	r1, r1, #5
   13974:	11a03882 	lslne	r3, r2, #17
   13978:	e5801020 	str	r1, [r0, #32]
   1397c:	151f1cfc 	ldrne	r1, [pc, #-3324]	; 12c88 <CodesDD+0x2ae8>
   13980:	11a038a3 	lsrne	r3, r3, #17
   13984:	07d53002 	ldrbeq	r3, [r5, r2]
   13988:	17d13003 	ldrbne	r3, [r1, r3]
   1398c:	e6af3073 	sxtb	r3, r3
   13990:	e2833001 	add	r3, r3, #1
   13994:	e0822003 	add	r2, r2, r3
   13998:	e1c020bc 	strh	r2, [r0, #12]
   1399c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   139a0:	e5d02009 	ldrb	r2, [r0, #9]
   139a4:	e5d03000 	ldrb	r3, [r0]
   139a8:	e2422001 	sub	r2, r2, #1
   139ac:	e6ef2072 	uxtb	r2, r2
   139b0:	e0844002 	add	r4, r4, r2
   139b4:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   139b8:	e2033001 	and	r3, r3, #1
   139bc:	e352007f 	cmp	r2, #127	; 0x7f
   139c0:	e5c02009 	strb	r2, [r0, #9]
   139c4:	e1833001 	orr	r3, r3, r1
   139c8:	0a000593 	beq	1501c <CodesDD+0x4e7c>
   139cc:	e202200f 	and	r2, r2, #15
   139d0:	e352000f 	cmp	r2, #15
   139d4:	13a02000 	movne	r2, #0
   139d8:	03a02010 	moveq	r2, #16
   139dc:	e1823003 	orr	r3, r2, r3
   139e0:	e3833002 	orr	r3, r3, #2
   139e4:	e5c03000 	strb	r3, [r0]
   139e8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   139ec:	e3560000 	cmp	r6, #0
   139f0:	11a02882 	lslne	r2, r2, #17
   139f4:	159f3de8 	ldrne	r3, [pc, #3560]	; 147e4 <CodesDD+0x4644>
   139f8:	e28ee002 	add	lr, lr, #2
   139fc:	e1c0e0bc 	strh	lr, [r0, #12]
   13a00:	11a028a2 	lsrne	r2, r2, #17
   13a04:	17d33002 	ldrbne	r3, [r3, r2]
   13a08:	07d53002 	ldrbeq	r3, [r5, r2]
   13a0c:	e5c03009 	strb	r3, [r0, #9]
   13a10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13a14:	e5d02009 	ldrb	r2, [r0, #9]
   13a18:	e5d03000 	ldrb	r3, [r0]
   13a1c:	e2822001 	add	r2, r2, #1
   13a20:	e6ef2072 	uxtb	r2, r2
   13a24:	e0844002 	add	r4, r4, r2
   13a28:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   13a2c:	e2033001 	and	r3, r3, #1
   13a30:	e1833001 	orr	r3, r3, r1
   13a34:	e3520080 	cmp	r2, #128	; 0x80
   13a38:	e5c02009 	strb	r2, [r0, #9]
   13a3c:	e6af3073 	sxtb	r3, r3
   13a40:	0a00058c 	beq	15078 <CodesDD+0x4ed8>
   13a44:	e312000f 	tst	r2, #15
   13a48:	03a02010 	moveq	r2, #16
   13a4c:	13a02000 	movne	r2, #0
   13a50:	e1823003 	orr	r3, r2, r3
   13a54:	e5c03000 	strb	r3, [r0]
   13a58:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13a5c:	e1d030be 	ldrh	r3, [r0, #14]
   13a60:	e2433001 	sub	r3, r3, #1
   13a64:	e1c030be 	strh	r3, [r0, #14]
   13a68:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13a6c:	e1d030be 	ldrh	r3, [r0, #14]
   13a70:	e2833001 	add	r3, r3, #1
   13a74:	e1c030be 	strh	r3, [r0, #14]
   13a78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13a7c:	e3560000 	cmp	r6, #0
   13a80:	e28e1002 	add	r1, lr, #2
   13a84:	159f4d5c 	ldrne	r4, [pc, #3420]	; 147e8 <CodesDD+0x4648>
   13a88:	e6ff1071 	uxth	r1, r1
   13a8c:	e28ec003 	add	ip, lr, #3
   13a90:	159fed4c 	ldrne	lr, [pc, #3404]	; 147e4 <CodesDD+0x4644>
   13a94:	e1c010bc 	strh	r1, [r0, #12]
   13a98:	e6ffc07c 	uxth	ip, ip
   13a9c:	10022004 	andne	r2, r2, r4
   13aa0:	07d53002 	ldrbeq	r3, [r5, r2]
   13aa4:	17de3002 	ldrbne	r3, [lr, r2]
   13aa8:	10011004 	andne	r1, r1, r4
   13aac:	11c0c0bc 	strhne	ip, [r0, #12]
   13ab0:	01c0c0bc 	strheq	ip, [r0, #12]
   13ab4:	07d51001 	ldrbeq	r1, [r5, r1]
   13ab8:	17de1001 	ldrbne	r1, [lr, r1]
   13abc:	e6ef3073 	uxtb	r3, r3
   13ac0:	e5d02001 	ldrb	r2, [r0, #1]
   13ac4:	e1833401 	orr	r3, r3, r1, lsl #8
   13ac8:	e7c52003 	strb	r2, [r5, r3]
   13acc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13ad0:	e28e3002 	add	r3, lr, #2
   13ad4:	e6ff3073 	uxth	r3, r3
   13ad8:	e28e1003 	add	r1, lr, #3
   13adc:	e3560000 	cmp	r6, #0
   13ae0:	e1c030bc 	strh	r3, [r0, #12]
   13ae4:	e6ff1071 	uxth	r1, r1
   13ae8:	0a000319 	beq	14754 <CodesDD+0x45b4>
   13aec:	e59fecf4 	ldr	lr, [pc, #3316]	; 147e8 <CodesDD+0x4648>
   13af0:	e59fccec 	ldr	ip, [pc, #3308]	; 147e4 <CodesDD+0x4644>
   13af4:	e002200e 	and	r2, r2, lr
   13af8:	e7dc2002 	ldrb	r2, [ip, r2]
   13afc:	e003300e 	and	r3, r3, lr
   13b00:	e5c0200e 	strb	r2, [r0, #14]
   13b04:	e1c010bc 	strh	r1, [r0, #12]
   13b08:	e7dc3003 	ldrb	r3, [ip, r3]
   13b0c:	e5c0300f 	strb	r3, [r0, #15]
   13b10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13b14:	e5d03000 	ldrb	r3, [r0]
   13b18:	e3130001 	tst	r3, #1
   13b1c:	1a0004fa 	bne	14f0c <CodesDD+0x4d6c>
   13b20:	e3560000 	cmp	r6, #0
   13b24:	e2411005 	sub	r1, r1, #5
   13b28:	11a03882 	lslne	r3, r2, #17
   13b2c:	e5801020 	str	r1, [r0, #32]
   13b30:	159f1cac 	ldrne	r1, [pc, #3244]	; 147e4 <CodesDD+0x4644>
   13b34:	11a038a3 	lsrne	r3, r3, #17
   13b38:	07d53002 	ldrbeq	r3, [r5, r2]
   13b3c:	17d13003 	ldrbne	r3, [r1, r3]
   13b40:	e6af3073 	sxtb	r3, r3
   13b44:	e2833001 	add	r3, r3, #1
   13b48:	e0822003 	add	r2, r2, r3
   13b4c:	e1c020bc 	strh	r2, [r0, #12]
   13b50:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13b54:	e3560000 	cmp	r6, #0
   13b58:	e1d0c0b8 	ldrh	ip, [r0, #8]
   13b5c:	0a000301 	beq	14768 <CodesDD+0x45c8>
   13b60:	e59f7c80 	ldr	r7, [pc, #3200]	; 147e8 <CodesDD+0x4648>
   13b64:	e59f1c78 	ldr	r1, [pc, #3192]	; 147e4 <CodesDD+0x4644>
   13b68:	e0023007 	and	r3, r2, r7
   13b6c:	e19130d3 	ldrsb	r3, [r1, r3]
   13b70:	e08c3003 	add	r3, ip, r3
   13b74:	e0033007 	and	r3, r3, r7
   13b78:	e7d11003 	ldrb	r1, [r1, r3]
   13b7c:	e2811001 	add	r1, r1, #1
   13b80:	e6ef1071 	uxtb	r1, r1
   13b84:	e0844001 	add	r4, r4, r1
   13b88:	e5d03000 	ldrb	r3, [r0]
   13b8c:	e5d44300 	ldrb	r4, [r4, #768]	; 0x300
   13b90:	e2033001 	and	r3, r3, #1
   13b94:	e1833004 	orr	r3, r3, r4
   13b98:	e3510080 	cmp	r1, #128	; 0x80
   13b9c:	e6af3073 	sxtb	r3, r3
   13ba0:	0a000531 	beq	1506c <CodesDD+0x4ecc>
   13ba4:	e311000f 	tst	r1, #15
   13ba8:	03a04010 	moveq	r4, #16
   13bac:	13a04000 	movne	r4, #0
   13bb0:	e1843003 	orr	r3, r4, r3
   13bb4:	e3560000 	cmp	r6, #0
   13bb8:	e5c03000 	strb	r3, [r0]
   13bbc:	11a02882 	lslne	r2, r2, #17
   13bc0:	159f3c1c 	ldrne	r3, [pc, #3100]	; 147e4 <CodesDD+0x4644>
   13bc4:	e28ee002 	add	lr, lr, #2
   13bc8:	e1c0e0bc 	strh	lr, [r0, #12]
   13bcc:	11a028a2 	lsrne	r2, r2, #17
   13bd0:	07d53002 	ldrbeq	r3, [r5, r2]
   13bd4:	17d33002 	ldrbne	r3, [r3, r2]
   13bd8:	e6af3073 	sxtb	r3, r3
   13bdc:	e08c3003 	add	r3, ip, r3
   13be0:	e6ff3073 	uxth	r3, r3
   13be4:	e7c51003 	strb	r1, [r5, r3]
   13be8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13bec:	e5d02001 	ldrb	r2, [r0, #1]
   13bf0:	e5d03000 	ldrb	r3, [r0]
   13bf4:	e2422001 	sub	r2, r2, #1
   13bf8:	e6ef2072 	uxtb	r2, r2
   13bfc:	e0844002 	add	r4, r4, r2
   13c00:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   13c04:	e2033001 	and	r3, r3, #1
   13c08:	e352007f 	cmp	r2, #127	; 0x7f
   13c0c:	e5c02001 	strb	r2, [r0, #1]
   13c10:	e1833001 	orr	r3, r3, r1
   13c14:	0a000511 	beq	15060 <CodesDD+0x4ec0>
   13c18:	e202200f 	and	r2, r2, #15
   13c1c:	e352000f 	cmp	r2, #15
   13c20:	13a02000 	movne	r2, #0
   13c24:	03a02010 	moveq	r2, #16
   13c28:	e1823003 	orr	r3, r2, r3
   13c2c:	e3833002 	orr	r3, r3, #2
   13c30:	e5c03000 	strb	r3, [r0]
   13c34:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13c38:	e5d02001 	ldrb	r2, [r0, #1]
   13c3c:	e5d03000 	ldrb	r3, [r0]
   13c40:	e2822001 	add	r2, r2, #1
   13c44:	e6ef2072 	uxtb	r2, r2
   13c48:	e0844002 	add	r4, r4, r2
   13c4c:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   13c50:	e2033001 	and	r3, r3, #1
   13c54:	e1833001 	orr	r3, r3, r1
   13c58:	e3520080 	cmp	r2, #128	; 0x80
   13c5c:	e5c02001 	strb	r2, [r0, #1]
   13c60:	e6af3073 	sxtb	r3, r3
   13c64:	0a0004f7 	beq	15048 <CodesDD+0x4ea8>
   13c68:	e312000f 	tst	r2, #15
   13c6c:	03a02010 	moveq	r2, #16
   13c70:	13a02000 	movne	r2, #0
   13c74:	e1823003 	orr	r3, r2, r3
   13c78:	e5c03000 	strb	r3, [r0]
   13c7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13c80:	e1d030b8 	ldrh	r3, [r0, #8]
   13c84:	e1d010be 	ldrh	r1, [r0, #14]
   13c88:	e5d02000 	ldrb	r2, [r0]
   13c8c:	e083c001 	add	ip, r3, r1
   13c90:	e0233001 	eor	r3, r3, r1
   13c94:	e6ff107c 	uxth	r1, ip
   13c98:	e0233001 	eor	r3, r3, r1
   13c9c:	e1a03443 	asr	r3, r3, #8
   13ca0:	e3c22013 	bic	r2, r2, #19
   13ca4:	e2033010 	and	r3, r3, #16
   13ca8:	e182282c 	orr	r2, r2, ip, lsr #16
   13cac:	e1823003 	orr	r3, r2, r3
   13cb0:	e1c010b8 	strh	r1, [r0, #8]
   13cb4:	e5c03000 	strb	r3, [r0]
   13cb8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13cbc:	e3560000 	cmp	r6, #0
   13cc0:	11a02882 	lslne	r2, r2, #17
   13cc4:	159f3b18 	ldrne	r3, [pc, #2840]	; 147e4 <CodesDD+0x4644>
   13cc8:	e28ee002 	add	lr, lr, #2
   13ccc:	e1c0e0bc 	strh	lr, [r0, #12]
   13cd0:	11a028a2 	lsrne	r2, r2, #17
   13cd4:	17d33002 	ldrbne	r3, [r3, r2]
   13cd8:	07d53002 	ldrbeq	r3, [r5, r2]
   13cdc:	e5c03001 	strb	r3, [r0, #1]
   13ce0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13ce4:	e28e3002 	add	r3, lr, #2
   13ce8:	e6ff3073 	uxth	r3, r3
   13cec:	e28e1003 	add	r1, lr, #3
   13cf0:	e3560000 	cmp	r6, #0
   13cf4:	e1c030bc 	strh	r3, [r0, #12]
   13cf8:	e6ff1071 	uxth	r1, r1
   13cfc:	0a00029e 	beq	1477c <CodesDD+0x45dc>
   13d00:	e59feae0 	ldr	lr, [pc, #2784]	; 147e8 <CodesDD+0x4648>
   13d04:	e59fcad8 	ldr	ip, [pc, #2776]	; 147e4 <CodesDD+0x4644>
   13d08:	e002200e 	and	r2, r2, lr
   13d0c:	e7dc2002 	ldrb	r2, [ip, r2]
   13d10:	e003300e 	and	r3, r3, lr
   13d14:	e1c010bc 	strh	r1, [r0, #12]
   13d18:	e7dc3003 	ldrb	r3, [ip, r3]
   13d1c:	e1823403 	orr	r3, r2, r3, lsl #8
   13d20:	e003300e 	and	r3, r3, lr
   13d24:	e7dc3003 	ldrb	r3, [ip, r3]
   13d28:	e5c03001 	strb	r3, [r0, #1]
   13d2c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13d30:	e5d03000 	ldrb	r3, [r0]
   13d34:	e3130001 	tst	r3, #1
   13d38:	0a000476 	beq	14f18 <CodesDD+0x4d78>
   13d3c:	e3560000 	cmp	r6, #0
   13d40:	e2411005 	sub	r1, r1, #5
   13d44:	11a03882 	lslne	r3, r2, #17
   13d48:	e5801020 	str	r1, [r0, #32]
   13d4c:	159f1a90 	ldrne	r1, [pc, #2704]	; 147e4 <CodesDD+0x4644>
   13d50:	11a038a3 	lsrne	r3, r3, #17
   13d54:	07d53002 	ldrbeq	r3, [r5, r2]
   13d58:	17d13003 	ldrbne	r3, [r1, r3]
   13d5c:	e6af3073 	sxtb	r3, r3
   13d60:	e2833001 	add	r3, r3, #1
   13d64:	e0822003 	add	r2, r2, r3
   13d68:	e1c020bc 	strh	r2, [r0, #12]
   13d6c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13d70:	e5d02001 	ldrb	r2, [r0, #1]
   13d74:	e5d01000 	ldrb	r1, [r0]
   13d78:	e1a033a2 	lsr	r3, r2, #7
   13d7c:	e3c11013 	bic	r1, r1, #19
   13d80:	e1832082 	orr	r2, r3, r2, lsl #1
   13d84:	e1833001 	orr	r3, r3, r1
   13d88:	e5c02001 	strb	r2, [r0, #1]
   13d8c:	e5c03000 	strb	r3, [r0]
   13d90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13d94:	e1d030b8 	ldrh	r3, [r0, #8]
   13d98:	e1d010b4 	ldrh	r1, [r0, #4]
   13d9c:	e5d02000 	ldrb	r2, [r0]
   13da0:	e083c001 	add	ip, r3, r1
   13da4:	e0233001 	eor	r3, r3, r1
   13da8:	e6ff107c 	uxth	r1, ip
   13dac:	e0233001 	eor	r3, r3, r1
   13db0:	e1a03443 	asr	r3, r3, #8
   13db4:	e3c22013 	bic	r2, r2, #19
   13db8:	e2033010 	and	r3, r3, #16
   13dbc:	e182282c 	orr	r2, r2, ip, lsr #16
   13dc0:	e1823003 	orr	r3, r2, r3
   13dc4:	e1c010b8 	strh	r1, [r0, #8]
   13dc8:	e5c03000 	strb	r3, [r0]
   13dcc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13dd0:	e3560000 	cmp	r6, #0
   13dd4:	11a03882 	lslne	r3, r2, #17
   13dd8:	159f1a04 	ldrne	r1, [pc, #2564]	; 147e4 <CodesDD+0x4644>
   13ddc:	11a038a3 	lsrne	r3, r3, #17
   13de0:	07d53002 	ldrbeq	r3, [r5, r2]
   13de4:	17d13003 	ldrbne	r3, [r1, r3]
   13de8:	e6af3073 	sxtb	r3, r3
   13dec:	e2833001 	add	r3, r3, #1
   13df0:	e0822003 	add	r2, r2, r3
   13df4:	e1c020bc 	strh	r2, [r0, #12]
   13df8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13dfc:	e1d030b4 	ldrh	r3, [r0, #4]
   13e00:	e3560000 	cmp	r6, #0
   13e04:	11a03883 	lslne	r3, r3, #17
   13e08:	159f29d4 	ldrne	r2, [pc, #2516]	; 147e4 <CodesDD+0x4644>
   13e0c:	11a038a3 	lsrne	r3, r3, #17
   13e10:	17d23003 	ldrbne	r3, [r2, r3]
   13e14:	07d53003 	ldrbeq	r3, [r5, r3]
   13e18:	e5c03001 	strb	r3, [r0, #1]
   13e1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13e20:	e1d030b4 	ldrh	r3, [r0, #4]
   13e24:	e2833001 	add	r3, r3, #1
   13e28:	e1c030b4 	strh	r3, [r0, #4]
   13e2c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13e30:	e5d02001 	ldrb	r2, [r0, #1]
   13e34:	e1d030b4 	ldrh	r3, [r0, #4]
   13e38:	e7c52003 	strb	r2, [r5, r3]
   13e3c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13e40:	e28e3002 	add	r3, lr, #2
   13e44:	e6ff3073 	uxth	r3, r3
   13e48:	e28e1003 	add	r1, lr, #3
   13e4c:	e3560000 	cmp	r6, #0
   13e50:	e1c030bc 	strh	r3, [r0, #12]
   13e54:	e6ff1071 	uxth	r1, r1
   13e58:	0a00024d 	beq	14794 <CodesDD+0x45f4>
   13e5c:	e59fe984 	ldr	lr, [pc, #2436]	; 147e8 <CodesDD+0x4648>
   13e60:	e59fc97c 	ldr	ip, [pc, #2428]	; 147e4 <CodesDD+0x4644>
   13e64:	e002200e 	and	r2, r2, lr
   13e68:	e7dc2002 	ldrb	r2, [ip, r2]
   13e6c:	e003300e 	and	r3, r3, lr
   13e70:	e5c02004 	strb	r2, [r0, #4]
   13e74:	e1c010bc 	strh	r1, [r0, #12]
   13e78:	e7dc3003 	ldrb	r3, [ip, r3]
   13e7c:	e5c03005 	strb	r3, [r0, #5]
   13e80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13e84:	e5d03003 	ldrb	r3, [r0, #3]
   13e88:	e2433001 	sub	r3, r3, #1
   13e8c:	e6ef3073 	uxtb	r3, r3
   13e90:	e3530000 	cmp	r3, #0
   13e94:	e5c03003 	strb	r3, [r0, #3]
   13e98:	0a000418 	beq	14f00 <CodesDD+0x4d60>
   13e9c:	e3560000 	cmp	r6, #0
   13ea0:	e2411005 	sub	r1, r1, #5
   13ea4:	11a03882 	lslne	r3, r2, #17
   13ea8:	e5801020 	str	r1, [r0, #32]
   13eac:	159f1930 	ldrne	r1, [pc, #2352]	; 147e4 <CodesDD+0x4644>
   13eb0:	11a038a3 	lsrne	r3, r3, #17
   13eb4:	07d53002 	ldrbeq	r3, [r5, r2]
   13eb8:	17d13003 	ldrbne	r3, [r1, r3]
   13ebc:	e6af3073 	sxtb	r3, r3
   13ec0:	e2833001 	add	r3, r3, #1
   13ec4:	e0822003 	add	r2, r2, r3
   13ec8:	e1c020bc 	strh	r2, [r0, #12]
   13ecc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13ed0:	e5d02005 	ldrb	r2, [r0, #5]
   13ed4:	e5d03000 	ldrb	r3, [r0]
   13ed8:	e2422001 	sub	r2, r2, #1
   13edc:	e6ef2072 	uxtb	r2, r2
   13ee0:	e0844002 	add	r4, r4, r2
   13ee4:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   13ee8:	e2033001 	and	r3, r3, #1
   13eec:	e352007f 	cmp	r2, #127	; 0x7f
   13ef0:	e5c02005 	strb	r2, [r0, #5]
   13ef4:	e1833001 	orr	r3, r3, r1
   13ef8:	0a000476 	beq	150d8 <CodesDD+0x4f38>
   13efc:	e202200f 	and	r2, r2, #15
   13f00:	e352000f 	cmp	r2, #15
   13f04:	13a02000 	movne	r2, #0
   13f08:	03a02010 	moveq	r2, #16
   13f0c:	e1823003 	orr	r3, r2, r3
   13f10:	e3833002 	orr	r3, r3, #2
   13f14:	e5c03000 	strb	r3, [r0]
   13f18:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13f1c:	e1d030b8 	ldrh	r3, [r0, #8]
   13f20:	e1d010b2 	ldrh	r1, [r0, #2]
   13f24:	e5d02000 	ldrb	r2, [r0]
   13f28:	e083c001 	add	ip, r3, r1
   13f2c:	e0233001 	eor	r3, r3, r1
   13f30:	e6ff107c 	uxth	r1, ip
   13f34:	e0233001 	eor	r3, r3, r1
   13f38:	e1a03443 	asr	r3, r3, #8
   13f3c:	e3c22013 	bic	r2, r2, #19
   13f40:	e2033010 	and	r3, r3, #16
   13f44:	e182282c 	orr	r2, r2, ip, lsr #16
   13f48:	e1823003 	orr	r3, r2, r3
   13f4c:	e1c010b8 	strh	r1, [r0, #8]
   13f50:	e5c03000 	strb	r3, [r0]
   13f54:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13f58:	e5d02005 	ldrb	r2, [r0, #5]
   13f5c:	e5d03000 	ldrb	r3, [r0]
   13f60:	e2822001 	add	r2, r2, #1
   13f64:	e6ef2072 	uxtb	r2, r2
   13f68:	e0844002 	add	r4, r4, r2
   13f6c:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   13f70:	e2033001 	and	r3, r3, #1
   13f74:	e1833001 	orr	r3, r3, r1
   13f78:	e3520080 	cmp	r2, #128	; 0x80
   13f7c:	e5c02005 	strb	r2, [r0, #5]
   13f80:	e6af3073 	sxtb	r3, r3
   13f84:	0a00044d 	beq	150c0 <CodesDD+0x4f20>
   13f88:	e312000f 	tst	r2, #15
   13f8c:	03a02010 	moveq	r2, #16
   13f90:	13a02000 	movne	r2, #0
   13f94:	e1823003 	orr	r3, r2, r3
   13f98:	e5c03000 	strb	r3, [r0]
   13f9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13fa0:	e1d030b2 	ldrh	r3, [r0, #2]
   13fa4:	e2833001 	add	r3, r3, #1
   13fa8:	e1c030b2 	strh	r3, [r0, #2]
   13fac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13fb0:	e1d030b2 	ldrh	r3, [r0, #2]
   13fb4:	e3560000 	cmp	r6, #0
   13fb8:	11a03883 	lslne	r3, r3, #17
   13fbc:	159f2820 	ldrne	r2, [pc, #2080]	; 147e4 <CodesDD+0x4644>
   13fc0:	11a038a3 	lsrne	r3, r3, #17
   13fc4:	17d23003 	ldrbne	r3, [r2, r3]
   13fc8:	07d53003 	ldrbeq	r3, [r5, r3]
   13fcc:	e5c03001 	strb	r3, [r0, #1]
   13fd0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13fd4:	e1d020b0 	ldrh	r2, [r0]
   13fd8:	e1d031b0 	ldrh	r3, [r0, #16]
   13fdc:	e1c021b0 	strh	r2, [r0, #16]
   13fe0:	e1c030b0 	strh	r3, [r0]
   13fe4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13fe8:	e5d02003 	ldrb	r2, [r0, #3]
   13fec:	e5d03000 	ldrb	r3, [r0]
   13ff0:	e2422001 	sub	r2, r2, #1
   13ff4:	e6ef2072 	uxtb	r2, r2
   13ff8:	e0844002 	add	r4, r4, r2
   13ffc:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   14000:	e2033001 	and	r3, r3, #1
   14004:	e352007f 	cmp	r2, #127	; 0x7f
   14008:	e5c02003 	strb	r2, [r0, #3]
   1400c:	e1833001 	orr	r3, r3, r1
   14010:	0a000433 	beq	150e4 <CodesDD+0x4f44>
   14014:	e202200f 	and	r2, r2, #15
   14018:	e352000f 	cmp	r2, #15
   1401c:	13a02000 	movne	r2, #0
   14020:	03a02010 	moveq	r2, #16
   14024:	e1823003 	orr	r3, r2, r3
   14028:	e3833002 	orr	r3, r3, #2
   1402c:	e5c03000 	strb	r3, [r0]
   14030:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14034:	e5d02003 	ldrb	r2, [r0, #3]
   14038:	e5d03000 	ldrb	r3, [r0]
   1403c:	e2822001 	add	r2, r2, #1
   14040:	e6ef2072 	uxtb	r2, r2
   14044:	e0844002 	add	r4, r4, r2
   14048:	e5d41300 	ldrb	r1, [r4, #768]	; 0x300
   1404c:	e2033001 	and	r3, r3, #1
   14050:	e1833001 	orr	r3, r3, r1
   14054:	e3520080 	cmp	r2, #128	; 0x80
   14058:	e5c02003 	strb	r2, [r0, #3]
   1405c:	e6af3073 	sxtb	r3, r3
   14060:	0a000419 	beq	150cc <CodesDD+0x4f2c>
   14064:	e312000f 	tst	r2, #15
   14068:	03a02010 	moveq	r2, #16
   1406c:	13a02000 	movne	r2, #0
   14070:	e1823003 	orr	r3, r2, r3
   14074:	e5c03000 	strb	r3, [r0]
   14078:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1407c:	e28e3002 	add	r3, lr, #2
   14080:	e6ff3073 	uxth	r3, r3
   14084:	e28e1003 	add	r1, lr, #3
   14088:	e3560000 	cmp	r6, #0
   1408c:	e1c030bc 	strh	r3, [r0, #12]
   14090:	e6ff1071 	uxth	r1, r1
   14094:	0a000194 	beq	146ec <CodesDD+0x454c>
   14098:	e59fe748 	ldr	lr, [pc, #1864]	; 147e8 <CodesDD+0x4648>
   1409c:	e59fc740 	ldr	ip, [pc, #1856]	; 147e4 <CodesDD+0x4644>
   140a0:	e002200e 	and	r2, r2, lr
   140a4:	e7dc2002 	ldrb	r2, [ip, r2]
   140a8:	e003300e 	and	r3, r3, lr
   140ac:	e5c02002 	strb	r2, [r0, #2]
   140b0:	e1c010bc 	strh	r1, [r0, #12]
   140b4:	e7dc3003 	ldrb	r3, [ip, r3]
   140b8:	e5c03003 	strb	r3, [r0, #3]
   140bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   140c0:	e3560000 	cmp	r6, #0
   140c4:	11a02882 	lslne	r2, r2, #17
   140c8:	159f3714 	ldrne	r3, [pc, #1812]	; 147e4 <CodesDD+0x4644>
   140cc:	e28ee002 	add	lr, lr, #2
   140d0:	e1c0e0bc 	strh	lr, [r0, #12]
   140d4:	11a028a2 	lsrne	r2, r2, #17
   140d8:	17d33002 	ldrbne	r3, [r3, r2]
   140dc:	07d53002 	ldrbeq	r3, [r5, r2]
   140e0:	e5c03003 	strb	r3, [r0, #3]
   140e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   140e8:	e5d02001 	ldrb	r2, [r0, #1]
   140ec:	e1d030b2 	ldrh	r3, [r0, #2]
   140f0:	e7c52003 	strb	r2, [r5, r3]
   140f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   140f8:	e3a01038 	mov	r1, #56	; 0x38
   140fc:	e1d030be 	ldrh	r3, [r0, #14]
   14100:	e1a02422 	lsr	r2, r2, #8
   14104:	e2433001 	sub	r3, r3, #1
   14108:	e6ff3073 	uxth	r3, r3
   1410c:	e1c030be 	strh	r3, [r0, #14]
   14110:	e7c52003 	strb	r2, [r5, r3]
   14114:	e1d030be 	ldrh	r3, [r0, #14]
   14118:	e5d0200c 	ldrb	r2, [r0, #12]
   1411c:	e2433001 	sub	r3, r3, #1
   14120:	e6ff3073 	uxth	r3, r3
   14124:	e1c030be 	strh	r3, [r0, #14]
   14128:	e7c52003 	strb	r2, [r5, r3]
   1412c:	e1c010bc 	strh	r1, [r0, #12]
   14130:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14134:	e3560000 	cmp	r6, #0
   14138:	0a000350 	beq	14e80 <CodesDD+0x4ce0>
   1413c:	e1a03882 	lsl	r3, r2, #17
   14140:	e59f169c 	ldr	r1, [pc, #1692]	; 147e4 <CodesDD+0x4644>
   14144:	e1a038a3 	lsr	r3, r3, #17
   14148:	e7d13003 	ldrb	r3, [r1, r3]
   1414c:	e3833040 	orr	r3, r3, #64	; 0x40
   14150:	e7c53002 	strb	r3, [r5, r2]
   14154:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14158:	e3560000 	cmp	r6, #0
   1415c:	0a000349 	beq	14e88 <CodesDD+0x4ce8>
   14160:	e1a03882 	lsl	r3, r2, #17
   14164:	e59f1678 	ldr	r1, [pc, #1656]	; 147e4 <CodesDD+0x4644>
   14168:	e1a038a3 	lsr	r3, r3, #17
   1416c:	e7d13003 	ldrb	r3, [r1, r3]
   14170:	e3833020 	orr	r3, r3, #32
   14174:	e7c53002 	strb	r3, [r5, r2]
   14178:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1417c:	e3560000 	cmp	r6, #0
   14180:	0a000342 	beq	14e90 <CodesDD+0x4cf0>
   14184:	e1a03882 	lsl	r3, r2, #17
   14188:	e59f1654 	ldr	r1, [pc, #1620]	; 147e4 <CodesDD+0x4644>
   1418c:	e1a038a3 	lsr	r3, r3, #17
   14190:	e7d13003 	ldrb	r3, [r1, r3]
   14194:	e3833010 	orr	r3, r3, #16
   14198:	e7c53002 	strb	r3, [r5, r2]
   1419c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   141a0:	e3560000 	cmp	r6, #0
   141a4:	0a00031d 	beq	14e20 <CodesDD+0x4c80>
   141a8:	e1a03882 	lsl	r3, r2, #17
   141ac:	e59f1630 	ldr	r1, [pc, #1584]	; 147e4 <CodesDD+0x4644>
   141b0:	e1a038a3 	lsr	r3, r3, #17
   141b4:	e7d13003 	ldrb	r3, [r1, r3]
   141b8:	e3833008 	orr	r3, r3, #8
   141bc:	e7c53002 	strb	r3, [r5, r2]
   141c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   141c4:	e3560000 	cmp	r6, #0
   141c8:	0a000332 	beq	14e98 <CodesDD+0x4cf8>
   141cc:	e1a03882 	lsl	r3, r2, #17
   141d0:	e59f160c 	ldr	r1, [pc, #1548]	; 147e4 <CodesDD+0x4644>
   141d4:	e1a038a3 	lsr	r3, r3, #17
   141d8:	e7d13003 	ldrb	r3, [r1, r3]
   141dc:	e3833004 	orr	r3, r3, #4
   141e0:	e7c53002 	strb	r3, [r5, r2]
   141e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   141e8:	e3560000 	cmp	r6, #0
   141ec:	0a0002e5 	beq	14d88 <CodesDD+0x4be8>
   141f0:	e1a03882 	lsl	r3, r2, #17
   141f4:	e59f15e8 	ldr	r1, [pc, #1512]	; 147e4 <CodesDD+0x4644>
   141f8:	e1a038a3 	lsr	r3, r3, #17
   141fc:	e7d13003 	ldrb	r3, [r1, r3]
   14200:	e1e03c83 	mvn	r3, r3, lsl #25
   14204:	e1e03ca3 	mvn	r3, r3, lsr #25
   14208:	e7c53002 	strb	r3, [r5, r2]
   1420c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14210:	e3560000 	cmp	r6, #0
   14214:	0a0002f7 	beq	14df8 <CodesDD+0x4c58>
   14218:	e1a02882 	lsl	r2, r2, #17
   1421c:	e1a028a2 	lsr	r2, r2, #17
   14220:	e7de3002 	ldrb	r3, [lr, r2]
   14224:	e2032040 	and	r2, r3, #64	; 0x40
   14228:	e5d03000 	ldrb	r3, [r0]
   1422c:	e0844002 	add	r4, r4, r2
   14230:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
   14234:	e2033001 	and	r3, r3, #1
   14238:	e3833010 	orr	r3, r3, #16
   1423c:	e1833002 	orr	r3, r3, r2
   14240:	e5c03000 	strb	r3, [r0]
   14244:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14248:	e3560000 	cmp	r6, #0
   1424c:	0a0002d5 	beq	14da8 <CodesDD+0x4c08>
   14250:	e1a03882 	lsl	r3, r2, #17
   14254:	e59f1588 	ldr	r1, [pc, #1416]	; 147e4 <CodesDD+0x4644>
   14258:	e1a038a3 	lsr	r3, r3, #17
   1425c:	e7d13003 	ldrb	r3, [r1, r3]
   14260:	e3c33040 	bic	r3, r3, #64	; 0x40
   14264:	e7c53002 	strb	r3, [r5, r2]
   14268:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1426c:	e3560000 	cmp	r6, #0
   14270:	0a0002ec 	beq	14e28 <CodesDD+0x4c88>
   14274:	e1a03882 	lsl	r3, r2, #17
   14278:	e59f1564 	ldr	r1, [pc, #1380]	; 147e4 <CodesDD+0x4644>
   1427c:	e1a038a3 	lsr	r3, r3, #17
   14280:	e7d1c003 	ldrb	ip, [r1, r3]
   14284:	e1a0108c 	lsl	r1, ip, #1
   14288:	e3811001 	orr	r1, r1, #1
   1428c:	e6ef1071 	uxtb	r1, r1
   14290:	e0843001 	add	r3, r4, r1
   14294:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   14298:	e18333ac 	orr	r3, r3, ip, lsr #7
   1429c:	e5c03000 	strb	r3, [r0]
   142a0:	e7c51002 	strb	r1, [r5, r2]
   142a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   142a8:	e3560000 	cmp	r6, #0
   142ac:	0a0002b7 	beq	14d90 <CodesDD+0x4bf0>
   142b0:	e1a03882 	lsl	r3, r2, #17
   142b4:	e59f1528 	ldr	r1, [pc, #1320]	; 147e4 <CodesDD+0x4644>
   142b8:	e1a038a3 	lsr	r3, r3, #17
   142bc:	e7d13003 	ldrb	r3, [r1, r3]
   142c0:	e3833001 	orr	r3, r3, #1
   142c4:	e7c53002 	strb	r3, [r5, r2]
   142c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   142cc:	e3560000 	cmp	r6, #0
   142d0:	0a0002ca 	beq	14e00 <CodesDD+0x4c60>
   142d4:	e1a02882 	lsl	r2, r2, #17
   142d8:	e1a028a2 	lsr	r2, r2, #17
   142dc:	e7de3002 	ldrb	r3, [lr, r2]
   142e0:	e2032004 	and	r2, r3, #4
   142e4:	e5d03000 	ldrb	r3, [r0]
   142e8:	e0844002 	add	r4, r4, r2
   142ec:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
   142f0:	e2033001 	and	r3, r3, #1
   142f4:	e3833010 	orr	r3, r3, #16
   142f8:	e1833002 	orr	r3, r3, r2
   142fc:	e5c03000 	strb	r3, [r0]
   14300:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14304:	e3560000 	cmp	r6, #0
   14308:	0a0002ac 	beq	14dc0 <CodesDD+0x4c20>
   1430c:	e1a03882 	lsl	r3, r2, #17
   14310:	e59f14cc 	ldr	r1, [pc, #1228]	; 147e4 <CodesDD+0x4644>
   14314:	e1a038a3 	lsr	r3, r3, #17
   14318:	e7d13003 	ldrb	r3, [r1, r3]
   1431c:	e3c33004 	bic	r3, r3, #4
   14320:	e7c53002 	strb	r3, [r5, r2]
   14324:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14328:	e3560000 	cmp	r6, #0
   1432c:	0a0002c5 	beq	14e48 <CodesDD+0x4ca8>
   14330:	e1a03882 	lsl	r3, r2, #17
   14334:	e59f14a8 	ldr	r1, [pc, #1192]	; 147e4 <CodesDD+0x4644>
   14338:	e1a038a3 	lsr	r3, r3, #17
   1433c:	e7d13003 	ldrb	r3, [r1, r3]
   14340:	e5d01000 	ldrb	r1, [r0]
   14344:	e3130080 	tst	r3, #128	; 0x80
   14348:	e1a03083 	lsl	r3, r3, #1
   1434c:	e2011001 	and	r1, r1, #1
   14350:	e6af3073 	sxtb	r3, r3
   14354:	e1833001 	orr	r3, r3, r1
   14358:	e6ef1073 	uxtb	r1, r3
   1435c:	e0843001 	add	r3, r4, r1
   14360:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   14364:	13833001 	orrne	r3, r3, #1
   14368:	e5c03000 	strb	r3, [r0]
   1436c:	e7c51002 	strb	r1, [r5, r2]
   14370:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14374:	e3560000 	cmp	r6, #0
   14378:	0a0002c8 	beq	14ea0 <CodesDD+0x4d00>
   1437c:	e1a03882 	lsl	r3, r2, #17
   14380:	e59f145c 	ldr	r1, [pc, #1116]	; 147e4 <CodesDD+0x4644>
   14384:	e1a038a3 	lsr	r3, r3, #17
   14388:	e7d13003 	ldrb	r3, [r1, r3]
   1438c:	e3833002 	orr	r3, r3, #2
   14390:	e7c53002 	strb	r3, [r5, r2]
   14394:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14398:	e3560000 	cmp	r6, #0
   1439c:	0a000291 	beq	14de8 <CodesDD+0x4c48>
   143a0:	e1a02882 	lsl	r2, r2, #17
   143a4:	e1a028a2 	lsr	r2, r2, #17
   143a8:	e7de3002 	ldrb	r3, [lr, r2]
   143ac:	e2032010 	and	r2, r3, #16
   143b0:	e5d03000 	ldrb	r3, [r0]
   143b4:	e0844002 	add	r4, r4, r2
   143b8:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
   143bc:	e2033001 	and	r3, r3, #1
   143c0:	e3833010 	orr	r3, r3, #16
   143c4:	e1833002 	orr	r3, r3, r2
   143c8:	e5c03000 	strb	r3, [r0]
   143cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   143d0:	e3560000 	cmp	r6, #0
   143d4:	0a000275 	beq	14db0 <CodesDD+0x4c10>
   143d8:	e1a03882 	lsl	r3, r2, #17
   143dc:	e59f1400 	ldr	r1, [pc, #1024]	; 147e4 <CodesDD+0x4644>
   143e0:	e1a038a3 	lsr	r3, r3, #17
   143e4:	e7d13003 	ldrb	r3, [r1, r3]
   143e8:	e3c33010 	bic	r3, r3, #16
   143ec:	e7c53002 	strb	r3, [r5, r2]
   143f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   143f4:	e3560000 	cmp	r6, #0
   143f8:	0a00028e 	beq	14e38 <CodesDD+0x4c98>
   143fc:	e1a03882 	lsl	r3, r2, #17
   14400:	e59f13dc 	ldr	r1, [pc, #988]	; 147e4 <CodesDD+0x4644>
   14404:	e1a038a3 	lsr	r3, r3, #17
   14408:	e7d1c003 	ldrb	ip, [r1, r3]
   1440c:	e1a0108c 	lsl	r1, ip, #1
   14410:	e6ef1071 	uxtb	r1, r1
   14414:	e0843001 	add	r3, r4, r1
   14418:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   1441c:	e18333ac 	orr	r3, r3, ip, lsr #7
   14420:	e5c03000 	strb	r3, [r0]
   14424:	e7c51002 	strb	r1, [r5, r2]
   14428:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1442c:	e3560000 	cmp	r6, #0
   14430:	0a000258 	beq	14d98 <CodesDD+0x4bf8>
   14434:	e1a03882 	lsl	r3, r2, #17
   14438:	e59f13a4 	ldr	r1, [pc, #932]	; 147e4 <CodesDD+0x4644>
   1443c:	e1a038a3 	lsr	r3, r3, #17
   14440:	e7d13003 	ldrb	r3, [r1, r3]
   14444:	e203307f 	and	r3, r3, #127	; 0x7f
   14448:	e7c53002 	strb	r3, [r5, r2]
   1444c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14450:	e3560000 	cmp	r6, #0
   14454:	0a00026d 	beq	14e10 <CodesDD+0x4c70>
   14458:	e1a02882 	lsl	r2, r2, #17
   1445c:	e1a028a2 	lsr	r2, r2, #17
   14460:	e7de3002 	ldrb	r3, [lr, r2]
   14464:	e2032001 	and	r2, r3, #1
   14468:	e5d03000 	ldrb	r3, [r0]
   1446c:	e0844002 	add	r4, r4, r2
   14470:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
   14474:	e2033001 	and	r3, r3, #1
   14478:	e3833010 	orr	r3, r3, #16
   1447c:	e1833002 	orr	r3, r3, r2
   14480:	e5c03000 	strb	r3, [r0]
   14484:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14488:	e3560000 	cmp	r6, #0
   1448c:	0a00024f 	beq	14dd0 <CodesDD+0x4c30>
   14490:	e1a03882 	lsl	r3, r2, #17
   14494:	e59f1348 	ldr	r1, [pc, #840]	; 147e4 <CodesDD+0x4644>
   14498:	e1a038a3 	lsr	r3, r3, #17
   1449c:	e7d13003 	ldrb	r3, [r1, r3]
   144a0:	e3c33001 	bic	r3, r3, #1
   144a4:	e7c53002 	strb	r3, [r5, r2]
   144a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   144ac:	e3560000 	cmp	r6, #0
   144b0:	0a000266 	beq	14e50 <CodesDD+0x4cb0>
   144b4:	e1a03882 	lsl	r3, r2, #17
   144b8:	e59f1324 	ldr	r1, [pc, #804]	; 147e4 <CodesDD+0x4644>
   144bc:	e1a038a3 	lsr	r3, r3, #17
   144c0:	e7d13003 	ldrb	r3, [r1, r3]
   144c4:	e203c001 	and	ip, r3, #1
   144c8:	e1a0138c 	lsl	r1, ip, #7
   144cc:	e18110a3 	orr	r1, r1, r3, lsr #1
   144d0:	e0843001 	add	r3, r4, r1
   144d4:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   144d8:	e18cc003 	orr	ip, ip, r3
   144dc:	e5c0c000 	strb	ip, [r0]
   144e0:	e7c51002 	strb	r1, [r5, r2]
   144e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   144e8:	e3560000 	cmp	r6, #0
   144ec:	0a00022b 	beq	14da0 <CodesDD+0x4c00>
   144f0:	e1a03882 	lsl	r3, r2, #17
   144f4:	e59f12e8 	ldr	r1, [pc, #744]	; 147e4 <CodesDD+0x4644>
   144f8:	e1a038a3 	lsr	r3, r3, #17
   144fc:	e7d13003 	ldrb	r3, [r1, r3]
   14500:	e3c33020 	bic	r3, r3, #32
   14504:	e7c53002 	strb	r3, [r5, r2]
   14508:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1450c:	e3560000 	cmp	r6, #0
   14510:	0a000232 	beq	14de0 <CodesDD+0x4c40>
   14514:	e1a02882 	lsl	r2, r2, #17
   14518:	e1a028a2 	lsr	r2, r2, #17
   1451c:	e7de3002 	ldrb	r3, [lr, r2]
   14520:	e2032020 	and	r2, r3, #32
   14524:	e5d03000 	ldrb	r3, [r0]
   14528:	e0844002 	add	r4, r4, r2
   1452c:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
   14530:	e2033001 	and	r3, r3, #1
   14534:	e3833010 	orr	r3, r3, #16
   14538:	e1833002 	orr	r3, r3, r2
   1453c:	e5c03000 	strb	r3, [r0]
   14540:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14544:	e3560000 	cmp	r6, #0
   14548:	0a00021e 	beq	14dc8 <CodesDD+0x4c28>
   1454c:	e1a03882 	lsl	r3, r2, #17
   14550:	e59f128c 	ldr	r1, [pc, #652]	; 147e4 <CodesDD+0x4644>
   14554:	e1a038a3 	lsr	r3, r3, #17
   14558:	e7d13003 	ldrb	r3, [r1, r3]
   1455c:	e3c33002 	bic	r3, r3, #2
   14560:	e7c53002 	strb	r3, [r5, r2]
   14564:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14568:	e3560000 	cmp	r6, #0
   1456c:	0a00022f 	beq	14e30 <CodesDD+0x4c90>
   14570:	e1a03882 	lsl	r3, r2, #17
   14574:	e59f1268 	ldr	r1, [pc, #616]	; 147e4 <CodesDD+0x4644>
   14578:	e1a038a3 	lsr	r3, r3, #17
   1457c:	e7d11003 	ldrb	r1, [r1, r3]
   14580:	e3c1c07f 	bic	ip, r1, #127	; 0x7f
   14584:	e18cc0a1 	orr	ip, ip, r1, lsr #1
   14588:	e084300c 	add	r3, r4, ip
   1458c:	e5d3e100 	ldrb	lr, [r3, #256]	; 0x100
   14590:	e2013001 	and	r3, r1, #1
   14594:	e183300e 	orr	r3, r3, lr
   14598:	e5c03000 	strb	r3, [r0]
   1459c:	e7c5c002 	strb	ip, [r5, r2]
   145a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   145a4:	e3560000 	cmp	r6, #0
   145a8:	0a000202 	beq	14db8 <CodesDD+0x4c18>
   145ac:	e1a03882 	lsl	r3, r2, #17
   145b0:	e59f122c 	ldr	r1, [pc, #556]	; 147e4 <CodesDD+0x4644>
   145b4:	e1a038a3 	lsr	r3, r3, #17
   145b8:	e7d13003 	ldrb	r3, [r1, r3]
   145bc:	e3c33008 	bic	r3, r3, #8
   145c0:	e7c53002 	strb	r3, [r5, r2]
   145c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   145c8:	e3560000 	cmp	r6, #0
   145cc:	0a00020d 	beq	14e08 <CodesDD+0x4c68>
   145d0:	e1a02882 	lsl	r2, r2, #17
   145d4:	e1a028a2 	lsr	r2, r2, #17
   145d8:	e7de3002 	ldrb	r3, [lr, r2]
   145dc:	e2032002 	and	r2, r3, #2
   145e0:	e5d03000 	ldrb	r3, [r0]
   145e4:	e0844002 	add	r4, r4, r2
   145e8:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
   145ec:	e2033001 	and	r3, r3, #1
   145f0:	e3833010 	orr	r3, r3, #16
   145f4:	e1833002 	orr	r3, r3, r2
   145f8:	e5c03000 	strb	r3, [r0]
   145fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14600:	e3560000 	cmp	r6, #0
   14604:	0a0001f3 	beq	14dd8 <CodesDD+0x4c38>
   14608:	e1a02882 	lsl	r2, r2, #17
   1460c:	e1a028a2 	lsr	r2, r2, #17
   14610:	e7de3002 	ldrb	r3, [lr, r2]
   14614:	e5d02000 	ldrb	r2, [r0]
   14618:	e2033080 	and	r3, r3, #128	; 0x80
   1461c:	e0843003 	add	r3, r4, r3
   14620:	e5d31100 	ldrb	r1, [r3, #256]	; 0x100
   14624:	e2023001 	and	r3, r2, #1
   14628:	e3833010 	orr	r3, r3, #16
   1462c:	e1833001 	orr	r3, r3, r1
   14630:	e5c03000 	strb	r3, [r0]
   14634:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14638:	e3560000 	cmp	r6, #0
   1463c:	0a0001ff 	beq	14e40 <CodesDD+0x4ca0>
   14640:	e1a03882 	lsl	r3, r2, #17
   14644:	e59f1198 	ldr	r1, [pc, #408]	; 147e4 <CodesDD+0x4644>
   14648:	e1a038a3 	lsr	r3, r3, #17
   1464c:	e7d13003 	ldrb	r3, [r1, r3]
   14650:	e5d01000 	ldrb	r1, [r0]
   14654:	e3130001 	tst	r3, #1
   14658:	e1a030a3 	lsr	r3, r3, #1
   1465c:	e1833381 	orr	r3, r3, r1, lsl #7
   14660:	e6ef1073 	uxtb	r1, r3
   14664:	e0843001 	add	r3, r4, r1
   14668:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   1466c:	13833001 	orrne	r3, r3, #1
   14670:	e5c03000 	strb	r3, [r0]
   14674:	e7c51002 	strb	r1, [r5, r2]
   14678:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1467c:	e3560000 	cmp	r6, #0
   14680:	0a0001da 	beq	14df0 <CodesDD+0x4c50>
   14684:	e1a02882 	lsl	r2, r2, #17
   14688:	e1a028a2 	lsr	r2, r2, #17
   1468c:	e7de3002 	ldrb	r3, [lr, r2]
   14690:	e2032008 	and	r2, r3, #8
   14694:	e5d03000 	ldrb	r3, [r0]
   14698:	e0844002 	add	r4, r4, r2
   1469c:	e5d42100 	ldrb	r2, [r4, #256]	; 0x100
   146a0:	e2033001 	and	r3, r3, #1
   146a4:	e3833010 	orr	r3, r3, #16
   146a8:	e1833002 	orr	r3, r3, r2
   146ac:	e5c03000 	strb	r3, [r0]
   146b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   146b4:	e3560000 	cmp	r6, #0
   146b8:	0a0001d6 	beq	14e18 <CodesDD+0x4c78>
   146bc:	e1a03882 	lsl	r3, r2, #17
   146c0:	e59f111c 	ldr	r1, [pc, #284]	; 147e4 <CodesDD+0x4644>
   146c4:	e1a038a3 	lsr	r3, r3, #17
   146c8:	e7d11003 	ldrb	r1, [r1, r3]
   146cc:	e1a0c0a1 	lsr	ip, r1, #1
   146d0:	e084300c 	add	r3, r4, ip
   146d4:	e5d3e100 	ldrb	lr, [r3, #256]	; 0x100
   146d8:	e2013001 	and	r3, r1, #1
   146dc:	e183300e 	orr	r3, r3, lr
   146e0:	e5c03000 	strb	r3, [r0]
   146e4:	e7c5c002 	strb	ip, [r5, r2]
   146e8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   146ec:	e7d52002 	ldrb	r2, [r5, r2]
   146f0:	e1c010bc 	strh	r1, [r0, #12]
   146f4:	e5c02002 	strb	r2, [r0, #2]
   146f8:	e7d53003 	ldrb	r3, [r5, r3]
   146fc:	eafffe6d 	b	140b8 <CodesDD+0x3f18>
   14700:	e7d52002 	ldrb	r2, [r5, r2]
   14704:	e1c010bc 	strh	r1, [r0, #12]
   14708:	e5c02008 	strb	r2, [r0, #8]
   1470c:	e7d53003 	ldrb	r3, [r5, r3]
   14710:	eafffc90 	b	13958 <CodesDD+0x37b8>
   14714:	e7d52002 	ldrb	r2, [r5, r2]
   14718:	e1c010bc 	strh	r1, [r0, #12]
   1471c:	e7d53003 	ldrb	r3, [r5, r3]
   14720:	e1823403 	orr	r3, r2, r3, lsl #8
   14724:	e7d52003 	ldrb	r2, [r5, r3]
   14728:	e2833001 	add	r3, r3, #1
   1472c:	e5c02008 	strb	r2, [r0, #8]
   14730:	e6ff3073 	uxth	r3, r3
   14734:	e7d53003 	ldrb	r3, [r5, r3]
   14738:	eafffbbb 	b	1362c <CodesDD+0x348c>
   1473c:	e19520d2 	ldrsb	r2, [r5, r2]
   14740:	e1c0c0bc 	strh	ip, [r0, #12]
   14744:	e0833002 	add	r3, r3, r2
   14748:	e6ff3073 	uxth	r3, r3
   1474c:	e7d52001 	ldrb	r2, [r5, r1]
   14750:	eafffc18 	b	137b8 <CodesDD+0x3618>
   14754:	e7d52002 	ldrb	r2, [r5, r2]
   14758:	e1c010bc 	strh	r1, [r0, #12]
   1475c:	e5c0200e 	strb	r2, [r0, #14]
   14760:	e7d53003 	ldrb	r3, [r5, r3]
   14764:	eafffce8 	b	13b0c <CodesDD+0x396c>
   14768:	e19530d2 	ldrsb	r3, [r5, r2]
   1476c:	e08c3003 	add	r3, ip, r3
   14770:	e6ff3073 	uxth	r3, r3
   14774:	e7d51003 	ldrb	r1, [r5, r3]
   14778:	eafffcff 	b	13b7c <CodesDD+0x39dc>
   1477c:	e7d52002 	ldrb	r2, [r5, r2]
   14780:	e1c010bc 	strh	r1, [r0, #12]
   14784:	e7d53003 	ldrb	r3, [r5, r3]
   14788:	e1823403 	orr	r3, r2, r3, lsl #8
   1478c:	e7d53003 	ldrb	r3, [r5, r3]
   14790:	eafffd64 	b	13d28 <CodesDD+0x3b88>
   14794:	e7d52002 	ldrb	r2, [r5, r2]
   14798:	e1c010bc 	strh	r1, [r0, #12]
   1479c:	e5c02004 	strb	r2, [r0, #4]
   147a0:	e7d53003 	ldrb	r3, [r5, r3]
   147a4:	eafffdb4 	b	13e7c <CodesDD+0x3cdc>
   147a8:	e19530d2 	ldrsb	r3, [r5, r2]
   147ac:	e08c3003 	add	r3, ip, r3
   147b0:	e6ff3073 	uxth	r3, r3
   147b4:	e7d51003 	ldrb	r1, [r5, r3]
   147b8:	eafffc0a 	b	137e8 <CodesDD+0x3648>
   147bc:	e19520d2 	ldrsb	r2, [r5, r2]
   147c0:	e0833002 	add	r3, r3, r2
   147c4:	e6ff3073 	uxth	r3, r3
   147c8:	e7d53003 	ldrb	r3, [r5, r3]
   147cc:	eafffa22 	b	1305c <CodesDD+0x2ebc>
   147d0:	e19520d2 	ldrsb	r2, [r5, r2]
   147d4:	e0833002 	add	r3, r3, r2
   147d8:	e6ff3073 	uxth	r3, r3
   147dc:	e7d53003 	ldrb	r3, [r5, r3]
   147e0:	eafff321 	b	1146c <CodesDD+0x12cc>
   147e4:	00050428 	.word	0x00050428
   147e8:	00007fff 	.word	0x00007fff
   147ec:	00050428 	.word	0x00050428
   147f0:	e7d52002 	ldrb	r2, [r5, r2]
   147f4:	e1c010be 	strh	r1, [r0, #14]
   147f8:	e5c02000 	strb	r2, [r0]
   147fc:	e7d53003 	ldrb	r3, [r5, r3]
   14800:	eaffefeb 	b	107b4 <CodesDD+0x614>
   14804:	e19520d2 	ldrsb	r2, [r5, r2]
   14808:	e0833002 	add	r3, r3, r2
   1480c:	e6ff3073 	uxth	r3, r3
   14810:	e7d53003 	ldrb	r3, [r5, r3]
   14814:	eafff9d3 	b	12f68 <CodesDD+0x2dc8>
   14818:	e19520d2 	ldrsb	r2, [r5, r2]
   1481c:	e0833002 	add	r3, r3, r2
   14820:	e6ff3073 	uxth	r3, r3
   14824:	e7d53003 	ldrb	r3, [r5, r3]
   14828:	eafffa42 	b	13138 <CodesDD+0x2f98>
   1482c:	e19520d2 	ldrsb	r2, [r5, r2]
   14830:	e0833002 	add	r3, r3, r2
   14834:	e6ff3073 	uxth	r3, r3
   14838:	e7d53003 	ldrb	r3, [r5, r3]
   1483c:	eafff9a2 	b	12ecc <CodesDD+0x2d2c>
   14840:	e19520d2 	ldrsb	r2, [r5, r2]
   14844:	e0833002 	add	r3, r3, r2
   14848:	e6ff3073 	uxth	r3, r3
   1484c:	e7d53003 	ldrb	r3, [r5, r3]
   14850:	eafff974 	b	12e28 <CodesDD+0x2c88>
   14854:	e19520d2 	ldrsb	r2, [r5, r2]
   14858:	e0833002 	add	r3, r3, r2
   1485c:	e6ff3073 	uxth	r3, r3
   14860:	e7d53003 	ldrb	r3, [r5, r3]
   14864:	eafff949 	b	12d90 <CodesDD+0x2bf0>
   14868:	e7d52002 	ldrb	r2, [r5, r2]
   1486c:	e1c010be 	strh	r1, [r0, #14]
   14870:	e5c02002 	strb	r2, [r0, #2]
   14874:	e7d53003 	ldrb	r3, [r5, r3]
   14878:	eafff7fb 	b	1286c <CodesDD+0x26cc>
   1487c:	e19520d2 	ldrsb	r2, [r5, r2]
   14880:	e0833002 	add	r3, r3, r2
   14884:	e6ff3073 	uxth	r3, r3
   14888:	e7d52003 	ldrb	r2, [r5, r3]
   1488c:	eafff561 	b	11e18 <CodesDD+0x1c78>
   14890:	e19520d2 	ldrsb	r2, [r5, r2]
   14894:	e0833002 	add	r3, r3, r2
   14898:	e6ff3073 	uxth	r3, r3
   1489c:	e7d52003 	ldrb	r2, [r5, r3]
   148a0:	eafff5a6 	b	11f40 <CodesDD+0x1da0>
   148a4:	e19520d2 	ldrsb	r2, [r5, r2]
   148a8:	e0833002 	add	r3, r3, r2
   148ac:	e6ff3073 	uxth	r3, r3
   148b0:	e7d53003 	ldrb	r3, [r5, r3]
   148b4:	eafff655 	b	12210 <CodesDD+0x2070>
   148b8:	e19520d2 	ldrsb	r2, [r5, r2]
   148bc:	e0833002 	add	r3, r3, r2
   148c0:	e6ff3073 	uxth	r3, r3
   148c4:	e7d52003 	ldrb	r2, [r5, r3]
   148c8:	eafff3eb 	b	1187c <CodesDD+0x16dc>
   148cc:	e19520d2 	ldrsb	r2, [r5, r2]
   148d0:	e0833002 	add	r3, r3, r2
   148d4:	e6ff3073 	uxth	r3, r3
   148d8:	e7d5e003 	ldrb	lr, [r5, r3]
   148dc:	eafff489 	b	11b08 <CodesDD+0x1968>
   148e0:	e7d52002 	ldrb	r2, [r5, r2]
   148e4:	e1c010be 	strh	r1, [r0, #14]
   148e8:	e5c02004 	strb	r2, [r0, #4]
   148ec:	e7d53003 	ldrb	r3, [r5, r3]
   148f0:	eafff861 	b	12a7c <CodesDD+0x28dc>
   148f4:	e7d52002 	ldrb	r2, [r5, r2]
   148f8:	e1c010be 	strh	r1, [r0, #14]
   148fc:	e5c02008 	strb	r2, [r0, #8]
   14900:	e7d53003 	ldrb	r3, [r5, r3]
   14904:	eafff027 	b	109a8 <CodesDD+0x808>
   14908:	e7d53002 	ldrb	r3, [r5, r2]
   1490c:	e1c010be 	strh	r1, [r0, #14]
   14910:	e7c5e002 	strb	lr, [r5, r2]
   14914:	e1d020be 	ldrh	r2, [r0, #14]
   14918:	e7d5c002 	ldrb	ip, [r5, r2]
   1491c:	eaffeff6 	b	108fc <CodesDD+0x75c>
   14920:	e19520d2 	ldrsb	r2, [r5, r2]
   14924:	e0833002 	add	r3, r3, r2
   14928:	e6ff3073 	uxth	r3, r3
   1492c:	e7d52003 	ldrb	r2, [r5, r3]
   14930:	eafff38b 	b	11764 <CodesDD+0x15c4>
   14934:	e19520d2 	ldrsb	r2, [r5, r2]
   14938:	e0833002 	add	r3, r3, r2
   1493c:	e6ff3073 	uxth	r3, r3
   14940:	e7d52003 	ldrb	r2, [r5, r3]
   14944:	eafff3ed 	b	11900 <CodesDD+0x1760>
   14948:	e19520d2 	ldrsb	r2, [r5, r2]
   1494c:	e0833002 	add	r3, r3, r2
   14950:	e6ff3073 	uxth	r3, r3
   14954:	e7d51003 	ldrb	r1, [r5, r3]
   14958:	eafff2d7 	b	114bc <CodesDD+0x131c>
   1495c:	e7d52002 	ldrb	r2, [r5, r2]
   14960:	e1c010be 	strh	r1, [r0, #14]
   14964:	e5c0200c 	strb	r2, [r0, #12]
   14968:	e7d53003 	ldrb	r3, [r5, r3]
   1496c:	eafff268 	b	11314 <CodesDD+0x1174>
   14970:	e19520d2 	ldrsb	r2, [r5, r2]
   14974:	e1c0c0bc 	strh	ip, [r0, #12]
   14978:	e7d53003 	ldrb	r3, [r5, r3]
   1497c:	e0872002 	add	r2, r7, r2
   14980:	e084c003 	add	ip, r4, r3
   14984:	e5dcc400 	ldrb	ip, [ip, #1024]	; 0x400
   14988:	e2433006 	sub	r3, r3, #6
   1498c:	e041100c 	sub	r1, r1, ip
   14990:	e6ff2072 	uxth	r2, r2
   14994:	e5801020 	str	r1, [r0, #32]
   14998:	e35300f8 	cmp	r3, #248	; 0xf8
   1499c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   149a0:	eaffef15 	b	105fc <CodesDD+0x45c>
   149a4:	00014e58 	.word	0x00014e58
   149a8:	000105fc 	.word	0x000105fc
   149ac:	000105fc 	.word	0x000105fc
   149b0:	000105fc 	.word	0x000105fc
   149b4:	000105fc 	.word	0x000105fc
   149b8:	000105fc 	.word	0x000105fc
   149bc:	000105fc 	.word	0x000105fc
   149c0:	000105fc 	.word	0x000105fc
   149c4:	00014e50 	.word	0x00014e50
   149c8:	000105fc 	.word	0x000105fc
   149cc:	000105fc 	.word	0x000105fc
   149d0:	000105fc 	.word	0x000105fc
   149d4:	000105fc 	.word	0x000105fc
   149d8:	000105fc 	.word	0x000105fc
   149dc:	000105fc 	.word	0x000105fc
   149e0:	000105fc 	.word	0x000105fc
   149e4:	00014e48 	.word	0x00014e48
   149e8:	000105fc 	.word	0x000105fc
   149ec:	000105fc 	.word	0x000105fc
   149f0:	000105fc 	.word	0x000105fc
   149f4:	000105fc 	.word	0x000105fc
   149f8:	000105fc 	.word	0x000105fc
   149fc:	000105fc 	.word	0x000105fc
   14a00:	000105fc 	.word	0x000105fc
   14a04:	00014e40 	.word	0x00014e40
   14a08:	000105fc 	.word	0x000105fc
   14a0c:	000105fc 	.word	0x000105fc
   14a10:	000105fc 	.word	0x000105fc
   14a14:	000105fc 	.word	0x000105fc
   14a18:	000105fc 	.word	0x000105fc
   14a1c:	000105fc 	.word	0x000105fc
   14a20:	000105fc 	.word	0x000105fc
   14a24:	00014e38 	.word	0x00014e38
   14a28:	000105fc 	.word	0x000105fc
   14a2c:	000105fc 	.word	0x000105fc
   14a30:	000105fc 	.word	0x000105fc
   14a34:	000105fc 	.word	0x000105fc
   14a38:	000105fc 	.word	0x000105fc
   14a3c:	000105fc 	.word	0x000105fc
   14a40:	000105fc 	.word	0x000105fc
   14a44:	00014e30 	.word	0x00014e30
   14a48:	000105fc 	.word	0x000105fc
   14a4c:	000105fc 	.word	0x000105fc
   14a50:	000105fc 	.word	0x000105fc
   14a54:	000105fc 	.word	0x000105fc
   14a58:	000105fc 	.word	0x000105fc
   14a5c:	000105fc 	.word	0x000105fc
   14a60:	000105fc 	.word	0x000105fc
   14a64:	00014e28 	.word	0x00014e28
   14a68:	000105fc 	.word	0x000105fc
   14a6c:	000105fc 	.word	0x000105fc
   14a70:	000105fc 	.word	0x000105fc
   14a74:	000105fc 	.word	0x000105fc
   14a78:	000105fc 	.word	0x000105fc
   14a7c:	000105fc 	.word	0x000105fc
   14a80:	000105fc 	.word	0x000105fc
   14a84:	00014e18 	.word	0x00014e18
   14a88:	000105fc 	.word	0x000105fc
   14a8c:	00014e10 	.word	0x00014e10
   14a90:	00014e10 	.word	0x00014e10
   14a94:	00014e10 	.word	0x00014e10
   14a98:	00014e10 	.word	0x00014e10
   14a9c:	00014e10 	.word	0x00014e10
   14aa0:	00014e10 	.word	0x00014e10
   14aa4:	00014e10 	.word	0x00014e10
   14aa8:	00014e10 	.word	0x00014e10
   14aac:	00014e08 	.word	0x00014e08
   14ab0:	00014e08 	.word	0x00014e08
   14ab4:	00014e08 	.word	0x00014e08
   14ab8:	00014e08 	.word	0x00014e08
   14abc:	00014e08 	.word	0x00014e08
   14ac0:	00014e08 	.word	0x00014e08
   14ac4:	00014e08 	.word	0x00014e08
   14ac8:	00014e08 	.word	0x00014e08
   14acc:	00014e00 	.word	0x00014e00
   14ad0:	00014e00 	.word	0x00014e00
   14ad4:	00014e00 	.word	0x00014e00
   14ad8:	00014e00 	.word	0x00014e00
   14adc:	00014e00 	.word	0x00014e00
   14ae0:	00014e00 	.word	0x00014e00
   14ae4:	00014e00 	.word	0x00014e00
   14ae8:	00014e00 	.word	0x00014e00
   14aec:	00014df0 	.word	0x00014df0
   14af0:	00014df0 	.word	0x00014df0
   14af4:	00014df0 	.word	0x00014df0
   14af8:	00014df0 	.word	0x00014df0
   14afc:	00014df0 	.word	0x00014df0
   14b00:	00014df0 	.word	0x00014df0
   14b04:	00014df0 	.word	0x00014df0
   14b08:	00014df0 	.word	0x00014df0
   14b0c:	00014de8 	.word	0x00014de8
   14b10:	00014de8 	.word	0x00014de8
   14b14:	00014de8 	.word	0x00014de8
   14b18:	00014de8 	.word	0x00014de8
   14b1c:	00014de8 	.word	0x00014de8
   14b20:	00014de8 	.word	0x00014de8
   14b24:	00014de8 	.word	0x00014de8
   14b28:	00014de8 	.word	0x00014de8
   14b2c:	00014de0 	.word	0x00014de0
   14b30:	00014de0 	.word	0x00014de0
   14b34:	00014de0 	.word	0x00014de0
   14b38:	00014de0 	.word	0x00014de0
   14b3c:	00014de0 	.word	0x00014de0
   14b40:	00014de0 	.word	0x00014de0
   14b44:	00014de0 	.word	0x00014de0
   14b48:	00014de0 	.word	0x00014de0
   14b4c:	00014df8 	.word	0x00014df8
   14b50:	00014df8 	.word	0x00014df8
   14b54:	00014df8 	.word	0x00014df8
   14b58:	00014df8 	.word	0x00014df8
   14b5c:	00014df8 	.word	0x00014df8
   14b60:	00014df8 	.word	0x00014df8
   14b64:	00014df8 	.word	0x00014df8
   14b68:	00014df8 	.word	0x00014df8
   14b6c:	00014dd8 	.word	0x00014dd8
   14b70:	00014dd8 	.word	0x00014dd8
   14b74:	00014dd8 	.word	0x00014dd8
   14b78:	00014dd8 	.word	0x00014dd8
   14b7c:	00014dd8 	.word	0x00014dd8
   14b80:	00014dd8 	.word	0x00014dd8
   14b84:	00014dd8 	.word	0x00014dd8
   14b88:	00014dd8 	.word	0x00014dd8
   14b8c:	000105fc 	.word	0x000105fc
   14b90:	000105fc 	.word	0x000105fc
   14b94:	000105fc 	.word	0x000105fc
   14b98:	000105fc 	.word	0x000105fc
   14b9c:	000105fc 	.word	0x000105fc
   14ba0:	000105fc 	.word	0x000105fc
   14ba4:	00014dd0 	.word	0x00014dd0
   14ba8:	000105fc 	.word	0x000105fc
   14bac:	000105fc 	.word	0x000105fc
   14bb0:	000105fc 	.word	0x000105fc
   14bb4:	000105fc 	.word	0x000105fc
   14bb8:	000105fc 	.word	0x000105fc
   14bbc:	000105fc 	.word	0x000105fc
   14bc0:	000105fc 	.word	0x000105fc
   14bc4:	00014dc8 	.word	0x00014dc8
   14bc8:	000105fc 	.word	0x000105fc
   14bcc:	000105fc 	.word	0x000105fc
   14bd0:	000105fc 	.word	0x000105fc
   14bd4:	000105fc 	.word	0x000105fc
   14bd8:	000105fc 	.word	0x000105fc
   14bdc:	000105fc 	.word	0x000105fc
   14be0:	000105fc 	.word	0x000105fc
   14be4:	00014dc0 	.word	0x00014dc0
   14be8:	000105fc 	.word	0x000105fc
   14bec:	000105fc 	.word	0x000105fc
   14bf0:	000105fc 	.word	0x000105fc
   14bf4:	000105fc 	.word	0x000105fc
   14bf8:	000105fc 	.word	0x000105fc
   14bfc:	000105fc 	.word	0x000105fc
   14c00:	000105fc 	.word	0x000105fc
   14c04:	00014db8 	.word	0x00014db8
   14c08:	000105fc 	.word	0x000105fc
   14c0c:	000105fc 	.word	0x000105fc
   14c10:	000105fc 	.word	0x000105fc
   14c14:	000105fc 	.word	0x000105fc
   14c18:	000105fc 	.word	0x000105fc
   14c1c:	000105fc 	.word	0x000105fc
   14c20:	000105fc 	.word	0x000105fc
   14c24:	00014db0 	.word	0x00014db0
   14c28:	000105fc 	.word	0x000105fc
   14c2c:	000105fc 	.word	0x000105fc
   14c30:	000105fc 	.word	0x000105fc
   14c34:	000105fc 	.word	0x000105fc
   14c38:	000105fc 	.word	0x000105fc
   14c3c:	000105fc 	.word	0x000105fc
   14c40:	000105fc 	.word	0x000105fc
   14c44:	00014da0 	.word	0x00014da0
   14c48:	000105fc 	.word	0x000105fc
   14c4c:	000105fc 	.word	0x000105fc
   14c50:	000105fc 	.word	0x000105fc
   14c54:	000105fc 	.word	0x000105fc
   14c58:	000105fc 	.word	0x000105fc
   14c5c:	000105fc 	.word	0x000105fc
   14c60:	000105fc 	.word	0x000105fc
   14c64:	00014da8 	.word	0x00014da8
   14c68:	000105fc 	.word	0x000105fc
   14c6c:	000105fc 	.word	0x000105fc
   14c70:	000105fc 	.word	0x000105fc
   14c74:	000105fc 	.word	0x000105fc
   14c78:	000105fc 	.word	0x000105fc
   14c7c:	000105fc 	.word	0x000105fc
   14c80:	000105fc 	.word	0x000105fc
   14c84:	00014d98 	.word	0x00014d98
   14c88:	000105fc 	.word	0x000105fc
   14c8c:	000105fc 	.word	0x000105fc
   14c90:	000105fc 	.word	0x000105fc
   14c94:	000105fc 	.word	0x000105fc
   14c98:	000105fc 	.word	0x000105fc
   14c9c:	000105fc 	.word	0x000105fc
   14ca0:	000105fc 	.word	0x000105fc
   14ca4:	00014d90 	.word	0x00014d90
   14ca8:	000105fc 	.word	0x000105fc
   14cac:	000105fc 	.word	0x000105fc
   14cb0:	000105fc 	.word	0x000105fc
   14cb4:	000105fc 	.word	0x000105fc
   14cb8:	000105fc 	.word	0x000105fc
   14cbc:	000105fc 	.word	0x000105fc
   14cc0:	000105fc 	.word	0x000105fc
   14cc4:	00014ea0 	.word	0x00014ea0
   14cc8:	000105fc 	.word	0x000105fc
   14ccc:	000105fc 	.word	0x000105fc
   14cd0:	000105fc 	.word	0x000105fc
   14cd4:	000105fc 	.word	0x000105fc
   14cd8:	000105fc 	.word	0x000105fc
   14cdc:	000105fc 	.word	0x000105fc
   14ce0:	000105fc 	.word	0x000105fc
   14ce4:	00014e98 	.word	0x00014e98
   14ce8:	000105fc 	.word	0x000105fc
   14cec:	000105fc 	.word	0x000105fc
   14cf0:	000105fc 	.word	0x000105fc
   14cf4:	000105fc 	.word	0x000105fc
   14cf8:	000105fc 	.word	0x000105fc
   14cfc:	000105fc 	.word	0x000105fc
   14d00:	000105fc 	.word	0x000105fc
   14d04:	00014e20 	.word	0x00014e20
   14d08:	000105fc 	.word	0x000105fc
   14d0c:	000105fc 	.word	0x000105fc
   14d10:	000105fc 	.word	0x000105fc
   14d14:	000105fc 	.word	0x000105fc
   14d18:	000105fc 	.word	0x000105fc
   14d1c:	000105fc 	.word	0x000105fc
   14d20:	000105fc 	.word	0x000105fc
   14d24:	00014e90 	.word	0x00014e90
   14d28:	000105fc 	.word	0x000105fc
   14d2c:	000105fc 	.word	0x000105fc
   14d30:	000105fc 	.word	0x000105fc
   14d34:	000105fc 	.word	0x000105fc
   14d38:	000105fc 	.word	0x000105fc
   14d3c:	000105fc 	.word	0x000105fc
   14d40:	000105fc 	.word	0x000105fc
   14d44:	00014e88 	.word	0x00014e88
   14d48:	000105fc 	.word	0x000105fc
   14d4c:	000105fc 	.word	0x000105fc
   14d50:	000105fc 	.word	0x000105fc
   14d54:	000105fc 	.word	0x000105fc
   14d58:	000105fc 	.word	0x000105fc
   14d5c:	000105fc 	.word	0x000105fc
   14d60:	000105fc 	.word	0x000105fc
   14d64:	00014e80 	.word	0x00014e80
   14d68:	000105fc 	.word	0x000105fc
   14d6c:	000105fc 	.word	0x000105fc
   14d70:	000105fc 	.word	0x000105fc
   14d74:	000105fc 	.word	0x000105fc
   14d78:	000105fc 	.word	0x000105fc
   14d7c:	000105fc 	.word	0x000105fc
   14d80:	000105fc 	.word	0x000105fc
   14d84:	00014d88 	.word	0x00014d88
   14d88:	e7d53002 	ldrb	r3, [r5, r2]
   14d8c:	eafffd1b 	b	14200 <CodesDD+0x4060>
   14d90:	e7d53002 	ldrb	r3, [r5, r2]
   14d94:	eafffd49 	b	142c0 <CodesDD+0x4120>
   14d98:	e7d53002 	ldrb	r3, [r5, r2]
   14d9c:	eafffda8 	b	14444 <CodesDD+0x42a4>
   14da0:	e7d53002 	ldrb	r3, [r5, r2]
   14da4:	eafffdd5 	b	14500 <CodesDD+0x4360>
   14da8:	e7d53002 	ldrb	r3, [r5, r2]
   14dac:	eafffd2b 	b	14260 <CodesDD+0x40c0>
   14db0:	e7d53002 	ldrb	r3, [r5, r2]
   14db4:	eafffd8b 	b	143e8 <CodesDD+0x4248>
   14db8:	e7d53002 	ldrb	r3, [r5, r2]
   14dbc:	eafffdfe 	b	145bc <CodesDD+0x441c>
   14dc0:	e7d53002 	ldrb	r3, [r5, r2]
   14dc4:	eafffd54 	b	1431c <CodesDD+0x417c>
   14dc8:	e7d53002 	ldrb	r3, [r5, r2]
   14dcc:	eafffde2 	b	1455c <CodesDD+0x43bc>
   14dd0:	e7d53002 	ldrb	r3, [r5, r2]
   14dd4:	eafffdb1 	b	144a0 <CodesDD+0x4300>
   14dd8:	e7d53002 	ldrb	r3, [r5, r2]
   14ddc:	eafffe0c 	b	14614 <CodesDD+0x4474>
   14de0:	e7d53002 	ldrb	r3, [r5, r2]
   14de4:	eafffdcd 	b	14520 <CodesDD+0x4380>
   14de8:	e7d53002 	ldrb	r3, [r5, r2]
   14dec:	eafffd6e 	b	143ac <CodesDD+0x420c>
   14df0:	e7d53002 	ldrb	r3, [r5, r2]
   14df4:	eafffe25 	b	14690 <CodesDD+0x44f0>
   14df8:	e7d53002 	ldrb	r3, [r5, r2]
   14dfc:	eafffd08 	b	14224 <CodesDD+0x4084>
   14e00:	e7d53002 	ldrb	r3, [r5, r2]
   14e04:	eafffd35 	b	142e0 <CodesDD+0x4140>
   14e08:	e7d53002 	ldrb	r3, [r5, r2]
   14e0c:	eafffdf2 	b	145dc <CodesDD+0x443c>
   14e10:	e7d53002 	ldrb	r3, [r5, r2]
   14e14:	eafffd92 	b	14464 <CodesDD+0x42c4>
   14e18:	e7d51002 	ldrb	r1, [r5, r2]
   14e1c:	eafffe2a 	b	146cc <CodesDD+0x452c>
   14e20:	e7d53002 	ldrb	r3, [r5, r2]
   14e24:	eafffce3 	b	141b8 <CodesDD+0x4018>
   14e28:	e7d5c002 	ldrb	ip, [r5, r2]
   14e2c:	eafffd14 	b	14284 <CodesDD+0x40e4>
   14e30:	e7d51002 	ldrb	r1, [r5, r2]
   14e34:	eafffdd1 	b	14580 <CodesDD+0x43e0>
   14e38:	e7d5c002 	ldrb	ip, [r5, r2]
   14e3c:	eafffd72 	b	1440c <CodesDD+0x426c>
   14e40:	e7d53002 	ldrb	r3, [r5, r2]
   14e44:	eafffe01 	b	14650 <CodesDD+0x44b0>
   14e48:	e7d53002 	ldrb	r3, [r5, r2]
   14e4c:	eafffd3b 	b	14340 <CodesDD+0x41a0>
   14e50:	e7d53002 	ldrb	r3, [r5, r2]
   14e54:	eafffd9a 	b	144c4 <CodesDD+0x4324>
   14e58:	e7d53002 	ldrb	r3, [r5, r2]
   14e5c:	e1a0c3a3 	lsr	ip, r3, #7
   14e60:	e18c3083 	orr	r3, ip, r3, lsl #1
   14e64:	e6ef1073 	uxtb	r1, r3
   14e68:	e0843001 	add	r3, r4, r1
   14e6c:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   14e70:	e18cc003 	orr	ip, ip, r3
   14e74:	e5c0c000 	strb	ip, [r0]
   14e78:	e7c51002 	strb	r1, [r5, r2]
   14e7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14e80:	e7d53002 	ldrb	r3, [r5, r2]
   14e84:	eafffcb0 	b	1414c <CodesDD+0x3fac>
   14e88:	e7d53002 	ldrb	r3, [r5, r2]
   14e8c:	eafffcb7 	b	14170 <CodesDD+0x3fd0>
   14e90:	e7d53002 	ldrb	r3, [r5, r2]
   14e94:	eafffcbe 	b	14194 <CodesDD+0x3ff4>
   14e98:	e7d53002 	ldrb	r3, [r5, r2]
   14e9c:	eafffcce 	b	141dc <CodesDD+0x403c>
   14ea0:	e7d53002 	ldrb	r3, [r5, r2]
   14ea4:	eafffd38 	b	1438c <CodesDD+0x41ec>
   14ea8:	e28ee002 	add	lr, lr, #2
   14eac:	e1c0e0bc 	strh	lr, [r0, #12]
   14eb0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14eb4:	e1c0c0bc 	strh	ip, [r0, #12]
   14eb8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14ebc:	e28ee003 	add	lr, lr, #3
   14ec0:	e1c0e0bc 	strh	lr, [r0, #12]
   14ec4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14ec8:	e1c0c0bc 	strh	ip, [r0, #12]
   14ecc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14ed0:	e28ee002 	add	lr, lr, #2
   14ed4:	e1c0e0bc 	strh	lr, [r0, #12]
   14ed8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14edc:	e28ee003 	add	lr, lr, #3
   14ee0:	e1c0e0bc 	strh	lr, [r0, #12]
   14ee4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14ee8:	e28ee003 	add	lr, lr, #3
   14eec:	e1c0e0bc 	strh	lr, [r0, #12]
   14ef0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14ef4:	e28ee003 	add	lr, lr, #3
   14ef8:	e1c0e0bc 	strh	lr, [r0, #12]
   14efc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f00:	e28ee002 	add	lr, lr, #2
   14f04:	e1c0e0bc 	strh	lr, [r0, #12]
   14f08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f0c:	e28ee002 	add	lr, lr, #2
   14f10:	e1c0e0bc 	strh	lr, [r0, #12]
   14f14:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f18:	e28ee002 	add	lr, lr, #2
   14f1c:	e1c0e0bc 	strh	lr, [r0, #12]
   14f20:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f24:	e1c0c0bc 	strh	ip, [r0, #12]
   14f28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f2c:	e1c0c0bc 	strh	ip, [r0, #12]
   14f30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f34:	e1c0c0bc 	strh	ip, [r0, #12]
   14f38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f3c:	e1c0c0bc 	strh	ip, [r0, #12]
   14f40:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f44:	e28ee003 	add	lr, lr, #3
   14f48:	e1c0e0bc 	strh	lr, [r0, #12]
   14f4c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f50:	e28ee003 	add	lr, lr, #3
   14f54:	e1c0e0bc 	strh	lr, [r0, #12]
   14f58:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14f5c:	e3560000 	cmp	r6, #0
   14f60:	e2411007 	sub	r1, r1, #7
   14f64:	e28ec002 	add	ip, lr, #2
   14f68:	151fe788 	ldrne	lr, [pc, #-1928]	; 147e8 <CodesDD+0x4648>
   14f6c:	e5801020 	str	r1, [r0, #32]
   14f70:	e6ffc07c 	uxth	ip, ip
   14f74:	151f1790 	ldrne	r1, [pc, #-1936]	; 147ec <CodesDD+0x464c>
   14f78:	e1c0c0bc 	strh	ip, [r0, #12]
   14f7c:	1002200e 	andne	r2, r2, lr
   14f80:	07d53002 	ldrbeq	r3, [r5, r2]
   14f84:	17d13002 	ldrbne	r3, [r1, r2]
   14f88:	e1d020be 	ldrh	r2, [r0, #14]
   14f8c:	11c040bc 	strhne	r4, [r0, #12]
   14f90:	e2422001 	sub	r2, r2, #1
   14f94:	01c040bc 	strheq	r4, [r0, #12]
   14f98:	100cc00e 	andne	ip, ip, lr
   14f9c:	e6ff2072 	uxth	r2, r2
   14fa0:	e1a04424 	lsr	r4, r4, #8
   14fa4:	07d5c00c 	ldrbeq	ip, [r5, ip]
   14fa8:	17d1c00c 	ldrbne	ip, [r1, ip]
   14fac:	e1c020be 	strh	r2, [r0, #14]
   14fb0:	e7c54002 	strb	r4, [r5, r2]
   14fb4:	e1d020be 	ldrh	r2, [r0, #14]
   14fb8:	e3c31cff 	bic	r1, r3, #65280	; 0xff00
   14fbc:	e5d0e00c 	ldrb	lr, [r0, #12]
   14fc0:	e2423001 	sub	r3, r2, #1
   14fc4:	e6ff3073 	uxth	r3, r3
   14fc8:	e181240c 	orr	r2, r1, ip, lsl #8
   14fcc:	e1c030be 	strh	r3, [r0, #14]
   14fd0:	e7c5e003 	strb	lr, [r5, r3]
   14fd4:	e1c020bc 	strh	r2, [r0, #12]
   14fd8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14fdc:	e3560000 	cmp	r6, #0
   14fe0:	e28e1002 	add	r1, lr, #2
   14fe4:	151fe804 	ldrne	lr, [pc, #-2052]	; 147e8 <CodesDD+0x4648>
   14fe8:	e6ff1071 	uxth	r1, r1
   14fec:	151fc808 	ldrne	ip, [pc, #-2056]	; 147ec <CodesDD+0x464c>
   14ff0:	e1c010bc 	strh	r1, [r0, #12]
   14ff4:	1002200e 	andne	r2, r2, lr
   14ff8:	17dc3002 	ldrbne	r3, [ip, r2]
   14ffc:	07d53002 	ldrbeq	r3, [r5, r2]
   15000:	1001100e 	andne	r1, r1, lr
   15004:	17dc2001 	ldrbne	r2, [ip, r1]
   15008:	07d52001 	ldrbeq	r2, [r5, r1]
   1500c:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
   15010:	e1833402 	orr	r3, r3, r2, lsl #8
   15014:	e1c030bc 	strh	r3, [r0, #12]
   15018:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1501c:	e3833004 	orr	r3, r3, #4
   15020:	e3a02010 	mov	r2, #16
   15024:	eafffa6c 	b	139dc <CodesDD+0x383c>
   15028:	e7d52002 	ldrb	r2, [r5, r2]
   1502c:	e1c010be 	strh	r1, [r0, #14]
   15030:	e5c0200c 	strb	r2, [r0, #12]
   15034:	e7d53003 	ldrb	r3, [r5, r3]
   15038:	eaffedf4 	b	10810 <CodesDD+0x670>
   1503c:	e3833004 	orr	r3, r3, #4
   15040:	e3a04010 	mov	r4, #16
   15044:	eafff9f4 	b	1381c <CodesDD+0x367c>
   15048:	e3833004 	orr	r3, r3, #4
   1504c:	e3a02010 	mov	r2, #16
   15050:	eafffb07 	b	13c74 <CodesDD+0x3ad4>
   15054:	e3833004 	orr	r3, r3, #4
   15058:	e3a02010 	mov	r2, #16
   1505c:	eafff900 	b	13464 <CodesDD+0x32c4>
   15060:	e3833004 	orr	r3, r3, #4
   15064:	e3a02010 	mov	r2, #16
   15068:	eafffaee 	b	13c28 <CodesDD+0x3a88>
   1506c:	e3833004 	orr	r3, r3, #4
   15070:	e3a04010 	mov	r4, #16
   15074:	eafffacd 	b	13bb0 <CodesDD+0x3a10>
   15078:	e3833004 	orr	r3, r3, #4
   1507c:	e3a02010 	mov	r2, #16
   15080:	eafffa72 	b	13a50 <CodesDD+0x38b0>
   15084:	e3833004 	orr	r3, r3, #4
   15088:	e3a02010 	mov	r2, #16
   1508c:	eafff91b 	b	13500 <CodesDD+0x3360>
   15090:	e3833004 	orr	r3, r3, #4
   15094:	e3a02010 	mov	r2, #16
   15098:	eafff996 	b	136f8 <CodesDD+0x3558>
   1509c:	e3833004 	orr	r3, r3, #4
   150a0:	e3a02010 	mov	r2, #16
   150a4:	eafff928 	b	1354c <CodesDD+0x33ac>
   150a8:	e3833004 	orr	r3, r3, #4
   150ac:	e3a02010 	mov	r2, #16
   150b0:	eafff8d8 	b	13418 <CodesDD+0x3278>
   150b4:	e3833004 	orr	r3, r3, #4
   150b8:	e3a02010 	mov	r2, #16
   150bc:	eafff9a0 	b	13744 <CodesDD+0x35a4>
   150c0:	e3833004 	orr	r3, r3, #4
   150c4:	e3a02010 	mov	r2, #16
   150c8:	eafffbb1 	b	13f94 <CodesDD+0x3df4>
   150cc:	e3833004 	orr	r3, r3, #4
   150d0:	e3a02010 	mov	r2, #16
   150d4:	eafffbe5 	b	14070 <CodesDD+0x3ed0>
   150d8:	e3833004 	orr	r3, r3, #4
   150dc:	e3a02010 	mov	r2, #16
   150e0:	eafffb89 	b	13f0c <CodesDD+0x3d6c>
   150e4:	e3833004 	orr	r3, r3, #4
   150e8:	e3a02010 	mov	r2, #16
   150ec:	eafffbcc 	b	14024 <CodesDD+0x3e84>
   150f0:	e1c0c0bc 	strh	ip, [r0, #12]
   150f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   150f8:	e28ee003 	add	lr, lr, #3
   150fc:	e1c0e0bc 	strh	lr, [r0, #12]
   15100:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   15104:	e7d52002 	ldrb	r2, [r5, r2]
   15108:	e1c010be 	strh	r1, [r0, #14]
   1510c:	e5c0200c 	strb	r2, [r0, #12]
   15110:	e7d53003 	ldrb	r3, [r5, r3]
   15114:	eafff704 	b	12d2c <CodesDD+0x2b8c>
   15118:	e7d52002 	ldrb	r2, [r5, r2]
   1511c:	e1c010be 	strh	r1, [r0, #14]
   15120:	e5c0200c 	strb	r2, [r0, #12]
   15124:	e7d53003 	ldrb	r3, [r5, r3]
   15128:	eaffee35 	b	10a04 <CodesDD+0x864>
   1512c:	e7d52002 	ldrb	r2, [r5, r2]
   15130:	e1c010be 	strh	r1, [r0, #14]
   15134:	e5c0200c 	strb	r2, [r0, #12]
   15138:	e7d53003 	ldrb	r3, [r5, r3]
   1513c:	eafff665 	b	12ad8 <CodesDD+0x2938>
   15140:	e7d52002 	ldrb	r2, [r5, r2]
   15144:	e1c010be 	strh	r1, [r0, #14]
   15148:	e5c0200c 	strb	r2, [r0, #12]
   1514c:	e7d53003 	ldrb	r3, [r5, r3]
   15150:	eaffee93 	b	10ba4 <CodesDD+0xa04>
   15154:	e7d52002 	ldrb	r2, [r5, r2]
   15158:	e1c010be 	strh	r1, [r0, #14]
   1515c:	e5c0200c 	strb	r2, [r0, #12]
   15160:	e7d53003 	ldrb	r3, [r5, r3]
   15164:	eafff094 	b	113bc <CodesDD+0x121c>
   15168:	e7d52002 	ldrb	r2, [r5, r2]
   1516c:	e1c010be 	strh	r1, [r0, #14]
   15170:	e5c0200c 	strb	r2, [r0, #12]
   15174:	e7d53003 	ldrb	r3, [r5, r3]
   15178:	eafff5d2 	b	128c8 <CodesDD+0x2728>
   1517c:	e7d52002 	ldrb	r2, [r5, r2]
   15180:	e1c010be 	strh	r1, [r0, #14]
   15184:	e5c0200c 	strb	r2, [r0, #12]
   15188:	e7d53003 	ldrb	r3, [r5, r3]
   1518c:	eafff7c9 	b	130b8 <CodesDD+0x2f18>
   15190:	e1a03882 	lsl	r3, r2, #17
   15194:	e1a038a3 	lsr	r3, r3, #17
   15198:	e7de3003 	ldrb	r3, [lr, r3]
   1519c:	eaffff2e 	b	14e5c <CodesDD+0x4cbc>

000151a0 <CodesED>:
   151a0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151a4:	e1a04000 	mov	r4, r0
   151a8:	e59f5fe0 	ldr	r5, [pc, #4064]	; 16190 <CodesED+0xff0>
   151ac:	e1d020bc 	ldrh	r2, [r0, #12]
   151b0:	e2857a12 	add	r7, r5, #73728	; 0x12000
   151b4:	e5970000 	ldr	r0, [r7]
   151b8:	e2821001 	add	r1, r2, #1
   151bc:	e3500000 	cmp	r0, #0
   151c0:	11a03882 	lslne	r3, r2, #17
   151c4:	159fcfd8 	ldrne	ip, [pc, #4056]	; 161a4 <CodesED+0x1004>
   151c8:	e6ff1071 	uxth	r1, r1
   151cc:	e1c410bc 	strh	r1, [r4, #12]
   151d0:	11a038a3 	lsrne	r3, r3, #17
   151d4:	17dcc003 	ldrbne	ip, [ip, r3]
   151d8:	07d5c002 	ldrbeq	ip, [r5, r2]
   151dc:	e59f6fb0 	ldr	r6, [pc, #4016]	; 16194 <CodesED+0xff4>
   151e0:	e594e020 	ldr	lr, [r4, #32]
   151e4:	e086300c 	add	r3, r6, ip
   151e8:	e5d33500 	ldrb	r3, [r3, #1280]	; 0x500
   151ec:	e24cc040 	sub	ip, ip, #64	; 0x40
   151f0:	e04e3003 	sub	r3, lr, r3
   151f4:	e24dd00c 	sub	sp, sp, #12
   151f8:	e5843020 	str	r3, [r4, #32]
   151fc:	e35c00be 	cmp	ip, #190	; 0xbe
   15200:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
   15204:	ea0000d4 	b	1555c <CodesED+0x3bc>
   15208:	00015ae0 	.word	0x00015ae0
   1520c:	00015ad8 	.word	0x00015ad8
   15210:	00016018 	.word	0x00016018
   15214:	00015fb4 	.word	0x00015fb4
   15218:	00016348 	.word	0x00016348
   1521c:	000162ec 	.word	0x000162ec
   15220:	000162dc 	.word	0x000162dc
   15224:	000162d0 	.word	0x000162d0
   15228:	000162a8 	.word	0x000162a8
   1522c:	000162a0 	.word	0x000162a0
   15230:	00015d30 	.word	0x00015d30
   15234:	00015cd4 	.word	0x00015cd4
   15238:	0001555c 	.word	0x0001555c
   1523c:	000162ec 	.word	0x000162ec
   15240:	0001555c 	.word	0x0001555c
   15244:	0001555c 	.word	0x0001555c
   15248:	00016224 	.word	0x00016224
   1524c:	0001621c 	.word	0x0001621c
   15250:	0001620c 	.word	0x0001620c
   15254:	000161a8 	.word	0x000161a8
   15258:	0001555c 	.word	0x0001555c
   1525c:	0001555c 	.word	0x0001555c
   15260:	0001617c 	.word	0x0001617c
   15264:	00016148 	.word	0x00016148
   15268:	00016120 	.word	0x00016120
   1526c:	00016118 	.word	0x00016118
   15270:	00016108 	.word	0x00016108
   15274:	000160ac 	.word	0x000160ac
   15278:	0001555c 	.word	0x0001555c
   1527c:	0001555c 	.word	0x0001555c
   15280:	00016098 	.word	0x00016098
   15284:	00016050 	.word	0x00016050
   15288:	00016028 	.word	0x00016028
   1528c:	00015990 	.word	0x00015990
   15290:	00015944 	.word	0x00015944
   15294:	0001582c 	.word	0x0001582c
   15298:	0001555c 	.word	0x0001555c
   1529c:	0001555c 	.word	0x0001555c
   152a0:	0001555c 	.word	0x0001555c
   152a4:	000157e4 	.word	0x000157e4
   152a8:	000157bc 	.word	0x000157bc
   152ac:	000157a8 	.word	0x000157a8
   152b0:	000158ec 	.word	0x000158ec
   152b4:	00015890 	.word	0x00015890
   152b8:	0001555c 	.word	0x0001555c
   152bc:	0001555c 	.word	0x0001555c
   152c0:	0001555c 	.word	0x0001555c
   152c4:	0001574c 	.word	0x0001574c
   152c8:	00015728 	.word	0x00015728
   152cc:	0001555c 	.word	0x0001555c
   152d0:	00015c78 	.word	0x00015c78
   152d4:	00015c14 	.word	0x00015c14
   152d8:	0001555c 	.word	0x0001555c
   152dc:	0001555c 	.word	0x0001555c
   152e0:	0001555c 	.word	0x0001555c
   152e4:	0001555c 	.word	0x0001555c
   152e8:	00015bec 	.word	0x00015bec
   152ec:	00015be4 	.word	0x00015be4
   152f0:	00015b64 	.word	0x00015b64
   152f4:	00015b08 	.word	0x00015b08
   152f8:	0001555c 	.word	0x0001555c
   152fc:	0001555c 	.word	0x0001555c
   15300:	0001555c 	.word	0x0001555c
   15304:	0001555c 	.word	0x0001555c
   15308:	0001555c 	.word	0x0001555c
   1530c:	0001555c 	.word	0x0001555c
   15310:	0001555c 	.word	0x0001555c
   15314:	0001555c 	.word	0x0001555c
   15318:	0001555c 	.word	0x0001555c
   1531c:	0001555c 	.word	0x0001555c
   15320:	0001555c 	.word	0x0001555c
   15324:	0001555c 	.word	0x0001555c
   15328:	0001555c 	.word	0x0001555c
   1532c:	0001555c 	.word	0x0001555c
   15330:	0001555c 	.word	0x0001555c
   15334:	0001555c 	.word	0x0001555c
   15338:	0001555c 	.word	0x0001555c
   1533c:	0001555c 	.word	0x0001555c
   15340:	0001555c 	.word	0x0001555c
   15344:	0001555c 	.word	0x0001555c
   15348:	0001555c 	.word	0x0001555c
   1534c:	0001555c 	.word	0x0001555c
   15350:	0001555c 	.word	0x0001555c
   15354:	0001555c 	.word	0x0001555c
   15358:	0001555c 	.word	0x0001555c
   1535c:	0001555c 	.word	0x0001555c
   15360:	0001555c 	.word	0x0001555c
   15364:	0001555c 	.word	0x0001555c
   15368:	0001555c 	.word	0x0001555c
   1536c:	0001555c 	.word	0x0001555c
   15370:	0001555c 	.word	0x0001555c
   15374:	0001555c 	.word	0x0001555c
   15378:	0001555c 	.word	0x0001555c
   1537c:	0001555c 	.word	0x0001555c
   15380:	0001555c 	.word	0x0001555c
   15384:	0001555c 	.word	0x0001555c
   15388:	00016278 	.word	0x00016278
   1538c:	0001625c 	.word	0x0001625c
   15390:	00015bd4 	.word	0x00015bd4
   15394:	00015ab0 	.word	0x00015ab0
   15398:	0001555c 	.word	0x0001555c
   1539c:	0001555c 	.word	0x0001555c
   153a0:	0001555c 	.word	0x0001555c
   153a4:	0001555c 	.word	0x0001555c
   153a8:	00015504 	.word	0x00015504
   153ac:	00015a30 	.word	0x00015a30
   153b0:	000159f8 	.word	0x000159f8
   153b4:	00015998 	.word	0x00015998
   153b8:	0001555c 	.word	0x0001555c
   153bc:	0001555c 	.word	0x0001555c
   153c0:	0001555c 	.word	0x0001555c
   153c4:	0001555c 	.word	0x0001555c
   153c8:	00015de8 	.word	0x00015de8
   153cc:	00015d40 	.word	0x00015d40
   153d0:	0001556c 	.word	0x0001556c
   153d4:	000156a0 	.word	0x000156a0
   153d8:	0001555c 	.word	0x0001555c
   153dc:	0001555c 	.word	0x0001555c
   153e0:	0001555c 	.word	0x0001555c
   153e4:	0001555c 	.word	0x0001555c
   153e8:	00015624 	.word	0x00015624
   153ec:	00015ea4 	.word	0x00015ea4
   153f0:	000155c4 	.word	0x000155c4
   153f4:	00015f4c 	.word	0x00015f4c
   153f8:	0001555c 	.word	0x0001555c
   153fc:	0001555c 	.word	0x0001555c
   15400:	0001555c 	.word	0x0001555c
   15404:	0001555c 	.word	0x0001555c
   15408:	0001555c 	.word	0x0001555c
   1540c:	0001555c 	.word	0x0001555c
   15410:	0001555c 	.word	0x0001555c
   15414:	0001555c 	.word	0x0001555c
   15418:	0001555c 	.word	0x0001555c
   1541c:	0001555c 	.word	0x0001555c
   15420:	0001555c 	.word	0x0001555c
   15424:	0001555c 	.word	0x0001555c
   15428:	0001555c 	.word	0x0001555c
   1542c:	0001555c 	.word	0x0001555c
   15430:	0001555c 	.word	0x0001555c
   15434:	0001555c 	.word	0x0001555c
   15438:	0001555c 	.word	0x0001555c
   1543c:	0001555c 	.word	0x0001555c
   15440:	0001555c 	.word	0x0001555c
   15444:	0001555c 	.word	0x0001555c
   15448:	0001555c 	.word	0x0001555c
   1544c:	0001555c 	.word	0x0001555c
   15450:	0001555c 	.word	0x0001555c
   15454:	0001555c 	.word	0x0001555c
   15458:	0001555c 	.word	0x0001555c
   1545c:	0001555c 	.word	0x0001555c
   15460:	0001555c 	.word	0x0001555c
   15464:	0001555c 	.word	0x0001555c
   15468:	0001555c 	.word	0x0001555c
   1546c:	0001555c 	.word	0x0001555c
   15470:	0001555c 	.word	0x0001555c
   15474:	0001555c 	.word	0x0001555c
   15478:	0001555c 	.word	0x0001555c
   1547c:	0001555c 	.word	0x0001555c
   15480:	0001555c 	.word	0x0001555c
   15484:	0001555c 	.word	0x0001555c
   15488:	0001555c 	.word	0x0001555c
   1548c:	0001555c 	.word	0x0001555c
   15490:	0001555c 	.word	0x0001555c
   15494:	0001555c 	.word	0x0001555c
   15498:	0001555c 	.word	0x0001555c
   1549c:	0001555c 	.word	0x0001555c
   154a0:	0001555c 	.word	0x0001555c
   154a4:	0001555c 	.word	0x0001555c
   154a8:	0001555c 	.word	0x0001555c
   154ac:	0001555c 	.word	0x0001555c
   154b0:	0001555c 	.word	0x0001555c
   154b4:	0001555c 	.word	0x0001555c
   154b8:	0001555c 	.word	0x0001555c
   154bc:	0001561c 	.word	0x0001561c
   154c0:	0001555c 	.word	0x0001555c
   154c4:	0001555c 	.word	0x0001555c
   154c8:	0001555c 	.word	0x0001555c
   154cc:	0001555c 	.word	0x0001555c
   154d0:	0001555c 	.word	0x0001555c
   154d4:	0001555c 	.word	0x0001555c
   154d8:	0001555c 	.word	0x0001555c
   154dc:	0001555c 	.word	0x0001555c
   154e0:	0001555c 	.word	0x0001555c
   154e4:	0001555c 	.word	0x0001555c
   154e8:	0001555c 	.word	0x0001555c
   154ec:	0001555c 	.word	0x0001555c
   154f0:	0001555c 	.word	0x0001555c
   154f4:	0001555c 	.word	0x0001555c
   154f8:	0001555c 	.word	0x0001555c
   154fc:	0001555c 	.word	0x0001555c
   15500:	0001624c 	.word	0x0001624c
   15504:	e1d420b4 	ldrh	r2, [r4, #4]
   15508:	e1d430b6 	ldrh	r3, [r4, #6]
   1550c:	e3500000 	cmp	r0, #0
   15510:	e2431001 	sub	r1, r3, #1
   15514:	e2420001 	sub	r0, r2, #1
   15518:	e1c400b4 	strh	r0, [r4, #4]
   1551c:	e1c410b6 	strh	r1, [r4, #6]
   15520:	0a00035c 	beq	16298 <CodesED+0x10f8>
   15524:	e1a03883 	lsl	r3, r3, #17
   15528:	e59f1c74 	ldr	r1, [pc, #3188]	; 161a4 <CodesED+0x1004>
   1552c:	e1a038a3 	lsr	r3, r3, #17
   15530:	e7d13003 	ldrb	r3, [r1, r3]
   15534:	e7c53002 	strb	r3, [r5, r2]
   15538:	e1d430b2 	ldrh	r3, [r4, #2]
   1553c:	e1d420d0 	ldrsb	r2, [r4]
   15540:	e2433001 	sub	r3, r3, #1
   15544:	e6ff3073 	uxth	r3, r3
   15548:	e3530000 	cmp	r3, #0
   1554c:	e1c430b2 	strh	r3, [r4, #2]
   15550:	e3c23016 	bic	r3, r2, #22
   15554:	13833004 	orrne	r3, r3, #4
   15558:	e5c43000 	strb	r3, [r4]
   1555c:	e28dd00c 	add	sp, sp, #12
   15560:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15564:	e3520000 	cmp	r2, #0
   15568:	da00038f 	ble	163ac <CodesED+0x120c>
   1556c:	e1d460b6 	ldrh	r6, [r4, #6]
   15570:	e1d400b2 	ldrh	r0, [r4, #2]
   15574:	e2863001 	add	r3, r6, #1
   15578:	e1c430b6 	strh	r3, [r4, #6]
   1557c:	ebffcd69 	bl	8b28 <InZ80>
   15580:	e7c50006 	strb	r0, [r5, r6]
   15584:	e5d43003 	ldrb	r3, [r4, #3]
   15588:	e5941020 	ldr	r1, [r4, #32]
   1558c:	e2433001 	sub	r3, r3, #1
   15590:	e6ef3073 	uxtb	r3, r3
   15594:	e2412015 	sub	r2, r1, #21
   15598:	e3530000 	cmp	r3, #0
   1559c:	e5c43003 	strb	r3, [r4, #3]
   155a0:	e5842020 	str	r2, [r4, #32]
   155a4:	1affffee 	bne	15564 <CodesED+0x3c4>
   155a8:	e3a03042 	mov	r3, #66	; 0x42
   155ac:	e2411010 	sub	r1, r1, #16
   155b0:	e5841020 	str	r1, [r4, #32]
   155b4:	e5c43000 	strb	r3, [r4]
   155b8:	eaffffe7 	b	1555c <CodesED+0x3bc>
   155bc:	e3520000 	cmp	r2, #0
   155c0:	da000379 	ble	163ac <CodesED+0x120c>
   155c4:	e1d460b6 	ldrh	r6, [r4, #6]
   155c8:	e1d400b2 	ldrh	r0, [r4, #2]
   155cc:	e2463001 	sub	r3, r6, #1
   155d0:	e1c430b6 	strh	r3, [r4, #6]
   155d4:	ebffcd53 	bl	8b28 <InZ80>
   155d8:	e7c50006 	strb	r0, [r5, r6]
   155dc:	e5d43003 	ldrb	r3, [r4, #3]
   155e0:	e5941020 	ldr	r1, [r4, #32]
   155e4:	e2433001 	sub	r3, r3, #1
   155e8:	e6ef3073 	uxtb	r3, r3
   155ec:	e2412015 	sub	r2, r1, #21
   155f0:	e3530000 	cmp	r3, #0
   155f4:	e5c43003 	strb	r3, [r4, #3]
   155f8:	e5842020 	str	r2, [r4, #32]
   155fc:	1affffee 	bne	155bc <CodesED+0x41c>
   15600:	eaffffe8 	b	155a8 <CodesED+0x408>
   15604:	e5d43000 	ldrb	r3, [r4]
   15608:	e1d420bc 	ldrh	r2, [r4, #12]
   1560c:	e3c33016 	bic	r3, r3, #22
   15610:	e3833002 	orr	r3, r3, #2
   15614:	e2422002 	sub	r2, r2, #2
   15618:	e5c43000 	strb	r3, [r4]
   1561c:	e1c420bc 	strh	r2, [r4, #12]
   15620:	eaffffcd 	b	1555c <CodesED+0x3bc>
   15624:	e59f6b78 	ldr	r6, [pc, #2936]	; 161a4 <CodesED+0x1004>
   15628:	e59feb70 	ldr	lr, [pc, #2928]	; 161a0 <CodesED+0x1000>
   1562c:	ea000001 	b	15638 <CodesED+0x498>
   15630:	e3520000 	cmp	r2, #0
   15634:	dafffff2 	ble	15604 <CodesED+0x464>
   15638:	e1d430b6 	ldrh	r3, [r4, #6]
   1563c:	e1d420b4 	ldrh	r2, [r4, #4]
   15640:	e2431001 	sub	r1, r3, #1
   15644:	e242c001 	sub	ip, r2, #1
   15648:	e1c410b6 	strh	r1, [r4, #6]
   1564c:	e3500000 	cmp	r0, #0
   15650:	e003700e 	and	r7, r3, lr
   15654:	e1c4c0b4 	strh	ip, [r4, #4]
   15658:	17d63007 	ldrbne	r3, [r6, r7]
   1565c:	07d53003 	ldrbeq	r3, [r5, r3]
   15660:	e7c53002 	strb	r3, [r5, r2]
   15664:	e1d430b2 	ldrh	r3, [r4, #2]
   15668:	e5941020 	ldr	r1, [r4, #32]
   1566c:	e2433001 	sub	r3, r3, #1
   15670:	e6ff3073 	uxth	r3, r3
   15674:	e2412015 	sub	r2, r1, #21
   15678:	e3530000 	cmp	r3, #0
   1567c:	e1c430b2 	strh	r3, [r4, #2]
   15680:	e5842020 	str	r2, [r4, #32]
   15684:	1affffe9 	bne	15630 <CodesED+0x490>
   15688:	e5d43000 	ldrb	r3, [r4]
   1568c:	e2411010 	sub	r1, r1, #16
   15690:	e3c33016 	bic	r3, r3, #22
   15694:	e5841020 	str	r1, [r4, #32]
   15698:	e5c43000 	strb	r3, [r4]
   1569c:	eaffffae 	b	1555c <CodesED+0x3bc>
   156a0:	e5d43003 	ldrb	r3, [r4, #3]
   156a4:	e59f8af8 	ldr	r8, [pc, #2808]	; 161a4 <CodesED+0x1004>
   156a8:	e59f6af0 	ldr	r6, [pc, #2800]	; 161a0 <CodesED+0x1000>
   156ac:	ea000001 	b	156b8 <CodesED+0x518>
   156b0:	e3520000 	cmp	r2, #0
   156b4:	da000332 	ble	16384 <CodesED+0x11e4>
   156b8:	e1d420b6 	ldrh	r2, [r4, #6]
   156bc:	e5971000 	ldr	r1, [r7]
   156c0:	e2433001 	sub	r3, r3, #1
   156c4:	e3510000 	cmp	r1, #0
   156c8:	e2821001 	add	r1, r2, #1
   156cc:	e5c43003 	strb	r3, [r4, #3]
   156d0:	e0020006 	and	r0, r2, r6
   156d4:	e1c410b6 	strh	r1, [r4, #6]
   156d8:	17d89000 	ldrbne	r9, [r8, r0]
   156dc:	07d59002 	ldrbeq	r9, [r5, r2]
   156e0:	e1d400b2 	ldrh	r0, [r4, #2]
   156e4:	e1a01009 	mov	r1, r9
   156e8:	ebffcd56 	bl	8c48 <OutZ80>
   156ec:	e5941020 	ldr	r1, [r4, #32]
   156f0:	e5d43003 	ldrb	r3, [r4, #3]
   156f4:	e2412015 	sub	r2, r1, #21
   156f8:	e3530000 	cmp	r3, #0
   156fc:	e5842020 	str	r2, [r4, #32]
   15700:	1affffea 	bne	156b0 <CodesED+0x510>
   15704:	e5d43006 	ldrb	r3, [r4, #6]
   15708:	e2411010 	sub	r1, r1, #16
   1570c:	e0839009 	add	r9, r3, r9
   15710:	e3590c01 	cmp	r9, #256	; 0x100
   15714:	b3a03042 	movlt	r3, #66	; 0x42
   15718:	a3a03053 	movge	r3, #83	; 0x53
   1571c:	e5841020 	str	r1, [r4, #32]
   15720:	e5c43000 	strb	r3, [r4]
   15724:	eaffff8c 	b	1555c <CodesED+0x3bc>
   15728:	e1d400b2 	ldrh	r0, [r4, #2]
   1572c:	ebffccfd 	bl	8b28 <InZ80>
   15730:	e5d43000 	ldrb	r3, [r4]
   15734:	e0860000 	add	r0, r6, r0
   15738:	e5d02100 	ldrb	r2, [r0, #256]	; 0x100
   1573c:	e2033001 	and	r3, r3, #1
   15740:	e1833002 	orr	r3, r3, r2
   15744:	e5c43000 	strb	r3, [r4]
   15748:	eaffff83 	b	1555c <CodesED+0x3bc>
   1574c:	e1d430b6 	ldrh	r3, [r4, #6]
   15750:	e3500000 	cmp	r0, #0
   15754:	11a02883 	lslne	r2, r3, #17
   15758:	159f1a44 	ldrne	r1, [pc, #2628]	; 161a4 <CodesED+0x1004>
   1575c:	11a028a2 	lsrne	r2, r2, #17
   15760:	17d11002 	ldrbne	r1, [r1, r2]
   15764:	e5d42001 	ldrb	r2, [r4, #1]
   15768:	07d51003 	ldrbeq	r1, [r5, r3]
   1576c:	e202200f 	and	r2, r2, #15
   15770:	e1822201 	orr	r2, r2, r1, lsl #4
   15774:	e7c52003 	strb	r2, [r5, r3]
   15778:	e5d43001 	ldrb	r3, [r4, #1]
   1577c:	e5d42000 	ldrb	r2, [r4]
   15780:	e3c3300f 	bic	r3, r3, #15
   15784:	e1833221 	orr	r3, r3, r1, lsr #4
   15788:	e0866003 	add	r6, r6, r3
   1578c:	e5d61100 	ldrb	r1, [r6, #256]	; 0x100
   15790:	e2022001 	and	r2, r2, #1
   15794:	e1822001 	orr	r2, r2, r1
   15798:	e5c43001 	strb	r3, [r4, #1]
   1579c:	e5c42000 	strb	r2, [r4]
   157a0:	e28dd00c 	add	sp, sp, #12
   157a4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157a8:	e5d41006 	ldrb	r1, [r4, #6]
   157ac:	e1d400b2 	ldrh	r0, [r4, #2]
   157b0:	e28dd00c 	add	sp, sp, #12
   157b4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157b8:	eaffcd22 	b	8c48 <OutZ80>
   157bc:	e1d400b2 	ldrh	r0, [r4, #2]
   157c0:	ebffccd8 	bl	8b28 <InZ80>
   157c4:	e5d43000 	ldrb	r3, [r4]
   157c8:	e0866000 	add	r6, r6, r0
   157cc:	e5d62100 	ldrb	r2, [r6, #256]	; 0x100
   157d0:	e2033001 	and	r3, r3, #1
   157d4:	e1833002 	orr	r3, r3, r2
   157d8:	e5c40006 	strb	r0, [r4, #6]
   157dc:	e5c43000 	strb	r3, [r4]
   157e0:	eaffff5d 	b	1555c <CodesED+0x3bc>
   157e4:	e1d410b6 	ldrh	r1, [r4, #6]
   157e8:	e3500000 	cmp	r0, #0
   157ec:	11a03881 	lslne	r3, r1, #17
   157f0:	159f29ac 	ldrne	r2, [pc, #2476]	; 161a4 <CodesED+0x1004>
   157f4:	11a038a3 	lsrne	r3, r3, #17
   157f8:	07d52001 	ldrbeq	r2, [r5, r1]
   157fc:	17d22003 	ldrbne	r2, [r2, r3]
   15800:	e5d40001 	ldrb	r0, [r4, #1]
   15804:	e1a03222 	lsr	r3, r2, #4
   15808:	e1833200 	orr	r3, r3, r0, lsl #4
   1580c:	e7c53001 	strb	r3, [r5, r1]
   15810:	e5d43001 	ldrb	r3, [r4, #1]
   15814:	e202200f 	and	r2, r2, #15
   15818:	e3c3300f 	bic	r3, r3, #15
   1581c:	e1833002 	orr	r3, r3, r2
   15820:	e0866003 	add	r6, r6, r3
   15824:	e5d42000 	ldrb	r2, [r4]
   15828:	eaffffd7 	b	1578c <CodesED+0x5ec>
   1582c:	e3500000 	cmp	r0, #0
   15830:	e2823002 	add	r3, r2, #2
   15834:	159fe964 	ldrne	lr, [pc, #2404]	; 161a0 <CodesED+0x1000>
   15838:	e6ff0073 	uxth	r0, r3
   1583c:	159fc960 	ldrne	ip, [pc, #2400]	; 161a4 <CodesED+0x1004>
   15840:	e2822003 	add	r2, r2, #3
   15844:	e1c400bc 	strh	r0, [r4, #12]
   15848:	e6ff2072 	uxth	r2, r2
   1584c:	1001100e 	andne	r1, r1, lr
   15850:	07d53001 	ldrbeq	r3, [r5, r1]
   15854:	17dc3001 	ldrbne	r3, [ip, r1]
   15858:	01c420bc 	strheq	r2, [r4, #12]
   1585c:	11c420bc 	strhne	r2, [r4, #12]
   15860:	1000000e 	andne	r0, r0, lr
   15864:	07d51000 	ldrbeq	r1, [r5, r0]
   15868:	17dc1000 	ldrbne	r1, [ip, r0]
   1586c:	e5d42006 	ldrb	r2, [r4, #6]
   15870:	e6ef3073 	uxtb	r3, r3
   15874:	e1833401 	orr	r3, r3, r1, lsl #8
   15878:	e7c52003 	strb	r2, [r5, r3]
   1587c:	e5d42007 	ldrb	r2, [r4, #7]
   15880:	e2833001 	add	r3, r3, #1
   15884:	e6ff3073 	uxth	r3, r3
   15888:	e7c52003 	strb	r2, [r5, r3]
   1588c:	eaffff32 	b	1555c <CodesED+0x3bc>
   15890:	e2823002 	add	r3, r2, #2
   15894:	e6ff3073 	uxth	r3, r3
   15898:	e2822003 	add	r2, r2, #3
   1589c:	e3500000 	cmp	r0, #0
   158a0:	e1c430bc 	strh	r3, [r4, #12]
   158a4:	e6ff2072 	uxth	r2, r2
   158a8:	0a0002e6 	beq	16448 <CodesED+0x12a8>
   158ac:	e59fc8ec 	ldr	ip, [pc, #2284]	; 161a0 <CodesED+0x1000>
   158b0:	e59f08ec 	ldr	r0, [pc, #2284]	; 161a4 <CodesED+0x1004>
   158b4:	e001100c 	and	r1, r1, ip
   158b8:	e7d01001 	ldrb	r1, [r0, r1]
   158bc:	e003300c 	and	r3, r3, ip
   158c0:	e1c420bc 	strh	r2, [r4, #12]
   158c4:	e7d03003 	ldrb	r3, [r0, r3]
   158c8:	e1813403 	orr	r3, r1, r3, lsl #8
   158cc:	e003200c 	and	r2, r3, ip
   158d0:	e7d02002 	ldrb	r2, [r0, r2]
   158d4:	e2833001 	add	r3, r3, #1
   158d8:	e5c42006 	strb	r2, [r4, #6]
   158dc:	e003300c 	and	r3, r3, ip
   158e0:	e7d03003 	ldrb	r3, [r0, r3]
   158e4:	e5c43007 	strb	r3, [r4, #7]
   158e8:	eaffff1b 	b	1555c <CodesED+0x3bc>
   158ec:	e5d42000 	ldrb	r2, [r4]
   158f0:	e1d430b6 	ldrh	r3, [r4, #6]
   158f4:	e2022001 	and	r2, r2, #1
   158f8:	e0822083 	add	r2, r2, r3, lsl #1
   158fc:	e6ff1072 	uxth	r1, r2
   15900:	e3510000 	cmp	r1, #0
   15904:	03a0c040 	moveq	ip, #64	; 0x40
   15908:	13a0c000 	movne	ip, #0
   1590c:	e1a00421 	lsr	r0, r1, #8
   15910:	e3c0007f 	bic	r0, r0, #127	; 0x7f
   15914:	e1800822 	orr	r0, r0, r2, lsr #16
   15918:	e0233001 	eor	r3, r3, r1
   1591c:	e1a02441 	asr	r2, r1, #8
   15920:	e1a036a3 	lsr	r3, r3, #13
   15924:	e2022010 	and	r2, r2, #16
   15928:	e2033004 	and	r3, r3, #4
   1592c:	e1822000 	orr	r2, r2, r0
   15930:	e1833002 	orr	r3, r3, r2
   15934:	e18c3003 	orr	r3, ip, r3
   15938:	e1c410b6 	strh	r1, [r4, #6]
   1593c:	e5c43000 	strb	r3, [r4]
   15940:	eaffff05 	b	1555c <CodesED+0x3bc>
   15944:	e5d43000 	ldrb	r3, [r4]
   15948:	e2133001 	ands	r3, r3, #1
   1594c:	13e03000 	mvnne	r3, #0
   15950:	e1a01fa3 	lsr	r1, r3, #31
   15954:	e6ff3073 	uxth	r3, r3
   15958:	e3530000 	cmp	r3, #0
   1595c:	03a00040 	moveq	r0, #64	; 0x40
   15960:	13a00000 	movne	r0, #0
   15964:	e1a02423 	lsr	r2, r3, #8
   15968:	e3c2207f 	bic	r2, r2, #127	; 0x7f
   1596c:	e1811002 	orr	r1, r1, r2
   15970:	e1a02443 	asr	r2, r3, #8
   15974:	e3811002 	orr	r1, r1, #2
   15978:	e2022010 	and	r2, r2, #16
   1597c:	e1822001 	orr	r2, r2, r1
   15980:	e1802002 	orr	r2, r0, r2
   15984:	e1c430b6 	strh	r3, [r4, #6]
   15988:	e5c42000 	strb	r2, [r4]
   1598c:	eafffef2 	b	1555c <CodesED+0x3bc>
   15990:	e5d41007 	ldrb	r1, [r4, #7]
   15994:	eaffff84 	b	157ac <CodesED+0x60c>
   15998:	e5d42003 	ldrb	r2, [r4, #3]
   1599c:	e1d430b6 	ldrh	r3, [r4, #6]
   159a0:	e2422001 	sub	r2, r2, #1
   159a4:	e2431001 	sub	r1, r3, #1
   159a8:	e3500000 	cmp	r0, #0
   159ac:	e5c42003 	strb	r2, [r4, #3]
   159b0:	e1c410b6 	strh	r1, [r4, #6]
   159b4:	0a000045 	beq	15ad0 <CodesED+0x930>
   159b8:	e1a03883 	lsl	r3, r3, #17
   159bc:	e59f27e0 	ldr	r2, [pc, #2016]	; 161a4 <CodesED+0x1004>
   159c0:	e1a038a3 	lsr	r3, r3, #17
   159c4:	e7d25003 	ldrb	r5, [r2, r3]
   159c8:	e1a01005 	mov	r1, r5
   159cc:	e1d400b2 	ldrh	r0, [r4, #2]
   159d0:	ebffcc9c 	bl	8c48 <OutZ80>
   159d4:	e5d42003 	ldrb	r2, [r4, #3]
   159d8:	e5d43006 	ldrb	r3, [r4, #6]
   159dc:	e3520000 	cmp	r2, #0
   159e0:	03a02042 	moveq	r2, #66	; 0x42
   159e4:	13a02002 	movne	r2, #2
   159e8:	e0833005 	add	r3, r3, r5
   159ec:	e35300ff 	cmp	r3, #255	; 0xff
   159f0:	c3822011 	orrgt	r2, r2, #17
   159f4:	eaffff68 	b	1579c <CodesED+0x5fc>
   159f8:	e1d460b6 	ldrh	r6, [r4, #6]
   159fc:	e1d400b2 	ldrh	r0, [r4, #2]
   15a00:	e2463001 	sub	r3, r6, #1
   15a04:	e1c430b6 	strh	r3, [r4, #6]
   15a08:	ebffcc46 	bl	8b28 <InZ80>
   15a0c:	e7c50006 	strb	r0, [r5, r6]
   15a10:	e5d43003 	ldrb	r3, [r4, #3]
   15a14:	e2433001 	sub	r3, r3, #1
   15a18:	e6ef3073 	uxtb	r3, r3
   15a1c:	e3530000 	cmp	r3, #0
   15a20:	03a02042 	moveq	r2, #66	; 0x42
   15a24:	13a02002 	movne	r2, #2
   15a28:	e5c43003 	strb	r3, [r4, #3]
   15a2c:	eaffff5a 	b	1579c <CodesED+0x5fc>
   15a30:	e1d430b6 	ldrh	r3, [r4, #6]
   15a34:	e3500000 	cmp	r0, #0
   15a38:	e2432001 	sub	r2, r3, #1
   15a3c:	e1c420b6 	strh	r2, [r4, #6]
   15a40:	0a00020a 	beq	16270 <CodesED+0x10d0>
   15a44:	e1a03883 	lsl	r3, r3, #17
   15a48:	e59f2754 	ldr	r2, [pc, #1876]	; 161a4 <CodesED+0x1004>
   15a4c:	e1a038a3 	lsr	r3, r3, #17
   15a50:	e7d25003 	ldrb	r5, [r2, r3]
   15a54:	e1d410b2 	ldrh	r1, [r4, #2]
   15a58:	e5d4c001 	ldrb	ip, [r4, #1]
   15a5c:	e2411001 	sub	r1, r1, #1
   15a60:	e6ff1071 	uxth	r1, r1
   15a64:	e3510000 	cmp	r1, #0
   15a68:	03a0e000 	moveq	lr, #0
   15a6c:	13a0e004 	movne	lr, #4
   15a70:	e04c3005 	sub	r3, ip, r5
   15a74:	e6ef3073 	uxtb	r3, r3
   15a78:	e5d42000 	ldrb	r2, [r4]
   15a7c:	e0866003 	add	r6, r6, r3
   15a80:	e5d60300 	ldrb	r0, [r6, #768]	; 0x300
   15a84:	e02cc005 	eor	ip, ip, r5
   15a88:	e2022001 	and	r2, r2, #1
   15a8c:	e023300c 	eor	r3, r3, ip
   15a90:	e3822002 	orr	r2, r2, #2
   15a94:	e2033010 	and	r3, r3, #16
   15a98:	e1822000 	orr	r2, r2, r0
   15a9c:	e1833002 	orr	r3, r3, r2
   15aa0:	e18e3003 	orr	r3, lr, r3
   15aa4:	e1c410b2 	strh	r1, [r4, #2]
   15aa8:	e5c43000 	strb	r3, [r4]
   15aac:	eafffeaa 	b	1555c <CodesED+0x3bc>
   15ab0:	e5d42003 	ldrb	r2, [r4, #3]
   15ab4:	e1d430b6 	ldrh	r3, [r4, #6]
   15ab8:	e2422001 	sub	r2, r2, #1
   15abc:	e2831001 	add	r1, r3, #1
   15ac0:	e3500000 	cmp	r0, #0
   15ac4:	e5c42003 	strb	r2, [r4, #3]
   15ac8:	e1c410b6 	strh	r1, [r4, #6]
   15acc:	1affffb9 	bne	159b8 <CodesED+0x818>
   15ad0:	e7d55003 	ldrb	r5, [r5, r3]
   15ad4:	eaffffbb 	b	159c8 <CodesED+0x828>
   15ad8:	e5d41003 	ldrb	r1, [r4, #3]
   15adc:	eaffff32 	b	157ac <CodesED+0x60c>
   15ae0:	e1d400b2 	ldrh	r0, [r4, #2]
   15ae4:	ebffcc0f 	bl	8b28 <InZ80>
   15ae8:	e5d43000 	ldrb	r3, [r4]
   15aec:	e0866000 	add	r6, r6, r0
   15af0:	e5d62100 	ldrb	r2, [r6, #256]	; 0x100
   15af4:	e2033001 	and	r3, r3, #1
   15af8:	e1833002 	orr	r3, r3, r2
   15afc:	e5c40003 	strb	r0, [r4, #3]
   15b00:	e5c43000 	strb	r3, [r4]
   15b04:	eafffe94 	b	1555c <CodesED+0x3bc>
   15b08:	e2823002 	add	r3, r2, #2
   15b0c:	e6ff3073 	uxth	r3, r3
   15b10:	e2822003 	add	r2, r2, #3
   15b14:	e3500000 	cmp	r0, #0
   15b18:	e1c430bc 	strh	r3, [r4, #12]
   15b1c:	e6ff2072 	uxth	r2, r2
   15b20:	0a000252 	beq	16470 <CodesED+0x12d0>
   15b24:	e59fc674 	ldr	ip, [pc, #1652]	; 161a0 <CodesED+0x1000>
   15b28:	e59f0674 	ldr	r0, [pc, #1652]	; 161a4 <CodesED+0x1004>
   15b2c:	e001100c 	and	r1, r1, ip
   15b30:	e7d01001 	ldrb	r1, [r0, r1]
   15b34:	e003300c 	and	r3, r3, ip
   15b38:	e1c420bc 	strh	r2, [r4, #12]
   15b3c:	e7d03003 	ldrb	r3, [r0, r3]
   15b40:	e1813403 	orr	r3, r1, r3, lsl #8
   15b44:	e003200c 	and	r2, r3, ip
   15b48:	e7d02002 	ldrb	r2, [r0, r2]
   15b4c:	e2833001 	add	r3, r3, #1
   15b50:	e5c4200e 	strb	r2, [r4, #14]
   15b54:	e003300c 	and	r3, r3, ip
   15b58:	e7d03003 	ldrb	r3, [r0, r3]
   15b5c:	e5c4300f 	strb	r3, [r4, #15]
   15b60:	eafffe7d 	b	1555c <CodesED+0x3bc>
   15b64:	e5d4e000 	ldrb	lr, [r4]
   15b68:	e1d420b6 	ldrh	r2, [r4, #6]
   15b6c:	e1d430be 	ldrh	r3, [r4, #14]
   15b70:	e082c003 	add	ip, r2, r3
   15b74:	e20e1001 	and	r1, lr, #1
   15b78:	e08ce001 	add	lr, ip, r1
   15b7c:	e6ff107e 	uxth	r1, lr
   15b80:	e3510000 	cmp	r1, #0
   15b84:	03a00040 	moveq	r0, #64	; 0x40
   15b88:	13a00000 	movne	r0, #0
   15b8c:	e0222003 	eor	r2, r2, r3
   15b90:	e0233001 	eor	r3, r3, r1
   15b94:	e1c33002 	bic	r3, r3, r2
   15b98:	e1a0c421 	lsr	ip, r1, #8
   15b9c:	e0222001 	eor	r2, r2, r1
   15ba0:	e1a02442 	asr	r2, r2, #8
   15ba4:	e3ccc07f 	bic	ip, ip, #127	; 0x7f
   15ba8:	e1a036c3 	asr	r3, r3, #13
   15bac:	e2022010 	and	r2, r2, #16
   15bb0:	e18cc82e 	orr	ip, ip, lr, lsr #16
   15bb4:	e182200c 	orr	r2, r2, ip
   15bb8:	e2033004 	and	r3, r3, #4
   15bbc:	e1833002 	orr	r3, r3, r2
   15bc0:	e1803003 	orr	r3, r0, r3
   15bc4:	e1c410b6 	strh	r1, [r4, #6]
   15bc8:	e5c43000 	strb	r3, [r4]
   15bcc:	e28dd00c 	add	sp, sp, #12
   15bd0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bd4:	e1d460b6 	ldrh	r6, [r4, #6]
   15bd8:	e1d400b2 	ldrh	r0, [r4, #2]
   15bdc:	e2863001 	add	r3, r6, #1
   15be0:	eaffff87 	b	15a04 <CodesED+0x864>
   15be4:	e5d41001 	ldrb	r1, [r4, #1]
   15be8:	eafffeef 	b	157ac <CodesED+0x60c>
   15bec:	e1d400b2 	ldrh	r0, [r4, #2]
   15bf0:	ebffcbcc 	bl	8b28 <InZ80>
   15bf4:	e5d43000 	ldrb	r3, [r4]
   15bf8:	e0866000 	add	r6, r6, r0
   15bfc:	e5d62100 	ldrb	r2, [r6, #256]	; 0x100
   15c00:	e2033001 	and	r3, r3, #1
   15c04:	e1833002 	orr	r3, r3, r2
   15c08:	e5c40001 	strb	r0, [r4, #1]
   15c0c:	e5c43000 	strb	r3, [r4]
   15c10:	eafffe51 	b	1555c <CodesED+0x3bc>
   15c14:	e3500000 	cmp	r0, #0
   15c18:	e2823002 	add	r3, r2, #2
   15c1c:	159fe57c 	ldrne	lr, [pc, #1404]	; 161a0 <CodesED+0x1000>
   15c20:	e6ff0073 	uxth	r0, r3
   15c24:	159fc578 	ldrne	ip, [pc, #1400]	; 161a4 <CodesED+0x1004>
   15c28:	e2822003 	add	r2, r2, #3
   15c2c:	e1c400bc 	strh	r0, [r4, #12]
   15c30:	e6ff2072 	uxth	r2, r2
   15c34:	1001100e 	andne	r1, r1, lr
   15c38:	07d53001 	ldrbeq	r3, [r5, r1]
   15c3c:	17dc3001 	ldrbne	r3, [ip, r1]
   15c40:	01c420bc 	strheq	r2, [r4, #12]
   15c44:	11c420bc 	strhne	r2, [r4, #12]
   15c48:	1000000e 	andne	r0, r0, lr
   15c4c:	07d51000 	ldrbeq	r1, [r5, r0]
   15c50:	17dc1000 	ldrbne	r1, [ip, r0]
   15c54:	e5d4200e 	ldrb	r2, [r4, #14]
   15c58:	e6ef3073 	uxtb	r3, r3
   15c5c:	e1833401 	orr	r3, r3, r1, lsl #8
   15c60:	e7c52003 	strb	r2, [r5, r3]
   15c64:	e5d4200f 	ldrb	r2, [r4, #15]
   15c68:	e2833001 	add	r3, r3, #1
   15c6c:	e6ff3073 	uxth	r3, r3
   15c70:	e7c52003 	strb	r2, [r5, r3]
   15c74:	eafffe38 	b	1555c <CodesED+0x3bc>
   15c78:	e5d4c000 	ldrb	ip, [r4]
   15c7c:	e1d430b6 	ldrh	r3, [r4, #6]
   15c80:	e1d420be 	ldrh	r2, [r4, #14]
   15c84:	e20c1001 	and	r1, ip, #1
   15c88:	e043c002 	sub	ip, r3, r2
   15c8c:	e04cc001 	sub	ip, ip, r1
   15c90:	e6ff107c 	uxth	r1, ip
   15c94:	e0222003 	eor	r2, r2, r3
   15c98:	e1a0e78c 	lsl	lr, ip, #15
   15c9c:	e0233001 	eor	r3, r3, r1
   15ca0:	e1a0c421 	lsr	ip, r1, #8
   15ca4:	e0033002 	and	r3, r3, r2
   15ca8:	e3ccc07f 	bic	ip, ip, #127	; 0x7f
   15cac:	e0222001 	eor	r2, r2, r1
   15cb0:	e3510000 	cmp	r1, #0
   15cb4:	e1a02442 	asr	r2, r2, #8
   15cb8:	e18ccfae 	orr	ip, ip, lr, lsr #31
   15cbc:	03a00040 	moveq	r0, #64	; 0x40
   15cc0:	13a00000 	movne	r0, #0
   15cc4:	e1a036a3 	lsr	r3, r3, #13
   15cc8:	e2022010 	and	r2, r2, #16
   15ccc:	e38cc002 	orr	ip, ip, #2
   15cd0:	eaffffb7 	b	15bb4 <CodesED+0xa14>
   15cd4:	e2823002 	add	r3, r2, #2
   15cd8:	e6ff3073 	uxth	r3, r3
   15cdc:	e2822003 	add	r2, r2, #3
   15ce0:	e3500000 	cmp	r0, #0
   15ce4:	e1c430bc 	strh	r3, [r4, #12]
   15ce8:	e6ff2072 	uxth	r2, r2
   15cec:	0a0001cb 	beq	16420 <CodesED+0x1280>
   15cf0:	e59fc4a8 	ldr	ip, [pc, #1192]	; 161a0 <CodesED+0x1000>
   15cf4:	e59f04a8 	ldr	r0, [pc, #1192]	; 161a4 <CodesED+0x1004>
   15cf8:	e001100c 	and	r1, r1, ip
   15cfc:	e7d01001 	ldrb	r1, [r0, r1]
   15d00:	e003300c 	and	r3, r3, ip
   15d04:	e1c420bc 	strh	r2, [r4, #12]
   15d08:	e7d03003 	ldrb	r3, [r0, r3]
   15d0c:	e1813403 	orr	r3, r1, r3, lsl #8
   15d10:	e003200c 	and	r2, r3, ip
   15d14:	e7d02002 	ldrb	r2, [r0, r2]
   15d18:	e2833001 	add	r3, r3, #1
   15d1c:	e5c42002 	strb	r2, [r4, #2]
   15d20:	e003300c 	and	r3, r3, ip
   15d24:	e7d03003 	ldrb	r3, [r0, r3]
   15d28:	e5c43003 	strb	r3, [r4, #3]
   15d2c:	eafffe0a 	b	1555c <CodesED+0x3bc>
   15d30:	e5d4e000 	ldrb	lr, [r4]
   15d34:	e1d420b6 	ldrh	r2, [r4, #6]
   15d38:	e1d430b2 	ldrh	r3, [r4, #2]
   15d3c:	eaffff8b 	b	15b70 <CodesED+0x9d0>
   15d40:	e1d4e0b2 	ldrh	lr, [r4, #2]
   15d44:	e5d4b001 	ldrb	fp, [r4, #1]
   15d48:	e24ee001 	sub	lr, lr, #1
   15d4c:	e6ffe07e 	uxth	lr, lr
   15d50:	e1d480b6 	ldrh	r8, [r4, #6]
   15d54:	ea000006 	b	15d74 <CodesED+0xbd4>
   15d58:	e35c0000 	cmp	ip, #0
   15d5c:	0a0001cd 	beq	16498 <CodesED+0x12f8>
   15d60:	e3570000 	cmp	r7, #0
   15d64:	e1a08001 	mov	r8, r1
   15d68:	e6ffe07a 	uxth	lr, sl
   15d6c:	da0001d1 	ble	164b8 <CodesED+0x1318>
   15d70:	e1a03007 	mov	r3, r7
   15d74:	e3500000 	cmp	r0, #0
   15d78:	e2881001 	add	r1, r8, #1
   15d7c:	159f7420 	ldrne	r7, [pc, #1056]	; 161a4 <CodesED+0x1004>
   15d80:	e6ff1071 	uxth	r1, r1
   15d84:	e1a0c888 	lsl	ip, r8, #17
   15d88:	e1a0c8ac 	lsr	ip, ip, #17
   15d8c:	e1c410b6 	strh	r1, [r4, #6]
   15d90:	17d7900c 	ldrbne	r9, [r7, ip]
   15d94:	07d59008 	ldrbeq	r9, [r5, r8]
   15d98:	e2437015 	sub	r7, r3, #21
   15d9c:	e04bc009 	sub	ip, fp, r9
   15da0:	e35e0000 	cmp	lr, #0
   15da4:	e24ea001 	sub	sl, lr, #1
   15da8:	e1c4e0b2 	strh	lr, [r4, #2]
   15dac:	e6efc07c 	uxtb	ip, ip
   15db0:	e5847020 	str	r7, [r4, #32]
   15db4:	1affffe7 	bne	15d58 <CodesED+0xbb8>
   15db8:	e5d42000 	ldrb	r2, [r4]
   15dbc:	e086600c 	add	r6, r6, ip
   15dc0:	e5d60300 	ldrb	r0, [r6, #768]	; 0x300
   15dc4:	e02c1009 	eor	r1, ip, r9
   15dc8:	e2022001 	and	r2, r2, #1
   15dcc:	e021100b 	eor	r1, r1, fp
   15dd0:	e3822002 	orr	r2, r2, #2
   15dd4:	e2011010 	and	r1, r1, #16
   15dd8:	e1822000 	orr	r2, r2, r0
   15ddc:	e1822001 	orr	r2, r2, r1
   15de0:	e5c42000 	strb	r2, [r4]
   15de4:	ea000055 	b	15f40 <CodesED+0xda0>
   15de8:	e59f63a8 	ldr	r6, [pc, #936]	; 16198 <CodesED+0xff8>
   15dec:	e1d420b4 	ldrh	r2, [r4, #4]
   15df0:	e5960000 	ldr	r0, [r6]
   15df4:	e1d430b6 	ldrh	r3, [r4, #6]
   15df8:	e1510000 	cmp	r1, r0
   15dfc:	0a000008 	beq	15e24 <CodesED+0xc84>
   15e00:	e1d400b2 	ldrh	r0, [r4, #2]
   15e04:	e2411002 	sub	r1, r1, #2
   15e08:	e58d0000 	str	r0, [sp]
   15e0c:	e59f0388 	ldr	r0, [pc, #904]	; 1619c <CodesED+0xffc>
   15e10:	ebffcb7a 	bl	8c00 <printf>
   15e14:	e1d410bc 	ldrh	r1, [r4, #12]
   15e18:	e1d420b4 	ldrh	r2, [r4, #4]
   15e1c:	e1d430b6 	ldrh	r3, [r4, #6]
   15e20:	e5861000 	str	r1, [r6]
   15e24:	e597e000 	ldr	lr, [r7]
   15e28:	e59fc370 	ldr	ip, [pc, #880]	; 161a0 <CodesED+0x1000>
   15e2c:	e59f7370 	ldr	r7, [pc, #880]	; 161a4 <CodesED+0x1004>
   15e30:	ea000003 	b	15e44 <CodesED+0xca4>
   15e34:	e3520000 	cmp	r2, #0
   15e38:	dafffdf1 	ble	15604 <CodesED+0x464>
   15e3c:	e1d420b4 	ldrh	r2, [r4, #4]
   15e40:	e1d430b6 	ldrh	r3, [r4, #6]
   15e44:	e2831001 	add	r1, r3, #1
   15e48:	e2820001 	add	r0, r2, #1
   15e4c:	e1c410b6 	strh	r1, [r4, #6]
   15e50:	e003800c 	and	r8, r3, ip
   15e54:	e35e0000 	cmp	lr, #0
   15e58:	e1c400b4 	strh	r0, [r4, #4]
   15e5c:	17d73008 	ldrbne	r3, [r7, r8]
   15e60:	07d53003 	ldrbeq	r3, [r5, r3]
   15e64:	e7c53002 	strb	r3, [r5, r2]
   15e68:	e1d430b2 	ldrh	r3, [r4, #2]
   15e6c:	e5941020 	ldr	r1, [r4, #32]
   15e70:	e2433001 	sub	r3, r3, #1
   15e74:	e6ff3073 	uxth	r3, r3
   15e78:	e2412015 	sub	r2, r1, #21
   15e7c:	e3530000 	cmp	r3, #0
   15e80:	e1c430b2 	strh	r3, [r4, #2]
   15e84:	e5842020 	str	r2, [r4, #32]
   15e88:	1affffe9 	bne	15e34 <CodesED+0xc94>
   15e8c:	e5d42000 	ldrb	r2, [r4]
   15e90:	e2411010 	sub	r1, r1, #16
   15e94:	e3c22016 	bic	r2, r2, #22
   15e98:	e5841020 	str	r1, [r4, #32]
   15e9c:	e5863000 	str	r3, [r6]
   15ea0:	eafffe3d 	b	1579c <CodesED+0x5fc>
   15ea4:	e1d4b0b2 	ldrh	fp, [r4, #2]
   15ea8:	e5d48001 	ldrb	r8, [r4, #1]
   15eac:	e24bb001 	sub	fp, fp, #1
   15eb0:	e6ffb07b 	uxth	fp, fp
   15eb4:	e1d410b6 	ldrh	r1, [r4, #6]
   15eb8:	e59fa2e4 	ldr	sl, [pc, #740]	; 161a4 <CodesED+0x1004>
   15ebc:	e59f92dc 	ldr	r9, [pc, #732]	; 161a0 <CodesED+0x1000>
   15ec0:	ea000004 	b	15ed8 <CodesED+0xd38>
   15ec4:	e3510000 	cmp	r1, #0
   15ec8:	e6ffb077 	uxth	fp, r7
   15ecc:	e1a01002 	mov	r1, r2
   15ed0:	0a00013b 	beq	163c4 <CodesED+0x1224>
   15ed4:	e1a0300c 	mov	r3, ip
   15ed8:	e2412001 	sub	r2, r1, #1
   15edc:	e6ff2072 	uxth	r2, r2
   15ee0:	e3500000 	cmp	r0, #0
   15ee4:	e001c009 	and	ip, r1, r9
   15ee8:	e1c420b6 	strh	r2, [r4, #6]
   15eec:	17dae00c 	ldrbne	lr, [sl, ip]
   15ef0:	07d5e001 	ldrbeq	lr, [r5, r1]
   15ef4:	e243c015 	sub	ip, r3, #21
   15ef8:	e048100e 	sub	r1, r8, lr
   15efc:	e35b0000 	cmp	fp, #0
   15f00:	e24b7001 	sub	r7, fp, #1
   15f04:	e1c4b0b2 	strh	fp, [r4, #2]
   15f08:	e6ef1071 	uxtb	r1, r1
   15f0c:	e584c020 	str	ip, [r4, #32]
   15f10:	1affffeb 	bne	15ec4 <CodesED+0xd24>
   15f14:	e5d40000 	ldrb	r0, [r4]
   15f18:	e0866001 	add	r6, r6, r1
   15f1c:	e021200e 	eor	r2, r1, lr
   15f20:	e5d6c300 	ldrb	ip, [r6, #768]	; 0x300
   15f24:	e2001001 	and	r1, r0, #1
   15f28:	e0222008 	eor	r2, r2, r8
   15f2c:	e3811002 	orr	r1, r1, #2
   15f30:	e2022010 	and	r2, r2, #16
   15f34:	e181100c 	orr	r1, r1, ip
   15f38:	e1812002 	orr	r2, r1, r2
   15f3c:	e5c42000 	strb	r2, [r4]
   15f40:	e2433010 	sub	r3, r3, #16
   15f44:	e5843020 	str	r3, [r4, #32]
   15f48:	eafffd83 	b	1555c <CodesED+0x3bc>
   15f4c:	e5d43003 	ldrb	r3, [r4, #3]
   15f50:	e59f824c 	ldr	r8, [pc, #588]	; 161a4 <CodesED+0x1004>
   15f54:	e59f6244 	ldr	r6, [pc, #580]	; 161a0 <CodesED+0x1000>
   15f58:	ea000001 	b	15f64 <CodesED+0xdc4>
   15f5c:	e3520000 	cmp	r2, #0
   15f60:	da000107 	ble	16384 <CodesED+0x11e4>
   15f64:	e1d420b6 	ldrh	r2, [r4, #6]
   15f68:	e5971000 	ldr	r1, [r7]
   15f6c:	e2433001 	sub	r3, r3, #1
   15f70:	e3510000 	cmp	r1, #0
   15f74:	e2421001 	sub	r1, r2, #1
   15f78:	e5c43003 	strb	r3, [r4, #3]
   15f7c:	e0020006 	and	r0, r2, r6
   15f80:	e1c410b6 	strh	r1, [r4, #6]
   15f84:	17d89000 	ldrbne	r9, [r8, r0]
   15f88:	07d59002 	ldrbeq	r9, [r5, r2]
   15f8c:	e1d400b2 	ldrh	r0, [r4, #2]
   15f90:	e1a01009 	mov	r1, r9
   15f94:	ebffcb2b 	bl	8c48 <OutZ80>
   15f98:	e5941020 	ldr	r1, [r4, #32]
   15f9c:	e5d43003 	ldrb	r3, [r4, #3]
   15fa0:	e2412015 	sub	r2, r1, #21
   15fa4:	e3530000 	cmp	r3, #0
   15fa8:	e5842020 	str	r2, [r4, #32]
   15fac:	1affffea 	bne	15f5c <CodesED+0xdbc>
   15fb0:	eafffdd3 	b	15704 <CodesED+0x564>
   15fb4:	e3500000 	cmp	r0, #0
   15fb8:	e2823002 	add	r3, r2, #2
   15fbc:	159fe1dc 	ldrne	lr, [pc, #476]	; 161a0 <CodesED+0x1000>
   15fc0:	e6ff0073 	uxth	r0, r3
   15fc4:	159fc1d8 	ldrne	ip, [pc, #472]	; 161a4 <CodesED+0x1004>
   15fc8:	e2822003 	add	r2, r2, #3
   15fcc:	e1c400bc 	strh	r0, [r4, #12]
   15fd0:	e6ff2072 	uxth	r2, r2
   15fd4:	1001100e 	andne	r1, r1, lr
   15fd8:	07d53001 	ldrbeq	r3, [r5, r1]
   15fdc:	17dc3001 	ldrbne	r3, [ip, r1]
   15fe0:	01c420bc 	strheq	r2, [r4, #12]
   15fe4:	11c420bc 	strhne	r2, [r4, #12]
   15fe8:	1000000e 	andne	r0, r0, lr
   15fec:	07d51000 	ldrbeq	r1, [r5, r0]
   15ff0:	17dc1000 	ldrbne	r1, [ip, r0]
   15ff4:	e5d42002 	ldrb	r2, [r4, #2]
   15ff8:	e6ef3073 	uxtb	r3, r3
   15ffc:	e1833401 	orr	r3, r3, r1, lsl #8
   16000:	e7c52003 	strb	r2, [r5, r3]
   16004:	e5d42003 	ldrb	r2, [r4, #3]
   16008:	e2833001 	add	r3, r3, #1
   1600c:	e6ff3073 	uxth	r3, r3
   16010:	e7c52003 	strb	r2, [r5, r3]
   16014:	eafffd50 	b	1555c <CodesED+0x3bc>
   16018:	e5d4c000 	ldrb	ip, [r4]
   1601c:	e1d430b6 	ldrh	r3, [r4, #6]
   16020:	e1d420b2 	ldrh	r2, [r4, #2]
   16024:	eaffff16 	b	15c84 <CodesED+0xae4>
   16028:	e1d400b2 	ldrh	r0, [r4, #2]
   1602c:	ebffcabd 	bl	8b28 <InZ80>
   16030:	e5d43000 	ldrb	r3, [r4]
   16034:	e0866000 	add	r6, r6, r0
   16038:	e5d62100 	ldrb	r2, [r6, #256]	; 0x100
   1603c:	e2033001 	and	r3, r3, #1
   16040:	e1833002 	orr	r3, r3, r2
   16044:	e5c40007 	strb	r0, [r4, #7]
   16048:	e5c43000 	strb	r3, [r4]
   1604c:	eafffd42 	b	1555c <CodesED+0x3bc>
   16050:	e5d4101a 	ldrb	r1, [r4, #26]
   16054:	e5d42018 	ldrb	r2, [r4, #24]
   16058:	e2811001 	add	r1, r1, #1
   1605c:	e6ef1071 	uxtb	r1, r1
   16060:	e0413003 	sub	r3, r1, r3
   16064:	e6ef3073 	uxtb	r3, r3
   16068:	e5d40000 	ldrb	r0, [r4]
   1606c:	e0866003 	add	r6, r6, r3
   16070:	e1a020c2 	asr	r2, r2, #1
   16074:	e5d6c300 	ldrb	ip, [r6, #768]	; 0x300
   16078:	e2022004 	and	r2, r2, #4
   1607c:	e2000001 	and	r0, r0, #1
   16080:	e1822000 	orr	r2, r2, r0
   16084:	e182200c 	orr	r2, r2, ip
   16088:	e5c43001 	strb	r3, [r4, #1]
   1608c:	e5c4101a 	strb	r1, [r4, #26]
   16090:	e5c42000 	strb	r2, [r4]
   16094:	eafffd30 	b	1555c <CodesED+0x3bc>
   16098:	e5d43018 	ldrb	r3, [r4, #24]
   1609c:	e3c33006 	bic	r3, r3, #6
   160a0:	e3833004 	orr	r3, r3, #4
   160a4:	e5c43018 	strb	r3, [r4, #24]
   160a8:	eafffd2b 	b	1555c <CodesED+0x3bc>
   160ac:	e2823002 	add	r3, r2, #2
   160b0:	e6ff3073 	uxth	r3, r3
   160b4:	e2822003 	add	r2, r2, #3
   160b8:	e3500000 	cmp	r0, #0
   160bc:	e1c430bc 	strh	r3, [r4, #12]
   160c0:	e6ff2072 	uxth	r2, r2
   160c4:	0a0000c6 	beq	163e4 <CodesED+0x1244>
   160c8:	e59fc0d0 	ldr	ip, [pc, #208]	; 161a0 <CodesED+0x1000>
   160cc:	e59f00d0 	ldr	r0, [pc, #208]	; 161a4 <CodesED+0x1004>
   160d0:	e001100c 	and	r1, r1, ip
   160d4:	e7d01001 	ldrb	r1, [r0, r1]
   160d8:	e003300c 	and	r3, r3, ip
   160dc:	e1c420bc 	strh	r2, [r4, #12]
   160e0:	e7d03003 	ldrb	r3, [r0, r3]
   160e4:	e1813403 	orr	r3, r1, r3, lsl #8
   160e8:	e003200c 	and	r2, r3, ip
   160ec:	e7d02002 	ldrb	r2, [r0, r2]
   160f0:	e2833001 	add	r3, r3, #1
   160f4:	e5c42004 	strb	r2, [r4, #4]
   160f8:	e003300c 	and	r3, r3, ip
   160fc:	e7d03003 	ldrb	r3, [r0, r3]
   16100:	e5c43005 	strb	r3, [r4, #5]
   16104:	eafffd14 	b	1555c <CodesED+0x3bc>
   16108:	e5d4e000 	ldrb	lr, [r4]
   1610c:	e1d420b6 	ldrh	r2, [r4, #6]
   16110:	e1d430b4 	ldrh	r3, [r4, #4]
   16114:	eafffe95 	b	15b70 <CodesED+0x9d0>
   16118:	e5d41004 	ldrb	r1, [r4, #4]
   1611c:	eafffda2 	b	157ac <CodesED+0x60c>
   16120:	e1d400b2 	ldrh	r0, [r4, #2]
   16124:	ebffca7f 	bl	8b28 <InZ80>
   16128:	e5d43000 	ldrb	r3, [r4]
   1612c:	e0866000 	add	r6, r6, r0
   16130:	e5d62100 	ldrb	r2, [r6, #256]	; 0x100
   16134:	e2033001 	and	r3, r3, #1
   16138:	e1833002 	orr	r3, r3, r2
   1613c:	e5c40004 	strb	r0, [r4, #4]
   16140:	e5c43000 	strb	r3, [r4]
   16144:	eafffd04 	b	1555c <CodesED+0x3bc>
   16148:	e5d41019 	ldrb	r1, [r4, #25]
   1614c:	e5d43000 	ldrb	r3, [r4]
   16150:	e0866001 	add	r6, r6, r1
   16154:	e5d42018 	ldrb	r2, [r4, #24]
   16158:	e5d60300 	ldrb	r0, [r6, #768]	; 0x300
   1615c:	e2033001 	and	r3, r3, #1
   16160:	e1a020c2 	asr	r2, r2, #1
   16164:	e1833000 	orr	r3, r3, r0
   16168:	e2022004 	and	r2, r2, #4
   1616c:	e1833002 	orr	r3, r3, r2
   16170:	e5c41001 	strb	r1, [r4, #1]
   16174:	e5c43000 	strb	r3, [r4]
   16178:	eafffcf7 	b	1555c <CodesED+0x3bc>
   1617c:	e5d43018 	ldrb	r3, [r4, #24]
   16180:	e3c33006 	bic	r3, r3, #6
   16184:	e3833002 	orr	r3, r3, #2
   16188:	e5c43018 	strb	r3, [r4, #24]
   1618c:	eafffcf2 	b	1555c <CodesED+0x3bc>
   16190:	0005cf80 	.word	0x0005cf80
   16194:	0003c260 	.word	0x0003c260
   16198:	00177070 	.word	0x00177070
   1619c:	0003d960 	.word	0x0003d960
   161a0:	00007fff 	.word	0x00007fff
   161a4:	00050428 	.word	0x00050428
   161a8:	e3500000 	cmp	r0, #0
   161ac:	e2823002 	add	r3, r2, #2
   161b0:	151fe018 	ldrne	lr, [pc, #-24]	; 161a0 <CodesED+0x1000>
   161b4:	e6ff0073 	uxth	r0, r3
   161b8:	151fc01c 	ldrne	ip, [pc, #-28]	; 161a4 <CodesED+0x1004>
   161bc:	e2822003 	add	r2, r2, #3
   161c0:	e1c400bc 	strh	r0, [r4, #12]
   161c4:	e6ff2072 	uxth	r2, r2
   161c8:	1001100e 	andne	r1, r1, lr
   161cc:	07d53001 	ldrbeq	r3, [r5, r1]
   161d0:	17dc3001 	ldrbne	r3, [ip, r1]
   161d4:	01c420bc 	strheq	r2, [r4, #12]
   161d8:	11c420bc 	strhne	r2, [r4, #12]
   161dc:	1000000e 	andne	r0, r0, lr
   161e0:	07d51000 	ldrbeq	r1, [r5, r0]
   161e4:	17dc1000 	ldrbne	r1, [ip, r0]
   161e8:	e5d42004 	ldrb	r2, [r4, #4]
   161ec:	e6ef3073 	uxtb	r3, r3
   161f0:	e1833401 	orr	r3, r3, r1, lsl #8
   161f4:	e7c52003 	strb	r2, [r5, r3]
   161f8:	e5d42005 	ldrb	r2, [r4, #5]
   161fc:	e2833001 	add	r3, r3, #1
   16200:	e6ff3073 	uxth	r3, r3
   16204:	e7c52003 	strb	r2, [r5, r3]
   16208:	eafffcd3 	b	1555c <CodesED+0x3bc>
   1620c:	e5d4c000 	ldrb	ip, [r4]
   16210:	e1d430b6 	ldrh	r3, [r4, #6]
   16214:	e1d420b4 	ldrh	r2, [r4, #4]
   16218:	eafffe99 	b	15c84 <CodesED+0xae4>
   1621c:	e5d41005 	ldrb	r1, [r4, #5]
   16220:	eafffd61 	b	157ac <CodesED+0x60c>
   16224:	e1d400b2 	ldrh	r0, [r4, #2]
   16228:	ebffca3e 	bl	8b28 <InZ80>
   1622c:	e5d43000 	ldrb	r3, [r4]
   16230:	e0866000 	add	r6, r6, r0
   16234:	e5d62100 	ldrb	r2, [r6, #256]	; 0x100
   16238:	e2033001 	and	r3, r3, #1
   1623c:	e1833002 	orr	r3, r3, r2
   16240:	e5c40005 	strb	r0, [r4, #5]
   16244:	e5c43000 	strb	r3, [r4]
   16248:	eafffcc3 	b	1555c <CodesED+0x3bc>
   1624c:	e1a00004 	mov	r0, r4
   16250:	e28dd00c 	add	sp, sp, #12
   16254:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16258:	eaffc8d9 	b	85c4 <PatchZ80>
   1625c:	e1d430b6 	ldrh	r3, [r4, #6]
   16260:	e3500000 	cmp	r0, #0
   16264:	e2832001 	add	r2, r3, #1
   16268:	e1c420b6 	strh	r2, [r4, #6]
   1626c:	1afffdf4 	bne	15a44 <CodesED+0x8a4>
   16270:	e7d55003 	ldrb	r5, [r5, r3]
   16274:	eafffdf6 	b	15a54 <CodesED+0x8b4>
   16278:	e1d420b4 	ldrh	r2, [r4, #4]
   1627c:	e1d430b6 	ldrh	r3, [r4, #6]
   16280:	e3500000 	cmp	r0, #0
   16284:	e2831001 	add	r1, r3, #1
   16288:	e2820001 	add	r0, r2, #1
   1628c:	e1c400b4 	strh	r0, [r4, #4]
   16290:	e1c410b6 	strh	r1, [r4, #6]
   16294:	1afffca2 	bne	15524 <CodesED+0x384>
   16298:	e7d53003 	ldrb	r3, [r5, r3]
   1629c:	eafffca4 	b	15534 <CodesED+0x394>
   162a0:	e5d41002 	ldrb	r1, [r4, #2]
   162a4:	eafffd40 	b	157ac <CodesED+0x60c>
   162a8:	e1d400b2 	ldrh	r0, [r4, #2]
   162ac:	ebffca1d 	bl	8b28 <InZ80>
   162b0:	e5d43000 	ldrb	r3, [r4]
   162b4:	e0866000 	add	r6, r6, r0
   162b8:	e5d62100 	ldrb	r2, [r6, #256]	; 0x100
   162bc:	e2033001 	and	r3, r3, #1
   162c0:	e1833002 	orr	r3, r3, r2
   162c4:	e5c40002 	strb	r0, [r4, #2]
   162c8:	e5c43000 	strb	r3, [r4]
   162cc:	eafffca2 	b	1555c <CodesED+0x3bc>
   162d0:	e5d43001 	ldrb	r3, [r4, #1]
   162d4:	e5c43019 	strb	r3, [r4, #25]
   162d8:	eafffc9f 	b	1555c <CodesED+0x3bc>
   162dc:	e5d43018 	ldrb	r3, [r4, #24]
   162e0:	e3c33006 	bic	r3, r3, #6
   162e4:	e5c43018 	strb	r3, [r4, #24]
   162e8:	eafffc9b 	b	1555c <CodesED+0x3bc>
   162ec:	e5d43018 	ldrb	r3, [r4, #24]
   162f0:	e1d420be 	ldrh	r2, [r4, #14]
   162f4:	e3130008 	tst	r3, #8
   162f8:	13833001 	orrne	r3, r3, #1
   162fc:	03c33001 	biceq	r3, r3, #1
   16300:	e5c43018 	strb	r3, [r4, #24]
   16304:	e2823001 	add	r3, r2, #1
   16308:	e6ff3073 	uxth	r3, r3
   1630c:	e2821002 	add	r1, r2, #2
   16310:	e3500000 	cmp	r0, #0
   16314:	e1c430be 	strh	r3, [r4, #14]
   16318:	e6ff1071 	uxth	r1, r1
   1631c:	0a00003a 	beq	1640c <CodesED+0x126c>
   16320:	e51fc188 	ldr	ip, [pc, #-392]	; 161a0 <CodesED+0x1000>
   16324:	e51f0188 	ldr	r0, [pc, #-392]	; 161a4 <CodesED+0x1004>
   16328:	e002200c 	and	r2, r2, ip
   1632c:	e7d02002 	ldrb	r2, [r0, r2]
   16330:	e003300c 	and	r3, r3, ip
   16334:	e5c4200c 	strb	r2, [r4, #12]
   16338:	e1c410be 	strh	r1, [r4, #14]
   1633c:	e7d03003 	ldrb	r3, [r0, r3]
   16340:	e5c4300d 	strb	r3, [r4, #13]
   16344:	eafffc84 	b	1555c <CodesED+0x3bc>
   16348:	e5d42001 	ldrb	r2, [r4, #1]
   1634c:	e2623000 	rsb	r3, r2, #0
   16350:	e6ff3073 	uxth	r3, r3
   16354:	e6ef1073 	uxtb	r1, r3
   16358:	e0866001 	add	r6, r6, r1
   1635c:	e1a03423 	lsr	r3, r3, #8
   16360:	e5d6c300 	ldrb	ip, [r6, #768]	; 0x300
   16364:	e2633000 	rsb	r3, r3, #0
   16368:	e0220001 	eor	r0, r2, r1
   1636c:	e3833002 	orr	r3, r3, #2
   16370:	e0022001 	and	r2, r2, r1
   16374:	e183300c 	orr	r3, r3, ip
   16378:	e2000010 	and	r0, r0, #16
   1637c:	e1a022a2 	lsr	r2, r2, #5
   16380:	eaffff77 	b	16164 <CodesED+0xfc4>
   16384:	e5d42006 	ldrb	r2, [r4, #6]
   16388:	e1d430bc 	ldrh	r3, [r4, #12]
   1638c:	e0829009 	add	r9, r2, r9
   16390:	e3590c01 	cmp	r9, #256	; 0x100
   16394:	b3a02002 	movlt	r2, #2
   16398:	a3a02013 	movge	r2, #19
   1639c:	e2433002 	sub	r3, r3, #2
   163a0:	e5c42000 	strb	r2, [r4]
   163a4:	e1c430bc 	strh	r3, [r4, #12]
   163a8:	eafffc6b 	b	1555c <CodesED+0x3bc>
   163ac:	e3a02002 	mov	r2, #2
   163b0:	e1d430bc 	ldrh	r3, [r4, #12]
   163b4:	e5c42000 	strb	r2, [r4]
   163b8:	e2433002 	sub	r3, r3, #2
   163bc:	e1c430bc 	strh	r3, [r4, #12]
   163c0:	eafffc65 	b	1555c <CodesED+0x3bc>
   163c4:	e5d41000 	ldrb	r1, [r4]
   163c8:	e028200e 	eor	r2, r8, lr
   163cc:	e2011001 	and	r1, r1, #1
   163d0:	e2022010 	and	r2, r2, #16
   163d4:	e3811046 	orr	r1, r1, #70	; 0x46
   163d8:	e1812002 	orr	r2, r1, r2
   163dc:	e5c42000 	strb	r2, [r4]
   163e0:	eafffed6 	b	15f40 <CodesED+0xda0>
   163e4:	e7d51001 	ldrb	r1, [r5, r1]
   163e8:	e1c420bc 	strh	r2, [r4, #12]
   163ec:	e7d53003 	ldrb	r3, [r5, r3]
   163f0:	e1813403 	orr	r3, r1, r3, lsl #8
   163f4:	e7d52003 	ldrb	r2, [r5, r3]
   163f8:	e2833001 	add	r3, r3, #1
   163fc:	e5c42004 	strb	r2, [r4, #4]
   16400:	e6ff3073 	uxth	r3, r3
   16404:	e7d53003 	ldrb	r3, [r5, r3]
   16408:	eaffff3c 	b	16100 <CodesED+0xf60>
   1640c:	e7d52002 	ldrb	r2, [r5, r2]
   16410:	e1c410be 	strh	r1, [r4, #14]
   16414:	e5c4200c 	strb	r2, [r4, #12]
   16418:	e7d53003 	ldrb	r3, [r5, r3]
   1641c:	eaffffc7 	b	16340 <CodesED+0x11a0>
   16420:	e7d51001 	ldrb	r1, [r5, r1]
   16424:	e1c420bc 	strh	r2, [r4, #12]
   16428:	e7d53003 	ldrb	r3, [r5, r3]
   1642c:	e1813403 	orr	r3, r1, r3, lsl #8
   16430:	e7d52003 	ldrb	r2, [r5, r3]
   16434:	e2833001 	add	r3, r3, #1
   16438:	e5c42002 	strb	r2, [r4, #2]
   1643c:	e6ff3073 	uxth	r3, r3
   16440:	e7d53003 	ldrb	r3, [r5, r3]
   16444:	eafffe37 	b	15d28 <CodesED+0xb88>
   16448:	e7d51001 	ldrb	r1, [r5, r1]
   1644c:	e1c420bc 	strh	r2, [r4, #12]
   16450:	e7d53003 	ldrb	r3, [r5, r3]
   16454:	e1813403 	orr	r3, r1, r3, lsl #8
   16458:	e7d52003 	ldrb	r2, [r5, r3]
   1645c:	e2833001 	add	r3, r3, #1
   16460:	e5c42006 	strb	r2, [r4, #6]
   16464:	e6ff3073 	uxth	r3, r3
   16468:	e7d53003 	ldrb	r3, [r5, r3]
   1646c:	eafffd1c 	b	158e4 <CodesED+0x744>
   16470:	e7d51001 	ldrb	r1, [r5, r1]
   16474:	e1c420bc 	strh	r2, [r4, #12]
   16478:	e7d53003 	ldrb	r3, [r5, r3]
   1647c:	e1813403 	orr	r3, r1, r3, lsl #8
   16480:	e7d52003 	ldrb	r2, [r5, r3]
   16484:	e2833001 	add	r3, r3, #1
   16488:	e5c4200e 	strb	r2, [r4, #14]
   1648c:	e6ff3073 	uxth	r3, r3
   16490:	e7d53003 	ldrb	r3, [r5, r3]
   16494:	eafffdb0 	b	15b5c <CodesED+0x9bc>
   16498:	e5d42000 	ldrb	r2, [r4]
   1649c:	e02b1009 	eor	r1, fp, r9
   164a0:	e2022001 	and	r2, r2, #1
   164a4:	e2011010 	and	r1, r1, #16
   164a8:	e3822046 	orr	r2, r2, #70	; 0x46
   164ac:	e1822001 	orr	r2, r2, r1
   164b0:	e5c42000 	strb	r2, [r4]
   164b4:	eafffea1 	b	15f40 <CodesED+0xda0>
   164b8:	e5d41000 	ldrb	r1, [r4]
   164bc:	e086600c 	add	r6, r6, ip
   164c0:	e5d60300 	ldrb	r0, [r6, #768]	; 0x300
   164c4:	e02cc009 	eor	ip, ip, r9
   164c8:	e2011001 	and	r1, r1, #1
   164cc:	e02cc00b 	eor	ip, ip, fp
   164d0:	e3811006 	orr	r1, r1, #6
   164d4:	e20c3010 	and	r3, ip, #16
   164d8:	e1811000 	orr	r1, r1, r0
   164dc:	e2422001 	sub	r2, r2, #1
   164e0:	e1813003 	orr	r3, r1, r3
   164e4:	e1c420bc 	strh	r2, [r4, #12]
   164e8:	eafffc1a 	b	15558 <CodesED+0x3b8>

000164ec <WrZ80>:
   164ec:	e59f3004 	ldr	r3, [pc, #4]	; 164f8 <WrZ80+0xc>
   164f0:	e7c31000 	strb	r1, [r3, r0]
   164f4:	e12fff1e 	bx	lr
   164f8:	0005cf80 	.word	0x0005cf80

000164fc <RdZ80>:
   164fc:	e59f301c 	ldr	r3, [pc, #28]	; 16520 <RdZ80+0x24>
   16500:	e2832a12 	add	r2, r3, #73728	; 0x12000
   16504:	e5922000 	ldr	r2, [r2]
   16508:	e3520000 	cmp	r2, #0
   1650c:	11a00880 	lslne	r0, r0, #17
   16510:	159f300c 	ldrne	r3, [pc, #12]	; 16524 <RdZ80+0x28>
   16514:	11a008a0 	lsrne	r0, r0, #17
   16518:	e7d30000 	ldrb	r0, [r3, r0]
   1651c:	e12fff1e 	bx	lr
   16520:	0005cf80 	.word	0x0005cf80
   16524:	00050428 	.word	0x00050428

00016528 <ResetZ80>:
   16528:	e3a03000 	mov	r3, #0
   1652c:	e3a0c20f 	mov	ip, #-268435456	; 0xf0000000
   16530:	e3e02000 	mvn	r2, #0
   16534:	e590101c 	ldr	r1, [r0, #28]
   16538:	e580c00c 	str	ip, [r0, #12]
   1653c:	e5801020 	str	r1, [r0, #32]
   16540:	e1c022b8 	strh	r2, [r0, #40]	; 0x28
   16544:	e5803000 	str	r3, [r0]
   16548:	e5803004 	str	r3, [r0, #4]
   1654c:	e5803008 	str	r3, [r0, #8]
   16550:	e5803010 	str	r3, [r0, #16]
   16554:	e5803014 	str	r3, [r0, #20]
   16558:	e1c031b8 	strh	r3, [r0, #24]
   1655c:	e5c0301a 	strb	r3, [r0, #26]
   16560:	e5803024 	str	r3, [r0, #36]	; 0x24
   16564:	e12fff1e 	bx	lr

00016568 <ExecZ80>:
   16568:	e92d4070 	push	{r4, r5, r6, lr}
   1656c:	e1a04000 	mov	r4, r0
   16570:	e59f6fbc 	ldr	r6, [pc, #4028]	; 17534 <ExecZ80+0xfcc>
   16574:	e1d050bc 	ldrh	r5, [r0, #12]
   16578:	e2863a12 	add	r3, r6, #73728	; 0x12000
   1657c:	e593e000 	ldr	lr, [r3]
   16580:	e2853001 	add	r3, r5, #1
   16584:	e35e0000 	cmp	lr, #0
   16588:	11a02885 	lslne	r2, r5, #17
   1658c:	159f1fac 	ldrne	r1, [pc, #4012]	; 17540 <ExecZ80+0xfd8>
   16590:	e6ff3073 	uxth	r3, r3
   16594:	e1c030bc 	strh	r3, [r0, #12]
   16598:	11a028a2 	lsrne	r2, r2, #17
   1659c:	17d11002 	ldrbne	r1, [r1, r2]
   165a0:	07d61005 	ldrbeq	r1, [r6, r5]
   165a4:	e59fcf8c 	ldr	ip, [pc, #3980]	; 17538 <ExecZ80+0xfd0>
   165a8:	e5900020 	ldr	r0, [r0, #32]
   165ac:	e08c2001 	add	r2, ip, r1
   165b0:	e5d22600 	ldrb	r2, [r2, #1536]	; 0x600
   165b4:	e0402002 	sub	r2, r0, r2
   165b8:	e5842020 	str	r2, [r4, #32]
   165bc:	e35100ff 	cmp	r1, #255	; 0xff
   165c0:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
   165c4:	ea000e91 	b	1a010 <ExecZ80+0x3aa8>
   165c8:	00016a24 	.word	0x00016a24
   165cc:	00019a88 	.word	0x00019a88
   165d0:	00019a74 	.word	0x00019a74
   165d4:	00019a64 	.word	0x00019a64
   165d8:	00019a1c 	.word	0x00019a1c
   165dc:	00019c2c 	.word	0x00019c2c
   165e0:	00019ad0 	.word	0x00019ad0
   165e4:	00019c08 	.word	0x00019c08
   165e8:	000199b0 	.word	0x000199b0
   165ec:	00019bcc 	.word	0x00019bcc
   165f0:	00019ba8 	.word	0x00019ba8
   165f4:	00019a0c 	.word	0x00019a0c
   165f8:	000199c4 	.word	0x000199c4
   165fc:	00019b30 	.word	0x00019b30
   16600:	00019b00 	.word	0x00019b00
   16604:	00019b7c 	.word	0x00019b7c
   16608:	00019960 	.word	0x00019960
   1660c:	00019918 	.word	0x00019918
   16610:	000198f4 	.word	0x000198f4
   16614:	00019908 	.word	0x00019908
   16618:	000198ac 	.word	0x000198ac
   1661c:	00019860 	.word	0x00019860
   16620:	00019830 	.word	0x00019830
   16624:	0001980c 	.word	0x0001980c
   16628:	000197dc 	.word	0x000197dc
   1662c:	000197a0 	.word	0x000197a0
   16630:	0001976c 	.word	0x0001976c
   16634:	00019790 	.word	0x00019790
   16638:	00019724 	.word	0x00019724
   1663c:	000196d8 	.word	0x000196d8
   16640:	000196a8 	.word	0x000196a8
   16644:	00019680 	.word	0x00019680
   16648:	0001963c 	.word	0x0001963c
   1664c:	0001956c 	.word	0x0001956c
   16650:	000194f0 	.word	0x000194f0
   16654:	000195b4 	.word	0x000195b4
   16658:	00019338 	.word	0x00019338
   1665c:	000193e0 	.word	0x000193e0
   16660:	000193b0 	.word	0x000193b0
   16664:	0001942c 	.word	0x0001942c
   16668:	000192ac 	.word	0x000192ac
   1666c:	000194c0 	.word	0x000194c0
   16670:	00019460 	.word	0x00019460
   16674:	0001962c 	.word	0x0001962c
   16678:	000192f0 	.word	0x000192f0
   1667c:	000195e0 	.word	0x000195e0
   16680:	00019380 	.word	0x00019380
   16684:	000195c4 	.word	0x000195c4
   16688:	00019268 	.word	0x00019268
   1668c:	00019220 	.word	0x00019220
   16690:	000191b8 	.word	0x000191b8
   16694:	00019210 	.word	0x00019210
   16698:	00019154 	.word	0x00019154
   1669c:	000190ec 	.word	0x000190ec
   166a0:	000190bc 	.word	0x000190bc
   166a4:	000190a8 	.word	0x000190a8
   166a8:	00019064 	.word	0x00019064
   166ac:	00019028 	.word	0x00019028
   166b0:	00018fc8 	.word	0x00018fc8
   166b4:	00019018 	.word	0x00019018
   166b8:	00018f80 	.word	0x00018f80
   166bc:	00018f34 	.word	0x00018f34
   166c0:	00018f04 	.word	0x00018f04
   166c4:	00018ee4 	.word	0x00018ee4
   166c8:	00016a24 	.word	0x00016a24
   166cc:	00019e8c 	.word	0x00019e8c
   166d0:	00019e80 	.word	0x00019e80
   166d4:	00019e74 	.word	0x00019e74
   166d8:	00019e68 	.word	0x00019e68
   166dc:	00019e5c 	.word	0x00019e5c
   166e0:	00019e38 	.word	0x00019e38
   166e4:	00019e2c 	.word	0x00019e2c
   166e8:	00019e20 	.word	0x00019e20
   166ec:	00016a24 	.word	0x00016a24
   166f0:	00019d98 	.word	0x00019d98
   166f4:	00019d8c 	.word	0x00019d8c
   166f8:	00019d80 	.word	0x00019d80
   166fc:	00019d74 	.word	0x00019d74
   16700:	00019d50 	.word	0x00019d50
   16704:	00019d44 	.word	0x00019d44
   16708:	00019d38 	.word	0x00019d38
   1670c:	00019f08 	.word	0x00019f08
   16710:	00016a24 	.word	0x00016a24
   16714:	00019eec 	.word	0x00019eec
   16718:	00019ee0 	.word	0x00019ee0
   1671c:	00019ed4 	.word	0x00019ed4
   16720:	00019eb0 	.word	0x00019eb0
   16724:	00019ea4 	.word	0x00019ea4
   16728:	00019e98 	.word	0x00019e98
   1672c:	00019fc8 	.word	0x00019fc8
   16730:	00019fbc 	.word	0x00019fbc
   16734:	00016a24 	.word	0x00016a24
   16738:	00019f14 	.word	0x00019f14
   1673c:	00019ff8 	.word	0x00019ff8
   16740:	00019fd4 	.word	0x00019fd4
   16744:	0001a004 	.word	0x0001a004
   16748:	00019c78 	.word	0x00019c78
   1674c:	00019d08 	.word	0x00019d08
   16750:	00019cfc 	.word	0x00019cfc
   16754:	00019cf0 	.word	0x00019cf0
   16758:	00016a24 	.word	0x00016a24
   1675c:	00019cc0 	.word	0x00019cc0
   16760:	00019c9c 	.word	0x00019c9c
   16764:	00019c90 	.word	0x00019c90
   16768:	00019c84 	.word	0x00019c84
   1676c:	00019d20 	.word	0x00019d20
   16770:	00019d14 	.word	0x00019d14
   16774:	00019d2c 	.word	0x00019d2c
   16778:	00018e98 	.word	0x00018e98
   1677c:	00016a24 	.word	0x00016a24
   16780:	00018e58 	.word	0x00018e58
   16784:	00018e4c 	.word	0x00018e4c
   16788:	00018e38 	.word	0x00018e38
   1678c:	00018e24 	.word	0x00018e24
   16790:	00018e10 	.word	0x00018e10
   16794:	00018dfc 	.word	0x00018dfc
   16798:	00018de8 	.word	0x00018de8
   1679c:	00018dd4 	.word	0x00018dd4
   167a0:	00018dac 	.word	0x00018dac
   167a4:	00018d98 	.word	0x00018d98
   167a8:	00018d8c 	.word	0x00018d8c
   167ac:	00018d80 	.word	0x00018d80
   167b0:	00018d74 	.word	0x00018d74
   167b4:	00018d68 	.word	0x00018d68
   167b8:	00018d5c 	.word	0x00018d5c
   167bc:	00018d50 	.word	0x00018d50
   167c0:	00018d2c 	.word	0x00018d2c
   167c4:	00016a24 	.word	0x00016a24
   167c8:	00018cd4 	.word	0x00018cd4
   167cc:	00018c88 	.word	0x00018c88
   167d0:	00018c3c 	.word	0x00018c3c
   167d4:	00018bf0 	.word	0x00018bf0
   167d8:	00018ba4 	.word	0x00018ba4
   167dc:	00018b58 	.word	0x00018b58
   167e0:	00018af4 	.word	0x00018af4
   167e4:	00018ab8 	.word	0x00018ab8
   167e8:	00018a60 	.word	0x00018a60
   167ec:	00018a08 	.word	0x00018a08
   167f0:	000189b0 	.word	0x000189b0
   167f4:	00018958 	.word	0x00018958
   167f8:	00018900 	.word	0x00018900
   167fc:	000188a8 	.word	0x000188a8
   16800:	00018838 	.word	0x00018838
   16804:	000187f4 	.word	0x000187f4
   16808:	00018798 	.word	0x00018798
   1680c:	0001873c 	.word	0x0001873c
   16810:	000186e0 	.word	0x000186e0
   16814:	00018684 	.word	0x00018684
   16818:	00018628 	.word	0x00018628
   1681c:	000185cc 	.word	0x000185cc
   16820:	00018558 	.word	0x00018558
   16824:	0001854c 	.word	0x0001854c
   16828:	000184e4 	.word	0x000184e4
   1682c:	0001847c 	.word	0x0001847c
   16830:	00018414 	.word	0x00018414
   16834:	000183ac 	.word	0x000183ac
   16838:	00018344 	.word	0x00018344
   1683c:	000182dc 	.word	0x000182dc
   16840:	0001825c 	.word	0x0001825c
   16844:	0001821c 	.word	0x0001821c
   16848:	000181f8 	.word	0x000181f8
   1684c:	000181d4 	.word	0x000181d4
   16850:	000181b0 	.word	0x000181b0
   16854:	0001818c 	.word	0x0001818c
   16858:	00018168 	.word	0x00018168
   1685c:	00018144 	.word	0x00018144
   16860:	00018108 	.word	0x00018108
   16864:	000180f0 	.word	0x000180f0
   16868:	000180d0 	.word	0x000180d0
   1686c:	000180b0 	.word	0x000180b0
   16870:	00018090 	.word	0x00018090
   16874:	00018070 	.word	0x00018070
   16878:	00018050 	.word	0x00018050
   1687c:	00018030 	.word	0x00018030
   16880:	00017ff8 	.word	0x00017ff8
   16884:	00017fec 	.word	0x00017fec
   16888:	00017fcc 	.word	0x00017fcc
   1688c:	00017fac 	.word	0x00017fac
   16890:	00017f8c 	.word	0x00017f8c
   16894:	00017f6c 	.word	0x00017f6c
   16898:	00017f4c 	.word	0x00017f4c
   1689c:	00017f2c 	.word	0x00017f2c
   168a0:	00017ef4 	.word	0x00017ef4
   168a4:	00017ee0 	.word	0x00017ee0
   168a8:	00017e88 	.word	0x00017e88
   168ac:	00017e30 	.word	0x00017e30
   168b0:	00017dd8 	.word	0x00017dd8
   168b4:	00017d80 	.word	0x00017d80
   168b8:	00017d28 	.word	0x00017d28
   168bc:	00017cd0 	.word	0x00017cd0
   168c0:	00017c60 	.word	0x00017c60
   168c4:	00017c54 	.word	0x00017c54
   168c8:	000169c8 	.word	0x000169c8
   168cc:	00017bcc 	.word	0x00017bcc
   168d0:	00017b80 	.word	0x00017b80
   168d4:	00017c14 	.word	0x00017c14
   168d8:	000175a4 	.word	0x000175a4
   168dc:	00017b08 	.word	0x00017b08
   168e0:	00017a98 	.word	0x00017a98
   168e4:	00017b40 	.word	0x00017b40
   168e8:	000174d4 	.word	0x000174d4
   168ec:	00017488 	.word	0x00017488
   168f0:	0001743c 	.word	0x0001743c
   168f4:	0001742c 	.word	0x0001742c
   168f8:	00017390 	.word	0x00017390
   168fc:	00017310 	.word	0x00017310
   16900:	00017294 	.word	0x00017294
   16904:	00017254 	.word	0x00017254
   16908:	000171f4 	.word	0x000171f4
   1690c:	00017958 	.word	0x00017958
   16910:	0001790c 	.word	0x0001790c
   16914:	000178d0 	.word	0x000178d0
   16918:	00017834 	.word	0x00017834
   1691c:	00017a60 	.word	0x00017a60
   16920:	000179a0 	.word	0x000179a0
   16924:	00017a20 	.word	0x00017a20
   16928:	00017544 	.word	0x00017544
   1692c:	00017764 	.word	0x00017764
   16930:	00017718 	.word	0x00017718
   16934:	000176dc 	.word	0x000176dc
   16938:	00017640 	.word	0x00017640
   1693c:	00017824 	.word	0x00017824
   16940:	00017798 	.word	0x00017798
   16944:	000171b4 	.word	0x000171b4
   16948:	00017154 	.word	0x00017154
   1694c:	00016fb0 	.word	0x00016fb0
   16950:	00016f64 	.word	0x00016f64
   16954:	00016f04 	.word	0x00016f04
   16958:	00016e68 	.word	0x00016e68
   1695c:	00016e30 	.word	0x00016e30
   16960:	00016de8 	.word	0x00016de8
   16964:	00016da8 	.word	0x00016da8
   16968:	00016d48 	.word	0x00016d48
   1696c:	00017134 	.word	0x00017134
   16970:	000170e8 	.word	0x000170e8
   16974:	00017140 	.word	0x00017140
   16978:	00016ff8 	.word	0x00016ff8
   1697c:	000170d8 	.word	0x000170d8
   16980:	00017094 	.word	0x00017094
   16984:	00016d08 	.word	0x00016d08
   16988:	00016ca8 	.word	0x00016ca8
   1698c:	00016be4 	.word	0x00016be4
   16990:	00016b8c 	.word	0x00016b8c
   16994:	00016b68 	.word	0x00016b68
   16998:	00016acc 	.word	0x00016acc
   1699c:	00016c70 	.word	0x00016c70
   169a0:	00016c2c 	.word	0x00016c2c
   169a4:	00016a8c 	.word	0x00016a8c
   169a8:	00016a2c 	.word	0x00016a2c
   169ac:	00018d20 	.word	0x00018d20
   169b0:	00018e7c 	.word	0x00018e7c
   169b4:	00019ccc 	.word	0x00019ccc
   169b8:	00019f20 	.word	0x00019f20
   169bc:	00019ef8 	.word	0x00019ef8
   169c0:	00019da4 	.word	0x00019da4
   169c4:	00018ea4 	.word	0x00018ea4
   169c8:	e5d41000 	ldrb	r1, [r4]
   169cc:	e3110040 	tst	r1, #64	; 0x40
   169d0:	1a000013 	bne	16a24 <ExecZ80+0x4bc>
   169d4:	e1d410be 	ldrh	r1, [r4, #14]
   169d8:	e2420006 	sub	r0, r2, #6
   169dc:	e2813001 	add	r3, r1, #1
   169e0:	e6ff3073 	uxth	r3, r3
   169e4:	e2812002 	add	r2, r1, #2
   169e8:	e35e0000 	cmp	lr, #0
   169ec:	e5840020 	str	r0, [r4, #32]
   169f0:	e1c430be 	strh	r3, [r4, #14]
   169f4:	e6ff2072 	uxth	r2, r2
   169f8:	0a000e47 	beq	1a31c <ExecZ80+0x3db4>
   169fc:	e59fcb38 	ldr	ip, [pc, #2872]	; 1753c <ExecZ80+0xfd4>
   16a00:	e59f0b38 	ldr	r0, [pc, #2872]	; 17540 <ExecZ80+0xfd8>
   16a04:	e001100c 	and	r1, r1, ip
   16a08:	e7d01001 	ldrb	r1, [r0, r1]
   16a0c:	e003300c 	and	r3, r3, ip
   16a10:	e5c4100c 	strb	r1, [r4, #12]
   16a14:	e1c420be 	strh	r2, [r4, #14]
   16a18:	e7d03003 	ldrb	r3, [r0, r3]
   16a1c:	e5c4300d 	strb	r3, [r4, #13]
   16a20:	e1d430bc 	ldrh	r3, [r4, #12]
   16a24:	e1a00003 	mov	r0, r3
   16a28:	e8bd8070 	pop	{r4, r5, r6, pc}
   16a2c:	e1d410d0 	ldrsb	r1, [r4]
   16a30:	e3510000 	cmp	r1, #0
   16a34:	aafffffa 	bge	16a24 <ExecZ80+0x4bc>
   16a38:	e1d410be 	ldrh	r1, [r4, #14]
   16a3c:	e2420006 	sub	r0, r2, #6
   16a40:	e2813001 	add	r3, r1, #1
   16a44:	e6ff3073 	uxth	r3, r3
   16a48:	e2812002 	add	r2, r1, #2
   16a4c:	e35e0000 	cmp	lr, #0
   16a50:	e5840020 	str	r0, [r4, #32]
   16a54:	e1c430be 	strh	r3, [r4, #14]
   16a58:	e6ff2072 	uxth	r2, r2
   16a5c:	0a000e4c 	beq	1a394 <ExecZ80+0x3e2c>
   16a60:	e59fcad4 	ldr	ip, [pc, #2772]	; 1753c <ExecZ80+0xfd4>
   16a64:	e59f0ad4 	ldr	r0, [pc, #2772]	; 17540 <ExecZ80+0xfd8>
   16a68:	e001100c 	and	r1, r1, ip
   16a6c:	e7d01001 	ldrb	r1, [r0, r1]
   16a70:	e003300c 	and	r3, r3, ip
   16a74:	e5c4100c 	strb	r1, [r4, #12]
   16a78:	e1c420be 	strh	r2, [r4, #14]
   16a7c:	e7d03003 	ldrb	r3, [r0, r3]
   16a80:	e5c4300d 	strb	r3, [r4, #13]
   16a84:	e1d430bc 	ldrh	r3, [r4, #12]
   16a88:	eaffffe5 	b	16a24 <ExecZ80+0x4bc>
   16a8c:	e3a01030 	mov	r1, #48	; 0x30
   16a90:	e1d420be 	ldrh	r2, [r4, #14]
   16a94:	e1a03423 	lsr	r3, r3, #8
   16a98:	e2422001 	sub	r2, r2, #1
   16a9c:	e6ff2072 	uxth	r2, r2
   16aa0:	e1c420be 	strh	r2, [r4, #14]
   16aa4:	e7c63002 	strb	r3, [r6, r2]
   16aa8:	e1d430be 	ldrh	r3, [r4, #14]
   16aac:	e5d4200c 	ldrb	r2, [r4, #12]
   16ab0:	e2433001 	sub	r3, r3, #1
   16ab4:	e6ff3073 	uxth	r3, r3
   16ab8:	e1c430be 	strh	r3, [r4, #14]
   16abc:	e7c62003 	strb	r2, [r6, r3]
   16ac0:	e1a03001 	mov	r3, r1
   16ac4:	e1c410bc 	strh	r1, [r4, #12]
   16ac8:	eaffffd5 	b	16a24 <ExecZ80+0x4bc>
   16acc:	e1d400d0 	ldrsb	r0, [r4]
   16ad0:	e2851003 	add	r1, r5, #3
   16ad4:	e3500000 	cmp	r0, #0
   16ad8:	e6ff1071 	uxth	r1, r1
   16adc:	b1c410bc 	strhlt	r1, [r4, #12]
   16ae0:	b1a03001 	movlt	r3, r1
   16ae4:	baffffce 	blt	16a24 <ExecZ80+0x4bc>
   16ae8:	e35e0000 	cmp	lr, #0
   16aec:	159fea48 	ldrne	lr, [pc, #2632]	; 1753c <ExecZ80+0xfd4>
   16af0:	e2850002 	add	r0, r5, #2
   16af4:	e6ff0070 	uxth	r0, r0
   16af8:	e2422007 	sub	r2, r2, #7
   16afc:	159fca3c 	ldrne	ip, [pc, #2620]	; 17540 <ExecZ80+0xfd8>
   16b00:	e1c400bc 	strh	r0, [r4, #12]
   16b04:	e5842020 	str	r2, [r4, #32]
   16b08:	1003300e 	andne	r3, r3, lr
   16b0c:	07d62003 	ldrbeq	r2, [r6, r3]
   16b10:	17dc2003 	ldrbne	r2, [ip, r3]
   16b14:	01c410bc 	strheq	r1, [r4, #12]
   16b18:	11c410bc 	strhne	r1, [r4, #12]
   16b1c:	1000000e 	andne	r0, r0, lr
   16b20:	07d6c000 	ldrbeq	ip, [r6, r0]
   16b24:	17dcc000 	ldrbne	ip, [ip, r0]
   16b28:	e1d400be 	ldrh	r0, [r4, #14]
   16b2c:	e1a01421 	lsr	r1, r1, #8
   16b30:	e2400001 	sub	r0, r0, #1
   16b34:	e6ff0070 	uxth	r0, r0
   16b38:	e1c400be 	strh	r0, [r4, #14]
   16b3c:	e7c61000 	strb	r1, [r6, r0]
   16b40:	e1d410be 	ldrh	r1, [r4, #14]
   16b44:	e6ef3072 	uxtb	r3, r2
   16b48:	e2412001 	sub	r2, r1, #1
   16b4c:	e5d4100c 	ldrb	r1, [r4, #12]
   16b50:	e6ff2072 	uxth	r2, r2
   16b54:	e183340c 	orr	r3, r3, ip, lsl #8
   16b58:	e1c420be 	strh	r2, [r4, #14]
   16b5c:	e7c61002 	strb	r1, [r6, r2]
   16b60:	e1c430bc 	strh	r3, [r4, #12]
   16b64:	eaffffae 	b	16a24 <ExecZ80+0x4bc>
   16b68:	e5d41018 	ldrb	r1, [r4, #24]
   16b6c:	e3110020 	tst	r1, #32
   16b70:	15940024 	ldrne	r0, [r4, #36]	; 0x24
   16b74:	e3c11029 	bic	r1, r1, #41	; 0x29
   16b78:	12400001 	subne	r0, r0, #1
   16b7c:	10802002 	addne	r2, r0, r2
   16b80:	15842020 	strne	r2, [r4, #32]
   16b84:	e5c41018 	strb	r1, [r4, #24]
   16b88:	eaffffa5 	b	16a24 <ExecZ80+0x4bc>
   16b8c:	e1d420d0 	ldrsb	r2, [r4]
   16b90:	e3520000 	cmp	r2, #0
   16b94:	b2853003 	addlt	r3, r5, #3
   16b98:	b6ff3073 	uxthlt	r3, r3
   16b9c:	b1c430bc 	strhlt	r3, [r4, #12]
   16ba0:	baffff9f 	blt	16a24 <ExecZ80+0x4bc>
   16ba4:	e35e0000 	cmp	lr, #0
   16ba8:	159fc98c 	ldrne	ip, [pc, #2444]	; 1753c <ExecZ80+0xfd4>
   16bac:	e2851002 	add	r1, r5, #2
   16bb0:	e6ff1071 	uxth	r1, r1
   16bb4:	159f0984 	ldrne	r0, [pc, #2436]	; 17540 <ExecZ80+0xfd8>
   16bb8:	e1c410bc 	strh	r1, [r4, #12]
   16bbc:	1003300c 	andne	r3, r3, ip
   16bc0:	17d02003 	ldrbne	r2, [r0, r3]
   16bc4:	07d62003 	ldrbeq	r2, [r6, r3]
   16bc8:	1001100c 	andne	r1, r1, ip
   16bcc:	17d03001 	ldrbne	r3, [r0, r1]
   16bd0:	07d63001 	ldrbeq	r3, [r6, r1]
   16bd4:	e6ef2072 	uxtb	r2, r2
   16bd8:	e1823403 	orr	r3, r2, r3, lsl #8
   16bdc:	e1c430bc 	strh	r3, [r4, #12]
   16be0:	eaffff8f 	b	16a24 <ExecZ80+0x4bc>
   16be4:	e1d410be 	ldrh	r1, [r4, #14]
   16be8:	e35e0000 	cmp	lr, #0
   16bec:	e2812001 	add	r2, r1, #1
   16bf0:	e6ff2072 	uxth	r2, r2
   16bf4:	e2810002 	add	r0, r1, #2
   16bf8:	e1c420be 	strh	r2, [r4, #14]
   16bfc:	e6ff0070 	uxth	r0, r0
   16c00:	0a000d31 	beq	1a0cc <ExecZ80+0x3b64>
   16c04:	e59fe930 	ldr	lr, [pc, #2352]	; 1753c <ExecZ80+0xfd4>
   16c08:	e59fc930 	ldr	ip, [pc, #2352]	; 17540 <ExecZ80+0xfd8>
   16c0c:	e001100e 	and	r1, r1, lr
   16c10:	e7dc1001 	ldrb	r1, [ip, r1]
   16c14:	e002200e 	and	r2, r2, lr
   16c18:	e5c41000 	strb	r1, [r4]
   16c1c:	e1c400be 	strh	r0, [r4, #14]
   16c20:	e7dc2002 	ldrb	r2, [ip, r2]
   16c24:	e5c42001 	strb	r2, [r4, #1]
   16c28:	eaffff7d 	b	16a24 <ExecZ80+0x4bc>
   16c2c:	e35e0000 	cmp	lr, #0
   16c30:	e2851002 	add	r1, r5, #2
   16c34:	e6ff1071 	uxth	r1, r1
   16c38:	11a03883 	lslne	r3, r3, #17
   16c3c:	159f28fc 	ldrne	r2, [pc, #2300]	; 17540 <ExecZ80+0xfd8>
   16c40:	e1c410bc 	strh	r1, [r4, #12]
   16c44:	11a038a3 	lsrne	r3, r3, #17
   16c48:	17d22003 	ldrbne	r2, [r2, r3]
   16c4c:	07d62003 	ldrbeq	r2, [r6, r3]
   16c50:	e5d40001 	ldrb	r0, [r4, #1]
   16c54:	e1a03001 	mov	r3, r1
   16c58:	e1822000 	orr	r2, r2, r0
   16c5c:	e08cc002 	add	ip, ip, r2
   16c60:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   16c64:	e5c42001 	strb	r2, [r4, #1]
   16c68:	e5c41000 	strb	r1, [r4]
   16c6c:	eaffff6c 	b	16a24 <ExecZ80+0x4bc>
   16c70:	e1d430be 	ldrh	r3, [r4, #14]
   16c74:	e5d42001 	ldrb	r2, [r4, #1]
   16c78:	e2433001 	sub	r3, r3, #1
   16c7c:	e6ff3073 	uxth	r3, r3
   16c80:	e1c430be 	strh	r3, [r4, #14]
   16c84:	e7c62003 	strb	r2, [r6, r3]
   16c88:	e1d430be 	ldrh	r3, [r4, #14]
   16c8c:	e5d42000 	ldrb	r2, [r4]
   16c90:	e2433001 	sub	r3, r3, #1
   16c94:	e6ff3073 	uxth	r3, r3
   16c98:	e1c430be 	strh	r3, [r4, #14]
   16c9c:	e7c62003 	strb	r2, [r6, r3]
   16ca0:	e1d430bc 	ldrh	r3, [r4, #12]
   16ca4:	eaffff5e 	b	16a24 <ExecZ80+0x4bc>
   16ca8:	e1d410d0 	ldrsb	r1, [r4]
   16cac:	e3510000 	cmp	r1, #0
   16cb0:	baffff5b 	blt	16a24 <ExecZ80+0x4bc>
   16cb4:	e1d410be 	ldrh	r1, [r4, #14]
   16cb8:	e2420006 	sub	r0, r2, #6
   16cbc:	e2813001 	add	r3, r1, #1
   16cc0:	e6ff3073 	uxth	r3, r3
   16cc4:	e2812002 	add	r2, r1, #2
   16cc8:	e35e0000 	cmp	lr, #0
   16ccc:	e5840020 	str	r0, [r4, #32]
   16cd0:	e1c430be 	strh	r3, [r4, #14]
   16cd4:	e6ff2072 	uxth	r2, r2
   16cd8:	0a000d5a 	beq	1a248 <ExecZ80+0x3ce0>
   16cdc:	e59fc858 	ldr	ip, [pc, #2136]	; 1753c <ExecZ80+0xfd4>
   16ce0:	e59f0858 	ldr	r0, [pc, #2136]	; 17540 <ExecZ80+0xfd8>
   16ce4:	e001100c 	and	r1, r1, ip
   16ce8:	e7d01001 	ldrb	r1, [r0, r1]
   16cec:	e003300c 	and	r3, r3, ip
   16cf0:	e5c4100c 	strb	r1, [r4, #12]
   16cf4:	e1c420be 	strh	r2, [r4, #14]
   16cf8:	e7d03003 	ldrb	r3, [r0, r3]
   16cfc:	e5c4300d 	strb	r3, [r4, #13]
   16d00:	e1d430bc 	ldrh	r3, [r4, #12]
   16d04:	eaffff46 	b	16a24 <ExecZ80+0x4bc>
   16d08:	e3a01028 	mov	r1, #40	; 0x28
   16d0c:	e1d420be 	ldrh	r2, [r4, #14]
   16d10:	e1a03423 	lsr	r3, r3, #8
   16d14:	e2422001 	sub	r2, r2, #1
   16d18:	e6ff2072 	uxth	r2, r2
   16d1c:	e1c420be 	strh	r2, [r4, #14]
   16d20:	e7c63002 	strb	r3, [r6, r2]
   16d24:	e1d430be 	ldrh	r3, [r4, #14]
   16d28:	e5d4200c 	ldrb	r2, [r4, #12]
   16d2c:	e2433001 	sub	r3, r3, #1
   16d30:	e6ff3073 	uxth	r3, r3
   16d34:	e1c430be 	strh	r3, [r4, #14]
   16d38:	e7c62003 	strb	r2, [r6, r3]
   16d3c:	e1a03001 	mov	r3, r1
   16d40:	e1c410bc 	strh	r1, [r4, #12]
   16d44:	eaffff36 	b	16a24 <ExecZ80+0x4bc>
   16d48:	e5d41000 	ldrb	r1, [r4]
   16d4c:	e3110004 	tst	r1, #4
   16d50:	0affff33 	beq	16a24 <ExecZ80+0x4bc>
   16d54:	e1d410be 	ldrh	r1, [r4, #14]
   16d58:	e2420006 	sub	r0, r2, #6
   16d5c:	e2813001 	add	r3, r1, #1
   16d60:	e6ff3073 	uxth	r3, r3
   16d64:	e2812002 	add	r2, r1, #2
   16d68:	e35e0000 	cmp	lr, #0
   16d6c:	e5840020 	str	r0, [r4, #32]
   16d70:	e1c430be 	strh	r3, [r4, #14]
   16d74:	e6ff2072 	uxth	r2, r2
   16d78:	0a000d76 	beq	1a358 <ExecZ80+0x3df0>
   16d7c:	e59fc7b8 	ldr	ip, [pc, #1976]	; 1753c <ExecZ80+0xfd4>
   16d80:	e59f07b8 	ldr	r0, [pc, #1976]	; 17540 <ExecZ80+0xfd8>
   16d84:	e001100c 	and	r1, r1, ip
   16d88:	e7d01001 	ldrb	r1, [r0, r1]
   16d8c:	e003300c 	and	r3, r3, ip
   16d90:	e5c4100c 	strb	r1, [r4, #12]
   16d94:	e1c420be 	strh	r2, [r4, #14]
   16d98:	e7d03003 	ldrb	r3, [r0, r3]
   16d9c:	e5c4300d 	strb	r3, [r4, #13]
   16da0:	e1d430bc 	ldrh	r3, [r4, #12]
   16da4:	eaffff1e 	b	16a24 <ExecZ80+0x4bc>
   16da8:	e3a01020 	mov	r1, #32
   16dac:	e1d420be 	ldrh	r2, [r4, #14]
   16db0:	e1a03423 	lsr	r3, r3, #8
   16db4:	e2422001 	sub	r2, r2, #1
   16db8:	e6ff2072 	uxth	r2, r2
   16dbc:	e1c420be 	strh	r2, [r4, #14]
   16dc0:	e7c63002 	strb	r3, [r6, r2]
   16dc4:	e1d430be 	ldrh	r3, [r4, #14]
   16dc8:	e5d4200c 	ldrb	r2, [r4, #12]
   16dcc:	e2433001 	sub	r3, r3, #1
   16dd0:	e6ff3073 	uxth	r3, r3
   16dd4:	e1c430be 	strh	r3, [r4, #14]
   16dd8:	e7c62003 	strb	r2, [r6, r3]
   16ddc:	e1a03001 	mov	r3, r1
   16de0:	e1c410bc 	strh	r1, [r4, #12]
   16de4:	eaffff0e 	b	16a24 <ExecZ80+0x4bc>
   16de8:	e35e0000 	cmp	lr, #0
   16dec:	e2851002 	add	r1, r5, #2
   16df0:	e6ff1071 	uxth	r1, r1
   16df4:	11a03883 	lslne	r3, r3, #17
   16df8:	159f2740 	ldrne	r2, [pc, #1856]	; 17540 <ExecZ80+0xfd8>
   16dfc:	e1c410bc 	strh	r1, [r4, #12]
   16e00:	11a038a3 	lsrne	r3, r3, #17
   16e04:	17d22003 	ldrbne	r2, [r2, r3]
   16e08:	07d62003 	ldrbeq	r2, [r6, r3]
   16e0c:	e5d40001 	ldrb	r0, [r4, #1]
   16e10:	e1a03001 	mov	r3, r1
   16e14:	e0022000 	and	r2, r2, r0
   16e18:	e08cc002 	add	ip, ip, r2
   16e1c:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   16e20:	e5c42001 	strb	r2, [r4, #1]
   16e24:	e3812010 	orr	r2, r1, #16
   16e28:	e5c42000 	strb	r2, [r4]
   16e2c:	eafffefc 	b	16a24 <ExecZ80+0x4bc>
   16e30:	e1d430be 	ldrh	r3, [r4, #14]
   16e34:	e5d42007 	ldrb	r2, [r4, #7]
   16e38:	e2433001 	sub	r3, r3, #1
   16e3c:	e6ff3073 	uxth	r3, r3
   16e40:	e1c430be 	strh	r3, [r4, #14]
   16e44:	e7c62003 	strb	r2, [r6, r3]
   16e48:	e1d430be 	ldrh	r3, [r4, #14]
   16e4c:	e5d42006 	ldrb	r2, [r4, #6]
   16e50:	e2433001 	sub	r3, r3, #1
   16e54:	e6ff3073 	uxth	r3, r3
   16e58:	e1c430be 	strh	r3, [r4, #14]
   16e5c:	e7c62003 	strb	r2, [r6, r3]
   16e60:	e1d430bc 	ldrh	r3, [r4, #12]
   16e64:	eafffeee 	b	16a24 <ExecZ80+0x4bc>
   16e68:	e5d40000 	ldrb	r0, [r4]
   16e6c:	e2851003 	add	r1, r5, #3
   16e70:	e3100004 	tst	r0, #4
   16e74:	e6ff1071 	uxth	r1, r1
   16e78:	11c410bc 	strhne	r1, [r4, #12]
   16e7c:	11a03001 	movne	r3, r1
   16e80:	1afffee7 	bne	16a24 <ExecZ80+0x4bc>
   16e84:	e35e0000 	cmp	lr, #0
   16e88:	159fe6ac 	ldrne	lr, [pc, #1708]	; 1753c <ExecZ80+0xfd4>
   16e8c:	e2850002 	add	r0, r5, #2
   16e90:	e6ff0070 	uxth	r0, r0
   16e94:	e2422007 	sub	r2, r2, #7
   16e98:	159fc6a0 	ldrne	ip, [pc, #1696]	; 17540 <ExecZ80+0xfd8>
   16e9c:	e1c400bc 	strh	r0, [r4, #12]
   16ea0:	e5842020 	str	r2, [r4, #32]
   16ea4:	1003300e 	andne	r3, r3, lr
   16ea8:	07d62003 	ldrbeq	r2, [r6, r3]
   16eac:	17dc2003 	ldrbne	r2, [ip, r3]
   16eb0:	01c410bc 	strheq	r1, [r4, #12]
   16eb4:	11c410bc 	strhne	r1, [r4, #12]
   16eb8:	1000000e 	andne	r0, r0, lr
   16ebc:	07d6c000 	ldrbeq	ip, [r6, r0]
   16ec0:	17dcc000 	ldrbne	ip, [ip, r0]
   16ec4:	e1d400be 	ldrh	r0, [r4, #14]
   16ec8:	e1a01421 	lsr	r1, r1, #8
   16ecc:	e2400001 	sub	r0, r0, #1
   16ed0:	e6ff0070 	uxth	r0, r0
   16ed4:	e1c400be 	strh	r0, [r4, #14]
   16ed8:	e7c61000 	strb	r1, [r6, r0]
   16edc:	e1d410be 	ldrh	r1, [r4, #14]
   16ee0:	e6ef3072 	uxtb	r3, r2
   16ee4:	e2412001 	sub	r2, r1, #1
   16ee8:	e5d4100c 	ldrb	r1, [r4, #12]
   16eec:	e6ff2072 	uxth	r2, r2
   16ef0:	e183340c 	orr	r3, r3, ip, lsl #8
   16ef4:	e1c420be 	strh	r2, [r4, #14]
   16ef8:	e7c61002 	strb	r1, [r6, r2]
   16efc:	e1c430bc 	strh	r3, [r4, #12]
   16f00:	eafffec7 	b	16a24 <ExecZ80+0x4bc>
   16f04:	e1d430be 	ldrh	r3, [r4, #14]
   16f08:	e35e0000 	cmp	lr, #0
   16f0c:	e2831001 	add	r1, r3, #1
   16f10:	e6ff1071 	uxth	r1, r1
   16f14:	e5d4c006 	ldrb	ip, [r4, #6]
   16f18:	0a000c65 	beq	1a0b4 <ExecZ80+0x3b4c>
   16f1c:	e59f0618 	ldr	r0, [pc, #1560]	; 1753c <ExecZ80+0xfd4>
   16f20:	e59fe618 	ldr	lr, [pc, #1560]	; 17540 <ExecZ80+0xfd8>
   16f24:	e0032000 	and	r2, r3, r0
   16f28:	e7de2002 	ldrb	r2, [lr, r2]
   16f2c:	e1c410be 	strh	r1, [r4, #14]
   16f30:	e7c6c003 	strb	ip, [r6, r3]
   16f34:	e1d430be 	ldrh	r3, [r4, #14]
   16f38:	e0000003 	and	r0, r0, r3
   16f3c:	e7de0000 	ldrb	r0, [lr, r0]
   16f40:	e5d41007 	ldrb	r1, [r4, #7]
   16f44:	e3c22cff 	bic	r2, r2, #65280	; 0xff00
   16f48:	e1822400 	orr	r2, r2, r0, lsl #8
   16f4c:	e2430001 	sub	r0, r3, #1
   16f50:	e1c400be 	strh	r0, [r4, #14]
   16f54:	e7c61003 	strb	r1, [r6, r3]
   16f58:	e1d430bc 	ldrh	r3, [r4, #12]
   16f5c:	e1c420b6 	strh	r2, [r4, #6]
   16f60:	eafffeaf 	b	16a24 <ExecZ80+0x4bc>
   16f64:	e5d42000 	ldrb	r2, [r4]
   16f68:	e3120004 	tst	r2, #4
   16f6c:	1a000c95 	bne	1a1c8 <ExecZ80+0x3c60>
   16f70:	e35e0000 	cmp	lr, #0
   16f74:	159fc5c0 	ldrne	ip, [pc, #1472]	; 1753c <ExecZ80+0xfd4>
   16f78:	e2851002 	add	r1, r5, #2
   16f7c:	e6ff1071 	uxth	r1, r1
   16f80:	159f05b8 	ldrne	r0, [pc, #1464]	; 17540 <ExecZ80+0xfd8>
   16f84:	e1c410bc 	strh	r1, [r4, #12]
   16f88:	1003300c 	andne	r3, r3, ip
   16f8c:	17d02003 	ldrbne	r2, [r0, r3]
   16f90:	07d62003 	ldrbeq	r2, [r6, r3]
   16f94:	1001100c 	andne	r1, r1, ip
   16f98:	17d03001 	ldrbne	r3, [r0, r1]
   16f9c:	07d63001 	ldrbeq	r3, [r6, r1]
   16fa0:	e6ef2072 	uxtb	r2, r2
   16fa4:	e1823403 	orr	r3, r2, r3, lsl #8
   16fa8:	e1c430bc 	strh	r3, [r4, #12]
   16fac:	eafffe9c 	b	16a24 <ExecZ80+0x4bc>
   16fb0:	e1d410be 	ldrh	r1, [r4, #14]
   16fb4:	e35e0000 	cmp	lr, #0
   16fb8:	e2812001 	add	r2, r1, #1
   16fbc:	e6ff2072 	uxth	r2, r2
   16fc0:	e2810002 	add	r0, r1, #2
   16fc4:	e1c420be 	strh	r2, [r4, #14]
   16fc8:	e6ff0070 	uxth	r0, r0
   16fcc:	0a000c48 	beq	1a0f4 <ExecZ80+0x3b8c>
   16fd0:	e59fe564 	ldr	lr, [pc, #1380]	; 1753c <ExecZ80+0xfd4>
   16fd4:	e59fc564 	ldr	ip, [pc, #1380]	; 17540 <ExecZ80+0xfd8>
   16fd8:	e001100e 	and	r1, r1, lr
   16fdc:	e7dc1001 	ldrb	r1, [ip, r1]
   16fe0:	e002200e 	and	r2, r2, lr
   16fe4:	e5c41006 	strb	r1, [r4, #6]
   16fe8:	e1c400be 	strh	r0, [r4, #14]
   16fec:	e7dc2002 	ldrb	r2, [ip, r2]
   16ff0:	e5c42007 	strb	r2, [r4, #7]
   16ff4:	eafffe8a 	b	16a24 <ExecZ80+0x4bc>
   16ff8:	e5d40000 	ldrb	r0, [r4]
   16ffc:	e2851003 	add	r1, r5, #3
   17000:	e3100004 	tst	r0, #4
   17004:	e6ff1071 	uxth	r1, r1
   17008:	01c410bc 	strheq	r1, [r4, #12]
   1700c:	01a03001 	moveq	r3, r1
   17010:	0afffe83 	beq	16a24 <ExecZ80+0x4bc>
   17014:	e35e0000 	cmp	lr, #0
   17018:	159fe51c 	ldrne	lr, [pc, #1308]	; 1753c <ExecZ80+0xfd4>
   1701c:	e2850002 	add	r0, r5, #2
   17020:	e6ff0070 	uxth	r0, r0
   17024:	e2422007 	sub	r2, r2, #7
   17028:	159fc510 	ldrne	ip, [pc, #1296]	; 17540 <ExecZ80+0xfd8>
   1702c:	e1c400bc 	strh	r0, [r4, #12]
   17030:	e5842020 	str	r2, [r4, #32]
   17034:	1003300e 	andne	r3, r3, lr
   17038:	07d62003 	ldrbeq	r2, [r6, r3]
   1703c:	17dc2003 	ldrbne	r2, [ip, r3]
   17040:	01c410bc 	strheq	r1, [r4, #12]
   17044:	11c410bc 	strhne	r1, [r4, #12]
   17048:	1000000e 	andne	r0, r0, lr
   1704c:	07d6c000 	ldrbeq	ip, [r6, r0]
   17050:	17dcc000 	ldrbne	ip, [ip, r0]
   17054:	e1d400be 	ldrh	r0, [r4, #14]
   17058:	e1a01421 	lsr	r1, r1, #8
   1705c:	e2400001 	sub	r0, r0, #1
   17060:	e6ff0070 	uxth	r0, r0
   17064:	e1c400be 	strh	r0, [r4, #14]
   17068:	e7c61000 	strb	r1, [r6, r0]
   1706c:	e1d410be 	ldrh	r1, [r4, #14]
   17070:	e6ef3072 	uxtb	r3, r2
   17074:	e2412001 	sub	r2, r1, #1
   17078:	e5d4100c 	ldrb	r1, [r4, #12]
   1707c:	e6ff2072 	uxth	r2, r2
   17080:	e183340c 	orr	r3, r3, ip, lsl #8
   17084:	e1c420be 	strh	r2, [r4, #14]
   17088:	e7c61002 	strb	r1, [r6, r2]
   1708c:	e1c430bc 	strh	r3, [r4, #12]
   17090:	eafffe63 	b	16a24 <ExecZ80+0x4bc>
   17094:	e35e0000 	cmp	lr, #0
   17098:	e2851002 	add	r1, r5, #2
   1709c:	e6ff1071 	uxth	r1, r1
   170a0:	11a03883 	lslne	r3, r3, #17
   170a4:	159f2494 	ldrne	r2, [pc, #1172]	; 17540 <ExecZ80+0xfd8>
   170a8:	e1c410bc 	strh	r1, [r4, #12]
   170ac:	11a038a3 	lsrne	r3, r3, #17
   170b0:	17d22003 	ldrbne	r2, [r2, r3]
   170b4:	07d62003 	ldrbeq	r2, [r6, r3]
   170b8:	e5d40001 	ldrb	r0, [r4, #1]
   170bc:	e1a03001 	mov	r3, r1
   170c0:	e0222000 	eor	r2, r2, r0
   170c4:	e08cc002 	add	ip, ip, r2
   170c8:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   170cc:	e5c42001 	strb	r2, [r4, #1]
   170d0:	e5c41000 	strb	r1, [r4]
   170d4:	eafffe52 	b	16a24 <ExecZ80+0x4bc>
   170d8:	e1a00004 	mov	r0, r4
   170dc:	ebfff82f 	bl	151a0 <CodesED>
   170e0:	e1d430bc 	ldrh	r3, [r4, #12]
   170e4:	eafffe4e 	b	16a24 <ExecZ80+0x4bc>
   170e8:	e5d42000 	ldrb	r2, [r4]
   170ec:	e3120004 	tst	r2, #4
   170f0:	0a000c38 	beq	1a1d8 <ExecZ80+0x3c70>
   170f4:	e35e0000 	cmp	lr, #0
   170f8:	159fc43c 	ldrne	ip, [pc, #1084]	; 1753c <ExecZ80+0xfd4>
   170fc:	e2851002 	add	r1, r5, #2
   17100:	e6ff1071 	uxth	r1, r1
   17104:	159f0434 	ldrne	r0, [pc, #1076]	; 17540 <ExecZ80+0xfd8>
   17108:	e1c410bc 	strh	r1, [r4, #12]
   1710c:	1003300c 	andne	r3, r3, ip
   17110:	17d02003 	ldrbne	r2, [r0, r3]
   17114:	07d62003 	ldrbeq	r2, [r6, r3]
   17118:	1001100c 	andne	r1, r1, ip
   1711c:	17d03001 	ldrbne	r3, [r0, r1]
   17120:	07d63001 	ldrbeq	r3, [r6, r1]
   17124:	e6ef2072 	uxtb	r2, r2
   17128:	e1823403 	orr	r3, r2, r3, lsl #8
   1712c:	e1c430bc 	strh	r3, [r4, #12]
   17130:	eafffe3b 	b	16a24 <ExecZ80+0x4bc>
   17134:	e1d430b6 	ldrh	r3, [r4, #6]
   17138:	e1c430bc 	strh	r3, [r4, #12]
   1713c:	eafffe38 	b	16a24 <ExecZ80+0x4bc>
   17140:	e1d410b4 	ldrh	r1, [r4, #4]
   17144:	e1d420b6 	ldrh	r2, [r4, #6]
   17148:	e1c410b6 	strh	r1, [r4, #6]
   1714c:	e1c420b4 	strh	r2, [r4, #4]
   17150:	eafffe33 	b	16a24 <ExecZ80+0x4bc>
   17154:	e5d41000 	ldrb	r1, [r4]
   17158:	e3110004 	tst	r1, #4
   1715c:	1afffe30 	bne	16a24 <ExecZ80+0x4bc>
   17160:	e1d410be 	ldrh	r1, [r4, #14]
   17164:	e2420006 	sub	r0, r2, #6
   17168:	e2813001 	add	r3, r1, #1
   1716c:	e6ff3073 	uxth	r3, r3
   17170:	e2812002 	add	r2, r1, #2
   17174:	e35e0000 	cmp	lr, #0
   17178:	e5840020 	str	r0, [r4, #32]
   1717c:	e1c430be 	strh	r3, [r4, #14]
   17180:	e6ff2072 	uxth	r2, r2
   17184:	0a000c7d 	beq	1a380 <ExecZ80+0x3e18>
   17188:	e59fc3ac 	ldr	ip, [pc, #940]	; 1753c <ExecZ80+0xfd4>
   1718c:	e59f03ac 	ldr	r0, [pc, #940]	; 17540 <ExecZ80+0xfd8>
   17190:	e001100c 	and	r1, r1, ip
   17194:	e7d01001 	ldrb	r1, [r0, r1]
   17198:	e003300c 	and	r3, r3, ip
   1719c:	e5c4100c 	strb	r1, [r4, #12]
   171a0:	e1c420be 	strh	r2, [r4, #14]
   171a4:	e7d03003 	ldrb	r3, [r0, r3]
   171a8:	e5c4300d 	strb	r3, [r4, #13]
   171ac:	e1d430bc 	ldrh	r3, [r4, #12]
   171b0:	eafffe1b 	b	16a24 <ExecZ80+0x4bc>
   171b4:	e3a01018 	mov	r1, #24
   171b8:	e1d420be 	ldrh	r2, [r4, #14]
   171bc:	e1a03423 	lsr	r3, r3, #8
   171c0:	e2422001 	sub	r2, r2, #1
   171c4:	e6ff2072 	uxth	r2, r2
   171c8:	e1c420be 	strh	r2, [r4, #14]
   171cc:	e7c63002 	strb	r3, [r6, r2]
   171d0:	e1d430be 	ldrh	r3, [r4, #14]
   171d4:	e5d4200c 	ldrb	r2, [r4, #12]
   171d8:	e2433001 	sub	r3, r3, #1
   171dc:	e6ff3073 	uxth	r3, r3
   171e0:	e1c430be 	strh	r3, [r4, #14]
   171e4:	e7c62003 	strb	r2, [r6, r3]
   171e8:	e1a03001 	mov	r3, r1
   171ec:	e1c410bc 	strh	r1, [r4, #12]
   171f0:	eafffe0b 	b	16a24 <ExecZ80+0x4bc>
   171f4:	e5d41000 	ldrb	r1, [r4]
   171f8:	e3110001 	tst	r1, #1
   171fc:	1afffe08 	bne	16a24 <ExecZ80+0x4bc>
   17200:	e1d410be 	ldrh	r1, [r4, #14]
   17204:	e2420006 	sub	r0, r2, #6
   17208:	e2813001 	add	r3, r1, #1
   1720c:	e6ff3073 	uxth	r3, r3
   17210:	e2812002 	add	r2, r1, #2
   17214:	e35e0000 	cmp	lr, #0
   17218:	e5840020 	str	r0, [r4, #32]
   1721c:	e1c430be 	strh	r3, [r4, #14]
   17220:	e6ff2072 	uxth	r2, r2
   17224:	0a000c46 	beq	1a344 <ExecZ80+0x3ddc>
   17228:	e59fc30c 	ldr	ip, [pc, #780]	; 1753c <ExecZ80+0xfd4>
   1722c:	e59f030c 	ldr	r0, [pc, #780]	; 17540 <ExecZ80+0xfd8>
   17230:	e001100c 	and	r1, r1, ip
   17234:	e7d01001 	ldrb	r1, [r0, r1]
   17238:	e003300c 	and	r3, r3, ip
   1723c:	e5c4100c 	strb	r1, [r4, #12]
   17240:	e1c420be 	strh	r2, [r4, #14]
   17244:	e7d03003 	ldrb	r3, [r0, r3]
   17248:	e5c4300d 	strb	r3, [r4, #13]
   1724c:	e1d430bc 	ldrh	r3, [r4, #12]
   17250:	eafffdf3 	b	16a24 <ExecZ80+0x4bc>
   17254:	e3a01008 	mov	r1, #8
   17258:	e1d420be 	ldrh	r2, [r4, #14]
   1725c:	e1a03133 	lsr	r3, r3, r1
   17260:	e2422001 	sub	r2, r2, #1
   17264:	e6ff2072 	uxth	r2, r2
   17268:	e1c420be 	strh	r2, [r4, #14]
   1726c:	e7c63002 	strb	r3, [r6, r2]
   17270:	e1d430be 	ldrh	r3, [r4, #14]
   17274:	e5d4200c 	ldrb	r2, [r4, #12]
   17278:	e2433001 	sub	r3, r3, #1
   1727c:	e6ff3073 	uxth	r3, r3
   17280:	e1c430be 	strh	r3, [r4, #14]
   17284:	e7c62003 	strb	r2, [r6, r3]
   17288:	e1a03001 	mov	r3, r1
   1728c:	e1c410bc 	strh	r1, [r4, #12]
   17290:	eafffde3 	b	16a24 <ExecZ80+0x4bc>
   17294:	e35e0000 	cmp	lr, #0
   17298:	e2851002 	add	r1, r5, #2
   1729c:	159f229c 	ldrne	r2, [pc, #668]	; 17540 <ExecZ80+0xfd8>
   172a0:	11a03883 	lslne	r3, r3, #17
   172a4:	e6ff1071 	uxth	r1, r1
   172a8:	e1c410bc 	strh	r1, [r4, #12]
   172ac:	11a038a3 	lsrne	r3, r3, #17
   172b0:	17d22003 	ldrbne	r2, [r2, r3]
   172b4:	07d62003 	ldrbeq	r2, [r6, r3]
   172b8:	e5d43000 	ldrb	r3, [r4]
   172bc:	e5d45001 	ldrb	r5, [r4, #1]
   172c0:	e2033001 	and	r3, r3, #1
   172c4:	e0833005 	add	r3, r3, r5
   172c8:	e083e002 	add	lr, r3, r2
   172cc:	e6ef007e 	uxtb	r0, lr
   172d0:	e0255002 	eor	r5, r5, r2
   172d4:	e08c3000 	add	r3, ip, r0
   172d8:	e5d3c300 	ldrb	ip, [r3, #768]	; 0x300
   172dc:	e0222000 	eor	r2, r2, r0
   172e0:	e0253000 	eor	r3, r5, r0
   172e4:	e1c22005 	bic	r2, r2, r5
   172e8:	e2033010 	and	r3, r3, #16
   172ec:	e1a022c2 	asr	r2, r2, #5
   172f0:	e183300c 	orr	r3, r3, ip
   172f4:	e183342e 	orr	r3, r3, lr, lsr #8
   172f8:	e2022004 	and	r2, r2, #4
   172fc:	e1822003 	orr	r2, r2, r3
   17300:	e5c42000 	strb	r2, [r4]
   17304:	e1a03001 	mov	r3, r1
   17308:	e5c40001 	strb	r0, [r4, #1]
   1730c:	eafffdc4 	b	16a24 <ExecZ80+0x4bc>
   17310:	e35e0000 	cmp	lr, #0
   17314:	159fe220 	ldrne	lr, [pc, #544]	; 1753c <ExecZ80+0xfd4>
   17318:	e2851002 	add	r1, r5, #2
   1731c:	e6ff1071 	uxth	r1, r1
   17320:	159fc218 	ldrne	ip, [pc, #536]	; 17540 <ExecZ80+0xfd8>
   17324:	e2850003 	add	r0, r5, #3
   17328:	e1c410bc 	strh	r1, [r4, #12]
   1732c:	e6ff0070 	uxth	r0, r0
   17330:	1003300e 	andne	r3, r3, lr
   17334:	07d62003 	ldrbeq	r2, [r6, r3]
   17338:	17dc2003 	ldrbne	r2, [ip, r3]
   1733c:	01c400bc 	strheq	r0, [r4, #12]
   17340:	11c400bc 	strhne	r0, [r4, #12]
   17344:	1001100e 	andne	r1, r1, lr
   17348:	07d6c001 	ldrbeq	ip, [r6, r1]
   1734c:	17dcc001 	ldrbne	ip, [ip, r1]
   17350:	e1d410be 	ldrh	r1, [r4, #14]
   17354:	e1a00420 	lsr	r0, r0, #8
   17358:	e2411001 	sub	r1, r1, #1
   1735c:	e6ff1071 	uxth	r1, r1
   17360:	e1c410be 	strh	r1, [r4, #14]
   17364:	e7c60001 	strb	r0, [r6, r1]
   17368:	e1d410be 	ldrh	r1, [r4, #14]
   1736c:	e6ef3072 	uxtb	r3, r2
   17370:	e2412001 	sub	r2, r1, #1
   17374:	e5d4100c 	ldrb	r1, [r4, #12]
   17378:	e6ff2072 	uxth	r2, r2
   1737c:	e183340c 	orr	r3, r3, ip, lsl #8
   17380:	e1c420be 	strh	r2, [r4, #14]
   17384:	e7c61002 	strb	r1, [r6, r2]
   17388:	e1c430bc 	strh	r3, [r4, #12]
   1738c:	eafffda4 	b	16a24 <ExecZ80+0x4bc>
   17390:	e5d40000 	ldrb	r0, [r4]
   17394:	e2851003 	add	r1, r5, #3
   17398:	e3100040 	tst	r0, #64	; 0x40
   1739c:	e6ff1071 	uxth	r1, r1
   173a0:	01c410bc 	strheq	r1, [r4, #12]
   173a4:	01a03001 	moveq	r3, r1
   173a8:	0afffd9d 	beq	16a24 <ExecZ80+0x4bc>
   173ac:	e35e0000 	cmp	lr, #0
   173b0:	159fe184 	ldrne	lr, [pc, #388]	; 1753c <ExecZ80+0xfd4>
   173b4:	e2850002 	add	r0, r5, #2
   173b8:	e6ff0070 	uxth	r0, r0
   173bc:	e2422007 	sub	r2, r2, #7
   173c0:	159fc178 	ldrne	ip, [pc, #376]	; 17540 <ExecZ80+0xfd8>
   173c4:	e1c400bc 	strh	r0, [r4, #12]
   173c8:	e5842020 	str	r2, [r4, #32]
   173cc:	1003300e 	andne	r3, r3, lr
   173d0:	07d62003 	ldrbeq	r2, [r6, r3]
   173d4:	17dc2003 	ldrbne	r2, [ip, r3]
   173d8:	01c410bc 	strheq	r1, [r4, #12]
   173dc:	11c410bc 	strhne	r1, [r4, #12]
   173e0:	1000000e 	andne	r0, r0, lr
   173e4:	07d6c000 	ldrbeq	ip, [r6, r0]
   173e8:	17dcc000 	ldrbne	ip, [ip, r0]
   173ec:	e1d400be 	ldrh	r0, [r4, #14]
   173f0:	e1a01421 	lsr	r1, r1, #8
   173f4:	e2400001 	sub	r0, r0, #1
   173f8:	e6ff0070 	uxth	r0, r0
   173fc:	e1c400be 	strh	r0, [r4, #14]
   17400:	e7c61000 	strb	r1, [r6, r0]
   17404:	e1d410be 	ldrh	r1, [r4, #14]
   17408:	e6ef3072 	uxtb	r3, r2
   1740c:	e2412001 	sub	r2, r1, #1
   17410:	e5d4100c 	ldrb	r1, [r4, #12]
   17414:	e6ff2072 	uxth	r2, r2
   17418:	e183340c 	orr	r3, r3, ip, lsl #8
   1741c:	e1c420be 	strh	r2, [r4, #14]
   17420:	e7c61002 	strb	r1, [r6, r2]
   17424:	e1c430bc 	strh	r3, [r4, #12]
   17428:	eafffd7d 	b	16a24 <ExecZ80+0x4bc>
   1742c:	e1a00004 	mov	r0, r4
   17430:	ebffc64d 	bl	8d6c <CodesCB>
   17434:	e1d430bc 	ldrh	r3, [r4, #12]
   17438:	eafffd79 	b	16a24 <ExecZ80+0x4bc>
   1743c:	e5d42000 	ldrb	r2, [r4]
   17440:	e3120040 	tst	r2, #64	; 0x40
   17444:	0a000b53 	beq	1a198 <ExecZ80+0x3c30>
   17448:	e35e0000 	cmp	lr, #0
   1744c:	159fc0e8 	ldrne	ip, [pc, #232]	; 1753c <ExecZ80+0xfd4>
   17450:	e2851002 	add	r1, r5, #2
   17454:	e6ff1071 	uxth	r1, r1
   17458:	159f00e0 	ldrne	r0, [pc, #224]	; 17540 <ExecZ80+0xfd8>
   1745c:	e1c410bc 	strh	r1, [r4, #12]
   17460:	1003300c 	andne	r3, r3, ip
   17464:	17d02003 	ldrbne	r2, [r0, r3]
   17468:	07d62003 	ldrbeq	r2, [r6, r3]
   1746c:	1001100c 	andne	r1, r1, ip
   17470:	17d03001 	ldrbne	r3, [r0, r1]
   17474:	07d63001 	ldrbeq	r3, [r6, r1]
   17478:	e6ef2072 	uxtb	r2, r2
   1747c:	e1823403 	orr	r3, r2, r3, lsl #8
   17480:	e1c430bc 	strh	r3, [r4, #12]
   17484:	eafffd66 	b	16a24 <ExecZ80+0x4bc>
   17488:	e1d420be 	ldrh	r2, [r4, #14]
   1748c:	e35e0000 	cmp	lr, #0
   17490:	e2823001 	add	r3, r2, #1
   17494:	e6ff3073 	uxth	r3, r3
   17498:	e2821002 	add	r1, r2, #2
   1749c:	e1c430be 	strh	r3, [r4, #14]
   174a0:	e6ff1071 	uxth	r1, r1
   174a4:	0a000b1c 	beq	1a11c <ExecZ80+0x3bb4>
   174a8:	e59fc08c 	ldr	ip, [pc, #140]	; 1753c <ExecZ80+0xfd4>
   174ac:	e59f008c 	ldr	r0, [pc, #140]	; 17540 <ExecZ80+0xfd8>
   174b0:	e002200c 	and	r2, r2, ip
   174b4:	e7d02002 	ldrb	r2, [r0, r2]
   174b8:	e003300c 	and	r3, r3, ip
   174bc:	e5c4200c 	strb	r2, [r4, #12]
   174c0:	e1c410be 	strh	r1, [r4, #14]
   174c4:	e7d03003 	ldrb	r3, [r0, r3]
   174c8:	e5c4300d 	strb	r3, [r4, #13]
   174cc:	e1d430bc 	ldrh	r3, [r4, #12]
   174d0:	eafffd53 	b	16a24 <ExecZ80+0x4bc>
   174d4:	e5d41000 	ldrb	r1, [r4]
   174d8:	e3110040 	tst	r1, #64	; 0x40
   174dc:	0afffd50 	beq	16a24 <ExecZ80+0x4bc>
   174e0:	e1d410be 	ldrh	r1, [r4, #14]
   174e4:	e2420006 	sub	r0, r2, #6
   174e8:	e2813001 	add	r3, r1, #1
   174ec:	e6ff3073 	uxth	r3, r3
   174f0:	e2812002 	add	r2, r1, #2
   174f4:	e35e0000 	cmp	lr, #0
   174f8:	e5840020 	str	r0, [r4, #32]
   174fc:	e1c430be 	strh	r3, [r4, #14]
   17500:	e6ff2072 	uxth	r2, r2
   17504:	0a000b98 	beq	1a36c <ExecZ80+0x3e04>
   17508:	e59fc02c 	ldr	ip, [pc, #44]	; 1753c <ExecZ80+0xfd4>
   1750c:	e59f002c 	ldr	r0, [pc, #44]	; 17540 <ExecZ80+0xfd8>
   17510:	e001100c 	and	r1, r1, ip
   17514:	e7d01001 	ldrb	r1, [r0, r1]
   17518:	e003300c 	and	r3, r3, ip
   1751c:	e5c4100c 	strb	r1, [r4, #12]
   17520:	e1c420be 	strh	r2, [r4, #14]
   17524:	e7d03003 	ldrb	r3, [r0, r3]
   17528:	e5c4300d 	strb	r3, [r4, #13]
   1752c:	e1d430bc 	ldrh	r3, [r4, #12]
   17530:	eafffd3b 	b	16a24 <ExecZ80+0x4bc>
   17534:	0005cf80 	.word	0x0005cf80
   17538:	0003c260 	.word	0x0003c260
   1753c:	00007fff 	.word	0x00007fff
   17540:	00050428 	.word	0x00050428
   17544:	e5d41000 	ldrb	r1, [r4]
   17548:	e3110001 	tst	r1, #1
   1754c:	0afffd34 	beq	16a24 <ExecZ80+0x4bc>
   17550:	e1d410be 	ldrh	r1, [r4, #14]
   17554:	e2420006 	sub	r0, r2, #6
   17558:	e2813001 	add	r3, r1, #1
   1755c:	e6ff3073 	uxth	r3, r3
   17560:	e2812002 	add	r2, r1, #2
   17564:	e35e0000 	cmp	lr, #0
   17568:	e5840020 	str	r0, [r4, #32]
   1756c:	e1c430be 	strh	r3, [r4, #14]
   17570:	e6ff2072 	uxth	r2, r2
   17574:	0a000b6d 	beq	1a330 <ExecZ80+0x3dc8>
   17578:	e51fc044 	ldr	ip, [pc, #-68]	; 1753c <ExecZ80+0xfd4>
   1757c:	e51f0044 	ldr	r0, [pc, #-68]	; 17540 <ExecZ80+0xfd8>
   17580:	e001100c 	and	r1, r1, ip
   17584:	e7d01001 	ldrb	r1, [r0, r1]
   17588:	e003300c 	and	r3, r3, ip
   1758c:	e5c4100c 	strb	r1, [r4, #12]
   17590:	e1c420be 	strh	r2, [r4, #14]
   17594:	e7d03003 	ldrb	r3, [r0, r3]
   17598:	e5c4300d 	strb	r3, [r4, #13]
   1759c:	e1d430bc 	ldrh	r3, [r4, #12]
   175a0:	eafffd1f 	b	16a24 <ExecZ80+0x4bc>
   175a4:	e5d40000 	ldrb	r0, [r4]
   175a8:	e2851003 	add	r1, r5, #3
   175ac:	e3100040 	tst	r0, #64	; 0x40
   175b0:	e6ff1071 	uxth	r1, r1
   175b4:	11c410bc 	strhne	r1, [r4, #12]
   175b8:	11a03001 	movne	r3, r1
   175bc:	1afffd18 	bne	16a24 <ExecZ80+0x4bc>
   175c0:	e35e0000 	cmp	lr, #0
   175c4:	151fe090 	ldrne	lr, [pc, #-144]	; 1753c <ExecZ80+0xfd4>
   175c8:	e2850002 	add	r0, r5, #2
   175cc:	e6ff0070 	uxth	r0, r0
   175d0:	e2422007 	sub	r2, r2, #7
   175d4:	151fc09c 	ldrne	ip, [pc, #-156]	; 17540 <ExecZ80+0xfd8>
   175d8:	e1c400bc 	strh	r0, [r4, #12]
   175dc:	e5842020 	str	r2, [r4, #32]
   175e0:	1003300e 	andne	r3, r3, lr
   175e4:	07d62003 	ldrbeq	r2, [r6, r3]
   175e8:	17dc2003 	ldrbne	r2, [ip, r3]
   175ec:	01c410bc 	strheq	r1, [r4, #12]
   175f0:	11c410bc 	strhne	r1, [r4, #12]
   175f4:	1000000e 	andne	r0, r0, lr
   175f8:	07d6c000 	ldrbeq	ip, [r6, r0]
   175fc:	17dcc000 	ldrbne	ip, [ip, r0]
   17600:	e1d400be 	ldrh	r0, [r4, #14]
   17604:	e1a01421 	lsr	r1, r1, #8
   17608:	e2400001 	sub	r0, r0, #1
   1760c:	e6ff0070 	uxth	r0, r0
   17610:	e1c400be 	strh	r0, [r4, #14]
   17614:	e7c61000 	strb	r1, [r6, r0]
   17618:	e1d410be 	ldrh	r1, [r4, #14]
   1761c:	e6ef3072 	uxtb	r3, r2
   17620:	e2412001 	sub	r2, r1, #1
   17624:	e5d4100c 	ldrb	r1, [r4, #12]
   17628:	e6ff2072 	uxth	r2, r2
   1762c:	e183340c 	orr	r3, r3, ip, lsl #8
   17630:	e1c420be 	strh	r2, [r4, #14]
   17634:	e7c61002 	strb	r1, [r6, r2]
   17638:	e1c430bc 	strh	r3, [r4, #12]
   1763c:	eafffcf8 	b	16a24 <ExecZ80+0x4bc>
   17640:	e5d40000 	ldrb	r0, [r4]
   17644:	e2851003 	add	r1, r5, #3
   17648:	e3100001 	tst	r0, #1
   1764c:	e6ff1071 	uxth	r1, r1
   17650:	01c410bc 	strheq	r1, [r4, #12]
   17654:	01a03001 	moveq	r3, r1
   17658:	0afffcf1 	beq	16a24 <ExecZ80+0x4bc>
   1765c:	e35e0000 	cmp	lr, #0
   17660:	151fe12c 	ldrne	lr, [pc, #-300]	; 1753c <ExecZ80+0xfd4>
   17664:	e2850002 	add	r0, r5, #2
   17668:	e6ff0070 	uxth	r0, r0
   1766c:	e2422007 	sub	r2, r2, #7
   17670:	151fc138 	ldrne	ip, [pc, #-312]	; 17540 <ExecZ80+0xfd8>
   17674:	e1c400bc 	strh	r0, [r4, #12]
   17678:	e5842020 	str	r2, [r4, #32]
   1767c:	1003300e 	andne	r3, r3, lr
   17680:	07d62003 	ldrbeq	r2, [r6, r3]
   17684:	17dc2003 	ldrbne	r2, [ip, r3]
   17688:	01c410bc 	strheq	r1, [r4, #12]
   1768c:	11c410bc 	strhne	r1, [r4, #12]
   17690:	1000000e 	andne	r0, r0, lr
   17694:	07d6c000 	ldrbeq	ip, [r6, r0]
   17698:	17dcc000 	ldrbne	ip, [ip, r0]
   1769c:	e1d400be 	ldrh	r0, [r4, #14]
   176a0:	e1a01421 	lsr	r1, r1, #8
   176a4:	e2400001 	sub	r0, r0, #1
   176a8:	e6ff0070 	uxth	r0, r0
   176ac:	e1c400be 	strh	r0, [r4, #14]
   176b0:	e7c61000 	strb	r1, [r6, r0]
   176b4:	e1d410be 	ldrh	r1, [r4, #14]
   176b8:	e6ef3072 	uxtb	r3, r2
   176bc:	e2412001 	sub	r2, r1, #1
   176c0:	e5d4100c 	ldrb	r1, [r4, #12]
   176c4:	e6ff2072 	uxth	r2, r2
   176c8:	e183340c 	orr	r3, r3, ip, lsl #8
   176cc:	e1c420be 	strh	r2, [r4, #14]
   176d0:	e7c61002 	strb	r1, [r6, r2]
   176d4:	e1c430bc 	strh	r3, [r4, #12]
   176d8:	eafffcd1 	b	16a24 <ExecZ80+0x4bc>
   176dc:	e35e0000 	cmp	lr, #0
   176e0:	11a03883 	lslne	r3, r3, #17
   176e4:	151f21ac 	ldrne	r2, [pc, #-428]	; 17540 <ExecZ80+0xfd8>
   176e8:	e2855002 	add	r5, r5, #2
   176ec:	e1c450bc 	strh	r5, [r4, #12]
   176f0:	11a038a3 	lsrne	r3, r3, #17
   176f4:	17d20003 	ldrbne	r0, [r2, r3]
   176f8:	07d60003 	ldrbeq	r0, [r6, r3]
   176fc:	e1d430b0 	ldrh	r3, [r4]
   17700:	e3c330ff 	bic	r3, r3, #255	; 0xff
   17704:	e1830000 	orr	r0, r3, r0
   17708:	ebffc506 	bl	8b28 <InZ80>
   1770c:	e1d430bc 	ldrh	r3, [r4, #12]
   17710:	e5c40001 	strb	r0, [r4, #1]
   17714:	eafffcc2 	b	16a24 <ExecZ80+0x4bc>
   17718:	e5d42000 	ldrb	r2, [r4]
   1771c:	e3120001 	tst	r2, #1
   17720:	0a000aa0 	beq	1a1a8 <ExecZ80+0x3c40>
   17724:	e35e0000 	cmp	lr, #0
   17728:	151fc1f4 	ldrne	ip, [pc, #-500]	; 1753c <ExecZ80+0xfd4>
   1772c:	e2851002 	add	r1, r5, #2
   17730:	e6ff1071 	uxth	r1, r1
   17734:	151f01fc 	ldrne	r0, [pc, #-508]	; 17540 <ExecZ80+0xfd8>
   17738:	e1c410bc 	strh	r1, [r4, #12]
   1773c:	1003300c 	andne	r3, r3, ip
   17740:	17d02003 	ldrbne	r2, [r0, r3]
   17744:	07d62003 	ldrbeq	r2, [r6, r3]
   17748:	1001100c 	andne	r1, r1, ip
   1774c:	17d03001 	ldrbne	r3, [r0, r1]
   17750:	07d63001 	ldrbeq	r3, [r6, r1]
   17754:	e6ef2072 	uxtb	r2, r2
   17758:	e1823403 	orr	r3, r2, r3, lsl #8
   1775c:	e1c430bc 	strh	r3, [r4, #12]
   17760:	eafffcaf 	b	16a24 <ExecZ80+0x4bc>
   17764:	e1d410b2 	ldrh	r1, [r4, #2]
   17768:	e1d421b2 	ldrh	r2, [r4, #18]
   1776c:	e1d4c0b4 	ldrh	ip, [r4, #4]
   17770:	e1d401b4 	ldrh	r0, [r4, #20]
   17774:	e1c411b2 	strh	r1, [r4, #18]
   17778:	e1c420b2 	strh	r2, [r4, #2]
   1777c:	e1d410b6 	ldrh	r1, [r4, #6]
   17780:	e1d421b6 	ldrh	r2, [r4, #22]
   17784:	e1c4c1b4 	strh	ip, [r4, #20]
   17788:	e1c400b4 	strh	r0, [r4, #4]
   1778c:	e1c411b6 	strh	r1, [r4, #22]
   17790:	e1c420b6 	strh	r2, [r4, #6]
   17794:	eafffca2 	b	16a24 <ExecZ80+0x4bc>
   17798:	e35e0000 	cmp	lr, #0
   1779c:	e2851002 	add	r1, r5, #2
   177a0:	11a03883 	lslne	r3, r3, #17
   177a4:	e6ff1071 	uxth	r1, r1
   177a8:	151f2270 	ldrne	r2, [pc, #-624]	; 17540 <ExecZ80+0xfd8>
   177ac:	e1c410bc 	strh	r1, [r4, #12]
   177b0:	11a038a3 	lsrne	r3, r3, #17
   177b4:	17d25003 	ldrbne	r5, [r2, r3]
   177b8:	07d65003 	ldrbeq	r5, [r6, r3]
   177bc:	e5d40001 	ldrb	r0, [r4, #1]
   177c0:	e5d43000 	ldrb	r3, [r4]
   177c4:	e0402005 	sub	r2, r0, r5
   177c8:	e2033001 	and	r3, r3, #1
   177cc:	e0422003 	sub	r2, r2, r3
   177d0:	e6ff2072 	uxth	r2, r2
   177d4:	e6efe072 	uxtb	lr, r2
   177d8:	e08c300e 	add	r3, ip, lr
   177dc:	e1a02422 	lsr	r2, r2, #8
   177e0:	e0255000 	eor	r5, r5, r0
   177e4:	e5d3c300 	ldrb	ip, [r3, #768]	; 0x300
   177e8:	e2622000 	rsb	r2, r2, #0
   177ec:	e02e3000 	eor	r3, lr, r0
   177f0:	e0033005 	and	r3, r3, r5
   177f4:	e3822002 	orr	r2, r2, #2
   177f8:	e02e0005 	eor	r0, lr, r5
   177fc:	e1a032a3 	lsr	r3, r3, #5
   17800:	e182200c 	orr	r2, r2, ip
   17804:	e2000010 	and	r0, r0, #16
   17808:	e2033004 	and	r3, r3, #4
   1780c:	e1822000 	orr	r2, r2, r0
   17810:	e1822003 	orr	r2, r2, r3
   17814:	e5c42000 	strb	r2, [r4]
   17818:	e1a03001 	mov	r3, r1
   1781c:	e5c4e001 	strb	lr, [r4, #1]
   17820:	eafffc7f 	b	16a24 <ExecZ80+0x4bc>
   17824:	e1a00004 	mov	r0, r4
   17828:	ebffe25c 	bl	101a0 <CodesDD>
   1782c:	e1d430bc 	ldrh	r3, [r4, #12]
   17830:	eafffc7b 	b	16a24 <ExecZ80+0x4bc>
   17834:	e5d40000 	ldrb	r0, [r4]
   17838:	e2851003 	add	r1, r5, #3
   1783c:	e3100001 	tst	r0, #1
   17840:	e6ff1071 	uxth	r1, r1
   17844:	11c410bc 	strhne	r1, [r4, #12]
   17848:	11a03001 	movne	r3, r1
   1784c:	1afffc74 	bne	16a24 <ExecZ80+0x4bc>
   17850:	e35e0000 	cmp	lr, #0
   17854:	151fe320 	ldrne	lr, [pc, #-800]	; 1753c <ExecZ80+0xfd4>
   17858:	e2850002 	add	r0, r5, #2
   1785c:	e6ff0070 	uxth	r0, r0
   17860:	e2422007 	sub	r2, r2, #7
   17864:	151fc32c 	ldrne	ip, [pc, #-812]	; 17540 <ExecZ80+0xfd8>
   17868:	e1c400bc 	strh	r0, [r4, #12]
   1786c:	e5842020 	str	r2, [r4, #32]
   17870:	1003300e 	andne	r3, r3, lr
   17874:	07d62003 	ldrbeq	r2, [r6, r3]
   17878:	17dc2003 	ldrbne	r2, [ip, r3]
   1787c:	01c410bc 	strheq	r1, [r4, #12]
   17880:	11c410bc 	strhne	r1, [r4, #12]
   17884:	1000000e 	andne	r0, r0, lr
   17888:	07d6c000 	ldrbeq	ip, [r6, r0]
   1788c:	17dcc000 	ldrbne	ip, [ip, r0]
   17890:	e1d400be 	ldrh	r0, [r4, #14]
   17894:	e1a01421 	lsr	r1, r1, #8
   17898:	e2400001 	sub	r0, r0, #1
   1789c:	e6ff0070 	uxth	r0, r0
   178a0:	e1c400be 	strh	r0, [r4, #14]
   178a4:	e7c61000 	strb	r1, [r6, r0]
   178a8:	e1d410be 	ldrh	r1, [r4, #14]
   178ac:	e6ef3072 	uxtb	r3, r2
   178b0:	e2412001 	sub	r2, r1, #1
   178b4:	e5d4100c 	ldrb	r1, [r4, #12]
   178b8:	e6ff2072 	uxth	r2, r2
   178bc:	e183340c 	orr	r3, r3, ip, lsl #8
   178c0:	e1c420be 	strh	r2, [r4, #14]
   178c4:	e7c61002 	strb	r1, [r6, r2]
   178c8:	e1c430bc 	strh	r3, [r4, #12]
   178cc:	eafffc54 	b	16a24 <ExecZ80+0x4bc>
   178d0:	e35e0000 	cmp	lr, #0
   178d4:	11a03883 	lslne	r3, r3, #17
   178d8:	151f23a0 	ldrne	r2, [pc, #-928]	; 17540 <ExecZ80+0xfd8>
   178dc:	e2855002 	add	r5, r5, #2
   178e0:	e1c450bc 	strh	r5, [r4, #12]
   178e4:	11a038a3 	lsrne	r3, r3, #17
   178e8:	17d20003 	ldrbne	r0, [r2, r3]
   178ec:	07d60003 	ldrbeq	r0, [r6, r3]
   178f0:	e1d430b0 	ldrh	r3, [r4]
   178f4:	e5d41001 	ldrb	r1, [r4, #1]
   178f8:	e3c330ff 	bic	r3, r3, #255	; 0xff
   178fc:	e1830000 	orr	r0, r3, r0
   17900:	ebffc4d0 	bl	8c48 <OutZ80>
   17904:	e1d430bc 	ldrh	r3, [r4, #12]
   17908:	eafffc45 	b	16a24 <ExecZ80+0x4bc>
   1790c:	e5d42000 	ldrb	r2, [r4]
   17910:	e3120001 	tst	r2, #1
   17914:	1a000a27 	bne	1a1b8 <ExecZ80+0x3c50>
   17918:	e35e0000 	cmp	lr, #0
   1791c:	151fc3e8 	ldrne	ip, [pc, #-1000]	; 1753c <ExecZ80+0xfd4>
   17920:	e2851002 	add	r1, r5, #2
   17924:	e6ff1071 	uxth	r1, r1
   17928:	151f03f0 	ldrne	r0, [pc, #-1008]	; 17540 <ExecZ80+0xfd8>
   1792c:	e1c410bc 	strh	r1, [r4, #12]
   17930:	1003300c 	andne	r3, r3, ip
   17934:	17d02003 	ldrbne	r2, [r0, r3]
   17938:	07d62003 	ldrbeq	r2, [r6, r3]
   1793c:	1001100c 	andne	r1, r1, ip
   17940:	17d03001 	ldrbne	r3, [r0, r1]
   17944:	07d63001 	ldrbeq	r3, [r6, r1]
   17948:	e6ef2072 	uxtb	r2, r2
   1794c:	e1823403 	orr	r3, r2, r3, lsl #8
   17950:	e1c430bc 	strh	r3, [r4, #12]
   17954:	eafffc32 	b	16a24 <ExecZ80+0x4bc>
   17958:	e1d410be 	ldrh	r1, [r4, #14]
   1795c:	e35e0000 	cmp	lr, #0
   17960:	e2812001 	add	r2, r1, #1
   17964:	e6ff2072 	uxth	r2, r2
   17968:	e2810002 	add	r0, r1, #2
   1796c:	e1c420be 	strh	r2, [r4, #14]
   17970:	e6ff0070 	uxth	r0, r0
   17974:	0a0009d9 	beq	1a0e0 <ExecZ80+0x3b78>
   17978:	e51fe444 	ldr	lr, [pc, #-1092]	; 1753c <ExecZ80+0xfd4>
   1797c:	e51fc444 	ldr	ip, [pc, #-1092]	; 17540 <ExecZ80+0xfd8>
   17980:	e001100e 	and	r1, r1, lr
   17984:	e7dc1001 	ldrb	r1, [ip, r1]
   17988:	e002200e 	and	r2, r2, lr
   1798c:	e5c41004 	strb	r1, [r4, #4]
   17990:	e1c400be 	strh	r0, [r4, #14]
   17994:	e7dc2002 	ldrb	r2, [ip, r2]
   17998:	e5c42005 	strb	r2, [r4, #5]
   1799c:	eafffc20 	b	16a24 <ExecZ80+0x4bc>
   179a0:	e35e0000 	cmp	lr, #0
   179a4:	e2850002 	add	r0, r5, #2
   179a8:	e6ff0070 	uxth	r0, r0
   179ac:	11a03883 	lslne	r3, r3, #17
   179b0:	151f2478 	ldrne	r2, [pc, #-1144]	; 17540 <ExecZ80+0xfd8>
   179b4:	e1c400bc 	strh	r0, [r4, #12]
   179b8:	11a038a3 	lsrne	r3, r3, #17
   179bc:	17d22003 	ldrbne	r2, [r2, r3]
   179c0:	07d62003 	ldrbeq	r2, [r6, r3]
   179c4:	e5d41001 	ldrb	r1, [r4, #1]
   179c8:	e1a03000 	mov	r3, r0
   179cc:	e041e002 	sub	lr, r1, r2
   179d0:	e6ffe07e 	uxth	lr, lr
   179d4:	e6ef007e 	uxtb	r0, lr
   179d8:	e08cc000 	add	ip, ip, r0
   179dc:	e0222001 	eor	r2, r2, r1
   179e0:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   179e4:	e021c000 	eor	ip, r1, r0
   179e8:	e0221000 	eor	r1, r2, r0
   179ec:	e3855002 	orr	r5, r5, #2
   179f0:	e002200c 	and	r2, r2, ip
   179f4:	e2011010 	and	r1, r1, #16
   179f8:	e1a0c42e 	lsr	ip, lr, #8
   179fc:	e1a022a2 	lsr	r2, r2, #5
   17a00:	e1811005 	orr	r1, r1, r5
   17a04:	e26cc000 	rsb	ip, ip, #0
   17a08:	e2022004 	and	r2, r2, #4
   17a0c:	e181100c 	orr	r1, r1, ip
   17a10:	e1812002 	orr	r2, r1, r2
   17a14:	e5c42000 	strb	r2, [r4]
   17a18:	e5c40001 	strb	r0, [r4, #1]
   17a1c:	eafffc00 	b	16a24 <ExecZ80+0x4bc>
   17a20:	e3a01010 	mov	r1, #16
   17a24:	e1d420be 	ldrh	r2, [r4, #14]
   17a28:	e1a03423 	lsr	r3, r3, #8
   17a2c:	e2422001 	sub	r2, r2, #1
   17a30:	e6ff2072 	uxth	r2, r2
   17a34:	e1c420be 	strh	r2, [r4, #14]
   17a38:	e7c63002 	strb	r3, [r6, r2]
   17a3c:	e1d430be 	ldrh	r3, [r4, #14]
   17a40:	e5d4200c 	ldrb	r2, [r4, #12]
   17a44:	e2433001 	sub	r3, r3, #1
   17a48:	e6ff3073 	uxth	r3, r3
   17a4c:	e1c430be 	strh	r3, [r4, #14]
   17a50:	e7c62003 	strb	r2, [r6, r3]
   17a54:	e1a03001 	mov	r3, r1
   17a58:	e1c410bc 	strh	r1, [r4, #12]
   17a5c:	eafffbf0 	b	16a24 <ExecZ80+0x4bc>
   17a60:	e1d430be 	ldrh	r3, [r4, #14]
   17a64:	e5d42005 	ldrb	r2, [r4, #5]
   17a68:	e2433001 	sub	r3, r3, #1
   17a6c:	e6ff3073 	uxth	r3, r3
   17a70:	e1c430be 	strh	r3, [r4, #14]
   17a74:	e7c62003 	strb	r2, [r6, r3]
   17a78:	e1d430be 	ldrh	r3, [r4, #14]
   17a7c:	e5d42004 	ldrb	r2, [r4, #4]
   17a80:	e2433001 	sub	r3, r3, #1
   17a84:	e6ff3073 	uxth	r3, r3
   17a88:	e1c430be 	strh	r3, [r4, #14]
   17a8c:	e7c62003 	strb	r2, [r6, r3]
   17a90:	e1d430bc 	ldrh	r3, [r4, #12]
   17a94:	eafffbe2 	b	16a24 <ExecZ80+0x4bc>
   17a98:	e35e0000 	cmp	lr, #0
   17a9c:	e2851002 	add	r1, r5, #2
   17aa0:	151f2568 	ldrne	r2, [pc, #-1384]	; 17540 <ExecZ80+0xfd8>
   17aa4:	e6ff1071 	uxth	r1, r1
   17aa8:	11a03883 	lslne	r3, r3, #17
   17aac:	e1c410bc 	strh	r1, [r4, #12]
   17ab0:	11a038a3 	lsrne	r3, r3, #17
   17ab4:	17d22003 	ldrbne	r2, [r2, r3]
   17ab8:	07d62003 	ldrbeq	r2, [r6, r3]
   17abc:	e5d4e001 	ldrb	lr, [r4, #1]
   17ac0:	e1a03001 	mov	r3, r1
   17ac4:	e08e5002 	add	r5, lr, r2
   17ac8:	e6ef0075 	uxtb	r0, r5
   17acc:	e02ee002 	eor	lr, lr, r2
   17ad0:	e08cc000 	add	ip, ip, r0
   17ad4:	e0222000 	eor	r2, r2, r0
   17ad8:	e02e1000 	eor	r1, lr, r0
   17adc:	e1c2200e 	bic	r2, r2, lr
   17ae0:	e2011010 	and	r1, r1, #16
   17ae4:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   17ae8:	e1a022c2 	asr	r2, r2, #5
   17aec:	e1811425 	orr	r1, r1, r5, lsr #8
   17af0:	e2022004 	and	r2, r2, #4
   17af4:	e181100c 	orr	r1, r1, ip
   17af8:	e1822001 	orr	r2, r2, r1
   17afc:	e5c42000 	strb	r2, [r4]
   17b00:	e5c40001 	strb	r0, [r4, #1]
   17b04:	eafffbc6 	b	16a24 <ExecZ80+0x4bc>
   17b08:	e1d430be 	ldrh	r3, [r4, #14]
   17b0c:	e5d42003 	ldrb	r2, [r4, #3]
   17b10:	e2433001 	sub	r3, r3, #1
   17b14:	e6ff3073 	uxth	r3, r3
   17b18:	e1c430be 	strh	r3, [r4, #14]
   17b1c:	e7c62003 	strb	r2, [r6, r3]
   17b20:	e1d430be 	ldrh	r3, [r4, #14]
   17b24:	e5d42002 	ldrb	r2, [r4, #2]
   17b28:	e2433001 	sub	r3, r3, #1
   17b2c:	e6ff3073 	uxth	r3, r3
   17b30:	e1c430be 	strh	r3, [r4, #14]
   17b34:	e7c62003 	strb	r2, [r6, r3]
   17b38:	e1d430bc 	ldrh	r3, [r4, #12]
   17b3c:	eafffbb8 	b	16a24 <ExecZ80+0x4bc>
   17b40:	e3a01000 	mov	r1, #0
   17b44:	e1d420be 	ldrh	r2, [r4, #14]
   17b48:	e1a03423 	lsr	r3, r3, #8
   17b4c:	e2422001 	sub	r2, r2, #1
   17b50:	e6ff2072 	uxth	r2, r2
   17b54:	e1c420be 	strh	r2, [r4, #14]
   17b58:	e7c63002 	strb	r3, [r6, r2]
   17b5c:	e1d430be 	ldrh	r3, [r4, #14]
   17b60:	e5d4200c 	ldrb	r2, [r4, #12]
   17b64:	e2433001 	sub	r3, r3, #1
   17b68:	e6ff3073 	uxth	r3, r3
   17b6c:	e1c430be 	strh	r3, [r4, #14]
   17b70:	e7c62003 	strb	r2, [r6, r3]
   17b74:	e1a03001 	mov	r3, r1
   17b78:	e1c410bc 	strh	r1, [r4, #12]
   17b7c:	eafffba8 	b	16a24 <ExecZ80+0x4bc>
   17b80:	e5d42000 	ldrb	r2, [r4]
   17b84:	e3120040 	tst	r2, #64	; 0x40
   17b88:	1a000976 	bne	1a168 <ExecZ80+0x3c00>
   17b8c:	e35e0000 	cmp	lr, #0
   17b90:	151fc65c 	ldrne	ip, [pc, #-1628]	; 1753c <ExecZ80+0xfd4>
   17b94:	e2851002 	add	r1, r5, #2
   17b98:	e6ff1071 	uxth	r1, r1
   17b9c:	151f0664 	ldrne	r0, [pc, #-1636]	; 17540 <ExecZ80+0xfd8>
   17ba0:	e1c410bc 	strh	r1, [r4, #12]
   17ba4:	1003300c 	andne	r3, r3, ip
   17ba8:	17d02003 	ldrbne	r2, [r0, r3]
   17bac:	07d62003 	ldrbeq	r2, [r6, r3]
   17bb0:	1001100c 	andne	r1, r1, ip
   17bb4:	17d03001 	ldrbne	r3, [r0, r1]
   17bb8:	07d63001 	ldrbeq	r3, [r6, r1]
   17bbc:	e6ef2072 	uxtb	r2, r2
   17bc0:	e1823403 	orr	r3, r2, r3, lsl #8
   17bc4:	e1c430bc 	strh	r3, [r4, #12]
   17bc8:	eafffb95 	b	16a24 <ExecZ80+0x4bc>
   17bcc:	e1d410be 	ldrh	r1, [r4, #14]
   17bd0:	e35e0000 	cmp	lr, #0
   17bd4:	e2812001 	add	r2, r1, #1
   17bd8:	e6ff2072 	uxth	r2, r2
   17bdc:	e2810002 	add	r0, r1, #2
   17be0:	e1c420be 	strh	r2, [r4, #14]
   17be4:	e6ff0070 	uxth	r0, r0
   17be8:	0a000950 	beq	1a130 <ExecZ80+0x3bc8>
   17bec:	e51fe6b8 	ldr	lr, [pc, #-1720]	; 1753c <ExecZ80+0xfd4>
   17bf0:	e51fc6b8 	ldr	ip, [pc, #-1720]	; 17540 <ExecZ80+0xfd8>
   17bf4:	e001100e 	and	r1, r1, lr
   17bf8:	e7dc1001 	ldrb	r1, [ip, r1]
   17bfc:	e002200e 	and	r2, r2, lr
   17c00:	e5c41002 	strb	r1, [r4, #2]
   17c04:	e1c400be 	strh	r0, [r4, #14]
   17c08:	e7dc2002 	ldrb	r2, [ip, r2]
   17c0c:	e5c42003 	strb	r2, [r4, #3]
   17c10:	eafffb83 	b	16a24 <ExecZ80+0x4bc>
   17c14:	e35e0000 	cmp	lr, #0
   17c18:	151fc6e4 	ldrne	ip, [pc, #-1764]	; 1753c <ExecZ80+0xfd4>
   17c1c:	e2851002 	add	r1, r5, #2
   17c20:	e6ff1071 	uxth	r1, r1
   17c24:	151f06ec 	ldrne	r0, [pc, #-1772]	; 17540 <ExecZ80+0xfd8>
   17c28:	e1c410bc 	strh	r1, [r4, #12]
   17c2c:	1003300c 	andne	r3, r3, ip
   17c30:	17d02003 	ldrbne	r2, [r0, r3]
   17c34:	07d62003 	ldrbeq	r2, [r6, r3]
   17c38:	1001100c 	andne	r1, r1, ip
   17c3c:	17d03001 	ldrbne	r3, [r0, r1]
   17c40:	07d63001 	ldrbeq	r3, [r6, r1]
   17c44:	e6ef2072 	uxtb	r2, r2
   17c48:	e1823403 	orr	r3, r2, r3, lsl #8
   17c4c:	e1c430bc 	strh	r3, [r4, #12]
   17c50:	eafffb73 	b	16a24 <ExecZ80+0x4bc>
   17c54:	e3a02042 	mov	r2, #66	; 0x42
   17c58:	e5c42000 	strb	r2, [r4]
   17c5c:	eafffb70 	b	16a24 <ExecZ80+0x4bc>
   17c60:	e1d420b6 	ldrh	r2, [r4, #6]
   17c64:	e35e0000 	cmp	lr, #0
   17c68:	11a02882 	lslne	r2, r2, #17
   17c6c:	151f1734 	ldrne	r1, [pc, #-1844]	; 17540 <ExecZ80+0xfd8>
   17c70:	11a028a2 	lsrne	r2, r2, #17
   17c74:	17d11002 	ldrbne	r1, [r1, r2]
   17c78:	07d61002 	ldrbeq	r1, [r6, r2]
   17c7c:	e5d4e001 	ldrb	lr, [r4, #1]
   17c80:	e04e0001 	sub	r0, lr, r1
   17c84:	e6ff0070 	uxth	r0, r0
   17c88:	e6ef2070 	uxtb	r2, r0
   17c8c:	e08cc002 	add	ip, ip, r2
   17c90:	e021100e 	eor	r1, r1, lr
   17c94:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   17c98:	e02ee002 	eor	lr, lr, r2
   17c9c:	e0222001 	eor	r2, r2, r1
   17ca0:	e38cc002 	orr	ip, ip, #2
   17ca4:	e001100e 	and	r1, r1, lr
   17ca8:	e2022010 	and	r2, r2, #16
   17cac:	e1a00420 	lsr	r0, r0, #8
   17cb0:	e1a012a1 	lsr	r1, r1, #5
   17cb4:	e182200c 	orr	r2, r2, ip
   17cb8:	e2600000 	rsb	r0, r0, #0
   17cbc:	e2011004 	and	r1, r1, #4
   17cc0:	e1822000 	orr	r2, r2, r0
   17cc4:	e1822001 	orr	r2, r2, r1
   17cc8:	e5c42000 	strb	r2, [r4]
   17ccc:	eafffb54 	b	16a24 <ExecZ80+0x4bc>
   17cd0:	e5d4e001 	ldrb	lr, [r4, #1]
   17cd4:	e5d41006 	ldrb	r1, [r4, #6]
   17cd8:	e04e0001 	sub	r0, lr, r1
   17cdc:	e6ff0070 	uxth	r0, r0
   17ce0:	e6ef2070 	uxtb	r2, r0
   17ce4:	e08cc002 	add	ip, ip, r2
   17ce8:	e021100e 	eor	r1, r1, lr
   17cec:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   17cf0:	e02ee002 	eor	lr, lr, r2
   17cf4:	e0222001 	eor	r2, r2, r1
   17cf8:	e38cc002 	orr	ip, ip, #2
   17cfc:	e001100e 	and	r1, r1, lr
   17d00:	e2022010 	and	r2, r2, #16
   17d04:	e1a00420 	lsr	r0, r0, #8
   17d08:	e1a012a1 	lsr	r1, r1, #5
   17d0c:	e182200c 	orr	r2, r2, ip
   17d10:	e2600000 	rsb	r0, r0, #0
   17d14:	e2011004 	and	r1, r1, #4
   17d18:	e1822000 	orr	r2, r2, r0
   17d1c:	e1822001 	orr	r2, r2, r1
   17d20:	e5c42000 	strb	r2, [r4]
   17d24:	eafffb3e 	b	16a24 <ExecZ80+0x4bc>
   17d28:	e5d4e001 	ldrb	lr, [r4, #1]
   17d2c:	e5d41007 	ldrb	r1, [r4, #7]
   17d30:	e04e0001 	sub	r0, lr, r1
   17d34:	e6ff0070 	uxth	r0, r0
   17d38:	e6ef2070 	uxtb	r2, r0
   17d3c:	e08cc002 	add	ip, ip, r2
   17d40:	e021100e 	eor	r1, r1, lr
   17d44:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   17d48:	e02ee002 	eor	lr, lr, r2
   17d4c:	e0222001 	eor	r2, r2, r1
   17d50:	e38cc002 	orr	ip, ip, #2
   17d54:	e001100e 	and	r1, r1, lr
   17d58:	e2022010 	and	r2, r2, #16
   17d5c:	e1a00420 	lsr	r0, r0, #8
   17d60:	e1a012a1 	lsr	r1, r1, #5
   17d64:	e182200c 	orr	r2, r2, ip
   17d68:	e2600000 	rsb	r0, r0, #0
   17d6c:	e2011004 	and	r1, r1, #4
   17d70:	e1822000 	orr	r2, r2, r0
   17d74:	e1822001 	orr	r2, r2, r1
   17d78:	e5c42000 	strb	r2, [r4]
   17d7c:	eafffb28 	b	16a24 <ExecZ80+0x4bc>
   17d80:	e5d4e001 	ldrb	lr, [r4, #1]
   17d84:	e5d41004 	ldrb	r1, [r4, #4]
   17d88:	e04e0001 	sub	r0, lr, r1
   17d8c:	e6ff0070 	uxth	r0, r0
   17d90:	e6ef2070 	uxtb	r2, r0
   17d94:	e08cc002 	add	ip, ip, r2
   17d98:	e021100e 	eor	r1, r1, lr
   17d9c:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   17da0:	e02ee002 	eor	lr, lr, r2
   17da4:	e0222001 	eor	r2, r2, r1
   17da8:	e38cc002 	orr	ip, ip, #2
   17dac:	e001100e 	and	r1, r1, lr
   17db0:	e2022010 	and	r2, r2, #16
   17db4:	e1a00420 	lsr	r0, r0, #8
   17db8:	e1a012a1 	lsr	r1, r1, #5
   17dbc:	e182200c 	orr	r2, r2, ip
   17dc0:	e2600000 	rsb	r0, r0, #0
   17dc4:	e2011004 	and	r1, r1, #4
   17dc8:	e1822000 	orr	r2, r2, r0
   17dcc:	e1822001 	orr	r2, r2, r1
   17dd0:	e5c42000 	strb	r2, [r4]
   17dd4:	eafffb12 	b	16a24 <ExecZ80+0x4bc>
   17dd8:	e5d4e001 	ldrb	lr, [r4, #1]
   17ddc:	e5d41005 	ldrb	r1, [r4, #5]
   17de0:	e04e0001 	sub	r0, lr, r1
   17de4:	e6ff0070 	uxth	r0, r0
   17de8:	e6ef2070 	uxtb	r2, r0
   17dec:	e08cc002 	add	ip, ip, r2
   17df0:	e021100e 	eor	r1, r1, lr
   17df4:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   17df8:	e02ee002 	eor	lr, lr, r2
   17dfc:	e0222001 	eor	r2, r2, r1
   17e00:	e38cc002 	orr	ip, ip, #2
   17e04:	e001100e 	and	r1, r1, lr
   17e08:	e2022010 	and	r2, r2, #16
   17e0c:	e1a00420 	lsr	r0, r0, #8
   17e10:	e1a012a1 	lsr	r1, r1, #5
   17e14:	e182200c 	orr	r2, r2, ip
   17e18:	e2600000 	rsb	r0, r0, #0
   17e1c:	e2011004 	and	r1, r1, #4
   17e20:	e1822000 	orr	r2, r2, r0
   17e24:	e1822001 	orr	r2, r2, r1
   17e28:	e5c42000 	strb	r2, [r4]
   17e2c:	eafffafc 	b	16a24 <ExecZ80+0x4bc>
   17e30:	e5d4e001 	ldrb	lr, [r4, #1]
   17e34:	e5d41002 	ldrb	r1, [r4, #2]
   17e38:	e04e0001 	sub	r0, lr, r1
   17e3c:	e6ff0070 	uxth	r0, r0
   17e40:	e6ef2070 	uxtb	r2, r0
   17e44:	e08cc002 	add	ip, ip, r2
   17e48:	e021100e 	eor	r1, r1, lr
   17e4c:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   17e50:	e02ee002 	eor	lr, lr, r2
   17e54:	e0222001 	eor	r2, r2, r1
   17e58:	e38cc002 	orr	ip, ip, #2
   17e5c:	e001100e 	and	r1, r1, lr
   17e60:	e2022010 	and	r2, r2, #16
   17e64:	e1a00420 	lsr	r0, r0, #8
   17e68:	e1a012a1 	lsr	r1, r1, #5
   17e6c:	e182200c 	orr	r2, r2, ip
   17e70:	e2600000 	rsb	r0, r0, #0
   17e74:	e2011004 	and	r1, r1, #4
   17e78:	e1822000 	orr	r2, r2, r0
   17e7c:	e1822001 	orr	r2, r2, r1
   17e80:	e5c42000 	strb	r2, [r4]
   17e84:	eafffae6 	b	16a24 <ExecZ80+0x4bc>
   17e88:	e5d4e001 	ldrb	lr, [r4, #1]
   17e8c:	e5d41003 	ldrb	r1, [r4, #3]
   17e90:	e04e0001 	sub	r0, lr, r1
   17e94:	e6ff0070 	uxth	r0, r0
   17e98:	e6ef2070 	uxtb	r2, r0
   17e9c:	e08cc002 	add	ip, ip, r2
   17ea0:	e021100e 	eor	r1, r1, lr
   17ea4:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   17ea8:	e02ee002 	eor	lr, lr, r2
   17eac:	e0222001 	eor	r2, r2, r1
   17eb0:	e38cc002 	orr	ip, ip, #2
   17eb4:	e001100e 	and	r1, r1, lr
   17eb8:	e2022010 	and	r2, r2, #16
   17ebc:	e1a00420 	lsr	r0, r0, #8
   17ec0:	e1a012a1 	lsr	r1, r1, #5
   17ec4:	e182200c 	orr	r2, r2, ip
   17ec8:	e2600000 	rsb	r0, r0, #0
   17ecc:	e2011004 	and	r1, r1, #4
   17ed0:	e1822000 	orr	r2, r2, r0
   17ed4:	e1822001 	orr	r2, r2, r1
   17ed8:	e5c42000 	strb	r2, [r4]
   17edc:	eafffad0 	b	16a24 <ExecZ80+0x4bc>
   17ee0:	e5d42001 	ldrb	r2, [r4, #1]
   17ee4:	e08cc002 	add	ip, ip, r2
   17ee8:	e5dc2100 	ldrb	r2, [ip, #256]	; 0x100
   17eec:	e5c42000 	strb	r2, [r4]
   17ef0:	eafffacb 	b	16a24 <ExecZ80+0x4bc>
   17ef4:	e1d420b6 	ldrh	r2, [r4, #6]
   17ef8:	e35e0000 	cmp	lr, #0
   17efc:	11a02882 	lslne	r2, r2, #17
   17f00:	151f19c8 	ldrne	r1, [pc, #-2504]	; 17540 <ExecZ80+0xfd8>
   17f04:	11a028a2 	lsrne	r2, r2, #17
   17f08:	17d12002 	ldrbne	r2, [r1, r2]
   17f0c:	07d62002 	ldrbeq	r2, [r6, r2]
   17f10:	e5d41001 	ldrb	r1, [r4, #1]
   17f14:	e1822001 	orr	r2, r2, r1
   17f18:	e08cc002 	add	ip, ip, r2
   17f1c:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   17f20:	e5c42001 	strb	r2, [r4, #1]
   17f24:	e5c41000 	strb	r1, [r4]
   17f28:	eafffabd 	b	16a24 <ExecZ80+0x4bc>
   17f2c:	e5d42001 	ldrb	r2, [r4, #1]
   17f30:	e5d41006 	ldrb	r1, [r4, #6]
   17f34:	e1822001 	orr	r2, r2, r1
   17f38:	e08cc002 	add	ip, ip, r2
   17f3c:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   17f40:	e5c42001 	strb	r2, [r4, #1]
   17f44:	e5c41000 	strb	r1, [r4]
   17f48:	eafffab5 	b	16a24 <ExecZ80+0x4bc>
   17f4c:	e5d42001 	ldrb	r2, [r4, #1]
   17f50:	e5d41007 	ldrb	r1, [r4, #7]
   17f54:	e1822001 	orr	r2, r2, r1
   17f58:	e08cc002 	add	ip, ip, r2
   17f5c:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   17f60:	e5c42001 	strb	r2, [r4, #1]
   17f64:	e5c41000 	strb	r1, [r4]
   17f68:	eafffaad 	b	16a24 <ExecZ80+0x4bc>
   17f6c:	e5d42001 	ldrb	r2, [r4, #1]
   17f70:	e5d41004 	ldrb	r1, [r4, #4]
   17f74:	e1822001 	orr	r2, r2, r1
   17f78:	e08cc002 	add	ip, ip, r2
   17f7c:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   17f80:	e5c42001 	strb	r2, [r4, #1]
   17f84:	e5c41000 	strb	r1, [r4]
   17f88:	eafffaa5 	b	16a24 <ExecZ80+0x4bc>
   17f8c:	e5d42001 	ldrb	r2, [r4, #1]
   17f90:	e5d41005 	ldrb	r1, [r4, #5]
   17f94:	e1822001 	orr	r2, r2, r1
   17f98:	e08cc002 	add	ip, ip, r2
   17f9c:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   17fa0:	e5c42001 	strb	r2, [r4, #1]
   17fa4:	e5c41000 	strb	r1, [r4]
   17fa8:	eafffa9d 	b	16a24 <ExecZ80+0x4bc>
   17fac:	e5d42001 	ldrb	r2, [r4, #1]
   17fb0:	e5d41002 	ldrb	r1, [r4, #2]
   17fb4:	e1822001 	orr	r2, r2, r1
   17fb8:	e08cc002 	add	ip, ip, r2
   17fbc:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   17fc0:	e5c42001 	strb	r2, [r4, #1]
   17fc4:	e5c41000 	strb	r1, [r4]
   17fc8:	eafffa95 	b	16a24 <ExecZ80+0x4bc>
   17fcc:	e5d42001 	ldrb	r2, [r4, #1]
   17fd0:	e5d41003 	ldrb	r1, [r4, #3]
   17fd4:	e1822001 	orr	r2, r2, r1
   17fd8:	e08cc002 	add	ip, ip, r2
   17fdc:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   17fe0:	e5c42001 	strb	r2, [r4, #1]
   17fe4:	e5c41000 	strb	r1, [r4]
   17fe8:	eafffa8d 	b	16a24 <ExecZ80+0x4bc>
   17fec:	e3a02044 	mov	r2, #68	; 0x44
   17ff0:	e1c420b0 	strh	r2, [r4]
   17ff4:	eafffa8a 	b	16a24 <ExecZ80+0x4bc>
   17ff8:	e1d420b6 	ldrh	r2, [r4, #6]
   17ffc:	e35e0000 	cmp	lr, #0
   18000:	11a02882 	lslne	r2, r2, #17
   18004:	151f1acc 	ldrne	r1, [pc, #-2764]	; 17540 <ExecZ80+0xfd8>
   18008:	11a028a2 	lsrne	r2, r2, #17
   1800c:	17d12002 	ldrbne	r2, [r1, r2]
   18010:	07d62002 	ldrbeq	r2, [r6, r2]
   18014:	e5d41001 	ldrb	r1, [r4, #1]
   18018:	e0222001 	eor	r2, r2, r1
   1801c:	e08cc002 	add	ip, ip, r2
   18020:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   18024:	e5c42001 	strb	r2, [r4, #1]
   18028:	e5c41000 	strb	r1, [r4]
   1802c:	eafffa7c 	b	16a24 <ExecZ80+0x4bc>
   18030:	e5d42001 	ldrb	r2, [r4, #1]
   18034:	e5d41006 	ldrb	r1, [r4, #6]
   18038:	e0222001 	eor	r2, r2, r1
   1803c:	e08cc002 	add	ip, ip, r2
   18040:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   18044:	e5c42001 	strb	r2, [r4, #1]
   18048:	e5c41000 	strb	r1, [r4]
   1804c:	eafffa74 	b	16a24 <ExecZ80+0x4bc>
   18050:	e5d42001 	ldrb	r2, [r4, #1]
   18054:	e5d41007 	ldrb	r1, [r4, #7]
   18058:	e0222001 	eor	r2, r2, r1
   1805c:	e08cc002 	add	ip, ip, r2
   18060:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   18064:	e5c42001 	strb	r2, [r4, #1]
   18068:	e5c41000 	strb	r1, [r4]
   1806c:	eafffa6c 	b	16a24 <ExecZ80+0x4bc>
   18070:	e5d42001 	ldrb	r2, [r4, #1]
   18074:	e5d41004 	ldrb	r1, [r4, #4]
   18078:	e0222001 	eor	r2, r2, r1
   1807c:	e08cc002 	add	ip, ip, r2
   18080:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   18084:	e5c42001 	strb	r2, [r4, #1]
   18088:	e5c41000 	strb	r1, [r4]
   1808c:	eafffa64 	b	16a24 <ExecZ80+0x4bc>
   18090:	e5d42001 	ldrb	r2, [r4, #1]
   18094:	e5d41005 	ldrb	r1, [r4, #5]
   18098:	e0222001 	eor	r2, r2, r1
   1809c:	e08cc002 	add	ip, ip, r2
   180a0:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   180a4:	e5c42001 	strb	r2, [r4, #1]
   180a8:	e5c41000 	strb	r1, [r4]
   180ac:	eafffa5c 	b	16a24 <ExecZ80+0x4bc>
   180b0:	e5d42001 	ldrb	r2, [r4, #1]
   180b4:	e5d41002 	ldrb	r1, [r4, #2]
   180b8:	e0222001 	eor	r2, r2, r1
   180bc:	e08cc002 	add	ip, ip, r2
   180c0:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   180c4:	e5c42001 	strb	r2, [r4, #1]
   180c8:	e5c41000 	strb	r1, [r4]
   180cc:	eafffa54 	b	16a24 <ExecZ80+0x4bc>
   180d0:	e5d42001 	ldrb	r2, [r4, #1]
   180d4:	e5d41003 	ldrb	r1, [r4, #3]
   180d8:	e0222001 	eor	r2, r2, r1
   180dc:	e08cc002 	add	ip, ip, r2
   180e0:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   180e4:	e5c42001 	strb	r2, [r4, #1]
   180e8:	e5c41000 	strb	r1, [r4]
   180ec:	eafffa4c 	b	16a24 <ExecZ80+0x4bc>
   180f0:	e5d42001 	ldrb	r2, [r4, #1]
   180f4:	e08cc002 	add	ip, ip, r2
   180f8:	e5dc2100 	ldrb	r2, [ip, #256]	; 0x100
   180fc:	e3822010 	orr	r2, r2, #16
   18100:	e5c42000 	strb	r2, [r4]
   18104:	eafffa46 	b	16a24 <ExecZ80+0x4bc>
   18108:	e1d420b6 	ldrh	r2, [r4, #6]
   1810c:	e35e0000 	cmp	lr, #0
   18110:	11a02882 	lslne	r2, r2, #17
   18114:	151f1bdc 	ldrne	r1, [pc, #-3036]	; 17540 <ExecZ80+0xfd8>
   18118:	11a028a2 	lsrne	r2, r2, #17
   1811c:	17d12002 	ldrbne	r2, [r1, r2]
   18120:	07d62002 	ldrbeq	r2, [r6, r2]
   18124:	e5d41001 	ldrb	r1, [r4, #1]
   18128:	e0022001 	and	r2, r2, r1
   1812c:	e08cc002 	add	ip, ip, r2
   18130:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   18134:	e5c42001 	strb	r2, [r4, #1]
   18138:	e3812010 	orr	r2, r1, #16
   1813c:	e5c42000 	strb	r2, [r4]
   18140:	eafffa37 	b	16a24 <ExecZ80+0x4bc>
   18144:	e5d42001 	ldrb	r2, [r4, #1]
   18148:	e5d41006 	ldrb	r1, [r4, #6]
   1814c:	e0022001 	and	r2, r2, r1
   18150:	e08cc002 	add	ip, ip, r2
   18154:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   18158:	e5c42001 	strb	r2, [r4, #1]
   1815c:	e3812010 	orr	r2, r1, #16
   18160:	e5c42000 	strb	r2, [r4]
   18164:	eafffa2e 	b	16a24 <ExecZ80+0x4bc>
   18168:	e5d42001 	ldrb	r2, [r4, #1]
   1816c:	e5d41007 	ldrb	r1, [r4, #7]
   18170:	e0022001 	and	r2, r2, r1
   18174:	e08cc002 	add	ip, ip, r2
   18178:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   1817c:	e5c42001 	strb	r2, [r4, #1]
   18180:	e3812010 	orr	r2, r1, #16
   18184:	e5c42000 	strb	r2, [r4]
   18188:	eafffa25 	b	16a24 <ExecZ80+0x4bc>
   1818c:	e5d42001 	ldrb	r2, [r4, #1]
   18190:	e5d41004 	ldrb	r1, [r4, #4]
   18194:	e0022001 	and	r2, r2, r1
   18198:	e08cc002 	add	ip, ip, r2
   1819c:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   181a0:	e5c42001 	strb	r2, [r4, #1]
   181a4:	e3812010 	orr	r2, r1, #16
   181a8:	e5c42000 	strb	r2, [r4]
   181ac:	eafffa1c 	b	16a24 <ExecZ80+0x4bc>
   181b0:	e5d42001 	ldrb	r2, [r4, #1]
   181b4:	e5d41005 	ldrb	r1, [r4, #5]
   181b8:	e0022001 	and	r2, r2, r1
   181bc:	e08cc002 	add	ip, ip, r2
   181c0:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   181c4:	e5c42001 	strb	r2, [r4, #1]
   181c8:	e3812010 	orr	r2, r1, #16
   181cc:	e5c42000 	strb	r2, [r4]
   181d0:	eafffa13 	b	16a24 <ExecZ80+0x4bc>
   181d4:	e5d42001 	ldrb	r2, [r4, #1]
   181d8:	e5d41002 	ldrb	r1, [r4, #2]
   181dc:	e0022001 	and	r2, r2, r1
   181e0:	e08cc002 	add	ip, ip, r2
   181e4:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   181e8:	e5c42001 	strb	r2, [r4, #1]
   181ec:	e3812010 	orr	r2, r1, #16
   181f0:	e5c42000 	strb	r2, [r4]
   181f4:	eafffa0a 	b	16a24 <ExecZ80+0x4bc>
   181f8:	e5d42001 	ldrb	r2, [r4, #1]
   181fc:	e5d41003 	ldrb	r1, [r4, #3]
   18200:	e0022001 	and	r2, r2, r1
   18204:	e08cc002 	add	ip, ip, r2
   18208:	e5dc1100 	ldrb	r1, [ip, #256]	; 0x100
   1820c:	e5c42001 	strb	r2, [r4, #1]
   18210:	e3812010 	orr	r2, r1, #16
   18214:	e5c42000 	strb	r2, [r4]
   18218:	eafffa01 	b	16a24 <ExecZ80+0x4bc>
   1821c:	e5d42000 	ldrb	r2, [r4]
   18220:	e2122001 	ands	r2, r2, #1
   18224:	13e02000 	mvnne	r2, #0
   18228:	e6ff2072 	uxth	r2, r2
   1822c:	e6ef1072 	uxtb	r1, r2
   18230:	e1a02422 	lsr	r2, r2, #8
   18234:	e2622000 	rsb	r2, r2, #0
   18238:	e08cc001 	add	ip, ip, r1
   1823c:	e201e010 	and	lr, r1, #16
   18240:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   18244:	e182200e 	orr	r2, r2, lr
   18248:	e3822002 	orr	r2, r2, #2
   1824c:	e1822000 	orr	r2, r2, r0
   18250:	e5c41001 	strb	r1, [r4, #1]
   18254:	e5c42000 	strb	r2, [r4]
   18258:	eafff9f1 	b	16a24 <ExecZ80+0x4bc>
   1825c:	e1d420b6 	ldrh	r2, [r4, #6]
   18260:	e35e0000 	cmp	lr, #0
   18264:	11a02882 	lslne	r2, r2, #17
   18268:	151f1d30 	ldrne	r1, [pc, #-3376]	; 17540 <ExecZ80+0xfd8>
   1826c:	11a028a2 	lsrne	r2, r2, #17
   18270:	17d1e002 	ldrbne	lr, [r1, r2]
   18274:	07d6e002 	ldrbeq	lr, [r6, r2]
   18278:	e5d41001 	ldrb	r1, [r4, #1]
   1827c:	e5d40000 	ldrb	r0, [r4]
   18280:	e041200e 	sub	r2, r1, lr
   18284:	e2000001 	and	r0, r0, #1
   18288:	e0422000 	sub	r2, r2, r0
   1828c:	e6ff2072 	uxth	r2, r2
   18290:	e6ef0072 	uxtb	r0, r2
   18294:	e08cc000 	add	ip, ip, r0
   18298:	e1a02422 	lsr	r2, r2, #8
   1829c:	e02ee001 	eor	lr, lr, r1
   182a0:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   182a4:	e0211000 	eor	r1, r1, r0
   182a8:	e2622000 	rsb	r2, r2, #0
   182ac:	e001100e 	and	r1, r1, lr
   182b0:	e3822002 	orr	r2, r2, #2
   182b4:	e020c00e 	eor	ip, r0, lr
   182b8:	e1a012a1 	lsr	r1, r1, #5
   182bc:	e1822005 	orr	r2, r2, r5
   182c0:	e20cc010 	and	ip, ip, #16
   182c4:	e2011004 	and	r1, r1, #4
   182c8:	e182200c 	orr	r2, r2, ip
   182cc:	e1822001 	orr	r2, r2, r1
   182d0:	e5c42000 	strb	r2, [r4]
   182d4:	e5c40001 	strb	r0, [r4, #1]
   182d8:	eafff9d1 	b	16a24 <ExecZ80+0x4bc>
   182dc:	e5d41001 	ldrb	r1, [r4, #1]
   182e0:	e5d4e006 	ldrb	lr, [r4, #6]
   182e4:	e5d40000 	ldrb	r0, [r4]
   182e8:	e041200e 	sub	r2, r1, lr
   182ec:	e2000001 	and	r0, r0, #1
   182f0:	e0422000 	sub	r2, r2, r0
   182f4:	e6ff2072 	uxth	r2, r2
   182f8:	e6ef0072 	uxtb	r0, r2
   182fc:	e08cc000 	add	ip, ip, r0
   18300:	e1a02422 	lsr	r2, r2, #8
   18304:	e02ee001 	eor	lr, lr, r1
   18308:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   1830c:	e0211000 	eor	r1, r1, r0
   18310:	e2622000 	rsb	r2, r2, #0
   18314:	e001100e 	and	r1, r1, lr
   18318:	e3822002 	orr	r2, r2, #2
   1831c:	e020c00e 	eor	ip, r0, lr
   18320:	e1a012a1 	lsr	r1, r1, #5
   18324:	e1822005 	orr	r2, r2, r5
   18328:	e20cc010 	and	ip, ip, #16
   1832c:	e2011004 	and	r1, r1, #4
   18330:	e182200c 	orr	r2, r2, ip
   18334:	e1822001 	orr	r2, r2, r1
   18338:	e5c42000 	strb	r2, [r4]
   1833c:	e5c40001 	strb	r0, [r4, #1]
   18340:	eafff9b7 	b	16a24 <ExecZ80+0x4bc>
   18344:	e5d41001 	ldrb	r1, [r4, #1]
   18348:	e5d4e007 	ldrb	lr, [r4, #7]
   1834c:	e5d40000 	ldrb	r0, [r4]
   18350:	e041200e 	sub	r2, r1, lr
   18354:	e2000001 	and	r0, r0, #1
   18358:	e0422000 	sub	r2, r2, r0
   1835c:	e6ff2072 	uxth	r2, r2
   18360:	e6ef0072 	uxtb	r0, r2
   18364:	e08cc000 	add	ip, ip, r0
   18368:	e1a02422 	lsr	r2, r2, #8
   1836c:	e02ee001 	eor	lr, lr, r1
   18370:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   18374:	e0211000 	eor	r1, r1, r0
   18378:	e2622000 	rsb	r2, r2, #0
   1837c:	e001100e 	and	r1, r1, lr
   18380:	e3822002 	orr	r2, r2, #2
   18384:	e02ec000 	eor	ip, lr, r0
   18388:	e1a012a1 	lsr	r1, r1, #5
   1838c:	e1822005 	orr	r2, r2, r5
   18390:	e20cc010 	and	ip, ip, #16
   18394:	e2011004 	and	r1, r1, #4
   18398:	e182200c 	orr	r2, r2, ip
   1839c:	e1822001 	orr	r2, r2, r1
   183a0:	e5c42000 	strb	r2, [r4]
   183a4:	e5c40001 	strb	r0, [r4, #1]
   183a8:	eafff99d 	b	16a24 <ExecZ80+0x4bc>
   183ac:	e5d41001 	ldrb	r1, [r4, #1]
   183b0:	e5d4e004 	ldrb	lr, [r4, #4]
   183b4:	e5d40000 	ldrb	r0, [r4]
   183b8:	e041200e 	sub	r2, r1, lr
   183bc:	e2000001 	and	r0, r0, #1
   183c0:	e0422000 	sub	r2, r2, r0
   183c4:	e6ff2072 	uxth	r2, r2
   183c8:	e6ef0072 	uxtb	r0, r2
   183cc:	e08cc000 	add	ip, ip, r0
   183d0:	e1a02422 	lsr	r2, r2, #8
   183d4:	e02ee001 	eor	lr, lr, r1
   183d8:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   183dc:	e0211000 	eor	r1, r1, r0
   183e0:	e2622000 	rsb	r2, r2, #0
   183e4:	e001100e 	and	r1, r1, lr
   183e8:	e3822002 	orr	r2, r2, #2
   183ec:	e02ec000 	eor	ip, lr, r0
   183f0:	e1a012a1 	lsr	r1, r1, #5
   183f4:	e1822005 	orr	r2, r2, r5
   183f8:	e20cc010 	and	ip, ip, #16
   183fc:	e2011004 	and	r1, r1, #4
   18400:	e182200c 	orr	r2, r2, ip
   18404:	e1822001 	orr	r2, r2, r1
   18408:	e5c42000 	strb	r2, [r4]
   1840c:	e5c40001 	strb	r0, [r4, #1]
   18410:	eafff983 	b	16a24 <ExecZ80+0x4bc>
   18414:	e5d41001 	ldrb	r1, [r4, #1]
   18418:	e5d4e005 	ldrb	lr, [r4, #5]
   1841c:	e5d40000 	ldrb	r0, [r4]
   18420:	e041200e 	sub	r2, r1, lr
   18424:	e2000001 	and	r0, r0, #1
   18428:	e0422000 	sub	r2, r2, r0
   1842c:	e6ff2072 	uxth	r2, r2
   18430:	e6ef0072 	uxtb	r0, r2
   18434:	e08cc000 	add	ip, ip, r0
   18438:	e1a02422 	lsr	r2, r2, #8
   1843c:	e02ee001 	eor	lr, lr, r1
   18440:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   18444:	e0211000 	eor	r1, r1, r0
   18448:	e2622000 	rsb	r2, r2, #0
   1844c:	e001100e 	and	r1, r1, lr
   18450:	e3822002 	orr	r2, r2, #2
   18454:	e02ec000 	eor	ip, lr, r0
   18458:	e1a012a1 	lsr	r1, r1, #5
   1845c:	e1822005 	orr	r2, r2, r5
   18460:	e20cc010 	and	ip, ip, #16
   18464:	e2011004 	and	r1, r1, #4
   18468:	e182200c 	orr	r2, r2, ip
   1846c:	e1822001 	orr	r2, r2, r1
   18470:	e5c42000 	strb	r2, [r4]
   18474:	e5c40001 	strb	r0, [r4, #1]
   18478:	eafff969 	b	16a24 <ExecZ80+0x4bc>
   1847c:	e5d41001 	ldrb	r1, [r4, #1]
   18480:	e5d4e002 	ldrb	lr, [r4, #2]
   18484:	e5d40000 	ldrb	r0, [r4]
   18488:	e041200e 	sub	r2, r1, lr
   1848c:	e2000001 	and	r0, r0, #1
   18490:	e0422000 	sub	r2, r2, r0
   18494:	e6ff2072 	uxth	r2, r2
   18498:	e6ef0072 	uxtb	r0, r2
   1849c:	e08cc000 	add	ip, ip, r0
   184a0:	e1a02422 	lsr	r2, r2, #8
   184a4:	e02ee001 	eor	lr, lr, r1
   184a8:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   184ac:	e0211000 	eor	r1, r1, r0
   184b0:	e2622000 	rsb	r2, r2, #0
   184b4:	e001100e 	and	r1, r1, lr
   184b8:	e3822002 	orr	r2, r2, #2
   184bc:	e02ec000 	eor	ip, lr, r0
   184c0:	e1a012a1 	lsr	r1, r1, #5
   184c4:	e1822005 	orr	r2, r2, r5
   184c8:	e20cc010 	and	ip, ip, #16
   184cc:	e2011004 	and	r1, r1, #4
   184d0:	e182200c 	orr	r2, r2, ip
   184d4:	e1822001 	orr	r2, r2, r1
   184d8:	e5c42000 	strb	r2, [r4]
   184dc:	e5c40001 	strb	r0, [r4, #1]
   184e0:	eafff94f 	b	16a24 <ExecZ80+0x4bc>
   184e4:	e5d41001 	ldrb	r1, [r4, #1]
   184e8:	e5d4e003 	ldrb	lr, [r4, #3]
   184ec:	e5d40000 	ldrb	r0, [r4]
   184f0:	e041200e 	sub	r2, r1, lr
   184f4:	e2000001 	and	r0, r0, #1
   184f8:	e0422000 	sub	r2, r2, r0
   184fc:	e6ff2072 	uxth	r2, r2
   18500:	e6ef0072 	uxtb	r0, r2
   18504:	e08cc000 	add	ip, ip, r0
   18508:	e1a02422 	lsr	r2, r2, #8
   1850c:	e02ee001 	eor	lr, lr, r1
   18510:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   18514:	e0211000 	eor	r1, r1, r0
   18518:	e2622000 	rsb	r2, r2, #0
   1851c:	e001100e 	and	r1, r1, lr
   18520:	e3822002 	orr	r2, r2, #2
   18524:	e020c00e 	eor	ip, r0, lr
   18528:	e1a012a1 	lsr	r1, r1, #5
   1852c:	e1822005 	orr	r2, r2, r5
   18530:	e20cc010 	and	ip, ip, #16
   18534:	e2011004 	and	r1, r1, #4
   18538:	e182200c 	orr	r2, r2, ip
   1853c:	e1822001 	orr	r2, r2, r1
   18540:	e5c42000 	strb	r2, [r4]
   18544:	e5c40001 	strb	r0, [r4, #1]
   18548:	eafff935 	b	16a24 <ExecZ80+0x4bc>
   1854c:	e3a02042 	mov	r2, #66	; 0x42
   18550:	e1c420b0 	strh	r2, [r4]
   18554:	eafff932 	b	16a24 <ExecZ80+0x4bc>
   18558:	e1d420b6 	ldrh	r2, [r4, #6]
   1855c:	e35e0000 	cmp	lr, #0
   18560:	11a02882 	lslne	r2, r2, #17
   18564:	159f1fec 	ldrne	r1, [pc, #4076]	; 19558 <ExecZ80+0x2ff0>
   18568:	11a028a2 	lsrne	r2, r2, #17
   1856c:	17d12002 	ldrbne	r2, [r1, r2]
   18570:	07d62002 	ldrbeq	r2, [r6, r2]
   18574:	e5d41001 	ldrb	r1, [r4, #1]
   18578:	e041e002 	sub	lr, r1, r2
   1857c:	e6ffe07e 	uxth	lr, lr
   18580:	e6ef007e 	uxtb	r0, lr
   18584:	e08cc000 	add	ip, ip, r0
   18588:	e0222001 	eor	r2, r2, r1
   1858c:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   18590:	e021c000 	eor	ip, r1, r0
   18594:	e0221000 	eor	r1, r2, r0
   18598:	e3855002 	orr	r5, r5, #2
   1859c:	e002200c 	and	r2, r2, ip
   185a0:	e2011010 	and	r1, r1, #16
   185a4:	e1a0c42e 	lsr	ip, lr, #8
   185a8:	e1a022a2 	lsr	r2, r2, #5
   185ac:	e1811005 	orr	r1, r1, r5
   185b0:	e26cc000 	rsb	ip, ip, #0
   185b4:	e2022004 	and	r2, r2, #4
   185b8:	e181100c 	orr	r1, r1, ip
   185bc:	e1812002 	orr	r2, r1, r2
   185c0:	e5c42000 	strb	r2, [r4]
   185c4:	e5c40001 	strb	r0, [r4, #1]
   185c8:	eafff915 	b	16a24 <ExecZ80+0x4bc>
   185cc:	e5d41001 	ldrb	r1, [r4, #1]
   185d0:	e5d42006 	ldrb	r2, [r4, #6]
   185d4:	e041e002 	sub	lr, r1, r2
   185d8:	e6ffe07e 	uxth	lr, lr
   185dc:	e6ef007e 	uxtb	r0, lr
   185e0:	e08cc000 	add	ip, ip, r0
   185e4:	e0222001 	eor	r2, r2, r1
   185e8:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   185ec:	e021c000 	eor	ip, r1, r0
   185f0:	e0221000 	eor	r1, r2, r0
   185f4:	e3855002 	orr	r5, r5, #2
   185f8:	e002200c 	and	r2, r2, ip
   185fc:	e2011010 	and	r1, r1, #16
   18600:	e1a0c42e 	lsr	ip, lr, #8
   18604:	e1a022a2 	lsr	r2, r2, #5
   18608:	e1811005 	orr	r1, r1, r5
   1860c:	e26cc000 	rsb	ip, ip, #0
   18610:	e2022004 	and	r2, r2, #4
   18614:	e181100c 	orr	r1, r1, ip
   18618:	e1812002 	orr	r2, r1, r2
   1861c:	e5c42000 	strb	r2, [r4]
   18620:	e5c40001 	strb	r0, [r4, #1]
   18624:	eafff8fe 	b	16a24 <ExecZ80+0x4bc>
   18628:	e5d41001 	ldrb	r1, [r4, #1]
   1862c:	e5d42007 	ldrb	r2, [r4, #7]
   18630:	e041e002 	sub	lr, r1, r2
   18634:	e6ffe07e 	uxth	lr, lr
   18638:	e6ef007e 	uxtb	r0, lr
   1863c:	e08cc000 	add	ip, ip, r0
   18640:	e0222001 	eor	r2, r2, r1
   18644:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   18648:	e021c000 	eor	ip, r1, r0
   1864c:	e0221000 	eor	r1, r2, r0
   18650:	e3855002 	orr	r5, r5, #2
   18654:	e002200c 	and	r2, r2, ip
   18658:	e2011010 	and	r1, r1, #16
   1865c:	e1a0c42e 	lsr	ip, lr, #8
   18660:	e1a022a2 	lsr	r2, r2, #5
   18664:	e1811005 	orr	r1, r1, r5
   18668:	e26cc000 	rsb	ip, ip, #0
   1866c:	e2022004 	and	r2, r2, #4
   18670:	e181100c 	orr	r1, r1, ip
   18674:	e1812002 	orr	r2, r1, r2
   18678:	e5c42000 	strb	r2, [r4]
   1867c:	e5c40001 	strb	r0, [r4, #1]
   18680:	eafff8e7 	b	16a24 <ExecZ80+0x4bc>
   18684:	e5d41001 	ldrb	r1, [r4, #1]
   18688:	e5d42004 	ldrb	r2, [r4, #4]
   1868c:	e041e002 	sub	lr, r1, r2
   18690:	e6ffe07e 	uxth	lr, lr
   18694:	e6ef007e 	uxtb	r0, lr
   18698:	e08cc000 	add	ip, ip, r0
   1869c:	e0222001 	eor	r2, r2, r1
   186a0:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   186a4:	e021c000 	eor	ip, r1, r0
   186a8:	e0221000 	eor	r1, r2, r0
   186ac:	e3855002 	orr	r5, r5, #2
   186b0:	e002200c 	and	r2, r2, ip
   186b4:	e2011010 	and	r1, r1, #16
   186b8:	e1a0c42e 	lsr	ip, lr, #8
   186bc:	e1a022a2 	lsr	r2, r2, #5
   186c0:	e1811005 	orr	r1, r1, r5
   186c4:	e26cc000 	rsb	ip, ip, #0
   186c8:	e2022004 	and	r2, r2, #4
   186cc:	e181100c 	orr	r1, r1, ip
   186d0:	e1812002 	orr	r2, r1, r2
   186d4:	e5c42000 	strb	r2, [r4]
   186d8:	e5c40001 	strb	r0, [r4, #1]
   186dc:	eafff8d0 	b	16a24 <ExecZ80+0x4bc>
   186e0:	e5d41001 	ldrb	r1, [r4, #1]
   186e4:	e5d42005 	ldrb	r2, [r4, #5]
   186e8:	e041e002 	sub	lr, r1, r2
   186ec:	e6ffe07e 	uxth	lr, lr
   186f0:	e6ef007e 	uxtb	r0, lr
   186f4:	e08cc000 	add	ip, ip, r0
   186f8:	e0222001 	eor	r2, r2, r1
   186fc:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   18700:	e021c000 	eor	ip, r1, r0
   18704:	e0221000 	eor	r1, r2, r0
   18708:	e3855002 	orr	r5, r5, #2
   1870c:	e002200c 	and	r2, r2, ip
   18710:	e2011010 	and	r1, r1, #16
   18714:	e1a0c42e 	lsr	ip, lr, #8
   18718:	e1a022a2 	lsr	r2, r2, #5
   1871c:	e1811005 	orr	r1, r1, r5
   18720:	e26cc000 	rsb	ip, ip, #0
   18724:	e2022004 	and	r2, r2, #4
   18728:	e181100c 	orr	r1, r1, ip
   1872c:	e1812002 	orr	r2, r1, r2
   18730:	e5c42000 	strb	r2, [r4]
   18734:	e5c40001 	strb	r0, [r4, #1]
   18738:	eafff8b9 	b	16a24 <ExecZ80+0x4bc>
   1873c:	e5d41001 	ldrb	r1, [r4, #1]
   18740:	e5d42002 	ldrb	r2, [r4, #2]
   18744:	e041e002 	sub	lr, r1, r2
   18748:	e6ffe07e 	uxth	lr, lr
   1874c:	e6ef007e 	uxtb	r0, lr
   18750:	e08cc000 	add	ip, ip, r0
   18754:	e0222001 	eor	r2, r2, r1
   18758:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   1875c:	e021c000 	eor	ip, r1, r0
   18760:	e0221000 	eor	r1, r2, r0
   18764:	e3855002 	orr	r5, r5, #2
   18768:	e002200c 	and	r2, r2, ip
   1876c:	e2011010 	and	r1, r1, #16
   18770:	e1a0c42e 	lsr	ip, lr, #8
   18774:	e1a022a2 	lsr	r2, r2, #5
   18778:	e1811005 	orr	r1, r1, r5
   1877c:	e26cc000 	rsb	ip, ip, #0
   18780:	e2022004 	and	r2, r2, #4
   18784:	e181100c 	orr	r1, r1, ip
   18788:	e1812002 	orr	r2, r1, r2
   1878c:	e5c42000 	strb	r2, [r4]
   18790:	e5c40001 	strb	r0, [r4, #1]
   18794:	eafff8a2 	b	16a24 <ExecZ80+0x4bc>
   18798:	e5d41001 	ldrb	r1, [r4, #1]
   1879c:	e5d42003 	ldrb	r2, [r4, #3]
   187a0:	e041e002 	sub	lr, r1, r2
   187a4:	e6ffe07e 	uxth	lr, lr
   187a8:	e6ef007e 	uxtb	r0, lr
   187ac:	e08cc000 	add	ip, ip, r0
   187b0:	e0222001 	eor	r2, r2, r1
   187b4:	e5dc5300 	ldrb	r5, [ip, #768]	; 0x300
   187b8:	e021c000 	eor	ip, r1, r0
   187bc:	e0221000 	eor	r1, r2, r0
   187c0:	e3855002 	orr	r5, r5, #2
   187c4:	e002200c 	and	r2, r2, ip
   187c8:	e2011010 	and	r1, r1, #16
   187cc:	e1a0c42e 	lsr	ip, lr, #8
   187d0:	e1a022a2 	lsr	r2, r2, #5
   187d4:	e1811005 	orr	r1, r1, r5
   187d8:	e26cc000 	rsb	ip, ip, #0
   187dc:	e2022004 	and	r2, r2, #4
   187e0:	e181100c 	orr	r1, r1, ip
   187e4:	e1812002 	orr	r2, r1, r2
   187e8:	e5c42000 	strb	r2, [r4]
   187ec:	e5c40001 	strb	r0, [r4, #1]
   187f0:	eafff88b 	b	16a24 <ExecZ80+0x4bc>
   187f4:	e5d41000 	ldrb	r1, [r4]
   187f8:	e5d42001 	ldrb	r2, [r4, #1]
   187fc:	e2011001 	and	r1, r1, #1
   18800:	e0810082 	add	r0, r1, r2, lsl #1
   18804:	e6efe070 	uxtb	lr, r0
   18808:	e08cc00e 	add	ip, ip, lr
   1880c:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18810:	e022200e 	eor	r2, r2, lr
   18814:	e2001010 	and	r1, r0, #16
   18818:	e1a022a2 	lsr	r2, r2, #5
   1881c:	e1811420 	orr	r1, r1, r0, lsr #8
   18820:	e2022004 	and	r2, r2, #4
   18824:	e181100c 	orr	r1, r1, ip
   18828:	e1812002 	orr	r2, r1, r2
   1882c:	e5c4e001 	strb	lr, [r4, #1]
   18830:	e5c42000 	strb	r2, [r4]
   18834:	eafff87a 	b	16a24 <ExecZ80+0x4bc>
   18838:	e1d420b6 	ldrh	r2, [r4, #6]
   1883c:	e35e0000 	cmp	lr, #0
   18840:	11a02882 	lslne	r2, r2, #17
   18844:	159f1d0c 	ldrne	r1, [pc, #3340]	; 19558 <ExecZ80+0x2ff0>
   18848:	11a028a2 	lsrne	r2, r2, #17
   1884c:	17d12002 	ldrbne	r2, [r1, r2]
   18850:	e5d41000 	ldrb	r1, [r4]
   18854:	e5d45001 	ldrb	r5, [r4, #1]
   18858:	07d62002 	ldrbeq	r2, [r6, r2]
   1885c:	e2011001 	and	r1, r1, #1
   18860:	e0811005 	add	r1, r1, r5
   18864:	e081e002 	add	lr, r1, r2
   18868:	e6ef007e 	uxtb	r0, lr
   1886c:	e0255002 	eor	r5, r5, r2
   18870:	e08cc000 	add	ip, ip, r0
   18874:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18878:	e0222000 	eor	r2, r2, r0
   1887c:	e0201005 	eor	r1, r0, r5
   18880:	e1c22005 	bic	r2, r2, r5
   18884:	e2011010 	and	r1, r1, #16
   18888:	e1a022c2 	asr	r2, r2, #5
   1888c:	e181100c 	orr	r1, r1, ip
   18890:	e2022004 	and	r2, r2, #4
   18894:	e181142e 	orr	r1, r1, lr, lsr #8
   18898:	e1822001 	orr	r2, r2, r1
   1889c:	e5c42000 	strb	r2, [r4]
   188a0:	e5c40001 	strb	r0, [r4, #1]
   188a4:	eafff85e 	b	16a24 <ExecZ80+0x4bc>
   188a8:	e5d45001 	ldrb	r5, [r4, #1]
   188ac:	e5d42006 	ldrb	r2, [r4, #6]
   188b0:	e5d41000 	ldrb	r1, [r4]
   188b4:	e085e002 	add	lr, r5, r2
   188b8:	e2011001 	and	r1, r1, #1
   188bc:	e081e00e 	add	lr, r1, lr
   188c0:	e6ef007e 	uxtb	r0, lr
   188c4:	e0255002 	eor	r5, r5, r2
   188c8:	e08cc000 	add	ip, ip, r0
   188cc:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   188d0:	e0222000 	eor	r2, r2, r0
   188d4:	e0251000 	eor	r1, r5, r0
   188d8:	e1c22005 	bic	r2, r2, r5
   188dc:	e2011010 	and	r1, r1, #16
   188e0:	e1a022c2 	asr	r2, r2, #5
   188e4:	e181100c 	orr	r1, r1, ip
   188e8:	e2022004 	and	r2, r2, #4
   188ec:	e181142e 	orr	r1, r1, lr, lsr #8
   188f0:	e1822001 	orr	r2, r2, r1
   188f4:	e5c42000 	strb	r2, [r4]
   188f8:	e5c40001 	strb	r0, [r4, #1]
   188fc:	eafff848 	b	16a24 <ExecZ80+0x4bc>
   18900:	e5d45001 	ldrb	r5, [r4, #1]
   18904:	e5d42007 	ldrb	r2, [r4, #7]
   18908:	e5d41000 	ldrb	r1, [r4]
   1890c:	e085e002 	add	lr, r5, r2
   18910:	e2011001 	and	r1, r1, #1
   18914:	e081e00e 	add	lr, r1, lr
   18918:	e6ef007e 	uxtb	r0, lr
   1891c:	e0255002 	eor	r5, r5, r2
   18920:	e08cc000 	add	ip, ip, r0
   18924:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18928:	e0222000 	eor	r2, r2, r0
   1892c:	e0251000 	eor	r1, r5, r0
   18930:	e1c22005 	bic	r2, r2, r5
   18934:	e2011010 	and	r1, r1, #16
   18938:	e1a022c2 	asr	r2, r2, #5
   1893c:	e181100c 	orr	r1, r1, ip
   18940:	e2022004 	and	r2, r2, #4
   18944:	e181142e 	orr	r1, r1, lr, lsr #8
   18948:	e1822001 	orr	r2, r2, r1
   1894c:	e5c42000 	strb	r2, [r4]
   18950:	e5c40001 	strb	r0, [r4, #1]
   18954:	eafff832 	b	16a24 <ExecZ80+0x4bc>
   18958:	e5d45001 	ldrb	r5, [r4, #1]
   1895c:	e5d42004 	ldrb	r2, [r4, #4]
   18960:	e5d41000 	ldrb	r1, [r4]
   18964:	e085e002 	add	lr, r5, r2
   18968:	e2011001 	and	r1, r1, #1
   1896c:	e081e00e 	add	lr, r1, lr
   18970:	e6ef007e 	uxtb	r0, lr
   18974:	e0255002 	eor	r5, r5, r2
   18978:	e08cc000 	add	ip, ip, r0
   1897c:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18980:	e0222000 	eor	r2, r2, r0
   18984:	e0201005 	eor	r1, r0, r5
   18988:	e1c22005 	bic	r2, r2, r5
   1898c:	e2011010 	and	r1, r1, #16
   18990:	e1a022c2 	asr	r2, r2, #5
   18994:	e181100c 	orr	r1, r1, ip
   18998:	e2022004 	and	r2, r2, #4
   1899c:	e181142e 	orr	r1, r1, lr, lsr #8
   189a0:	e1822001 	orr	r2, r2, r1
   189a4:	e5c42000 	strb	r2, [r4]
   189a8:	e5c40001 	strb	r0, [r4, #1]
   189ac:	eafff81c 	b	16a24 <ExecZ80+0x4bc>
   189b0:	e5d45001 	ldrb	r5, [r4, #1]
   189b4:	e5d42005 	ldrb	r2, [r4, #5]
   189b8:	e5d41000 	ldrb	r1, [r4]
   189bc:	e085e002 	add	lr, r5, r2
   189c0:	e2011001 	and	r1, r1, #1
   189c4:	e081e00e 	add	lr, r1, lr
   189c8:	e6ef007e 	uxtb	r0, lr
   189cc:	e0255002 	eor	r5, r5, r2
   189d0:	e08cc000 	add	ip, ip, r0
   189d4:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   189d8:	e0222000 	eor	r2, r2, r0
   189dc:	e0201005 	eor	r1, r0, r5
   189e0:	e1c22005 	bic	r2, r2, r5
   189e4:	e2011010 	and	r1, r1, #16
   189e8:	e1a022c2 	asr	r2, r2, #5
   189ec:	e181100c 	orr	r1, r1, ip
   189f0:	e2022004 	and	r2, r2, #4
   189f4:	e181142e 	orr	r1, r1, lr, lsr #8
   189f8:	e1822001 	orr	r2, r2, r1
   189fc:	e5c42000 	strb	r2, [r4]
   18a00:	e5c40001 	strb	r0, [r4, #1]
   18a04:	eafff806 	b	16a24 <ExecZ80+0x4bc>
   18a08:	e5d45001 	ldrb	r5, [r4, #1]
   18a0c:	e5d42002 	ldrb	r2, [r4, #2]
   18a10:	e5d41000 	ldrb	r1, [r4]
   18a14:	e085e002 	add	lr, r5, r2
   18a18:	e2011001 	and	r1, r1, #1
   18a1c:	e081e00e 	add	lr, r1, lr
   18a20:	e6ef007e 	uxtb	r0, lr
   18a24:	e0255002 	eor	r5, r5, r2
   18a28:	e08cc000 	add	ip, ip, r0
   18a2c:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18a30:	e0222000 	eor	r2, r2, r0
   18a34:	e0201005 	eor	r1, r0, r5
   18a38:	e1c22005 	bic	r2, r2, r5
   18a3c:	e2011010 	and	r1, r1, #16
   18a40:	e1a022c2 	asr	r2, r2, #5
   18a44:	e181100c 	orr	r1, r1, ip
   18a48:	e2022004 	and	r2, r2, #4
   18a4c:	e181142e 	orr	r1, r1, lr, lsr #8
   18a50:	e1822001 	orr	r2, r2, r1
   18a54:	e5c42000 	strb	r2, [r4]
   18a58:	e5c40001 	strb	r0, [r4, #1]
   18a5c:	eafff7f0 	b	16a24 <ExecZ80+0x4bc>
   18a60:	e5d45001 	ldrb	r5, [r4, #1]
   18a64:	e5d42003 	ldrb	r2, [r4, #3]
   18a68:	e5d41000 	ldrb	r1, [r4]
   18a6c:	e085e002 	add	lr, r5, r2
   18a70:	e2011001 	and	r1, r1, #1
   18a74:	e081e00e 	add	lr, r1, lr
   18a78:	e6ef007e 	uxtb	r0, lr
   18a7c:	e0255002 	eor	r5, r5, r2
   18a80:	e08cc000 	add	ip, ip, r0
   18a84:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18a88:	e0222000 	eor	r2, r2, r0
   18a8c:	e0251000 	eor	r1, r5, r0
   18a90:	e1c22005 	bic	r2, r2, r5
   18a94:	e2011010 	and	r1, r1, #16
   18a98:	e1a022c2 	asr	r2, r2, #5
   18a9c:	e181100c 	orr	r1, r1, ip
   18aa0:	e2022004 	and	r2, r2, #4
   18aa4:	e181142e 	orr	r1, r1, lr, lsr #8
   18aa8:	e1822001 	orr	r2, r2, r1
   18aac:	e5c42000 	strb	r2, [r4]
   18ab0:	e5c40001 	strb	r0, [r4, #1]
   18ab4:	eafff7da 	b	16a24 <ExecZ80+0x4bc>
   18ab8:	e5d42001 	ldrb	r2, [r4, #1]
   18abc:	e1a00082 	lsl	r0, r2, #1
   18ac0:	e6efe070 	uxtb	lr, r0
   18ac4:	e08cc00e 	add	ip, ip, lr
   18ac8:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18acc:	e022200e 	eor	r2, r2, lr
   18ad0:	e2001010 	and	r1, r0, #16
   18ad4:	e1a022a2 	lsr	r2, r2, #5
   18ad8:	e1811420 	orr	r1, r1, r0, lsr #8
   18adc:	e2022004 	and	r2, r2, #4
   18ae0:	e181100c 	orr	r1, r1, ip
   18ae4:	e1812002 	orr	r2, r1, r2
   18ae8:	e5c4e001 	strb	lr, [r4, #1]
   18aec:	e5c42000 	strb	r2, [r4]
   18af0:	eafff7cb 	b	16a24 <ExecZ80+0x4bc>
   18af4:	e1d420b6 	ldrh	r2, [r4, #6]
   18af8:	e35e0000 	cmp	lr, #0
   18afc:	11a02882 	lslne	r2, r2, #17
   18b00:	159f1a50 	ldrne	r1, [pc, #2640]	; 19558 <ExecZ80+0x2ff0>
   18b04:	11a028a2 	lsrne	r2, r2, #17
   18b08:	17d12002 	ldrbne	r2, [r1, r2]
   18b0c:	07d62002 	ldrbeq	r2, [r6, r2]
   18b10:	e5d4e001 	ldrb	lr, [r4, #1]
   18b14:	e08e5002 	add	r5, lr, r2
   18b18:	e6ef0075 	uxtb	r0, r5
   18b1c:	e02ee002 	eor	lr, lr, r2
   18b20:	e08cc000 	add	ip, ip, r0
   18b24:	e0222000 	eor	r2, r2, r0
   18b28:	e02e1000 	eor	r1, lr, r0
   18b2c:	e1c2200e 	bic	r2, r2, lr
   18b30:	e2011010 	and	r1, r1, #16
   18b34:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18b38:	e1a022c2 	asr	r2, r2, #5
   18b3c:	e1811425 	orr	r1, r1, r5, lsr #8
   18b40:	e2022004 	and	r2, r2, #4
   18b44:	e181100c 	orr	r1, r1, ip
   18b48:	e1822001 	orr	r2, r2, r1
   18b4c:	e5c42000 	strb	r2, [r4]
   18b50:	e5c40001 	strb	r0, [r4, #1]
   18b54:	eafff7b2 	b	16a24 <ExecZ80+0x4bc>
   18b58:	e5d4e001 	ldrb	lr, [r4, #1]
   18b5c:	e5d42006 	ldrb	r2, [r4, #6]
   18b60:	e08e5002 	add	r5, lr, r2
   18b64:	e6ef0075 	uxtb	r0, r5
   18b68:	e02ee002 	eor	lr, lr, r2
   18b6c:	e08cc000 	add	ip, ip, r0
   18b70:	e0222000 	eor	r2, r2, r0
   18b74:	e02e1000 	eor	r1, lr, r0
   18b78:	e1c2200e 	bic	r2, r2, lr
   18b7c:	e2011010 	and	r1, r1, #16
   18b80:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18b84:	e1a022c2 	asr	r2, r2, #5
   18b88:	e1811425 	orr	r1, r1, r5, lsr #8
   18b8c:	e2022004 	and	r2, r2, #4
   18b90:	e181100c 	orr	r1, r1, ip
   18b94:	e1822001 	orr	r2, r2, r1
   18b98:	e5c42000 	strb	r2, [r4]
   18b9c:	e5c40001 	strb	r0, [r4, #1]
   18ba0:	eafff79f 	b	16a24 <ExecZ80+0x4bc>
   18ba4:	e5d4e001 	ldrb	lr, [r4, #1]
   18ba8:	e5d42007 	ldrb	r2, [r4, #7]
   18bac:	e08e5002 	add	r5, lr, r2
   18bb0:	e6ef0075 	uxtb	r0, r5
   18bb4:	e02ee002 	eor	lr, lr, r2
   18bb8:	e08cc000 	add	ip, ip, r0
   18bbc:	e0222000 	eor	r2, r2, r0
   18bc0:	e02e1000 	eor	r1, lr, r0
   18bc4:	e1c2200e 	bic	r2, r2, lr
   18bc8:	e2011010 	and	r1, r1, #16
   18bcc:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18bd0:	e1a022c2 	asr	r2, r2, #5
   18bd4:	e1811425 	orr	r1, r1, r5, lsr #8
   18bd8:	e2022004 	and	r2, r2, #4
   18bdc:	e181100c 	orr	r1, r1, ip
   18be0:	e1822001 	orr	r2, r2, r1
   18be4:	e5c42000 	strb	r2, [r4]
   18be8:	e5c40001 	strb	r0, [r4, #1]
   18bec:	eafff78c 	b	16a24 <ExecZ80+0x4bc>
   18bf0:	e5d4e001 	ldrb	lr, [r4, #1]
   18bf4:	e5d42004 	ldrb	r2, [r4, #4]
   18bf8:	e08e5002 	add	r5, lr, r2
   18bfc:	e6ef0075 	uxtb	r0, r5
   18c00:	e02ee002 	eor	lr, lr, r2
   18c04:	e08cc000 	add	ip, ip, r0
   18c08:	e0222000 	eor	r2, r2, r0
   18c0c:	e02e1000 	eor	r1, lr, r0
   18c10:	e1c2200e 	bic	r2, r2, lr
   18c14:	e2011010 	and	r1, r1, #16
   18c18:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18c1c:	e1a022c2 	asr	r2, r2, #5
   18c20:	e1811425 	orr	r1, r1, r5, lsr #8
   18c24:	e2022004 	and	r2, r2, #4
   18c28:	e181100c 	orr	r1, r1, ip
   18c2c:	e1822001 	orr	r2, r2, r1
   18c30:	e5c42000 	strb	r2, [r4]
   18c34:	e5c40001 	strb	r0, [r4, #1]
   18c38:	eafff779 	b	16a24 <ExecZ80+0x4bc>
   18c3c:	e5d4e001 	ldrb	lr, [r4, #1]
   18c40:	e5d42005 	ldrb	r2, [r4, #5]
   18c44:	e08e5002 	add	r5, lr, r2
   18c48:	e6ef0075 	uxtb	r0, r5
   18c4c:	e02ee002 	eor	lr, lr, r2
   18c50:	e08cc000 	add	ip, ip, r0
   18c54:	e0222000 	eor	r2, r2, r0
   18c58:	e02e1000 	eor	r1, lr, r0
   18c5c:	e1c2200e 	bic	r2, r2, lr
   18c60:	e2011010 	and	r1, r1, #16
   18c64:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18c68:	e1a022c2 	asr	r2, r2, #5
   18c6c:	e1811425 	orr	r1, r1, r5, lsr #8
   18c70:	e2022004 	and	r2, r2, #4
   18c74:	e181100c 	orr	r1, r1, ip
   18c78:	e1822001 	orr	r2, r2, r1
   18c7c:	e5c42000 	strb	r2, [r4]
   18c80:	e5c40001 	strb	r0, [r4, #1]
   18c84:	eafff766 	b	16a24 <ExecZ80+0x4bc>
   18c88:	e5d4e001 	ldrb	lr, [r4, #1]
   18c8c:	e5d42002 	ldrb	r2, [r4, #2]
   18c90:	e08e5002 	add	r5, lr, r2
   18c94:	e6ef0075 	uxtb	r0, r5
   18c98:	e02ee002 	eor	lr, lr, r2
   18c9c:	e08cc000 	add	ip, ip, r0
   18ca0:	e0222000 	eor	r2, r2, r0
   18ca4:	e02e1000 	eor	r1, lr, r0
   18ca8:	e1c2200e 	bic	r2, r2, lr
   18cac:	e2011010 	and	r1, r1, #16
   18cb0:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18cb4:	e1a022c2 	asr	r2, r2, #5
   18cb8:	e1811425 	orr	r1, r1, r5, lsr #8
   18cbc:	e2022004 	and	r2, r2, #4
   18cc0:	e181100c 	orr	r1, r1, ip
   18cc4:	e1822001 	orr	r2, r2, r1
   18cc8:	e5c42000 	strb	r2, [r4]
   18ccc:	e5c40001 	strb	r0, [r4, #1]
   18cd0:	eafff753 	b	16a24 <ExecZ80+0x4bc>
   18cd4:	e5d4e001 	ldrb	lr, [r4, #1]
   18cd8:	e5d42003 	ldrb	r2, [r4, #3]
   18cdc:	e08e5002 	add	r5, lr, r2
   18ce0:	e6ef0075 	uxtb	r0, r5
   18ce4:	e02ee002 	eor	lr, lr, r2
   18ce8:	e08cc000 	add	ip, ip, r0
   18cec:	e0222000 	eor	r2, r2, r0
   18cf0:	e02e1000 	eor	r1, lr, r0
   18cf4:	e1c2200e 	bic	r2, r2, lr
   18cf8:	e2011010 	and	r1, r1, #16
   18cfc:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   18d00:	e1a022c2 	asr	r2, r2, #5
   18d04:	e1811425 	orr	r1, r1, r5, lsr #8
   18d08:	e2022004 	and	r2, r2, #4
   18d0c:	e181100c 	orr	r1, r1, ip
   18d10:	e1822001 	orr	r2, r2, r1
   18d14:	e5c42000 	strb	r2, [r4]
   18d18:	e5c40001 	strb	r0, [r4, #1]
   18d1c:	eafff740 	b	16a24 <ExecZ80+0x4bc>
   18d20:	e1d420b6 	ldrh	r2, [r4, #6]
   18d24:	e1c420be 	strh	r2, [r4, #14]
   18d28:	eafff73d 	b	16a24 <ExecZ80+0x4bc>
   18d2c:	e1d420b6 	ldrh	r2, [r4, #6]
   18d30:	e35e0000 	cmp	lr, #0
   18d34:	11a02882 	lslne	r2, r2, #17
   18d38:	159f1818 	ldrne	r1, [pc, #2072]	; 19558 <ExecZ80+0x2ff0>
   18d3c:	11a028a2 	lsrne	r2, r2, #17
   18d40:	17d12002 	ldrbne	r2, [r1, r2]
   18d44:	07d62002 	ldrbeq	r2, [r6, r2]
   18d48:	e5c42001 	strb	r2, [r4, #1]
   18d4c:	eafff734 	b	16a24 <ExecZ80+0x4bc>
   18d50:	e5d42006 	ldrb	r2, [r4, #6]
   18d54:	e5c42001 	strb	r2, [r4, #1]
   18d58:	eafff731 	b	16a24 <ExecZ80+0x4bc>
   18d5c:	e5d42007 	ldrb	r2, [r4, #7]
   18d60:	e5c42001 	strb	r2, [r4, #1]
   18d64:	eafff72e 	b	16a24 <ExecZ80+0x4bc>
   18d68:	e5d42004 	ldrb	r2, [r4, #4]
   18d6c:	e5c42001 	strb	r2, [r4, #1]
   18d70:	eafff72b 	b	16a24 <ExecZ80+0x4bc>
   18d74:	e5d42005 	ldrb	r2, [r4, #5]
   18d78:	e5c42001 	strb	r2, [r4, #1]
   18d7c:	eafff728 	b	16a24 <ExecZ80+0x4bc>
   18d80:	e5d42002 	ldrb	r2, [r4, #2]
   18d84:	e5c42001 	strb	r2, [r4, #1]
   18d88:	eafff725 	b	16a24 <ExecZ80+0x4bc>
   18d8c:	e5d42003 	ldrb	r2, [r4, #3]
   18d90:	e5c42001 	strb	r2, [r4, #1]
   18d94:	eafff722 	b	16a24 <ExecZ80+0x4bc>
   18d98:	e1d430b6 	ldrh	r3, [r4, #6]
   18d9c:	e5d42001 	ldrb	r2, [r4, #1]
   18da0:	e7c62003 	strb	r2, [r6, r3]
   18da4:	e1d430bc 	ldrh	r3, [r4, #12]
   18da8:	eafff71d 	b	16a24 <ExecZ80+0x4bc>
   18dac:	e5d42018 	ldrb	r2, [r4, #24]
   18db0:	e3a01000 	mov	r1, #0
   18db4:	e1e02c82 	mvn	r2, r2, lsl #25
   18db8:	e1e02ca2 	mvn	r2, r2, lsr #25
   18dbc:	e1c450bc 	strh	r5, [r4, #12]
   18dc0:	e1a03005 	mov	r3, r5
   18dc4:	e5c42018 	strb	r2, [r4, #24]
   18dc8:	e5841024 	str	r1, [r4, #36]	; 0x24
   18dcc:	e5841020 	str	r1, [r4, #32]
   18dd0:	eafff713 	b	16a24 <ExecZ80+0x4bc>
   18dd4:	e1d430b6 	ldrh	r3, [r4, #6]
   18dd8:	e5d42006 	ldrb	r2, [r4, #6]
   18ddc:	e7c62003 	strb	r2, [r6, r3]
   18de0:	e1d430bc 	ldrh	r3, [r4, #12]
   18de4:	eafff70e 	b	16a24 <ExecZ80+0x4bc>
   18de8:	e1d430b6 	ldrh	r3, [r4, #6]
   18dec:	e5d42007 	ldrb	r2, [r4, #7]
   18df0:	e7c62003 	strb	r2, [r6, r3]
   18df4:	e1d430bc 	ldrh	r3, [r4, #12]
   18df8:	eafff709 	b	16a24 <ExecZ80+0x4bc>
   18dfc:	e1d430b6 	ldrh	r3, [r4, #6]
   18e00:	e5d42004 	ldrb	r2, [r4, #4]
   18e04:	e7c62003 	strb	r2, [r6, r3]
   18e08:	e1d430bc 	ldrh	r3, [r4, #12]
   18e0c:	eafff704 	b	16a24 <ExecZ80+0x4bc>
   18e10:	e1d430b6 	ldrh	r3, [r4, #6]
   18e14:	e5d42005 	ldrb	r2, [r4, #5]
   18e18:	e7c62003 	strb	r2, [r6, r3]
   18e1c:	e1d430bc 	ldrh	r3, [r4, #12]
   18e20:	eafff6ff 	b	16a24 <ExecZ80+0x4bc>
   18e24:	e1d430b6 	ldrh	r3, [r4, #6]
   18e28:	e5d42002 	ldrb	r2, [r4, #2]
   18e2c:	e7c62003 	strb	r2, [r6, r3]
   18e30:	e1d430bc 	ldrh	r3, [r4, #12]
   18e34:	eafff6fa 	b	16a24 <ExecZ80+0x4bc>
   18e38:	e1d430b6 	ldrh	r3, [r4, #6]
   18e3c:	e5d42003 	ldrb	r2, [r4, #3]
   18e40:	e7c62003 	strb	r2, [r6, r3]
   18e44:	e1d430bc 	ldrh	r3, [r4, #12]
   18e48:	eafff6f5 	b	16a24 <ExecZ80+0x4bc>
   18e4c:	e5d42001 	ldrb	r2, [r4, #1]
   18e50:	e5c42006 	strb	r2, [r4, #6]
   18e54:	eafff6f2 	b	16a24 <ExecZ80+0x4bc>
   18e58:	e1d420b6 	ldrh	r2, [r4, #6]
   18e5c:	e35e0000 	cmp	lr, #0
   18e60:	11a02882 	lslne	r2, r2, #17
   18e64:	159f16ec 	ldrne	r1, [pc, #1772]	; 19558 <ExecZ80+0x2ff0>
   18e68:	11a028a2 	lsrne	r2, r2, #17
   18e6c:	17d12002 	ldrbne	r2, [r1, r2]
   18e70:	07d62002 	ldrbeq	r2, [r6, r2]
   18e74:	e5c42006 	strb	r2, [r4, #6]
   18e78:	eafff6e9 	b	16a24 <ExecZ80+0x4bc>
   18e7c:	e1d420d0 	ldrsb	r2, [r4]
   18e80:	e3520000 	cmp	r2, #0
   18e84:	ba0004df 	blt	1a208 <ExecZ80+0x3ca0>
   18e88:	e2853003 	add	r3, r5, #3
   18e8c:	e6ff3073 	uxth	r3, r3
   18e90:	e1c430bc 	strh	r3, [r4, #12]
   18e94:	eafff6e2 	b	16a24 <ExecZ80+0x4bc>
   18e98:	e5d42007 	ldrb	r2, [r4, #7]
   18e9c:	e5c42006 	strb	r2, [r4, #6]
   18ea0:	eafff6df 	b	16a24 <ExecZ80+0x4bc>
   18ea4:	e3a01038 	mov	r1, #56	; 0x38
   18ea8:	e1d420be 	ldrh	r2, [r4, #14]
   18eac:	e1a03423 	lsr	r3, r3, #8
   18eb0:	e2422001 	sub	r2, r2, #1
   18eb4:	e6ff2072 	uxth	r2, r2
   18eb8:	e1c420be 	strh	r2, [r4, #14]
   18ebc:	e7c63002 	strb	r3, [r6, r2]
   18ec0:	e1d430be 	ldrh	r3, [r4, #14]
   18ec4:	e5d4200c 	ldrb	r2, [r4, #12]
   18ec8:	e2433001 	sub	r3, r3, #1
   18ecc:	e6ff3073 	uxth	r3, r3
   18ed0:	e1c430be 	strh	r3, [r4, #14]
   18ed4:	e7c62003 	strb	r2, [r6, r3]
   18ed8:	e1a03001 	mov	r3, r1
   18edc:	e1c410bc 	strh	r1, [r4, #12]
   18ee0:	eafff6cf 	b	16a24 <ExecZ80+0x4bc>
   18ee4:	e5d41000 	ldrb	r1, [r4]
   18ee8:	e2212001 	eor	r2, r1, #1
   18eec:	e3c22012 	bic	r2, r2, #18
   18ef0:	e6af2072 	sxtb	r2, r2
   18ef4:	e3110001 	tst	r1, #1
   18ef8:	13822010 	orrne	r2, r2, #16
   18efc:	e5c42000 	strb	r2, [r4]
   18f00:	eafff6c7 	b	16a24 <ExecZ80+0x4bc>
   18f04:	e35e0000 	cmp	lr, #0
   18f08:	e2852002 	add	r2, r5, #2
   18f0c:	11a03883 	lslne	r3, r3, #17
   18f10:	e6ff2072 	uxth	r2, r2
   18f14:	159f163c 	ldrne	r1, [pc, #1596]	; 19558 <ExecZ80+0x2ff0>
   18f18:	11a038a3 	lsrne	r3, r3, #17
   18f1c:	e1c420bc 	strh	r2, [r4, #12]
   18f20:	17d13003 	ldrbne	r3, [r1, r3]
   18f24:	07d63003 	ldrbeq	r3, [r6, r3]
   18f28:	e5c43001 	strb	r3, [r4, #1]
   18f2c:	e1a03002 	mov	r3, r2
   18f30:	eafff6bb 	b	16a24 <ExecZ80+0x4bc>
   18f34:	e5d42001 	ldrb	r2, [r4, #1]
   18f38:	e5d41000 	ldrb	r1, [r4]
   18f3c:	e2422001 	sub	r2, r2, #1
   18f40:	e6ef2072 	uxtb	r2, r2
   18f44:	e08cc002 	add	ip, ip, r2
   18f48:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   18f4c:	e2011001 	and	r1, r1, #1
   18f50:	e352007f 	cmp	r2, #127	; 0x7f
   18f54:	e5c42001 	strb	r2, [r4, #1]
   18f58:	e1811000 	orr	r1, r1, r0
   18f5c:	0a0004e8 	beq	1a304 <ExecZ80+0x3d9c>
   18f60:	e202200f 	and	r2, r2, #15
   18f64:	e352000f 	cmp	r2, #15
   18f68:	13a02000 	movne	r2, #0
   18f6c:	03a02010 	moveq	r2, #16
   18f70:	e1822001 	orr	r2, r2, r1
   18f74:	e3822002 	orr	r2, r2, #2
   18f78:	e5c42000 	strb	r2, [r4]
   18f7c:	eafff6a8 	b	16a24 <ExecZ80+0x4bc>
   18f80:	e5d41001 	ldrb	r1, [r4, #1]
   18f84:	e5d42000 	ldrb	r2, [r4]
   18f88:	e2811001 	add	r1, r1, #1
   18f8c:	e6ef1071 	uxtb	r1, r1
   18f90:	e08cc001 	add	ip, ip, r1
   18f94:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   18f98:	e2022001 	and	r2, r2, #1
   18f9c:	e1822000 	orr	r2, r2, r0
   18fa0:	e3510080 	cmp	r1, #128	; 0x80
   18fa4:	e5c41001 	strb	r1, [r4, #1]
   18fa8:	e6af2072 	sxtb	r2, r2
   18fac:	0a0004d1 	beq	1a2f8 <ExecZ80+0x3d90>
   18fb0:	e311000f 	tst	r1, #15
   18fb4:	03a01010 	moveq	r1, #16
   18fb8:	13a01000 	movne	r1, #0
   18fbc:	e1812002 	orr	r2, r1, r2
   18fc0:	e5c42000 	strb	r2, [r4]
   18fc4:	eafff696 	b	16a24 <ExecZ80+0x4bc>
   18fc8:	e2852002 	add	r2, r5, #2
   18fcc:	e6ff2072 	uxth	r2, r2
   18fd0:	e2851003 	add	r1, r5, #3
   18fd4:	e35e0000 	cmp	lr, #0
   18fd8:	e1c420bc 	strh	r2, [r4, #12]
   18fdc:	e6ff1071 	uxth	r1, r1
   18fe0:	0a000419 	beq	1a04c <ExecZ80+0x3ae4>
   18fe4:	e59fc578 	ldr	ip, [pc, #1400]	; 19564 <ExecZ80+0x2ffc>
   18fe8:	e59f0568 	ldr	r0, [pc, #1384]	; 19558 <ExecZ80+0x2ff0>
   18fec:	e003300c 	and	r3, r3, ip
   18ff0:	e7d03003 	ldrb	r3, [r0, r3]
   18ff4:	e002200c 	and	r2, r2, ip
   18ff8:	e1c410bc 	strh	r1, [r4, #12]
   18ffc:	e7d02002 	ldrb	r2, [r0, r2]
   19000:	e1833402 	orr	r3, r3, r2, lsl #8
   19004:	e003300c 	and	r3, r3, ip
   19008:	e7d03003 	ldrb	r3, [r0, r3]
   1900c:	e5c43001 	strb	r3, [r4, #1]
   19010:	e1a03001 	mov	r3, r1
   19014:	eafff682 	b	16a24 <ExecZ80+0x4bc>
   19018:	e1d420be 	ldrh	r2, [r4, #14]
   1901c:	e2422001 	sub	r2, r2, #1
   19020:	e1c420be 	strh	r2, [r4, #14]
   19024:	eafff67e 	b	16a24 <ExecZ80+0x4bc>
   19028:	e1d420b6 	ldrh	r2, [r4, #6]
   1902c:	e1d400be 	ldrh	r0, [r4, #14]
   19030:	e5d41000 	ldrb	r1, [r4]
   19034:	e082c000 	add	ip, r2, r0
   19038:	e0222000 	eor	r2, r2, r0
   1903c:	e6ff007c 	uxth	r0, ip
   19040:	e0222000 	eor	r2, r2, r0
   19044:	e1a02442 	asr	r2, r2, #8
   19048:	e3c11013 	bic	r1, r1, #19
   1904c:	e2022010 	and	r2, r2, #16
   19050:	e181182c 	orr	r1, r1, ip, lsr #16
   19054:	e1812002 	orr	r2, r1, r2
   19058:	e1c400b6 	strh	r0, [r4, #6]
   1905c:	e5c42000 	strb	r2, [r4]
   19060:	eafff66f 	b	16a24 <ExecZ80+0x4bc>
   19064:	e5d41000 	ldrb	r1, [r4]
   19068:	e3110001 	tst	r1, #1
   1906c:	0a00045d 	beq	1a1e8 <ExecZ80+0x3c80>
   19070:	e2422005 	sub	r2, r2, #5
   19074:	e35e0000 	cmp	lr, #0
   19078:	e5842020 	str	r2, [r4, #32]
   1907c:	159f14d4 	ldrne	r1, [pc, #1236]	; 19558 <ExecZ80+0x2ff0>
   19080:	11a02883 	lslne	r2, r3, #17
   19084:	11a028a2 	lsrne	r2, r2, #17
   19088:	07d62003 	ldrbeq	r2, [r6, r3]
   1908c:	17d12002 	ldrbne	r2, [r1, r2]
   19090:	e6af2072 	sxtb	r2, r2
   19094:	e2822001 	add	r2, r2, #1
   19098:	e0833002 	add	r3, r3, r2
   1909c:	e6ff3073 	uxth	r3, r3
   190a0:	e1c430bc 	strh	r3, [r4, #12]
   190a4:	eafff65e 	b	16a24 <ExecZ80+0x4bc>
   190a8:	e5d42000 	ldrb	r2, [r4]
   190ac:	e3c22012 	bic	r2, r2, #18
   190b0:	e3822001 	orr	r2, r2, #1
   190b4:	e5c42000 	strb	r2, [r4]
   190b8:	eafff659 	b	16a24 <ExecZ80+0x4bc>
   190bc:	e35e0000 	cmp	lr, #0
   190c0:	11a03883 	lslne	r3, r3, #17
   190c4:	e2855002 	add	r5, r5, #2
   190c8:	159f1488 	ldrne	r1, [pc, #1160]	; 19558 <ExecZ80+0x2ff0>
   190cc:	e1c450bc 	strh	r5, [r4, #12]
   190d0:	11a038a3 	lsrne	r3, r3, #17
   190d4:	17d13003 	ldrbne	r3, [r1, r3]
   190d8:	07d63003 	ldrbeq	r3, [r6, r3]
   190dc:	e1d420b6 	ldrh	r2, [r4, #6]
   190e0:	e7c63002 	strb	r3, [r6, r2]
   190e4:	e1d430bc 	ldrh	r3, [r4, #12]
   190e8:	eafff64d 	b	16a24 <ExecZ80+0x4bc>
   190ec:	e1d400b6 	ldrh	r0, [r4, #6]
   190f0:	e35e0000 	cmp	lr, #0
   190f4:	11a03880 	lslne	r3, r0, #17
   190f8:	159f2458 	ldrne	r2, [pc, #1112]	; 19558 <ExecZ80+0x2ff0>
   190fc:	11a038a3 	lsrne	r3, r3, #17
   19100:	17d22003 	ldrbne	r2, [r2, r3]
   19104:	07d62000 	ldrbeq	r2, [r6, r0]
   19108:	e5d43000 	ldrb	r3, [r4]
   1910c:	e2422001 	sub	r2, r2, #1
   19110:	e6ef2072 	uxtb	r2, r2
   19114:	e08cc002 	add	ip, ip, r2
   19118:	e5dc1300 	ldrb	r1, [ip, #768]	; 0x300
   1911c:	e2033001 	and	r3, r3, #1
   19120:	e352007f 	cmp	r2, #127	; 0x7f
   19124:	e1833001 	orr	r3, r3, r1
   19128:	0a00044b 	beq	1a25c <ExecZ80+0x3cf4>
   1912c:	e202100f 	and	r1, r2, #15
   19130:	e351000f 	cmp	r1, #15
   19134:	13a01000 	movne	r1, #0
   19138:	03a01010 	moveq	r1, #16
   1913c:	e1813003 	orr	r3, r1, r3
   19140:	e3833002 	orr	r3, r3, #2
   19144:	e5c43000 	strb	r3, [r4]
   19148:	e7c62000 	strb	r2, [r6, r0]
   1914c:	e1d430bc 	ldrh	r3, [r4, #12]
   19150:	eafff633 	b	16a24 <ExecZ80+0x4bc>
   19154:	e1d400b6 	ldrh	r0, [r4, #6]
   19158:	e35e0000 	cmp	lr, #0
   1915c:	11a03880 	lslne	r3, r0, #17
   19160:	159f23f0 	ldrne	r2, [pc, #1008]	; 19558 <ExecZ80+0x2ff0>
   19164:	11a038a3 	lsrne	r3, r3, #17
   19168:	17d21003 	ldrbne	r1, [r2, r3]
   1916c:	07d61000 	ldrbeq	r1, [r6, r0]
   19170:	e5d42000 	ldrb	r2, [r4]
   19174:	e2811001 	add	r1, r1, #1
   19178:	e6ef1071 	uxtb	r1, r1
   1917c:	e08c3001 	add	r3, ip, r1
   19180:	e5d3c300 	ldrb	ip, [r3, #768]	; 0x300
   19184:	e2023001 	and	r3, r2, #1
   19188:	e183300c 	orr	r3, r3, ip
   1918c:	e3510080 	cmp	r1, #128	; 0x80
   19190:	e6af3073 	sxtb	r3, r3
   19194:	0a000454 	beq	1a2ec <ExecZ80+0x3d84>
   19198:	e311000f 	tst	r1, #15
   1919c:	03a02010 	moveq	r2, #16
   191a0:	13a02000 	movne	r2, #0
   191a4:	e1823003 	orr	r3, r2, r3
   191a8:	e5c43000 	strb	r3, [r4]
   191ac:	e7c61000 	strb	r1, [r6, r0]
   191b0:	e1d430bc 	ldrh	r3, [r4, #12]
   191b4:	eafff61a 	b	16a24 <ExecZ80+0x4bc>
   191b8:	e35e0000 	cmp	lr, #0
   191bc:	159fe3a0 	ldrne	lr, [pc, #928]	; 19564 <ExecZ80+0x2ffc>
   191c0:	e2851002 	add	r1, r5, #2
   191c4:	e6ff1071 	uxth	r1, r1
   191c8:	159fc388 	ldrne	ip, [pc, #904]	; 19558 <ExecZ80+0x2ff0>
   191cc:	e2850003 	add	r0, r5, #3
   191d0:	e1c410bc 	strh	r1, [r4, #12]
   191d4:	e6ff0070 	uxth	r0, r0
   191d8:	1003300e 	andne	r3, r3, lr
   191dc:	07d62003 	ldrbeq	r2, [r6, r3]
   191e0:	17dc2003 	ldrbne	r2, [ip, r3]
   191e4:	01c400bc 	strheq	r0, [r4, #12]
   191e8:	11c400bc 	strhne	r0, [r4, #12]
   191ec:	1001100e 	andne	r1, r1, lr
   191f0:	07d61001 	ldrbeq	r1, [r6, r1]
   191f4:	17dc1001 	ldrbne	r1, [ip, r1]
   191f8:	e6ef3072 	uxtb	r3, r2
   191fc:	e5d42001 	ldrb	r2, [r4, #1]
   19200:	e1833401 	orr	r3, r3, r1, lsl #8
   19204:	e7c62003 	strb	r2, [r6, r3]
   19208:	e1d430bc 	ldrh	r3, [r4, #12]
   1920c:	eafff604 	b	16a24 <ExecZ80+0x4bc>
   19210:	e1d420be 	ldrh	r2, [r4, #14]
   19214:	e2822001 	add	r2, r2, #1
   19218:	e1c420be 	strh	r2, [r4, #14]
   1921c:	eafff600 	b	16a24 <ExecZ80+0x4bc>
   19220:	e2852002 	add	r2, r5, #2
   19224:	e6ff2072 	uxth	r2, r2
   19228:	e2851003 	add	r1, r5, #3
   1922c:	e35e0000 	cmp	lr, #0
   19230:	e1c420bc 	strh	r2, [r4, #12]
   19234:	e6ff1071 	uxth	r1, r1
   19238:	0a000389 	beq	1a064 <ExecZ80+0x3afc>
   1923c:	e59fc320 	ldr	ip, [pc, #800]	; 19564 <ExecZ80+0x2ffc>
   19240:	e59f0310 	ldr	r0, [pc, #784]	; 19558 <ExecZ80+0x2ff0>
   19244:	e003300c 	and	r3, r3, ip
   19248:	e7d03003 	ldrb	r3, [r0, r3]
   1924c:	e002200c 	and	r2, r2, ip
   19250:	e5c4300e 	strb	r3, [r4, #14]
   19254:	e1c410bc 	strh	r1, [r4, #12]
   19258:	e7d03002 	ldrb	r3, [r0, r2]
   1925c:	e5c4300f 	strb	r3, [r4, #15]
   19260:	e1a03001 	mov	r3, r1
   19264:	eafff5ee 	b	16a24 <ExecZ80+0x4bc>
   19268:	e5d41000 	ldrb	r1, [r4]
   1926c:	e3110001 	tst	r1, #1
   19270:	1a0003e0 	bne	1a1f8 <ExecZ80+0x3c90>
   19274:	e2422005 	sub	r2, r2, #5
   19278:	e35e0000 	cmp	lr, #0
   1927c:	e5842020 	str	r2, [r4, #32]
   19280:	159f12d0 	ldrne	r1, [pc, #720]	; 19558 <ExecZ80+0x2ff0>
   19284:	11a02883 	lslne	r2, r3, #17
   19288:	11a028a2 	lsrne	r2, r2, #17
   1928c:	07d62003 	ldrbeq	r2, [r6, r3]
   19290:	17d12002 	ldrbne	r2, [r1, r2]
   19294:	e6af2072 	sxtb	r2, r2
   19298:	e2822001 	add	r2, r2, #1
   1929c:	e0833002 	add	r3, r3, r2
   192a0:	e6ff3073 	uxth	r3, r3
   192a4:	e1c430bc 	strh	r3, [r4, #12]
   192a8:	eafff5dd 	b	16a24 <ExecZ80+0x4bc>
   192ac:	e5d41000 	ldrb	r1, [r4]
   192b0:	e3110040 	tst	r1, #64	; 0x40
   192b4:	0a0003b3 	beq	1a188 <ExecZ80+0x3c20>
   192b8:	e2422005 	sub	r2, r2, #5
   192bc:	e35e0000 	cmp	lr, #0
   192c0:	e5842020 	str	r2, [r4, #32]
   192c4:	159f128c 	ldrne	r1, [pc, #652]	; 19558 <ExecZ80+0x2ff0>
   192c8:	11a02883 	lslne	r2, r3, #17
   192cc:	11a028a2 	lsrne	r2, r2, #17
   192d0:	07d62003 	ldrbeq	r2, [r6, r3]
   192d4:	17d12002 	ldrbne	r2, [r1, r2]
   192d8:	e6af2072 	sxtb	r2, r2
   192dc:	e2822001 	add	r2, r2, #1
   192e0:	e0833002 	add	r3, r3, r2
   192e4:	e6ff3073 	uxth	r3, r3
   192e8:	e1c430bc 	strh	r3, [r4, #12]
   192ec:	eafff5cc 	b	16a24 <ExecZ80+0x4bc>
   192f0:	e5d41006 	ldrb	r1, [r4, #6]
   192f4:	e5d42000 	ldrb	r2, [r4]
   192f8:	e2811001 	add	r1, r1, #1
   192fc:	e6ef1071 	uxtb	r1, r1
   19300:	e08cc001 	add	ip, ip, r1
   19304:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   19308:	e2022001 	and	r2, r2, #1
   1930c:	e1822000 	orr	r2, r2, r0
   19310:	e3510080 	cmp	r1, #128	; 0x80
   19314:	e5c41006 	strb	r1, [r4, #6]
   19318:	e6af2072 	sxtb	r2, r2
   1931c:	0a0003ef 	beq	1a2e0 <ExecZ80+0x3d78>
   19320:	e311000f 	tst	r1, #15
   19324:	03a01010 	moveq	r1, #16
   19328:	13a01000 	movne	r1, #0
   1932c:	e1812002 	orr	r2, r1, r2
   19330:	e5c42000 	strb	r2, [r4]
   19334:	eafff5ba 	b	16a24 <ExecZ80+0x4bc>
   19338:	e5d41007 	ldrb	r1, [r4, #7]
   1933c:	e5d42000 	ldrb	r2, [r4]
   19340:	e2811001 	add	r1, r1, #1
   19344:	e6ef1071 	uxtb	r1, r1
   19348:	e08cc001 	add	ip, ip, r1
   1934c:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   19350:	e2022001 	and	r2, r2, #1
   19354:	e1822000 	orr	r2, r2, r0
   19358:	e3510080 	cmp	r1, #128	; 0x80
   1935c:	e5c41007 	strb	r1, [r4, #7]
   19360:	e6af2072 	sxtb	r2, r2
   19364:	0a0003e9 	beq	1a310 <ExecZ80+0x3da8>
   19368:	e311000f 	tst	r1, #15
   1936c:	03a01010 	moveq	r1, #16
   19370:	13a01000 	movne	r1, #0
   19374:	e1812002 	orr	r2, r1, r2
   19378:	e5c42000 	strb	r2, [r4]
   1937c:	eafff5a8 	b	16a24 <ExecZ80+0x4bc>
   19380:	e35e0000 	cmp	lr, #0
   19384:	e2852002 	add	r2, r5, #2
   19388:	11a03883 	lslne	r3, r3, #17
   1938c:	e6ff2072 	uxth	r2, r2
   19390:	159f11c0 	ldrne	r1, [pc, #448]	; 19558 <ExecZ80+0x2ff0>
   19394:	11a038a3 	lsrne	r3, r3, #17
   19398:	e1c420bc 	strh	r2, [r4, #12]
   1939c:	17d13003 	ldrbne	r3, [r1, r3]
   193a0:	07d63003 	ldrbeq	r3, [r6, r3]
   193a4:	e5c43006 	strb	r3, [r4, #6]
   193a8:	e1a03002 	mov	r3, r2
   193ac:	eafff59c 	b	16a24 <ExecZ80+0x4bc>
   193b0:	e35e0000 	cmp	lr, #0
   193b4:	e2852002 	add	r2, r5, #2
   193b8:	11a03883 	lslne	r3, r3, #17
   193bc:	e6ff2072 	uxth	r2, r2
   193c0:	159f1190 	ldrne	r1, [pc, #400]	; 19558 <ExecZ80+0x2ff0>
   193c4:	11a038a3 	lsrne	r3, r3, #17
   193c8:	e1c420bc 	strh	r2, [r4, #12]
   193cc:	17d13003 	ldrbne	r3, [r1, r3]
   193d0:	07d63003 	ldrbeq	r3, [r6, r3]
   193d4:	e5c43007 	strb	r3, [r4, #7]
   193d8:	e1a03002 	mov	r3, r2
   193dc:	eafff590 	b	16a24 <ExecZ80+0x4bc>
   193e0:	e5d42007 	ldrb	r2, [r4, #7]
   193e4:	e5d41000 	ldrb	r1, [r4]
   193e8:	e2422001 	sub	r2, r2, #1
   193ec:	e6ef2072 	uxtb	r2, r2
   193f0:	e08cc002 	add	ip, ip, r2
   193f4:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   193f8:	e2011001 	and	r1, r1, #1
   193fc:	e352007f 	cmp	r2, #127	; 0x7f
   19400:	e5c42007 	strb	r2, [r4, #7]
   19404:	e1811000 	orr	r1, r1, r0
   19408:	0a000399 	beq	1a274 <ExecZ80+0x3d0c>
   1940c:	e202200f 	and	r2, r2, #15
   19410:	e352000f 	cmp	r2, #15
   19414:	13a02000 	movne	r2, #0
   19418:	03a02010 	moveq	r2, #16
   1941c:	e1822001 	orr	r2, r2, r1
   19420:	e3822002 	orr	r2, r2, #2
   19424:	e5c42000 	strb	r2, [r4]
   19428:	eafff57d 	b	16a24 <ExecZ80+0x4bc>
   1942c:	e5d41000 	ldrb	r1, [r4]
   19430:	e5d42001 	ldrb	r2, [r4, #1]
   19434:	e3110001 	tst	r1, #1
   19438:	13822c01 	orrne	r2, r2, #256	; 0x100
   1943c:	e3110010 	tst	r1, #16
   19440:	13822c02 	orrne	r2, r2, #512	; 0x200
   19444:	e3110002 	tst	r1, #2
   19448:	13822b01 	orrne	r2, r2, #1024	; 0x400
   1944c:	e59f1108 	ldr	r1, [pc, #264]	; 1955c <ExecZ80+0x2ff4>
   19450:	e1a02082 	lsl	r2, r2, #1
   19454:	e19120b2 	ldrh	r2, [r1, r2]
   19458:	e1c420b0 	strh	r2, [r4]
   1945c:	eafff570 	b	16a24 <ExecZ80+0x4bc>
   19460:	e2852002 	add	r2, r5, #2
   19464:	e6ff2072 	uxth	r2, r2
   19468:	e2851003 	add	r1, r5, #3
   1946c:	e35e0000 	cmp	lr, #0
   19470:	e1c420bc 	strh	r2, [r4, #12]
   19474:	e6ff1071 	uxth	r1, r1
   19478:	0a000303 	beq	1a08c <ExecZ80+0x3b24>
   1947c:	e59fc0e0 	ldr	ip, [pc, #224]	; 19564 <ExecZ80+0x2ffc>
   19480:	e59f00d0 	ldr	r0, [pc, #208]	; 19558 <ExecZ80+0x2ff0>
   19484:	e003300c 	and	r3, r3, ip
   19488:	e7d03003 	ldrb	r3, [r0, r3]
   1948c:	e002200c 	and	r2, r2, ip
   19490:	e1c410bc 	strh	r1, [r4, #12]
   19494:	e7d02002 	ldrb	r2, [r0, r2]
   19498:	e1833402 	orr	r3, r3, r2, lsl #8
   1949c:	e003200c 	and	r2, r3, ip
   194a0:	e7d02002 	ldrb	r2, [r0, r2]
   194a4:	e2833001 	add	r3, r3, #1
   194a8:	e5c42006 	strb	r2, [r4, #6]
   194ac:	e003300c 	and	r3, r3, ip
   194b0:	e7d03003 	ldrb	r3, [r0, r3]
   194b4:	e5c43007 	strb	r3, [r4, #7]
   194b8:	e1a03001 	mov	r3, r1
   194bc:	eafff558 	b	16a24 <ExecZ80+0x4bc>
   194c0:	e1d410b6 	ldrh	r1, [r4, #6]
   194c4:	e5d42000 	ldrb	r2, [r4]
   194c8:	e1a01081 	lsl	r1, r1, #1
   194cc:	e6ffc071 	uxth	ip, r1
   194d0:	e3c22013 	bic	r2, r2, #19
   194d4:	e1a0044c 	asr	r0, ip, #8
   194d8:	e2000010 	and	r0, r0, #16
   194dc:	e1822821 	orr	r2, r2, r1, lsr #16
   194e0:	e1822000 	orr	r2, r2, r0
   194e4:	e1c4c0b6 	strh	ip, [r4, #6]
   194e8:	e5c42000 	strb	r2, [r4]
   194ec:	eafff54c 	b	16a24 <ExecZ80+0x4bc>
   194f0:	e35e0000 	cmp	lr, #0
   194f4:	159fe068 	ldrne	lr, [pc, #104]	; 19564 <ExecZ80+0x2ffc>
   194f8:	e2851002 	add	r1, r5, #2
   194fc:	e6ff1071 	uxth	r1, r1
   19500:	159fc050 	ldrne	ip, [pc, #80]	; 19558 <ExecZ80+0x2ff0>
   19504:	e2850003 	add	r0, r5, #3
   19508:	e1c410bc 	strh	r1, [r4, #12]
   1950c:	e6ff0070 	uxth	r0, r0
   19510:	1003300e 	andne	r3, r3, lr
   19514:	07d62003 	ldrbeq	r2, [r6, r3]
   19518:	17dc2003 	ldrbne	r2, [ip, r3]
   1951c:	01c400bc 	strheq	r0, [r4, #12]
   19520:	11c400bc 	strhne	r0, [r4, #12]
   19524:	1001100e 	andne	r1, r1, lr
   19528:	07d61001 	ldrbeq	r1, [r6, r1]
   1952c:	17dc1001 	ldrbne	r1, [ip, r1]
   19530:	e6ef3072 	uxtb	r3, r2
   19534:	e5d42006 	ldrb	r2, [r4, #6]
   19538:	e1833401 	orr	r3, r3, r1, lsl #8
   1953c:	e7c62003 	strb	r2, [r6, r3]
   19540:	e5d42007 	ldrb	r2, [r4, #7]
   19544:	e2833001 	add	r3, r3, #1
   19548:	e6ff3073 	uxth	r3, r3
   1954c:	e7c62003 	strb	r2, [r6, r3]
   19550:	e1d430bc 	ldrh	r3, [r4, #12]
   19554:	eafff532 	b	16a24 <ExecZ80+0x4bc>
   19558:	00050428 	.word	0x00050428
   1955c:	0003c960 	.word	0x0003c960
   19560:	0003d984 	.word	0x0003d984
   19564:	00007fff 	.word	0x00007fff
   19568:	00050428 	.word	0x00050428
   1956c:	e2852002 	add	r2, r5, #2
   19570:	e6ff2072 	uxth	r2, r2
   19574:	e2851003 	add	r1, r5, #3
   19578:	e35e0000 	cmp	lr, #0
   1957c:	e1c420bc 	strh	r2, [r4, #12]
   19580:	e6ff1071 	uxth	r1, r1
   19584:	0a0002bb 	beq	1a078 <ExecZ80+0x3b10>
   19588:	e51fc02c 	ldr	ip, [pc, #-44]	; 19564 <ExecZ80+0x2ffc>
   1958c:	e51f002c 	ldr	r0, [pc, #-44]	; 19568 <ExecZ80+0x3000>
   19590:	e003300c 	and	r3, r3, ip
   19594:	e7d03003 	ldrb	r3, [r0, r3]
   19598:	e002200c 	and	r2, r2, ip
   1959c:	e5c43006 	strb	r3, [r4, #6]
   195a0:	e1c410bc 	strh	r1, [r4, #12]
   195a4:	e7d03002 	ldrb	r3, [r0, r2]
   195a8:	e5c43007 	strb	r3, [r4, #7]
   195ac:	e1a03001 	mov	r3, r1
   195b0:	eafff51b 	b	16a24 <ExecZ80+0x4bc>
   195b4:	e1d420b6 	ldrh	r2, [r4, #6]
   195b8:	e2822001 	add	r2, r2, #1
   195bc:	e1c420b6 	strh	r2, [r4, #6]
   195c0:	eafff517 	b	16a24 <ExecZ80+0x4bc>
   195c4:	e5d41001 	ldrb	r1, [r4, #1]
   195c8:	e5d42000 	ldrb	r2, [r4]
   195cc:	e1e01001 	mvn	r1, r1
   195d0:	e3822012 	orr	r2, r2, #18
   195d4:	e5c41001 	strb	r1, [r4, #1]
   195d8:	e5c42000 	strb	r2, [r4]
   195dc:	eafff510 	b	16a24 <ExecZ80+0x4bc>
   195e0:	e5d42006 	ldrb	r2, [r4, #6]
   195e4:	e5d41000 	ldrb	r1, [r4]
   195e8:	e2422001 	sub	r2, r2, #1
   195ec:	e6ef2072 	uxtb	r2, r2
   195f0:	e08cc002 	add	ip, ip, r2
   195f4:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   195f8:	e2011001 	and	r1, r1, #1
   195fc:	e352007f 	cmp	r2, #127	; 0x7f
   19600:	e5c42006 	strb	r2, [r4, #6]
   19604:	e1811000 	orr	r1, r1, r0
   19608:	0a000331 	beq	1a2d4 <ExecZ80+0x3d6c>
   1960c:	e202200f 	and	r2, r2, #15
   19610:	e352000f 	cmp	r2, #15
   19614:	13a02000 	movne	r2, #0
   19618:	03a02010 	moveq	r2, #16
   1961c:	e1822001 	orr	r2, r2, r1
   19620:	e3822002 	orr	r2, r2, #2
   19624:	e5c42000 	strb	r2, [r4]
   19628:	eafff4fd 	b	16a24 <ExecZ80+0x4bc>
   1962c:	e1d420b6 	ldrh	r2, [r4, #6]
   19630:	e2422001 	sub	r2, r2, #1
   19634:	e1c420b6 	strh	r2, [r4, #6]
   19638:	eafff4f9 	b	16a24 <ExecZ80+0x4bc>
   1963c:	e5d41000 	ldrb	r1, [r4]
   19640:	e3110040 	tst	r1, #64	; 0x40
   19644:	1a0002cb 	bne	1a178 <ExecZ80+0x3c10>
   19648:	e2422005 	sub	r2, r2, #5
   1964c:	e35e0000 	cmp	lr, #0
   19650:	e5842020 	str	r2, [r4, #32]
   19654:	151f10f4 	ldrne	r1, [pc, #-244]	; 19568 <ExecZ80+0x3000>
   19658:	11a02883 	lslne	r2, r3, #17
   1965c:	11a028a2 	lsrne	r2, r2, #17
   19660:	07d62003 	ldrbeq	r2, [r6, r3]
   19664:	17d12002 	ldrbne	r2, [r1, r2]
   19668:	e6af2072 	sxtb	r2, r2
   1966c:	e2822001 	add	r2, r2, #1
   19670:	e0833002 	add	r3, r3, r2
   19674:	e6ff3073 	uxth	r3, r3
   19678:	e1c430bc 	strh	r3, [r4, #12]
   1967c:	eafff4e8 	b	16a24 <ExecZ80+0x4bc>
   19680:	e5d40001 	ldrb	r0, [r4, #1]
   19684:	e5d42000 	ldrb	r2, [r4]
   19688:	e200c001 	and	ip, r0, #1
   1968c:	e3c21013 	bic	r1, r2, #19
   19690:	e1a02382 	lsl	r2, r2, #7
   19694:	e181100c 	orr	r1, r1, ip
   19698:	e18220a0 	orr	r2, r2, r0, lsr #1
   1969c:	e5c41000 	strb	r1, [r4]
   196a0:	e5c42001 	strb	r2, [r4, #1]
   196a4:	eafff4de 	b	16a24 <ExecZ80+0x4bc>
   196a8:	e35e0000 	cmp	lr, #0
   196ac:	e2852002 	add	r2, r5, #2
   196b0:	11a03883 	lslne	r3, r3, #17
   196b4:	e6ff2072 	uxth	r2, r2
   196b8:	151f1158 	ldrne	r1, [pc, #-344]	; 19568 <ExecZ80+0x3000>
   196bc:	11a038a3 	lsrne	r3, r3, #17
   196c0:	e1c420bc 	strh	r2, [r4, #12]
   196c4:	17d13003 	ldrbne	r3, [r1, r3]
   196c8:	07d63003 	ldrbeq	r3, [r6, r3]
   196cc:	e5c43004 	strb	r3, [r4, #4]
   196d0:	e1a03002 	mov	r3, r2
   196d4:	eafff4d2 	b	16a24 <ExecZ80+0x4bc>
   196d8:	e5d42004 	ldrb	r2, [r4, #4]
   196dc:	e5d41000 	ldrb	r1, [r4]
   196e0:	e2422001 	sub	r2, r2, #1
   196e4:	e6ef2072 	uxtb	r2, r2
   196e8:	e08cc002 	add	ip, ip, r2
   196ec:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   196f0:	e2011001 	and	r1, r1, #1
   196f4:	e352007f 	cmp	r2, #127	; 0x7f
   196f8:	e5c42004 	strb	r2, [r4, #4]
   196fc:	e1811000 	orr	r1, r1, r0
   19700:	0a0002f0 	beq	1a2c8 <ExecZ80+0x3d60>
   19704:	e202200f 	and	r2, r2, #15
   19708:	e352000f 	cmp	r2, #15
   1970c:	13a02000 	movne	r2, #0
   19710:	03a02010 	moveq	r2, #16
   19714:	e1822001 	orr	r2, r2, r1
   19718:	e3822002 	orr	r2, r2, #2
   1971c:	e5c42000 	strb	r2, [r4]
   19720:	eafff4bf 	b	16a24 <ExecZ80+0x4bc>
   19724:	e5d41004 	ldrb	r1, [r4, #4]
   19728:	e5d42000 	ldrb	r2, [r4]
   1972c:	e2811001 	add	r1, r1, #1
   19730:	e6ef1071 	uxtb	r1, r1
   19734:	e08cc001 	add	ip, ip, r1
   19738:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   1973c:	e2022001 	and	r2, r2, #1
   19740:	e1822000 	orr	r2, r2, r0
   19744:	e3510080 	cmp	r1, #128	; 0x80
   19748:	e5c41004 	strb	r1, [r4, #4]
   1974c:	e6af2072 	sxtb	r2, r2
   19750:	0a0002cd 	beq	1a28c <ExecZ80+0x3d24>
   19754:	e311000f 	tst	r1, #15
   19758:	03a01010 	moveq	r1, #16
   1975c:	13a01000 	movne	r1, #0
   19760:	e1812002 	orr	r2, r1, r2
   19764:	e5c42000 	strb	r2, [r4]
   19768:	eafff4ad 	b	16a24 <ExecZ80+0x4bc>
   1976c:	e1d420b4 	ldrh	r2, [r4, #4]
   19770:	e35e0000 	cmp	lr, #0
   19774:	11a02882 	lslne	r2, r2, #17
   19778:	151f1218 	ldrne	r1, [pc, #-536]	; 19568 <ExecZ80+0x3000>
   1977c:	11a028a2 	lsrne	r2, r2, #17
   19780:	17d12002 	ldrbne	r2, [r1, r2]
   19784:	07d62002 	ldrbeq	r2, [r6, r2]
   19788:	e5c42001 	strb	r2, [r4, #1]
   1978c:	eafff4a4 	b	16a24 <ExecZ80+0x4bc>
   19790:	e1d420b4 	ldrh	r2, [r4, #4]
   19794:	e2422001 	sub	r2, r2, #1
   19798:	e1c420b4 	strh	r2, [r4, #4]
   1979c:	eafff4a0 	b	16a24 <ExecZ80+0x4bc>
   197a0:	e1d420b6 	ldrh	r2, [r4, #6]
   197a4:	e1d400b4 	ldrh	r0, [r4, #4]
   197a8:	e5d41000 	ldrb	r1, [r4]
   197ac:	e082c000 	add	ip, r2, r0
   197b0:	e0222000 	eor	r2, r2, r0
   197b4:	e6ff007c 	uxth	r0, ip
   197b8:	e0222000 	eor	r2, r2, r0
   197bc:	e1a02442 	asr	r2, r2, #8
   197c0:	e3c11013 	bic	r1, r1, #19
   197c4:	e2022010 	and	r2, r2, #16
   197c8:	e181182c 	orr	r1, r1, ip, lsr #16
   197cc:	e1812002 	orr	r2, r1, r2
   197d0:	e1c400b6 	strh	r0, [r4, #6]
   197d4:	e5c42000 	strb	r2, [r4]
   197d8:	eafff491 	b	16a24 <ExecZ80+0x4bc>
   197dc:	e35e0000 	cmp	lr, #0
   197e0:	11a02883 	lslne	r2, r3, #17
   197e4:	151f1284 	ldrne	r1, [pc, #-644]	; 19568 <ExecZ80+0x3000>
   197e8:	11a028a2 	lsrne	r2, r2, #17
   197ec:	07d62003 	ldrbeq	r2, [r6, r3]
   197f0:	17d12002 	ldrbne	r2, [r1, r2]
   197f4:	e6af2072 	sxtb	r2, r2
   197f8:	e2822001 	add	r2, r2, #1
   197fc:	e0833002 	add	r3, r3, r2
   19800:	e6ff3073 	uxth	r3, r3
   19804:	e1c430bc 	strh	r3, [r4, #12]
   19808:	eafff485 	b	16a24 <ExecZ80+0x4bc>
   1980c:	e1d420d0 	ldrsb	r2, [r4]
   19810:	e5d40001 	ldrb	r0, [r4, #1]
   19814:	e2021001 	and	r1, r2, #1
   19818:	e3c22013 	bic	r2, r2, #19
   1981c:	e1811080 	orr	r1, r1, r0, lsl #1
   19820:	e18223a0 	orr	r2, r2, r0, lsr #7
   19824:	e5c41001 	strb	r1, [r4, #1]
   19828:	e5c42000 	strb	r2, [r4]
   1982c:	eafff47c 	b	16a24 <ExecZ80+0x4bc>
   19830:	e35e0000 	cmp	lr, #0
   19834:	e2852002 	add	r2, r5, #2
   19838:	11a03883 	lslne	r3, r3, #17
   1983c:	e6ff2072 	uxth	r2, r2
   19840:	151f12e0 	ldrne	r1, [pc, #-736]	; 19568 <ExecZ80+0x3000>
   19844:	11a038a3 	lsrne	r3, r3, #17
   19848:	e1c420bc 	strh	r2, [r4, #12]
   1984c:	17d13003 	ldrbne	r3, [r1, r3]
   19850:	07d63003 	ldrbeq	r3, [r6, r3]
   19854:	e5c43005 	strb	r3, [r4, #5]
   19858:	e1a03002 	mov	r3, r2
   1985c:	eafff470 	b	16a24 <ExecZ80+0x4bc>
   19860:	e5d42005 	ldrb	r2, [r4, #5]
   19864:	e5d41000 	ldrb	r1, [r4]
   19868:	e2422001 	sub	r2, r2, #1
   1986c:	e6ef2072 	uxtb	r2, r2
   19870:	e08cc002 	add	ip, ip, r2
   19874:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   19878:	e2011001 	and	r1, r1, #1
   1987c:	e352007f 	cmp	r2, #127	; 0x7f
   19880:	e5c42005 	strb	r2, [r4, #5]
   19884:	e1811000 	orr	r1, r1, r0
   19888:	0a000282 	beq	1a298 <ExecZ80+0x3d30>
   1988c:	e202200f 	and	r2, r2, #15
   19890:	e352000f 	cmp	r2, #15
   19894:	13a02000 	movne	r2, #0
   19898:	03a02010 	moveq	r2, #16
   1989c:	e1822001 	orr	r2, r2, r1
   198a0:	e3822002 	orr	r2, r2, #2
   198a4:	e5c42000 	strb	r2, [r4]
   198a8:	eafff45d 	b	16a24 <ExecZ80+0x4bc>
   198ac:	e5d41005 	ldrb	r1, [r4, #5]
   198b0:	e5d42000 	ldrb	r2, [r4]
   198b4:	e2811001 	add	r1, r1, #1
   198b8:	e6ef1071 	uxtb	r1, r1
   198bc:	e08cc001 	add	ip, ip, r1
   198c0:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   198c4:	e2022001 	and	r2, r2, #1
   198c8:	e1822000 	orr	r2, r2, r0
   198cc:	e3510080 	cmp	r1, #128	; 0x80
   198d0:	e5c41005 	strb	r1, [r4, #5]
   198d4:	e6af2072 	sxtb	r2, r2
   198d8:	0a000274 	beq	1a2b0 <ExecZ80+0x3d48>
   198dc:	e311000f 	tst	r1, #15
   198e0:	03a01010 	moveq	r1, #16
   198e4:	13a01000 	movne	r1, #0
   198e8:	e1812002 	orr	r2, r1, r2
   198ec:	e5c42000 	strb	r2, [r4]
   198f0:	eafff44b 	b	16a24 <ExecZ80+0x4bc>
   198f4:	e1d430b4 	ldrh	r3, [r4, #4]
   198f8:	e5d42001 	ldrb	r2, [r4, #1]
   198fc:	e7c62003 	strb	r2, [r6, r3]
   19900:	e1d430bc 	ldrh	r3, [r4, #12]
   19904:	eafff446 	b	16a24 <ExecZ80+0x4bc>
   19908:	e1d420b4 	ldrh	r2, [r4, #4]
   1990c:	e2822001 	add	r2, r2, #1
   19910:	e1c420b4 	strh	r2, [r4, #4]
   19914:	eafff442 	b	16a24 <ExecZ80+0x4bc>
   19918:	e2852002 	add	r2, r5, #2
   1991c:	e6ff2072 	uxth	r2, r2
   19920:	e2851003 	add	r1, r5, #3
   19924:	e35e0000 	cmp	lr, #0
   19928:	e1c420bc 	strh	r2, [r4, #12]
   1992c:	e6ff1071 	uxth	r1, r1
   19930:	0a000203 	beq	1a144 <ExecZ80+0x3bdc>
   19934:	e51fc3d8 	ldr	ip, [pc, #-984]	; 19564 <ExecZ80+0x2ffc>
   19938:	e51f03d8 	ldr	r0, [pc, #-984]	; 19568 <ExecZ80+0x3000>
   1993c:	e003300c 	and	r3, r3, ip
   19940:	e7d03003 	ldrb	r3, [r0, r3]
   19944:	e002200c 	and	r2, r2, ip
   19948:	e5c43004 	strb	r3, [r4, #4]
   1994c:	e1c410bc 	strh	r1, [r4, #12]
   19950:	e7d03002 	ldrb	r3, [r0, r2]
   19954:	e5c43005 	strb	r3, [r4, #5]
   19958:	e1a03001 	mov	r3, r1
   1995c:	eafff430 	b	16a24 <ExecZ80+0x4bc>
   19960:	e5d41003 	ldrb	r1, [r4, #3]
   19964:	e2411001 	sub	r1, r1, #1
   19968:	e6ef1071 	uxtb	r1, r1
   1996c:	e3510000 	cmp	r1, #0
   19970:	e5c41003 	strb	r1, [r4, #3]
   19974:	0a0001f7 	beq	1a158 <ExecZ80+0x3bf0>
   19978:	e2422005 	sub	r2, r2, #5
   1997c:	e35e0000 	cmp	lr, #0
   19980:	e5842020 	str	r2, [r4, #32]
   19984:	151f1424 	ldrne	r1, [pc, #-1060]	; 19568 <ExecZ80+0x3000>
   19988:	11a02883 	lslne	r2, r3, #17
   1998c:	11a028a2 	lsrne	r2, r2, #17
   19990:	07d62003 	ldrbeq	r2, [r6, r3]
   19994:	17d12002 	ldrbne	r2, [r1, r2]
   19998:	e6af2072 	sxtb	r2, r2
   1999c:	e2822001 	add	r2, r2, #1
   199a0:	e0833002 	add	r3, r3, r2
   199a4:	e6ff3073 	uxth	r3, r3
   199a8:	e1c430bc 	strh	r3, [r4, #12]
   199ac:	eafff41c 	b	16a24 <ExecZ80+0x4bc>
   199b0:	e1d410b0 	ldrh	r1, [r4]
   199b4:	e1d421b0 	ldrh	r2, [r4, #16]
   199b8:	e1c411b0 	strh	r1, [r4, #16]
   199bc:	e1c420b0 	strh	r2, [r4]
   199c0:	eafff417 	b	16a24 <ExecZ80+0x4bc>
   199c4:	e5d41002 	ldrb	r1, [r4, #2]
   199c8:	e5d42000 	ldrb	r2, [r4]
   199cc:	e2811001 	add	r1, r1, #1
   199d0:	e6ef1071 	uxtb	r1, r1
   199d4:	e08cc001 	add	ip, ip, r1
   199d8:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   199dc:	e2022001 	and	r2, r2, #1
   199e0:	e1822000 	orr	r2, r2, r0
   199e4:	e3510080 	cmp	r1, #128	; 0x80
   199e8:	e5c41002 	strb	r1, [r4, #2]
   199ec:	e6af2072 	sxtb	r2, r2
   199f0:	0a000231 	beq	1a2bc <ExecZ80+0x3d54>
   199f4:	e311000f 	tst	r1, #15
   199f8:	03a01010 	moveq	r1, #16
   199fc:	13a01000 	movne	r1, #0
   19a00:	e1812002 	orr	r2, r1, r2
   19a04:	e5c42000 	strb	r2, [r4]
   19a08:	eafff405 	b	16a24 <ExecZ80+0x4bc>
   19a0c:	e1d420b2 	ldrh	r2, [r4, #2]
   19a10:	e2422001 	sub	r2, r2, #1
   19a14:	e1c420b2 	strh	r2, [r4, #2]
   19a18:	eafff401 	b	16a24 <ExecZ80+0x4bc>
   19a1c:	e5d41003 	ldrb	r1, [r4, #3]
   19a20:	e5d42000 	ldrb	r2, [r4]
   19a24:	e2811001 	add	r1, r1, #1
   19a28:	e6ef1071 	uxtb	r1, r1
   19a2c:	e08cc001 	add	ip, ip, r1
   19a30:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   19a34:	e2022001 	and	r2, r2, #1
   19a38:	e1822000 	orr	r2, r2, r0
   19a3c:	e3510080 	cmp	r1, #128	; 0x80
   19a40:	e5c41003 	strb	r1, [r4, #3]
   19a44:	e6af2072 	sxtb	r2, r2
   19a48:	0a00020c 	beq	1a280 <ExecZ80+0x3d18>
   19a4c:	e311000f 	tst	r1, #15
   19a50:	03a01010 	moveq	r1, #16
   19a54:	13a01000 	movne	r1, #0
   19a58:	e1812002 	orr	r2, r1, r2
   19a5c:	e5c42000 	strb	r2, [r4]
   19a60:	eafff3ef 	b	16a24 <ExecZ80+0x4bc>
   19a64:	e1d420b2 	ldrh	r2, [r4, #2]
   19a68:	e2822001 	add	r2, r2, #1
   19a6c:	e1c420b2 	strh	r2, [r4, #2]
   19a70:	eafff3eb 	b	16a24 <ExecZ80+0x4bc>
   19a74:	e1d430b2 	ldrh	r3, [r4, #2]
   19a78:	e5d42001 	ldrb	r2, [r4, #1]
   19a7c:	e7c62003 	strb	r2, [r6, r3]
   19a80:	e1d430bc 	ldrh	r3, [r4, #12]
   19a84:	eafff3e6 	b	16a24 <ExecZ80+0x4bc>
   19a88:	e2852002 	add	r2, r5, #2
   19a8c:	e6ff2072 	uxth	r2, r2
   19a90:	e2851003 	add	r1, r5, #3
   19a94:	e35e0000 	cmp	lr, #0
   19a98:	e1c420bc 	strh	r2, [r4, #12]
   19a9c:	e6ff1071 	uxth	r1, r1
   19aa0:	0a000198 	beq	1a108 <ExecZ80+0x3ba0>
   19aa4:	e51fc548 	ldr	ip, [pc, #-1352]	; 19564 <ExecZ80+0x2ffc>
   19aa8:	e51f0548 	ldr	r0, [pc, #-1352]	; 19568 <ExecZ80+0x3000>
   19aac:	e003300c 	and	r3, r3, ip
   19ab0:	e7d03003 	ldrb	r3, [r0, r3]
   19ab4:	e002200c 	and	r2, r2, ip
   19ab8:	e5c43002 	strb	r3, [r4, #2]
   19abc:	e1c410bc 	strh	r1, [r4, #12]
   19ac0:	e7d03002 	ldrb	r3, [r0, r2]
   19ac4:	e5c43003 	strb	r3, [r4, #3]
   19ac8:	e1a03001 	mov	r3, r1
   19acc:	eafff3d4 	b	16a24 <ExecZ80+0x4bc>
   19ad0:	e35e0000 	cmp	lr, #0
   19ad4:	e2852002 	add	r2, r5, #2
   19ad8:	11a03883 	lslne	r3, r3, #17
   19adc:	e6ff2072 	uxth	r2, r2
   19ae0:	151f1580 	ldrne	r1, [pc, #-1408]	; 19568 <ExecZ80+0x3000>
   19ae4:	11a038a3 	lsrne	r3, r3, #17
   19ae8:	e1c420bc 	strh	r2, [r4, #12]
   19aec:	17d13003 	ldrbne	r3, [r1, r3]
   19af0:	07d63003 	ldrbeq	r3, [r6, r3]
   19af4:	e5c43003 	strb	r3, [r4, #3]
   19af8:	e1a03002 	mov	r3, r2
   19afc:	eafff3c8 	b	16a24 <ExecZ80+0x4bc>
   19b00:	e35e0000 	cmp	lr, #0
   19b04:	e2852002 	add	r2, r5, #2
   19b08:	11a03883 	lslne	r3, r3, #17
   19b0c:	e6ff2072 	uxth	r2, r2
   19b10:	151f15b0 	ldrne	r1, [pc, #-1456]	; 19568 <ExecZ80+0x3000>
   19b14:	11a038a3 	lsrne	r3, r3, #17
   19b18:	e1c420bc 	strh	r2, [r4, #12]
   19b1c:	17d13003 	ldrbne	r3, [r1, r3]
   19b20:	07d63003 	ldrbeq	r3, [r6, r3]
   19b24:	e5c43002 	strb	r3, [r4, #2]
   19b28:	e1a03002 	mov	r3, r2
   19b2c:	eafff3bc 	b	16a24 <ExecZ80+0x4bc>
   19b30:	e5d42002 	ldrb	r2, [r4, #2]
   19b34:	e5d41000 	ldrb	r1, [r4]
   19b38:	e2422001 	sub	r2, r2, #1
   19b3c:	e6ef2072 	uxtb	r2, r2
   19b40:	e08cc002 	add	ip, ip, r2
   19b44:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   19b48:	e2011001 	and	r1, r1, #1
   19b4c:	e352007f 	cmp	r2, #127	; 0x7f
   19b50:	e5c42002 	strb	r2, [r4, #2]
   19b54:	e1811000 	orr	r1, r1, r0
   19b58:	0a0001d1 	beq	1a2a4 <ExecZ80+0x3d3c>
   19b5c:	e202200f 	and	r2, r2, #15
   19b60:	e352000f 	cmp	r2, #15
   19b64:	13a02000 	movne	r2, #0
   19b68:	03a02010 	moveq	r2, #16
   19b6c:	e1822001 	orr	r2, r2, r1
   19b70:	e3822002 	orr	r2, r2, #2
   19b74:	e5c42000 	strb	r2, [r4]
   19b78:	eafff3a9 	b	16a24 <ExecZ80+0x4bc>
   19b7c:	e5d42001 	ldrb	r2, [r4, #1]
   19b80:	e5d41000 	ldrb	r1, [r4]
   19b84:	e2120001 	ands	r0, r2, #1
   19b88:	e1a020a2 	lsr	r2, r2, #1
   19b8c:	11e02c82 	mvnne	r2, r2, lsl #25
   19b90:	11e02ca2 	mvnne	r2, r2, lsr #25
   19b94:	e5c42001 	strb	r2, [r4, #1]
   19b98:	e3c12013 	bic	r2, r1, #19
   19b9c:	e1822000 	orr	r2, r2, r0
   19ba0:	e5c42000 	strb	r2, [r4]
   19ba4:	eafff39e 	b	16a24 <ExecZ80+0x4bc>
   19ba8:	e1d420b2 	ldrh	r2, [r4, #2]
   19bac:	e35e0000 	cmp	lr, #0
   19bb0:	11a02882 	lslne	r2, r2, #17
   19bb4:	151f1654 	ldrne	r1, [pc, #-1620]	; 19568 <ExecZ80+0x3000>
   19bb8:	11a028a2 	lsrne	r2, r2, #17
   19bbc:	17d12002 	ldrbne	r2, [r1, r2]
   19bc0:	07d62002 	ldrbeq	r2, [r6, r2]
   19bc4:	e5c42001 	strb	r2, [r4, #1]
   19bc8:	eafff395 	b	16a24 <ExecZ80+0x4bc>
   19bcc:	e1d420b6 	ldrh	r2, [r4, #6]
   19bd0:	e1d400b2 	ldrh	r0, [r4, #2]
   19bd4:	e5d41000 	ldrb	r1, [r4]
   19bd8:	e082c000 	add	ip, r2, r0
   19bdc:	e0222000 	eor	r2, r2, r0
   19be0:	e6ff007c 	uxth	r0, ip
   19be4:	e0222000 	eor	r2, r2, r0
   19be8:	e1a02442 	asr	r2, r2, #8
   19bec:	e3c11013 	bic	r1, r1, #19
   19bf0:	e2022010 	and	r2, r2, #16
   19bf4:	e181182c 	orr	r1, r1, ip, lsr #16
   19bf8:	e1812002 	orr	r2, r1, r2
   19bfc:	e1c400b6 	strh	r0, [r4, #6]
   19c00:	e5c42000 	strb	r2, [r4]
   19c04:	eafff386 	b	16a24 <ExecZ80+0x4bc>
   19c08:	e5d41001 	ldrb	r1, [r4, #1]
   19c0c:	e5d40000 	ldrb	r0, [r4]
   19c10:	e1a023a1 	lsr	r2, r1, #7
   19c14:	e3c00013 	bic	r0, r0, #19
   19c18:	e1821081 	orr	r1, r2, r1, lsl #1
   19c1c:	e1822000 	orr	r2, r2, r0
   19c20:	e5c41001 	strb	r1, [r4, #1]
   19c24:	e5c42000 	strb	r2, [r4]
   19c28:	eafff37d 	b	16a24 <ExecZ80+0x4bc>
   19c2c:	e5d42003 	ldrb	r2, [r4, #3]
   19c30:	e5d41000 	ldrb	r1, [r4]
   19c34:	e2422001 	sub	r2, r2, #1
   19c38:	e6ef2072 	uxtb	r2, r2
   19c3c:	e08cc002 	add	ip, ip, r2
   19c40:	e5dc0300 	ldrb	r0, [ip, #768]	; 0x300
   19c44:	e2011001 	and	r1, r1, #1
   19c48:	e352007f 	cmp	r2, #127	; 0x7f
   19c4c:	e5c42003 	strb	r2, [r4, #3]
   19c50:	e1811000 	orr	r1, r1, r0
   19c54:	0a000183 	beq	1a268 <ExecZ80+0x3d00>
   19c58:	e202200f 	and	r2, r2, #15
   19c5c:	e352000f 	cmp	r2, #15
   19c60:	13a02000 	movne	r2, #0
   19c64:	03a02010 	moveq	r2, #16
   19c68:	e1822001 	orr	r2, r2, r1
   19c6c:	e3822002 	orr	r2, r2, #2
   19c70:	e5c42000 	strb	r2, [r4]
   19c74:	eafff36a 	b	16a24 <ExecZ80+0x4bc>
   19c78:	e5d42003 	ldrb	r2, [r4, #3]
   19c7c:	e5c42007 	strb	r2, [r4, #7]
   19c80:	eafff367 	b	16a24 <ExecZ80+0x4bc>
   19c84:	e5d42003 	ldrb	r2, [r4, #3]
   19c88:	e5c42006 	strb	r2, [r4, #6]
   19c8c:	eafff364 	b	16a24 <ExecZ80+0x4bc>
   19c90:	e5d42001 	ldrb	r2, [r4, #1]
   19c94:	e5c42007 	strb	r2, [r4, #7]
   19c98:	eafff361 	b	16a24 <ExecZ80+0x4bc>
   19c9c:	e1d420b6 	ldrh	r2, [r4, #6]
   19ca0:	e35e0000 	cmp	lr, #0
   19ca4:	11a02882 	lslne	r2, r2, #17
   19ca8:	151f1748 	ldrne	r1, [pc, #-1864]	; 19568 <ExecZ80+0x3000>
   19cac:	11a028a2 	lsrne	r2, r2, #17
   19cb0:	17d12002 	ldrbne	r2, [r1, r2]
   19cb4:	07d62002 	ldrbeq	r2, [r6, r2]
   19cb8:	e5c42007 	strb	r2, [r4, #7]
   19cbc:	eafff358 	b	16a24 <ExecZ80+0x4bc>
   19cc0:	e5d42006 	ldrb	r2, [r4, #6]
   19cc4:	e5c42007 	strb	r2, [r4, #7]
   19cc8:	eafff355 	b	16a24 <ExecZ80+0x4bc>
   19ccc:	e5d41018 	ldrb	r1, [r4, #24]
   19cd0:	e3110021 	tst	r1, #33	; 0x21
   19cd4:	1afff352 	bne	16a24 <ExecZ80+0x4bc>
   19cd8:	e3a00001 	mov	r0, #1
   19cdc:	e3811028 	orr	r1, r1, #40	; 0x28
   19ce0:	e5c41018 	strb	r1, [r4, #24]
   19ce4:	e5842024 	str	r2, [r4, #36]	; 0x24
   19ce8:	e5840020 	str	r0, [r4, #32]
   19cec:	eafff34c 	b	16a24 <ExecZ80+0x4bc>
   19cf0:	e5d42004 	ldrb	r2, [r4, #4]
   19cf4:	e5c42007 	strb	r2, [r4, #7]
   19cf8:	eafff349 	b	16a24 <ExecZ80+0x4bc>
   19cfc:	e5d42005 	ldrb	r2, [r4, #5]
   19d00:	e5c42007 	strb	r2, [r4, #7]
   19d04:	eafff346 	b	16a24 <ExecZ80+0x4bc>
   19d08:	e5d42002 	ldrb	r2, [r4, #2]
   19d0c:	e5c42007 	strb	r2, [r4, #7]
   19d10:	eafff343 	b	16a24 <ExecZ80+0x4bc>
   19d14:	e5d42005 	ldrb	r2, [r4, #5]
   19d18:	e5c42006 	strb	r2, [r4, #6]
   19d1c:	eafff340 	b	16a24 <ExecZ80+0x4bc>
   19d20:	e5d42002 	ldrb	r2, [r4, #2]
   19d24:	e5c42006 	strb	r2, [r4, #6]
   19d28:	eafff33d 	b	16a24 <ExecZ80+0x4bc>
   19d2c:	e5d42004 	ldrb	r2, [r4, #4]
   19d30:	e5c42006 	strb	r2, [r4, #6]
   19d34:	eafff33a 	b	16a24 <ExecZ80+0x4bc>
   19d38:	e5d42003 	ldrb	r2, [r4, #3]
   19d3c:	e5c42005 	strb	r2, [r4, #5]
   19d40:	eafff337 	b	16a24 <ExecZ80+0x4bc>
   19d44:	e5d42001 	ldrb	r2, [r4, #1]
   19d48:	e5c42002 	strb	r2, [r4, #2]
   19d4c:	eafff334 	b	16a24 <ExecZ80+0x4bc>
   19d50:	e1d420b6 	ldrh	r2, [r4, #6]
   19d54:	e35e0000 	cmp	lr, #0
   19d58:	11a02882 	lslne	r2, r2, #17
   19d5c:	151f17fc 	ldrne	r1, [pc, #-2044]	; 19568 <ExecZ80+0x3000>
   19d60:	11a028a2 	lsrne	r2, r2, #17
   19d64:	17d12002 	ldrbne	r2, [r1, r2]
   19d68:	07d62002 	ldrbeq	r2, [r6, r2]
   19d6c:	e5c42002 	strb	r2, [r4, #2]
   19d70:	eafff32b 	b	16a24 <ExecZ80+0x4bc>
   19d74:	e5d42006 	ldrb	r2, [r4, #6]
   19d78:	e5c42002 	strb	r2, [r4, #2]
   19d7c:	eafff328 	b	16a24 <ExecZ80+0x4bc>
   19d80:	e5d42007 	ldrb	r2, [r4, #7]
   19d84:	e5c42002 	strb	r2, [r4, #2]
   19d88:	eafff325 	b	16a24 <ExecZ80+0x4bc>
   19d8c:	e5d42004 	ldrb	r2, [r4, #4]
   19d90:	e5c42002 	strb	r2, [r4, #2]
   19d94:	eafff322 	b	16a24 <ExecZ80+0x4bc>
   19d98:	e5d42005 	ldrb	r2, [r4, #5]
   19d9c:	e5c42002 	strb	r2, [r4, #2]
   19da0:	eafff31f 	b	16a24 <ExecZ80+0x4bc>
   19da4:	e35e0000 	cmp	lr, #0
   19da8:	e2852002 	add	r2, r5, #2
   19dac:	e6ff2072 	uxth	r2, r2
   19db0:	11a03883 	lslne	r3, r3, #17
   19db4:	151f1854 	ldrne	r1, [pc, #-2132]	; 19568 <ExecZ80+0x3000>
   19db8:	e1c420bc 	strh	r2, [r4, #12]
   19dbc:	11a038a3 	lsrne	r3, r3, #17
   19dc0:	17d11003 	ldrbne	r1, [r1, r3]
   19dc4:	07d61003 	ldrbeq	r1, [r6, r3]
   19dc8:	e5d4e001 	ldrb	lr, [r4, #1]
   19dcc:	e1a03002 	mov	r3, r2
   19dd0:	e04e0001 	sub	r0, lr, r1
   19dd4:	e6ff0070 	uxth	r0, r0
   19dd8:	e6ef2070 	uxtb	r2, r0
   19ddc:	e08cc002 	add	ip, ip, r2
   19de0:	e021100e 	eor	r1, r1, lr
   19de4:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   19de8:	e02ee002 	eor	lr, lr, r2
   19dec:	e0222001 	eor	r2, r2, r1
   19df0:	e38cc002 	orr	ip, ip, #2
   19df4:	e001100e 	and	r1, r1, lr
   19df8:	e2022010 	and	r2, r2, #16
   19dfc:	e1a00420 	lsr	r0, r0, #8
   19e00:	e1a012a1 	lsr	r1, r1, #5
   19e04:	e182200c 	orr	r2, r2, ip
   19e08:	e2600000 	rsb	r0, r0, #0
   19e0c:	e2011004 	and	r1, r1, #4
   19e10:	e1822000 	orr	r2, r2, r0
   19e14:	e1822001 	orr	r2, r2, r1
   19e18:	e5c42000 	strb	r2, [r4]
   19e1c:	eafff300 	b	16a24 <ExecZ80+0x4bc>
   19e20:	e5d42003 	ldrb	r2, [r4, #3]
   19e24:	e5c42002 	strb	r2, [r4, #2]
   19e28:	eafff2fd 	b	16a24 <ExecZ80+0x4bc>
   19e2c:	e5d42001 	ldrb	r2, [r4, #1]
   19e30:	e5c42003 	strb	r2, [r4, #3]
   19e34:	eafff2fa 	b	16a24 <ExecZ80+0x4bc>
   19e38:	e1d420b6 	ldrh	r2, [r4, #6]
   19e3c:	e35e0000 	cmp	lr, #0
   19e40:	11a02882 	lslne	r2, r2, #17
   19e44:	151f18e4 	ldrne	r1, [pc, #-2276]	; 19568 <ExecZ80+0x3000>
   19e48:	11a028a2 	lsrne	r2, r2, #17
   19e4c:	17d12002 	ldrbne	r2, [r1, r2]
   19e50:	07d62002 	ldrbeq	r2, [r6, r2]
   19e54:	e5c42003 	strb	r2, [r4, #3]
   19e58:	eafff2f1 	b	16a24 <ExecZ80+0x4bc>
   19e5c:	e5d42006 	ldrb	r2, [r4, #6]
   19e60:	e5c42003 	strb	r2, [r4, #3]
   19e64:	eafff2ee 	b	16a24 <ExecZ80+0x4bc>
   19e68:	e5d42007 	ldrb	r2, [r4, #7]
   19e6c:	e5c42003 	strb	r2, [r4, #3]
   19e70:	eafff2eb 	b	16a24 <ExecZ80+0x4bc>
   19e74:	e5d42004 	ldrb	r2, [r4, #4]
   19e78:	e5c42003 	strb	r2, [r4, #3]
   19e7c:	eafff2e8 	b	16a24 <ExecZ80+0x4bc>
   19e80:	e5d42005 	ldrb	r2, [r4, #5]
   19e84:	e5c42003 	strb	r2, [r4, #3]
   19e88:	eafff2e5 	b	16a24 <ExecZ80+0x4bc>
   19e8c:	e5d42002 	ldrb	r2, [r4, #2]
   19e90:	e5c42003 	strb	r2, [r4, #3]
   19e94:	eafff2e2 	b	16a24 <ExecZ80+0x4bc>
   19e98:	e5d42003 	ldrb	r2, [r4, #3]
   19e9c:	e5c42004 	strb	r2, [r4, #4]
   19ea0:	eafff2df 	b	16a24 <ExecZ80+0x4bc>
   19ea4:	e5d42001 	ldrb	r2, [r4, #1]
   19ea8:	e5c42005 	strb	r2, [r4, #5]
   19eac:	eafff2dc 	b	16a24 <ExecZ80+0x4bc>
   19eb0:	e1d420b6 	ldrh	r2, [r4, #6]
   19eb4:	e35e0000 	cmp	lr, #0
   19eb8:	11a02882 	lslne	r2, r2, #17
   19ebc:	151f195c 	ldrne	r1, [pc, #-2396]	; 19568 <ExecZ80+0x3000>
   19ec0:	11a028a2 	lsrne	r2, r2, #17
   19ec4:	17d12002 	ldrbne	r2, [r1, r2]
   19ec8:	07d62002 	ldrbeq	r2, [r6, r2]
   19ecc:	e5c42005 	strb	r2, [r4, #5]
   19ed0:	eafff2d3 	b	16a24 <ExecZ80+0x4bc>
   19ed4:	e5d42006 	ldrb	r2, [r4, #6]
   19ed8:	e5c42005 	strb	r2, [r4, #5]
   19edc:	eafff2d0 	b	16a24 <ExecZ80+0x4bc>
   19ee0:	e5d42007 	ldrb	r2, [r4, #7]
   19ee4:	e5c42005 	strb	r2, [r4, #5]
   19ee8:	eafff2cd 	b	16a24 <ExecZ80+0x4bc>
   19eec:	e5d42004 	ldrb	r2, [r4, #4]
   19ef0:	e5c42005 	strb	r2, [r4, #5]
   19ef4:	eafff2ca 	b	16a24 <ExecZ80+0x4bc>
   19ef8:	e1a00004 	mov	r0, r4
   19efc:	ebffc4a7 	bl	b1a0 <CodesFD>
   19f00:	e1d430bc 	ldrh	r3, [r4, #12]
   19f04:	eafff2c6 	b	16a24 <ExecZ80+0x4bc>
   19f08:	e5d42002 	ldrb	r2, [r4, #2]
   19f0c:	e5c42005 	strb	r2, [r4, #5]
   19f10:	eafff2c3 	b	16a24 <ExecZ80+0x4bc>
   19f14:	e5d42007 	ldrb	r2, [r4, #7]
   19f18:	e5c42004 	strb	r2, [r4, #4]
   19f1c:	eafff2c0 	b	16a24 <ExecZ80+0x4bc>
   19f20:	e1d400d0 	ldrsb	r0, [r4]
   19f24:	e2851003 	add	r1, r5, #3
   19f28:	e3500000 	cmp	r0, #0
   19f2c:	e6ffc071 	uxth	ip, r1
   19f30:	a1c4c0bc 	strhge	ip, [r4, #12]
   19f34:	a1a0300c 	movge	r3, ip
   19f38:	aafff2b9 	bge	16a24 <ExecZ80+0x4bc>
   19f3c:	e35e0000 	cmp	lr, #0
   19f40:	151fe9e4 	ldrne	lr, [pc, #-2532]	; 19564 <ExecZ80+0x2ffc>
   19f44:	e2850002 	add	r0, r5, #2
   19f48:	e6ff0070 	uxth	r0, r0
   19f4c:	e2422007 	sub	r2, r2, #7
   19f50:	151f19f0 	ldrne	r1, [pc, #-2544]	; 19568 <ExecZ80+0x3000>
   19f54:	e1c400bc 	strh	r0, [r4, #12]
   19f58:	e5842020 	str	r2, [r4, #32]
   19f5c:	1003300e 	andne	r3, r3, lr
   19f60:	17d12003 	ldrbne	r2, [r1, r3]
   19f64:	1000000e 	andne	r0, r0, lr
   19f68:	11c4c0bc 	strhne	ip, [r4, #12]
   19f6c:	17d13000 	ldrbne	r3, [r1, r0]
   19f70:	e1d410be 	ldrh	r1, [r4, #14]
   19f74:	07d62003 	ldrbeq	r2, [r6, r3]
   19f78:	e2411001 	sub	r1, r1, #1
   19f7c:	01c4c0bc 	strheq	ip, [r4, #12]
   19f80:	e6ff1071 	uxth	r1, r1
   19f84:	e1a0c42c 	lsr	ip, ip, #8
   19f88:	07d63000 	ldrbeq	r3, [r6, r0]
   19f8c:	e1c410be 	strh	r1, [r4, #14]
   19f90:	e7c6c001 	strb	ip, [r6, r1]
   19f94:	e1d410be 	ldrh	r1, [r4, #14]
   19f98:	e6ef0072 	uxtb	r0, r2
   19f9c:	e2412001 	sub	r2, r1, #1
   19fa0:	e5d4100c 	ldrb	r1, [r4, #12]
   19fa4:	e6ff2072 	uxth	r2, r2
   19fa8:	e1803403 	orr	r3, r0, r3, lsl #8
   19fac:	e1c420be 	strh	r2, [r4, #14]
   19fb0:	e7c61002 	strb	r1, [r6, r2]
   19fb4:	e1c430bc 	strh	r3, [r4, #12]
   19fb8:	eafff299 	b	16a24 <ExecZ80+0x4bc>
   19fbc:	e5d42005 	ldrb	r2, [r4, #5]
   19fc0:	e5c42004 	strb	r2, [r4, #4]
   19fc4:	eafff296 	b	16a24 <ExecZ80+0x4bc>
   19fc8:	e5d42002 	ldrb	r2, [r4, #2]
   19fcc:	e5c42004 	strb	r2, [r4, #4]
   19fd0:	eafff293 	b	16a24 <ExecZ80+0x4bc>
   19fd4:	e1d420b6 	ldrh	r2, [r4, #6]
   19fd8:	e35e0000 	cmp	lr, #0
   19fdc:	11a02882 	lslne	r2, r2, #17
   19fe0:	151f1a80 	ldrne	r1, [pc, #-2688]	; 19568 <ExecZ80+0x3000>
   19fe4:	11a028a2 	lsrne	r2, r2, #17
   19fe8:	17d12002 	ldrbne	r2, [r1, r2]
   19fec:	07d62002 	ldrbeq	r2, [r6, r2]
   19ff0:	e5c42004 	strb	r2, [r4, #4]
   19ff4:	eafff28a 	b	16a24 <ExecZ80+0x4bc>
   19ff8:	e5d42006 	ldrb	r2, [r4, #6]
   19ffc:	e5c42004 	strb	r2, [r4, #4]
   1a000:	eafff287 	b	16a24 <ExecZ80+0x4bc>
   1a004:	e5d42001 	ldrb	r2, [r4, #1]
   1a008:	e5c42004 	strb	r2, [r4, #4]
   1a00c:	eafff284 	b	16a24 <ExecZ80+0x4bc>
   1a010:	e5d4202b 	ldrb	r2, [r4, #43]	; 0x2b
   1a014:	e3520000 	cmp	r2, #0
   1a018:	0afff281 	beq	16a24 <ExecZ80+0x4bc>
   1a01c:	e35e0000 	cmp	lr, #0
   1a020:	11a05885 	lslne	r5, r5, #17
   1a024:	151f2ac4 	ldrne	r2, [pc, #-2756]	; 19568 <ExecZ80+0x3000>
   1a028:	11a058a5 	lsrne	r5, r5, #17
   1a02c:	e2433001 	sub	r3, r3, #1
   1a030:	e5941030 	ldr	r1, [r4, #48]	; 0x30
   1a034:	17d22005 	ldrbne	r2, [r2, r5]
   1a038:	07d62005 	ldrbeq	r2, [r6, r5]
   1a03c:	e51f0ae4 	ldr	r0, [pc, #-2788]	; 19560 <ExecZ80+0x2ff8>
   1a040:	ebffbaee 	bl	8c00 <printf>
   1a044:	e1d430bc 	ldrh	r3, [r4, #12]
   1a048:	eafff275 	b	16a24 <ExecZ80+0x4bc>
   1a04c:	e7d63003 	ldrb	r3, [r6, r3]
   1a050:	e1c410bc 	strh	r1, [r4, #12]
   1a054:	e7d62002 	ldrb	r2, [r6, r2]
   1a058:	e1833402 	orr	r3, r3, r2, lsl #8
   1a05c:	e7d63003 	ldrb	r3, [r6, r3]
   1a060:	eafffbe9 	b	1900c <ExecZ80+0x2aa4>
   1a064:	e7d63003 	ldrb	r3, [r6, r3]
   1a068:	e1c410bc 	strh	r1, [r4, #12]
   1a06c:	e5c4300e 	strb	r3, [r4, #14]
   1a070:	e7d63002 	ldrb	r3, [r6, r2]
   1a074:	eafffc78 	b	1925c <ExecZ80+0x2cf4>
   1a078:	e7d63003 	ldrb	r3, [r6, r3]
   1a07c:	e1c410bc 	strh	r1, [r4, #12]
   1a080:	e5c43006 	strb	r3, [r4, #6]
   1a084:	e7d63002 	ldrb	r3, [r6, r2]
   1a088:	eafffd46 	b	195a8 <ExecZ80+0x3040>
   1a08c:	e7d63003 	ldrb	r3, [r6, r3]
   1a090:	e1c410bc 	strh	r1, [r4, #12]
   1a094:	e7d62002 	ldrb	r2, [r6, r2]
   1a098:	e1833402 	orr	r3, r3, r2, lsl #8
   1a09c:	e7d62003 	ldrb	r2, [r6, r3]
   1a0a0:	e2833001 	add	r3, r3, #1
   1a0a4:	e5c42006 	strb	r2, [r4, #6]
   1a0a8:	e6ff3073 	uxth	r3, r3
   1a0ac:	e7d63003 	ldrb	r3, [r6, r3]
   1a0b0:	eafffcff 	b	194b4 <ExecZ80+0x2f4c>
   1a0b4:	e7d62003 	ldrb	r2, [r6, r3]
   1a0b8:	e1c410be 	strh	r1, [r4, #14]
   1a0bc:	e7c6c003 	strb	ip, [r6, r3]
   1a0c0:	e1d430be 	ldrh	r3, [r4, #14]
   1a0c4:	e7d60003 	ldrb	r0, [r6, r3]
   1a0c8:	eafff39c 	b	16f40 <ExecZ80+0x9d8>
   1a0cc:	e7d61001 	ldrb	r1, [r6, r1]
   1a0d0:	e1c400be 	strh	r0, [r4, #14]
   1a0d4:	e5c41000 	strb	r1, [r4]
   1a0d8:	e7d62002 	ldrb	r2, [r6, r2]
   1a0dc:	eafff2d0 	b	16c24 <ExecZ80+0x6bc>
   1a0e0:	e7d61001 	ldrb	r1, [r6, r1]
   1a0e4:	e1c400be 	strh	r0, [r4, #14]
   1a0e8:	e5c41004 	strb	r1, [r4, #4]
   1a0ec:	e7d62002 	ldrb	r2, [r6, r2]
   1a0f0:	eafff628 	b	17998 <ExecZ80+0x1430>
   1a0f4:	e7d61001 	ldrb	r1, [r6, r1]
   1a0f8:	e1c400be 	strh	r0, [r4, #14]
   1a0fc:	e5c41006 	strb	r1, [r4, #6]
   1a100:	e7d62002 	ldrb	r2, [r6, r2]
   1a104:	eafff3b9 	b	16ff0 <ExecZ80+0xa88>
   1a108:	e7d63003 	ldrb	r3, [r6, r3]
   1a10c:	e1c410bc 	strh	r1, [r4, #12]
   1a110:	e5c43002 	strb	r3, [r4, #2]
   1a114:	e7d63002 	ldrb	r3, [r6, r2]
   1a118:	eafffe69 	b	19ac4 <ExecZ80+0x355c>
   1a11c:	e7d62002 	ldrb	r2, [r6, r2]
   1a120:	e1c410be 	strh	r1, [r4, #14]
   1a124:	e5c4200c 	strb	r2, [r4, #12]
   1a128:	e7d63003 	ldrb	r3, [r6, r3]
   1a12c:	eafff4e5 	b	174c8 <ExecZ80+0xf60>
   1a130:	e7d61001 	ldrb	r1, [r6, r1]
   1a134:	e1c400be 	strh	r0, [r4, #14]
   1a138:	e5c41002 	strb	r1, [r4, #2]
   1a13c:	e7d62002 	ldrb	r2, [r6, r2]
   1a140:	eafff6b1 	b	17c0c <ExecZ80+0x16a4>
   1a144:	e7d63003 	ldrb	r3, [r6, r3]
   1a148:	e1c410bc 	strh	r1, [r4, #12]
   1a14c:	e5c43004 	strb	r3, [r4, #4]
   1a150:	e7d63002 	ldrb	r3, [r6, r2]
   1a154:	eafffdfe 	b	19954 <ExecZ80+0x33ec>
   1a158:	e2853002 	add	r3, r5, #2
   1a15c:	e6ff3073 	uxth	r3, r3
   1a160:	e1c430bc 	strh	r3, [r4, #12]
   1a164:	eafff22e 	b	16a24 <ExecZ80+0x4bc>
   1a168:	e2853003 	add	r3, r5, #3
   1a16c:	e6ff3073 	uxth	r3, r3
   1a170:	e1c430bc 	strh	r3, [r4, #12]
   1a174:	eafff22a 	b	16a24 <ExecZ80+0x4bc>
   1a178:	e2853002 	add	r3, r5, #2
   1a17c:	e6ff3073 	uxth	r3, r3
   1a180:	e1c430bc 	strh	r3, [r4, #12]
   1a184:	eafff226 	b	16a24 <ExecZ80+0x4bc>
   1a188:	e2853002 	add	r3, r5, #2
   1a18c:	e6ff3073 	uxth	r3, r3
   1a190:	e1c430bc 	strh	r3, [r4, #12]
   1a194:	eafff222 	b	16a24 <ExecZ80+0x4bc>
   1a198:	e2853003 	add	r3, r5, #3
   1a19c:	e6ff3073 	uxth	r3, r3
   1a1a0:	e1c430bc 	strh	r3, [r4, #12]
   1a1a4:	eafff21e 	b	16a24 <ExecZ80+0x4bc>
   1a1a8:	e2853003 	add	r3, r5, #3
   1a1ac:	e6ff3073 	uxth	r3, r3
   1a1b0:	e1c430bc 	strh	r3, [r4, #12]
   1a1b4:	eafff21a 	b	16a24 <ExecZ80+0x4bc>
   1a1b8:	e2853003 	add	r3, r5, #3
   1a1bc:	e6ff3073 	uxth	r3, r3
   1a1c0:	e1c430bc 	strh	r3, [r4, #12]
   1a1c4:	eafff216 	b	16a24 <ExecZ80+0x4bc>
   1a1c8:	e2853003 	add	r3, r5, #3
   1a1cc:	e6ff3073 	uxth	r3, r3
   1a1d0:	e1c430bc 	strh	r3, [r4, #12]
   1a1d4:	eafff212 	b	16a24 <ExecZ80+0x4bc>
   1a1d8:	e2853003 	add	r3, r5, #3
   1a1dc:	e6ff3073 	uxth	r3, r3
   1a1e0:	e1c430bc 	strh	r3, [r4, #12]
   1a1e4:	eafff20e 	b	16a24 <ExecZ80+0x4bc>
   1a1e8:	e2853002 	add	r3, r5, #2
   1a1ec:	e6ff3073 	uxth	r3, r3
   1a1f0:	e1c430bc 	strh	r3, [r4, #12]
   1a1f4:	eafff20a 	b	16a24 <ExecZ80+0x4bc>
   1a1f8:	e2853002 	add	r3, r5, #2
   1a1fc:	e6ff3073 	uxth	r3, r3
   1a200:	e1c430bc 	strh	r3, [r4, #12]
   1a204:	eafff206 	b	16a24 <ExecZ80+0x4bc>
   1a208:	e35e0000 	cmp	lr, #0
   1a20c:	151fccb0 	ldrne	ip, [pc, #-3248]	; 19564 <ExecZ80+0x2ffc>
   1a210:	e2851002 	add	r1, r5, #2
   1a214:	e6ff1071 	uxth	r1, r1
   1a218:	151f0cb8 	ldrne	r0, [pc, #-3256]	; 19568 <ExecZ80+0x3000>
   1a21c:	e1c410bc 	strh	r1, [r4, #12]
   1a220:	1003300c 	andne	r3, r3, ip
   1a224:	17d02003 	ldrbne	r2, [r0, r3]
   1a228:	07d62003 	ldrbeq	r2, [r6, r3]
   1a22c:	1001100c 	andne	r1, r1, ip
   1a230:	17d03001 	ldrbne	r3, [r0, r1]
   1a234:	07d63001 	ldrbeq	r3, [r6, r1]
   1a238:	e6ef2072 	uxtb	r2, r2
   1a23c:	e1823403 	orr	r3, r2, r3, lsl #8
   1a240:	e1c430bc 	strh	r3, [r4, #12]
   1a244:	eafff1f6 	b	16a24 <ExecZ80+0x4bc>
   1a248:	e7d61001 	ldrb	r1, [r6, r1]
   1a24c:	e1c420be 	strh	r2, [r4, #14]
   1a250:	e5c4100c 	strb	r1, [r4, #12]
   1a254:	e7d63003 	ldrb	r3, [r6, r3]
   1a258:	eafff2a7 	b	16cfc <ExecZ80+0x794>
   1a25c:	e3833004 	orr	r3, r3, #4
   1a260:	e3a01010 	mov	r1, #16
   1a264:	eafffbb4 	b	1913c <ExecZ80+0x2bd4>
   1a268:	e3811004 	orr	r1, r1, #4
   1a26c:	e3a02010 	mov	r2, #16
   1a270:	eafffe7c 	b	19c68 <ExecZ80+0x3700>
   1a274:	e3811004 	orr	r1, r1, #4
   1a278:	e3a02010 	mov	r2, #16
   1a27c:	eafffc66 	b	1941c <ExecZ80+0x2eb4>
   1a280:	e3822004 	orr	r2, r2, #4
   1a284:	e3a01010 	mov	r1, #16
   1a288:	eafffdf2 	b	19a58 <ExecZ80+0x34f0>
   1a28c:	e3822004 	orr	r2, r2, #4
   1a290:	e3a01010 	mov	r1, #16
   1a294:	eafffd31 	b	19760 <ExecZ80+0x31f8>
   1a298:	e3811004 	orr	r1, r1, #4
   1a29c:	e3a02010 	mov	r2, #16
   1a2a0:	eafffd7d 	b	1989c <ExecZ80+0x3334>
   1a2a4:	e3811004 	orr	r1, r1, #4
   1a2a8:	e3a02010 	mov	r2, #16
   1a2ac:	eafffe2e 	b	19b6c <ExecZ80+0x3604>
   1a2b0:	e3822004 	orr	r2, r2, #4
   1a2b4:	e3a01010 	mov	r1, #16
   1a2b8:	eafffd8a 	b	198e8 <ExecZ80+0x3380>
   1a2bc:	e3822004 	orr	r2, r2, #4
   1a2c0:	e3a01010 	mov	r1, #16
   1a2c4:	eafffdcd 	b	19a00 <ExecZ80+0x3498>
   1a2c8:	e3811004 	orr	r1, r1, #4
   1a2cc:	e3a02010 	mov	r2, #16
   1a2d0:	eafffd0f 	b	19714 <ExecZ80+0x31ac>
   1a2d4:	e3811004 	orr	r1, r1, #4
   1a2d8:	e3a02010 	mov	r2, #16
   1a2dc:	eafffcce 	b	1961c <ExecZ80+0x30b4>
   1a2e0:	e3822004 	orr	r2, r2, #4
   1a2e4:	e3a01010 	mov	r1, #16
   1a2e8:	eafffc0f 	b	1932c <ExecZ80+0x2dc4>
   1a2ec:	e3833004 	orr	r3, r3, #4
   1a2f0:	e3a02010 	mov	r2, #16
   1a2f4:	eafffbaa 	b	191a4 <ExecZ80+0x2c3c>
   1a2f8:	e3822004 	orr	r2, r2, #4
   1a2fc:	e3a01010 	mov	r1, #16
   1a300:	eafffb2d 	b	18fbc <ExecZ80+0x2a54>
   1a304:	e3811004 	orr	r1, r1, #4
   1a308:	e3a02010 	mov	r2, #16
   1a30c:	eafffb17 	b	18f70 <ExecZ80+0x2a08>
   1a310:	e3822004 	orr	r2, r2, #4
   1a314:	e3a01010 	mov	r1, #16
   1a318:	eafffc15 	b	19374 <ExecZ80+0x2e0c>
   1a31c:	e7d61001 	ldrb	r1, [r6, r1]
   1a320:	e1c420be 	strh	r2, [r4, #14]
   1a324:	e5c4100c 	strb	r1, [r4, #12]
   1a328:	e7d63003 	ldrb	r3, [r6, r3]
   1a32c:	eafff1ba 	b	16a1c <ExecZ80+0x4b4>
   1a330:	e7d61001 	ldrb	r1, [r6, r1]
   1a334:	e1c420be 	strh	r2, [r4, #14]
   1a338:	e5c4100c 	strb	r1, [r4, #12]
   1a33c:	e7d63003 	ldrb	r3, [r6, r3]
   1a340:	eafff494 	b	17598 <ExecZ80+0x1030>
   1a344:	e7d61001 	ldrb	r1, [r6, r1]
   1a348:	e1c420be 	strh	r2, [r4, #14]
   1a34c:	e5c4100c 	strb	r1, [r4, #12]
   1a350:	e7d63003 	ldrb	r3, [r6, r3]
   1a354:	eafff3bb 	b	17248 <ExecZ80+0xce0>
   1a358:	e7d61001 	ldrb	r1, [r6, r1]
   1a35c:	e1c420be 	strh	r2, [r4, #14]
   1a360:	e5c4100c 	strb	r1, [r4, #12]
   1a364:	e7d63003 	ldrb	r3, [r6, r3]
   1a368:	eafff28b 	b	16d9c <ExecZ80+0x834>
   1a36c:	e7d61001 	ldrb	r1, [r6, r1]
   1a370:	e1c420be 	strh	r2, [r4, #14]
   1a374:	e5c4100c 	strb	r1, [r4, #12]
   1a378:	e7d63003 	ldrb	r3, [r6, r3]
   1a37c:	eafff469 	b	17528 <ExecZ80+0xfc0>
   1a380:	e7d61001 	ldrb	r1, [r6, r1]
   1a384:	e1c420be 	strh	r2, [r4, #14]
   1a388:	e5c4100c 	strb	r1, [r4, #12]
   1a38c:	e7d63003 	ldrb	r3, [r6, r3]
   1a390:	eafff384 	b	171a8 <ExecZ80+0xc40>
   1a394:	e7d61001 	ldrb	r1, [r6, r1]
   1a398:	e1c420be 	strh	r2, [r4, #14]
   1a39c:	e5c4100c 	strb	r1, [r4, #12]
   1a3a0:	e7d63003 	ldrb	r3, [r6, r3]
   1a3a4:	eafff1b5 	b	16a80 <ExecZ80+0x518>

0001a3a8 <IntZ80>:
   1a3a8:	e5d02018 	ldrb	r2, [r0, #24]
   1a3ac:	e59f325c 	ldr	r3, [pc, #604]	; 1a610 <IntZ80+0x268>
   1a3b0:	e1510003 	cmp	r1, r3
   1a3b4:	11a03002 	movne	r3, r2
   1a3b8:	03823001 	orreq	r3, r2, #1
   1a3bc:	e3130001 	tst	r3, #1
   1a3c0:	012fff1e 	bxeq	lr
   1a3c4:	e3120080 	tst	r2, #128	; 0x80
   1a3c8:	11d030bc 	ldrhne	r3, [r0, #12]
   1a3cc:	1202207f 	andne	r2, r2, #127	; 0x7f
   1a3d0:	12833001 	addne	r3, r3, #1
   1a3d4:	11c030bc 	strhne	r3, [r0, #12]
   1a3d8:	e1d030be 	ldrh	r3, [r0, #14]
   1a3dc:	15c02018 	strbne	r2, [r0, #24]
   1a3e0:	e5d0c00d 	ldrb	ip, [r0, #13]
   1a3e4:	e59f2228 	ldr	r2, [pc, #552]	; 1a614 <IntZ80+0x26c>
   1a3e8:	e2433001 	sub	r3, r3, #1
   1a3ec:	e6ff3073 	uxth	r3, r3
   1a3f0:	e1c030be 	strh	r3, [r0, #14]
   1a3f4:	e7c2c003 	strb	ip, [r2, r3]
   1a3f8:	e1d030be 	ldrh	r3, [r0, #14]
   1a3fc:	e5d0c00c 	ldrb	ip, [r0, #12]
   1a400:	e2433001 	sub	r3, r3, #1
   1a404:	e6ff3073 	uxth	r3, r3
   1a408:	e1c030be 	strh	r3, [r0, #14]
   1a40c:	e7c2c003 	strb	ip, [r2, r3]
   1a410:	e5d0302a 	ldrb	r3, [r0, #42]	; 0x2a
   1a414:	e3530000 	cmp	r3, #0
   1a418:	0a000003 	beq	1a42c <IntZ80+0x84>
   1a41c:	e1d032b8 	ldrh	r3, [r0, #40]	; 0x28
   1a420:	e1530001 	cmp	r3, r1
   1a424:	03e03000 	mvneq	r3, #0
   1a428:	01c032b8 	strheq	r3, [r0, #40]	; 0x28
   1a42c:	e59fc1dc 	ldr	ip, [pc, #476]	; 1a610 <IntZ80+0x268>
   1a430:	e5d03018 	ldrb	r3, [r0, #24]
   1a434:	e151000c 	cmp	r1, ip
   1a438:	0a000015 	beq	1a494 <IntZ80+0xec>
   1a43c:	e3c3c029 	bic	ip, r3, #41	; 0x29
   1a440:	e3130004 	tst	r3, #4
   1a444:	e5c0c018 	strb	ip, [r0, #24]
   1a448:	0a000019 	beq	1a4b4 <IntZ80+0x10c>
   1a44c:	e59fc1c4 	ldr	ip, [pc, #452]	; 1a618 <IntZ80+0x270>
   1a450:	e5d03019 	ldrb	r3, [r0, #25]
   1a454:	e59cc000 	ldr	ip, [ip]
   1a458:	e6ef1071 	uxtb	r1, r1
   1a45c:	e35c0000 	cmp	ip, #0
   1a460:	159fc1b4 	ldrne	ip, [pc, #436]	; 1a61c <IntZ80+0x274>
   1a464:	e1811403 	orr	r1, r1, r3, lsl #8
   1a468:	159f21b0 	ldrne	r2, [pc, #432]	; 1a620 <IntZ80+0x278>
   1a46c:	e2813001 	add	r3, r1, #1
   1a470:	1001100c 	andne	r1, r1, ip
   1a474:	17d21001 	ldrbne	r1, [r2, r1]
   1a478:	07d21001 	ldrbeq	r1, [r2, r1]
   1a47c:	e6ff3073 	uxth	r3, r3
   1a480:	1003300c 	andne	r3, r3, ip
   1a484:	e5c0100c 	strb	r1, [r0, #12]
   1a488:	e7d23003 	ldrb	r3, [r2, r3]
   1a48c:	e5c0300d 	strb	r3, [r0, #13]
   1a490:	e12fff1e 	bx	lr
   1a494:	e3a02066 	mov	r2, #102	; 0x66
   1a498:	e3130001 	tst	r3, #1
   1a49c:	13833008 	orrne	r3, r3, #8
   1a4a0:	020330f7 	andeq	r3, r3, #247	; 0xf7
   1a4a4:	e3c33021 	bic	r3, r3, #33	; 0x21
   1a4a8:	e5c03018 	strb	r3, [r0, #24]
   1a4ac:	e1c020bc 	strh	r2, [r0, #12]
   1a4b0:	e12fff1e 	bx	lr
   1a4b4:	e3130002 	tst	r3, #2
   1a4b8:	1a00003c 	bne	1a5b0 <IntZ80+0x208>
   1a4bc:	e24110c7 	sub	r1, r1, #199	; 0xc7
   1a4c0:	e3510038 	cmp	r1, #56	; 0x38
   1a4c4:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
   1a4c8:	ea00003a 	b	1a5b8 <IntZ80+0x210>
   1a4cc:	0001a604 	.word	0x0001a604
   1a4d0:	0001a5b8 	.word	0x0001a5b8
   1a4d4:	0001a5b8 	.word	0x0001a5b8
   1a4d8:	0001a5b8 	.word	0x0001a5b8
   1a4dc:	0001a5b8 	.word	0x0001a5b8
   1a4e0:	0001a5b8 	.word	0x0001a5b8
   1a4e4:	0001a5b8 	.word	0x0001a5b8
   1a4e8:	0001a5b8 	.word	0x0001a5b8
   1a4ec:	0001a5f8 	.word	0x0001a5f8
   1a4f0:	0001a5b8 	.word	0x0001a5b8
   1a4f4:	0001a5b8 	.word	0x0001a5b8
   1a4f8:	0001a5b8 	.word	0x0001a5b8
   1a4fc:	0001a5b8 	.word	0x0001a5b8
   1a500:	0001a5b8 	.word	0x0001a5b8
   1a504:	0001a5b8 	.word	0x0001a5b8
   1a508:	0001a5b8 	.word	0x0001a5b8
   1a50c:	0001a5ec 	.word	0x0001a5ec
   1a510:	0001a5b8 	.word	0x0001a5b8
   1a514:	0001a5b8 	.word	0x0001a5b8
   1a518:	0001a5b8 	.word	0x0001a5b8
   1a51c:	0001a5b8 	.word	0x0001a5b8
   1a520:	0001a5b8 	.word	0x0001a5b8
   1a524:	0001a5b8 	.word	0x0001a5b8
   1a528:	0001a5b8 	.word	0x0001a5b8
   1a52c:	0001a5e0 	.word	0x0001a5e0
   1a530:	0001a5b8 	.word	0x0001a5b8
   1a534:	0001a5b8 	.word	0x0001a5b8
   1a538:	0001a5b8 	.word	0x0001a5b8
   1a53c:	0001a5b8 	.word	0x0001a5b8
   1a540:	0001a5b8 	.word	0x0001a5b8
   1a544:	0001a5b8 	.word	0x0001a5b8
   1a548:	0001a5b8 	.word	0x0001a5b8
   1a54c:	0001a5d4 	.word	0x0001a5d4
   1a550:	0001a5b8 	.word	0x0001a5b8
   1a554:	0001a5b8 	.word	0x0001a5b8
   1a558:	0001a5b8 	.word	0x0001a5b8
   1a55c:	0001a5b8 	.word	0x0001a5b8
   1a560:	0001a5b8 	.word	0x0001a5b8
   1a564:	0001a5b8 	.word	0x0001a5b8
   1a568:	0001a5b8 	.word	0x0001a5b8
   1a56c:	0001a5c8 	.word	0x0001a5c8
   1a570:	0001a5b8 	.word	0x0001a5b8
   1a574:	0001a5b8 	.word	0x0001a5b8
   1a578:	0001a5b8 	.word	0x0001a5b8
   1a57c:	0001a5b8 	.word	0x0001a5b8
   1a580:	0001a5b8 	.word	0x0001a5b8
   1a584:	0001a5b8 	.word	0x0001a5b8
   1a588:	0001a5b8 	.word	0x0001a5b8
   1a58c:	0001a5bc 	.word	0x0001a5bc
   1a590:	0001a5b8 	.word	0x0001a5b8
   1a594:	0001a5b8 	.word	0x0001a5b8
   1a598:	0001a5b8 	.word	0x0001a5b8
   1a59c:	0001a5b8 	.word	0x0001a5b8
   1a5a0:	0001a5b8 	.word	0x0001a5b8
   1a5a4:	0001a5b8 	.word	0x0001a5b8
   1a5a8:	0001a5b8 	.word	0x0001a5b8
   1a5ac:	0001a5b0 	.word	0x0001a5b0
   1a5b0:	e3a03038 	mov	r3, #56	; 0x38
   1a5b4:	e1c030bc 	strh	r3, [r0, #12]
   1a5b8:	e12fff1e 	bx	lr
   1a5bc:	e3a03030 	mov	r3, #48	; 0x30
   1a5c0:	e1c030bc 	strh	r3, [r0, #12]
   1a5c4:	e12fff1e 	bx	lr
   1a5c8:	e3a03028 	mov	r3, #40	; 0x28
   1a5cc:	e1c030bc 	strh	r3, [r0, #12]
   1a5d0:	e12fff1e 	bx	lr
   1a5d4:	e3a03020 	mov	r3, #32
   1a5d8:	e1c030bc 	strh	r3, [r0, #12]
   1a5dc:	e12fff1e 	bx	lr
   1a5e0:	e3a03018 	mov	r3, #24
   1a5e4:	e1c030bc 	strh	r3, [r0, #12]
   1a5e8:	e12fff1e 	bx	lr
   1a5ec:	e3a03010 	mov	r3, #16
   1a5f0:	e1c030bc 	strh	r3, [r0, #12]
   1a5f4:	e12fff1e 	bx	lr
   1a5f8:	e3a03008 	mov	r3, #8
   1a5fc:	e1c030bc 	strh	r3, [r0, #12]
   1a600:	e12fff1e 	bx	lr
   1a604:	e3a03000 	mov	r3, #0
   1a608:	e1c030bc 	strh	r3, [r0, #12]
   1a60c:	e12fff1e 	bx	lr
   1a610:	0000fffd 	.word	0x0000fffd
   1a614:	0005cf80 	.word	0x0005cf80
   1a618:	0006ef80 	.word	0x0006ef80
   1a61c:	00007fff 	.word	0x00007fff
   1a620:	00050428 	.word	0x00050428

0001a624 <RunZ80>:
   1a624:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a628:	e1a04000 	mov	r4, r0
   1a62c:	e59f8fdc 	ldr	r8, [pc, #4060]	; 1b610 <RunZ80+0xfec>
   1a630:	e59f6fdc 	ldr	r6, [pc, #4060]	; 1b614 <RunZ80+0xff0>
   1a634:	e59fafdc 	ldr	sl, [pc, #4060]	; 1b618 <RunZ80+0xff4>
   1a638:	e59fbfdc 	ldr	fp, [pc, #4060]	; 1b61c <RunZ80+0xff8>
   1a63c:	e2887a12 	add	r7, r8, #73728	; 0x12000
   1a640:	e59f9fd8 	ldr	r9, [pc, #4056]	; 1b620 <RunZ80+0xffc>
   1a644:	e1d400bc 	ldrh	r0, [r4, #12]
   1a648:	e5942020 	ldr	r2, [r4, #32]
   1a64c:	e5971000 	ldr	r1, [r7]
   1a650:	e2803001 	add	r3, r0, #1
   1a654:	e6ff3073 	uxth	r3, r3
   1a658:	e3510000 	cmp	r1, #0
   1a65c:	e1c430bc 	strh	r3, [r4, #12]
   1a660:	0a000130 	beq	1ab28 <RunZ80+0x504>
   1a664:	e000c009 	and	ip, r0, r9
   1a668:	e7dac00c 	ldrb	ip, [sl, ip]
   1a66c:	e086e00c 	add	lr, r6, ip
   1a670:	e5dee600 	ldrb	lr, [lr, #1536]	; 0x600
   1a674:	e042200e 	sub	r2, r2, lr
   1a678:	e5842020 	str	r2, [r4, #32]
   1a67c:	e35c00ff 	cmp	ip, #255	; 0xff
   1a680:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
   1a684:	ea000f81 	b	1e490 <RunZ80+0x3e6c>
   1a688:	0001ab18 	.word	0x0001ab18
   1a68c:	0001e4f4 	.word	0x0001e4f4
   1a690:	0001e47c 	.word	0x0001e47c
   1a694:	0001e468 	.word	0x0001e468
   1a698:	0001e41c 	.word	0x0001e41c
   1a69c:	0001e3cc 	.word	0x0001e3cc
   1a6a0:	0001e3a8 	.word	0x0001e3a8
   1a6a4:	0001e380 	.word	0x0001e380
   1a6a8:	0001e364 	.word	0x0001e364
   1a6ac:	0001e324 	.word	0x0001e324
   1a6b0:	0001e304 	.word	0x0001e304
   1a6b4:	0001e2f0 	.word	0x0001e2f0
   1a6b8:	0001e2a4 	.word	0x0001e2a4
   1a6bc:	0001e254 	.word	0x0001e254
   1a6c0:	0001e230 	.word	0x0001e230
   1a6c4:	0001e200 	.word	0x0001e200
   1a6c8:	0001e1bc 	.word	0x0001e1bc
   1a6cc:	0001e170 	.word	0x0001e170
   1a6d0:	0001e15c 	.word	0x0001e15c
   1a6d4:	0001e148 	.word	0x0001e148
   1a6d8:	0001e0fc 	.word	0x0001e0fc
   1a6dc:	0001e0ac 	.word	0x0001e0ac
   1a6e0:	0001e088 	.word	0x0001e088
   1a6e4:	0001e060 	.word	0x0001e060
   1a6e8:	0001e03c 	.word	0x0001e03c
   1a6ec:	0001dffc 	.word	0x0001dffc
   1a6f0:	0001dfdc 	.word	0x0001dfdc
   1a6f4:	0001dfc8 	.word	0x0001dfc8
   1a6f8:	0001df7c 	.word	0x0001df7c
   1a6fc:	0001df2c 	.word	0x0001df2c
   1a700:	0001df08 	.word	0x0001df08
   1a704:	0001dedc 	.word	0x0001dedc
   1a708:	0001dec0 	.word	0x0001dec0
   1a70c:	0001de74 	.word	0x0001de74
   1a710:	0001de1c 	.word	0x0001de1c
   1a714:	0001de08 	.word	0x0001de08
   1a718:	0001ddbc 	.word	0x0001ddbc
   1a71c:	0001dd6c 	.word	0x0001dd6c
   1a720:	0001dd48 	.word	0x0001dd48
   1a724:	0001dd04 	.word	0x0001dd04
   1a728:	0001dccc 	.word	0x0001dccc
   1a72c:	0001dc98 	.word	0x0001dc98
   1a730:	0001dc48 	.word	0x0001dc48
   1a734:	0001dc34 	.word	0x0001dc34
   1a738:	0001dbe8 	.word	0x0001dbe8
   1a73c:	0001db98 	.word	0x0001db98
   1a740:	0001db74 	.word	0x0001db74
   1a744:	0001db54 	.word	0x0001db54
   1a748:	0001db38 	.word	0x0001db38
   1a74c:	0001daec 	.word	0x0001daec
   1a750:	0001daa0 	.word	0x0001daa0
   1a754:	0001da8c 	.word	0x0001da8c
   1a758:	0001da30 	.word	0x0001da30
   1a75c:	0001d9d0 	.word	0x0001d9d0
   1a760:	0001d9a8 	.word	0x0001d9a8
   1a764:	0001d990 	.word	0x0001d990
   1a768:	0001d958 	.word	0x0001d958
   1a76c:	0001d918 	.word	0x0001d918
   1a770:	0001d8c8 	.word	0x0001d8c8
   1a774:	0001d8b4 	.word	0x0001d8b4
   1a778:	0001d868 	.word	0x0001d868
   1a77c:	0001d818 	.word	0x0001d818
   1a780:	0001d7f4 	.word	0x0001d7f4
   1a784:	0001d7d0 	.word	0x0001d7d0
   1a788:	0001ab18 	.word	0x0001ab18
   1a78c:	0001d780 	.word	0x0001d780
   1a790:	0001d770 	.word	0x0001d770
   1a794:	0001d760 	.word	0x0001d760
   1a798:	0001d750 	.word	0x0001d750
   1a79c:	0001d740 	.word	0x0001d740
   1a7a0:	0001d720 	.word	0x0001d720
   1a7a4:	0001d710 	.word	0x0001d710
   1a7a8:	0001d700 	.word	0x0001d700
   1a7ac:	0001ab18 	.word	0x0001ab18
   1a7b0:	0001d680 	.word	0x0001d680
   1a7b4:	0001d670 	.word	0x0001d670
   1a7b8:	0001d660 	.word	0x0001d660
   1a7bc:	0001d650 	.word	0x0001d650
   1a7c0:	0001d630 	.word	0x0001d630
   1a7c4:	0001d620 	.word	0x0001d620
   1a7c8:	0001d610 	.word	0x0001d610
   1a7cc:	0001d600 	.word	0x0001d600
   1a7d0:	0001ab18 	.word	0x0001ab18
   1a7d4:	0001d5e0 	.word	0x0001d5e0
   1a7d8:	0001d5d0 	.word	0x0001d5d0
   1a7dc:	0001d5c0 	.word	0x0001d5c0
   1a7e0:	0001d5a0 	.word	0x0001d5a0
   1a7e4:	0001d590 	.word	0x0001d590
   1a7e8:	0001d580 	.word	0x0001d580
   1a7ec:	0001d570 	.word	0x0001d570
   1a7f0:	0001d560 	.word	0x0001d560
   1a7f4:	0001ab18 	.word	0x0001ab18
   1a7f8:	0001d530 	.word	0x0001d530
   1a7fc:	0001d520 	.word	0x0001d520
   1a800:	0001d500 	.word	0x0001d500
   1a804:	0001d4f0 	.word	0x0001d4f0
   1a808:	0001d4e0 	.word	0x0001d4e0
   1a80c:	0001d4d0 	.word	0x0001d4d0
   1a810:	0001d4c0 	.word	0x0001d4c0
   1a814:	0001d4b0 	.word	0x0001d4b0
   1a818:	0001ab18 	.word	0x0001ab18
   1a81c:	0001d474 	.word	0x0001d474
   1a820:	0001d454 	.word	0x0001d454
   1a824:	0001d444 	.word	0x0001d444
   1a828:	0001d434 	.word	0x0001d434
   1a82c:	0001d424 	.word	0x0001d424
   1a830:	0001d414 	.word	0x0001d414
   1a834:	0001d404 	.word	0x0001d404
   1a838:	0001d3f4 	.word	0x0001d3f4
   1a83c:	0001ab18 	.word	0x0001ab18
   1a840:	0001d3b8 	.word	0x0001d3b8
   1a844:	0001d3a8 	.word	0x0001d3a8
   1a848:	0001d394 	.word	0x0001d394
   1a84c:	0001d380 	.word	0x0001d380
   1a850:	0001d36c 	.word	0x0001d36c
   1a854:	0001d358 	.word	0x0001d358
   1a858:	0001d344 	.word	0x0001d344
   1a85c:	0001d330 	.word	0x0001d330
   1a860:	0001d310 	.word	0x0001d310
   1a864:	0001d2fc 	.word	0x0001d2fc
   1a868:	0001d2ec 	.word	0x0001d2ec
   1a86c:	0001d2dc 	.word	0x0001d2dc
   1a870:	0001d2cc 	.word	0x0001d2cc
   1a874:	0001d2bc 	.word	0x0001d2bc
   1a878:	0001d2ac 	.word	0x0001d2ac
   1a87c:	0001d29c 	.word	0x0001d29c
   1a880:	0001d27c 	.word	0x0001d27c
   1a884:	0001ab18 	.word	0x0001ab18
   1a888:	0001d21c 	.word	0x0001d21c
   1a88c:	0001d1cc 	.word	0x0001d1cc
   1a890:	0001d17c 	.word	0x0001d17c
   1a894:	0001d12c 	.word	0x0001d12c
   1a898:	0001d0dc 	.word	0x0001d0dc
   1a89c:	0001d08c 	.word	0x0001d08c
   1a8a0:	0001d02c 	.word	0x0001d02c
   1a8a4:	0001cfec 	.word	0x0001cfec
   1a8a8:	0001cf90 	.word	0x0001cf90
   1a8ac:	0001cf34 	.word	0x0001cf34
   1a8b0:	0001ced8 	.word	0x0001ced8
   1a8b4:	0001ce7c 	.word	0x0001ce7c
   1a8b8:	0001ce20 	.word	0x0001ce20
   1a8bc:	0001cdc4 	.word	0x0001cdc4
   1a8c0:	0001cd58 	.word	0x0001cd58
   1a8c4:	0001cd10 	.word	0x0001cd10
   1a8c8:	0001ccb0 	.word	0x0001ccb0
   1a8cc:	0001cc50 	.word	0x0001cc50
   1a8d0:	0001cbf0 	.word	0x0001cbf0
   1a8d4:	0001cb90 	.word	0x0001cb90
   1a8d8:	0001cb30 	.word	0x0001cb30
   1a8dc:	0001cad0 	.word	0x0001cad0
   1a8e0:	0001ca60 	.word	0x0001ca60
   1a8e4:	0001ca50 	.word	0x0001ca50
   1a8e8:	0001c9e4 	.word	0x0001c9e4
   1a8ec:	0001c978 	.word	0x0001c978
   1a8f0:	0001c90c 	.word	0x0001c90c
   1a8f4:	0001c8a0 	.word	0x0001c8a0
   1a8f8:	0001c834 	.word	0x0001c834
   1a8fc:	0001c7c8 	.word	0x0001c7c8
   1a900:	0001c74c 	.word	0x0001c74c
   1a904:	0001c708 	.word	0x0001c708
   1a908:	0001c6e0 	.word	0x0001c6e0
   1a90c:	0001c6b8 	.word	0x0001c6b8
   1a910:	0001c690 	.word	0x0001c690
   1a914:	0001c668 	.word	0x0001c668
   1a918:	0001c640 	.word	0x0001c640
   1a91c:	0001c618 	.word	0x0001c618
   1a920:	0001c5e0 	.word	0x0001c5e0
   1a924:	0001c5c4 	.word	0x0001c5c4
   1a928:	0001c5a0 	.word	0x0001c5a0
   1a92c:	0001c57c 	.word	0x0001c57c
   1a930:	0001c558 	.word	0x0001c558
   1a934:	0001c534 	.word	0x0001c534
   1a938:	0001c510 	.word	0x0001c510
   1a93c:	0001c4ec 	.word	0x0001c4ec
   1a940:	0001c4b8 	.word	0x0001c4b8
   1a944:	0001c4a8 	.word	0x0001c4a8
   1a948:	0001c484 	.word	0x0001c484
   1a94c:	0001c460 	.word	0x0001c460
   1a950:	0001c43c 	.word	0x0001c43c
   1a954:	0001c418 	.word	0x0001c418
   1a958:	0001c3f4 	.word	0x0001c3f4
   1a95c:	0001c3d0 	.word	0x0001c3d0
   1a960:	0001c39c 	.word	0x0001c39c
   1a964:	0001c384 	.word	0x0001c384
   1a968:	0001c328 	.word	0x0001c328
   1a96c:	0001c2cc 	.word	0x0001c2cc
   1a970:	0001c270 	.word	0x0001c270
   1a974:	0001c214 	.word	0x0001c214
   1a978:	0001c1b8 	.word	0x0001c1b8
   1a97c:	0001c15c 	.word	0x0001c15c
   1a980:	0001c0f0 	.word	0x0001c0f0
   1a984:	0001c0e0 	.word	0x0001c0e0
   1a988:	0001c07c 	.word	0x0001c07c
   1a98c:	0001c02c 	.word	0x0001c02c
   1a990:	0001c010 	.word	0x0001c010
   1a994:	0001bfc4 	.word	0x0001bfc4
   1a998:	0001bf30 	.word	0x0001bf30
   1a99c:	0001bef8 	.word	0x0001bef8
   1a9a0:	0001be94 	.word	0x0001be94
   1a9a4:	0001be54 	.word	0x0001be54
   1a9a8:	0001bdf0 	.word	0x0001bdf0
   1a9ac:	0001bda0 	.word	0x0001bda0
   1a9b0:	0001bd48 	.word	0x0001bd48
   1a9b4:	0001bd38 	.word	0x0001bd38
   1a9b8:	0001aa88 	.word	0x0001aa88
   1a9bc:	0001bcc0 	.word	0x0001bcc0
   1a9c0:	0001bc50 	.word	0x0001bc50
   1a9c4:	0001bc10 	.word	0x0001bc10
   1a9c8:	0001bbac 	.word	0x0001bbac
   1a9cc:	0001bb5c 	.word	0x0001bb5c
   1a9d0:	0001bb40 	.word	0x0001bb40
   1a9d4:	0001bb0c 	.word	0x0001bb0c
   1a9d8:	0001ba78 	.word	0x0001ba78
   1a9dc:	0001ba40 	.word	0x0001ba40
   1a9e0:	0001b9cc 	.word	0x0001b9cc
   1a9e4:	0001b98c 	.word	0x0001b98c
   1a9e8:	0001b928 	.word	0x0001b928
   1a9ec:	0001b8ec 	.word	0x0001b8ec
   1a9f0:	0001b894 	.word	0x0001b894
   1a9f4:	0001b860 	.word	0x0001b860
   1a9f8:	0001b7cc 	.word	0x0001b7cc
   1a9fc:	0001b7bc 	.word	0x0001b7bc
   1aa00:	0001b73c 	.word	0x0001b73c
   1aa04:	0001b6fc 	.word	0x0001b6fc
   1aa08:	0001b698 	.word	0x0001b698
   1aa0c:	0001b648 	.word	0x0001b648
   1aa10:	0001b62c 	.word	0x0001b62c
   1aa14:	0001b5b4 	.word	0x0001b5b4
   1aa18:	0001b520 	.word	0x0001b520
   1aa1c:	0001b4e8 	.word	0x0001b4e8
   1aa20:	0001b4ac 	.word	0x0001b4ac
   1aa24:	0001b46c 	.word	0x0001b46c
   1aa28:	0001b408 	.word	0x0001b408
   1aa2c:	0001b3f8 	.word	0x0001b3f8
   1aa30:	0001b3a0 	.word	0x0001b3a0
   1aa34:	0001b384 	.word	0x0001b384
   1aa38:	0001b2f0 	.word	0x0001b2f0
   1aa3c:	0001b2e0 	.word	0x0001b2e0
   1aa40:	0001b2a8 	.word	0x0001b2a8
   1aa44:	0001b268 	.word	0x0001b268
   1aa48:	0001b200 	.word	0x0001b200
   1aa4c:	0001b1b0 	.word	0x0001b1b0
   1aa50:	0001b158 	.word	0x0001b158
   1aa54:	0001b130 	.word	0x0001b130
   1aa58:	0001b0a4 	.word	0x0001b0a4
   1aa5c:	0001b06c 	.word	0x0001b06c
   1aa60:	0001b034 	.word	0x0001b034
   1aa64:	0001aff4 	.word	0x0001aff4
   1aa68:	0001afe0 	.word	0x0001afe0
   1aa6c:	0001d26c 	.word	0x0001d26c
   1aa70:	0001d3d8 	.word	0x0001d3d8
   1aa74:	0001d484 	.word	0x0001d484
   1aa78:	0001d540 	.word	0x0001d540
   1aa7c:	0001d5f0 	.word	0x0001d5f0
   1aa80:	0001d690 	.word	0x0001d690
   1aa84:	0001d790 	.word	0x0001d790
   1aa88:	e5d4e000 	ldrb	lr, [r4]
   1aa8c:	e280c003 	add	ip, r0, #3
   1aa90:	e31e0040 	tst	lr, #64	; 0x40
   1aa94:	e6ffc07c 	uxth	ip, ip
   1aa98:	0a000f09 	beq	1e6c4 <RunZ80+0x40a0>
   1aa9c:	e2800002 	add	r0, r0, #2
   1aaa0:	e6ff0070 	uxth	r0, r0
   1aaa4:	e2422007 	sub	r2, r2, #7
   1aaa8:	e3510000 	cmp	r1, #0
   1aaac:	e1c400bc 	strh	r0, [r4, #12]
   1aab0:	e5842020 	str	r2, [r4, #32]
   1aab4:	0a000fe6 	beq	1ea54 <RunZ80+0x4430>
   1aab8:	e0033009 	and	r3, r3, r9
   1aabc:	e7da3003 	ldrb	r3, [sl, r3]
   1aac0:	e0000009 	and	r0, r0, r9
   1aac4:	e1c4c0bc 	strh	ip, [r4, #12]
   1aac8:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1aacc:	e7da2000 	ldrb	r2, [sl, r0]
   1aad0:	e1835005 	orr	r5, r3, r5
   1aad4:	e1d430be 	ldrh	r3, [r4, #14]
   1aad8:	e1a0c42c 	lsr	ip, ip, #8
   1aadc:	e2433001 	sub	r3, r3, #1
   1aae0:	e6ff3073 	uxth	r3, r3
   1aae4:	e1c430be 	strh	r3, [r4, #14]
   1aae8:	e7c8c003 	strb	ip, [r8, r3]
   1aaec:	e1d430be 	ldrh	r3, [r4, #14]
   1aaf0:	e5d4100c 	ldrb	r1, [r4, #12]
   1aaf4:	e2433001 	sub	r3, r3, #1
   1aaf8:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1aafc:	e6ff3073 	uxth	r3, r3
   1ab00:	e1852402 	orr	r2, r5, r2, lsl #8
   1ab04:	e1c430be 	strh	r3, [r4, #14]
   1ab08:	e7c81003 	strb	r1, [r8, r3]
   1ab0c:	e1a05002 	mov	r5, r2
   1ab10:	e1c420bc 	strh	r2, [r4, #12]
   1ab14:	e5942020 	ldr	r2, [r4, #32]
   1ab18:	e3520000 	cmp	r2, #0
   1ab1c:	da000109 	ble	1af48 <RunZ80+0x924>
   1ab20:	e1d400bc 	ldrh	r0, [r4, #12]
   1ab24:	eafffec8 	b	1a64c <RunZ80+0x28>
   1ab28:	e7d8c000 	ldrb	ip, [r8, r0]
   1ab2c:	e086e00c 	add	lr, r6, ip
   1ab30:	e5dee600 	ldrb	lr, [lr, #1536]	; 0x600
   1ab34:	e042200e 	sub	r2, r2, lr
   1ab38:	e5842020 	str	r2, [r4, #32]
   1ab3c:	e35c00ff 	cmp	ip, #255	; 0xff
   1ab40:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
   1ab44:	ea000e51 	b	1e490 <RunZ80+0x3e6c>
   1ab48:	0001ab18 	.word	0x0001ab18
   1ab4c:	0001e4cc 	.word	0x0001e4cc
   1ab50:	0001e47c 	.word	0x0001e47c
   1ab54:	0001e468 	.word	0x0001e468
   1ab58:	0001e41c 	.word	0x0001e41c
   1ab5c:	0001e3cc 	.word	0x0001e3cc
   1ab60:	0001e3a8 	.word	0x0001e3a8
   1ab64:	0001e380 	.word	0x0001e380
   1ab68:	0001e364 	.word	0x0001e364
   1ab6c:	0001e324 	.word	0x0001e324
   1ab70:	0001e304 	.word	0x0001e304
   1ab74:	0001e2f0 	.word	0x0001e2f0
   1ab78:	0001e2a4 	.word	0x0001e2a4
   1ab7c:	0001e254 	.word	0x0001e254
   1ab80:	0001e230 	.word	0x0001e230
   1ab84:	0001e200 	.word	0x0001e200
   1ab88:	0001e1bc 	.word	0x0001e1bc
   1ab8c:	0001e170 	.word	0x0001e170
   1ab90:	0001e15c 	.word	0x0001e15c
   1ab94:	0001e148 	.word	0x0001e148
   1ab98:	0001e0fc 	.word	0x0001e0fc
   1ab9c:	0001e0ac 	.word	0x0001e0ac
   1aba0:	0001e088 	.word	0x0001e088
   1aba4:	0001e060 	.word	0x0001e060
   1aba8:	0001e044 	.word	0x0001e044
   1abac:	0001dffc 	.word	0x0001dffc
   1abb0:	0001dfdc 	.word	0x0001dfdc
   1abb4:	0001dfc8 	.word	0x0001dfc8
   1abb8:	0001df7c 	.word	0x0001df7c
   1abbc:	0001df2c 	.word	0x0001df2c
   1abc0:	0001df08 	.word	0x0001df08
   1abc4:	0001dedc 	.word	0x0001dedc
   1abc8:	0001dec0 	.word	0x0001dec0
   1abcc:	0001de74 	.word	0x0001de74
   1abd0:	0001de1c 	.word	0x0001de1c
   1abd4:	0001de08 	.word	0x0001de08
   1abd8:	0001ddbc 	.word	0x0001ddbc
   1abdc:	0001dd6c 	.word	0x0001dd6c
   1abe0:	0001dd48 	.word	0x0001dd48
   1abe4:	0001dd04 	.word	0x0001dd04
   1abe8:	0001dccc 	.word	0x0001dccc
   1abec:	0001dc98 	.word	0x0001dc98
   1abf0:	0001dc48 	.word	0x0001dc48
   1abf4:	0001dc34 	.word	0x0001dc34
   1abf8:	0001dbe8 	.word	0x0001dbe8
   1abfc:	0001db98 	.word	0x0001db98
   1ac00:	0001db74 	.word	0x0001db74
   1ac04:	0001db54 	.word	0x0001db54
   1ac08:	0001db38 	.word	0x0001db38
   1ac0c:	0001daec 	.word	0x0001daec
   1ac10:	0001daa0 	.word	0x0001daa0
   1ac14:	0001da8c 	.word	0x0001da8c
   1ac18:	0001da30 	.word	0x0001da30
   1ac1c:	0001d9d0 	.word	0x0001d9d0
   1ac20:	0001d9a8 	.word	0x0001d9a8
   1ac24:	0001d990 	.word	0x0001d990
   1ac28:	0001d958 	.word	0x0001d958
   1ac2c:	0001d918 	.word	0x0001d918
   1ac30:	0001d8c8 	.word	0x0001d8c8
   1ac34:	0001d8b4 	.word	0x0001d8b4
   1ac38:	0001d868 	.word	0x0001d868
   1ac3c:	0001d818 	.word	0x0001d818
   1ac40:	0001d7f4 	.word	0x0001d7f4
   1ac44:	0001d7d0 	.word	0x0001d7d0
   1ac48:	0001ab18 	.word	0x0001ab18
   1ac4c:	0001d780 	.word	0x0001d780
   1ac50:	0001d770 	.word	0x0001d770
   1ac54:	0001d760 	.word	0x0001d760
   1ac58:	0001d750 	.word	0x0001d750
   1ac5c:	0001d740 	.word	0x0001d740
   1ac60:	0001d720 	.word	0x0001d720
   1ac64:	0001d710 	.word	0x0001d710
   1ac68:	0001d700 	.word	0x0001d700
   1ac6c:	0001ab18 	.word	0x0001ab18
   1ac70:	0001d680 	.word	0x0001d680
   1ac74:	0001d670 	.word	0x0001d670
   1ac78:	0001d660 	.word	0x0001d660
   1ac7c:	0001d650 	.word	0x0001d650
   1ac80:	0001d630 	.word	0x0001d630
   1ac84:	0001d620 	.word	0x0001d620
   1ac88:	0001d610 	.word	0x0001d610
   1ac8c:	0001d600 	.word	0x0001d600
   1ac90:	0001ab18 	.word	0x0001ab18
   1ac94:	0001d5e0 	.word	0x0001d5e0
   1ac98:	0001d5d0 	.word	0x0001d5d0
   1ac9c:	0001d5c0 	.word	0x0001d5c0
   1aca0:	0001d5a0 	.word	0x0001d5a0
   1aca4:	0001d590 	.word	0x0001d590
   1aca8:	0001d580 	.word	0x0001d580
   1acac:	0001d570 	.word	0x0001d570
   1acb0:	0001d560 	.word	0x0001d560
   1acb4:	0001ab18 	.word	0x0001ab18
   1acb8:	0001d530 	.word	0x0001d530
   1acbc:	0001d520 	.word	0x0001d520
   1acc0:	0001d500 	.word	0x0001d500
   1acc4:	0001d4f0 	.word	0x0001d4f0
   1acc8:	0001d4e0 	.word	0x0001d4e0
   1accc:	0001d4d0 	.word	0x0001d4d0
   1acd0:	0001d4c0 	.word	0x0001d4c0
   1acd4:	0001d4b0 	.word	0x0001d4b0
   1acd8:	0001ab18 	.word	0x0001ab18
   1acdc:	0001d474 	.word	0x0001d474
   1ace0:	0001d454 	.word	0x0001d454
   1ace4:	0001d444 	.word	0x0001d444
   1ace8:	0001d434 	.word	0x0001d434
   1acec:	0001d424 	.word	0x0001d424
   1acf0:	0001d414 	.word	0x0001d414
   1acf4:	0001d404 	.word	0x0001d404
   1acf8:	0001d3f4 	.word	0x0001d3f4
   1acfc:	0001ab18 	.word	0x0001ab18
   1ad00:	0001d3b8 	.word	0x0001d3b8
   1ad04:	0001d3a8 	.word	0x0001d3a8
   1ad08:	0001d394 	.word	0x0001d394
   1ad0c:	0001d380 	.word	0x0001d380
   1ad10:	0001d36c 	.word	0x0001d36c
   1ad14:	0001d358 	.word	0x0001d358
   1ad18:	0001d344 	.word	0x0001d344
   1ad1c:	0001d330 	.word	0x0001d330
   1ad20:	0001d310 	.word	0x0001d310
   1ad24:	0001d2fc 	.word	0x0001d2fc
   1ad28:	0001d2ec 	.word	0x0001d2ec
   1ad2c:	0001d2dc 	.word	0x0001d2dc
   1ad30:	0001d2cc 	.word	0x0001d2cc
   1ad34:	0001d2bc 	.word	0x0001d2bc
   1ad38:	0001d2ac 	.word	0x0001d2ac
   1ad3c:	0001d29c 	.word	0x0001d29c
   1ad40:	0001d27c 	.word	0x0001d27c
   1ad44:	0001ab18 	.word	0x0001ab18
   1ad48:	0001d21c 	.word	0x0001d21c
   1ad4c:	0001d1cc 	.word	0x0001d1cc
   1ad50:	0001d17c 	.word	0x0001d17c
   1ad54:	0001d12c 	.word	0x0001d12c
   1ad58:	0001d0dc 	.word	0x0001d0dc
   1ad5c:	0001d08c 	.word	0x0001d08c
   1ad60:	0001d02c 	.word	0x0001d02c
   1ad64:	0001cfec 	.word	0x0001cfec
   1ad68:	0001cf90 	.word	0x0001cf90
   1ad6c:	0001cf34 	.word	0x0001cf34
   1ad70:	0001ced8 	.word	0x0001ced8
   1ad74:	0001ce7c 	.word	0x0001ce7c
   1ad78:	0001ce20 	.word	0x0001ce20
   1ad7c:	0001cdc4 	.word	0x0001cdc4
   1ad80:	0001cd58 	.word	0x0001cd58
   1ad84:	0001cd10 	.word	0x0001cd10
   1ad88:	0001ccb0 	.word	0x0001ccb0
   1ad8c:	0001cc50 	.word	0x0001cc50
   1ad90:	0001cbf0 	.word	0x0001cbf0
   1ad94:	0001cb90 	.word	0x0001cb90
   1ad98:	0001cb30 	.word	0x0001cb30
   1ad9c:	0001cad0 	.word	0x0001cad0
   1ada0:	0001ca60 	.word	0x0001ca60
   1ada4:	0001ca50 	.word	0x0001ca50
   1ada8:	0001c9e4 	.word	0x0001c9e4
   1adac:	0001c978 	.word	0x0001c978
   1adb0:	0001c90c 	.word	0x0001c90c
   1adb4:	0001c8a0 	.word	0x0001c8a0
   1adb8:	0001c834 	.word	0x0001c834
   1adbc:	0001c7c8 	.word	0x0001c7c8
   1adc0:	0001c74c 	.word	0x0001c74c
   1adc4:	0001c708 	.word	0x0001c708
   1adc8:	0001c6e0 	.word	0x0001c6e0
   1adcc:	0001c6b8 	.word	0x0001c6b8
   1add0:	0001c690 	.word	0x0001c690
   1add4:	0001c668 	.word	0x0001c668
   1add8:	0001c640 	.word	0x0001c640
   1addc:	0001c618 	.word	0x0001c618
   1ade0:	0001c5e0 	.word	0x0001c5e0
   1ade4:	0001c5c4 	.word	0x0001c5c4
   1ade8:	0001c5a0 	.word	0x0001c5a0
   1adec:	0001c57c 	.word	0x0001c57c
   1adf0:	0001c558 	.word	0x0001c558
   1adf4:	0001c534 	.word	0x0001c534
   1adf8:	0001c510 	.word	0x0001c510
   1adfc:	0001c4ec 	.word	0x0001c4ec
   1ae00:	0001c4b8 	.word	0x0001c4b8
   1ae04:	0001c4a8 	.word	0x0001c4a8
   1ae08:	0001c484 	.word	0x0001c484
   1ae0c:	0001c460 	.word	0x0001c460
   1ae10:	0001c43c 	.word	0x0001c43c
   1ae14:	0001c418 	.word	0x0001c418
   1ae18:	0001c3f4 	.word	0x0001c3f4
   1ae1c:	0001c3d0 	.word	0x0001c3d0
   1ae20:	0001c39c 	.word	0x0001c39c
   1ae24:	0001c384 	.word	0x0001c384
   1ae28:	0001c328 	.word	0x0001c328
   1ae2c:	0001c2cc 	.word	0x0001c2cc
   1ae30:	0001c270 	.word	0x0001c270
   1ae34:	0001c214 	.word	0x0001c214
   1ae38:	0001c1b8 	.word	0x0001c1b8
   1ae3c:	0001c15c 	.word	0x0001c15c
   1ae40:	0001c0f0 	.word	0x0001c0f0
   1ae44:	0001c0e0 	.word	0x0001c0e0
   1ae48:	0001c07c 	.word	0x0001c07c
   1ae4c:	0001c02c 	.word	0x0001c02c
   1ae50:	0001c010 	.word	0x0001c010
   1ae54:	0001bfc4 	.word	0x0001bfc4
   1ae58:	0001bf30 	.word	0x0001bf30
   1ae5c:	0001bef8 	.word	0x0001bef8
   1ae60:	0001be94 	.word	0x0001be94
   1ae64:	0001be54 	.word	0x0001be54
   1ae68:	0001bdf0 	.word	0x0001bdf0
   1ae6c:	0001bda0 	.word	0x0001bda0
   1ae70:	0001bd48 	.word	0x0001bd48
   1ae74:	0001bd38 	.word	0x0001bd38
   1ae78:	0001aa88 	.word	0x0001aa88
   1ae7c:	0001bcc0 	.word	0x0001bcc0
   1ae80:	0001bc50 	.word	0x0001bc50
   1ae84:	0001bc10 	.word	0x0001bc10
   1ae88:	0001bbac 	.word	0x0001bbac
   1ae8c:	0001bb5c 	.word	0x0001bb5c
   1ae90:	0001bb40 	.word	0x0001bb40
   1ae94:	0001bb0c 	.word	0x0001bb0c
   1ae98:	0001ba78 	.word	0x0001ba78
   1ae9c:	0001ba40 	.word	0x0001ba40
   1aea0:	0001b9cc 	.word	0x0001b9cc
   1aea4:	0001b98c 	.word	0x0001b98c
   1aea8:	0001b928 	.word	0x0001b928
   1aeac:	0001b8ec 	.word	0x0001b8ec
   1aeb0:	0001b894 	.word	0x0001b894
   1aeb4:	0001b860 	.word	0x0001b860
   1aeb8:	0001b7cc 	.word	0x0001b7cc
   1aebc:	0001b7bc 	.word	0x0001b7bc
   1aec0:	0001b73c 	.word	0x0001b73c
   1aec4:	0001b6fc 	.word	0x0001b6fc
   1aec8:	0001b698 	.word	0x0001b698
   1aecc:	0001b648 	.word	0x0001b648
   1aed0:	0001b62c 	.word	0x0001b62c
   1aed4:	0001b5b4 	.word	0x0001b5b4
   1aed8:	0001b520 	.word	0x0001b520
   1aedc:	0001b4e8 	.word	0x0001b4e8
   1aee0:	0001b4ac 	.word	0x0001b4ac
   1aee4:	0001b46c 	.word	0x0001b46c
   1aee8:	0001b408 	.word	0x0001b408
   1aeec:	0001b3f8 	.word	0x0001b3f8
   1aef0:	0001b3a0 	.word	0x0001b3a0
   1aef4:	0001b384 	.word	0x0001b384
   1aef8:	0001b2f0 	.word	0x0001b2f0
   1aefc:	0001b2e0 	.word	0x0001b2e0
   1af00:	0001b2a8 	.word	0x0001b2a8
   1af04:	0001b268 	.word	0x0001b268
   1af08:	0001b200 	.word	0x0001b200
   1af0c:	0001b1b0 	.word	0x0001b1b0
   1af10:	0001b158 	.word	0x0001b158
   1af14:	0001b130 	.word	0x0001b130
   1af18:	0001b0a4 	.word	0x0001b0a4
   1af1c:	0001b06c 	.word	0x0001b06c
   1af20:	0001b034 	.word	0x0001b034
   1af24:	0001aff4 	.word	0x0001aff4
   1af28:	0001afe0 	.word	0x0001afe0
   1af2c:	0001d26c 	.word	0x0001d26c
   1af30:	0001d3d8 	.word	0x0001d3d8
   1af34:	0001d484 	.word	0x0001d484
   1af38:	0001d540 	.word	0x0001d540
   1af3c:	0001d5f0 	.word	0x0001d5f0
   1af40:	0001d690 	.word	0x0001d690
   1af44:	0001d790 	.word	0x0001d790
   1af48:	e5d43018 	ldrb	r3, [r4, #24]
   1af4c:	e3130020 	tst	r3, #32
   1af50:	0a000014 	beq	1afa8 <RunZ80+0x984>
   1af54:	e5941024 	ldr	r1, [r4, #36]	; 0x24
   1af58:	e3c33021 	bic	r3, r3, #33	; 0x21
   1af5c:	e2411001 	sub	r1, r1, #1
   1af60:	e0812002 	add	r2, r1, r2
   1af64:	e3833001 	orr	r3, r3, #1
   1af68:	e3520000 	cmp	r2, #0
   1af6c:	e5c43018 	strb	r3, [r4, #24]
   1af70:	e5842020 	str	r2, [r4, #32]
   1af74:	da00000b 	ble	1afa8 <RunZ80+0x984>
   1af78:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
   1af7c:	e59f36a0 	ldr	r3, [pc, #1696]	; 1b624 <RunZ80+0x1000>
   1af80:	e1a05000 	mov	r5, r0
   1af84:	e1500003 	cmp	r0, r3
   1af88:	0a000012 	beq	1afd8 <RunZ80+0x9b4>
   1af8c:	e2833001 	add	r3, r3, #1
   1af90:	e1500003 	cmp	r0, r3
   1af94:	0afffdaa 	beq	1a644 <RunZ80+0x20>
   1af98:	e1a01000 	mov	r1, r0
   1af9c:	e1a00004 	mov	r0, r4
   1afa0:	ebfffd00 	bl	1a3a8 <IntZ80>
   1afa4:	eafffda5 	b	1a640 <RunZ80+0x1c>
   1afa8:	e1a00004 	mov	r0, r4
   1afac:	ebffb582 	bl	85bc <LoopZ80>
   1afb0:	e1c421dc 	ldrd	r2, [r4, #28]
   1afb4:	e59f166c 	ldr	r1, [pc, #1644]	; 1b628 <RunZ80+0x1004>
   1afb8:	e0833002 	add	r3, r3, r2
   1afbc:	e1500001 	cmp	r0, r1
   1afc0:	e5843020 	str	r3, [r4, #32]
   1afc4:	e1a05000 	mov	r5, r0
   1afc8:	0affffea 	beq	1af78 <RunZ80+0x954>
   1afcc:	e59f3650 	ldr	r3, [pc, #1616]	; 1b624 <RunZ80+0x1000>
   1afd0:	e1500003 	cmp	r0, r3
   1afd4:	1affffef 	bne	1af98 <RunZ80+0x974>
   1afd8:	e1d400bc 	ldrh	r0, [r4, #12]
   1afdc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1afe0:	e1d430d0 	ldrsb	r3, [r4]
   1afe4:	e3530000 	cmp	r3, #0
   1afe8:	ba000e1d 	blt	1e864 <RunZ80+0x4240>
   1afec:	e5942020 	ldr	r2, [r4, #32]
   1aff0:	eafffec8 	b	1ab18 <RunZ80+0x4f4>
   1aff4:	e3a01030 	mov	r1, #48	; 0x30
   1aff8:	e1d420be 	ldrh	r2, [r4, #14]
   1affc:	e1a03423 	lsr	r3, r3, #8
   1b000:	e2422001 	sub	r2, r2, #1
   1b004:	e6ff2072 	uxth	r2, r2
   1b008:	e1c420be 	strh	r2, [r4, #14]
   1b00c:	e7c83002 	strb	r3, [r8, r2]
   1b010:	e1d430be 	ldrh	r3, [r4, #14]
   1b014:	e5d4200c 	ldrb	r2, [r4, #12]
   1b018:	e2433001 	sub	r3, r3, #1
   1b01c:	e6ff3073 	uxth	r3, r3
   1b020:	e1c430be 	strh	r3, [r4, #14]
   1b024:	e7c82003 	strb	r2, [r8, r3]
   1b028:	e5942020 	ldr	r2, [r4, #32]
   1b02c:	e1c410bc 	strh	r1, [r4, #12]
   1b030:	eafffeb8 	b	1ab18 <RunZ80+0x4f4>
   1b034:	e3510000 	cmp	r1, #0
   1b038:	e2800002 	add	r0, r0, #2
   1b03c:	e1c400bc 	strh	r0, [r4, #12]
   1b040:	10033009 	andne	r3, r3, r9
   1b044:	17da3003 	ldrbne	r3, [sl, r3]
   1b048:	07d83003 	ldrbeq	r3, [r8, r3]
   1b04c:	e5d41001 	ldrb	r1, [r4, #1]
   1b050:	e5942020 	ldr	r2, [r4, #32]
   1b054:	e1833001 	orr	r3, r3, r1
   1b058:	e0861003 	add	r1, r6, r3
   1b05c:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1b060:	e5c43001 	strb	r3, [r4, #1]
   1b064:	e5c41000 	strb	r1, [r4]
   1b068:	eafffeaa 	b	1ab18 <RunZ80+0x4f4>
   1b06c:	e1d430be 	ldrh	r3, [r4, #14]
   1b070:	e5d42001 	ldrb	r2, [r4, #1]
   1b074:	e2433001 	sub	r3, r3, #1
   1b078:	e6ff3073 	uxth	r3, r3
   1b07c:	e1c430be 	strh	r3, [r4, #14]
   1b080:	e7c82003 	strb	r2, [r8, r3]
   1b084:	e1d430be 	ldrh	r3, [r4, #14]
   1b088:	e5d42000 	ldrb	r2, [r4]
   1b08c:	e2433001 	sub	r3, r3, #1
   1b090:	e6ff3073 	uxth	r3, r3
   1b094:	e1c430be 	strh	r3, [r4, #14]
   1b098:	e7c82003 	strb	r2, [r8, r3]
   1b09c:	e5942020 	ldr	r2, [r4, #32]
   1b0a0:	eafffe9c 	b	1ab18 <RunZ80+0x4f4>
   1b0a4:	e1d4e0d0 	ldrsb	lr, [r4]
   1b0a8:	e280c003 	add	ip, r0, #3
   1b0ac:	e35e0000 	cmp	lr, #0
   1b0b0:	e6ffc07c 	uxth	ip, ip
   1b0b4:	ba000de7 	blt	1e858 <RunZ80+0x4234>
   1b0b8:	e2800002 	add	r0, r0, #2
   1b0bc:	e6ff0070 	uxth	r0, r0
   1b0c0:	e2422007 	sub	r2, r2, #7
   1b0c4:	e3510000 	cmp	r1, #0
   1b0c8:	e1c400bc 	strh	r0, [r4, #12]
   1b0cc:	e5842020 	str	r2, [r4, #32]
   1b0d0:	1a000dd8 	bne	1e838 <RunZ80+0x4214>
   1b0d4:	e7d83003 	ldrb	r3, [r8, r3]
   1b0d8:	e1c4c0bc 	strh	ip, [r4, #12]
   1b0dc:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1b0e0:	e7d82000 	ldrb	r2, [r8, r0]
   1b0e4:	e1835005 	orr	r5, r3, r5
   1b0e8:	e1d430be 	ldrh	r3, [r4, #14]
   1b0ec:	e1a0c42c 	lsr	ip, ip, #8
   1b0f0:	e2433001 	sub	r3, r3, #1
   1b0f4:	e6ff3073 	uxth	r3, r3
   1b0f8:	e1c430be 	strh	r3, [r4, #14]
   1b0fc:	e7c8c003 	strb	ip, [r8, r3]
   1b100:	e1d430be 	ldrh	r3, [r4, #14]
   1b104:	e5d4100c 	ldrb	r1, [r4, #12]
   1b108:	e2433001 	sub	r3, r3, #1
   1b10c:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1b110:	e6ff3073 	uxth	r3, r3
   1b114:	e1852402 	orr	r2, r5, r2, lsl #8
   1b118:	e1c430be 	strh	r3, [r4, #14]
   1b11c:	e7c81003 	strb	r1, [r8, r3]
   1b120:	e1a05002 	mov	r5, r2
   1b124:	e1c420bc 	strh	r2, [r4, #12]
   1b128:	e5942020 	ldr	r2, [r4, #32]
   1b12c:	eafffe79 	b	1ab18 <RunZ80+0x4f4>
   1b130:	e5d43018 	ldrb	r3, [r4, #24]
   1b134:	e3130020 	tst	r3, #32
   1b138:	15941024 	ldrne	r1, [r4, #36]	; 0x24
   1b13c:	e3c33029 	bic	r3, r3, #41	; 0x29
   1b140:	12411001 	subne	r1, r1, #1
   1b144:	10822001 	addne	r2, r2, r1
   1b148:	05942020 	ldreq	r2, [r4, #32]
   1b14c:	15842020 	strne	r2, [r4, #32]
   1b150:	e5c43018 	strb	r3, [r4, #24]
   1b154:	eafffe6f 	b	1ab18 <RunZ80+0x4f4>
   1b158:	e1d420d0 	ldrsb	r2, [r4]
   1b15c:	e3520000 	cmp	r2, #0
   1b160:	ba000dd4 	blt	1e8b8 <RunZ80+0x4294>
   1b164:	e2802002 	add	r2, r0, #2
   1b168:	e3510000 	cmp	r1, #0
   1b16c:	e6ff2072 	uxth	r2, r2
   1b170:	e1c420bc 	strh	r2, [r4, #12]
   1b174:	10033009 	andne	r3, r3, r9
   1b178:	17da3003 	ldrbne	r3, [sl, r3]
   1b17c:	07d81003 	ldrbeq	r1, [r8, r3]
   1b180:	13c550ff 	bicne	r5, r5, #255	; 0xff
   1b184:	10022009 	andne	r2, r2, r9
   1b188:	03c550ff 	biceq	r5, r5, #255	; 0xff
   1b18c:	07d83002 	ldrbeq	r3, [r8, r2]
   1b190:	11835005 	orrne	r5, r3, r5
   1b194:	01815005 	orreq	r5, r1, r5
   1b198:	17da3002 	ldrbne	r3, [sl, r2]
   1b19c:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1b1a0:	e1855403 	orr	r5, r5, r3, lsl #8
   1b1a4:	e1c450bc 	strh	r5, [r4, #12]
   1b1a8:	e5942020 	ldr	r2, [r4, #32]
   1b1ac:	eafffe59 	b	1ab18 <RunZ80+0x4f4>
   1b1b0:	e1d420be 	ldrh	r2, [r4, #14]
   1b1b4:	e3510000 	cmp	r1, #0
   1b1b8:	e2823001 	add	r3, r2, #1
   1b1bc:	e6ff3073 	uxth	r3, r3
   1b1c0:	e1c430be 	strh	r3, [r4, #14]
   1b1c4:	e2821002 	add	r1, r2, #2
   1b1c8:	10022009 	andne	r2, r2, r9
   1b1cc:	17da2002 	ldrbne	r2, [sl, r2]
   1b1d0:	07d82002 	ldrbeq	r2, [r8, r2]
   1b1d4:	e6ff1071 	uxth	r1, r1
   1b1d8:	10033009 	andne	r3, r3, r9
   1b1dc:	15c42000 	strbne	r2, [r4]
   1b1e0:	05c42000 	strbeq	r2, [r4]
   1b1e4:	11c410be 	strhne	r1, [r4, #14]
   1b1e8:	01c410be 	strheq	r1, [r4, #14]
   1b1ec:	17da3003 	ldrbne	r3, [sl, r3]
   1b1f0:	07d83003 	ldrbeq	r3, [r8, r3]
   1b1f4:	e5942020 	ldr	r2, [r4, #32]
   1b1f8:	e5c43001 	strb	r3, [r4, #1]
   1b1fc:	eafffe45 	b	1ab18 <RunZ80+0x4f4>
   1b200:	e1d430d0 	ldrsb	r3, [r4]
   1b204:	e3530000 	cmp	r3, #0
   1b208:	b5942020 	ldrlt	r2, [r4, #32]
   1b20c:	bafffe41 	blt	1ab18 <RunZ80+0x4f4>
   1b210:	e1d400be 	ldrh	r0, [r4, #14]
   1b214:	e3510000 	cmp	r1, #0
   1b218:	e2803001 	add	r3, r0, #1
   1b21c:	e2422006 	sub	r2, r2, #6
   1b220:	e6ff3073 	uxth	r3, r3
   1b224:	e1c430be 	strh	r3, [r4, #14]
   1b228:	e5842020 	str	r2, [r4, #32]
   1b22c:	e2801002 	add	r1, r0, #2
   1b230:	10000009 	andne	r0, r0, r9
   1b234:	17da2000 	ldrbne	r2, [sl, r0]
   1b238:	07d82000 	ldrbeq	r2, [r8, r0]
   1b23c:	e6ff1071 	uxth	r1, r1
   1b240:	10033009 	andne	r3, r3, r9
   1b244:	15c4200c 	strbne	r2, [r4, #12]
   1b248:	05c4200c 	strbeq	r2, [r4, #12]
   1b24c:	11c410be 	strhne	r1, [r4, #14]
   1b250:	01c410be 	strheq	r1, [r4, #14]
   1b254:	17da3003 	ldrbne	r3, [sl, r3]
   1b258:	07d83003 	ldrbeq	r3, [r8, r3]
   1b25c:	e5942020 	ldr	r2, [r4, #32]
   1b260:	e5c4300d 	strb	r3, [r4, #13]
   1b264:	eafffe2b 	b	1ab18 <RunZ80+0x4f4>
   1b268:	e3a01028 	mov	r1, #40	; 0x28
   1b26c:	e1d420be 	ldrh	r2, [r4, #14]
   1b270:	e1a03423 	lsr	r3, r3, #8
   1b274:	e2422001 	sub	r2, r2, #1
   1b278:	e6ff2072 	uxth	r2, r2
   1b27c:	e1c420be 	strh	r2, [r4, #14]
   1b280:	e7c83002 	strb	r3, [r8, r2]
   1b284:	e1d430be 	ldrh	r3, [r4, #14]
   1b288:	e5d4200c 	ldrb	r2, [r4, #12]
   1b28c:	e2433001 	sub	r3, r3, #1
   1b290:	e6ff3073 	uxth	r3, r3
   1b294:	e1c430be 	strh	r3, [r4, #14]
   1b298:	e7c82003 	strb	r2, [r8, r3]
   1b29c:	e5942020 	ldr	r2, [r4, #32]
   1b2a0:	e1c410bc 	strh	r1, [r4, #12]
   1b2a4:	eafffe1b 	b	1ab18 <RunZ80+0x4f4>
   1b2a8:	e3510000 	cmp	r1, #0
   1b2ac:	e2800002 	add	r0, r0, #2
   1b2b0:	e1c400bc 	strh	r0, [r4, #12]
   1b2b4:	10033009 	andne	r3, r3, r9
   1b2b8:	17da3003 	ldrbne	r3, [sl, r3]
   1b2bc:	07d83003 	ldrbeq	r3, [r8, r3]
   1b2c0:	e5d41001 	ldrb	r1, [r4, #1]
   1b2c4:	e5942020 	ldr	r2, [r4, #32]
   1b2c8:	e0233001 	eor	r3, r3, r1
   1b2cc:	e0861003 	add	r1, r6, r3
   1b2d0:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1b2d4:	e5c43001 	strb	r3, [r4, #1]
   1b2d8:	e5c41000 	strb	r1, [r4]
   1b2dc:	eafffe0d 	b	1ab18 <RunZ80+0x4f4>
   1b2e0:	e1a00004 	mov	r0, r4
   1b2e4:	ebffe7ad 	bl	151a0 <CodesED>
   1b2e8:	e5942020 	ldr	r2, [r4, #32]
   1b2ec:	eafffe09 	b	1ab18 <RunZ80+0x4f4>
   1b2f0:	e5d4e000 	ldrb	lr, [r4]
   1b2f4:	e280c003 	add	ip, r0, #3
   1b2f8:	e31e0004 	tst	lr, #4
   1b2fc:	e6ffc07c 	uxth	ip, ip
   1b300:	0a000d43 	beq	1e814 <RunZ80+0x41f0>
   1b304:	e2800002 	add	r0, r0, #2
   1b308:	e6ff0070 	uxth	r0, r0
   1b30c:	e2422007 	sub	r2, r2, #7
   1b310:	e3510000 	cmp	r1, #0
   1b314:	e1c400bc 	strh	r0, [r4, #12]
   1b318:	e5842020 	str	r2, [r4, #32]
   1b31c:	0a000dd8 	beq	1ea84 <RunZ80+0x4460>
   1b320:	e0033009 	and	r3, r3, r9
   1b324:	e7da3003 	ldrb	r3, [sl, r3]
   1b328:	e0000009 	and	r0, r0, r9
   1b32c:	e1c4c0bc 	strh	ip, [r4, #12]
   1b330:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1b334:	e7da2000 	ldrb	r2, [sl, r0]
   1b338:	e1835005 	orr	r5, r3, r5
   1b33c:	e1d430be 	ldrh	r3, [r4, #14]
   1b340:	e1a0c42c 	lsr	ip, ip, #8
   1b344:	e2433001 	sub	r3, r3, #1
   1b348:	e6ff3073 	uxth	r3, r3
   1b34c:	e1c430be 	strh	r3, [r4, #14]
   1b350:	e7c8c003 	strb	ip, [r8, r3]
   1b354:	e1d430be 	ldrh	r3, [r4, #14]
   1b358:	e5d4100c 	ldrb	r1, [r4, #12]
   1b35c:	e2433001 	sub	r3, r3, #1
   1b360:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1b364:	e6ff3073 	uxth	r3, r3
   1b368:	e1852402 	orr	r2, r5, r2, lsl #8
   1b36c:	e1c430be 	strh	r3, [r4, #14]
   1b370:	e7c81003 	strb	r1, [r8, r3]
   1b374:	e1a05002 	mov	r5, r2
   1b378:	e1c420bc 	strh	r2, [r4, #12]
   1b37c:	e5942020 	ldr	r2, [r4, #32]
   1b380:	eafffde4 	b	1ab18 <RunZ80+0x4f4>
   1b384:	e1d430b4 	ldrh	r3, [r4, #4]
   1b388:	e1d420b6 	ldrh	r2, [r4, #6]
   1b38c:	e1a05003 	mov	r5, r3
   1b390:	e1c420b4 	strh	r2, [r4, #4]
   1b394:	e1c430b6 	strh	r3, [r4, #6]
   1b398:	e5942020 	ldr	r2, [r4, #32]
   1b39c:	eafffddd 	b	1ab18 <RunZ80+0x4f4>
   1b3a0:	e5d42000 	ldrb	r2, [r4]
   1b3a4:	e3120004 	tst	r2, #4
   1b3a8:	0a000d1e 	beq	1e828 <RunZ80+0x4204>
   1b3ac:	e2802002 	add	r2, r0, #2
   1b3b0:	e3510000 	cmp	r1, #0
   1b3b4:	e6ff2072 	uxth	r2, r2
   1b3b8:	e1c420bc 	strh	r2, [r4, #12]
   1b3bc:	10033009 	andne	r3, r3, r9
   1b3c0:	17da3003 	ldrbne	r3, [sl, r3]
   1b3c4:	07d81003 	ldrbeq	r1, [r8, r3]
   1b3c8:	13c550ff 	bicne	r5, r5, #255	; 0xff
   1b3cc:	10022009 	andne	r2, r2, r9
   1b3d0:	03c550ff 	biceq	r5, r5, #255	; 0xff
   1b3d4:	07d83002 	ldrbeq	r3, [r8, r2]
   1b3d8:	11835005 	orrne	r5, r3, r5
   1b3dc:	01815005 	orreq	r5, r1, r5
   1b3e0:	17da3002 	ldrbne	r3, [sl, r2]
   1b3e4:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1b3e8:	e1855403 	orr	r5, r5, r3, lsl #8
   1b3ec:	e1c450bc 	strh	r5, [r4, #12]
   1b3f0:	e5942020 	ldr	r2, [r4, #32]
   1b3f4:	eafffdc7 	b	1ab18 <RunZ80+0x4f4>
   1b3f8:	e1d430b6 	ldrh	r3, [r4, #6]
   1b3fc:	e5942020 	ldr	r2, [r4, #32]
   1b400:	e1c430bc 	strh	r3, [r4, #12]
   1b404:	eafffdc3 	b	1ab18 <RunZ80+0x4f4>
   1b408:	e5d43000 	ldrb	r3, [r4]
   1b40c:	e3130004 	tst	r3, #4
   1b410:	0a000d02 	beq	1e820 <RunZ80+0x41fc>
   1b414:	e1d400be 	ldrh	r0, [r4, #14]
   1b418:	e3510000 	cmp	r1, #0
   1b41c:	e2803001 	add	r3, r0, #1
   1b420:	e2422006 	sub	r2, r2, #6
   1b424:	e6ff3073 	uxth	r3, r3
   1b428:	e1c430be 	strh	r3, [r4, #14]
   1b42c:	e5842020 	str	r2, [r4, #32]
   1b430:	e2801002 	add	r1, r0, #2
   1b434:	10000009 	andne	r0, r0, r9
   1b438:	17da2000 	ldrbne	r2, [sl, r0]
   1b43c:	07d82000 	ldrbeq	r2, [r8, r0]
   1b440:	e6ff1071 	uxth	r1, r1
   1b444:	10033009 	andne	r3, r3, r9
   1b448:	15c4200c 	strbne	r2, [r4, #12]
   1b44c:	05c4200c 	strbeq	r2, [r4, #12]
   1b450:	11c410be 	strhne	r1, [r4, #14]
   1b454:	01c410be 	strheq	r1, [r4, #14]
   1b458:	17da3003 	ldrbne	r3, [sl, r3]
   1b45c:	07d83003 	ldrbeq	r3, [r8, r3]
   1b460:	e5942020 	ldr	r2, [r4, #32]
   1b464:	e5c4300d 	strb	r3, [r4, #13]
   1b468:	eafffdaa 	b	1ab18 <RunZ80+0x4f4>
   1b46c:	e3a01020 	mov	r1, #32
   1b470:	e1d420be 	ldrh	r2, [r4, #14]
   1b474:	e1a03423 	lsr	r3, r3, #8
   1b478:	e2422001 	sub	r2, r2, #1
   1b47c:	e6ff2072 	uxth	r2, r2
   1b480:	e1c420be 	strh	r2, [r4, #14]
   1b484:	e7c83002 	strb	r3, [r8, r2]
   1b488:	e1d430be 	ldrh	r3, [r4, #14]
   1b48c:	e5d4200c 	ldrb	r2, [r4, #12]
   1b490:	e2433001 	sub	r3, r3, #1
   1b494:	e6ff3073 	uxth	r3, r3
   1b498:	e1c430be 	strh	r3, [r4, #14]
   1b49c:	e7c82003 	strb	r2, [r8, r3]
   1b4a0:	e5942020 	ldr	r2, [r4, #32]
   1b4a4:	e1c410bc 	strh	r1, [r4, #12]
   1b4a8:	eafffd9a 	b	1ab18 <RunZ80+0x4f4>
   1b4ac:	e3510000 	cmp	r1, #0
   1b4b0:	e2800002 	add	r0, r0, #2
   1b4b4:	e1c400bc 	strh	r0, [r4, #12]
   1b4b8:	10033009 	andne	r3, r3, r9
   1b4bc:	17da3003 	ldrbne	r3, [sl, r3]
   1b4c0:	07d83003 	ldrbeq	r3, [r8, r3]
   1b4c4:	e5d41001 	ldrb	r1, [r4, #1]
   1b4c8:	e5942020 	ldr	r2, [r4, #32]
   1b4cc:	e0033001 	and	r3, r3, r1
   1b4d0:	e0861003 	add	r1, r6, r3
   1b4d4:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1b4d8:	e5c43001 	strb	r3, [r4, #1]
   1b4dc:	e3813010 	orr	r3, r1, #16
   1b4e0:	e5c43000 	strb	r3, [r4]
   1b4e4:	eafffd8b 	b	1ab18 <RunZ80+0x4f4>
   1b4e8:	e1d430be 	ldrh	r3, [r4, #14]
   1b4ec:	e5d42007 	ldrb	r2, [r4, #7]
   1b4f0:	e2433001 	sub	r3, r3, #1
   1b4f4:	e6ff3073 	uxth	r3, r3
   1b4f8:	e1c430be 	strh	r3, [r4, #14]
   1b4fc:	e7c82003 	strb	r2, [r8, r3]
   1b500:	e1d430be 	ldrh	r3, [r4, #14]
   1b504:	e5d42006 	ldrb	r2, [r4, #6]
   1b508:	e2433001 	sub	r3, r3, #1
   1b50c:	e6ff3073 	uxth	r3, r3
   1b510:	e1c430be 	strh	r3, [r4, #14]
   1b514:	e7c82003 	strb	r2, [r8, r3]
   1b518:	e5942020 	ldr	r2, [r4, #32]
   1b51c:	eafffd7d 	b	1ab18 <RunZ80+0x4f4>
   1b520:	e5d4e000 	ldrb	lr, [r4]
   1b524:	e280c003 	add	ip, r0, #3
   1b528:	e31e0004 	tst	lr, #4
   1b52c:	e6ffc07c 	uxth	ip, ip
   1b530:	1a000cb4 	bne	1e808 <RunZ80+0x41e4>
   1b534:	e2800002 	add	r0, r0, #2
   1b538:	e6ff0070 	uxth	r0, r0
   1b53c:	e2422007 	sub	r2, r2, #7
   1b540:	e3510000 	cmp	r1, #0
   1b544:	e1c400bc 	strh	r0, [r4, #12]
   1b548:	e5842020 	str	r2, [r4, #32]
   1b54c:	0a000d52 	beq	1ea9c <RunZ80+0x4478>
   1b550:	e0033009 	and	r3, r3, r9
   1b554:	e7da3003 	ldrb	r3, [sl, r3]
   1b558:	e0000009 	and	r0, r0, r9
   1b55c:	e1c4c0bc 	strh	ip, [r4, #12]
   1b560:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1b564:	e7da2000 	ldrb	r2, [sl, r0]
   1b568:	e1835005 	orr	r5, r3, r5
   1b56c:	e1d430be 	ldrh	r3, [r4, #14]
   1b570:	e1a0c42c 	lsr	ip, ip, #8
   1b574:	e2433001 	sub	r3, r3, #1
   1b578:	e6ff3073 	uxth	r3, r3
   1b57c:	e1c430be 	strh	r3, [r4, #14]
   1b580:	e7c8c003 	strb	ip, [r8, r3]
   1b584:	e1d430be 	ldrh	r3, [r4, #14]
   1b588:	e5d4100c 	ldrb	r1, [r4, #12]
   1b58c:	e2433001 	sub	r3, r3, #1
   1b590:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1b594:	e6ff3073 	uxth	r3, r3
   1b598:	e1852402 	orr	r2, r5, r2, lsl #8
   1b59c:	e1c430be 	strh	r3, [r4, #14]
   1b5a0:	e7c81003 	strb	r1, [r8, r3]
   1b5a4:	e1a05002 	mov	r5, r2
   1b5a8:	e1c420bc 	strh	r2, [r4, #12]
   1b5ac:	e5942020 	ldr	r2, [r4, #32]
   1b5b0:	eafffd58 	b	1ab18 <RunZ80+0x4f4>
   1b5b4:	e1d400be 	ldrh	r0, [r4, #14]
   1b5b8:	e3510000 	cmp	r1, #0
   1b5bc:	e2803001 	add	r3, r0, #1
   1b5c0:	e6ff3073 	uxth	r3, r3
   1b5c4:	e5d42006 	ldrb	r2, [r4, #6]
   1b5c8:	1a000c84 	bne	1e7e0 <RunZ80+0x41bc>
   1b5cc:	e7d81000 	ldrb	r1, [r8, r0]
   1b5d0:	e1c430be 	strh	r3, [r4, #14]
   1b5d4:	e7c82000 	strb	r2, [r8, r0]
   1b5d8:	e1d400be 	ldrh	r0, [r4, #14]
   1b5dc:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1b5e0:	e7d8c000 	ldrb	ip, [r8, r0]
   1b5e4:	e1815005 	orr	r5, r1, r5
   1b5e8:	e5d42007 	ldrb	r2, [r4, #7]
   1b5ec:	e3c53cff 	bic	r3, r5, #65280	; 0xff00
   1b5f0:	e2401001 	sub	r1, r0, #1
   1b5f4:	e183340c 	orr	r3, r3, ip, lsl #8
   1b5f8:	e1c410be 	strh	r1, [r4, #14]
   1b5fc:	e7c82000 	strb	r2, [r8, r0]
   1b600:	e1a05003 	mov	r5, r3
   1b604:	e1c430b6 	strh	r3, [r4, #6]
   1b608:	e5942020 	ldr	r2, [r4, #32]
   1b60c:	eafffd41 	b	1ab18 <RunZ80+0x4f4>
   1b610:	0005cf80 	.word	0x0005cf80
   1b614:	0003c260 	.word	0x0003c260
   1b618:	00050428 	.word	0x00050428
   1b61c:	0003c960 	.word	0x0003c960
   1b620:	00007fff 	.word	0x00007fff
   1b624:	0000fffe 	.word	0x0000fffe
   1b628:	0000ffff 	.word	0x0000ffff
   1b62c:	e5d42000 	ldrb	r2, [r4]
   1b630:	e3120004 	tst	r2, #4
   1b634:	0a000c56 	beq	1e794 <RunZ80+0x4170>
   1b638:	e2800003 	add	r0, r0, #3
   1b63c:	e1c400bc 	strh	r0, [r4, #12]
   1b640:	e5942020 	ldr	r2, [r4, #32]
   1b644:	eafffd33 	b	1ab18 <RunZ80+0x4f4>
   1b648:	e1d420be 	ldrh	r2, [r4, #14]
   1b64c:	e3510000 	cmp	r1, #0
   1b650:	e2823001 	add	r3, r2, #1
   1b654:	e6ff3073 	uxth	r3, r3
   1b658:	e1c430be 	strh	r3, [r4, #14]
   1b65c:	e2821002 	add	r1, r2, #2
   1b660:	10022009 	andne	r2, r2, r9
   1b664:	17da2002 	ldrbne	r2, [sl, r2]
   1b668:	07d82002 	ldrbeq	r2, [r8, r2]
   1b66c:	e6ff1071 	uxth	r1, r1
   1b670:	10033009 	andne	r3, r3, r9
   1b674:	15c42006 	strbne	r2, [r4, #6]
   1b678:	05c42006 	strbeq	r2, [r4, #6]
   1b67c:	11c410be 	strhne	r1, [r4, #14]
   1b680:	01c410be 	strheq	r1, [r4, #14]
   1b684:	17da3003 	ldrbne	r3, [sl, r3]
   1b688:	07d83003 	ldrbeq	r3, [r8, r3]
   1b68c:	e5942020 	ldr	r2, [r4, #32]
   1b690:	e5c43007 	strb	r3, [r4, #7]
   1b694:	eafffd1f 	b	1ab18 <RunZ80+0x4f4>
   1b698:	e5d43000 	ldrb	r3, [r4]
   1b69c:	e3130004 	tst	r3, #4
   1b6a0:	1a000c39 	bne	1e78c <RunZ80+0x4168>
   1b6a4:	e1d400be 	ldrh	r0, [r4, #14]
   1b6a8:	e3510000 	cmp	r1, #0
   1b6ac:	e2803001 	add	r3, r0, #1
   1b6b0:	e2422006 	sub	r2, r2, #6
   1b6b4:	e6ff3073 	uxth	r3, r3
   1b6b8:	e1c430be 	strh	r3, [r4, #14]
   1b6bc:	e5842020 	str	r2, [r4, #32]
   1b6c0:	e2801002 	add	r1, r0, #2
   1b6c4:	10000009 	andne	r0, r0, r9
   1b6c8:	17da2000 	ldrbne	r2, [sl, r0]
   1b6cc:	07d82000 	ldrbeq	r2, [r8, r0]
   1b6d0:	e6ff1071 	uxth	r1, r1
   1b6d4:	10033009 	andne	r3, r3, r9
   1b6d8:	15c4200c 	strbne	r2, [r4, #12]
   1b6dc:	05c4200c 	strbeq	r2, [r4, #12]
   1b6e0:	11c410be 	strhne	r1, [r4, #14]
   1b6e4:	01c410be 	strheq	r1, [r4, #14]
   1b6e8:	17da3003 	ldrbne	r3, [sl, r3]
   1b6ec:	07d83003 	ldrbeq	r3, [r8, r3]
   1b6f0:	e5942020 	ldr	r2, [r4, #32]
   1b6f4:	e5c4300d 	strb	r3, [r4, #13]
   1b6f8:	eafffd06 	b	1ab18 <RunZ80+0x4f4>
   1b6fc:	e3a01018 	mov	r1, #24
   1b700:	e1d420be 	ldrh	r2, [r4, #14]
   1b704:	e1a03423 	lsr	r3, r3, #8
   1b708:	e2422001 	sub	r2, r2, #1
   1b70c:	e6ff2072 	uxth	r2, r2
   1b710:	e1c420be 	strh	r2, [r4, #14]
   1b714:	e7c83002 	strb	r3, [r8, r2]
   1b718:	e1d430be 	ldrh	r3, [r4, #14]
   1b71c:	e5d4200c 	ldrb	r2, [r4, #12]
   1b720:	e2433001 	sub	r3, r3, #1
   1b724:	e6ff3073 	uxth	r3, r3
   1b728:	e1c430be 	strh	r3, [r4, #14]
   1b72c:	e7c82003 	strb	r2, [r8, r3]
   1b730:	e5942020 	ldr	r2, [r4, #32]
   1b734:	e1c410bc 	strh	r1, [r4, #12]
   1b738:	eafffcf6 	b	1ab18 <RunZ80+0x4f4>
   1b73c:	e2800002 	add	r0, r0, #2
   1b740:	e3510000 	cmp	r1, #0
   1b744:	e1c400bc 	strh	r0, [r4, #12]
   1b748:	10033009 	andne	r3, r3, r9
   1b74c:	17da0003 	ldrbne	r0, [sl, r3]
   1b750:	07d80003 	ldrbeq	r0, [r8, r3]
   1b754:	e5d42000 	ldrb	r2, [r4]
   1b758:	e5d43001 	ldrb	r3, [r4, #1]
   1b75c:	e2022001 	and	r2, r2, #1
   1b760:	e0435000 	sub	r5, r3, r0
   1b764:	e0455002 	sub	r5, r5, r2
   1b768:	e6ff5075 	uxth	r5, r5
   1b76c:	e6ef1075 	uxtb	r1, r5
   1b770:	e086c001 	add	ip, r6, r1
   1b774:	e1a0e425 	lsr	lr, r5, #8
   1b778:	e0200003 	eor	r0, r0, r3
   1b77c:	e0212003 	eor	r2, r1, r3
   1b780:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1b784:	e26e3000 	rsb	r3, lr, #0
   1b788:	e0022000 	and	r2, r2, r0
   1b78c:	e3833002 	orr	r3, r3, #2
   1b790:	e0200001 	eor	r0, r0, r1
   1b794:	e1a022a2 	lsr	r2, r2, #5
   1b798:	e2000010 	and	r0, r0, #16
   1b79c:	e183300c 	orr	r3, r3, ip
   1b7a0:	e2022004 	and	r2, r2, #4
   1b7a4:	e1833000 	orr	r3, r3, r0
   1b7a8:	e1833002 	orr	r3, r3, r2
   1b7ac:	e5c41001 	strb	r1, [r4, #1]
   1b7b0:	e5c43000 	strb	r3, [r4]
   1b7b4:	e5942020 	ldr	r2, [r4, #32]
   1b7b8:	eafffcd6 	b	1ab18 <RunZ80+0x4f4>
   1b7bc:	e1a00004 	mov	r0, r4
   1b7c0:	ebffd276 	bl	101a0 <CodesDD>
   1b7c4:	e5942020 	ldr	r2, [r4, #32]
   1b7c8:	eafffcd2 	b	1ab18 <RunZ80+0x4f4>
   1b7cc:	e5d4e000 	ldrb	lr, [r4]
   1b7d0:	e280c003 	add	ip, r0, #3
   1b7d4:	e31e0001 	tst	lr, #1
   1b7d8:	e6ffc07c 	uxth	ip, ip
   1b7dc:	0a000be7 	beq	1e780 <RunZ80+0x415c>
   1b7e0:	e2800002 	add	r0, r0, #2
   1b7e4:	e6ff0070 	uxth	r0, r0
   1b7e8:	e2422007 	sub	r2, r2, #7
   1b7ec:	e3510000 	cmp	r1, #0
   1b7f0:	e1c400bc 	strh	r0, [r4, #12]
   1b7f4:	e5842020 	str	r2, [r4, #32]
   1b7f8:	0a000cb3 	beq	1eacc <RunZ80+0x44a8>
   1b7fc:	e0033009 	and	r3, r3, r9
   1b800:	e7da3003 	ldrb	r3, [sl, r3]
   1b804:	e0000009 	and	r0, r0, r9
   1b808:	e1c4c0bc 	strh	ip, [r4, #12]
   1b80c:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1b810:	e7da2000 	ldrb	r2, [sl, r0]
   1b814:	e1835005 	orr	r5, r3, r5
   1b818:	e1d430be 	ldrh	r3, [r4, #14]
   1b81c:	e1a0c42c 	lsr	ip, ip, #8
   1b820:	e2433001 	sub	r3, r3, #1
   1b824:	e6ff3073 	uxth	r3, r3
   1b828:	e1c430be 	strh	r3, [r4, #14]
   1b82c:	e7c8c003 	strb	ip, [r8, r3]
   1b830:	e1d430be 	ldrh	r3, [r4, #14]
   1b834:	e5d4100c 	ldrb	r1, [r4, #12]
   1b838:	e2433001 	sub	r3, r3, #1
   1b83c:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1b840:	e6ff3073 	uxth	r3, r3
   1b844:	e1852402 	orr	r2, r5, r2, lsl #8
   1b848:	e1c430be 	strh	r3, [r4, #14]
   1b84c:	e7c81003 	strb	r1, [r8, r3]
   1b850:	e1a05002 	mov	r5, r2
   1b854:	e1c420bc 	strh	r2, [r4, #12]
   1b858:	e5942020 	ldr	r2, [r4, #32]
   1b85c:	eafffcad 	b	1ab18 <RunZ80+0x4f4>
   1b860:	e2800002 	add	r0, r0, #2
   1b864:	e3510000 	cmp	r1, #0
   1b868:	e1c400bc 	strh	r0, [r4, #12]
   1b86c:	10033009 	andne	r3, r3, r9
   1b870:	17da0003 	ldrbne	r0, [sl, r3]
   1b874:	07d80003 	ldrbeq	r0, [r8, r3]
   1b878:	e1d430b0 	ldrh	r3, [r4]
   1b87c:	e3c330ff 	bic	r3, r3, #255	; 0xff
   1b880:	e1830000 	orr	r0, r3, r0
   1b884:	ebffb4a7 	bl	8b28 <InZ80>
   1b888:	e5942020 	ldr	r2, [r4, #32]
   1b88c:	e5c40001 	strb	r0, [r4, #1]
   1b890:	eafffca0 	b	1ab18 <RunZ80+0x4f4>
   1b894:	e5d42000 	ldrb	r2, [r4]
   1b898:	e3120001 	tst	r2, #1
   1b89c:	0a000bb3 	beq	1e770 <RunZ80+0x414c>
   1b8a0:	e2802002 	add	r2, r0, #2
   1b8a4:	e3510000 	cmp	r1, #0
   1b8a8:	e6ff2072 	uxth	r2, r2
   1b8ac:	e1c420bc 	strh	r2, [r4, #12]
   1b8b0:	10033009 	andne	r3, r3, r9
   1b8b4:	17da3003 	ldrbne	r3, [sl, r3]
   1b8b8:	07d81003 	ldrbeq	r1, [r8, r3]
   1b8bc:	13c550ff 	bicne	r5, r5, #255	; 0xff
   1b8c0:	10022009 	andne	r2, r2, r9
   1b8c4:	03c550ff 	biceq	r5, r5, #255	; 0xff
   1b8c8:	07d83002 	ldrbeq	r3, [r8, r2]
   1b8cc:	11835005 	orrne	r5, r3, r5
   1b8d0:	01815005 	orreq	r5, r1, r5
   1b8d4:	17da3002 	ldrbne	r3, [sl, r2]
   1b8d8:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1b8dc:	e1855403 	orr	r5, r5, r3, lsl #8
   1b8e0:	e1c450bc 	strh	r5, [r4, #12]
   1b8e4:	e5942020 	ldr	r2, [r4, #32]
   1b8e8:	eafffc8a 	b	1ab18 <RunZ80+0x4f4>
   1b8ec:	e1d430b2 	ldrh	r3, [r4, #2]
   1b8f0:	e1d421b2 	ldrh	r2, [r4, #18]
   1b8f4:	e1d400b4 	ldrh	r0, [r4, #4]
   1b8f8:	e1d411b4 	ldrh	r1, [r4, #20]
   1b8fc:	e1c431b2 	strh	r3, [r4, #18]
   1b900:	e1c420b2 	strh	r2, [r4, #2]
   1b904:	e1d430b6 	ldrh	r3, [r4, #6]
   1b908:	e1d421b6 	ldrh	r2, [r4, #22]
   1b90c:	e1c401b4 	strh	r0, [r4, #20]
   1b910:	e1c420b6 	strh	r2, [r4, #6]
   1b914:	e1c410b4 	strh	r1, [r4, #4]
   1b918:	e1a05003 	mov	r5, r3
   1b91c:	e1c431b6 	strh	r3, [r4, #22]
   1b920:	e5942020 	ldr	r2, [r4, #32]
   1b924:	eafffc7b 	b	1ab18 <RunZ80+0x4f4>
   1b928:	e5d43000 	ldrb	r3, [r4]
   1b92c:	e3130001 	tst	r3, #1
   1b930:	0a000b8c 	beq	1e768 <RunZ80+0x4144>
   1b934:	e1d400be 	ldrh	r0, [r4, #14]
   1b938:	e3510000 	cmp	r1, #0
   1b93c:	e2803001 	add	r3, r0, #1
   1b940:	e2422006 	sub	r2, r2, #6
   1b944:	e6ff3073 	uxth	r3, r3
   1b948:	e1c430be 	strh	r3, [r4, #14]
   1b94c:	e5842020 	str	r2, [r4, #32]
   1b950:	e2801002 	add	r1, r0, #2
   1b954:	10000009 	andne	r0, r0, r9
   1b958:	17da2000 	ldrbne	r2, [sl, r0]
   1b95c:	07d82000 	ldrbeq	r2, [r8, r0]
   1b960:	e6ff1071 	uxth	r1, r1
   1b964:	10033009 	andne	r3, r3, r9
   1b968:	15c4200c 	strbne	r2, [r4, #12]
   1b96c:	05c4200c 	strbeq	r2, [r4, #12]
   1b970:	11c410be 	strhne	r1, [r4, #14]
   1b974:	01c410be 	strheq	r1, [r4, #14]
   1b978:	17da3003 	ldrbne	r3, [sl, r3]
   1b97c:	07d83003 	ldrbeq	r3, [r8, r3]
   1b980:	e5942020 	ldr	r2, [r4, #32]
   1b984:	e5c4300d 	strb	r3, [r4, #13]
   1b988:	eafffc62 	b	1ab18 <RunZ80+0x4f4>
   1b98c:	e3a01010 	mov	r1, #16
   1b990:	e1d420be 	ldrh	r2, [r4, #14]
   1b994:	e1a03423 	lsr	r3, r3, #8
   1b998:	e2422001 	sub	r2, r2, #1
   1b99c:	e6ff2072 	uxth	r2, r2
   1b9a0:	e1c420be 	strh	r2, [r4, #14]
   1b9a4:	e7c83002 	strb	r3, [r8, r2]
   1b9a8:	e1d430be 	ldrh	r3, [r4, #14]
   1b9ac:	e5d4200c 	ldrb	r2, [r4, #12]
   1b9b0:	e2433001 	sub	r3, r3, #1
   1b9b4:	e6ff3073 	uxth	r3, r3
   1b9b8:	e1c430be 	strh	r3, [r4, #14]
   1b9bc:	e7c82003 	strb	r2, [r8, r3]
   1b9c0:	e5942020 	ldr	r2, [r4, #32]
   1b9c4:	e1c410bc 	strh	r1, [r4, #12]
   1b9c8:	eafffc52 	b	1ab18 <RunZ80+0x4f4>
   1b9cc:	e2800002 	add	r0, r0, #2
   1b9d0:	e3510000 	cmp	r1, #0
   1b9d4:	e1c400bc 	strh	r0, [r4, #12]
   1b9d8:	10033009 	andne	r3, r3, r9
   1b9dc:	17da0003 	ldrbne	r0, [sl, r3]
   1b9e0:	07d80003 	ldrbeq	r0, [r8, r3]
   1b9e4:	e5d43001 	ldrb	r3, [r4, #1]
   1b9e8:	e5942020 	ldr	r2, [r4, #32]
   1b9ec:	e0435000 	sub	r5, r3, r0
   1b9f0:	e6ff5075 	uxth	r5, r5
   1b9f4:	e6ef1075 	uxtb	r1, r5
   1b9f8:	e086c001 	add	ip, r6, r1
   1b9fc:	e0200003 	eor	r0, r0, r3
   1ba00:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1ba04:	e0233001 	eor	r3, r3, r1
   1ba08:	e000e003 	and	lr, r0, r3
   1ba0c:	e0200001 	eor	r0, r0, r1
   1ba10:	e2003010 	and	r3, r0, #16
   1ba14:	e38cc002 	orr	ip, ip, #2
   1ba18:	e183300c 	orr	r3, r3, ip
   1ba1c:	e1a0c425 	lsr	ip, r5, #8
   1ba20:	e1a002ae 	lsr	r0, lr, #5
   1ba24:	e26cc000 	rsb	ip, ip, #0
   1ba28:	e2000004 	and	r0, r0, #4
   1ba2c:	e183300c 	orr	r3, r3, ip
   1ba30:	e1833000 	orr	r3, r3, r0
   1ba34:	e5c41001 	strb	r1, [r4, #1]
   1ba38:	e5c43000 	strb	r3, [r4]
   1ba3c:	eafffc35 	b	1ab18 <RunZ80+0x4f4>
   1ba40:	e1d430be 	ldrh	r3, [r4, #14]
   1ba44:	e5d42005 	ldrb	r2, [r4, #5]
   1ba48:	e2433001 	sub	r3, r3, #1
   1ba4c:	e6ff3073 	uxth	r3, r3
   1ba50:	e1c430be 	strh	r3, [r4, #14]
   1ba54:	e7c82003 	strb	r2, [r8, r3]
   1ba58:	e1d430be 	ldrh	r3, [r4, #14]
   1ba5c:	e5d42004 	ldrb	r2, [r4, #4]
   1ba60:	e2433001 	sub	r3, r3, #1
   1ba64:	e6ff3073 	uxth	r3, r3
   1ba68:	e1c430be 	strh	r3, [r4, #14]
   1ba6c:	e7c82003 	strb	r2, [r8, r3]
   1ba70:	e5942020 	ldr	r2, [r4, #32]
   1ba74:	eafffc27 	b	1ab18 <RunZ80+0x4f4>
   1ba78:	e5d4e000 	ldrb	lr, [r4]
   1ba7c:	e280c003 	add	ip, r0, #3
   1ba80:	e31e0001 	tst	lr, #1
   1ba84:	e6ffc07c 	uxth	ip, ip
   1ba88:	1a000b33 	bne	1e75c <RunZ80+0x4138>
   1ba8c:	e2800002 	add	r0, r0, #2
   1ba90:	e6ff0070 	uxth	r0, r0
   1ba94:	e2422007 	sub	r2, r2, #7
   1ba98:	e3510000 	cmp	r1, #0
   1ba9c:	e1c400bc 	strh	r0, [r4, #12]
   1baa0:	e5842020 	str	r2, [r4, #32]
   1baa4:	0a000c02 	beq	1eab4 <RunZ80+0x4490>
   1baa8:	e0033009 	and	r3, r3, r9
   1baac:	e7da3003 	ldrb	r3, [sl, r3]
   1bab0:	e0000009 	and	r0, r0, r9
   1bab4:	e1c4c0bc 	strh	ip, [r4, #12]
   1bab8:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1babc:	e7da2000 	ldrb	r2, [sl, r0]
   1bac0:	e1835005 	orr	r5, r3, r5
   1bac4:	e1d430be 	ldrh	r3, [r4, #14]
   1bac8:	e1a0c42c 	lsr	ip, ip, #8
   1bacc:	e2433001 	sub	r3, r3, #1
   1bad0:	e6ff3073 	uxth	r3, r3
   1bad4:	e1c430be 	strh	r3, [r4, #14]
   1bad8:	e7c8c003 	strb	ip, [r8, r3]
   1badc:	e1d430be 	ldrh	r3, [r4, #14]
   1bae0:	e5d4100c 	ldrb	r1, [r4, #12]
   1bae4:	e2433001 	sub	r3, r3, #1
   1bae8:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1baec:	e6ff3073 	uxth	r3, r3
   1baf0:	e1852402 	orr	r2, r5, r2, lsl #8
   1baf4:	e1c430be 	strh	r3, [r4, #14]
   1baf8:	e7c81003 	strb	r1, [r8, r3]
   1bafc:	e1a05002 	mov	r5, r2
   1bb00:	e1c420bc 	strh	r2, [r4, #12]
   1bb04:	e5942020 	ldr	r2, [r4, #32]
   1bb08:	eafffc02 	b	1ab18 <RunZ80+0x4f4>
   1bb0c:	e3510000 	cmp	r1, #0
   1bb10:	e2800002 	add	r0, r0, #2
   1bb14:	e1c400bc 	strh	r0, [r4, #12]
   1bb18:	10033009 	andne	r3, r3, r9
   1bb1c:	17da0003 	ldrbne	r0, [sl, r3]
   1bb20:	07d80003 	ldrbeq	r0, [r8, r3]
   1bb24:	e1d430b0 	ldrh	r3, [r4]
   1bb28:	e5d41001 	ldrb	r1, [r4, #1]
   1bb2c:	e3c330ff 	bic	r3, r3, #255	; 0xff
   1bb30:	e1830000 	orr	r0, r3, r0
   1bb34:	ebffb443 	bl	8c48 <OutZ80>
   1bb38:	e5942020 	ldr	r2, [r4, #32]
   1bb3c:	eafffbf5 	b	1ab18 <RunZ80+0x4f4>
   1bb40:	e5d42000 	ldrb	r2, [r4]
   1bb44:	e3120001 	tst	r2, #1
   1bb48:	0a000af0 	beq	1e710 <RunZ80+0x40ec>
   1bb4c:	e2800003 	add	r0, r0, #3
   1bb50:	e1c400bc 	strh	r0, [r4, #12]
   1bb54:	e5942020 	ldr	r2, [r4, #32]
   1bb58:	eafffbee 	b	1ab18 <RunZ80+0x4f4>
   1bb5c:	e1d420be 	ldrh	r2, [r4, #14]
   1bb60:	e3510000 	cmp	r1, #0
   1bb64:	e2823001 	add	r3, r2, #1
   1bb68:	e6ff3073 	uxth	r3, r3
   1bb6c:	e1c430be 	strh	r3, [r4, #14]
   1bb70:	e2821002 	add	r1, r2, #2
   1bb74:	10022009 	andne	r2, r2, r9
   1bb78:	17da2002 	ldrbne	r2, [sl, r2]
   1bb7c:	07d82002 	ldrbeq	r2, [r8, r2]
   1bb80:	e6ff1071 	uxth	r1, r1
   1bb84:	10033009 	andne	r3, r3, r9
   1bb88:	15c42004 	strbne	r2, [r4, #4]
   1bb8c:	05c42004 	strbeq	r2, [r4, #4]
   1bb90:	11c410be 	strhne	r1, [r4, #14]
   1bb94:	01c410be 	strheq	r1, [r4, #14]
   1bb98:	17da3003 	ldrbne	r3, [sl, r3]
   1bb9c:	07d83003 	ldrbeq	r3, [r8, r3]
   1bba0:	e5942020 	ldr	r2, [r4, #32]
   1bba4:	e5c43005 	strb	r3, [r4, #5]
   1bba8:	eafffbda 	b	1ab18 <RunZ80+0x4f4>
   1bbac:	e5d43000 	ldrb	r3, [r4]
   1bbb0:	e3130001 	tst	r3, #1
   1bbb4:	1a000ad3 	bne	1e708 <RunZ80+0x40e4>
   1bbb8:	e1d400be 	ldrh	r0, [r4, #14]
   1bbbc:	e3510000 	cmp	r1, #0
   1bbc0:	e2803001 	add	r3, r0, #1
   1bbc4:	e2422006 	sub	r2, r2, #6
   1bbc8:	e6ff3073 	uxth	r3, r3
   1bbcc:	e1c430be 	strh	r3, [r4, #14]
   1bbd0:	e5842020 	str	r2, [r4, #32]
   1bbd4:	e2801002 	add	r1, r0, #2
   1bbd8:	10000009 	andne	r0, r0, r9
   1bbdc:	17da2000 	ldrbne	r2, [sl, r0]
   1bbe0:	07d82000 	ldrbeq	r2, [r8, r0]
   1bbe4:	e6ff1071 	uxth	r1, r1
   1bbe8:	10033009 	andne	r3, r3, r9
   1bbec:	15c4200c 	strbne	r2, [r4, #12]
   1bbf0:	05c4200c 	strbeq	r2, [r4, #12]
   1bbf4:	11c410be 	strhne	r1, [r4, #14]
   1bbf8:	01c410be 	strheq	r1, [r4, #14]
   1bbfc:	17da3003 	ldrbne	r3, [sl, r3]
   1bc00:	07d83003 	ldrbeq	r3, [r8, r3]
   1bc04:	e5942020 	ldr	r2, [r4, #32]
   1bc08:	e5c4300d 	strb	r3, [r4, #13]
   1bc0c:	eafffbc1 	b	1ab18 <RunZ80+0x4f4>
   1bc10:	e3a01008 	mov	r1, #8
   1bc14:	e1d420be 	ldrh	r2, [r4, #14]
   1bc18:	e1a03133 	lsr	r3, r3, r1
   1bc1c:	e2422001 	sub	r2, r2, #1
   1bc20:	e6ff2072 	uxth	r2, r2
   1bc24:	e1c420be 	strh	r2, [r4, #14]
   1bc28:	e7c83002 	strb	r3, [r8, r2]
   1bc2c:	e1d430be 	ldrh	r3, [r4, #14]
   1bc30:	e5d4200c 	ldrb	r2, [r4, #12]
   1bc34:	e2433001 	sub	r3, r3, #1
   1bc38:	e6ff3073 	uxth	r3, r3
   1bc3c:	e1c430be 	strh	r3, [r4, #14]
   1bc40:	e7c82003 	strb	r2, [r8, r3]
   1bc44:	e5942020 	ldr	r2, [r4, #32]
   1bc48:	e1c410bc 	strh	r1, [r4, #12]
   1bc4c:	eafffbb1 	b	1ab18 <RunZ80+0x4f4>
   1bc50:	e3510000 	cmp	r1, #0
   1bc54:	e2800002 	add	r0, r0, #2
   1bc58:	e5d45000 	ldrb	r5, [r4]
   1bc5c:	10033009 	andne	r3, r3, r9
   1bc60:	e1c400bc 	strh	r0, [r4, #12]
   1bc64:	e5d41001 	ldrb	r1, [r4, #1]
   1bc68:	17da3003 	ldrbne	r3, [sl, r3]
   1bc6c:	07d83003 	ldrbeq	r3, [r8, r3]
   1bc70:	e2055001 	and	r5, r5, #1
   1bc74:	e0855001 	add	r5, r5, r1
   1bc78:	e0855003 	add	r5, r5, r3
   1bc7c:	e6ef2075 	uxtb	r2, r5
   1bc80:	e0211003 	eor	r1, r1, r3
   1bc84:	e0860002 	add	r0, r6, r2
   1bc88:	e0233002 	eor	r3, r3, r2
   1bc8c:	e1c33001 	bic	r3, r3, r1
   1bc90:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1bc94:	e0211002 	eor	r1, r1, r2
   1bc98:	e2011010 	and	r1, r1, #16
   1bc9c:	e1a032c3 	asr	r3, r3, #5
   1bca0:	e1811000 	orr	r1, r1, r0
   1bca4:	e2033004 	and	r3, r3, #4
   1bca8:	e1811425 	orr	r1, r1, r5, lsr #8
   1bcac:	e1833001 	orr	r3, r3, r1
   1bcb0:	e5c42001 	strb	r2, [r4, #1]
   1bcb4:	e5c43000 	strb	r3, [r4]
   1bcb8:	e5942020 	ldr	r2, [r4, #32]
   1bcbc:	eafffb95 	b	1ab18 <RunZ80+0x4f4>
   1bcc0:	e2802002 	add	r2, r0, #2
   1bcc4:	e3510000 	cmp	r1, #0
   1bcc8:	e6ff2072 	uxth	r2, r2
   1bccc:	e2801003 	add	r1, r0, #3
   1bcd0:	e1c420bc 	strh	r2, [r4, #12]
   1bcd4:	e6ff1071 	uxth	r1, r1
   1bcd8:	1a000a82 	bne	1e6e8 <RunZ80+0x40c4>
   1bcdc:	e7d83003 	ldrb	r3, [r8, r3]
   1bce0:	e1c410bc 	strh	r1, [r4, #12]
   1bce4:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1bce8:	e7d82002 	ldrb	r2, [r8, r2]
   1bcec:	e1835005 	orr	r5, r3, r5
   1bcf0:	e1d430be 	ldrh	r3, [r4, #14]
   1bcf4:	e1a01421 	lsr	r1, r1, #8
   1bcf8:	e2433001 	sub	r3, r3, #1
   1bcfc:	e6ff3073 	uxth	r3, r3
   1bd00:	e1c430be 	strh	r3, [r4, #14]
   1bd04:	e7c81003 	strb	r1, [r8, r3]
   1bd08:	e1d430be 	ldrh	r3, [r4, #14]
   1bd0c:	e5d4100c 	ldrb	r1, [r4, #12]
   1bd10:	e2433001 	sub	r3, r3, #1
   1bd14:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1bd18:	e6ff3073 	uxth	r3, r3
   1bd1c:	e1852402 	orr	r2, r5, r2, lsl #8
   1bd20:	e1c430be 	strh	r3, [r4, #14]
   1bd24:	e7c81003 	strb	r1, [r8, r3]
   1bd28:	e1a05002 	mov	r5, r2
   1bd2c:	e1c420bc 	strh	r2, [r4, #12]
   1bd30:	e5942020 	ldr	r2, [r4, #32]
   1bd34:	eafffb77 	b	1ab18 <RunZ80+0x4f4>
   1bd38:	e1a00004 	mov	r0, r4
   1bd3c:	ebffb40a 	bl	8d6c <CodesCB>
   1bd40:	e5942020 	ldr	r2, [r4, #32]
   1bd44:	eafffb73 	b	1ab18 <RunZ80+0x4f4>
   1bd48:	e5d42000 	ldrb	r2, [r4]
   1bd4c:	e3120040 	tst	r2, #64	; 0x40
   1bd50:	0a000a5e 	beq	1e6d0 <RunZ80+0x40ac>
   1bd54:	e2802002 	add	r2, r0, #2
   1bd58:	e3510000 	cmp	r1, #0
   1bd5c:	e6ff2072 	uxth	r2, r2
   1bd60:	e1c420bc 	strh	r2, [r4, #12]
   1bd64:	10033009 	andne	r3, r3, r9
   1bd68:	17da3003 	ldrbne	r3, [sl, r3]
   1bd6c:	07d81003 	ldrbeq	r1, [r8, r3]
   1bd70:	13c550ff 	bicne	r5, r5, #255	; 0xff
   1bd74:	10022009 	andne	r2, r2, r9
   1bd78:	03c550ff 	biceq	r5, r5, #255	; 0xff
   1bd7c:	07d83002 	ldrbeq	r3, [r8, r2]
   1bd80:	11835005 	orrne	r5, r3, r5
   1bd84:	01815005 	orreq	r5, r1, r5
   1bd88:	17da3002 	ldrbne	r3, [sl, r2]
   1bd8c:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1bd90:	e1855403 	orr	r5, r5, r3, lsl #8
   1bd94:	e1c450bc 	strh	r5, [r4, #12]
   1bd98:	e5942020 	ldr	r2, [r4, #32]
   1bd9c:	eafffb5d 	b	1ab18 <RunZ80+0x4f4>
   1bda0:	e1d430be 	ldrh	r3, [r4, #14]
   1bda4:	e3510000 	cmp	r1, #0
   1bda8:	e2832001 	add	r2, r3, #1
   1bdac:	e6ff1072 	uxth	r1, r2
   1bdb0:	e1c410be 	strh	r1, [r4, #14]
   1bdb4:	e2832002 	add	r2, r3, #2
   1bdb8:	10033009 	andne	r3, r3, r9
   1bdbc:	17da3003 	ldrbne	r3, [sl, r3]
   1bdc0:	07d83003 	ldrbeq	r3, [r8, r3]
   1bdc4:	e6ff2072 	uxth	r2, r2
   1bdc8:	11c420be 	strhne	r2, [r4, #14]
   1bdcc:	01c420be 	strheq	r2, [r4, #14]
   1bdd0:	10011009 	andne	r1, r1, r9
   1bdd4:	15c4300c 	strbne	r3, [r4, #12]
   1bdd8:	05c4300c 	strbeq	r3, [r4, #12]
   1bddc:	17da3001 	ldrbne	r3, [sl, r1]
   1bde0:	07d83001 	ldrbeq	r3, [r8, r1]
   1bde4:	e5942020 	ldr	r2, [r4, #32]
   1bde8:	e5c4300d 	strb	r3, [r4, #13]
   1bdec:	eafffb49 	b	1ab18 <RunZ80+0x4f4>
   1bdf0:	e5d43000 	ldrb	r3, [r4]
   1bdf4:	e3130040 	tst	r3, #64	; 0x40
   1bdf8:	0a000a38 	beq	1e6e0 <RunZ80+0x40bc>
   1bdfc:	e1d400be 	ldrh	r0, [r4, #14]
   1be00:	e3510000 	cmp	r1, #0
   1be04:	e2803001 	add	r3, r0, #1
   1be08:	e2422006 	sub	r2, r2, #6
   1be0c:	e6ff3073 	uxth	r3, r3
   1be10:	e1c430be 	strh	r3, [r4, #14]
   1be14:	e5842020 	str	r2, [r4, #32]
   1be18:	e2801002 	add	r1, r0, #2
   1be1c:	10000009 	andne	r0, r0, r9
   1be20:	17da2000 	ldrbne	r2, [sl, r0]
   1be24:	07d82000 	ldrbeq	r2, [r8, r0]
   1be28:	e6ff1071 	uxth	r1, r1
   1be2c:	10033009 	andne	r3, r3, r9
   1be30:	15c4200c 	strbne	r2, [r4, #12]
   1be34:	05c4200c 	strbeq	r2, [r4, #12]
   1be38:	11c410be 	strhne	r1, [r4, #14]
   1be3c:	01c410be 	strheq	r1, [r4, #14]
   1be40:	17da3003 	ldrbne	r3, [sl, r3]
   1be44:	07d83003 	ldrbeq	r3, [r8, r3]
   1be48:	e5942020 	ldr	r2, [r4, #32]
   1be4c:	e5c4300d 	strb	r3, [r4, #13]
   1be50:	eafffb30 	b	1ab18 <RunZ80+0x4f4>
   1be54:	e3a01000 	mov	r1, #0
   1be58:	e1d420be 	ldrh	r2, [r4, #14]
   1be5c:	e1a03423 	lsr	r3, r3, #8
   1be60:	e2422001 	sub	r2, r2, #1
   1be64:	e6ff2072 	uxth	r2, r2
   1be68:	e1c420be 	strh	r2, [r4, #14]
   1be6c:	e7c83002 	strb	r3, [r8, r2]
   1be70:	e1d430be 	ldrh	r3, [r4, #14]
   1be74:	e5d4200c 	ldrb	r2, [r4, #12]
   1be78:	e2433001 	sub	r3, r3, #1
   1be7c:	e6ff3073 	uxth	r3, r3
   1be80:	e1c430be 	strh	r3, [r4, #14]
   1be84:	e7c82003 	strb	r2, [r8, r3]
   1be88:	e5942020 	ldr	r2, [r4, #32]
   1be8c:	e1c410bc 	strh	r1, [r4, #12]
   1be90:	eafffb20 	b	1ab18 <RunZ80+0x4f4>
   1be94:	e3510000 	cmp	r1, #0
   1be98:	e2800002 	add	r0, r0, #2
   1be9c:	10033009 	andne	r3, r3, r9
   1bea0:	e1c400bc 	strh	r0, [r4, #12]
   1bea4:	17da3003 	ldrbne	r3, [sl, r3]
   1bea8:	07d83003 	ldrbeq	r3, [r8, r3]
   1beac:	e5d41001 	ldrb	r1, [r4, #1]
   1beb0:	e5942020 	ldr	r2, [r4, #32]
   1beb4:	e0815003 	add	r5, r1, r3
   1beb8:	e6ef0075 	uxtb	r0, r5
   1bebc:	e0211003 	eor	r1, r1, r3
   1bec0:	e0233000 	eor	r3, r3, r0
   1bec4:	e1c33001 	bic	r3, r3, r1
   1bec8:	e086c000 	add	ip, r6, r0
   1becc:	e0211000 	eor	r1, r1, r0
   1bed0:	e2011010 	and	r1, r1, #16
   1bed4:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1bed8:	e1a032c3 	asr	r3, r3, #5
   1bedc:	e1811425 	orr	r1, r1, r5, lsr #8
   1bee0:	e2033004 	and	r3, r3, #4
   1bee4:	e181100c 	orr	r1, r1, ip
   1bee8:	e1833001 	orr	r3, r3, r1
   1beec:	e5c40001 	strb	r0, [r4, #1]
   1bef0:	e5c43000 	strb	r3, [r4]
   1bef4:	eafffb07 	b	1ab18 <RunZ80+0x4f4>
   1bef8:	e1d430be 	ldrh	r3, [r4, #14]
   1befc:	e5d42003 	ldrb	r2, [r4, #3]
   1bf00:	e2433001 	sub	r3, r3, #1
   1bf04:	e6ff3073 	uxth	r3, r3
   1bf08:	e1c430be 	strh	r3, [r4, #14]
   1bf0c:	e7c82003 	strb	r2, [r8, r3]
   1bf10:	e1d430be 	ldrh	r3, [r4, #14]
   1bf14:	e5d42002 	ldrb	r2, [r4, #2]
   1bf18:	e2433001 	sub	r3, r3, #1
   1bf1c:	e6ff3073 	uxth	r3, r3
   1bf20:	e1c430be 	strh	r3, [r4, #14]
   1bf24:	e7c82003 	strb	r2, [r8, r3]
   1bf28:	e5942020 	ldr	r2, [r4, #32]
   1bf2c:	eafffaf9 	b	1ab18 <RunZ80+0x4f4>
   1bf30:	e5d4e000 	ldrb	lr, [r4]
   1bf34:	e280c003 	add	ip, r0, #3
   1bf38:	e31e0040 	tst	lr, #64	; 0x40
   1bf3c:	e6ffc07c 	uxth	ip, ip
   1bf40:	1a0009dc 	bne	1e6b8 <RunZ80+0x4094>
   1bf44:	e2800002 	add	r0, r0, #2
   1bf48:	e6ff0070 	uxth	r0, r0
   1bf4c:	e2422007 	sub	r2, r2, #7
   1bf50:	e3510000 	cmp	r1, #0
   1bf54:	e1c400bc 	strh	r0, [r4, #12]
   1bf58:	e5842020 	str	r2, [r4, #32]
   1bf5c:	0a000ac2 	beq	1ea6c <RunZ80+0x4448>
   1bf60:	e0033009 	and	r3, r3, r9
   1bf64:	e7da3003 	ldrb	r3, [sl, r3]
   1bf68:	e0000009 	and	r0, r0, r9
   1bf6c:	e1c4c0bc 	strh	ip, [r4, #12]
   1bf70:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1bf74:	e7da2000 	ldrb	r2, [sl, r0]
   1bf78:	e1835005 	orr	r5, r3, r5
   1bf7c:	e1d430be 	ldrh	r3, [r4, #14]
   1bf80:	e1a0c42c 	lsr	ip, ip, #8
   1bf84:	e2433001 	sub	r3, r3, #1
   1bf88:	e6ff3073 	uxth	r3, r3
   1bf8c:	e1c430be 	strh	r3, [r4, #14]
   1bf90:	e7c8c003 	strb	ip, [r8, r3]
   1bf94:	e1d430be 	ldrh	r3, [r4, #14]
   1bf98:	e5d4100c 	ldrb	r1, [r4, #12]
   1bf9c:	e2433001 	sub	r3, r3, #1
   1bfa0:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1bfa4:	e6ff3073 	uxth	r3, r3
   1bfa8:	e1852402 	orr	r2, r5, r2, lsl #8
   1bfac:	e1c430be 	strh	r3, [r4, #14]
   1bfb0:	e7c81003 	strb	r1, [r8, r3]
   1bfb4:	e1a05002 	mov	r5, r2
   1bfb8:	e1c420bc 	strh	r2, [r4, #12]
   1bfbc:	e5942020 	ldr	r2, [r4, #32]
   1bfc0:	eafffad4 	b	1ab18 <RunZ80+0x4f4>
   1bfc4:	e2802002 	add	r2, r0, #2
   1bfc8:	e3510000 	cmp	r1, #0
   1bfcc:	e6ff2072 	uxth	r2, r2
   1bfd0:	e1c420bc 	strh	r2, [r4, #12]
   1bfd4:	10033009 	andne	r3, r3, r9
   1bfd8:	17da3003 	ldrbne	r3, [sl, r3]
   1bfdc:	07d81003 	ldrbeq	r1, [r8, r3]
   1bfe0:	13c550ff 	bicne	r5, r5, #255	; 0xff
   1bfe4:	10022009 	andne	r2, r2, r9
   1bfe8:	03c550ff 	biceq	r5, r5, #255	; 0xff
   1bfec:	07d83002 	ldrbeq	r3, [r8, r2]
   1bff0:	11835005 	orrne	r5, r3, r5
   1bff4:	01815005 	orreq	r5, r1, r5
   1bff8:	17da3002 	ldrbne	r3, [sl, r2]
   1bffc:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1c000:	e1855403 	orr	r5, r5, r3, lsl #8
   1c004:	e1c450bc 	strh	r5, [r4, #12]
   1c008:	e5942020 	ldr	r2, [r4, #32]
   1c00c:	eafffac1 	b	1ab18 <RunZ80+0x4f4>
   1c010:	e5d42000 	ldrb	r2, [r4]
   1c014:	e3120040 	tst	r2, #64	; 0x40
   1c018:	0a000993 	beq	1e66c <RunZ80+0x4048>
   1c01c:	e2800003 	add	r0, r0, #3
   1c020:	e1c400bc 	strh	r0, [r4, #12]
   1c024:	e5942020 	ldr	r2, [r4, #32]
   1c028:	eafffaba 	b	1ab18 <RunZ80+0x4f4>
   1c02c:	e1d420be 	ldrh	r2, [r4, #14]
   1c030:	e3510000 	cmp	r1, #0
   1c034:	e2823001 	add	r3, r2, #1
   1c038:	e6ff3073 	uxth	r3, r3
   1c03c:	e1c430be 	strh	r3, [r4, #14]
   1c040:	e2821002 	add	r1, r2, #2
   1c044:	10022009 	andne	r2, r2, r9
   1c048:	17da2002 	ldrbne	r2, [sl, r2]
   1c04c:	07d82002 	ldrbeq	r2, [r8, r2]
   1c050:	e6ff1071 	uxth	r1, r1
   1c054:	10033009 	andne	r3, r3, r9
   1c058:	15c42002 	strbne	r2, [r4, #2]
   1c05c:	05c42002 	strbeq	r2, [r4, #2]
   1c060:	11c410be 	strhne	r1, [r4, #14]
   1c064:	01c410be 	strheq	r1, [r4, #14]
   1c068:	17da3003 	ldrbne	r3, [sl, r3]
   1c06c:	07d83003 	ldrbeq	r3, [r8, r3]
   1c070:	e5942020 	ldr	r2, [r4, #32]
   1c074:	e5c43003 	strb	r3, [r4, #3]
   1c078:	eafffaa6 	b	1ab18 <RunZ80+0x4f4>
   1c07c:	e5d43000 	ldrb	r3, [r4]
   1c080:	e3130040 	tst	r3, #64	; 0x40
   1c084:	1a000976 	bne	1e664 <RunZ80+0x4040>
   1c088:	e1d400be 	ldrh	r0, [r4, #14]
   1c08c:	e3510000 	cmp	r1, #0
   1c090:	e2803001 	add	r3, r0, #1
   1c094:	e2422006 	sub	r2, r2, #6
   1c098:	e6ff3073 	uxth	r3, r3
   1c09c:	e1c430be 	strh	r3, [r4, #14]
   1c0a0:	e5842020 	str	r2, [r4, #32]
   1c0a4:	e2801002 	add	r1, r0, #2
   1c0a8:	10000009 	andne	r0, r0, r9
   1c0ac:	17da2000 	ldrbne	r2, [sl, r0]
   1c0b0:	07d82000 	ldrbeq	r2, [r8, r0]
   1c0b4:	e6ff1071 	uxth	r1, r1
   1c0b8:	10033009 	andne	r3, r3, r9
   1c0bc:	15c4200c 	strbne	r2, [r4, #12]
   1c0c0:	05c4200c 	strbeq	r2, [r4, #12]
   1c0c4:	11c410be 	strhne	r1, [r4, #14]
   1c0c8:	01c410be 	strheq	r1, [r4, #14]
   1c0cc:	17da3003 	ldrbne	r3, [sl, r3]
   1c0d0:	07d83003 	ldrbeq	r3, [r8, r3]
   1c0d4:	e5942020 	ldr	r2, [r4, #32]
   1c0d8:	e5c4300d 	strb	r3, [r4, #13]
   1c0dc:	eafffa8d 	b	1ab18 <RunZ80+0x4f4>
   1c0e0:	e3a03042 	mov	r3, #66	; 0x42
   1c0e4:	e5942020 	ldr	r2, [r4, #32]
   1c0e8:	e5c43000 	strb	r3, [r4]
   1c0ec:	eafffa89 	b	1ab18 <RunZ80+0x4f4>
   1c0f0:	e1d430b6 	ldrh	r3, [r4, #6]
   1c0f4:	e3510000 	cmp	r1, #0
   1c0f8:	10033009 	andne	r3, r3, r9
   1c0fc:	17da3003 	ldrbne	r3, [sl, r3]
   1c100:	07d83003 	ldrbeq	r3, [r8, r3]
   1c104:	e5d41001 	ldrb	r1, [r4, #1]
   1c108:	e5942020 	ldr	r2, [r4, #32]
   1c10c:	e0415003 	sub	r5, r1, r3
   1c110:	e6ff5075 	uxth	r5, r5
   1c114:	e6efe075 	uxtb	lr, r5
   1c118:	e021c003 	eor	ip, r1, r3
   1c11c:	e086300e 	add	r3, r6, lr
   1c120:	e5d30300 	ldrb	r0, [r3, #768]	; 0x300
   1c124:	e02c300e 	eor	r3, ip, lr
   1c128:	e3800002 	orr	r0, r0, #2
   1c12c:	e021100e 	eor	r1, r1, lr
   1c130:	e2033010 	and	r3, r3, #16
   1c134:	e1833000 	orr	r3, r3, r0
   1c138:	e001100c 	and	r1, r1, ip
   1c13c:	e1a00425 	lsr	r0, r5, #8
   1c140:	e1a012a1 	lsr	r1, r1, #5
   1c144:	e2600000 	rsb	r0, r0, #0
   1c148:	e2011004 	and	r1, r1, #4
   1c14c:	e1833000 	orr	r3, r3, r0
   1c150:	e1833001 	orr	r3, r3, r1
   1c154:	e5c43000 	strb	r3, [r4]
   1c158:	eafffa6e 	b	1ab18 <RunZ80+0x4f4>
   1c15c:	e5d41001 	ldrb	r1, [r4, #1]
   1c160:	e5d43006 	ldrb	r3, [r4, #6]
   1c164:	e5942020 	ldr	r2, [r4, #32]
   1c168:	e0415003 	sub	r5, r1, r3
   1c16c:	e6ff5075 	uxth	r5, r5
   1c170:	e6efe075 	uxtb	lr, r5
   1c174:	e021c003 	eor	ip, r1, r3
   1c178:	e086300e 	add	r3, r6, lr
   1c17c:	e5d30300 	ldrb	r0, [r3, #768]	; 0x300
   1c180:	e02c300e 	eor	r3, ip, lr
   1c184:	e3800002 	orr	r0, r0, #2
   1c188:	e021100e 	eor	r1, r1, lr
   1c18c:	e2033010 	and	r3, r3, #16
   1c190:	e1833000 	orr	r3, r3, r0
   1c194:	e001100c 	and	r1, r1, ip
   1c198:	e1a00425 	lsr	r0, r5, #8
   1c19c:	e1a012a1 	lsr	r1, r1, #5
   1c1a0:	e2600000 	rsb	r0, r0, #0
   1c1a4:	e2011004 	and	r1, r1, #4
   1c1a8:	e1833000 	orr	r3, r3, r0
   1c1ac:	e1833001 	orr	r3, r3, r1
   1c1b0:	e5c43000 	strb	r3, [r4]
   1c1b4:	eafffa57 	b	1ab18 <RunZ80+0x4f4>
   1c1b8:	e5d41001 	ldrb	r1, [r4, #1]
   1c1bc:	e5d43007 	ldrb	r3, [r4, #7]
   1c1c0:	e5942020 	ldr	r2, [r4, #32]
   1c1c4:	e0415003 	sub	r5, r1, r3
   1c1c8:	e6ff5075 	uxth	r5, r5
   1c1cc:	e6efe075 	uxtb	lr, r5
   1c1d0:	e021c003 	eor	ip, r1, r3
   1c1d4:	e086300e 	add	r3, r6, lr
   1c1d8:	e5d30300 	ldrb	r0, [r3, #768]	; 0x300
   1c1dc:	e02c300e 	eor	r3, ip, lr
   1c1e0:	e3800002 	orr	r0, r0, #2
   1c1e4:	e021100e 	eor	r1, r1, lr
   1c1e8:	e2033010 	and	r3, r3, #16
   1c1ec:	e1833000 	orr	r3, r3, r0
   1c1f0:	e001100c 	and	r1, r1, ip
   1c1f4:	e1a00425 	lsr	r0, r5, #8
   1c1f8:	e1a012a1 	lsr	r1, r1, #5
   1c1fc:	e2600000 	rsb	r0, r0, #0
   1c200:	e2011004 	and	r1, r1, #4
   1c204:	e1833000 	orr	r3, r3, r0
   1c208:	e1833001 	orr	r3, r3, r1
   1c20c:	e5c43000 	strb	r3, [r4]
   1c210:	eafffa40 	b	1ab18 <RunZ80+0x4f4>
   1c214:	e5d41001 	ldrb	r1, [r4, #1]
   1c218:	e5d43004 	ldrb	r3, [r4, #4]
   1c21c:	e5942020 	ldr	r2, [r4, #32]
   1c220:	e0415003 	sub	r5, r1, r3
   1c224:	e6ff5075 	uxth	r5, r5
   1c228:	e6efe075 	uxtb	lr, r5
   1c22c:	e021c003 	eor	ip, r1, r3
   1c230:	e086300e 	add	r3, r6, lr
   1c234:	e5d30300 	ldrb	r0, [r3, #768]	; 0x300
   1c238:	e02c300e 	eor	r3, ip, lr
   1c23c:	e3800002 	orr	r0, r0, #2
   1c240:	e021100e 	eor	r1, r1, lr
   1c244:	e2033010 	and	r3, r3, #16
   1c248:	e1833000 	orr	r3, r3, r0
   1c24c:	e001100c 	and	r1, r1, ip
   1c250:	e1a00425 	lsr	r0, r5, #8
   1c254:	e1a012a1 	lsr	r1, r1, #5
   1c258:	e2600000 	rsb	r0, r0, #0
   1c25c:	e2011004 	and	r1, r1, #4
   1c260:	e1833000 	orr	r3, r3, r0
   1c264:	e1833001 	orr	r3, r3, r1
   1c268:	e5c43000 	strb	r3, [r4]
   1c26c:	eafffa29 	b	1ab18 <RunZ80+0x4f4>
   1c270:	e5d41001 	ldrb	r1, [r4, #1]
   1c274:	e5d43005 	ldrb	r3, [r4, #5]
   1c278:	e5942020 	ldr	r2, [r4, #32]
   1c27c:	e0415003 	sub	r5, r1, r3
   1c280:	e6ff5075 	uxth	r5, r5
   1c284:	e6efe075 	uxtb	lr, r5
   1c288:	e021c003 	eor	ip, r1, r3
   1c28c:	e086300e 	add	r3, r6, lr
   1c290:	e5d30300 	ldrb	r0, [r3, #768]	; 0x300
   1c294:	e02c300e 	eor	r3, ip, lr
   1c298:	e3800002 	orr	r0, r0, #2
   1c29c:	e021100e 	eor	r1, r1, lr
   1c2a0:	e2033010 	and	r3, r3, #16
   1c2a4:	e1833000 	orr	r3, r3, r0
   1c2a8:	e001100c 	and	r1, r1, ip
   1c2ac:	e1a00425 	lsr	r0, r5, #8
   1c2b0:	e1a012a1 	lsr	r1, r1, #5
   1c2b4:	e2600000 	rsb	r0, r0, #0
   1c2b8:	e2011004 	and	r1, r1, #4
   1c2bc:	e1833000 	orr	r3, r3, r0
   1c2c0:	e1833001 	orr	r3, r3, r1
   1c2c4:	e5c43000 	strb	r3, [r4]
   1c2c8:	eafffa12 	b	1ab18 <RunZ80+0x4f4>
   1c2cc:	e5d41001 	ldrb	r1, [r4, #1]
   1c2d0:	e5d43002 	ldrb	r3, [r4, #2]
   1c2d4:	e5942020 	ldr	r2, [r4, #32]
   1c2d8:	e0415003 	sub	r5, r1, r3
   1c2dc:	e6ff5075 	uxth	r5, r5
   1c2e0:	e6efe075 	uxtb	lr, r5
   1c2e4:	e021c003 	eor	ip, r1, r3
   1c2e8:	e086300e 	add	r3, r6, lr
   1c2ec:	e5d30300 	ldrb	r0, [r3, #768]	; 0x300
   1c2f0:	e02c300e 	eor	r3, ip, lr
   1c2f4:	e3800002 	orr	r0, r0, #2
   1c2f8:	e021100e 	eor	r1, r1, lr
   1c2fc:	e2033010 	and	r3, r3, #16
   1c300:	e1833000 	orr	r3, r3, r0
   1c304:	e001100c 	and	r1, r1, ip
   1c308:	e1a00425 	lsr	r0, r5, #8
   1c30c:	e1a012a1 	lsr	r1, r1, #5
   1c310:	e2600000 	rsb	r0, r0, #0
   1c314:	e2011004 	and	r1, r1, #4
   1c318:	e1833000 	orr	r3, r3, r0
   1c31c:	e1833001 	orr	r3, r3, r1
   1c320:	e5c43000 	strb	r3, [r4]
   1c324:	eafff9fb 	b	1ab18 <RunZ80+0x4f4>
   1c328:	e5d41001 	ldrb	r1, [r4, #1]
   1c32c:	e5d43003 	ldrb	r3, [r4, #3]
   1c330:	e5942020 	ldr	r2, [r4, #32]
   1c334:	e0415003 	sub	r5, r1, r3
   1c338:	e6ff5075 	uxth	r5, r5
   1c33c:	e6efe075 	uxtb	lr, r5
   1c340:	e021c003 	eor	ip, r1, r3
   1c344:	e086300e 	add	r3, r6, lr
   1c348:	e5d30300 	ldrb	r0, [r3, #768]	; 0x300
   1c34c:	e02c300e 	eor	r3, ip, lr
   1c350:	e3800002 	orr	r0, r0, #2
   1c354:	e021100e 	eor	r1, r1, lr
   1c358:	e2033010 	and	r3, r3, #16
   1c35c:	e1833000 	orr	r3, r3, r0
   1c360:	e001100c 	and	r1, r1, ip
   1c364:	e1a00425 	lsr	r0, r5, #8
   1c368:	e1a012a1 	lsr	r1, r1, #5
   1c36c:	e2600000 	rsb	r0, r0, #0
   1c370:	e2011004 	and	r1, r1, #4
   1c374:	e1833000 	orr	r3, r3, r0
   1c378:	e1833001 	orr	r3, r3, r1
   1c37c:	e5c43000 	strb	r3, [r4]
   1c380:	eafff9e4 	b	1ab18 <RunZ80+0x4f4>
   1c384:	e5d43001 	ldrb	r3, [r4, #1]
   1c388:	e5942020 	ldr	r2, [r4, #32]
   1c38c:	e0863003 	add	r3, r6, r3
   1c390:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   1c394:	e5c43000 	strb	r3, [r4]
   1c398:	eafff9de 	b	1ab18 <RunZ80+0x4f4>
   1c39c:	e1d430b6 	ldrh	r3, [r4, #6]
   1c3a0:	e3510000 	cmp	r1, #0
   1c3a4:	10033009 	andne	r3, r3, r9
   1c3a8:	17da3003 	ldrbne	r3, [sl, r3]
   1c3ac:	07d83003 	ldrbeq	r3, [r8, r3]
   1c3b0:	e5d41001 	ldrb	r1, [r4, #1]
   1c3b4:	e5942020 	ldr	r2, [r4, #32]
   1c3b8:	e1833001 	orr	r3, r3, r1
   1c3bc:	e0861003 	add	r1, r6, r3
   1c3c0:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c3c4:	e5c43001 	strb	r3, [r4, #1]
   1c3c8:	e5c41000 	strb	r1, [r4]
   1c3cc:	eafff9d1 	b	1ab18 <RunZ80+0x4f4>
   1c3d0:	e5d43001 	ldrb	r3, [r4, #1]
   1c3d4:	e5d41006 	ldrb	r1, [r4, #6]
   1c3d8:	e5942020 	ldr	r2, [r4, #32]
   1c3dc:	e1833001 	orr	r3, r3, r1
   1c3e0:	e0861003 	add	r1, r6, r3
   1c3e4:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c3e8:	e5c43001 	strb	r3, [r4, #1]
   1c3ec:	e5c41000 	strb	r1, [r4]
   1c3f0:	eafff9c8 	b	1ab18 <RunZ80+0x4f4>
   1c3f4:	e5d43001 	ldrb	r3, [r4, #1]
   1c3f8:	e5d41007 	ldrb	r1, [r4, #7]
   1c3fc:	e5942020 	ldr	r2, [r4, #32]
   1c400:	e1833001 	orr	r3, r3, r1
   1c404:	e0861003 	add	r1, r6, r3
   1c408:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c40c:	e5c43001 	strb	r3, [r4, #1]
   1c410:	e5c41000 	strb	r1, [r4]
   1c414:	eafff9bf 	b	1ab18 <RunZ80+0x4f4>
   1c418:	e5d43001 	ldrb	r3, [r4, #1]
   1c41c:	e5d41004 	ldrb	r1, [r4, #4]
   1c420:	e5942020 	ldr	r2, [r4, #32]
   1c424:	e1833001 	orr	r3, r3, r1
   1c428:	e0861003 	add	r1, r6, r3
   1c42c:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c430:	e5c43001 	strb	r3, [r4, #1]
   1c434:	e5c41000 	strb	r1, [r4]
   1c438:	eafff9b6 	b	1ab18 <RunZ80+0x4f4>
   1c43c:	e5d43001 	ldrb	r3, [r4, #1]
   1c440:	e5d41005 	ldrb	r1, [r4, #5]
   1c444:	e5942020 	ldr	r2, [r4, #32]
   1c448:	e1833001 	orr	r3, r3, r1
   1c44c:	e0861003 	add	r1, r6, r3
   1c450:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c454:	e5c43001 	strb	r3, [r4, #1]
   1c458:	e5c41000 	strb	r1, [r4]
   1c45c:	eafff9ad 	b	1ab18 <RunZ80+0x4f4>
   1c460:	e5d43001 	ldrb	r3, [r4, #1]
   1c464:	e5d41002 	ldrb	r1, [r4, #2]
   1c468:	e5942020 	ldr	r2, [r4, #32]
   1c46c:	e1833001 	orr	r3, r3, r1
   1c470:	e0861003 	add	r1, r6, r3
   1c474:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c478:	e5c43001 	strb	r3, [r4, #1]
   1c47c:	e5c41000 	strb	r1, [r4]
   1c480:	eafff9a4 	b	1ab18 <RunZ80+0x4f4>
   1c484:	e5d43001 	ldrb	r3, [r4, #1]
   1c488:	e5d41003 	ldrb	r1, [r4, #3]
   1c48c:	e5942020 	ldr	r2, [r4, #32]
   1c490:	e1833001 	orr	r3, r3, r1
   1c494:	e0861003 	add	r1, r6, r3
   1c498:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c49c:	e5c43001 	strb	r3, [r4, #1]
   1c4a0:	e5c41000 	strb	r1, [r4]
   1c4a4:	eafff99b 	b	1ab18 <RunZ80+0x4f4>
   1c4a8:	e3a03044 	mov	r3, #68	; 0x44
   1c4ac:	e5942020 	ldr	r2, [r4, #32]
   1c4b0:	e1c430b0 	strh	r3, [r4]
   1c4b4:	eafff997 	b	1ab18 <RunZ80+0x4f4>
   1c4b8:	e1d430b6 	ldrh	r3, [r4, #6]
   1c4bc:	e3510000 	cmp	r1, #0
   1c4c0:	10033009 	andne	r3, r3, r9
   1c4c4:	17da3003 	ldrbne	r3, [sl, r3]
   1c4c8:	07d83003 	ldrbeq	r3, [r8, r3]
   1c4cc:	e5d41001 	ldrb	r1, [r4, #1]
   1c4d0:	e5942020 	ldr	r2, [r4, #32]
   1c4d4:	e0233001 	eor	r3, r3, r1
   1c4d8:	e0861003 	add	r1, r6, r3
   1c4dc:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c4e0:	e5c43001 	strb	r3, [r4, #1]
   1c4e4:	e5c41000 	strb	r1, [r4]
   1c4e8:	eafff98a 	b	1ab18 <RunZ80+0x4f4>
   1c4ec:	e5d43001 	ldrb	r3, [r4, #1]
   1c4f0:	e5d41006 	ldrb	r1, [r4, #6]
   1c4f4:	e5942020 	ldr	r2, [r4, #32]
   1c4f8:	e0233001 	eor	r3, r3, r1
   1c4fc:	e0861003 	add	r1, r6, r3
   1c500:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c504:	e5c43001 	strb	r3, [r4, #1]
   1c508:	e5c41000 	strb	r1, [r4]
   1c50c:	eafff981 	b	1ab18 <RunZ80+0x4f4>
   1c510:	e5d43001 	ldrb	r3, [r4, #1]
   1c514:	e5d41007 	ldrb	r1, [r4, #7]
   1c518:	e5942020 	ldr	r2, [r4, #32]
   1c51c:	e0233001 	eor	r3, r3, r1
   1c520:	e0861003 	add	r1, r6, r3
   1c524:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c528:	e5c43001 	strb	r3, [r4, #1]
   1c52c:	e5c41000 	strb	r1, [r4]
   1c530:	eafff978 	b	1ab18 <RunZ80+0x4f4>
   1c534:	e5d43001 	ldrb	r3, [r4, #1]
   1c538:	e5d41004 	ldrb	r1, [r4, #4]
   1c53c:	e5942020 	ldr	r2, [r4, #32]
   1c540:	e0233001 	eor	r3, r3, r1
   1c544:	e0861003 	add	r1, r6, r3
   1c548:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c54c:	e5c43001 	strb	r3, [r4, #1]
   1c550:	e5c41000 	strb	r1, [r4]
   1c554:	eafff96f 	b	1ab18 <RunZ80+0x4f4>
   1c558:	e5d43001 	ldrb	r3, [r4, #1]
   1c55c:	e5d41005 	ldrb	r1, [r4, #5]
   1c560:	e5942020 	ldr	r2, [r4, #32]
   1c564:	e0233001 	eor	r3, r3, r1
   1c568:	e0861003 	add	r1, r6, r3
   1c56c:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c570:	e5c43001 	strb	r3, [r4, #1]
   1c574:	e5c41000 	strb	r1, [r4]
   1c578:	eafff966 	b	1ab18 <RunZ80+0x4f4>
   1c57c:	e5d43001 	ldrb	r3, [r4, #1]
   1c580:	e5d41002 	ldrb	r1, [r4, #2]
   1c584:	e5942020 	ldr	r2, [r4, #32]
   1c588:	e0233001 	eor	r3, r3, r1
   1c58c:	e0861003 	add	r1, r6, r3
   1c590:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c594:	e5c43001 	strb	r3, [r4, #1]
   1c598:	e5c41000 	strb	r1, [r4]
   1c59c:	eafff95d 	b	1ab18 <RunZ80+0x4f4>
   1c5a0:	e5d43001 	ldrb	r3, [r4, #1]
   1c5a4:	e5d41003 	ldrb	r1, [r4, #3]
   1c5a8:	e5942020 	ldr	r2, [r4, #32]
   1c5ac:	e0233001 	eor	r3, r3, r1
   1c5b0:	e0861003 	add	r1, r6, r3
   1c5b4:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c5b8:	e5c43001 	strb	r3, [r4, #1]
   1c5bc:	e5c41000 	strb	r1, [r4]
   1c5c0:	eafff954 	b	1ab18 <RunZ80+0x4f4>
   1c5c4:	e5d43001 	ldrb	r3, [r4, #1]
   1c5c8:	e5942020 	ldr	r2, [r4, #32]
   1c5cc:	e0863003 	add	r3, r6, r3
   1c5d0:	e5d33100 	ldrb	r3, [r3, #256]	; 0x100
   1c5d4:	e3833010 	orr	r3, r3, #16
   1c5d8:	e5c43000 	strb	r3, [r4]
   1c5dc:	eafff94d 	b	1ab18 <RunZ80+0x4f4>
   1c5e0:	e1d430b6 	ldrh	r3, [r4, #6]
   1c5e4:	e3510000 	cmp	r1, #0
   1c5e8:	10033009 	andne	r3, r3, r9
   1c5ec:	17da3003 	ldrbne	r3, [sl, r3]
   1c5f0:	07d83003 	ldrbeq	r3, [r8, r3]
   1c5f4:	e5d41001 	ldrb	r1, [r4, #1]
   1c5f8:	e5942020 	ldr	r2, [r4, #32]
   1c5fc:	e0033001 	and	r3, r3, r1
   1c600:	e0861003 	add	r1, r6, r3
   1c604:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c608:	e5c43001 	strb	r3, [r4, #1]
   1c60c:	e3813010 	orr	r3, r1, #16
   1c610:	e5c43000 	strb	r3, [r4]
   1c614:	eafff93f 	b	1ab18 <RunZ80+0x4f4>
   1c618:	e5d43001 	ldrb	r3, [r4, #1]
   1c61c:	e5d41006 	ldrb	r1, [r4, #6]
   1c620:	e5942020 	ldr	r2, [r4, #32]
   1c624:	e0033001 	and	r3, r3, r1
   1c628:	e0861003 	add	r1, r6, r3
   1c62c:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c630:	e5c43001 	strb	r3, [r4, #1]
   1c634:	e3813010 	orr	r3, r1, #16
   1c638:	e5c43000 	strb	r3, [r4]
   1c63c:	eafff935 	b	1ab18 <RunZ80+0x4f4>
   1c640:	e5d43001 	ldrb	r3, [r4, #1]
   1c644:	e5d41007 	ldrb	r1, [r4, #7]
   1c648:	e5942020 	ldr	r2, [r4, #32]
   1c64c:	e0033001 	and	r3, r3, r1
   1c650:	e0861003 	add	r1, r6, r3
   1c654:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c658:	e5c43001 	strb	r3, [r4, #1]
   1c65c:	e3813010 	orr	r3, r1, #16
   1c660:	e5c43000 	strb	r3, [r4]
   1c664:	eafff92b 	b	1ab18 <RunZ80+0x4f4>
   1c668:	e5d43001 	ldrb	r3, [r4, #1]
   1c66c:	e5d41004 	ldrb	r1, [r4, #4]
   1c670:	e5942020 	ldr	r2, [r4, #32]
   1c674:	e0033001 	and	r3, r3, r1
   1c678:	e0861003 	add	r1, r6, r3
   1c67c:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c680:	e5c43001 	strb	r3, [r4, #1]
   1c684:	e3813010 	orr	r3, r1, #16
   1c688:	e5c43000 	strb	r3, [r4]
   1c68c:	eafff921 	b	1ab18 <RunZ80+0x4f4>
   1c690:	e5d43001 	ldrb	r3, [r4, #1]
   1c694:	e5d41005 	ldrb	r1, [r4, #5]
   1c698:	e5942020 	ldr	r2, [r4, #32]
   1c69c:	e0033001 	and	r3, r3, r1
   1c6a0:	e0861003 	add	r1, r6, r3
   1c6a4:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c6a8:	e5c43001 	strb	r3, [r4, #1]
   1c6ac:	e3813010 	orr	r3, r1, #16
   1c6b0:	e5c43000 	strb	r3, [r4]
   1c6b4:	eafff917 	b	1ab18 <RunZ80+0x4f4>
   1c6b8:	e5d43001 	ldrb	r3, [r4, #1]
   1c6bc:	e5d41002 	ldrb	r1, [r4, #2]
   1c6c0:	e5942020 	ldr	r2, [r4, #32]
   1c6c4:	e0033001 	and	r3, r3, r1
   1c6c8:	e0861003 	add	r1, r6, r3
   1c6cc:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c6d0:	e5c43001 	strb	r3, [r4, #1]
   1c6d4:	e3813010 	orr	r3, r1, #16
   1c6d8:	e5c43000 	strb	r3, [r4]
   1c6dc:	eafff90d 	b	1ab18 <RunZ80+0x4f4>
   1c6e0:	e5d43001 	ldrb	r3, [r4, #1]
   1c6e4:	e5d41003 	ldrb	r1, [r4, #3]
   1c6e8:	e5942020 	ldr	r2, [r4, #32]
   1c6ec:	e0033001 	and	r3, r3, r1
   1c6f0:	e0861003 	add	r1, r6, r3
   1c6f4:	e5d11100 	ldrb	r1, [r1, #256]	; 0x100
   1c6f8:	e5c43001 	strb	r3, [r4, #1]
   1c6fc:	e3813010 	orr	r3, r1, #16
   1c700:	e5c43000 	strb	r3, [r4]
   1c704:	eafff903 	b	1ab18 <RunZ80+0x4f4>
   1c708:	e5d45000 	ldrb	r5, [r4]
   1c70c:	e5942020 	ldr	r2, [r4, #32]
   1c710:	e2155001 	ands	r5, r5, #1
   1c714:	13e05000 	mvnne	r5, #0
   1c718:	e6ff5075 	uxth	r5, r5
   1c71c:	e6ef1075 	uxtb	r1, r5
   1c720:	e1a03425 	lsr	r3, r5, #8
   1c724:	e2010010 	and	r0, r1, #16
   1c728:	e2633000 	rsb	r3, r3, #0
   1c72c:	e1833000 	orr	r3, r3, r0
   1c730:	e0860001 	add	r0, r6, r1
   1c734:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1c738:	e3833002 	orr	r3, r3, #2
   1c73c:	e1833000 	orr	r3, r3, r0
   1c740:	e5c41001 	strb	r1, [r4, #1]
   1c744:	e5c43000 	strb	r3, [r4]
   1c748:	eafff8f2 	b	1ab18 <RunZ80+0x4f4>
   1c74c:	e1d430b6 	ldrh	r3, [r4, #6]
   1c750:	e3510000 	cmp	r1, #0
   1c754:	10033009 	andne	r3, r3, r9
   1c758:	17da0003 	ldrbne	r0, [sl, r3]
   1c75c:	07d80003 	ldrbeq	r0, [r8, r3]
   1c760:	e5d42000 	ldrb	r2, [r4]
   1c764:	e5d43001 	ldrb	r3, [r4, #1]
   1c768:	e2022001 	and	r2, r2, #1
   1c76c:	e0435000 	sub	r5, r3, r0
   1c770:	e0455002 	sub	r5, r5, r2
   1c774:	e6ff5075 	uxth	r5, r5
   1c778:	e6ef1075 	uxtb	r1, r5
   1c77c:	e086c001 	add	ip, r6, r1
   1c780:	e1a0e425 	lsr	lr, r5, #8
   1c784:	e0200003 	eor	r0, r0, r3
   1c788:	e0232001 	eor	r2, r3, r1
   1c78c:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1c790:	e26e3000 	rsb	r3, lr, #0
   1c794:	e0022000 	and	r2, r2, r0
   1c798:	e3833002 	orr	r3, r3, #2
   1c79c:	e0200001 	eor	r0, r0, r1
   1c7a0:	e1a022a2 	lsr	r2, r2, #5
   1c7a4:	e2000010 	and	r0, r0, #16
   1c7a8:	e183300c 	orr	r3, r3, ip
   1c7ac:	e2022004 	and	r2, r2, #4
   1c7b0:	e1833000 	orr	r3, r3, r0
   1c7b4:	e1833002 	orr	r3, r3, r2
   1c7b8:	e5c41001 	strb	r1, [r4, #1]
   1c7bc:	e5c43000 	strb	r3, [r4]
   1c7c0:	e5942020 	ldr	r2, [r4, #32]
   1c7c4:	eafff8d3 	b	1ab18 <RunZ80+0x4f4>
   1c7c8:	e5d43001 	ldrb	r3, [r4, #1]
   1c7cc:	e5d40006 	ldrb	r0, [r4, #6]
   1c7d0:	e5d42000 	ldrb	r2, [r4]
   1c7d4:	e0435000 	sub	r5, r3, r0
   1c7d8:	e2022001 	and	r2, r2, #1
   1c7dc:	e0455002 	sub	r5, r5, r2
   1c7e0:	e6ff5075 	uxth	r5, r5
   1c7e4:	e6ef1075 	uxtb	r1, r5
   1c7e8:	e086c001 	add	ip, r6, r1
   1c7ec:	e1a0e425 	lsr	lr, r5, #8
   1c7f0:	e0200003 	eor	r0, r0, r3
   1c7f4:	e0232001 	eor	r2, r3, r1
   1c7f8:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1c7fc:	e26e3000 	rsb	r3, lr, #0
   1c800:	e0022000 	and	r2, r2, r0
   1c804:	e3833002 	orr	r3, r3, #2
   1c808:	e0200001 	eor	r0, r0, r1
   1c80c:	e1a022a2 	lsr	r2, r2, #5
   1c810:	e2000010 	and	r0, r0, #16
   1c814:	e183300c 	orr	r3, r3, ip
   1c818:	e2022004 	and	r2, r2, #4
   1c81c:	e1833000 	orr	r3, r3, r0
   1c820:	e1833002 	orr	r3, r3, r2
   1c824:	e5c41001 	strb	r1, [r4, #1]
   1c828:	e5c43000 	strb	r3, [r4]
   1c82c:	e5942020 	ldr	r2, [r4, #32]
   1c830:	eafff8b8 	b	1ab18 <RunZ80+0x4f4>
   1c834:	e5d43001 	ldrb	r3, [r4, #1]
   1c838:	e5d40007 	ldrb	r0, [r4, #7]
   1c83c:	e5d42000 	ldrb	r2, [r4]
   1c840:	e0435000 	sub	r5, r3, r0
   1c844:	e2022001 	and	r2, r2, #1
   1c848:	e0455002 	sub	r5, r5, r2
   1c84c:	e6ff5075 	uxth	r5, r5
   1c850:	e6ef1075 	uxtb	r1, r5
   1c854:	e086c001 	add	ip, r6, r1
   1c858:	e1a0e425 	lsr	lr, r5, #8
   1c85c:	e0200003 	eor	r0, r0, r3
   1c860:	e0232001 	eor	r2, r3, r1
   1c864:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1c868:	e26e3000 	rsb	r3, lr, #0
   1c86c:	e0022000 	and	r2, r2, r0
   1c870:	e3833002 	orr	r3, r3, #2
   1c874:	e0200001 	eor	r0, r0, r1
   1c878:	e1a022a2 	lsr	r2, r2, #5
   1c87c:	e2000010 	and	r0, r0, #16
   1c880:	e183300c 	orr	r3, r3, ip
   1c884:	e2022004 	and	r2, r2, #4
   1c888:	e1833000 	orr	r3, r3, r0
   1c88c:	e1833002 	orr	r3, r3, r2
   1c890:	e5c41001 	strb	r1, [r4, #1]
   1c894:	e5c43000 	strb	r3, [r4]
   1c898:	e5942020 	ldr	r2, [r4, #32]
   1c89c:	eafff89d 	b	1ab18 <RunZ80+0x4f4>
   1c8a0:	e5d43001 	ldrb	r3, [r4, #1]
   1c8a4:	e5d40004 	ldrb	r0, [r4, #4]
   1c8a8:	e5d42000 	ldrb	r2, [r4]
   1c8ac:	e0435000 	sub	r5, r3, r0
   1c8b0:	e2022001 	and	r2, r2, #1
   1c8b4:	e0455002 	sub	r5, r5, r2
   1c8b8:	e6ff5075 	uxth	r5, r5
   1c8bc:	e6ef1075 	uxtb	r1, r5
   1c8c0:	e086c001 	add	ip, r6, r1
   1c8c4:	e1a0e425 	lsr	lr, r5, #8
   1c8c8:	e0200003 	eor	r0, r0, r3
   1c8cc:	e0212003 	eor	r2, r1, r3
   1c8d0:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1c8d4:	e26e3000 	rsb	r3, lr, #0
   1c8d8:	e0022000 	and	r2, r2, r0
   1c8dc:	e3833002 	orr	r3, r3, #2
   1c8e0:	e0200001 	eor	r0, r0, r1
   1c8e4:	e1a022a2 	lsr	r2, r2, #5
   1c8e8:	e2000010 	and	r0, r0, #16
   1c8ec:	e183300c 	orr	r3, r3, ip
   1c8f0:	e2022004 	and	r2, r2, #4
   1c8f4:	e1833000 	orr	r3, r3, r0
   1c8f8:	e1833002 	orr	r3, r3, r2
   1c8fc:	e5c41001 	strb	r1, [r4, #1]
   1c900:	e5c43000 	strb	r3, [r4]
   1c904:	e5942020 	ldr	r2, [r4, #32]
   1c908:	eafff882 	b	1ab18 <RunZ80+0x4f4>
   1c90c:	e5d43001 	ldrb	r3, [r4, #1]
   1c910:	e5d40005 	ldrb	r0, [r4, #5]
   1c914:	e5d42000 	ldrb	r2, [r4]
   1c918:	e0435000 	sub	r5, r3, r0
   1c91c:	e2022001 	and	r2, r2, #1
   1c920:	e0455002 	sub	r5, r5, r2
   1c924:	e6ff5075 	uxth	r5, r5
   1c928:	e6ef1075 	uxtb	r1, r5
   1c92c:	e086c001 	add	ip, r6, r1
   1c930:	e1a0e425 	lsr	lr, r5, #8
   1c934:	e0200003 	eor	r0, r0, r3
   1c938:	e0212003 	eor	r2, r1, r3
   1c93c:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1c940:	e26e3000 	rsb	r3, lr, #0
   1c944:	e0022000 	and	r2, r2, r0
   1c948:	e3833002 	orr	r3, r3, #2
   1c94c:	e0200001 	eor	r0, r0, r1
   1c950:	e1a022a2 	lsr	r2, r2, #5
   1c954:	e2000010 	and	r0, r0, #16
   1c958:	e183300c 	orr	r3, r3, ip
   1c95c:	e2022004 	and	r2, r2, #4
   1c960:	e1833000 	orr	r3, r3, r0
   1c964:	e1833002 	orr	r3, r3, r2
   1c968:	e5c41001 	strb	r1, [r4, #1]
   1c96c:	e5c43000 	strb	r3, [r4]
   1c970:	e5942020 	ldr	r2, [r4, #32]
   1c974:	eafff867 	b	1ab18 <RunZ80+0x4f4>
   1c978:	e5d43001 	ldrb	r3, [r4, #1]
   1c97c:	e5d40002 	ldrb	r0, [r4, #2]
   1c980:	e5d42000 	ldrb	r2, [r4]
   1c984:	e0435000 	sub	r5, r3, r0
   1c988:	e2022001 	and	r2, r2, #1
   1c98c:	e0455002 	sub	r5, r5, r2
   1c990:	e6ff5075 	uxth	r5, r5
   1c994:	e6ef1075 	uxtb	r1, r5
   1c998:	e086c001 	add	ip, r6, r1
   1c99c:	e1a0e425 	lsr	lr, r5, #8
   1c9a0:	e0200003 	eor	r0, r0, r3
   1c9a4:	e0232001 	eor	r2, r3, r1
   1c9a8:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1c9ac:	e26e3000 	rsb	r3, lr, #0
   1c9b0:	e0022000 	and	r2, r2, r0
   1c9b4:	e3833002 	orr	r3, r3, #2
   1c9b8:	e0200001 	eor	r0, r0, r1
   1c9bc:	e1a022a2 	lsr	r2, r2, #5
   1c9c0:	e2000010 	and	r0, r0, #16
   1c9c4:	e183300c 	orr	r3, r3, ip
   1c9c8:	e2022004 	and	r2, r2, #4
   1c9cc:	e1833000 	orr	r3, r3, r0
   1c9d0:	e1833002 	orr	r3, r3, r2
   1c9d4:	e5c41001 	strb	r1, [r4, #1]
   1c9d8:	e5c43000 	strb	r3, [r4]
   1c9dc:	e5942020 	ldr	r2, [r4, #32]
   1c9e0:	eafff84c 	b	1ab18 <RunZ80+0x4f4>
   1c9e4:	e5d43001 	ldrb	r3, [r4, #1]
   1c9e8:	e5d40003 	ldrb	r0, [r4, #3]
   1c9ec:	e5d42000 	ldrb	r2, [r4]
   1c9f0:	e0435000 	sub	r5, r3, r0
   1c9f4:	e2022001 	and	r2, r2, #1
   1c9f8:	e0455002 	sub	r5, r5, r2
   1c9fc:	e6ff5075 	uxth	r5, r5
   1ca00:	e6ef1075 	uxtb	r1, r5
   1ca04:	e086c001 	add	ip, r6, r1
   1ca08:	e1a0e425 	lsr	lr, r5, #8
   1ca0c:	e0200003 	eor	r0, r0, r3
   1ca10:	e0212003 	eor	r2, r1, r3
   1ca14:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1ca18:	e26e3000 	rsb	r3, lr, #0
   1ca1c:	e0022000 	and	r2, r2, r0
   1ca20:	e3833002 	orr	r3, r3, #2
   1ca24:	e0200001 	eor	r0, r0, r1
   1ca28:	e1a022a2 	lsr	r2, r2, #5
   1ca2c:	e2000010 	and	r0, r0, #16
   1ca30:	e183300c 	orr	r3, r3, ip
   1ca34:	e2022004 	and	r2, r2, #4
   1ca38:	e1833000 	orr	r3, r3, r0
   1ca3c:	e1833002 	orr	r3, r3, r2
   1ca40:	e5c41001 	strb	r1, [r4, #1]
   1ca44:	e5c43000 	strb	r3, [r4]
   1ca48:	e5942020 	ldr	r2, [r4, #32]
   1ca4c:	eafff831 	b	1ab18 <RunZ80+0x4f4>
   1ca50:	e3a03042 	mov	r3, #66	; 0x42
   1ca54:	e5942020 	ldr	r2, [r4, #32]
   1ca58:	e1c430b0 	strh	r3, [r4]
   1ca5c:	eafff82d 	b	1ab18 <RunZ80+0x4f4>
   1ca60:	e1d430b6 	ldrh	r3, [r4, #6]
   1ca64:	e3510000 	cmp	r1, #0
   1ca68:	10033009 	andne	r3, r3, r9
   1ca6c:	17da0003 	ldrbne	r0, [sl, r3]
   1ca70:	07d80003 	ldrbeq	r0, [r8, r3]
   1ca74:	e5d43001 	ldrb	r3, [r4, #1]
   1ca78:	e5942020 	ldr	r2, [r4, #32]
   1ca7c:	e0435000 	sub	r5, r3, r0
   1ca80:	e6ff5075 	uxth	r5, r5
   1ca84:	e6ef1075 	uxtb	r1, r5
   1ca88:	e086c001 	add	ip, r6, r1
   1ca8c:	e0200003 	eor	r0, r0, r3
   1ca90:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1ca94:	e0233001 	eor	r3, r3, r1
   1ca98:	e000e003 	and	lr, r0, r3
   1ca9c:	e0200001 	eor	r0, r0, r1
   1caa0:	e2003010 	and	r3, r0, #16
   1caa4:	e38cc002 	orr	ip, ip, #2
   1caa8:	e183300c 	orr	r3, r3, ip
   1caac:	e1a0c425 	lsr	ip, r5, #8
   1cab0:	e1a002ae 	lsr	r0, lr, #5
   1cab4:	e26cc000 	rsb	ip, ip, #0
   1cab8:	e2000004 	and	r0, r0, #4
   1cabc:	e183300c 	orr	r3, r3, ip
   1cac0:	e1833000 	orr	r3, r3, r0
   1cac4:	e5c41001 	strb	r1, [r4, #1]
   1cac8:	e5c43000 	strb	r3, [r4]
   1cacc:	eafff811 	b	1ab18 <RunZ80+0x4f4>
   1cad0:	e5d43001 	ldrb	r3, [r4, #1]
   1cad4:	e5d40006 	ldrb	r0, [r4, #6]
   1cad8:	e5942020 	ldr	r2, [r4, #32]
   1cadc:	e0435000 	sub	r5, r3, r0
   1cae0:	e6ff5075 	uxth	r5, r5
   1cae4:	e6ef1075 	uxtb	r1, r5
   1cae8:	e086c001 	add	ip, r6, r1
   1caec:	e0200003 	eor	r0, r0, r3
   1caf0:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1caf4:	e0233001 	eor	r3, r3, r1
   1caf8:	e000e003 	and	lr, r0, r3
   1cafc:	e0200001 	eor	r0, r0, r1
   1cb00:	e2003010 	and	r3, r0, #16
   1cb04:	e38cc002 	orr	ip, ip, #2
   1cb08:	e183300c 	orr	r3, r3, ip
   1cb0c:	e1a0c425 	lsr	ip, r5, #8
   1cb10:	e1a002ae 	lsr	r0, lr, #5
   1cb14:	e26cc000 	rsb	ip, ip, #0
   1cb18:	e2000004 	and	r0, r0, #4
   1cb1c:	e183300c 	orr	r3, r3, ip
   1cb20:	e1833000 	orr	r3, r3, r0
   1cb24:	e5c41001 	strb	r1, [r4, #1]
   1cb28:	e5c43000 	strb	r3, [r4]
   1cb2c:	eafff7f9 	b	1ab18 <RunZ80+0x4f4>
   1cb30:	e5d43001 	ldrb	r3, [r4, #1]
   1cb34:	e5d40007 	ldrb	r0, [r4, #7]
   1cb38:	e5942020 	ldr	r2, [r4, #32]
   1cb3c:	e0435000 	sub	r5, r3, r0
   1cb40:	e6ff5075 	uxth	r5, r5
   1cb44:	e6ef1075 	uxtb	r1, r5
   1cb48:	e086c001 	add	ip, r6, r1
   1cb4c:	e0200003 	eor	r0, r0, r3
   1cb50:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1cb54:	e0233001 	eor	r3, r3, r1
   1cb58:	e000e003 	and	lr, r0, r3
   1cb5c:	e0200001 	eor	r0, r0, r1
   1cb60:	e2003010 	and	r3, r0, #16
   1cb64:	e38cc002 	orr	ip, ip, #2
   1cb68:	e183300c 	orr	r3, r3, ip
   1cb6c:	e1a0c425 	lsr	ip, r5, #8
   1cb70:	e1a002ae 	lsr	r0, lr, #5
   1cb74:	e26cc000 	rsb	ip, ip, #0
   1cb78:	e2000004 	and	r0, r0, #4
   1cb7c:	e183300c 	orr	r3, r3, ip
   1cb80:	e1833000 	orr	r3, r3, r0
   1cb84:	e5c41001 	strb	r1, [r4, #1]
   1cb88:	e5c43000 	strb	r3, [r4]
   1cb8c:	eafff7e1 	b	1ab18 <RunZ80+0x4f4>
   1cb90:	e5d43001 	ldrb	r3, [r4, #1]
   1cb94:	e5d40004 	ldrb	r0, [r4, #4]
   1cb98:	e5942020 	ldr	r2, [r4, #32]
   1cb9c:	e0435000 	sub	r5, r3, r0
   1cba0:	e6ff5075 	uxth	r5, r5
   1cba4:	e6ef1075 	uxtb	r1, r5
   1cba8:	e086c001 	add	ip, r6, r1
   1cbac:	e0200003 	eor	r0, r0, r3
   1cbb0:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1cbb4:	e0233001 	eor	r3, r3, r1
   1cbb8:	e000e003 	and	lr, r0, r3
   1cbbc:	e0200001 	eor	r0, r0, r1
   1cbc0:	e2003010 	and	r3, r0, #16
   1cbc4:	e38cc002 	orr	ip, ip, #2
   1cbc8:	e183300c 	orr	r3, r3, ip
   1cbcc:	e1a0c425 	lsr	ip, r5, #8
   1cbd0:	e1a002ae 	lsr	r0, lr, #5
   1cbd4:	e26cc000 	rsb	ip, ip, #0
   1cbd8:	e2000004 	and	r0, r0, #4
   1cbdc:	e183300c 	orr	r3, r3, ip
   1cbe0:	e1833000 	orr	r3, r3, r0
   1cbe4:	e5c41001 	strb	r1, [r4, #1]
   1cbe8:	e5c43000 	strb	r3, [r4]
   1cbec:	eafff7c9 	b	1ab18 <RunZ80+0x4f4>
   1cbf0:	e5d43001 	ldrb	r3, [r4, #1]
   1cbf4:	e5d40005 	ldrb	r0, [r4, #5]
   1cbf8:	e5942020 	ldr	r2, [r4, #32]
   1cbfc:	e0435000 	sub	r5, r3, r0
   1cc00:	e6ff5075 	uxth	r5, r5
   1cc04:	e6ef1075 	uxtb	r1, r5
   1cc08:	e086c001 	add	ip, r6, r1
   1cc0c:	e0200003 	eor	r0, r0, r3
   1cc10:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1cc14:	e0233001 	eor	r3, r3, r1
   1cc18:	e000e003 	and	lr, r0, r3
   1cc1c:	e0200001 	eor	r0, r0, r1
   1cc20:	e2003010 	and	r3, r0, #16
   1cc24:	e38cc002 	orr	ip, ip, #2
   1cc28:	e183300c 	orr	r3, r3, ip
   1cc2c:	e1a0c425 	lsr	ip, r5, #8
   1cc30:	e1a002ae 	lsr	r0, lr, #5
   1cc34:	e26cc000 	rsb	ip, ip, #0
   1cc38:	e2000004 	and	r0, r0, #4
   1cc3c:	e183300c 	orr	r3, r3, ip
   1cc40:	e1833000 	orr	r3, r3, r0
   1cc44:	e5c41001 	strb	r1, [r4, #1]
   1cc48:	e5c43000 	strb	r3, [r4]
   1cc4c:	eafff7b1 	b	1ab18 <RunZ80+0x4f4>
   1cc50:	e5d43001 	ldrb	r3, [r4, #1]
   1cc54:	e5d40002 	ldrb	r0, [r4, #2]
   1cc58:	e5942020 	ldr	r2, [r4, #32]
   1cc5c:	e0435000 	sub	r5, r3, r0
   1cc60:	e6ff5075 	uxth	r5, r5
   1cc64:	e6ef1075 	uxtb	r1, r5
   1cc68:	e086c001 	add	ip, r6, r1
   1cc6c:	e0200003 	eor	r0, r0, r3
   1cc70:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1cc74:	e0233001 	eor	r3, r3, r1
   1cc78:	e000e003 	and	lr, r0, r3
   1cc7c:	e0200001 	eor	r0, r0, r1
   1cc80:	e2003010 	and	r3, r0, #16
   1cc84:	e38cc002 	orr	ip, ip, #2
   1cc88:	e183300c 	orr	r3, r3, ip
   1cc8c:	e1a0c425 	lsr	ip, r5, #8
   1cc90:	e1a002ae 	lsr	r0, lr, #5
   1cc94:	e26cc000 	rsb	ip, ip, #0
   1cc98:	e2000004 	and	r0, r0, #4
   1cc9c:	e183300c 	orr	r3, r3, ip
   1cca0:	e1833000 	orr	r3, r3, r0
   1cca4:	e5c41001 	strb	r1, [r4, #1]
   1cca8:	e5c43000 	strb	r3, [r4]
   1ccac:	eafff799 	b	1ab18 <RunZ80+0x4f4>
   1ccb0:	e5d43001 	ldrb	r3, [r4, #1]
   1ccb4:	e5d4e003 	ldrb	lr, [r4, #3]
   1ccb8:	e5942020 	ldr	r2, [r4, #32]
   1ccbc:	e043500e 	sub	r5, r3, lr
   1ccc0:	e6ff5075 	uxth	r5, r5
   1ccc4:	e6ef1075 	uxtb	r1, r5
   1ccc8:	e0860001 	add	r0, r6, r1
   1cccc:	e02ee003 	eor	lr, lr, r3
   1ccd0:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1ccd4:	e0233001 	eor	r3, r3, r1
   1ccd8:	e00ec003 	and	ip, lr, r3
   1ccdc:	e02e3001 	eor	r3, lr, r1
   1cce0:	e3800002 	orr	r0, r0, #2
   1cce4:	e2033010 	and	r3, r3, #16
   1cce8:	e1a0e425 	lsr	lr, r5, #8
   1ccec:	e1833000 	orr	r3, r3, r0
   1ccf0:	e1a0c2ac 	lsr	ip, ip, #5
   1ccf4:	e26ee000 	rsb	lr, lr, #0
   1ccf8:	e20c0004 	and	r0, ip, #4
   1ccfc:	e183300e 	orr	r3, r3, lr
   1cd00:	e1833000 	orr	r3, r3, r0
   1cd04:	e5c41001 	strb	r1, [r4, #1]
   1cd08:	e5c43000 	strb	r3, [r4]
   1cd0c:	eafff781 	b	1ab18 <RunZ80+0x4f4>
   1cd10:	e5d45000 	ldrb	r5, [r4]
   1cd14:	e5d43001 	ldrb	r3, [r4, #1]
   1cd18:	e2055001 	and	r5, r5, #1
   1cd1c:	e0855083 	add	r5, r5, r3, lsl #1
   1cd20:	e6ef2075 	uxtb	r2, r5
   1cd24:	e0861002 	add	r1, r6, r2
   1cd28:	e0233002 	eor	r3, r3, r2
   1cd2c:	e5d10300 	ldrb	r0, [r1, #768]	; 0x300
   1cd30:	e2051010 	and	r1, r5, #16
   1cd34:	e1a032a3 	lsr	r3, r3, #5
   1cd38:	e1811425 	orr	r1, r1, r5, lsr #8
   1cd3c:	e2033004 	and	r3, r3, #4
   1cd40:	e1811000 	orr	r1, r1, r0
   1cd44:	e1813003 	orr	r3, r1, r3
   1cd48:	e5c42001 	strb	r2, [r4, #1]
   1cd4c:	e5c43000 	strb	r3, [r4]
   1cd50:	e5942020 	ldr	r2, [r4, #32]
   1cd54:	eafff76f 	b	1ab18 <RunZ80+0x4f4>
   1cd58:	e1d430b6 	ldrh	r3, [r4, #6]
   1cd5c:	e3510000 	cmp	r1, #0
   1cd60:	10033009 	andne	r3, r3, r9
   1cd64:	e5d45000 	ldrb	r5, [r4]
   1cd68:	17da1003 	ldrbne	r1, [sl, r3]
   1cd6c:	07d81003 	ldrbeq	r1, [r8, r3]
   1cd70:	e5d43001 	ldrb	r3, [r4, #1]
   1cd74:	e2055001 	and	r5, r5, #1
   1cd78:	e0855003 	add	r5, r5, r3
   1cd7c:	e0855001 	add	r5, r5, r1
   1cd80:	e6ef2075 	uxtb	r2, r5
   1cd84:	e0233001 	eor	r3, r3, r1
   1cd88:	e0860002 	add	r0, r6, r2
   1cd8c:	e0211002 	eor	r1, r1, r2
   1cd90:	e1c11003 	bic	r1, r1, r3
   1cd94:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1cd98:	e0233002 	eor	r3, r3, r2
   1cd9c:	e2033010 	and	r3, r3, #16
   1cda0:	e1a012c1 	asr	r1, r1, #5
   1cda4:	e1833000 	orr	r3, r3, r0
   1cda8:	e2011004 	and	r1, r1, #4
   1cdac:	e1833425 	orr	r3, r3, r5, lsr #8
   1cdb0:	e1833001 	orr	r3, r3, r1
   1cdb4:	e5c42001 	strb	r2, [r4, #1]
   1cdb8:	e5c43000 	strb	r3, [r4]
   1cdbc:	e5942020 	ldr	r2, [r4, #32]
   1cdc0:	eafff754 	b	1ab18 <RunZ80+0x4f4>
   1cdc4:	e5d41001 	ldrb	r1, [r4, #1]
   1cdc8:	e5d43006 	ldrb	r3, [r4, #6]
   1cdcc:	e5d45000 	ldrb	r5, [r4]
   1cdd0:	e0812003 	add	r2, r1, r3
   1cdd4:	e2055001 	and	r5, r5, #1
   1cdd8:	e0855002 	add	r5, r5, r2
   1cddc:	e6ef2075 	uxtb	r2, r5
   1cde0:	e0211003 	eor	r1, r1, r3
   1cde4:	e0860002 	add	r0, r6, r2
   1cde8:	e0233002 	eor	r3, r3, r2
   1cdec:	e1c33001 	bic	r3, r3, r1
   1cdf0:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1cdf4:	e0211002 	eor	r1, r1, r2
   1cdf8:	e2011010 	and	r1, r1, #16
   1cdfc:	e1a032c3 	asr	r3, r3, #5
   1ce00:	e1811000 	orr	r1, r1, r0
   1ce04:	e2033004 	and	r3, r3, #4
   1ce08:	e1811425 	orr	r1, r1, r5, lsr #8
   1ce0c:	e1833001 	orr	r3, r3, r1
   1ce10:	e5c42001 	strb	r2, [r4, #1]
   1ce14:	e5c43000 	strb	r3, [r4]
   1ce18:	e5942020 	ldr	r2, [r4, #32]
   1ce1c:	eafff73d 	b	1ab18 <RunZ80+0x4f4>
   1ce20:	e5d41001 	ldrb	r1, [r4, #1]
   1ce24:	e5d43007 	ldrb	r3, [r4, #7]
   1ce28:	e5d45000 	ldrb	r5, [r4]
   1ce2c:	e0812003 	add	r2, r1, r3
   1ce30:	e2055001 	and	r5, r5, #1
   1ce34:	e0855002 	add	r5, r5, r2
   1ce38:	e6ef2075 	uxtb	r2, r5
   1ce3c:	e0211003 	eor	r1, r1, r3
   1ce40:	e0860002 	add	r0, r6, r2
   1ce44:	e0233002 	eor	r3, r3, r2
   1ce48:	e1c33001 	bic	r3, r3, r1
   1ce4c:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1ce50:	e0211002 	eor	r1, r1, r2
   1ce54:	e2011010 	and	r1, r1, #16
   1ce58:	e1a032c3 	asr	r3, r3, #5
   1ce5c:	e1811000 	orr	r1, r1, r0
   1ce60:	e2033004 	and	r3, r3, #4
   1ce64:	e1811425 	orr	r1, r1, r5, lsr #8
   1ce68:	e1833001 	orr	r3, r3, r1
   1ce6c:	e5c42001 	strb	r2, [r4, #1]
   1ce70:	e5c43000 	strb	r3, [r4]
   1ce74:	e5942020 	ldr	r2, [r4, #32]
   1ce78:	eafff726 	b	1ab18 <RunZ80+0x4f4>
   1ce7c:	e5d41001 	ldrb	r1, [r4, #1]
   1ce80:	e5d43004 	ldrb	r3, [r4, #4]
   1ce84:	e5d45000 	ldrb	r5, [r4]
   1ce88:	e0812003 	add	r2, r1, r3
   1ce8c:	e2055001 	and	r5, r5, #1
   1ce90:	e0855002 	add	r5, r5, r2
   1ce94:	e6ef2075 	uxtb	r2, r5
   1ce98:	e0211003 	eor	r1, r1, r3
   1ce9c:	e0860002 	add	r0, r6, r2
   1cea0:	e0233002 	eor	r3, r3, r2
   1cea4:	e1c33001 	bic	r3, r3, r1
   1cea8:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1ceac:	e0211002 	eor	r1, r1, r2
   1ceb0:	e2011010 	and	r1, r1, #16
   1ceb4:	e1a032c3 	asr	r3, r3, #5
   1ceb8:	e1811000 	orr	r1, r1, r0
   1cebc:	e2033004 	and	r3, r3, #4
   1cec0:	e1811425 	orr	r1, r1, r5, lsr #8
   1cec4:	e1833001 	orr	r3, r3, r1
   1cec8:	e5c42001 	strb	r2, [r4, #1]
   1cecc:	e5c43000 	strb	r3, [r4]
   1ced0:	e5942020 	ldr	r2, [r4, #32]
   1ced4:	eafff70f 	b	1ab18 <RunZ80+0x4f4>
   1ced8:	e5d41001 	ldrb	r1, [r4, #1]
   1cedc:	e5d43005 	ldrb	r3, [r4, #5]
   1cee0:	e5d45000 	ldrb	r5, [r4]
   1cee4:	e0812003 	add	r2, r1, r3
   1cee8:	e2055001 	and	r5, r5, #1
   1ceec:	e0855002 	add	r5, r5, r2
   1cef0:	e6ef2075 	uxtb	r2, r5
   1cef4:	e0211003 	eor	r1, r1, r3
   1cef8:	e0860002 	add	r0, r6, r2
   1cefc:	e0233002 	eor	r3, r3, r2
   1cf00:	e1c33001 	bic	r3, r3, r1
   1cf04:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1cf08:	e0211002 	eor	r1, r1, r2
   1cf0c:	e2011010 	and	r1, r1, #16
   1cf10:	e1a032c3 	asr	r3, r3, #5
   1cf14:	e1811000 	orr	r1, r1, r0
   1cf18:	e2033004 	and	r3, r3, #4
   1cf1c:	e1811425 	orr	r1, r1, r5, lsr #8
   1cf20:	e1833001 	orr	r3, r3, r1
   1cf24:	e5c42001 	strb	r2, [r4, #1]
   1cf28:	e5c43000 	strb	r3, [r4]
   1cf2c:	e5942020 	ldr	r2, [r4, #32]
   1cf30:	eafff6f8 	b	1ab18 <RunZ80+0x4f4>
   1cf34:	e5d41001 	ldrb	r1, [r4, #1]
   1cf38:	e5d43002 	ldrb	r3, [r4, #2]
   1cf3c:	e5d45000 	ldrb	r5, [r4]
   1cf40:	e0812003 	add	r2, r1, r3
   1cf44:	e2055001 	and	r5, r5, #1
   1cf48:	e0855002 	add	r5, r5, r2
   1cf4c:	e6ef2075 	uxtb	r2, r5
   1cf50:	e0211003 	eor	r1, r1, r3
   1cf54:	e0860002 	add	r0, r6, r2
   1cf58:	e0233002 	eor	r3, r3, r2
   1cf5c:	e1c33001 	bic	r3, r3, r1
   1cf60:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1cf64:	e0211002 	eor	r1, r1, r2
   1cf68:	e2011010 	and	r1, r1, #16
   1cf6c:	e1a032c3 	asr	r3, r3, #5
   1cf70:	e1811000 	orr	r1, r1, r0
   1cf74:	e2033004 	and	r3, r3, #4
   1cf78:	e1811425 	orr	r1, r1, r5, lsr #8
   1cf7c:	e1833001 	orr	r3, r3, r1
   1cf80:	e5c42001 	strb	r2, [r4, #1]
   1cf84:	e5c43000 	strb	r3, [r4]
   1cf88:	e5942020 	ldr	r2, [r4, #32]
   1cf8c:	eafff6e1 	b	1ab18 <RunZ80+0x4f4>
   1cf90:	e5d41001 	ldrb	r1, [r4, #1]
   1cf94:	e5d43003 	ldrb	r3, [r4, #3]
   1cf98:	e5d45000 	ldrb	r5, [r4]
   1cf9c:	e0812003 	add	r2, r1, r3
   1cfa0:	e2055001 	and	r5, r5, #1
   1cfa4:	e0855002 	add	r5, r5, r2
   1cfa8:	e6ef2075 	uxtb	r2, r5
   1cfac:	e0211003 	eor	r1, r1, r3
   1cfb0:	e0860002 	add	r0, r6, r2
   1cfb4:	e0233002 	eor	r3, r3, r2
   1cfb8:	e1c33001 	bic	r3, r3, r1
   1cfbc:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1cfc0:	e0211002 	eor	r1, r1, r2
   1cfc4:	e2011010 	and	r1, r1, #16
   1cfc8:	e1a032c3 	asr	r3, r3, #5
   1cfcc:	e1811000 	orr	r1, r1, r0
   1cfd0:	e2033004 	and	r3, r3, #4
   1cfd4:	e1811425 	orr	r1, r1, r5, lsr #8
   1cfd8:	e1833001 	orr	r3, r3, r1
   1cfdc:	e5c42001 	strb	r2, [r4, #1]
   1cfe0:	e5c43000 	strb	r3, [r4]
   1cfe4:	e5942020 	ldr	r2, [r4, #32]
   1cfe8:	eafff6ca 	b	1ab18 <RunZ80+0x4f4>
   1cfec:	e5d43001 	ldrb	r3, [r4, #1]
   1cff0:	e5942020 	ldr	r2, [r4, #32]
   1cff4:	e1a05083 	lsl	r5, r3, #1
   1cff8:	e6ef1075 	uxtb	r1, r5
   1cffc:	e0860001 	add	r0, r6, r1
   1d000:	e0233001 	eor	r3, r3, r1
   1d004:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1d008:	e205c010 	and	ip, r5, #16
   1d00c:	e1a032a3 	lsr	r3, r3, #5
   1d010:	e18cc425 	orr	ip, ip, r5, lsr #8
   1d014:	e2033004 	and	r3, r3, #4
   1d018:	e18c0000 	orr	r0, ip, r0
   1d01c:	e1803003 	orr	r3, r0, r3
   1d020:	e5c41001 	strb	r1, [r4, #1]
   1d024:	e5c43000 	strb	r3, [r4]
   1d028:	eafff6ba 	b	1ab18 <RunZ80+0x4f4>
   1d02c:	e1d430b6 	ldrh	r3, [r4, #6]
   1d030:	e3510000 	cmp	r1, #0
   1d034:	10033009 	andne	r3, r3, r9
   1d038:	17da3003 	ldrbne	r3, [sl, r3]
   1d03c:	07d83003 	ldrbeq	r3, [r8, r3]
   1d040:	e5d41001 	ldrb	r1, [r4, #1]
   1d044:	e5942020 	ldr	r2, [r4, #32]
   1d048:	e0815003 	add	r5, r1, r3
   1d04c:	e6ef0075 	uxtb	r0, r5
   1d050:	e0211003 	eor	r1, r1, r3
   1d054:	e0233000 	eor	r3, r3, r0
   1d058:	e1c33001 	bic	r3, r3, r1
   1d05c:	e086c000 	add	ip, r6, r0
   1d060:	e0211000 	eor	r1, r1, r0
   1d064:	e2011010 	and	r1, r1, #16
   1d068:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1d06c:	e1a032c3 	asr	r3, r3, #5
   1d070:	e1811425 	orr	r1, r1, r5, lsr #8
   1d074:	e2033004 	and	r3, r3, #4
   1d078:	e181100c 	orr	r1, r1, ip
   1d07c:	e1833001 	orr	r3, r3, r1
   1d080:	e5c40001 	strb	r0, [r4, #1]
   1d084:	e5c43000 	strb	r3, [r4]
   1d088:	eafff6a2 	b	1ab18 <RunZ80+0x4f4>
   1d08c:	e5d41001 	ldrb	r1, [r4, #1]
   1d090:	e5d43006 	ldrb	r3, [r4, #6]
   1d094:	e5942020 	ldr	r2, [r4, #32]
   1d098:	e0815003 	add	r5, r1, r3
   1d09c:	e6ef0075 	uxtb	r0, r5
   1d0a0:	e0211003 	eor	r1, r1, r3
   1d0a4:	e0233000 	eor	r3, r3, r0
   1d0a8:	e1c33001 	bic	r3, r3, r1
   1d0ac:	e086c000 	add	ip, r6, r0
   1d0b0:	e0211000 	eor	r1, r1, r0
   1d0b4:	e2011010 	and	r1, r1, #16
   1d0b8:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1d0bc:	e1a032c3 	asr	r3, r3, #5
   1d0c0:	e1811425 	orr	r1, r1, r5, lsr #8
   1d0c4:	e2033004 	and	r3, r3, #4
   1d0c8:	e181100c 	orr	r1, r1, ip
   1d0cc:	e1833001 	orr	r3, r3, r1
   1d0d0:	e5c40001 	strb	r0, [r4, #1]
   1d0d4:	e5c43000 	strb	r3, [r4]
   1d0d8:	eafff68e 	b	1ab18 <RunZ80+0x4f4>
   1d0dc:	e5d41001 	ldrb	r1, [r4, #1]
   1d0e0:	e5d43007 	ldrb	r3, [r4, #7]
   1d0e4:	e5942020 	ldr	r2, [r4, #32]
   1d0e8:	e0815003 	add	r5, r1, r3
   1d0ec:	e6ef0075 	uxtb	r0, r5
   1d0f0:	e0211003 	eor	r1, r1, r3
   1d0f4:	e0233000 	eor	r3, r3, r0
   1d0f8:	e1c33001 	bic	r3, r3, r1
   1d0fc:	e086c000 	add	ip, r6, r0
   1d100:	e0211000 	eor	r1, r1, r0
   1d104:	e2011010 	and	r1, r1, #16
   1d108:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1d10c:	e1a032c3 	asr	r3, r3, #5
   1d110:	e1811425 	orr	r1, r1, r5, lsr #8
   1d114:	e2033004 	and	r3, r3, #4
   1d118:	e181100c 	orr	r1, r1, ip
   1d11c:	e1833001 	orr	r3, r3, r1
   1d120:	e5c40001 	strb	r0, [r4, #1]
   1d124:	e5c43000 	strb	r3, [r4]
   1d128:	eafff67a 	b	1ab18 <RunZ80+0x4f4>
   1d12c:	e5d41001 	ldrb	r1, [r4, #1]
   1d130:	e5d43004 	ldrb	r3, [r4, #4]
   1d134:	e5942020 	ldr	r2, [r4, #32]
   1d138:	e0815003 	add	r5, r1, r3
   1d13c:	e6ef0075 	uxtb	r0, r5
   1d140:	e0211003 	eor	r1, r1, r3
   1d144:	e0233000 	eor	r3, r3, r0
   1d148:	e1c33001 	bic	r3, r3, r1
   1d14c:	e086c000 	add	ip, r6, r0
   1d150:	e0211000 	eor	r1, r1, r0
   1d154:	e2011010 	and	r1, r1, #16
   1d158:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1d15c:	e1a032c3 	asr	r3, r3, #5
   1d160:	e1811425 	orr	r1, r1, r5, lsr #8
   1d164:	e2033004 	and	r3, r3, #4
   1d168:	e181100c 	orr	r1, r1, ip
   1d16c:	e1833001 	orr	r3, r3, r1
   1d170:	e5c40001 	strb	r0, [r4, #1]
   1d174:	e5c43000 	strb	r3, [r4]
   1d178:	eafff666 	b	1ab18 <RunZ80+0x4f4>
   1d17c:	e5d41001 	ldrb	r1, [r4, #1]
   1d180:	e5d43005 	ldrb	r3, [r4, #5]
   1d184:	e5942020 	ldr	r2, [r4, #32]
   1d188:	e0815003 	add	r5, r1, r3
   1d18c:	e6ef0075 	uxtb	r0, r5
   1d190:	e0211003 	eor	r1, r1, r3
   1d194:	e0233000 	eor	r3, r3, r0
   1d198:	e1c33001 	bic	r3, r3, r1
   1d19c:	e086c000 	add	ip, r6, r0
   1d1a0:	e0211000 	eor	r1, r1, r0
   1d1a4:	e2011010 	and	r1, r1, #16
   1d1a8:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1d1ac:	e1a032c3 	asr	r3, r3, #5
   1d1b0:	e1811425 	orr	r1, r1, r5, lsr #8
   1d1b4:	e2033004 	and	r3, r3, #4
   1d1b8:	e181100c 	orr	r1, r1, ip
   1d1bc:	e1833001 	orr	r3, r3, r1
   1d1c0:	e5c40001 	strb	r0, [r4, #1]
   1d1c4:	e5c43000 	strb	r3, [r4]
   1d1c8:	eafff652 	b	1ab18 <RunZ80+0x4f4>
   1d1cc:	e5d41001 	ldrb	r1, [r4, #1]
   1d1d0:	e5d43002 	ldrb	r3, [r4, #2]
   1d1d4:	e5942020 	ldr	r2, [r4, #32]
   1d1d8:	e0815003 	add	r5, r1, r3
   1d1dc:	e6ef0075 	uxtb	r0, r5
   1d1e0:	e0211003 	eor	r1, r1, r3
   1d1e4:	e0233000 	eor	r3, r3, r0
   1d1e8:	e1c33001 	bic	r3, r3, r1
   1d1ec:	e086c000 	add	ip, r6, r0
   1d1f0:	e0211000 	eor	r1, r1, r0
   1d1f4:	e2011010 	and	r1, r1, #16
   1d1f8:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1d1fc:	e1a032c3 	asr	r3, r3, #5
   1d200:	e1811425 	orr	r1, r1, r5, lsr #8
   1d204:	e2033004 	and	r3, r3, #4
   1d208:	e181100c 	orr	r1, r1, ip
   1d20c:	e1833001 	orr	r3, r3, r1
   1d210:	e5c40001 	strb	r0, [r4, #1]
   1d214:	e5c43000 	strb	r3, [r4]
   1d218:	eafff63e 	b	1ab18 <RunZ80+0x4f4>
   1d21c:	e5d41001 	ldrb	r1, [r4, #1]
   1d220:	e5d43003 	ldrb	r3, [r4, #3]
   1d224:	e5942020 	ldr	r2, [r4, #32]
   1d228:	e0815003 	add	r5, r1, r3
   1d22c:	e6ef0075 	uxtb	r0, r5
   1d230:	e0211003 	eor	r1, r1, r3
   1d234:	e0233000 	eor	r3, r3, r0
   1d238:	e1c33001 	bic	r3, r3, r1
   1d23c:	e086c000 	add	ip, r6, r0
   1d240:	e0211000 	eor	r1, r1, r0
   1d244:	e2011010 	and	r1, r1, #16
   1d248:	e5dcc300 	ldrb	ip, [ip, #768]	; 0x300
   1d24c:	e1a032c3 	asr	r3, r3, #5
   1d250:	e1811425 	orr	r1, r1, r5, lsr #8
   1d254:	e2033004 	and	r3, r3, #4
   1d258:	e181100c 	orr	r1, r1, ip
   1d25c:	e1833001 	orr	r3, r3, r1
   1d260:	e5c40001 	strb	r0, [r4, #1]
   1d264:	e5c43000 	strb	r3, [r4]
   1d268:	eafff62a 	b	1ab18 <RunZ80+0x4f4>
   1d26c:	e1d430b6 	ldrh	r3, [r4, #6]
   1d270:	e5942020 	ldr	r2, [r4, #32]
   1d274:	e1c430be 	strh	r3, [r4, #14]
   1d278:	eafff626 	b	1ab18 <RunZ80+0x4f4>
   1d27c:	e1d430b6 	ldrh	r3, [r4, #6]
   1d280:	e3510000 	cmp	r1, #0
   1d284:	10033009 	andne	r3, r3, r9
   1d288:	17da3003 	ldrbne	r3, [sl, r3]
   1d28c:	07d83003 	ldrbeq	r3, [r8, r3]
   1d290:	e5942020 	ldr	r2, [r4, #32]
   1d294:	e5c43001 	strb	r3, [r4, #1]
   1d298:	eafff61e 	b	1ab18 <RunZ80+0x4f4>
   1d29c:	e5d43006 	ldrb	r3, [r4, #6]
   1d2a0:	e5942020 	ldr	r2, [r4, #32]
   1d2a4:	e5c43001 	strb	r3, [r4, #1]
   1d2a8:	eafff61a 	b	1ab18 <RunZ80+0x4f4>
   1d2ac:	e5d43007 	ldrb	r3, [r4, #7]
   1d2b0:	e5942020 	ldr	r2, [r4, #32]
   1d2b4:	e5c43001 	strb	r3, [r4, #1]
   1d2b8:	eafff616 	b	1ab18 <RunZ80+0x4f4>
   1d2bc:	e5d43004 	ldrb	r3, [r4, #4]
   1d2c0:	e5942020 	ldr	r2, [r4, #32]
   1d2c4:	e5c43001 	strb	r3, [r4, #1]
   1d2c8:	eafff612 	b	1ab18 <RunZ80+0x4f4>
   1d2cc:	e5d43005 	ldrb	r3, [r4, #5]
   1d2d0:	e5942020 	ldr	r2, [r4, #32]
   1d2d4:	e5c43001 	strb	r3, [r4, #1]
   1d2d8:	eafff60e 	b	1ab18 <RunZ80+0x4f4>
   1d2dc:	e5d43002 	ldrb	r3, [r4, #2]
   1d2e0:	e5942020 	ldr	r2, [r4, #32]
   1d2e4:	e5c43001 	strb	r3, [r4, #1]
   1d2e8:	eafff60a 	b	1ab18 <RunZ80+0x4f4>
   1d2ec:	e5d43003 	ldrb	r3, [r4, #3]
   1d2f0:	e5942020 	ldr	r2, [r4, #32]
   1d2f4:	e5c43001 	strb	r3, [r4, #1]
   1d2f8:	eafff606 	b	1ab18 <RunZ80+0x4f4>
   1d2fc:	e5d42001 	ldrb	r2, [r4, #1]
   1d300:	e1d430b6 	ldrh	r3, [r4, #6]
   1d304:	e7c82003 	strb	r2, [r8, r3]
   1d308:	e5942020 	ldr	r2, [r4, #32]
   1d30c:	eafff601 	b	1ab18 <RunZ80+0x4f4>
   1d310:	e3a02000 	mov	r2, #0
   1d314:	e5d43018 	ldrb	r3, [r4, #24]
   1d318:	e1c400bc 	strh	r0, [r4, #12]
   1d31c:	e3833080 	orr	r3, r3, #128	; 0x80
   1d320:	e5c43018 	strb	r3, [r4, #24]
   1d324:	e5842024 	str	r2, [r4, #36]	; 0x24
   1d328:	e5842020 	str	r2, [r4, #32]
   1d32c:	eafff706 	b	1af4c <RunZ80+0x928>
   1d330:	e5d42006 	ldrb	r2, [r4, #6]
   1d334:	e1d430b6 	ldrh	r3, [r4, #6]
   1d338:	e7c82003 	strb	r2, [r8, r3]
   1d33c:	e5942020 	ldr	r2, [r4, #32]
   1d340:	eafff5f4 	b	1ab18 <RunZ80+0x4f4>
   1d344:	e5d42007 	ldrb	r2, [r4, #7]
   1d348:	e1d430b6 	ldrh	r3, [r4, #6]
   1d34c:	e7c82003 	strb	r2, [r8, r3]
   1d350:	e5942020 	ldr	r2, [r4, #32]
   1d354:	eafff5ef 	b	1ab18 <RunZ80+0x4f4>
   1d358:	e5d42004 	ldrb	r2, [r4, #4]
   1d35c:	e1d430b6 	ldrh	r3, [r4, #6]
   1d360:	e7c82003 	strb	r2, [r8, r3]
   1d364:	e5942020 	ldr	r2, [r4, #32]
   1d368:	eafff5ea 	b	1ab18 <RunZ80+0x4f4>
   1d36c:	e5d42005 	ldrb	r2, [r4, #5]
   1d370:	e1d430b6 	ldrh	r3, [r4, #6]
   1d374:	e7c82003 	strb	r2, [r8, r3]
   1d378:	e5942020 	ldr	r2, [r4, #32]
   1d37c:	eafff5e5 	b	1ab18 <RunZ80+0x4f4>
   1d380:	e5d42002 	ldrb	r2, [r4, #2]
   1d384:	e1d430b6 	ldrh	r3, [r4, #6]
   1d388:	e7c82003 	strb	r2, [r8, r3]
   1d38c:	e5942020 	ldr	r2, [r4, #32]
   1d390:	eafff5e0 	b	1ab18 <RunZ80+0x4f4>
   1d394:	e5d42003 	ldrb	r2, [r4, #3]
   1d398:	e1d430b6 	ldrh	r3, [r4, #6]
   1d39c:	e7c82003 	strb	r2, [r8, r3]
   1d3a0:	e5942020 	ldr	r2, [r4, #32]
   1d3a4:	eafff5db 	b	1ab18 <RunZ80+0x4f4>
   1d3a8:	e5d43001 	ldrb	r3, [r4, #1]
   1d3ac:	e5942020 	ldr	r2, [r4, #32]
   1d3b0:	e5c43006 	strb	r3, [r4, #6]
   1d3b4:	eafff5d7 	b	1ab18 <RunZ80+0x4f4>
   1d3b8:	e1d430b6 	ldrh	r3, [r4, #6]
   1d3bc:	e3510000 	cmp	r1, #0
   1d3c0:	10033009 	andne	r3, r3, r9
   1d3c4:	17da3003 	ldrbne	r3, [sl, r3]
   1d3c8:	07d83003 	ldrbeq	r3, [r8, r3]
   1d3cc:	e5942020 	ldr	r2, [r4, #32]
   1d3d0:	e5c43006 	strb	r3, [r4, #6]
   1d3d4:	eafff5cf 	b	1ab18 <RunZ80+0x4f4>
   1d3d8:	e1d420d0 	ldrsb	r2, [r4]
   1d3dc:	e3520000 	cmp	r2, #0
   1d3e0:	ba00053b 	blt	1e8d4 <RunZ80+0x42b0>
   1d3e4:	e2800003 	add	r0, r0, #3
   1d3e8:	e1c400bc 	strh	r0, [r4, #12]
   1d3ec:	e5942020 	ldr	r2, [r4, #32]
   1d3f0:	eafff5c8 	b	1ab18 <RunZ80+0x4f4>
   1d3f4:	e5d43007 	ldrb	r3, [r4, #7]
   1d3f8:	e5942020 	ldr	r2, [r4, #32]
   1d3fc:	e5c43006 	strb	r3, [r4, #6]
   1d400:	eafff5c4 	b	1ab18 <RunZ80+0x4f4>
   1d404:	e5d43004 	ldrb	r3, [r4, #4]
   1d408:	e5942020 	ldr	r2, [r4, #32]
   1d40c:	e5c43006 	strb	r3, [r4, #6]
   1d410:	eafff5c0 	b	1ab18 <RunZ80+0x4f4>
   1d414:	e5d43005 	ldrb	r3, [r4, #5]
   1d418:	e5942020 	ldr	r2, [r4, #32]
   1d41c:	e5c43006 	strb	r3, [r4, #6]
   1d420:	eafff5bc 	b	1ab18 <RunZ80+0x4f4>
   1d424:	e5d43002 	ldrb	r3, [r4, #2]
   1d428:	e5942020 	ldr	r2, [r4, #32]
   1d42c:	e5c43006 	strb	r3, [r4, #6]
   1d430:	eafff5b8 	b	1ab18 <RunZ80+0x4f4>
   1d434:	e5d43003 	ldrb	r3, [r4, #3]
   1d438:	e5942020 	ldr	r2, [r4, #32]
   1d43c:	e5c43006 	strb	r3, [r4, #6]
   1d440:	eafff5b4 	b	1ab18 <RunZ80+0x4f4>
   1d444:	e5d43001 	ldrb	r3, [r4, #1]
   1d448:	e5942020 	ldr	r2, [r4, #32]
   1d44c:	e5c43007 	strb	r3, [r4, #7]
   1d450:	eafff5b0 	b	1ab18 <RunZ80+0x4f4>
   1d454:	e1d430b6 	ldrh	r3, [r4, #6]
   1d458:	e3510000 	cmp	r1, #0
   1d45c:	10033009 	andne	r3, r3, r9
   1d460:	17da3003 	ldrbne	r3, [sl, r3]
   1d464:	07d83003 	ldrbeq	r3, [r8, r3]
   1d468:	e5942020 	ldr	r2, [r4, #32]
   1d46c:	e5c43007 	strb	r3, [r4, #7]
   1d470:	eafff5a8 	b	1ab18 <RunZ80+0x4f4>
   1d474:	e5d43006 	ldrb	r3, [r4, #6]
   1d478:	e5942020 	ldr	r2, [r4, #32]
   1d47c:	e5c43007 	strb	r3, [r4, #7]
   1d480:	eafff5a4 	b	1ab18 <RunZ80+0x4f4>
   1d484:	e5d41018 	ldrb	r1, [r4, #24]
   1d488:	e3110021 	tst	r1, #33	; 0x21
   1d48c:	1a000472 	bne	1e65c <RunZ80+0x4038>
   1d490:	e3a0c001 	mov	ip, #1
   1d494:	e3811028 	orr	r1, r1, #40	; 0x28
   1d498:	e5842024 	str	r2, [r4, #36]	; 0x24
   1d49c:	e5c41018 	strb	r1, [r4, #24]
   1d4a0:	e1a00003 	mov	r0, r3
   1d4a4:	e584c020 	str	ip, [r4, #32]
   1d4a8:	e1a0200c 	mov	r2, ip
   1d4ac:	eafff466 	b	1a64c <RunZ80+0x28>
   1d4b0:	e5d43004 	ldrb	r3, [r4, #4]
   1d4b4:	e5942020 	ldr	r2, [r4, #32]
   1d4b8:	e5c43007 	strb	r3, [r4, #7]
   1d4bc:	eafff595 	b	1ab18 <RunZ80+0x4f4>
   1d4c0:	e5d43005 	ldrb	r3, [r4, #5]
   1d4c4:	e5942020 	ldr	r2, [r4, #32]
   1d4c8:	e5c43007 	strb	r3, [r4, #7]
   1d4cc:	eafff591 	b	1ab18 <RunZ80+0x4f4>
   1d4d0:	e5d43002 	ldrb	r3, [r4, #2]
   1d4d4:	e5942020 	ldr	r2, [r4, #32]
   1d4d8:	e5c43007 	strb	r3, [r4, #7]
   1d4dc:	eafff58d 	b	1ab18 <RunZ80+0x4f4>
   1d4e0:	e5d43003 	ldrb	r3, [r4, #3]
   1d4e4:	e5942020 	ldr	r2, [r4, #32]
   1d4e8:	e5c43007 	strb	r3, [r4, #7]
   1d4ec:	eafff589 	b	1ab18 <RunZ80+0x4f4>
   1d4f0:	e5d43001 	ldrb	r3, [r4, #1]
   1d4f4:	e5942020 	ldr	r2, [r4, #32]
   1d4f8:	e5c43004 	strb	r3, [r4, #4]
   1d4fc:	eafff585 	b	1ab18 <RunZ80+0x4f4>
   1d500:	e1d430b6 	ldrh	r3, [r4, #6]
   1d504:	e3510000 	cmp	r1, #0
   1d508:	10033009 	andne	r3, r3, r9
   1d50c:	17da3003 	ldrbne	r3, [sl, r3]
   1d510:	07d83003 	ldrbeq	r3, [r8, r3]
   1d514:	e5942020 	ldr	r2, [r4, #32]
   1d518:	e5c43004 	strb	r3, [r4, #4]
   1d51c:	eafff57d 	b	1ab18 <RunZ80+0x4f4>
   1d520:	e5d43006 	ldrb	r3, [r4, #6]
   1d524:	e5942020 	ldr	r2, [r4, #32]
   1d528:	e5c43004 	strb	r3, [r4, #4]
   1d52c:	eafff579 	b	1ab18 <RunZ80+0x4f4>
   1d530:	e5d43007 	ldrb	r3, [r4, #7]
   1d534:	e5942020 	ldr	r2, [r4, #32]
   1d538:	e5c43004 	strb	r3, [r4, #4]
   1d53c:	eafff575 	b	1ab18 <RunZ80+0x4f4>
   1d540:	e1d4e0d0 	ldrsb	lr, [r4]
   1d544:	e280c003 	add	ip, r0, #3
   1d548:	e35e0000 	cmp	lr, #0
   1d54c:	e6ffc07c 	uxth	ip, ip
   1d550:	ba0004fb 	blt	1e944 <RunZ80+0x4320>
   1d554:	e1c4c0bc 	strh	ip, [r4, #12]
   1d558:	e5942020 	ldr	r2, [r4, #32]
   1d55c:	eafff56d 	b	1ab18 <RunZ80+0x4f4>
   1d560:	e5d43005 	ldrb	r3, [r4, #5]
   1d564:	e5942020 	ldr	r2, [r4, #32]
   1d568:	e5c43004 	strb	r3, [r4, #4]
   1d56c:	eafff569 	b	1ab18 <RunZ80+0x4f4>
   1d570:	e5d43002 	ldrb	r3, [r4, #2]
   1d574:	e5942020 	ldr	r2, [r4, #32]
   1d578:	e5c43004 	strb	r3, [r4, #4]
   1d57c:	eafff565 	b	1ab18 <RunZ80+0x4f4>
   1d580:	e5d43003 	ldrb	r3, [r4, #3]
   1d584:	e5942020 	ldr	r2, [r4, #32]
   1d588:	e5c43004 	strb	r3, [r4, #4]
   1d58c:	eafff561 	b	1ab18 <RunZ80+0x4f4>
   1d590:	e5d43001 	ldrb	r3, [r4, #1]
   1d594:	e5942020 	ldr	r2, [r4, #32]
   1d598:	e5c43005 	strb	r3, [r4, #5]
   1d59c:	eafff55d 	b	1ab18 <RunZ80+0x4f4>
   1d5a0:	e1d430b6 	ldrh	r3, [r4, #6]
   1d5a4:	e3510000 	cmp	r1, #0
   1d5a8:	10033009 	andne	r3, r3, r9
   1d5ac:	17da3003 	ldrbne	r3, [sl, r3]
   1d5b0:	07d83003 	ldrbeq	r3, [r8, r3]
   1d5b4:	e5942020 	ldr	r2, [r4, #32]
   1d5b8:	e5c43005 	strb	r3, [r4, #5]
   1d5bc:	eafff555 	b	1ab18 <RunZ80+0x4f4>
   1d5c0:	e5d43006 	ldrb	r3, [r4, #6]
   1d5c4:	e5942020 	ldr	r2, [r4, #32]
   1d5c8:	e5c43005 	strb	r3, [r4, #5]
   1d5cc:	eafff551 	b	1ab18 <RunZ80+0x4f4>
   1d5d0:	e5d43007 	ldrb	r3, [r4, #7]
   1d5d4:	e5942020 	ldr	r2, [r4, #32]
   1d5d8:	e5c43005 	strb	r3, [r4, #5]
   1d5dc:	eafff54d 	b	1ab18 <RunZ80+0x4f4>
   1d5e0:	e5d43004 	ldrb	r3, [r4, #4]
   1d5e4:	e5942020 	ldr	r2, [r4, #32]
   1d5e8:	e5c43005 	strb	r3, [r4, #5]
   1d5ec:	eafff549 	b	1ab18 <RunZ80+0x4f4>
   1d5f0:	e1a00004 	mov	r0, r4
   1d5f4:	ebffb6e9 	bl	b1a0 <CodesFD>
   1d5f8:	e5942020 	ldr	r2, [r4, #32]
   1d5fc:	eafff545 	b	1ab18 <RunZ80+0x4f4>
   1d600:	e5d43002 	ldrb	r3, [r4, #2]
   1d604:	e5942020 	ldr	r2, [r4, #32]
   1d608:	e5c43005 	strb	r3, [r4, #5]
   1d60c:	eafff541 	b	1ab18 <RunZ80+0x4f4>
   1d610:	e5d43003 	ldrb	r3, [r4, #3]
   1d614:	e5942020 	ldr	r2, [r4, #32]
   1d618:	e5c43005 	strb	r3, [r4, #5]
   1d61c:	eafff53d 	b	1ab18 <RunZ80+0x4f4>
   1d620:	e5d43001 	ldrb	r3, [r4, #1]
   1d624:	e5942020 	ldr	r2, [r4, #32]
   1d628:	e5c43002 	strb	r3, [r4, #2]
   1d62c:	eafff539 	b	1ab18 <RunZ80+0x4f4>
   1d630:	e1d430b6 	ldrh	r3, [r4, #6]
   1d634:	e3510000 	cmp	r1, #0
   1d638:	10033009 	andne	r3, r3, r9
   1d63c:	17da3003 	ldrbne	r3, [sl, r3]
   1d640:	07d83003 	ldrbeq	r3, [r8, r3]
   1d644:	e5942020 	ldr	r2, [r4, #32]
   1d648:	e5c43002 	strb	r3, [r4, #2]
   1d64c:	eafff531 	b	1ab18 <RunZ80+0x4f4>
   1d650:	e5d43006 	ldrb	r3, [r4, #6]
   1d654:	e5942020 	ldr	r2, [r4, #32]
   1d658:	e5c43002 	strb	r3, [r4, #2]
   1d65c:	eafff52d 	b	1ab18 <RunZ80+0x4f4>
   1d660:	e5d43007 	ldrb	r3, [r4, #7]
   1d664:	e5942020 	ldr	r2, [r4, #32]
   1d668:	e5c43002 	strb	r3, [r4, #2]
   1d66c:	eafff529 	b	1ab18 <RunZ80+0x4f4>
   1d670:	e5d43004 	ldrb	r3, [r4, #4]
   1d674:	e5942020 	ldr	r2, [r4, #32]
   1d678:	e5c43002 	strb	r3, [r4, #2]
   1d67c:	eafff525 	b	1ab18 <RunZ80+0x4f4>
   1d680:	e5d43005 	ldrb	r3, [r4, #5]
   1d684:	e5942020 	ldr	r2, [r4, #32]
   1d688:	e5c43002 	strb	r3, [r4, #2]
   1d68c:	eafff521 	b	1ab18 <RunZ80+0x4f4>
   1d690:	e3510000 	cmp	r1, #0
   1d694:	e2800002 	add	r0, r0, #2
   1d698:	10033009 	andne	r3, r3, r9
   1d69c:	e1c400bc 	strh	r0, [r4, #12]
   1d6a0:	17da3003 	ldrbne	r3, [sl, r3]
   1d6a4:	07d83003 	ldrbeq	r3, [r8, r3]
   1d6a8:	e5d41001 	ldrb	r1, [r4, #1]
   1d6ac:	e5942020 	ldr	r2, [r4, #32]
   1d6b0:	e0415003 	sub	r5, r1, r3
   1d6b4:	e6ff5075 	uxth	r5, r5
   1d6b8:	e6efe075 	uxtb	lr, r5
   1d6bc:	e021c003 	eor	ip, r1, r3
   1d6c0:	e086300e 	add	r3, r6, lr
   1d6c4:	e5d30300 	ldrb	r0, [r3, #768]	; 0x300
   1d6c8:	e02c300e 	eor	r3, ip, lr
   1d6cc:	e3800002 	orr	r0, r0, #2
   1d6d0:	e021100e 	eor	r1, r1, lr
   1d6d4:	e2033010 	and	r3, r3, #16
   1d6d8:	e1833000 	orr	r3, r3, r0
   1d6dc:	e001100c 	and	r1, r1, ip
   1d6e0:	e1a00425 	lsr	r0, r5, #8
   1d6e4:	e1a012a1 	lsr	r1, r1, #5
   1d6e8:	e2600000 	rsb	r0, r0, #0
   1d6ec:	e2011004 	and	r1, r1, #4
   1d6f0:	e1833000 	orr	r3, r3, r0
   1d6f4:	e1833001 	orr	r3, r3, r1
   1d6f8:	e5c43000 	strb	r3, [r4]
   1d6fc:	eafff505 	b	1ab18 <RunZ80+0x4f4>
   1d700:	e5d43003 	ldrb	r3, [r4, #3]
   1d704:	e5942020 	ldr	r2, [r4, #32]
   1d708:	e5c43002 	strb	r3, [r4, #2]
   1d70c:	eafff501 	b	1ab18 <RunZ80+0x4f4>
   1d710:	e5d43001 	ldrb	r3, [r4, #1]
   1d714:	e5942020 	ldr	r2, [r4, #32]
   1d718:	e5c43003 	strb	r3, [r4, #3]
   1d71c:	eafff4fd 	b	1ab18 <RunZ80+0x4f4>
   1d720:	e1d430b6 	ldrh	r3, [r4, #6]
   1d724:	e3510000 	cmp	r1, #0
   1d728:	10033009 	andne	r3, r3, r9
   1d72c:	17da3003 	ldrbne	r3, [sl, r3]
   1d730:	07d83003 	ldrbeq	r3, [r8, r3]
   1d734:	e5942020 	ldr	r2, [r4, #32]
   1d738:	e5c43003 	strb	r3, [r4, #3]
   1d73c:	eafff4f5 	b	1ab18 <RunZ80+0x4f4>
   1d740:	e5d43006 	ldrb	r3, [r4, #6]
   1d744:	e5942020 	ldr	r2, [r4, #32]
   1d748:	e5c43003 	strb	r3, [r4, #3]
   1d74c:	eafff4f1 	b	1ab18 <RunZ80+0x4f4>
   1d750:	e5d43007 	ldrb	r3, [r4, #7]
   1d754:	e5942020 	ldr	r2, [r4, #32]
   1d758:	e5c43003 	strb	r3, [r4, #3]
   1d75c:	eafff4ed 	b	1ab18 <RunZ80+0x4f4>
   1d760:	e5d43004 	ldrb	r3, [r4, #4]
   1d764:	e5942020 	ldr	r2, [r4, #32]
   1d768:	e5c43003 	strb	r3, [r4, #3]
   1d76c:	eafff4e9 	b	1ab18 <RunZ80+0x4f4>
   1d770:	e5d43005 	ldrb	r3, [r4, #5]
   1d774:	e5942020 	ldr	r2, [r4, #32]
   1d778:	e5c43003 	strb	r3, [r4, #3]
   1d77c:	eafff4e5 	b	1ab18 <RunZ80+0x4f4>
   1d780:	e5d43002 	ldrb	r3, [r4, #2]
   1d784:	e5942020 	ldr	r2, [r4, #32]
   1d788:	e5c43003 	strb	r3, [r4, #3]
   1d78c:	eafff4e1 	b	1ab18 <RunZ80+0x4f4>
   1d790:	e3a01038 	mov	r1, #56	; 0x38
   1d794:	e1d420be 	ldrh	r2, [r4, #14]
   1d798:	e1a03423 	lsr	r3, r3, #8
   1d79c:	e2422001 	sub	r2, r2, #1
   1d7a0:	e6ff2072 	uxth	r2, r2
   1d7a4:	e1c420be 	strh	r2, [r4, #14]
   1d7a8:	e7c83002 	strb	r3, [r8, r2]
   1d7ac:	e1d430be 	ldrh	r3, [r4, #14]
   1d7b0:	e5d4200c 	ldrb	r2, [r4, #12]
   1d7b4:	e2433001 	sub	r3, r3, #1
   1d7b8:	e6ff3073 	uxth	r3, r3
   1d7bc:	e1c430be 	strh	r3, [r4, #14]
   1d7c0:	e7c82003 	strb	r2, [r8, r3]
   1d7c4:	e5942020 	ldr	r2, [r4, #32]
   1d7c8:	e1c410bc 	strh	r1, [r4, #12]
   1d7cc:	eafff4d1 	b	1ab18 <RunZ80+0x4f4>
   1d7d0:	e5d42000 	ldrb	r2, [r4]
   1d7d4:	e2223001 	eor	r3, r2, #1
   1d7d8:	e3c33012 	bic	r3, r3, #18
   1d7dc:	e3120001 	tst	r2, #1
   1d7e0:	e6af3073 	sxtb	r3, r3
   1d7e4:	13833010 	orrne	r3, r3, #16
   1d7e8:	e5c43000 	strb	r3, [r4]
   1d7ec:	e5942020 	ldr	r2, [r4, #32]
   1d7f0:	eafff4c8 	b	1ab18 <RunZ80+0x4f4>
   1d7f4:	e3510000 	cmp	r1, #0
   1d7f8:	e2800002 	add	r0, r0, #2
   1d7fc:	e1c400bc 	strh	r0, [r4, #12]
   1d800:	10033009 	andne	r3, r3, r9
   1d804:	17da3003 	ldrbne	r3, [sl, r3]
   1d808:	07d83003 	ldrbeq	r3, [r8, r3]
   1d80c:	e5942020 	ldr	r2, [r4, #32]
   1d810:	e5c43001 	strb	r3, [r4, #1]
   1d814:	eafff4bf 	b	1ab18 <RunZ80+0x4f4>
   1d818:	e5d43001 	ldrb	r3, [r4, #1]
   1d81c:	e5d42000 	ldrb	r2, [r4]
   1d820:	e2433001 	sub	r3, r3, #1
   1d824:	e6ef3073 	uxtb	r3, r3
   1d828:	e0861003 	add	r1, r6, r3
   1d82c:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1d830:	e2022001 	and	r2, r2, #1
   1d834:	e353007f 	cmp	r3, #127	; 0x7f
   1d838:	e5c43001 	strb	r3, [r4, #1]
   1d83c:	e1822001 	orr	r2, r2, r1
   1d840:	0a00043c 	beq	1e938 <RunZ80+0x4314>
   1d844:	e203300f 	and	r3, r3, #15
   1d848:	e353000f 	cmp	r3, #15
   1d84c:	13a03000 	movne	r3, #0
   1d850:	03a03010 	moveq	r3, #16
   1d854:	e1833002 	orr	r3, r3, r2
   1d858:	e3833002 	orr	r3, r3, #2
   1d85c:	e5c43000 	strb	r3, [r4]
   1d860:	e5942020 	ldr	r2, [r4, #32]
   1d864:	eafff4ab 	b	1ab18 <RunZ80+0x4f4>
   1d868:	e5d42001 	ldrb	r2, [r4, #1]
   1d86c:	e5d43000 	ldrb	r3, [r4]
   1d870:	e2822001 	add	r2, r2, #1
   1d874:	e6ef2072 	uxtb	r2, r2
   1d878:	e0861002 	add	r1, r6, r2
   1d87c:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1d880:	e2033001 	and	r3, r3, #1
   1d884:	e1833001 	orr	r3, r3, r1
   1d888:	e3520080 	cmp	r2, #128	; 0x80
   1d88c:	e5c42001 	strb	r2, [r4, #1]
   1d890:	e6af3073 	sxtb	r3, r3
   1d894:	0a00040b 	beq	1e8c8 <RunZ80+0x42a4>
   1d898:	e312000f 	tst	r2, #15
   1d89c:	03a02010 	moveq	r2, #16
   1d8a0:	13a02000 	movne	r2, #0
   1d8a4:	e1823003 	orr	r3, r2, r3
   1d8a8:	e5c43000 	strb	r3, [r4]
   1d8ac:	e5942020 	ldr	r2, [r4, #32]
   1d8b0:	eafff498 	b	1ab18 <RunZ80+0x4f4>
   1d8b4:	e1d430be 	ldrh	r3, [r4, #14]
   1d8b8:	e5942020 	ldr	r2, [r4, #32]
   1d8bc:	e2433001 	sub	r3, r3, #1
   1d8c0:	e1c430be 	strh	r3, [r4, #14]
   1d8c4:	eafff493 	b	1ab18 <RunZ80+0x4f4>
   1d8c8:	e2802002 	add	r2, r0, #2
   1d8cc:	e6ff2072 	uxth	r2, r2
   1d8d0:	e2800003 	add	r0, r0, #3
   1d8d4:	e3510000 	cmp	r1, #0
   1d8d8:	e1c420bc 	strh	r2, [r4, #12]
   1d8dc:	e6ff0070 	uxth	r0, r0
   1d8e0:	1a000351 	bne	1e62c <RunZ80+0x4008>
   1d8e4:	e7d81003 	ldrb	r1, [r8, r3]
   1d8e8:	e1a05825 	lsr	r5, r5, #16
   1d8ec:	e1c400bc 	strh	r0, [r4, #12]
   1d8f0:	e1a05805 	lsl	r5, r5, #16
   1d8f4:	e7d83002 	ldrb	r3, [r8, r2]
   1d8f8:	e1855001 	orr	r5, r5, r1
   1d8fc:	e1853403 	orr	r3, r5, r3, lsl #8
   1d900:	e1a05003 	mov	r5, r3
   1d904:	e6ff3073 	uxth	r3, r3
   1d908:	e7d83003 	ldrb	r3, [r8, r3]
   1d90c:	e5c43001 	strb	r3, [r4, #1]
   1d910:	e5942020 	ldr	r2, [r4, #32]
   1d914:	eafff47f 	b	1ab18 <RunZ80+0x4f4>
   1d918:	e1d430b6 	ldrh	r3, [r4, #6]
   1d91c:	e1d400be 	ldrh	r0, [r4, #14]
   1d920:	e5d41000 	ldrb	r1, [r4]
   1d924:	e0832000 	add	r2, r3, r0
   1d928:	e6ff5072 	uxth	r5, r2
   1d92c:	e0233000 	eor	r3, r3, r0
   1d930:	e0233005 	eor	r3, r3, r5
   1d934:	e1a03443 	asr	r3, r3, #8
   1d938:	e3c11013 	bic	r1, r1, #19
   1d93c:	e1812822 	orr	r2, r1, r2, lsr #16
   1d940:	e2033010 	and	r3, r3, #16
   1d944:	e1823003 	orr	r3, r2, r3
   1d948:	e1c450b6 	strh	r5, [r4, #6]
   1d94c:	e5c43000 	strb	r3, [r4]
   1d950:	e5942020 	ldr	r2, [r4, #32]
   1d954:	eafff46f 	b	1ab18 <RunZ80+0x4f4>
   1d958:	e5d4c000 	ldrb	ip, [r4]
   1d95c:	e31c0001 	tst	ip, #1
   1d960:	0a00032d 	beq	1e61c <RunZ80+0x3ff8>
   1d964:	e3510000 	cmp	r1, #0
   1d968:	e2422005 	sub	r2, r2, #5
   1d96c:	10031009 	andne	r1, r3, r9
   1d970:	e5842020 	str	r2, [r4, #32]
   1d974:	07d81003 	ldrbeq	r1, [r8, r3]
   1d978:	17da1001 	ldrbne	r1, [sl, r1]
   1d97c:	e6af1071 	sxtb	r1, r1
   1d980:	e2811001 	add	r1, r1, #1
   1d984:	e0833001 	add	r3, r3, r1
   1d988:	e1c430bc 	strh	r3, [r4, #12]
   1d98c:	eafff461 	b	1ab18 <RunZ80+0x4f4>
   1d990:	e5d43000 	ldrb	r3, [r4]
   1d994:	e5942020 	ldr	r2, [r4, #32]
   1d998:	e3c33012 	bic	r3, r3, #18
   1d99c:	e3833001 	orr	r3, r3, #1
   1d9a0:	e5c43000 	strb	r3, [r4]
   1d9a4:	eafff45b 	b	1ab18 <RunZ80+0x4f4>
   1d9a8:	e3510000 	cmp	r1, #0
   1d9ac:	e2800002 	add	r0, r0, #2
   1d9b0:	e1c400bc 	strh	r0, [r4, #12]
   1d9b4:	10033009 	andne	r3, r3, r9
   1d9b8:	e1d420b6 	ldrh	r2, [r4, #6]
   1d9bc:	17da3003 	ldrbne	r3, [sl, r3]
   1d9c0:	07d83003 	ldrbeq	r3, [r8, r3]
   1d9c4:	e7c83002 	strb	r3, [r8, r2]
   1d9c8:	e5942020 	ldr	r2, [r4, #32]
   1d9cc:	eafff451 	b	1ab18 <RunZ80+0x4f4>
   1d9d0:	e3510000 	cmp	r1, #0
   1d9d4:	e1d410b6 	ldrh	r1, [r4, #6]
   1d9d8:	10013009 	andne	r3, r1, r9
   1d9dc:	17da2003 	ldrbne	r2, [sl, r3]
   1d9e0:	07d82001 	ldrbeq	r2, [r8, r1]
   1d9e4:	e5d43000 	ldrb	r3, [r4]
   1d9e8:	e2422001 	sub	r2, r2, #1
   1d9ec:	e6ef2072 	uxtb	r2, r2
   1d9f0:	e0860002 	add	r0, r6, r2
   1d9f4:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1d9f8:	e2033001 	and	r3, r3, #1
   1d9fc:	e352007f 	cmp	r2, #127	; 0x7f
   1da00:	e1833000 	orr	r3, r3, r0
   1da04:	0a0003c8 	beq	1e92c <RunZ80+0x4308>
   1da08:	e202000f 	and	r0, r2, #15
   1da0c:	e350000f 	cmp	r0, #15
   1da10:	13a00000 	movne	r0, #0
   1da14:	03a00010 	moveq	r0, #16
   1da18:	e1803003 	orr	r3, r0, r3
   1da1c:	e3833002 	orr	r3, r3, #2
   1da20:	e5c43000 	strb	r3, [r4]
   1da24:	e7c82001 	strb	r2, [r8, r1]
   1da28:	e5942020 	ldr	r2, [r4, #32]
   1da2c:	eafff439 	b	1ab18 <RunZ80+0x4f4>
   1da30:	e3510000 	cmp	r1, #0
   1da34:	e1d410b6 	ldrh	r1, [r4, #6]
   1da38:	10013009 	andne	r3, r1, r9
   1da3c:	17da2003 	ldrbne	r2, [sl, r3]
   1da40:	07d82001 	ldrbeq	r2, [r8, r1]
   1da44:	e5d43000 	ldrb	r3, [r4]
   1da48:	e2822001 	add	r2, r2, #1
   1da4c:	e6ef2072 	uxtb	r2, r2
   1da50:	e0860002 	add	r0, r6, r2
   1da54:	e5d00300 	ldrb	r0, [r0, #768]	; 0x300
   1da58:	e2033001 	and	r3, r3, #1
   1da5c:	e1833000 	orr	r3, r3, r0
   1da60:	e3520080 	cmp	r2, #128	; 0x80
   1da64:	e6af3073 	sxtb	r3, r3
   1da68:	0a0003ac 	beq	1e920 <RunZ80+0x42fc>
   1da6c:	e312000f 	tst	r2, #15
   1da70:	03a00010 	moveq	r0, #16
   1da74:	13a00000 	movne	r0, #0
   1da78:	e1803003 	orr	r3, r0, r3
   1da7c:	e5c43000 	strb	r3, [r4]
   1da80:	e7c82001 	strb	r2, [r8, r1]
   1da84:	e5942020 	ldr	r2, [r4, #32]
   1da88:	eafff422 	b	1ab18 <RunZ80+0x4f4>
   1da8c:	e1d430be 	ldrh	r3, [r4, #14]
   1da90:	e5942020 	ldr	r2, [r4, #32]
   1da94:	e2833001 	add	r3, r3, #1
   1da98:	e1c430be 	strh	r3, [r4, #14]
   1da9c:	eafff41d 	b	1ab18 <RunZ80+0x4f4>
   1daa0:	e2802002 	add	r2, r0, #2
   1daa4:	e6ff2072 	uxth	r2, r2
   1daa8:	e2800003 	add	r0, r0, #3
   1daac:	e3510000 	cmp	r1, #0
   1dab0:	e1c420bc 	strh	r2, [r4, #12]
   1dab4:	e6ff0070 	uxth	r0, r0
   1dab8:	1a0002cf 	bne	1e5fc <RunZ80+0x3fd8>
   1dabc:	e7d81003 	ldrb	r1, [r8, r3]
   1dac0:	e1c400bc 	strh	r0, [r4, #12]
   1dac4:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1dac8:	e7d83002 	ldrb	r3, [r8, r2]
   1dacc:	e1815005 	orr	r5, r1, r5
   1dad0:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1dad4:	e5d42001 	ldrb	r2, [r4, #1]
   1dad8:	e1855403 	orr	r5, r5, r3, lsl #8
   1dadc:	e6ff3075 	uxth	r3, r5
   1dae0:	e7c82003 	strb	r2, [r8, r3]
   1dae4:	e5942020 	ldr	r2, [r4, #32]
   1dae8:	eafff40a 	b	1ab18 <RunZ80+0x4f4>
   1daec:	e2802002 	add	r2, r0, #2
   1daf0:	e3510000 	cmp	r1, #0
   1daf4:	e6ff2072 	uxth	r2, r2
   1daf8:	e1c420bc 	strh	r2, [r4, #12]
   1dafc:	10033009 	andne	r3, r3, r9
   1db00:	17da3003 	ldrbne	r3, [sl, r3]
   1db04:	07d83003 	ldrbeq	r3, [r8, r3]
   1db08:	e2800003 	add	r0, r0, #3
   1db0c:	e6ff0070 	uxth	r0, r0
   1db10:	10022009 	andne	r2, r2, r9
   1db14:	15c4300e 	strbne	r3, [r4, #14]
   1db18:	11c400bc 	strhne	r0, [r4, #12]
   1db1c:	01c400bc 	strheq	r0, [r4, #12]
   1db20:	05c4300e 	strbeq	r3, [r4, #14]
   1db24:	17da3002 	ldrbne	r3, [sl, r2]
   1db28:	07d83002 	ldrbeq	r3, [r8, r2]
   1db2c:	e5942020 	ldr	r2, [r4, #32]
   1db30:	e5c4300f 	strb	r3, [r4, #15]
   1db34:	eafff3f7 	b	1ab18 <RunZ80+0x4f4>
   1db38:	e5d4c000 	ldrb	ip, [r4]
   1db3c:	e31c0001 	tst	ip, #1
   1db40:	0a0002a2 	beq	1e5d0 <RunZ80+0x3fac>
   1db44:	e2800002 	add	r0, r0, #2
   1db48:	e1c400bc 	strh	r0, [r4, #12]
   1db4c:	e5942020 	ldr	r2, [r4, #32]
   1db50:	eafff3f0 	b	1ab18 <RunZ80+0x4f4>
   1db54:	e5d42001 	ldrb	r2, [r4, #1]
   1db58:	e5d43000 	ldrb	r3, [r4]
   1db5c:	e1e02002 	mvn	r2, r2
   1db60:	e3833012 	orr	r3, r3, #18
   1db64:	e5c42001 	strb	r2, [r4, #1]
   1db68:	e5c43000 	strb	r3, [r4]
   1db6c:	e5942020 	ldr	r2, [r4, #32]
   1db70:	eafff3e8 	b	1ab18 <RunZ80+0x4f4>
   1db74:	e3510000 	cmp	r1, #0
   1db78:	e2800002 	add	r0, r0, #2
   1db7c:	e1c400bc 	strh	r0, [r4, #12]
   1db80:	10033009 	andne	r3, r3, r9
   1db84:	17da3003 	ldrbne	r3, [sl, r3]
   1db88:	07d83003 	ldrbeq	r3, [r8, r3]
   1db8c:	e5942020 	ldr	r2, [r4, #32]
   1db90:	e5c43006 	strb	r3, [r4, #6]
   1db94:	eafff3df 	b	1ab18 <RunZ80+0x4f4>
   1db98:	e5d43006 	ldrb	r3, [r4, #6]
   1db9c:	e5d42000 	ldrb	r2, [r4]
   1dba0:	e2433001 	sub	r3, r3, #1
   1dba4:	e6ef3073 	uxtb	r3, r3
   1dba8:	e0861003 	add	r1, r6, r3
   1dbac:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1dbb0:	e2022001 	and	r2, r2, #1
   1dbb4:	e353007f 	cmp	r3, #127	; 0x7f
   1dbb8:	e5c43006 	strb	r3, [r4, #6]
   1dbbc:	e1822001 	orr	r2, r2, r1
   1dbc0:	0a0003a0 	beq	1ea48 <RunZ80+0x4424>
   1dbc4:	e203300f 	and	r3, r3, #15
   1dbc8:	e353000f 	cmp	r3, #15
   1dbcc:	13a03000 	movne	r3, #0
   1dbd0:	03a03010 	moveq	r3, #16
   1dbd4:	e1833002 	orr	r3, r3, r2
   1dbd8:	e3833002 	orr	r3, r3, #2
   1dbdc:	e5c43000 	strb	r3, [r4]
   1dbe0:	e5942020 	ldr	r2, [r4, #32]
   1dbe4:	eafff3cb 	b	1ab18 <RunZ80+0x4f4>
   1dbe8:	e5d42006 	ldrb	r2, [r4, #6]
   1dbec:	e5d43000 	ldrb	r3, [r4]
   1dbf0:	e2822001 	add	r2, r2, #1
   1dbf4:	e6ef2072 	uxtb	r2, r2
   1dbf8:	e0861002 	add	r1, r6, r2
   1dbfc:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1dc00:	e2033001 	and	r3, r3, #1
   1dc04:	e1833001 	orr	r3, r3, r1
   1dc08:	e3520080 	cmp	r2, #128	; 0x80
   1dc0c:	e5c42006 	strb	r2, [r4, #6]
   1dc10:	e6af3073 	sxtb	r3, r3
   1dc14:	0a00036a 	beq	1e9c4 <RunZ80+0x43a0>
   1dc18:	e312000f 	tst	r2, #15
   1dc1c:	03a02010 	moveq	r2, #16
   1dc20:	13a02000 	movne	r2, #0
   1dc24:	e1823003 	orr	r3, r2, r3
   1dc28:	e5c43000 	strb	r3, [r4]
   1dc2c:	e5942020 	ldr	r2, [r4, #32]
   1dc30:	eafff3b8 	b	1ab18 <RunZ80+0x4f4>
   1dc34:	e1d430b6 	ldrh	r3, [r4, #6]
   1dc38:	e5942020 	ldr	r2, [r4, #32]
   1dc3c:	e2433001 	sub	r3, r3, #1
   1dc40:	e1c430b6 	strh	r3, [r4, #6]
   1dc44:	eafff3b3 	b	1ab18 <RunZ80+0x4f4>
   1dc48:	e2802002 	add	r2, r0, #2
   1dc4c:	e3510000 	cmp	r1, #0
   1dc50:	e6ff1072 	uxth	r1, r2
   1dc54:	e2802003 	add	r2, r0, #3
   1dc58:	e1c410bc 	strh	r1, [r4, #12]
   1dc5c:	e6ff2072 	uxth	r2, r2
   1dc60:	1a00024c 	bne	1e598 <RunZ80+0x3f74>
   1dc64:	e7d83003 	ldrb	r3, [r8, r3]
   1dc68:	e1c420bc 	strh	r2, [r4, #12]
   1dc6c:	e7d82001 	ldrb	r2, [r8, r1]
   1dc70:	e1832402 	orr	r2, r3, r2, lsl #8
   1dc74:	e2823001 	add	r3, r2, #1
   1dc78:	e7d82002 	ldrb	r2, [r8, r2]
   1dc7c:	e6ff3073 	uxth	r3, r3
   1dc80:	e5c42006 	strb	r2, [r4, #6]
   1dc84:	e1a05003 	mov	r5, r3
   1dc88:	e7d83003 	ldrb	r3, [r8, r3]
   1dc8c:	e5c43007 	strb	r3, [r4, #7]
   1dc90:	e5942020 	ldr	r2, [r4, #32]
   1dc94:	eafff39f 	b	1ab18 <RunZ80+0x4f4>
   1dc98:	e1d420b6 	ldrh	r2, [r4, #6]
   1dc9c:	e5d43000 	ldrb	r3, [r4]
   1dca0:	e1a02082 	lsl	r2, r2, #1
   1dca4:	e6ff5072 	uxth	r5, r2
   1dca8:	e3c33013 	bic	r3, r3, #19
   1dcac:	e1a01445 	asr	r1, r5, #8
   1dcb0:	e1833822 	orr	r3, r3, r2, lsr #16
   1dcb4:	e2012010 	and	r2, r1, #16
   1dcb8:	e1833002 	orr	r3, r3, r2
   1dcbc:	e1c450b6 	strh	r5, [r4, #6]
   1dcc0:	e5c43000 	strb	r3, [r4]
   1dcc4:	e5942020 	ldr	r2, [r4, #32]
   1dcc8:	eafff392 	b	1ab18 <RunZ80+0x4f4>
   1dccc:	e5d4c000 	ldrb	ip, [r4]
   1dcd0:	e31c0040 	tst	ip, #64	; 0x40
   1dcd4:	0a00022b 	beq	1e588 <RunZ80+0x3f64>
   1dcd8:	e3510000 	cmp	r1, #0
   1dcdc:	e2422005 	sub	r2, r2, #5
   1dce0:	10031009 	andne	r1, r3, r9
   1dce4:	e5842020 	str	r2, [r4, #32]
   1dce8:	07d81003 	ldrbeq	r1, [r8, r3]
   1dcec:	17da1001 	ldrbne	r1, [sl, r1]
   1dcf0:	e6af1071 	sxtb	r1, r1
   1dcf4:	e2811001 	add	r1, r1, #1
   1dcf8:	e0833001 	add	r3, r3, r1
   1dcfc:	e1c430bc 	strh	r3, [r4, #12]
   1dd00:	eafff384 	b	1ab18 <RunZ80+0x4f4>
   1dd04:	e5d42000 	ldrb	r2, [r4]
   1dd08:	e5d43001 	ldrb	r3, [r4, #1]
   1dd0c:	e3120001 	tst	r2, #1
   1dd10:	e1a05003 	mov	r5, r3
   1dd14:	13833c01 	orrne	r3, r3, #256	; 0x100
   1dd18:	11a05003 	movne	r5, r3
   1dd1c:	e3120010 	tst	r2, #16
   1dd20:	13833c02 	orrne	r3, r3, #512	; 0x200
   1dd24:	11a05003 	movne	r5, r3
   1dd28:	e3120002 	tst	r2, #2
   1dd2c:	13833b01 	orrne	r3, r3, #1024	; 0x400
   1dd30:	11a05003 	movne	r5, r3
   1dd34:	e1a03083 	lsl	r3, r3, #1
   1dd38:	e19b30b3 	ldrh	r3, [fp, r3]
   1dd3c:	e5942020 	ldr	r2, [r4, #32]
   1dd40:	e1c430b0 	strh	r3, [r4]
   1dd44:	eafff373 	b	1ab18 <RunZ80+0x4f4>
   1dd48:	e3510000 	cmp	r1, #0
   1dd4c:	e2800002 	add	r0, r0, #2
   1dd50:	e1c400bc 	strh	r0, [r4, #12]
   1dd54:	10033009 	andne	r3, r3, r9
   1dd58:	17da3003 	ldrbne	r3, [sl, r3]
   1dd5c:	07d83003 	ldrbeq	r3, [r8, r3]
   1dd60:	e5942020 	ldr	r2, [r4, #32]
   1dd64:	e5c43007 	strb	r3, [r4, #7]
   1dd68:	eafff36a 	b	1ab18 <RunZ80+0x4f4>
   1dd6c:	e5d43007 	ldrb	r3, [r4, #7]
   1dd70:	e5d42000 	ldrb	r2, [r4]
   1dd74:	e2433001 	sub	r3, r3, #1
   1dd78:	e6ef3073 	uxtb	r3, r3
   1dd7c:	e0861003 	add	r1, r6, r3
   1dd80:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1dd84:	e2022001 	and	r2, r2, #1
   1dd88:	e353007f 	cmp	r3, #127	; 0x7f
   1dd8c:	e5c43007 	strb	r3, [r4, #7]
   1dd90:	e1822001 	orr	r2, r2, r1
   1dd94:	0a000328 	beq	1ea3c <RunZ80+0x4418>
   1dd98:	e203300f 	and	r3, r3, #15
   1dd9c:	e353000f 	cmp	r3, #15
   1dda0:	13a03000 	movne	r3, #0
   1dda4:	03a03010 	moveq	r3, #16
   1dda8:	e1833002 	orr	r3, r3, r2
   1ddac:	e3833002 	orr	r3, r3, #2
   1ddb0:	e5c43000 	strb	r3, [r4]
   1ddb4:	e5942020 	ldr	r2, [r4, #32]
   1ddb8:	eafff356 	b	1ab18 <RunZ80+0x4f4>
   1ddbc:	e5d42007 	ldrb	r2, [r4, #7]
   1ddc0:	e5d43000 	ldrb	r3, [r4]
   1ddc4:	e2822001 	add	r2, r2, #1
   1ddc8:	e6ef2072 	uxtb	r2, r2
   1ddcc:	e0861002 	add	r1, r6, r2
   1ddd0:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1ddd4:	e2033001 	and	r3, r3, #1
   1ddd8:	e1833001 	orr	r3, r3, r1
   1dddc:	e3520080 	cmp	r2, #128	; 0x80
   1dde0:	e5c42007 	strb	r2, [r4, #7]
   1dde4:	e6af3073 	sxtb	r3, r3
   1dde8:	0a000310 	beq	1ea30 <RunZ80+0x440c>
   1ddec:	e312000f 	tst	r2, #15
   1ddf0:	03a02010 	moveq	r2, #16
   1ddf4:	13a02000 	movne	r2, #0
   1ddf8:	e1823003 	orr	r3, r2, r3
   1ddfc:	e5c43000 	strb	r3, [r4]
   1de00:	e5942020 	ldr	r2, [r4, #32]
   1de04:	eafff343 	b	1ab18 <RunZ80+0x4f4>
   1de08:	e1d430b6 	ldrh	r3, [r4, #6]
   1de0c:	e5942020 	ldr	r2, [r4, #32]
   1de10:	e2833001 	add	r3, r3, #1
   1de14:	e1c430b6 	strh	r3, [r4, #6]
   1de18:	eafff33e 	b	1ab18 <RunZ80+0x4f4>
   1de1c:	e2802002 	add	r2, r0, #2
   1de20:	e6ff2072 	uxth	r2, r2
   1de24:	e2800003 	add	r0, r0, #3
   1de28:	e3510000 	cmp	r1, #0
   1de2c:	e1c420bc 	strh	r2, [r4, #12]
   1de30:	e6ff0070 	uxth	r0, r0
   1de34:	1a0001cb 	bne	1e568 <RunZ80+0x3f44>
   1de38:	e7d83003 	ldrb	r3, [r8, r3]
   1de3c:	e1c400bc 	strh	r0, [r4, #12]
   1de40:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1de44:	e7d81002 	ldrb	r1, [r8, r2]
   1de48:	e1835005 	orr	r5, r3, r5
   1de4c:	e5d42006 	ldrb	r2, [r4, #6]
   1de50:	e6ef3075 	uxtb	r3, r5
   1de54:	e1833401 	orr	r3, r3, r1, lsl #8
   1de58:	e7c82003 	strb	r2, [r8, r3]
   1de5c:	e2835001 	add	r5, r3, #1
   1de60:	e5d43007 	ldrb	r3, [r4, #7]
   1de64:	e6ff5075 	uxth	r5, r5
   1de68:	e7c83005 	strb	r3, [r8, r5]
   1de6c:	e5942020 	ldr	r2, [r4, #32]
   1de70:	eafff328 	b	1ab18 <RunZ80+0x4f4>
   1de74:	e2802002 	add	r2, r0, #2
   1de78:	e3510000 	cmp	r1, #0
   1de7c:	e6ff2072 	uxth	r2, r2
   1de80:	e1c420bc 	strh	r2, [r4, #12]
   1de84:	10033009 	andne	r3, r3, r9
   1de88:	17da3003 	ldrbne	r3, [sl, r3]
   1de8c:	07d83003 	ldrbeq	r3, [r8, r3]
   1de90:	e2800003 	add	r0, r0, #3
   1de94:	e6ff0070 	uxth	r0, r0
   1de98:	10022009 	andne	r2, r2, r9
   1de9c:	15c43006 	strbne	r3, [r4, #6]
   1dea0:	11c400bc 	strhne	r0, [r4, #12]
   1dea4:	01c400bc 	strheq	r0, [r4, #12]
   1dea8:	05c43006 	strbeq	r3, [r4, #6]
   1deac:	17da3002 	ldrbne	r3, [sl, r2]
   1deb0:	07d83002 	ldrbeq	r3, [r8, r2]
   1deb4:	e5942020 	ldr	r2, [r4, #32]
   1deb8:	e5c43007 	strb	r3, [r4, #7]
   1debc:	eafff315 	b	1ab18 <RunZ80+0x4f4>
   1dec0:	e5d4c000 	ldrb	ip, [r4]
   1dec4:	e31c0040 	tst	ip, #64	; 0x40
   1dec8:	0a00019b 	beq	1e53c <RunZ80+0x3f18>
   1decc:	e2800002 	add	r0, r0, #2
   1ded0:	e1c400bc 	strh	r0, [r4, #12]
   1ded4:	e5942020 	ldr	r2, [r4, #32]
   1ded8:	eafff30e 	b	1ab18 <RunZ80+0x4f4>
   1dedc:	e5d41001 	ldrb	r1, [r4, #1]
   1dee0:	e5d43000 	ldrb	r3, [r4]
   1dee4:	e2010001 	and	r0, r1, #1
   1dee8:	e3c32013 	bic	r2, r3, #19
   1deec:	e1a03383 	lsl	r3, r3, #7
   1def0:	e1822000 	orr	r2, r2, r0
   1def4:	e18330a1 	orr	r3, r3, r1, lsr #1
   1def8:	e5c42000 	strb	r2, [r4]
   1defc:	e5c43001 	strb	r3, [r4, #1]
   1df00:	e5942020 	ldr	r2, [r4, #32]
   1df04:	eafff303 	b	1ab18 <RunZ80+0x4f4>
   1df08:	e3510000 	cmp	r1, #0
   1df0c:	e2800002 	add	r0, r0, #2
   1df10:	e1c400bc 	strh	r0, [r4, #12]
   1df14:	10033009 	andne	r3, r3, r9
   1df18:	17da3003 	ldrbne	r3, [sl, r3]
   1df1c:	07d83003 	ldrbeq	r3, [r8, r3]
   1df20:	e5942020 	ldr	r2, [r4, #32]
   1df24:	e5c43004 	strb	r3, [r4, #4]
   1df28:	eafff2fa 	b	1ab18 <RunZ80+0x4f4>
   1df2c:	e5d43004 	ldrb	r3, [r4, #4]
   1df30:	e5d42000 	ldrb	r2, [r4]
   1df34:	e2433001 	sub	r3, r3, #1
   1df38:	e6ef3073 	uxtb	r3, r3
   1df3c:	e0861003 	add	r1, r6, r3
   1df40:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1df44:	e2022001 	and	r2, r2, #1
   1df48:	e353007f 	cmp	r3, #127	; 0x7f
   1df4c:	e5c43004 	strb	r3, [r4, #4]
   1df50:	e1822001 	orr	r2, r2, r1
   1df54:	0a0002a0 	beq	1e9dc <RunZ80+0x43b8>
   1df58:	e203300f 	and	r3, r3, #15
   1df5c:	e353000f 	cmp	r3, #15
   1df60:	13a03000 	movne	r3, #0
   1df64:	03a03010 	moveq	r3, #16
   1df68:	e1833002 	orr	r3, r3, r2
   1df6c:	e3833002 	orr	r3, r3, #2
   1df70:	e5c43000 	strb	r3, [r4]
   1df74:	e5942020 	ldr	r2, [r4, #32]
   1df78:	eafff2e6 	b	1ab18 <RunZ80+0x4f4>
   1df7c:	e5d42004 	ldrb	r2, [r4, #4]
   1df80:	e5d43000 	ldrb	r3, [r4]
   1df84:	e2822001 	add	r2, r2, #1
   1df88:	e6ef2072 	uxtb	r2, r2
   1df8c:	e0861002 	add	r1, r6, r2
   1df90:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1df94:	e2033001 	and	r3, r3, #1
   1df98:	e1833001 	orr	r3, r3, r1
   1df9c:	e3520080 	cmp	r2, #128	; 0x80
   1dfa0:	e5c42004 	strb	r2, [r4, #4]
   1dfa4:	e6af3073 	sxtb	r3, r3
   1dfa8:	0a000288 	beq	1e9d0 <RunZ80+0x43ac>
   1dfac:	e312000f 	tst	r2, #15
   1dfb0:	03a02010 	moveq	r2, #16
   1dfb4:	13a02000 	movne	r2, #0
   1dfb8:	e1823003 	orr	r3, r2, r3
   1dfbc:	e5c43000 	strb	r3, [r4]
   1dfc0:	e5942020 	ldr	r2, [r4, #32]
   1dfc4:	eafff2d3 	b	1ab18 <RunZ80+0x4f4>
   1dfc8:	e1d430b4 	ldrh	r3, [r4, #4]
   1dfcc:	e5942020 	ldr	r2, [r4, #32]
   1dfd0:	e2433001 	sub	r3, r3, #1
   1dfd4:	e1c430b4 	strh	r3, [r4, #4]
   1dfd8:	eafff2ce 	b	1ab18 <RunZ80+0x4f4>
   1dfdc:	e1d430b4 	ldrh	r3, [r4, #4]
   1dfe0:	e3510000 	cmp	r1, #0
   1dfe4:	10033009 	andne	r3, r3, r9
   1dfe8:	17da3003 	ldrbne	r3, [sl, r3]
   1dfec:	07d83003 	ldrbeq	r3, [r8, r3]
   1dff0:	e5942020 	ldr	r2, [r4, #32]
   1dff4:	e5c43001 	strb	r3, [r4, #1]
   1dff8:	eafff2c6 	b	1ab18 <RunZ80+0x4f4>
   1dffc:	e1d430b6 	ldrh	r3, [r4, #6]
   1e000:	e1d400b4 	ldrh	r0, [r4, #4]
   1e004:	e5d41000 	ldrb	r1, [r4]
   1e008:	e0832000 	add	r2, r3, r0
   1e00c:	e6ff5072 	uxth	r5, r2
   1e010:	e0233000 	eor	r3, r3, r0
   1e014:	e0233005 	eor	r3, r3, r5
   1e018:	e1a03443 	asr	r3, r3, #8
   1e01c:	e3c11013 	bic	r1, r1, #19
   1e020:	e1812822 	orr	r2, r1, r2, lsr #16
   1e024:	e2033010 	and	r3, r3, #16
   1e028:	e1823003 	orr	r3, r2, r3
   1e02c:	e1c450b6 	strh	r5, [r4, #6]
   1e030:	e5c43000 	strb	r3, [r4]
   1e034:	e5942020 	ldr	r2, [r4, #32]
   1e038:	eafff2b6 	b	1ab18 <RunZ80+0x4f4>
   1e03c:	e3510000 	cmp	r1, #0
   1e040:	1a00013a 	bne	1e530 <RunZ80+0x3f0c>
   1e044:	e7d82003 	ldrb	r2, [r8, r3]
   1e048:	e6af2072 	sxtb	r2, r2
   1e04c:	e2822001 	add	r2, r2, #1
   1e050:	e0833002 	add	r3, r3, r2
   1e054:	e1c430bc 	strh	r3, [r4, #12]
   1e058:	e5942020 	ldr	r2, [r4, #32]
   1e05c:	eafff2ad 	b	1ab18 <RunZ80+0x4f4>
   1e060:	e1d430d0 	ldrsb	r3, [r4]
   1e064:	e5d41001 	ldrb	r1, [r4, #1]
   1e068:	e2032001 	and	r2, r3, #1
   1e06c:	e3c33013 	bic	r3, r3, #19
   1e070:	e1822081 	orr	r2, r2, r1, lsl #1
   1e074:	e18333a1 	orr	r3, r3, r1, lsr #7
   1e078:	e5c42001 	strb	r2, [r4, #1]
   1e07c:	e5c43000 	strb	r3, [r4]
   1e080:	e5942020 	ldr	r2, [r4, #32]
   1e084:	eafff2a3 	b	1ab18 <RunZ80+0x4f4>
   1e088:	e3510000 	cmp	r1, #0
   1e08c:	e2800002 	add	r0, r0, #2
   1e090:	e1c400bc 	strh	r0, [r4, #12]
   1e094:	10033009 	andne	r3, r3, r9
   1e098:	17da3003 	ldrbne	r3, [sl, r3]
   1e09c:	07d83003 	ldrbeq	r3, [r8, r3]
   1e0a0:	e5942020 	ldr	r2, [r4, #32]
   1e0a4:	e5c43005 	strb	r3, [r4, #5]
   1e0a8:	eafff29a 	b	1ab18 <RunZ80+0x4f4>
   1e0ac:	e5d43005 	ldrb	r3, [r4, #5]
   1e0b0:	e5d42000 	ldrb	r2, [r4]
   1e0b4:	e2433001 	sub	r3, r3, #1
   1e0b8:	e6ef3073 	uxtb	r3, r3
   1e0bc:	e0861003 	add	r1, r6, r3
   1e0c0:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1e0c4:	e2022001 	and	r2, r2, #1
   1e0c8:	e353007f 	cmp	r3, #127	; 0x7f
   1e0cc:	e5c43005 	strb	r3, [r4, #5]
   1e0d0:	e1822001 	orr	r2, r2, r1
   1e0d4:	0a000246 	beq	1e9f4 <RunZ80+0x43d0>
   1e0d8:	e203300f 	and	r3, r3, #15
   1e0dc:	e353000f 	cmp	r3, #15
   1e0e0:	13a03000 	movne	r3, #0
   1e0e4:	03a03010 	moveq	r3, #16
   1e0e8:	e1833002 	orr	r3, r3, r2
   1e0ec:	e3833002 	orr	r3, r3, #2
   1e0f0:	e5c43000 	strb	r3, [r4]
   1e0f4:	e5942020 	ldr	r2, [r4, #32]
   1e0f8:	eafff286 	b	1ab18 <RunZ80+0x4f4>
   1e0fc:	e5d42005 	ldrb	r2, [r4, #5]
   1e100:	e5d43000 	ldrb	r3, [r4]
   1e104:	e2822001 	add	r2, r2, #1
   1e108:	e6ef2072 	uxtb	r2, r2
   1e10c:	e0861002 	add	r1, r6, r2
   1e110:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1e114:	e2033001 	and	r3, r3, #1
   1e118:	e1833001 	orr	r3, r3, r1
   1e11c:	e3520080 	cmp	r2, #128	; 0x80
   1e120:	e5c42005 	strb	r2, [r4, #5]
   1e124:	e6af3073 	sxtb	r3, r3
   1e128:	0a00022e 	beq	1e9e8 <RunZ80+0x43c4>
   1e12c:	e312000f 	tst	r2, #15
   1e130:	03a02010 	moveq	r2, #16
   1e134:	13a02000 	movne	r2, #0
   1e138:	e1823003 	orr	r3, r2, r3
   1e13c:	e5c43000 	strb	r3, [r4]
   1e140:	e5942020 	ldr	r2, [r4, #32]
   1e144:	eafff273 	b	1ab18 <RunZ80+0x4f4>
   1e148:	e1d430b4 	ldrh	r3, [r4, #4]
   1e14c:	e5942020 	ldr	r2, [r4, #32]
   1e150:	e2833001 	add	r3, r3, #1
   1e154:	e1c430b4 	strh	r3, [r4, #4]
   1e158:	eafff26e 	b	1ab18 <RunZ80+0x4f4>
   1e15c:	e5d42001 	ldrb	r2, [r4, #1]
   1e160:	e1d430b4 	ldrh	r3, [r4, #4]
   1e164:	e7c82003 	strb	r2, [r8, r3]
   1e168:	e5942020 	ldr	r2, [r4, #32]
   1e16c:	eafff269 	b	1ab18 <RunZ80+0x4f4>
   1e170:	e2802002 	add	r2, r0, #2
   1e174:	e3510000 	cmp	r1, #0
   1e178:	e6ff2072 	uxth	r2, r2
   1e17c:	e1c420bc 	strh	r2, [r4, #12]
   1e180:	10033009 	andne	r3, r3, r9
   1e184:	17da3003 	ldrbne	r3, [sl, r3]
   1e188:	07d83003 	ldrbeq	r3, [r8, r3]
   1e18c:	e2801003 	add	r1, r0, #3
   1e190:	e6ff1071 	uxth	r1, r1
   1e194:	10022009 	andne	r2, r2, r9
   1e198:	15c43004 	strbne	r3, [r4, #4]
   1e19c:	11c410bc 	strhne	r1, [r4, #12]
   1e1a0:	01c410bc 	strheq	r1, [r4, #12]
   1e1a4:	05c43004 	strbeq	r3, [r4, #4]
   1e1a8:	17da3002 	ldrbne	r3, [sl, r2]
   1e1ac:	07d83002 	ldrbeq	r3, [r8, r2]
   1e1b0:	e5942020 	ldr	r2, [r4, #32]
   1e1b4:	e5c43005 	strb	r3, [r4, #5]
   1e1b8:	eafff256 	b	1ab18 <RunZ80+0x4f4>
   1e1bc:	e5d4c003 	ldrb	ip, [r4, #3]
   1e1c0:	e24cc001 	sub	ip, ip, #1
   1e1c4:	e6efc07c 	uxtb	ip, ip
   1e1c8:	e35c0000 	cmp	ip, #0
   1e1cc:	e5c4c003 	strb	ip, [r4, #3]
   1e1d0:	0a0000d2 	beq	1e520 <RunZ80+0x3efc>
   1e1d4:	e3510000 	cmp	r1, #0
   1e1d8:	e2422005 	sub	r2, r2, #5
   1e1dc:	10031009 	andne	r1, r3, r9
   1e1e0:	e5842020 	str	r2, [r4, #32]
   1e1e4:	07d81003 	ldrbeq	r1, [r8, r3]
   1e1e8:	17da1001 	ldrbne	r1, [sl, r1]
   1e1ec:	e6af1071 	sxtb	r1, r1
   1e1f0:	e2811001 	add	r1, r1, #1
   1e1f4:	e0833001 	add	r3, r3, r1
   1e1f8:	e1c430bc 	strh	r3, [r4, #12]
   1e1fc:	eafff245 	b	1ab18 <RunZ80+0x4f4>
   1e200:	e5d43001 	ldrb	r3, [r4, #1]
   1e204:	e5d42000 	ldrb	r2, [r4]
   1e208:	e2131001 	ands	r1, r3, #1
   1e20c:	e1a030a3 	lsr	r3, r3, #1
   1e210:	11e03c83 	mvnne	r3, r3, lsl #25
   1e214:	11e03ca3 	mvnne	r3, r3, lsr #25
   1e218:	e5c43001 	strb	r3, [r4, #1]
   1e21c:	e3c23013 	bic	r3, r2, #19
   1e220:	e1833001 	orr	r3, r3, r1
   1e224:	e5c43000 	strb	r3, [r4]
   1e228:	e5942020 	ldr	r2, [r4, #32]
   1e22c:	eafff239 	b	1ab18 <RunZ80+0x4f4>
   1e230:	e3510000 	cmp	r1, #0
   1e234:	e2800002 	add	r0, r0, #2
   1e238:	e1c400bc 	strh	r0, [r4, #12]
   1e23c:	10033009 	andne	r3, r3, r9
   1e240:	17da3003 	ldrbne	r3, [sl, r3]
   1e244:	07d83003 	ldrbeq	r3, [r8, r3]
   1e248:	e5942020 	ldr	r2, [r4, #32]
   1e24c:	e5c43002 	strb	r3, [r4, #2]
   1e250:	eafff230 	b	1ab18 <RunZ80+0x4f4>
   1e254:	e5d43002 	ldrb	r3, [r4, #2]
   1e258:	e5d42000 	ldrb	r2, [r4]
   1e25c:	e2433001 	sub	r3, r3, #1
   1e260:	e6ef3073 	uxtb	r3, r3
   1e264:	e0861003 	add	r1, r6, r3
   1e268:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1e26c:	e2022001 	and	r2, r2, #1
   1e270:	e353007f 	cmp	r3, #127	; 0x7f
   1e274:	e5c43002 	strb	r3, [r4, #2]
   1e278:	e1822001 	orr	r2, r2, r1
   1e27c:	0a0001e8 	beq	1ea24 <RunZ80+0x4400>
   1e280:	e203300f 	and	r3, r3, #15
   1e284:	e353000f 	cmp	r3, #15
   1e288:	13a03000 	movne	r3, #0
   1e28c:	03a03010 	moveq	r3, #16
   1e290:	e1833002 	orr	r3, r3, r2
   1e294:	e3833002 	orr	r3, r3, #2
   1e298:	e5c43000 	strb	r3, [r4]
   1e29c:	e5942020 	ldr	r2, [r4, #32]
   1e2a0:	eafff21c 	b	1ab18 <RunZ80+0x4f4>
   1e2a4:	e5d42002 	ldrb	r2, [r4, #2]
   1e2a8:	e5d43000 	ldrb	r3, [r4]
   1e2ac:	e2822001 	add	r2, r2, #1
   1e2b0:	e6ef2072 	uxtb	r2, r2
   1e2b4:	e0861002 	add	r1, r6, r2
   1e2b8:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1e2bc:	e2033001 	and	r3, r3, #1
   1e2c0:	e1833001 	orr	r3, r3, r1
   1e2c4:	e3520080 	cmp	r2, #128	; 0x80
   1e2c8:	e5c42002 	strb	r2, [r4, #2]
   1e2cc:	e6af3073 	sxtb	r3, r3
   1e2d0:	0a0001d0 	beq	1ea18 <RunZ80+0x43f4>
   1e2d4:	e312000f 	tst	r2, #15
   1e2d8:	03a02010 	moveq	r2, #16
   1e2dc:	13a02000 	movne	r2, #0
   1e2e0:	e1823003 	orr	r3, r2, r3
   1e2e4:	e5c43000 	strb	r3, [r4]
   1e2e8:	e5942020 	ldr	r2, [r4, #32]
   1e2ec:	eafff209 	b	1ab18 <RunZ80+0x4f4>
   1e2f0:	e1d430b2 	ldrh	r3, [r4, #2]
   1e2f4:	e5942020 	ldr	r2, [r4, #32]
   1e2f8:	e2433001 	sub	r3, r3, #1
   1e2fc:	e1c430b2 	strh	r3, [r4, #2]
   1e300:	eafff204 	b	1ab18 <RunZ80+0x4f4>
   1e304:	e1d430b2 	ldrh	r3, [r4, #2]
   1e308:	e3510000 	cmp	r1, #0
   1e30c:	10033009 	andne	r3, r3, r9
   1e310:	17da3003 	ldrbne	r3, [sl, r3]
   1e314:	07d83003 	ldrbeq	r3, [r8, r3]
   1e318:	e5942020 	ldr	r2, [r4, #32]
   1e31c:	e5c43001 	strb	r3, [r4, #1]
   1e320:	eafff1fc 	b	1ab18 <RunZ80+0x4f4>
   1e324:	e1d430b6 	ldrh	r3, [r4, #6]
   1e328:	e1d400b2 	ldrh	r0, [r4, #2]
   1e32c:	e5d41000 	ldrb	r1, [r4]
   1e330:	e0832000 	add	r2, r3, r0
   1e334:	e6ff5072 	uxth	r5, r2
   1e338:	e0233000 	eor	r3, r3, r0
   1e33c:	e0233005 	eor	r3, r3, r5
   1e340:	e1a03443 	asr	r3, r3, #8
   1e344:	e3c11013 	bic	r1, r1, #19
   1e348:	e1812822 	orr	r2, r1, r2, lsr #16
   1e34c:	e2033010 	and	r3, r3, #16
   1e350:	e1823003 	orr	r3, r2, r3
   1e354:	e1c450b6 	strh	r5, [r4, #6]
   1e358:	e5c43000 	strb	r3, [r4]
   1e35c:	e5942020 	ldr	r2, [r4, #32]
   1e360:	eafff1ec 	b	1ab18 <RunZ80+0x4f4>
   1e364:	e1d430b0 	ldrh	r3, [r4]
   1e368:	e1d421b0 	ldrh	r2, [r4, #16]
   1e36c:	e1a05003 	mov	r5, r3
   1e370:	e1c420b0 	strh	r2, [r4]
   1e374:	e1c431b0 	strh	r3, [r4, #16]
   1e378:	e5942020 	ldr	r2, [r4, #32]
   1e37c:	eafff1e5 	b	1ab18 <RunZ80+0x4f4>
   1e380:	e5d42001 	ldrb	r2, [r4, #1]
   1e384:	e5d41000 	ldrb	r1, [r4]
   1e388:	e1a033a2 	lsr	r3, r2, #7
   1e38c:	e3c11013 	bic	r1, r1, #19
   1e390:	e1832082 	orr	r2, r3, r2, lsl #1
   1e394:	e1833001 	orr	r3, r3, r1
   1e398:	e5c42001 	strb	r2, [r4, #1]
   1e39c:	e5c43000 	strb	r3, [r4]
   1e3a0:	e5942020 	ldr	r2, [r4, #32]
   1e3a4:	eafff1db 	b	1ab18 <RunZ80+0x4f4>
   1e3a8:	e3510000 	cmp	r1, #0
   1e3ac:	e2800002 	add	r0, r0, #2
   1e3b0:	e1c400bc 	strh	r0, [r4, #12]
   1e3b4:	10033009 	andne	r3, r3, r9
   1e3b8:	17da3003 	ldrbne	r3, [sl, r3]
   1e3bc:	07d83003 	ldrbeq	r3, [r8, r3]
   1e3c0:	e5942020 	ldr	r2, [r4, #32]
   1e3c4:	e5c43003 	strb	r3, [r4, #3]
   1e3c8:	eafff1d2 	b	1ab18 <RunZ80+0x4f4>
   1e3cc:	e5d43003 	ldrb	r3, [r4, #3]
   1e3d0:	e5d42000 	ldrb	r2, [r4]
   1e3d4:	e2433001 	sub	r3, r3, #1
   1e3d8:	e6ef3073 	uxtb	r3, r3
   1e3dc:	e0861003 	add	r1, r6, r3
   1e3e0:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1e3e4:	e2022001 	and	r2, r2, #1
   1e3e8:	e353007f 	cmp	r3, #127	; 0x7f
   1e3ec:	e5c43003 	strb	r3, [r4, #3]
   1e3f0:	e1822001 	orr	r2, r2, r1
   1e3f4:	0a000184 	beq	1ea0c <RunZ80+0x43e8>
   1e3f8:	e203300f 	and	r3, r3, #15
   1e3fc:	e353000f 	cmp	r3, #15
   1e400:	13a03000 	movne	r3, #0
   1e404:	03a03010 	moveq	r3, #16
   1e408:	e1833002 	orr	r3, r3, r2
   1e40c:	e3833002 	orr	r3, r3, #2
   1e410:	e5c43000 	strb	r3, [r4]
   1e414:	e5942020 	ldr	r2, [r4, #32]
   1e418:	eafff1be 	b	1ab18 <RunZ80+0x4f4>
   1e41c:	e5d42003 	ldrb	r2, [r4, #3]
   1e420:	e5d43000 	ldrb	r3, [r4]
   1e424:	e2822001 	add	r2, r2, #1
   1e428:	e6ef2072 	uxtb	r2, r2
   1e42c:	e0861002 	add	r1, r6, r2
   1e430:	e5d11300 	ldrb	r1, [r1, #768]	; 0x300
   1e434:	e2033001 	and	r3, r3, #1
   1e438:	e1833001 	orr	r3, r3, r1
   1e43c:	e3520080 	cmp	r2, #128	; 0x80
   1e440:	e5c42003 	strb	r2, [r4, #3]
   1e444:	e6af3073 	sxtb	r3, r3
   1e448:	0a00016c 	beq	1ea00 <RunZ80+0x43dc>
   1e44c:	e312000f 	tst	r2, #15
   1e450:	03a02010 	moveq	r2, #16
   1e454:	13a02000 	movne	r2, #0
   1e458:	e1823003 	orr	r3, r2, r3
   1e45c:	e5c43000 	strb	r3, [r4]
   1e460:	e5942020 	ldr	r2, [r4, #32]
   1e464:	eafff1ab 	b	1ab18 <RunZ80+0x4f4>
   1e468:	e1d430b2 	ldrh	r3, [r4, #2]
   1e46c:	e5942020 	ldr	r2, [r4, #32]
   1e470:	e2833001 	add	r3, r3, #1
   1e474:	e1c430b2 	strh	r3, [r4, #2]
   1e478:	eafff1a6 	b	1ab18 <RunZ80+0x4f4>
   1e47c:	e5d42001 	ldrb	r2, [r4, #1]
   1e480:	e1d430b2 	ldrh	r3, [r4, #2]
   1e484:	e7c82003 	strb	r2, [r8, r3]
   1e488:	e5942020 	ldr	r2, [r4, #32]
   1e48c:	eafff1a1 	b	1ab18 <RunZ80+0x4f4>
   1e490:	e5d4202b 	ldrb	r2, [r4, #43]	; 0x2b
   1e494:	e3520000 	cmp	r2, #0
   1e498:	0a000009 	beq	1e4c4 <RunZ80+0x3ea0>
   1e49c:	e3510000 	cmp	r1, #0
   1e4a0:	10000009 	andne	r0, r0, r9
   1e4a4:	17da2000 	ldrbne	r2, [sl, r0]
   1e4a8:	07d82000 	ldrbeq	r2, [r8, r0]
   1e4ac:	e5941030 	ldr	r1, [r4, #48]	; 0x30
   1e4b0:	e2433001 	sub	r3, r3, #1
   1e4b4:	e59f0640 	ldr	r0, [pc, #1600]	; 1eafc <RunZ80+0x44d8>
   1e4b8:	ebffa9d0 	bl	8c00 <printf>
   1e4bc:	e5942020 	ldr	r2, [r4, #32]
   1e4c0:	eafff194 	b	1ab18 <RunZ80+0x4f4>
   1e4c4:	e5942020 	ldr	r2, [r4, #32]
   1e4c8:	eafff192 	b	1ab18 <RunZ80+0x4f4>
   1e4cc:	e2801002 	add	r1, r0, #2
   1e4d0:	e6ff1071 	uxth	r1, r1
   1e4d4:	e1c410bc 	strh	r1, [r4, #12]
   1e4d8:	e7d83003 	ldrb	r3, [r8, r3]
   1e4dc:	e2800003 	add	r0, r0, #3
   1e4e0:	e5c43002 	strb	r3, [r4, #2]
   1e4e4:	e1c400bc 	strh	r0, [r4, #12]
   1e4e8:	e7d83001 	ldrb	r3, [r8, r1]
   1e4ec:	e5c43003 	strb	r3, [r4, #3]
   1e4f0:	eafff188 	b	1ab18 <RunZ80+0x4f4>
   1e4f4:	e2801002 	add	r1, r0, #2
   1e4f8:	e6ff1071 	uxth	r1, r1
   1e4fc:	e1c410bc 	strh	r1, [r4, #12]
   1e500:	e0033009 	and	r3, r3, r9
   1e504:	e7da3003 	ldrb	r3, [sl, r3]
   1e508:	e2800003 	add	r0, r0, #3
   1e50c:	e5c43002 	strb	r3, [r4, #2]
   1e510:	e1c400bc 	strh	r0, [r4, #12]
   1e514:	e0013009 	and	r3, r1, r9
   1e518:	e7da3003 	ldrb	r3, [sl, r3]
   1e51c:	eafffff2 	b	1e4ec <RunZ80+0x3ec8>
   1e520:	e2800002 	add	r0, r0, #2
   1e524:	e1c400bc 	strh	r0, [r4, #12]
   1e528:	e5942020 	ldr	r2, [r4, #32]
   1e52c:	eafff179 	b	1ab18 <RunZ80+0x4f4>
   1e530:	e0032009 	and	r2, r3, r9
   1e534:	e7da2002 	ldrb	r2, [sl, r2]
   1e538:	eafffec2 	b	1e048 <RunZ80+0x3a24>
   1e53c:	e3510000 	cmp	r1, #0
   1e540:	e2422005 	sub	r2, r2, #5
   1e544:	10031009 	andne	r1, r3, r9
   1e548:	e5842020 	str	r2, [r4, #32]
   1e54c:	07d81003 	ldrbeq	r1, [r8, r3]
   1e550:	17da1001 	ldrbne	r1, [sl, r1]
   1e554:	e6af1071 	sxtb	r1, r1
   1e558:	e2811001 	add	r1, r1, #1
   1e55c:	e0833001 	add	r3, r3, r1
   1e560:	e1c430bc 	strh	r3, [r4, #12]
   1e564:	eafff16b 	b	1ab18 <RunZ80+0x4f4>
   1e568:	e0033009 	and	r3, r3, r9
   1e56c:	e7da3003 	ldrb	r3, [sl, r3]
   1e570:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1e574:	e1c400bc 	strh	r0, [r4, #12]
   1e578:	e0022009 	and	r2, r2, r9
   1e57c:	e1835005 	orr	r5, r3, r5
   1e580:	e7da1002 	ldrb	r1, [sl, r2]
   1e584:	eafffe30 	b	1de4c <RunZ80+0x3828>
   1e588:	e2800002 	add	r0, r0, #2
   1e58c:	e1c400bc 	strh	r0, [r4, #12]
   1e590:	e5942020 	ldr	r2, [r4, #32]
   1e594:	eafff15f 	b	1ab18 <RunZ80+0x4f4>
   1e598:	e0033009 	and	r3, r3, r9
   1e59c:	e7da3003 	ldrb	r3, [sl, r3]
   1e5a0:	e0011009 	and	r1, r1, r9
   1e5a4:	e1c420bc 	strh	r2, [r4, #12]
   1e5a8:	e7da2001 	ldrb	r2, [sl, r1]
   1e5ac:	e1833402 	orr	r3, r3, r2, lsl #8
   1e5b0:	e0032009 	and	r2, r3, r9
   1e5b4:	e2835001 	add	r5, r3, #1
   1e5b8:	e7da2002 	ldrb	r2, [sl, r2]
   1e5bc:	e6ff5075 	uxth	r5, r5
   1e5c0:	e5c42006 	strb	r2, [r4, #6]
   1e5c4:	e0053009 	and	r3, r5, r9
   1e5c8:	e7da3003 	ldrb	r3, [sl, r3]
   1e5cc:	eafffdae 	b	1dc8c <RunZ80+0x3668>
   1e5d0:	e3510000 	cmp	r1, #0
   1e5d4:	e2422005 	sub	r2, r2, #5
   1e5d8:	10031009 	andne	r1, r3, r9
   1e5dc:	e5842020 	str	r2, [r4, #32]
   1e5e0:	07d81003 	ldrbeq	r1, [r8, r3]
   1e5e4:	17da1001 	ldrbne	r1, [sl, r1]
   1e5e8:	e6af1071 	sxtb	r1, r1
   1e5ec:	e2811001 	add	r1, r1, #1
   1e5f0:	e0833001 	add	r3, r3, r1
   1e5f4:	e1c430bc 	strh	r3, [r4, #12]
   1e5f8:	eafff146 	b	1ab18 <RunZ80+0x4f4>
   1e5fc:	e0033009 	and	r3, r3, r9
   1e600:	e7da3003 	ldrb	r3, [sl, r3]
   1e604:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1e608:	e1c400bc 	strh	r0, [r4, #12]
   1e60c:	e0022009 	and	r2, r2, r9
   1e610:	e1835005 	orr	r5, r3, r5
   1e614:	e7da3002 	ldrb	r3, [sl, r2]
   1e618:	eafffd2c 	b	1dad0 <RunZ80+0x34ac>
   1e61c:	e2800002 	add	r0, r0, #2
   1e620:	e1c400bc 	strh	r0, [r4, #12]
   1e624:	e5942020 	ldr	r2, [r4, #32]
   1e628:	eafff13a 	b	1ab18 <RunZ80+0x4f4>
   1e62c:	e0033009 	and	r3, r3, r9
   1e630:	e7da1003 	ldrb	r1, [sl, r3]
   1e634:	e1a05825 	lsr	r5, r5, #16
   1e638:	e1c400bc 	strh	r0, [r4, #12]
   1e63c:	e0022009 	and	r2, r2, r9
   1e640:	e7da3002 	ldrb	r3, [sl, r2]
   1e644:	e1a05805 	lsl	r5, r5, #16
   1e648:	e1855001 	orr	r5, r5, r1
   1e64c:	e1855403 	orr	r5, r5, r3, lsl #8
   1e650:	e0053009 	and	r3, r5, r9
   1e654:	e7da3003 	ldrb	r3, [sl, r3]
   1e658:	eafffcab 	b	1d90c <RunZ80+0x32e8>
   1e65c:	e5942020 	ldr	r2, [r4, #32]
   1e660:	eafff12c 	b	1ab18 <RunZ80+0x4f4>
   1e664:	e5942020 	ldr	r2, [r4, #32]
   1e668:	eafff12a 	b	1ab18 <RunZ80+0x4f4>
   1e66c:	e2802002 	add	r2, r0, #2
   1e670:	e3510000 	cmp	r1, #0
   1e674:	e6ff2072 	uxth	r2, r2
   1e678:	e1c420bc 	strh	r2, [r4, #12]
   1e67c:	10033009 	andne	r3, r3, r9
   1e680:	17da3003 	ldrbne	r3, [sl, r3]
   1e684:	07d81003 	ldrbeq	r1, [r8, r3]
   1e688:	13c550ff 	bicne	r5, r5, #255	; 0xff
   1e68c:	10022009 	andne	r2, r2, r9
   1e690:	03c550ff 	biceq	r5, r5, #255	; 0xff
   1e694:	07d83002 	ldrbeq	r3, [r8, r2]
   1e698:	11835005 	orrne	r5, r3, r5
   1e69c:	01815005 	orreq	r5, r1, r5
   1e6a0:	17da3002 	ldrbne	r3, [sl, r2]
   1e6a4:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1e6a8:	e1855403 	orr	r5, r5, r3, lsl #8
   1e6ac:	e1c450bc 	strh	r5, [r4, #12]
   1e6b0:	e5942020 	ldr	r2, [r4, #32]
   1e6b4:	eafff117 	b	1ab18 <RunZ80+0x4f4>
   1e6b8:	e1c4c0bc 	strh	ip, [r4, #12]
   1e6bc:	e5942020 	ldr	r2, [r4, #32]
   1e6c0:	eafff114 	b	1ab18 <RunZ80+0x4f4>
   1e6c4:	e1c4c0bc 	strh	ip, [r4, #12]
   1e6c8:	e5942020 	ldr	r2, [r4, #32]
   1e6cc:	eafff111 	b	1ab18 <RunZ80+0x4f4>
   1e6d0:	e2800003 	add	r0, r0, #3
   1e6d4:	e1c400bc 	strh	r0, [r4, #12]
   1e6d8:	e5942020 	ldr	r2, [r4, #32]
   1e6dc:	eafff10d 	b	1ab18 <RunZ80+0x4f4>
   1e6e0:	e5942020 	ldr	r2, [r4, #32]
   1e6e4:	eafff10b 	b	1ab18 <RunZ80+0x4f4>
   1e6e8:	e0033009 	and	r3, r3, r9
   1e6ec:	e7da3003 	ldrb	r3, [sl, r3]
   1e6f0:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1e6f4:	e1c410bc 	strh	r1, [r4, #12]
   1e6f8:	e0022009 	and	r2, r2, r9
   1e6fc:	e1835005 	orr	r5, r3, r5
   1e700:	e7da2002 	ldrb	r2, [sl, r2]
   1e704:	eafff579 	b	1bcf0 <RunZ80+0x16cc>
   1e708:	e5942020 	ldr	r2, [r4, #32]
   1e70c:	eafff101 	b	1ab18 <RunZ80+0x4f4>
   1e710:	e2802002 	add	r2, r0, #2
   1e714:	e3510000 	cmp	r1, #0
   1e718:	e6ff2072 	uxth	r2, r2
   1e71c:	e1c420bc 	strh	r2, [r4, #12]
   1e720:	10033009 	andne	r3, r3, r9
   1e724:	17da3003 	ldrbne	r3, [sl, r3]
   1e728:	07d81003 	ldrbeq	r1, [r8, r3]
   1e72c:	13c550ff 	bicne	r5, r5, #255	; 0xff
   1e730:	10022009 	andne	r2, r2, r9
   1e734:	03c550ff 	biceq	r5, r5, #255	; 0xff
   1e738:	07d83002 	ldrbeq	r3, [r8, r2]
   1e73c:	11835005 	orrne	r5, r3, r5
   1e740:	01815005 	orreq	r5, r1, r5
   1e744:	17da3002 	ldrbne	r3, [sl, r2]
   1e748:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1e74c:	e1855403 	orr	r5, r5, r3, lsl #8
   1e750:	e1c450bc 	strh	r5, [r4, #12]
   1e754:	e5942020 	ldr	r2, [r4, #32]
   1e758:	eafff0ee 	b	1ab18 <RunZ80+0x4f4>
   1e75c:	e1c4c0bc 	strh	ip, [r4, #12]
   1e760:	e5942020 	ldr	r2, [r4, #32]
   1e764:	eafff0eb 	b	1ab18 <RunZ80+0x4f4>
   1e768:	e5942020 	ldr	r2, [r4, #32]
   1e76c:	eafff0e9 	b	1ab18 <RunZ80+0x4f4>
   1e770:	e2800003 	add	r0, r0, #3
   1e774:	e1c400bc 	strh	r0, [r4, #12]
   1e778:	e5942020 	ldr	r2, [r4, #32]
   1e77c:	eafff0e5 	b	1ab18 <RunZ80+0x4f4>
   1e780:	e1c4c0bc 	strh	ip, [r4, #12]
   1e784:	e5942020 	ldr	r2, [r4, #32]
   1e788:	eafff0e2 	b	1ab18 <RunZ80+0x4f4>
   1e78c:	e5942020 	ldr	r2, [r4, #32]
   1e790:	eafff0e0 	b	1ab18 <RunZ80+0x4f4>
   1e794:	e2802002 	add	r2, r0, #2
   1e798:	e3510000 	cmp	r1, #0
   1e79c:	e6ff2072 	uxth	r2, r2
   1e7a0:	e1c420bc 	strh	r2, [r4, #12]
   1e7a4:	10033009 	andne	r3, r3, r9
   1e7a8:	17da3003 	ldrbne	r3, [sl, r3]
   1e7ac:	07d81003 	ldrbeq	r1, [r8, r3]
   1e7b0:	13c550ff 	bicne	r5, r5, #255	; 0xff
   1e7b4:	10022009 	andne	r2, r2, r9
   1e7b8:	03c550ff 	biceq	r5, r5, #255	; 0xff
   1e7bc:	07d83002 	ldrbeq	r3, [r8, r2]
   1e7c0:	11835005 	orrne	r5, r3, r5
   1e7c4:	01815005 	orreq	r5, r1, r5
   1e7c8:	17da3002 	ldrbne	r3, [sl, r2]
   1e7cc:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1e7d0:	e1855403 	orr	r5, r5, r3, lsl #8
   1e7d4:	e1c450bc 	strh	r5, [r4, #12]
   1e7d8:	e5942020 	ldr	r2, [r4, #32]
   1e7dc:	eafff0cd 	b	1ab18 <RunZ80+0x4f4>
   1e7e0:	e0001009 	and	r1, r0, r9
   1e7e4:	e7da1001 	ldrb	r1, [sl, r1]
   1e7e8:	e1c430be 	strh	r3, [r4, #14]
   1e7ec:	e7c82000 	strb	r2, [r8, r0]
   1e7f0:	e1d400be 	ldrh	r0, [r4, #14]
   1e7f4:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1e7f8:	e0003009 	and	r3, r0, r9
   1e7fc:	e1815005 	orr	r5, r1, r5
   1e800:	e7dac003 	ldrb	ip, [sl, r3]
   1e804:	eafff377 	b	1b5e8 <RunZ80+0xfc4>
   1e808:	e1c4c0bc 	strh	ip, [r4, #12]
   1e80c:	e5942020 	ldr	r2, [r4, #32]
   1e810:	eafff0c0 	b	1ab18 <RunZ80+0x4f4>
   1e814:	e1c4c0bc 	strh	ip, [r4, #12]
   1e818:	e5942020 	ldr	r2, [r4, #32]
   1e81c:	eafff0bd 	b	1ab18 <RunZ80+0x4f4>
   1e820:	e5942020 	ldr	r2, [r4, #32]
   1e824:	eafff0bb 	b	1ab18 <RunZ80+0x4f4>
   1e828:	e2800003 	add	r0, r0, #3
   1e82c:	e1c400bc 	strh	r0, [r4, #12]
   1e830:	e5942020 	ldr	r2, [r4, #32]
   1e834:	eafff0b7 	b	1ab18 <RunZ80+0x4f4>
   1e838:	e0033009 	and	r3, r3, r9
   1e83c:	e7da3003 	ldrb	r3, [sl, r3]
   1e840:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1e844:	e1c4c0bc 	strh	ip, [r4, #12]
   1e848:	e0000009 	and	r0, r0, r9
   1e84c:	e1835005 	orr	r5, r3, r5
   1e850:	e7da2000 	ldrb	r2, [sl, r0]
   1e854:	eafff223 	b	1b0e8 <RunZ80+0xac4>
   1e858:	e1c4c0bc 	strh	ip, [r4, #12]
   1e85c:	e5942020 	ldr	r2, [r4, #32]
   1e860:	eafff0ac 	b	1ab18 <RunZ80+0x4f4>
   1e864:	e1d400be 	ldrh	r0, [r4, #14]
   1e868:	e3510000 	cmp	r1, #0
   1e86c:	e2803001 	add	r3, r0, #1
   1e870:	e6ff3073 	uxth	r3, r3
   1e874:	e2422006 	sub	r2, r2, #6
   1e878:	e1c430be 	strh	r3, [r4, #14]
   1e87c:	e5842020 	str	r2, [r4, #32]
   1e880:	e280c002 	add	ip, r0, #2
   1e884:	10000009 	andne	r0, r0, r9
   1e888:	17da1000 	ldrbne	r1, [sl, r0]
   1e88c:	07d81000 	ldrbeq	r1, [r8, r0]
   1e890:	e6ffc07c 	uxth	ip, ip
   1e894:	10033009 	andne	r3, r3, r9
   1e898:	15c4100c 	strbne	r1, [r4, #12]
   1e89c:	11c4c0be 	strhne	ip, [r4, #14]
   1e8a0:	01c4c0be 	strheq	ip, [r4, #14]
   1e8a4:	05c4100c 	strbeq	r1, [r4, #12]
   1e8a8:	17da3003 	ldrbne	r3, [sl, r3]
   1e8ac:	07d83003 	ldrbeq	r3, [r8, r3]
   1e8b0:	e5c4300d 	strb	r3, [r4, #13]
   1e8b4:	eafff097 	b	1ab18 <RunZ80+0x4f4>
   1e8b8:	e2800003 	add	r0, r0, #3
   1e8bc:	e1c400bc 	strh	r0, [r4, #12]
   1e8c0:	e5942020 	ldr	r2, [r4, #32]
   1e8c4:	eafff093 	b	1ab18 <RunZ80+0x4f4>
   1e8c8:	e3833004 	orr	r3, r3, #4
   1e8cc:	e3a02010 	mov	r2, #16
   1e8d0:	eafffbf3 	b	1d8a4 <RunZ80+0x3280>
   1e8d4:	e2802002 	add	r2, r0, #2
   1e8d8:	e3510000 	cmp	r1, #0
   1e8dc:	e6ff2072 	uxth	r2, r2
   1e8e0:	e1c420bc 	strh	r2, [r4, #12]
   1e8e4:	10033009 	andne	r3, r3, r9
   1e8e8:	17da3003 	ldrbne	r3, [sl, r3]
   1e8ec:	07d81003 	ldrbeq	r1, [r8, r3]
   1e8f0:	13c550ff 	bicne	r5, r5, #255	; 0xff
   1e8f4:	10022009 	andne	r2, r2, r9
   1e8f8:	03c550ff 	biceq	r5, r5, #255	; 0xff
   1e8fc:	07d83002 	ldrbeq	r3, [r8, r2]
   1e900:	11835005 	orrne	r5, r3, r5
   1e904:	01815005 	orreq	r5, r1, r5
   1e908:	17da3002 	ldrbne	r3, [sl, r2]
   1e90c:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1e910:	e1855403 	orr	r5, r5, r3, lsl #8
   1e914:	e1c450bc 	strh	r5, [r4, #12]
   1e918:	e5942020 	ldr	r2, [r4, #32]
   1e91c:	eafff07d 	b	1ab18 <RunZ80+0x4f4>
   1e920:	e3833004 	orr	r3, r3, #4
   1e924:	e3a00010 	mov	r0, #16
   1e928:	eafffc52 	b	1da78 <RunZ80+0x3454>
   1e92c:	e3833004 	orr	r3, r3, #4
   1e930:	e3a00010 	mov	r0, #16
   1e934:	eafffc37 	b	1da18 <RunZ80+0x33f4>
   1e938:	e3822004 	orr	r2, r2, #4
   1e93c:	e3a03010 	mov	r3, #16
   1e940:	eafffbc3 	b	1d854 <RunZ80+0x3230>
   1e944:	e2800002 	add	r0, r0, #2
   1e948:	e6ff0070 	uxth	r0, r0
   1e94c:	e2422007 	sub	r2, r2, #7
   1e950:	e3510000 	cmp	r1, #0
   1e954:	e1c400bc 	strh	r0, [r4, #12]
   1e958:	e5842020 	str	r2, [r4, #32]
   1e95c:	0a000060 	beq	1eae4 <RunZ80+0x44c0>
   1e960:	e0033009 	and	r3, r3, r9
   1e964:	e7da3003 	ldrb	r3, [sl, r3]
   1e968:	e0000009 	and	r0, r0, r9
   1e96c:	e1c4c0bc 	strh	ip, [r4, #12]
   1e970:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1e974:	e7da2000 	ldrb	r2, [sl, r0]
   1e978:	e1835005 	orr	r5, r3, r5
   1e97c:	e1d430be 	ldrh	r3, [r4, #14]
   1e980:	e1a0c42c 	lsr	ip, ip, #8
   1e984:	e2433001 	sub	r3, r3, #1
   1e988:	e6ff3073 	uxth	r3, r3
   1e98c:	e1c430be 	strh	r3, [r4, #14]
   1e990:	e7c8c003 	strb	ip, [r8, r3]
   1e994:	e1d430be 	ldrh	r3, [r4, #14]
   1e998:	e5d4100c 	ldrb	r1, [r4, #12]
   1e99c:	e2433001 	sub	r3, r3, #1
   1e9a0:	e3c55cff 	bic	r5, r5, #65280	; 0xff00
   1e9a4:	e6ff3073 	uxth	r3, r3
   1e9a8:	e1852402 	orr	r2, r5, r2, lsl #8
   1e9ac:	e1c430be 	strh	r3, [r4, #14]
   1e9b0:	e7c81003 	strb	r1, [r8, r3]
   1e9b4:	e1a05002 	mov	r5, r2
   1e9b8:	e1c420bc 	strh	r2, [r4, #12]
   1e9bc:	e5942020 	ldr	r2, [r4, #32]
   1e9c0:	eafff054 	b	1ab18 <RunZ80+0x4f4>
   1e9c4:	e3833004 	orr	r3, r3, #4
   1e9c8:	e3a02010 	mov	r2, #16
   1e9cc:	eafffc94 	b	1dc24 <RunZ80+0x3600>
   1e9d0:	e3833004 	orr	r3, r3, #4
   1e9d4:	e3a02010 	mov	r2, #16
   1e9d8:	eafffd76 	b	1dfb8 <RunZ80+0x3994>
   1e9dc:	e3822004 	orr	r2, r2, #4
   1e9e0:	e3a03010 	mov	r3, #16
   1e9e4:	eafffd5f 	b	1df68 <RunZ80+0x3944>
   1e9e8:	e3833004 	orr	r3, r3, #4
   1e9ec:	e3a02010 	mov	r2, #16
   1e9f0:	eafffdd0 	b	1e138 <RunZ80+0x3b14>
   1e9f4:	e3822004 	orr	r2, r2, #4
   1e9f8:	e3a03010 	mov	r3, #16
   1e9fc:	eafffdb9 	b	1e0e8 <RunZ80+0x3ac4>
   1ea00:	e3833004 	orr	r3, r3, #4
   1ea04:	e3a02010 	mov	r2, #16
   1ea08:	eafffe92 	b	1e458 <RunZ80+0x3e34>
   1ea0c:	e3822004 	orr	r2, r2, #4
   1ea10:	e3a03010 	mov	r3, #16
   1ea14:	eafffe7b 	b	1e408 <RunZ80+0x3de4>
   1ea18:	e3833004 	orr	r3, r3, #4
   1ea1c:	e3a02010 	mov	r2, #16
   1ea20:	eafffe2e 	b	1e2e0 <RunZ80+0x3cbc>
   1ea24:	e3822004 	orr	r2, r2, #4
   1ea28:	e3a03010 	mov	r3, #16
   1ea2c:	eafffe17 	b	1e290 <RunZ80+0x3c6c>
   1ea30:	e3833004 	orr	r3, r3, #4
   1ea34:	e3a02010 	mov	r2, #16
   1ea38:	eafffcee 	b	1ddf8 <RunZ80+0x37d4>
   1ea3c:	e3822004 	orr	r2, r2, #4
   1ea40:	e3a03010 	mov	r3, #16
   1ea44:	eafffcd7 	b	1dda8 <RunZ80+0x3784>
   1ea48:	e3822004 	orr	r2, r2, #4
   1ea4c:	e3a03010 	mov	r3, #16
   1ea50:	eafffc5f 	b	1dbd4 <RunZ80+0x35b0>
   1ea54:	e7d83003 	ldrb	r3, [r8, r3]
   1ea58:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1ea5c:	e1c4c0bc 	strh	ip, [r4, #12]
   1ea60:	e7d82000 	ldrb	r2, [r8, r0]
   1ea64:	e1835005 	orr	r5, r3, r5
   1ea68:	eafff019 	b	1aad4 <RunZ80+0x4b0>
   1ea6c:	e7d83003 	ldrb	r3, [r8, r3]
   1ea70:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1ea74:	e1c4c0bc 	strh	ip, [r4, #12]
   1ea78:	e7d82000 	ldrb	r2, [r8, r0]
   1ea7c:	e1835005 	orr	r5, r3, r5
   1ea80:	eafff53d 	b	1bf7c <RunZ80+0x1958>
   1ea84:	e7d83003 	ldrb	r3, [r8, r3]
   1ea88:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1ea8c:	e1c4c0bc 	strh	ip, [r4, #12]
   1ea90:	e7d82000 	ldrb	r2, [r8, r0]
   1ea94:	e1835005 	orr	r5, r3, r5
   1ea98:	eafff227 	b	1b33c <RunZ80+0xd18>
   1ea9c:	e7d83003 	ldrb	r3, [r8, r3]
   1eaa0:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1eaa4:	e1c4c0bc 	strh	ip, [r4, #12]
   1eaa8:	e7d82000 	ldrb	r2, [r8, r0]
   1eaac:	e1835005 	orr	r5, r3, r5
   1eab0:	eafff2ad 	b	1b56c <RunZ80+0xf48>
   1eab4:	e7d83003 	ldrb	r3, [r8, r3]
   1eab8:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1eabc:	e1c4c0bc 	strh	ip, [r4, #12]
   1eac0:	e7d82000 	ldrb	r2, [r8, r0]
   1eac4:	e1835005 	orr	r5, r3, r5
   1eac8:	eafff3fd 	b	1bac4 <RunZ80+0x14a0>
   1eacc:	e7d83003 	ldrb	r3, [r8, r3]
   1ead0:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1ead4:	e1c4c0bc 	strh	ip, [r4, #12]
   1ead8:	e7d82000 	ldrb	r2, [r8, r0]
   1eadc:	e1835005 	orr	r5, r3, r5
   1eae0:	eafff34c 	b	1b818 <RunZ80+0x11f4>
   1eae4:	e7d83003 	ldrb	r3, [r8, r3]
   1eae8:	e3c550ff 	bic	r5, r5, #255	; 0xff
   1eaec:	e1c4c0bc 	strh	ip, [r4, #12]
   1eaf0:	e7d82000 	ldrb	r2, [r8, r0]
   1eaf4:	e1835005 	orr	r5, r3, r5
   1eaf8:	eaffff9f 	b	1e97c <RunZ80+0x4358>
   1eafc:	0003d984 	.word	0x0003d984

0001eb00 <Update6847>:
   1eb00:	e3a01c1e 	mov	r1, #7680	; 0x1e00
   1eb04:	e3a03020 	mov	r3, #32
   1eb08:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eb0c:	e59f44d8 	ldr	r4, [pc, #1240]	; 1efec <Update6847+0x4ec>
   1eb10:	e1a0a140 	asr	sl, r0, #2
   1eb14:	e5841000 	str	r1, [r4]
   1eb18:	e59f44d0 	ldr	r4, [pc, #1232]	; 1eff0 <Update6847+0x4f0>
   1eb1c:	e1a0c1c0 	asr	ip, r0, #3
   1eb20:	e5841000 	str	r1, [r4]
   1eb24:	e59f14c8 	ldr	r1, [pc, #1224]	; 1eff4 <Update6847+0x4f4>
   1eb28:	e59fe4c8 	ldr	lr, [pc, #1224]	; 1eff8 <Update6847+0x4f8>
   1eb2c:	e5813000 	str	r3, [r1]
   1eb30:	e59f14c4 	ldr	r1, [pc, #1220]	; 1effc <Update6847+0x4fc>
   1eb34:	e20a5001 	and	r5, sl, #1
   1eb38:	e5813000 	str	r3, [r1]
   1eb3c:	e59f14bc 	ldr	r1, [pc, #1212]	; 1f000 <Update6847+0x500>
   1eb40:	e24dd01c 	sub	sp, sp, #28
   1eb44:	e21cc001 	ands	ip, ip, #1
   1eb48:	e58d5004 	str	r5, [sp, #4]
   1eb4c:	e59e3000 	ldr	r3, [lr]
   1eb50:	e5d1a000 	ldrb	sl, [r1]
   1eb54:	1a000067 	bne	1ecf8 <Update6847+0x1f8>
   1eb58:	e1a02220 	lsr	r2, r0, #4
   1eb5c:	e2022003 	and	r2, r2, #3
   1eb60:	e2831c1e 	add	r1, r3, #7680	; 0x1e00
   1eb64:	e4c3a001 	strb	sl, [r3], #1
   1eb68:	e1510003 	cmp	r1, r3
   1eb6c:	1afffffc 	bne	1eb64 <Update6847+0x64>
   1eb70:	e1a02482 	lsl	r2, r2, #9
   1eb74:	e2821e82 	add	r1, r2, #2080	; 0x820
   1eb78:	e58da00c 	str	sl, [sp, #12]
   1eb7c:	e1a0a001 	mov	sl, r1
   1eb80:	e2820b02 	add	r0, r2, #2048	; 0x800
   1eb84:	e59fb478 	ldr	fp, [pc, #1144]	; 1f004 <Update6847+0x504>
   1eb88:	e2822ea2 	add	r2, r2, #2592	; 0xa20
   1eb8c:	e59f8474 	ldr	r8, [pc, #1140]	; 1f008 <Update6847+0x508>
   1eb90:	e58d0010 	str	r0, [sp, #16]
   1eb94:	e58d2014 	str	r2, [sp, #20]
   1eb98:	e3a02000 	mov	r2, #0
   1eb9c:	e58d2004 	str	r2, [sp, #4]
   1eba0:	e59f244c 	ldr	r2, [pc, #1100]	; 1eff4 <Update6847+0x4f4>
   1eba4:	e5922000 	ldr	r2, [r2]
   1eba8:	e3520000 	cmp	r2, #0
   1ebac:	d1a02003 	movle	r2, r3
   1ebb0:	da000004 	ble	1ebc8 <Update6847+0xc8>
   1ebb4:	e59d100c 	ldr	r1, [sp, #12]
   1ebb8:	e0832002 	add	r2, r3, r2
   1ebbc:	e4c31001 	strb	r1, [r3], #1
   1ebc0:	e1530002 	cmp	r3, r2
   1ebc4:	1afffffc 	bne	1ebbc <Update6847+0xbc>
   1ebc8:	e59d3004 	ldr	r3, [sp, #4]
   1ebcc:	e59d7010 	ldr	r7, [sp, #16]
   1ebd0:	e0883003 	add	r3, r8, r3
   1ebd4:	e2822008 	add	r2, r2, #8
   1ebd8:	e58d3008 	str	r3, [sp, #8]
   1ebdc:	e59b6000 	ldr	r6, [fp]
   1ebe0:	e5983004 	ldr	r3, [r8, #4]
   1ebe4:	e7d64007 	ldrb	r4, [r6, r7]
   1ebe8:	e5985000 	ldr	r5, [r8]
   1ebec:	e1140003 	tst	r4, r3
   1ebf0:	e0863007 	add	r3, r6, r7
   1ebf4:	e553e800 	ldrb	lr, [r3, #-2048]	; 0xfffff800
   1ebf8:	e0055004 	and	r5, r5, r4
   1ebfc:	e2423008 	sub	r3, r2, #8
   1ec00:	0a000081 	beq	1ee0c <Update6847+0x30c>
   1ec04:	e59f93f4 	ldr	r9, [pc, #1012]	; 1f000 <Update6847+0x500>
   1ec08:	e3550000 	cmp	r5, #0
   1ec0c:	e5d91000 	ldrb	r1, [r9]
   1ec10:	0a000093 	beq	1ee64 <Update6847+0x364>
   1ec14:	e3a0500c 	mov	r5, #12
   1ec18:	e59d6004 	ldr	r6, [sp, #4]
   1ec1c:	e5980008 	ldr	r0, [r8, #8]
   1ec20:	e20ec03f 	and	ip, lr, #63	; 0x3f
   1ec24:	e10c6c85 	smlabb	ip, r5, ip, r6
   1ec28:	e0044000 	and	r4, r4, r0
   1ec2c:	e1a0032e 	lsr	r0, lr, #6
   1ec30:	e1800084 	orr	r0, r0, r4, lsl #1
   1ec34:	e59fe3d0 	ldr	lr, [pc, #976]	; 1f00c <Update6847+0x50c>
   1ec38:	e0890000 	add	r0, r9, r0
   1ec3c:	e5d00001 	ldrb	r0, [r0, #1]
   1ec40:	e7dec00c 	ldrb	ip, [lr, ip]
   1ec44:	e1a05002 	mov	r5, r2
   1ec48:	e3a0e080 	mov	lr, #128	; 0x80
   1ec4c:	e11e000c 	tst	lr, ip
   1ec50:	11a04000 	movne	r4, r0
   1ec54:	01a04001 	moveq	r4, r1
   1ec58:	e4c34001 	strb	r4, [r3], #1
   1ec5c:	e1530002 	cmp	r3, r2
   1ec60:	e1a0e0ae 	lsr	lr, lr, #1
   1ec64:	1afffff8 	bne	1ec4c <Update6847+0x14c>
   1ec68:	e2877001 	add	r7, r7, #1
   1ec6c:	e15a0007 	cmp	sl, r7
   1ec70:	e2832008 	add	r2, r3, #8
   1ec74:	1affffd8 	bne	1ebdc <Update6847+0xdc>
   1ec78:	e59f237c 	ldr	r2, [pc, #892]	; 1effc <Update6847+0x4fc>
   1ec7c:	e5922000 	ldr	r2, [r2]
   1ec80:	e3520000 	cmp	r2, #0
   1ec84:	da000004 	ble	1ec9c <Update6847+0x19c>
   1ec88:	e0853002 	add	r3, r5, r2
   1ec8c:	e59d200c 	ldr	r2, [sp, #12]
   1ec90:	e4c52001 	strb	r2, [r5], #1
   1ec94:	e1550003 	cmp	r5, r3
   1ec98:	1afffffc 	bne	1ec90 <Update6847+0x190>
   1ec9c:	e59d2004 	ldr	r2, [sp, #4]
   1eca0:	e2822001 	add	r2, r2, #1
   1eca4:	e352000c 	cmp	r2, #12
   1eca8:	e58d2004 	str	r2, [sp, #4]
   1ecac:	1affffbb 	bne	1eba0 <Update6847+0xa0>
   1ecb0:	e59d2014 	ldr	r2, [sp, #20]
   1ecb4:	e28aa020 	add	sl, sl, #32
   1ecb8:	e152000a 	cmp	r2, sl
   1ecbc:	e59d2010 	ldr	r2, [sp, #16]
   1ecc0:	e2822020 	add	r2, r2, #32
   1ecc4:	e58d2010 	str	r2, [sp, #16]
   1ecc8:	1affffb2 	bne	1eb98 <Update6847+0x98>
   1eccc:	e59f231c 	ldr	r2, [pc, #796]	; 1eff0 <Update6847+0x4f0>
   1ecd0:	e59da00c 	ldr	sl, [sp, #12]
   1ecd4:	e5922000 	ldr	r2, [r2]
   1ecd8:	e3520000 	cmp	r2, #0
   1ecdc:	da000003 	ble	1ecf0 <Update6847+0x1f0>
   1ece0:	e0832002 	add	r2, r3, r2
   1ece4:	e4c3a001 	strb	sl, [r3], #1
   1ece8:	e1530002 	cmp	r3, r2
   1ecec:	1afffffc 	bne	1ece4 <Update6847+0x1e4>
   1ecf0:	e28dd01c 	add	sp, sp, #28
   1ecf4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ecf8:	e59f2300 	ldr	r2, [pc, #768]	; 1f000 <Update6847+0x500>
   1ecfc:	e1a060c0 	asr	r6, r0, #1
   1ed00:	e1a003a0 	lsr	r0, r0, #7
   1ed04:	e3500000 	cmp	r0, #0
   1ed08:	15d2c00a 	ldrbne	ip, [r2, #10]
   1ed0c:	05d2c009 	ldrbeq	ip, [r2, #9]
   1ed10:	e2066001 	and	r6, r6, #1
   1ed14:	e2832c1e 	add	r2, r3, #7680	; 0x1e00
   1ed18:	e4c3c001 	strb	ip, [r3], #1
   1ed1c:	e1520003 	cmp	r2, r3
   1ed20:	1afffffc 	bne	1ed18 <Update6847+0x218>
   1ed24:	e3500000 	cmp	r0, #0
   1ed28:	13a07005 	movne	r7, #5
   1ed2c:	03a07001 	moveq	r7, #1
   1ed30:	e59f22c8 	ldr	r2, [pc, #712]	; 1f000 <Update6847+0x500>
   1ed34:	e3a05020 	mov	r5, #32
   1ed38:	e0822007 	add	r2, r2, r7
   1ed3c:	e3a04003 	mov	r4, #3
   1ed40:	e1a09002 	mov	r9, r2
   1ed44:	e59fb2b8 	ldr	fp, [pc, #696]	; 1f004 <Update6847+0x504>
   1ed48:	e59f22a4 	ldr	r2, [pc, #676]	; 1eff4 <Update6847+0x4f4>
   1ed4c:	e5922000 	ldr	r2, [r2]
   1ed50:	e3520000 	cmp	r2, #0
   1ed54:	da000003 	ble	1ed68 <Update6847+0x268>
   1ed58:	e0832002 	add	r2, r3, r2
   1ed5c:	e4c3c001 	strb	ip, [r3], #1
   1ed60:	e1520003 	cmp	r2, r3
   1ed64:	1afffffc 	bne	1ed5c <Update6847+0x25c>
   1ed68:	e245e020 	sub	lr, r5, #32
   1ed6c:	e59b2000 	ldr	r2, [fp]
   1ed70:	e3560000 	cmp	r6, #0
   1ed74:	e7d2100e 	ldrb	r1, [r2, lr]
   1ed78:	e59d2004 	ldr	r2, [sp, #4]
   1ed7c:	0a000062 	beq	1ef0c <Update6847+0x40c>
   1ed80:	e3520000 	cmp	r2, #0
   1ed84:	0a000073 	beq	1ef58 <Update6847+0x458>
   1ed88:	e3a02080 	mov	r2, #128	; 0x80
   1ed8c:	e2838008 	add	r8, r3, #8
   1ed90:	e1120001 	tst	r2, r1
   1ed94:	11a0000c 	movne	r0, ip
   1ed98:	01a0000a 	moveq	r0, sl
   1ed9c:	e4c30001 	strb	r0, [r3], #1
   1eda0:	e1580003 	cmp	r8, r3
   1eda4:	e1a020a2 	lsr	r2, r2, #1
   1eda8:	1afffff8 	bne	1ed90 <Update6847+0x290>
   1edac:	e28ee001 	add	lr, lr, #1
   1edb0:	e155000e 	cmp	r5, lr
   1edb4:	1affffec 	bne	1ed6c <Update6847+0x26c>
   1edb8:	e59f223c 	ldr	r2, [pc, #572]	; 1effc <Update6847+0x4fc>
   1edbc:	e5922000 	ldr	r2, [r2]
   1edc0:	e3520000 	cmp	r2, #0
   1edc4:	da000003 	ble	1edd8 <Update6847+0x2d8>
   1edc8:	e0832002 	add	r2, r3, r2
   1edcc:	e4c3c001 	strb	ip, [r3], #1
   1edd0:	e1520003 	cmp	r2, r3
   1edd4:	1afffffc 	bne	1edcc <Update6847+0x2cc>
   1edd8:	e59f2230 	ldr	r2, [pc, #560]	; 1f010 <Update6847+0x510>
   1eddc:	e2855020 	add	r5, r5, #32
   1ede0:	e1550002 	cmp	r5, r2
   1ede4:	1affffd7 	bne	1ed48 <Update6847+0x248>
   1ede8:	e59f2200 	ldr	r2, [pc, #512]	; 1eff0 <Update6847+0x4f0>
   1edec:	e5922000 	ldr	r2, [r2]
   1edf0:	e3520000 	cmp	r2, #0
   1edf4:	daffffbd 	ble	1ecf0 <Update6847+0x1f0>
   1edf8:	e0832002 	add	r2, r3, r2
   1edfc:	e4c3c001 	strb	ip, [r3], #1
   1ee00:	e1520003 	cmp	r2, r3
   1ee04:	1afffffc 	bne	1edfc <Update6847+0x2fc>
   1ee08:	eaffffb8 	b	1ecf0 <Update6847+0x1f0>
   1ee0c:	e5980008 	ldr	r0, [r8, #8]
   1ee10:	e59f11e8 	ldr	r1, [pc, #488]	; 1f000 <Update6847+0x500>
   1ee14:	e0000004 	and	r0, r0, r4
   1ee18:	e20000fe 	and	r0, r0, #254	; 0xfe
   1ee1c:	e598900c 	ldr	r9, [r8, #12]
   1ee20:	e0810000 	add	r0, r1, r0
   1ee24:	e0044009 	and	r4, r4, r9
   1ee28:	e5d0100b 	ldrb	r1, [r0, #11]
   1ee2c:	e5d0000c 	ldrb	r0, [r0, #12]
   1ee30:	e3540000 	cmp	r4, #0
   1ee34:	11a04001 	movne	r4, r1
   1ee38:	01a04000 	moveq	r4, r0
   1ee3c:	11a01000 	movne	r1, r0
   1ee40:	e35e001f 	cmp	lr, #31
   1ee44:	e1a00004 	mov	r0, r4
   1ee48:	8a000010 	bhi	1ee90 <Update6847+0x390>
   1ee4c:	e3550000 	cmp	r5, #0
   1ee50:	1a00002b 	bne	1ef04 <Update6847+0x404>
   1ee54:	e59dc008 	ldr	ip, [sp, #8]
   1ee58:	e08c5005 	add	r5, ip, r5
   1ee5c:	e5d5c010 	ldrb	ip, [r5, #16]
   1ee60:	eaffff77 	b	1ec44 <Update6847+0x144>
   1ee64:	e3a0c00c 	mov	ip, #12
   1ee68:	e59d4004 	ldr	r4, [sp, #4]
   1ee6c:	e20e000f 	and	r0, lr, #15
   1ee70:	e100408c 	smlabb	r0, ip, r0, r4
   1ee74:	e59fc184 	ldr	ip, [pc, #388]	; 1f000 <Update6847+0x500>
   1ee78:	e1a0ec8e 	lsl	lr, lr, #25
   1ee7c:	e08ceeae 	add	lr, ip, lr, lsr #29
   1ee80:	e59fc18c 	ldr	ip, [pc, #396]	; 1f014 <Update6847+0x514>
   1ee84:	e7dcc000 	ldrb	ip, [ip, r0]
   1ee88:	e5de0001 	ldrb	r0, [lr, #1]
   1ee8c:	eaffff6c 	b	1ec44 <Update6847+0x144>
   1ee90:	e35e005f 	cmp	lr, #95	; 0x5f
   1ee94:	83a04000 	movhi	r4, #0
   1ee98:	93a04001 	movls	r4, #1
   1ee9c:	e3550000 	cmp	r5, #0
   1eea0:	03a04000 	moveq	r4, #0
   1eea4:	e3540000 	cmp	r4, #0
   1eea8:	1a000015 	bne	1ef04 <Update6847+0x404>
   1eeac:	e24e4060 	sub	r4, lr, #96	; 0x60
   1eeb0:	e354001f 	cmp	r4, #31
   1eeb4:	8a000004 	bhi	1eecc <Update6847+0x3cc>
   1eeb8:	e28eec01 	add	lr, lr, #256	; 0x100
   1eebc:	e59dc004 	ldr	ip, [sp, #4]
   1eec0:	e086620e 	add	r6, r6, lr, lsl #4
   1eec4:	e7d6c00c 	ldrb	ip, [r6, ip]
   1eec8:	eaffff5d 	b	1ec44 <Update6847+0x144>
   1eecc:	e22e4080 	eor	r4, lr, #128	; 0x80
   1eed0:	e354005f 	cmp	r4, #95	; 0x5f
   1eed4:	9a000005 	bls	1eef0 <Update6847+0x3f0>
   1eed8:	e35e001f 	cmp	lr, #31
   1eedc:	9affff58 	bls	1ec44 <Update6847+0x144>
   1eee0:	e24ee020 	sub	lr, lr, #32
   1eee4:	e08ee08e 	add	lr, lr, lr, lsl #1
   1eee8:	e1a0510e 	lsl	r5, lr, #2
   1eeec:	eaffffd8 	b	1ee54 <Update6847+0x354>
   1eef0:	e28ee080 	add	lr, lr, #128	; 0x80
   1eef4:	e59dc004 	ldr	ip, [sp, #4]
   1eef8:	e086620e 	add	r6, r6, lr, lsl #4
   1eefc:	e7d6c00c 	ldrb	ip, [r6, ip]
   1ef00:	eaffff4f 	b	1ec44 <Update6847+0x144>
   1ef04:	e22ee080 	eor	lr, lr, #128	; 0x80
   1ef08:	eaffffe7 	b	1eeac <Update6847+0x3ac>
   1ef0c:	e3520000 	cmp	r2, #0
   1ef10:	0a000024 	beq	1efa8 <Update6847+0x4a8>
   1ef14:	e3a00080 	mov	r0, #128	; 0x80
   1ef18:	e2832002 	add	r2, r3, #2
   1ef1c:	e2838012 	add	r8, r3, #18
   1ef20:	e1100001 	tst	r0, r1
   1ef24:	11a0300c 	movne	r3, ip
   1ef28:	01a0300a 	moveq	r3, sl
   1ef2c:	e5423002 	strb	r3, [r2, #-2]
   1ef30:	e5423001 	strb	r3, [r2, #-1]
   1ef34:	e1a03002 	mov	r3, r2
   1ef38:	e2822002 	add	r2, r2, #2
   1ef3c:	e1580002 	cmp	r8, r2
   1ef40:	e1a000a0 	lsr	r0, r0, #1
   1ef44:	1afffff5 	bne	1ef20 <Update6847+0x420>
   1ef48:	e28ee001 	add	lr, lr, #1
   1ef4c:	e155000e 	cmp	r5, lr
   1ef50:	1affff85 	bne	1ed6c <Update6847+0x26c>
   1ef54:	eaffff97 	b	1edb8 <Update6847+0x2b8>
   1ef58:	e3a02006 	mov	r2, #6
   1ef5c:	e2830002 	add	r0, r3, #2
   1ef60:	e0013214 	and	r3, r1, r4, lsl r2
   1ef64:	e59f8094 	ldr	r8, [pc, #148]	; 1f000 <Update6847+0x500>
   1ef68:	e0873253 	add	r3, r7, r3, asr r2
   1ef6c:	e7d88003 	ldrb	r8, [r8, r3]
   1ef70:	e2422002 	sub	r2, r2, #2
   1ef74:	e5408002 	strb	r8, [r0, #-2]
   1ef78:	e59f8080 	ldr	r8, [pc, #128]	; 1f000 <Update6847+0x500>
   1ef7c:	e6ef2072 	uxtb	r2, r2
   1ef80:	e7d83003 	ldrb	r3, [r8, r3]
   1ef84:	e35200fe 	cmp	r2, #254	; 0xfe
   1ef88:	e5403001 	strb	r3, [r0, #-1]
   1ef8c:	e1a03000 	mov	r3, r0
   1ef90:	e2800002 	add	r0, r0, #2
   1ef94:	1afffff1 	bne	1ef60 <Update6847+0x460>
   1ef98:	e28ee001 	add	lr, lr, #1
   1ef9c:	e155000e 	cmp	r5, lr
   1efa0:	1affff71 	bne	1ed6c <Update6847+0x26c>
   1efa4:	eaffff83 	b	1edb8 <Update6847+0x2b8>
   1efa8:	e3a00006 	mov	r0, #6
   1efac:	e2832002 	add	r2, r3, #2
   1efb0:	e0018014 	and	r8, r1, r4, lsl r0
   1efb4:	e1a08058 	asr	r8, r8, r0
   1efb8:	e7d98008 	ldrb	r8, [r9, r8]
   1efbc:	e2500002 	subs	r0, r0, #2
   1efc0:	e5428002 	strb	r8, [r2, #-2]
   1efc4:	e5428001 	strb	r8, [r2, #-1]
   1efc8:	e5c280fe 	strb	r8, [r2, #254]	; 0xfe
   1efcc:	e5c280ff 	strb	r8, [r2, #255]	; 0xff
   1efd0:	e2822002 	add	r2, r2, #2
   1efd4:	1afffff5 	bne	1efb0 <Update6847+0x4b0>
   1efd8:	e28ee001 	add	lr, lr, #1
   1efdc:	e155000e 	cmp	r5, lr
   1efe0:	e2833006 	add	r3, r3, #6
   1efe4:	1affff60 	bne	1ed6c <Update6847+0x26c>
   1efe8:	eaffff72 	b	1edb8 <Update6847+0x2b8>
   1efec:	0017b2d0 	.word	0x0017b2d0
   1eff0:	0018dfa8 	.word	0x0018dfa8
   1eff4:	0018dfac 	.word	0x0018dfac
   1eff8:	0018dfb0 	.word	0x0018dfb0
   1effc:	0018dfb4 	.word	0x0018dfb4
   1f000:	0017b2d4 	.word	0x0017b2d4
   1f004:	0017b2cc 	.word	0x0017b2cc
   1f008:	00058428 	.word	0x00058428
   1f00c:	0017afcc 	.word	0x0017afcc
   1f010:	00001820 	.word	0x00001820
   1f014:	0018dee8 	.word	0x0018dee8

0001f018 <InitMC6847>:
   1f018:	e3a0c000 	mov	ip, #0
   1f01c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f020:	e263e0f0 	rsb	lr, r3, #240	; 0xf0
   1f024:	e08eefae 	add	lr, lr, lr, lsr #31
   1f028:	e1a0e0ce 	asr	lr, lr, #1
   1f02c:	e26e40f0 	rsb	r4, lr, #240	; 0xf0
   1f030:	e0433004 	sub	r3, r3, r4
   1f034:	e0040392 	mul	r4, r2, r3
   1f038:	e00e0e92 	mul	lr, r2, lr
   1f03c:	e59f5198 	ldr	r5, [pc, #408]	; 1f1dc <InitMC6847+0x1c4>
   1f040:	e2623d05 	rsb	r3, r2, #320	; 0x140
   1f044:	e5854000 	str	r4, [r5]
   1f048:	e0833fa3 	add	r3, r3, r3, lsr #31
   1f04c:	e59f518c 	ldr	r5, [pc, #396]	; 1f1e0 <InitMC6847+0x1c8>
   1f050:	e1a030c3 	asr	r3, r3, #1
   1f054:	e59f4188 	ldr	r4, [pc, #392]	; 1f1e4 <InitMC6847+0x1cc>
   1f058:	e585e000 	str	lr, [r5]
   1f05c:	e263ed05 	rsb	lr, r3, #320	; 0x140
   1f060:	e5843000 	str	r3, [r4]
   1f064:	e042200e 	sub	r2, r2, lr
   1f068:	e59f5178 	ldr	r5, [pc, #376]	; 1f1e8 <InitMC6847+0x1d0>
   1f06c:	e59f4178 	ldr	r4, [pc, #376]	; 1f1ec <InitMC6847+0x1d4>
   1f070:	e59fe178 	ldr	lr, [pc, #376]	; 1f1f0 <InitMC6847+0x1d8>
   1f074:	e59f3178 	ldr	r3, [pc, #376]	; 1f1f4 <InitMC6847+0x1dc>
   1f078:	e5852000 	str	r2, [r5]
   1f07c:	e5841000 	str	r1, [r4]
   1f080:	e58e0000 	str	r0, [lr]
   1f084:	e5e3c001 	strb	ip, [r3, #1]!
   1f088:	e28cc001 	add	ip, ip, #1
   1f08c:	e35c0012 	cmp	ip, #18
   1f090:	1afffffb 	bne	1f084 <InitMC6847+0x6c>
   1f094:	e3a0e000 	mov	lr, #0
   1f098:	e59f8158 	ldr	r8, [pc, #344]	; 1f1f8 <InitMC6847+0x1e0>
   1f09c:	e31e0002 	tst	lr, #2
   1f0a0:	13a0c0f0 	movne	ip, #240	; 0xf0
   1f0a4:	03a0c000 	moveq	ip, #0
   1f0a8:	e31e0008 	tst	lr, #8
   1f0ac:	13a000f0 	movne	r0, #240	; 0xf0
   1f0b0:	03a00000 	moveq	r0, #0
   1f0b4:	e38c700f 	orr	r7, ip, #15
   1f0b8:	e380600f 	orr	r6, r0, #15
   1f0bc:	e1a02008 	mov	r2, r8
   1f0c0:	e3a03000 	mov	r3, #0
   1f0c4:	e20e5001 	and	r5, lr, #1
   1f0c8:	e20e4004 	and	r4, lr, #4
   1f0cc:	ea000006 	b	1f0ec <InitMC6847+0xd4>
   1f0d0:	e3540000 	cmp	r4, #0
   1f0d4:	11a01006 	movne	r1, r6
   1f0d8:	01a01000 	moveq	r1, r0
   1f0dc:	e2833001 	add	r3, r3, #1
   1f0e0:	e353000c 	cmp	r3, #12
   1f0e4:	e5e21001 	strb	r1, [r2, #1]!
   1f0e8:	0a000008 	beq	1f110 <InitMC6847+0xf8>
   1f0ec:	e3530005 	cmp	r3, #5
   1f0f0:	dafffff6 	ble	1f0d0 <InitMC6847+0xb8>
   1f0f4:	e3550000 	cmp	r5, #0
   1f0f8:	11a01007 	movne	r1, r7
   1f0fc:	01a0100c 	moveq	r1, ip
   1f100:	e2833001 	add	r3, r3, #1
   1f104:	e353000c 	cmp	r3, #12
   1f108:	e5e21001 	strb	r1, [r2, #1]!
   1f10c:	1afffff6 	bne	1f0ec <InitMC6847+0xd4>
   1f110:	e28ee001 	add	lr, lr, #1
   1f114:	e35e0010 	cmp	lr, #16
   1f118:	e288800c 	add	r8, r8, #12
   1f11c:	1affffde 	bne	1f09c <InitMC6847+0x84>
   1f120:	e3a00000 	mov	r0, #0
   1f124:	e59fb0d0 	ldr	fp, [pc, #208]	; 1f1fc <InitMC6847+0x1e4>
   1f128:	e3100002 	tst	r0, #2
   1f12c:	13a080f0 	movne	r8, #240	; 0xf0
   1f130:	03a08000 	moveq	r8, #0
   1f134:	e3100008 	tst	r0, #8
   1f138:	13a0c0f0 	movne	ip, #240	; 0xf0
   1f13c:	03a0c000 	moveq	ip, #0
   1f140:	e3100020 	tst	r0, #32
   1f144:	13a050f0 	movne	r5, #240	; 0xf0
   1f148:	03a05000 	moveq	r5, #0
   1f14c:	e388a00f 	orr	sl, r8, #15
   1f150:	e38c400f 	orr	r4, ip, #15
   1f154:	e385700f 	orr	r7, r5, #15
   1f158:	e1a0200b 	mov	r2, fp
   1f15c:	e3a03000 	mov	r3, #0
   1f160:	e2009001 	and	r9, r0, #1
   1f164:	e200e004 	and	lr, r0, #4
   1f168:	e2006010 	and	r6, r0, #16
   1f16c:	ea000008 	b	1f194 <InitMC6847+0x17c>
   1f170:	e3530007 	cmp	r3, #7
   1f174:	ca000014 	bgt	1f1cc <InitMC6847+0x1b4>
   1f178:	e35e0000 	cmp	lr, #0
   1f17c:	11a01004 	movne	r1, r4
   1f180:	01a0100c 	moveq	r1, ip
   1f184:	e2833001 	add	r3, r3, #1
   1f188:	e353000c 	cmp	r3, #12
   1f18c:	e5e21001 	strb	r1, [r2, #1]!
   1f190:	0a000008 	beq	1f1b8 <InitMC6847+0x1a0>
   1f194:	e3530003 	cmp	r3, #3
   1f198:	cafffff4 	bgt	1f170 <InitMC6847+0x158>
   1f19c:	e3560000 	cmp	r6, #0
   1f1a0:	11a01007 	movne	r1, r7
   1f1a4:	01a01005 	moveq	r1, r5
   1f1a8:	e2833001 	add	r3, r3, #1
   1f1ac:	e353000c 	cmp	r3, #12
   1f1b0:	e5e21001 	strb	r1, [r2, #1]!
   1f1b4:	1afffff6 	bne	1f194 <InitMC6847+0x17c>
   1f1b8:	e2800001 	add	r0, r0, #1
   1f1bc:	e3500040 	cmp	r0, #64	; 0x40
   1f1c0:	e28bb00c 	add	fp, fp, #12
   1f1c4:	1affffd7 	bne	1f128 <InitMC6847+0x110>
   1f1c8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1cc:	e3590000 	cmp	r9, #0
   1f1d0:	11a0100a 	movne	r1, sl
   1f1d4:	01a01008 	moveq	r1, r8
   1f1d8:	eaffffe9 	b	1f184 <InitMC6847+0x16c>
   1f1dc:	0018dfa8 	.word	0x0018dfa8
   1f1e0:	0017b2d0 	.word	0x0017b2d0
   1f1e4:	0018dfac 	.word	0x0018dfac
   1f1e8:	0018dfb4 	.word	0x0018dfb4
   1f1ec:	0017b2cc 	.word	0x0017b2cc
   1f1f0:	0018dfb0 	.word	0x0018dfb0
   1f1f4:	0017b2d3 	.word	0x0017b2d3
   1f1f8:	0018dee7 	.word	0x0018dee7
   1f1fc:	0017afcb 	.word	0x0017afcb

0001f200 <CAY8910::Reset8910(AY8910*, int)>:
   1f200:	e92d4070 	push	{r4, r5, r6, lr}
   1f204:	e1a05001 	mov	r5, r1
   1f208:	e1a06002 	mov	r6, r2
   1f20c:	e1a04000 	mov	r4, r0
   1f210:	e3a02010 	mov	r2, #16
   1f214:	e1a00001 	mov	r0, r1
   1f218:	e59f1060 	ldr	r1, [pc, #96]	; 1f280 <CAY8910::Reset8910(AY8910*, int)+0x80>
   1f21c:	eb0058ed 	bl	355d8 <memcpy>
   1f220:	e3a03000 	mov	r3, #0
   1f224:	e59f1058 	ldr	r1, [pc, #88]	; 1f284 <CAY8910::Reset8910(AY8910*, int)+0x84>
   1f228:	e2860004 	add	r0, r6, #4
   1f22c:	e5853054 	str	r3, [r5, #84]	; 0x54
   1f230:	e585304c 	str	r3, [r5, #76]	; 0x4c
   1f234:	e5853050 	str	r3, [r5, #80]	; 0x50
   1f238:	e1c534b8 	strh	r3, [r5, #72]	; 0x48
   1f23c:	e5c5304a 	strb	r3, [r5, #74]	; 0x4a
   1f240:	e1a02003 	mov	r2, r3
   1f244:	e5856044 	str	r6, [r5, #68]	; 0x44
   1f248:	e5851040 	str	r1, [r5, #64]	; 0x40
   1f24c:	e2853010 	add	r3, r5, #16
   1f250:	e0840100 	add	r0, r4, r0, lsl #2
   1f254:	e2855028 	add	r5, r5, #40	; 0x28
   1f258:	e5832018 	str	r2, [r3, #24]
   1f25c:	e4832004 	str	r2, [r3], #4
   1f260:	e5901018 	ldr	r1, [r0, #24]
   1f264:	e3510000 	cmp	r1, #0
   1f268:	15802018 	strne	r2, [r0, #24]
   1f26c:	15802048 	strne	r2, [r0, #72]	; 0x48
   1f270:	e1530005 	cmp	r3, r5
   1f274:	e4802004 	str	r2, [r0], #4
   1f278:	1afffff6 	bne	1f258 <CAY8910::Reset8910(AY8910*, int)+0x58>
   1f27c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f280:	00058ec0 	.word	0x00058ec0
   1f284:	0003d090 	.word	0x0003d090

0001f288 <CAY8910::WrCtrl8910(AY8910*, unsigned char)>:
   1f288:	e202200f 	and	r2, r2, #15
   1f28c:	e5c1204a 	strb	r2, [r1, #74]	; 0x4a
   1f290:	e12fff1e 	bx	lr

0001f294 <CAY8910::RdData8910(AY8910*)>:
   1f294:	e5d1304a 	ldrb	r3, [r1, #74]	; 0x4a
   1f298:	e7d10003 	ldrb	r0, [r1, r3]
   1f29c:	e12fff1e 	bx	lr

0001f2a0 <CAY8910::Sync8910(AY8910*, unsigned char)>:
   1f2a0:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f2a4:	e3120080 	tst	r2, #128	; 0x80
   1f2a8:	1202207f 	andne	r2, r2, #127	; 0x7f
   1f2ac:	e5d14048 	ldrb	r4, [r1, #72]	; 0x48
   1f2b0:	e3520002 	cmp	r2, #2
   1f2b4:	15c12049 	strbne	r2, [r1, #73]	; 0x49
   1f2b8:	e3540000 	cmp	r4, #0
   1f2bc:	e1a0a000 	mov	sl, r0
   1f2c0:	e1a09001 	mov	r9, r1
   1f2c4:	0a000021 	beq	1f350 <CAY8910::Sync8910(AY8910*, unsigned char)+0xb0>
   1f2c8:	e3a06000 	mov	r6, #0
   1f2cc:	e1a08006 	mov	r8, r6
   1f2d0:	e2817010 	add	r7, r1, #16
   1f2d4:	e3140001 	tst	r4, #1
   1f2d8:	0a000013 	beq	1f32c <CAY8910::Sync8910(AY8910*, unsigned char)+0x8c>
   1f2dc:	e5971000 	ldr	r1, [r7]
   1f2e0:	e5993044 	ldr	r3, [r9, #68]	; 0x44
   1f2e4:	e3510000 	cmp	r1, #0
   1f2e8:	e0865003 	add	r5, r6, r3
   1f2ec:	e597b018 	ldr	fp, [r7, #24]
   1f2f0:	0a000002 	beq	1f300 <CAY8910::Sync8910(AY8910*, unsigned char)+0x60>
   1f2f4:	e59a000c 	ldr	r0, [sl, #12]
   1f2f8:	eb0052fb 	bl	33eec <__aeabi_idiv>
   1f2fc:	e1a01000 	mov	r1, r0
   1f300:	e08a3105 	add	r3, sl, r5, lsl #2
   1f304:	e5932028 	ldr	r2, [r3, #40]	; 0x28
   1f308:	e08bb10b 	add	fp, fp, fp, lsl #2
   1f30c:	e1520001 	cmp	r2, r1
   1f310:	15831028 	strne	r1, [r3, #40]	; 0x28
   1f314:	15838058 	strne	r8, [r3, #88]	; 0x58
   1f318:	e3510000 	cmp	r1, #0
   1f31c:	108bb10b 	addne	fp, fp, fp, lsl #2
   1f320:	11a0b18b 	lslne	fp, fp, #3
   1f324:	05831010 	streq	r1, [r3, #16]
   1f328:	1583b010 	strne	fp, [r3, #16]
   1f32c:	e1b040c4 	asrs	r4, r4, #1
   1f330:	03a03001 	moveq	r3, #1
   1f334:	13a03000 	movne	r3, #0
   1f338:	e2866001 	add	r6, r6, #1
   1f33c:	e3560005 	cmp	r6, #5
   1f340:	c3833001 	orrgt	r3, r3, #1
   1f344:	e3530000 	cmp	r3, #0
   1f348:	e2877004 	add	r7, r7, #4
   1f34c:	0affffe0 	beq	1f2d4 <CAY8910::Sync8910(AY8910*, unsigned char)+0x34>
   1f350:	e3a03000 	mov	r3, #0
   1f354:	e5c93048 	strb	r3, [r9, #72]	; 0x48
   1f358:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f35c <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)>:
   1f35c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   1f360:	e1a07000 	mov	r7, r0
   1f364:	e24dd00c 	sub	sp, sp, #12
   1f368:	e1a04001 	mov	r4, r1
   1f36c:	e352000f 	cmp	r2, #15
   1f370:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
   1f374:	ea00001a 	b	1f3e4 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x88>
   1f378:	0001f3f0 	.word	0x0001f3f0
   1f37c:	0001f3ec 	.word	0x0001f3ec
   1f380:	0001f3f0 	.word	0x0001f3f0
   1f384:	0001f3ec 	.word	0x0001f3ec
   1f388:	0001f3f0 	.word	0x0001f3f0
   1f38c:	0001f3ec 	.word	0x0001f3ec
   1f390:	0001f45c 	.word	0x0001f45c
   1f394:	0001f4e0 	.word	0x0001f4e0
   1f398:	0001f5b4 	.word	0x0001f5b4
   1f39c:	0001f5b4 	.word	0x0001f5b4
   1f3a0:	0001f5b4 	.word	0x0001f5b4
   1f3a4:	0001f3b8 	.word	0x0001f3b8
   1f3a8:	0001f3b8 	.word	0x0001f3b8
   1f3ac:	0001f624 	.word	0x0001f624
   1f3b0:	0001f450 	.word	0x0001f450
   1f3b4:	0001f450 	.word	0x0001f450
   1f3b8:	e7c13002 	strb	r3, [r1, r2]
   1f3bc:	e5d1200c 	ldrb	r2, [r1, #12]
   1f3c0:	e5d1300b 	ldrb	r3, [r1, #11]
   1f3c4:	e5911040 	ldr	r1, [r1, #64]	; 0x40
   1f3c8:	e0933402 	adds	r3, r3, r2, lsl #8
   1f3cc:	10630283 	rsbne	r0, r3, r3, lsl #5
   1f3d0:	10833100 	addne	r3, r3, r0, lsl #2
   1f3d4:	11a00183 	lslne	r0, r3, #3
   1f3d8:	03a007fa 	moveq	r0, #65536000	; 0x3e80000
   1f3dc:	eb0052c2 	bl	33eec <__aeabi_idiv>
   1f3e0:	e584004c 	str	r0, [r4, #76]	; 0x4c
   1f3e4:	e28dd00c 	add	sp, sp, #12
   1f3e8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f3ec:	e203300f 	and	r3, r3, #15
   1f3f0:	e7c43002 	strb	r3, [r4, r2]
   1f3f4:	e5d43007 	ldrb	r3, [r4, #7]
   1f3f8:	e1a010c2 	asr	r1, r2, #1
   1f3fc:	e1a03153 	asr	r3, r3, r1
   1f400:	e3130001 	tst	r3, #1
   1f404:	1afffff6 	bne	1f3e4 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x88>
   1f408:	e20220fe 	and	r2, r2, #254	; 0xfe
   1f40c:	e0843002 	add	r3, r4, r2
   1f410:	e5d31001 	ldrb	r1, [r3, #1]
   1f414:	e7d43002 	ldrb	r3, [r4, r2]
   1f418:	e1a01401 	lsl	r1, r1, #8
   1f41c:	e2011c0f 	and	r1, r1, #3840	; 0xf00
   1f420:	e0911003 	adds	r1, r1, r3
   1f424:	e5940040 	ldr	r0, [r4, #64]	; 0x40
   1f428:	03a01a01 	moveq	r1, #4096	; 0x1000
   1f42c:	e1a050c2 	asr	r5, r2, #1
   1f430:	eb0052ad 	bl	33eec <__aeabi_idiv>
   1f434:	e3a03001 	mov	r3, #1
   1f438:	e2852004 	add	r2, r5, #4
   1f43c:	e7840102 	str	r0, [r4, r2, lsl #2]
   1f440:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
   1f444:	e1822513 	orr	r2, r2, r3, lsl r5
   1f448:	e5c42048 	strb	r2, [r4, #72]	; 0x48
   1f44c:	ea000017 	b	1f4b0 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x154>
   1f450:	e7c13002 	strb	r3, [r1, r2]
   1f454:	e28dd00c 	add	sp, sp, #12
   1f458:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f45c:	e5d16007 	ldrb	r6, [r1, #7]
   1f460:	e203301f 	and	r3, r3, #31
   1f464:	e1e05006 	mvn	r5, r6
   1f468:	e3150038 	tst	r5, #56	; 0x38
   1f46c:	e5c13006 	strb	r3, [r1, #6]
   1f470:	0affffdb 	beq	1f3e4 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x88>
   1f474:	e3530000 	cmp	r3, #0
   1f478:	e5910040 	ldr	r0, [r1, #64]	; 0x40
   1f47c:	11a01103 	lslne	r1, r3, #2
   1f480:	03a01080 	moveq	r1, #128	; 0x80
   1f484:	eb005298 	bl	33eec <__aeabi_idiv>
   1f488:	e3160008 	tst	r6, #8
   1f48c:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
   1f490:	0584001c 	streq	r0, [r4, #28]
   1f494:	e2055038 	and	r5, r5, #56	; 0x38
   1f498:	e3160010 	tst	r6, #16
   1f49c:	05840020 	streq	r0, [r4, #32]
   1f4a0:	e1855003 	orr	r5, r5, r3
   1f4a4:	e3160020 	tst	r6, #32
   1f4a8:	05840024 	streq	r0, [r4, #36]	; 0x24
   1f4ac:	e5c45048 	strb	r5, [r4, #72]	; 0x48
   1f4b0:	e5d43049 	ldrb	r3, [r4, #73]	; 0x49
   1f4b4:	e3530000 	cmp	r3, #0
   1f4b8:	1affffc9 	bne	1f3e4 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x88>
   1f4bc:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
   1f4c0:	e3530000 	cmp	r3, #0
   1f4c4:	0affffc6 	beq	1f3e4 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x88>
   1f4c8:	e1a01004 	mov	r1, r4
   1f4cc:	e1a00007 	mov	r0, r7
   1f4d0:	e3a02002 	mov	r2, #2
   1f4d4:	e28dd00c 	add	sp, sp, #12
   1f4d8:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
   1f4dc:	eaffff6f 	b	1f2a0 <CAY8910::Sync8910(AY8910*, unsigned char)>
   1f4e0:	e5d15007 	ldrb	r5, [r1, #7]
   1f4e4:	e5d12048 	ldrb	r2, [r1, #72]	; 0x48
   1f4e8:	e0255003 	eor	r5, r5, r3
   1f4ec:	e205503f 	and	r5, r5, #63	; 0x3f
   1f4f0:	e1852002 	orr	r2, r5, r2
   1f4f4:	e3550000 	cmp	r5, #0
   1f4f8:	e5c13007 	strb	r3, [r1, #7]
   1f4fc:	e5c12048 	strb	r2, [r1, #72]	; 0x48
   1f500:	0affffea 	beq	1f4b0 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x154>
   1f504:	e3a06000 	mov	r6, #0
   1f508:	e1a08006 	mov	r8, r6
   1f50c:	ea000012 	b	1f55c <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x200>
   1f510:	e5d21001 	ldrb	r1, [r2, #1]
   1f514:	e7d42086 	ldrb	r2, [r4, r6, lsl #1]
   1f518:	e1a01401 	lsl	r1, r1, #8
   1f51c:	e2011c0f 	and	r1, r1, #3840	; 0xf00
   1f520:	e0911002 	adds	r1, r1, r2
   1f524:	03a01a01 	moveq	r1, #4096	; 0x1000
   1f528:	e58d3004 	str	r3, [sp, #4]
   1f52c:	eb00526e 	bl	33eec <__aeabi_idiv>
   1f530:	e59d3004 	ldr	r3, [sp, #4]
   1f534:	e5890010 	str	r0, [r9, #16]
   1f538:	e1b050a5 	lsrs	r5, r5, #1
   1f53c:	03a02001 	moveq	r2, #1
   1f540:	13a02000 	movne	r2, #0
   1f544:	e2866001 	add	r6, r6, #1
   1f548:	e3560005 	cmp	r6, #5
   1f54c:	c3822001 	orrgt	r2, r2, #1
   1f550:	e3520000 	cmp	r2, #0
   1f554:	e1a030a3 	lsr	r3, r3, #1
   1f558:	1affffd4 	bne	1f4b0 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x154>
   1f55c:	e3150001 	tst	r5, #1
   1f560:	0afffff4 	beq	1f538 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x1dc>
   1f564:	e3130001 	tst	r3, #1
   1f568:	e0842106 	add	r2, r4, r6, lsl #2
   1f56c:	15828010 	strne	r8, [r2, #16]
   1f570:	1afffff0 	bne	1f538 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x1dc>
   1f574:	e1a09086 	lsl	r9, r6, #1
   1f578:	e0842009 	add	r2, r4, r9
   1f57c:	e3560002 	cmp	r6, #2
   1f580:	e0829009 	add	r9, r2, r9
   1f584:	e5940040 	ldr	r0, [r4, #64]	; 0x40
   1f588:	daffffe0 	ble	1f510 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x1b4>
   1f58c:	e5d41006 	ldrb	r1, [r4, #6]
   1f590:	e58d3004 	str	r3, [sp, #4]
   1f594:	e211101f 	ands	r1, r1, #31
   1f598:	11a01101 	lslne	r1, r1, #2
   1f59c:	03a01080 	moveq	r1, #128	; 0x80
   1f5a0:	eb005251 	bl	33eec <__aeabi_idiv>
   1f5a4:	e0842106 	add	r2, r4, r6, lsl #2
   1f5a8:	e5820010 	str	r0, [r2, #16]
   1f5ac:	e59d3004 	ldr	r3, [sp, #4]
   1f5b0:	eaffffe0 	b	1f538 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x1dc>
   1f5b4:	e203101f 	and	r1, r3, #31
   1f5b8:	e7c41002 	strb	r1, [r4, r2]
   1f5bc:	e3130010 	tst	r3, #16
   1f5c0:	15d4300d 	ldrbne	r3, [r4, #13]
   1f5c4:	e2420008 	sub	r0, r2, #8
   1f5c8:	159f10d0 	ldrne	r1, [pc, #208]	; 1f6a0 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x344>
   1f5cc:	e6ef2070 	uxtb	r2, r0
   1f5d0:	1203300f 	andne	r3, r3, #15
   1f5d4:	15940054 	ldrne	r0, [r4, #84]	; 0x54
   1f5d8:	10813283 	addne	r3, r1, r3, lsl #5
   1f5dc:	17d30000 	ldrbne	r0, [r3, r0]
   1f5e0:	0203000f 	andeq	r0, r3, #15
   1f5e4:	e3a03009 	mov	r3, #9
   1f5e8:	059f10b0 	ldreq	r1, [pc, #176]	; 1f6a0 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x344>
   1f5ec:	e1a03213 	lsl	r3, r3, r2
   1f5f0:	e0811100 	add	r1, r1, r0, lsl #2
   1f5f4:	e591c200 	ldr	ip, [r1, #512]	; 0x200
   1f5f8:	e0840102 	add	r0, r4, r2, lsl #2
   1f5fc:	e28c1001 	add	r1, ip, #1
   1f600:	e1a010c1 	asr	r1, r1, #1
   1f604:	e5801034 	str	r1, [r0, #52]	; 0x34
   1f608:	e580c028 	str	ip, [r0, #40]	; 0x28
   1f60c:	e5d41007 	ldrb	r1, [r4, #7]
   1f610:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
   1f614:	e1c33001 	bic	r3, r3, r1
   1f618:	e1833002 	orr	r3, r3, r2
   1f61c:	e5c43048 	strb	r3, [r4, #72]	; 0x48
   1f620:	eaffffa2 	b	1f4b0 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x154>
   1f624:	e3a01000 	mov	r1, #0
   1f628:	e3a06009 	mov	r6, #9
   1f62c:	e1a02001 	mov	r2, r1
   1f630:	e203300f 	and	r3, r3, #15
   1f634:	e59f8064 	ldr	r8, [pc, #100]	; 1f6a0 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x344>
   1f638:	e5c4300d 	strb	r3, [r4, #13]
   1f63c:	e5841050 	str	r1, [r4, #80]	; 0x50
   1f640:	e5841054 	str	r1, [r4, #84]	; 0x54
   1f644:	e284e008 	add	lr, r4, #8
   1f648:	e284c028 	add	ip, r4, #40	; 0x28
   1f64c:	e4de5001 	ldrb	r5, [lr], #1
   1f650:	e1a00216 	lsl	r0, r6, r2
   1f654:	e3150010 	tst	r5, #16
   1f658:	e2822001 	add	r2, r2, #1
   1f65c:	0a00000b 	beq	1f690 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x334>
   1f660:	e7d81283 	ldrb	r1, [r8, r3, lsl #5]
   1f664:	e0881101 	add	r1, r8, r1, lsl #2
   1f668:	e5911200 	ldr	r1, [r1, #512]	; 0x200
   1f66c:	e2815001 	add	r5, r1, #1
   1f670:	e1a050c5 	asr	r5, r5, #1
   1f674:	e58c1000 	str	r1, [ip]
   1f678:	e58c500c 	str	r5, [ip, #12]
   1f67c:	e5d45007 	ldrb	r5, [r4, #7]
   1f680:	e5d41048 	ldrb	r1, [r4, #72]	; 0x48
   1f684:	e1c00005 	bic	r0, r0, r5
   1f688:	e1800001 	orr	r0, r0, r1
   1f68c:	e5c40048 	strb	r0, [r4, #72]	; 0x48
   1f690:	e3520003 	cmp	r2, #3
   1f694:	e28cc004 	add	ip, ip, #4
   1f698:	1affffeb 	bne	1f64c <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x2f0>
   1f69c:	eaffff83 	b	1f4b0 <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)+0x154>
   1f6a0:	0003d9bc 	.word	0x0003d9bc

0001f6a4 <CAY8910::WrData8910(AY8910*, unsigned char)>:
   1f6a4:	e1a03002 	mov	r3, r2
   1f6a8:	e5d1204a 	ldrb	r2, [r1, #74]	; 0x4a
   1f6ac:	eaffff2a 	b	1f35c <CAY8910::Write8910(AY8910*, unsigned char, unsigned char)>

0001f6b0 <CAY8910::Loop8910(AY8910*, int)>:
   1f6b0:	e591304c 	ldr	r3, [r1, #76]	; 0x4c
   1f6b4:	e3530000 	cmp	r3, #0
   1f6b8:	012fff1e 	bxeq	lr
   1f6bc:	e591c050 	ldr	ip, [r1, #80]	; 0x50
   1f6c0:	e082200c 	add	r2, r2, ip
   1f6c4:	e1530002 	cmp	r3, r2
   1f6c8:	ca000033 	bgt	1f79c <CAY8910::Loop8910(AY8910*, int)+0xec>
   1f6cc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1f6d0:	e1a04001 	mov	r4, r1
   1f6d4:	e1a05000 	mov	r5, r0
   1f6d8:	e1a01003 	mov	r1, r3
   1f6dc:	e1a00002 	mov	r0, r2
   1f6e0:	eb005202 	bl	33ef0 <__aeabi_idivmod>
   1f6e4:	e5943054 	ldr	r3, [r4, #84]	; 0x54
   1f6e8:	e5841050 	str	r1, [r4, #80]	; 0x50
   1f6ec:	e0800003 	add	r0, r0, r3
   1f6f0:	e350001f 	cmp	r0, #31
   1f6f4:	e5840054 	str	r0, [r4, #84]	; 0x54
   1f6f8:	ca000029 	bgt	1f7a4 <CAY8910::Loop8910(AY8910*, int)+0xf4>
   1f6fc:	e3a03000 	mov	r3, #0
   1f700:	e3a06009 	mov	r6, #9
   1f704:	e59fe0b4 	ldr	lr, [pc, #180]	; 1f7c0 <CAY8910::Loop8910(AY8910*, int)+0x110>
   1f708:	e284c008 	add	ip, r4, #8
   1f70c:	e2841028 	add	r1, r4, #40	; 0x28
   1f710:	e4dc0001 	ldrb	r0, [ip], #1
   1f714:	e1a02316 	lsl	r2, r6, r3
   1f718:	e3100010 	tst	r0, #16
   1f71c:	e2833001 	add	r3, r3, #1
   1f720:	0a00000f 	beq	1f764 <CAY8910::Loop8910(AY8910*, int)+0xb4>
   1f724:	e5d4000d 	ldrb	r0, [r4, #13]
   1f728:	e5947054 	ldr	r7, [r4, #84]	; 0x54
   1f72c:	e200000f 	and	r0, r0, #15
   1f730:	e08e0280 	add	r0, lr, r0, lsl #5
   1f734:	e7d00007 	ldrb	r0, [r0, r7]
   1f738:	e08e0100 	add	r0, lr, r0, lsl #2
   1f73c:	e5907200 	ldr	r7, [r0, #512]	; 0x200
   1f740:	e2870001 	add	r0, r7, #1
   1f744:	e1a000c0 	asr	r0, r0, #1
   1f748:	e5817000 	str	r7, [r1]
   1f74c:	e581000c 	str	r0, [r1, #12]
   1f750:	e5d47007 	ldrb	r7, [r4, #7]
   1f754:	e5d40048 	ldrb	r0, [r4, #72]	; 0x48
   1f758:	e1c22007 	bic	r2, r2, r7
   1f75c:	e1822000 	orr	r2, r2, r0
   1f760:	e5c42048 	strb	r2, [r4, #72]	; 0x48
   1f764:	e3530003 	cmp	r3, #3
   1f768:	e2811004 	add	r1, r1, #4
   1f76c:	1affffe7 	bne	1f710 <CAY8910::Loop8910(AY8910*, int)+0x60>
   1f770:	e5d43049 	ldrb	r3, [r4, #73]	; 0x49
   1f774:	e3530000 	cmp	r3, #0
   1f778:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
   1f77c:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
   1f780:	e3530000 	cmp	r3, #0
   1f784:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   1f788:	e1a01004 	mov	r1, r4
   1f78c:	e1a00005 	mov	r0, r5
   1f790:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   1f794:	e3a02002 	mov	r2, #2
   1f798:	eafffec0 	b	1f2a0 <CAY8910::Sync8910(AY8910*, unsigned char)>
   1f79c:	e5812050 	str	r2, [r1, #80]	; 0x50
   1f7a0:	e12fff1e 	bx	lr
   1f7a4:	e5d4300d 	ldrb	r3, [r4, #13]
   1f7a8:	e2033009 	and	r3, r3, #9
   1f7ac:	e3530008 	cmp	r3, #8
   1f7b0:	13a0001f 	movne	r0, #31
   1f7b4:	0200001f 	andeq	r0, r0, #31
   1f7b8:	e5840054 	str	r0, [r4, #84]	; 0x54
   1f7bc:	eaffffce 	b	1f6fc <CAY8910::Loop8910(AY8910*, int)+0x4c>
   1f7c0:	0003d9bc 	.word	0x0003d9bc

0001f7c4 <CAY8910::SndQueueInit()>:
   1f7c4:	e92d4070 	push	{r4, r5, r6, lr}
   1f7c8:	e59f6054 	ldr	r6, [pc, #84]	; 1f824 <CAY8910::SndQueueInit()+0x60>
   1f7cc:	e1a05000 	mov	r5, r0
   1f7d0:	e5960000 	ldr	r0, [r6]
   1f7d4:	eb0051cb 	bl	33f08 <_lock_mutex_mmu>
   1f7d8:	eb0053fd 	bl	347d4 <CTimer::GetClockTicks()>
   1f7dc:	e3a04000 	mov	r4, #0
   1f7e0:	e59f3040 	ldr	r3, [pc, #64]	; 1f828 <CAY8910::SndQueueInit()+0x64>
   1f7e4:	e5860004 	str	r0, [r6, #4]
   1f7e8:	e5960000 	ldr	r0, [r6]
   1f7ec:	e5834004 	str	r4, [r3, #4]
   1f7f0:	e5834000 	str	r4, [r3]
   1f7f4:	eb0051cd 	bl	33f30 <_unlock_mutex_mmu>
   1f7f8:	e1a02004 	mov	r2, r4
   1f7fc:	e2853010 	add	r3, r5, #16
   1f800:	e2850028 	add	r0, r5, #40	; 0x28
   1f804:	e5931018 	ldr	r1, [r3, #24]
   1f808:	e3510000 	cmp	r1, #0
   1f80c:	15832018 	strne	r2, [r3, #24]
   1f810:	15832048 	strne	r2, [r3, #72]	; 0x48
   1f814:	e4832004 	str	r2, [r3], #4
   1f818:	e1530000 	cmp	r3, r0
   1f81c:	1afffff8 	bne	1f804 <CAY8910::SndQueueInit()+0x40>
   1f820:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f824:	0017707c 	.word	0x0017707c
   1f828:	00177088 	.word	0x00177088

0001f82c <CAY8910::CAY8910(CTimer*)>:
   1f82c:	e92d4070 	push	{r4, r5, r6, lr}
   1f830:	e1a04000 	mov	r4, r0
   1f834:	e1a05001 	mov	r5, r1
   1f838:	eb006d8e 	bl	3ae78 <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()>
   1f83c:	e3a03000 	mov	r3, #0
   1f840:	e59f201c 	ldr	r2, [pc, #28]	; 1f864 <CAY8910::CAY8910(CTimer*)+0x38>
   1f844:	e1a00004 	mov	r0, r4
   1f848:	e5845004 	str	r5, [r4, #4]
   1f84c:	e584200c 	str	r2, [r4, #12]
   1f850:	e5843008 	str	r3, [r4, #8]
   1f854:	e5843070 	str	r3, [r4, #112]	; 0x70
   1f858:	ebffffd9 	bl	1f7c4 <CAY8910::SndQueueInit()>
   1f85c:	e1a00004 	mov	r0, r4
   1f860:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f864:	0000ac44 	.word	0x0000ac44

0001f868 <CAY8910::SndEnqueue(int, int, int)>:
   1f868:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f86c:	e59f8090 	ldr	r8, [pc, #144]	; 1f904 <CAY8910::SndEnqueue(int, int, int)+0x9c>
   1f870:	e59f5090 	ldr	r5, [pc, #144]	; 1f908 <CAY8910::SndEnqueue(int, int, int)+0xa0>
   1f874:	e5980000 	ldr	r0, [r8]
   1f878:	e1a0a002 	mov	sl, r2
   1f87c:	e1a09003 	mov	r9, r3
   1f880:	e1a0b001 	mov	fp, r1
   1f884:	eb00519f 	bl	33f08 <_lock_mutex_mmu>
   1f888:	e5950000 	ldr	r0, [r5]
   1f88c:	e59f6078 	ldr	r6, [pc, #120]	; 1f90c <CAY8910::SndEnqueue(int, int, int)+0xa4>
   1f890:	e2803001 	add	r3, r0, #1
   1f894:	e0c76693 	smull	r6, r7, r3, r6
   1f898:	e1a04fc3 	asr	r4, r3, #31
   1f89c:	e0644347 	rsb	r4, r4, r7, asr #6
   1f8a0:	e0642284 	rsb	r2, r4, r4, lsl #5
   1f8a4:	e0844102 	add	r4, r4, r2, lsl #2
   1f8a8:	e5952004 	ldr	r2, [r5, #4]
   1f8ac:	e0434184 	sub	r4, r3, r4, lsl #3
   1f8b0:	e1520004 	cmp	r2, r4
   1f8b4:	0a00000e 	beq	1f8f4 <CAY8910::SndEnqueue(int, int, int)+0x8c>
   1f8b8:	e0850200 	add	r0, r5, r0, lsl #4
   1f8bc:	e580b008 	str	fp, [r0, #8]
   1f8c0:	e580a00c 	str	sl, [r0, #12]
   1f8c4:	e7859203 	str	r9, [r5, r3, lsl #4]
   1f8c8:	eb0053c1 	bl	347d4 <CTimer::GetClockTicks()>
   1f8cc:	e5953000 	ldr	r3, [r5]
   1f8d0:	e5982004 	ldr	r2, [r8, #4]
   1f8d4:	e0853203 	add	r3, r5, r3, lsl #4
   1f8d8:	e0402002 	sub	r2, r0, r2
   1f8dc:	e5832014 	str	r2, [r3, #20]
   1f8e0:	e5980000 	ldr	r0, [r8]
   1f8e4:	e5854000 	str	r4, [r5]
   1f8e8:	eb005190 	bl	33f30 <_unlock_mutex_mmu>
   1f8ec:	e3a00001 	mov	r0, #1
   1f8f0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f8f4:	e5980000 	ldr	r0, [r8]
   1f8f8:	eb00518c 	bl	33f30 <_unlock_mutex_mmu>
   1f8fc:	e3a00000 	mov	r0, #0
   1f900:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f904:	0017707c 	.word	0x0017707c
   1f908:	00177088 	.word	0x00177088
   1f90c:	10624dd3 	.word	0x10624dd3

0001f910 <CAY8910::SndDequeue()>:
   1f910:	e92d4070 	push	{r4, r5, r6, lr}
   1f914:	e59f605c 	ldr	r6, [pc, #92]	; 1f978 <CAY8910::SndDequeue()+0x68>
   1f918:	e59f405c 	ldr	r4, [pc, #92]	; 1f97c <CAY8910::SndDequeue()+0x6c>
   1f91c:	e5960000 	ldr	r0, [r6]
   1f920:	eb005178 	bl	33f08 <_lock_mutex_mmu>
   1f924:	e8940028 	ldm	r4, {r3, r5}
   1f928:	e1530005 	cmp	r3, r5
   1f92c:	0a00000d 	beq	1f968 <CAY8910::SndDequeue()+0x58>
   1f930:	e59f0048 	ldr	r0, [pc, #72]	; 1f980 <CAY8910::SndDequeue()+0x70>
   1f934:	e2852001 	add	r2, r5, #1
   1f938:	e0c10092 	smull	r0, r1, r2, r0
   1f93c:	e1a03fc2 	asr	r3, r2, #31
   1f940:	e0633341 	rsb	r3, r3, r1, asr #6
   1f944:	e0631283 	rsb	r1, r3, r3, lsl #5
   1f948:	e0833101 	add	r3, r3, r1, lsl #2
   1f94c:	e5960000 	ldr	r0, [r6]
   1f950:	e0423183 	sub	r3, r2, r3, lsl #3
   1f954:	e5843004 	str	r3, [r4, #4]
   1f958:	eb005174 	bl	33f30 <_unlock_mutex_mmu>
   1f95c:	e0840205 	add	r0, r4, r5, lsl #4
   1f960:	e2800008 	add	r0, r0, #8
   1f964:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f968:	e5960000 	ldr	r0, [r6]
   1f96c:	eb00516f 	bl	33f30 <_unlock_mutex_mmu>
   1f970:	e3a00000 	mov	r0, #0
   1f974:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f978:	0017707c 	.word	0x0017707c
   1f97c:	00177088 	.word	0x00177088
   1f980:	10624dd3 	.word	0x10624dd3

0001f984 <CAY8910::Sound(int, int, int)>:
   1f984:	e3520000 	cmp	r2, #0
   1f988:	e92d4070 	push	{r4, r5, r6, lr}
   1f98c:	e1a04000 	mov	r4, r0
   1f990:	e1a06001 	mov	r6, r1
   1f994:	e1a05003 	mov	r5, r3
   1f998:	0a000003 	beq	1f9ac <CAY8910::Sound(int, int, int)+0x28>
   1f99c:	e1a01002 	mov	r1, r2
   1f9a0:	e590000c 	ldr	r0, [r0, #12]
   1f9a4:	eb005150 	bl	33eec <__aeabi_idiv>
   1f9a8:	e1a02000 	mov	r2, r0
   1f9ac:	e0841106 	add	r1, r4, r6, lsl #2
   1f9b0:	e5913028 	ldr	r3, [r1, #40]	; 0x28
   1f9b4:	e1530002 	cmp	r3, r2
   1f9b8:	13a03000 	movne	r3, #0
   1f9bc:	15812028 	strne	r2, [r1, #40]	; 0x28
   1f9c0:	15813058 	strne	r3, [r1, #88]	; 0x58
   1f9c4:	e3520000 	cmp	r2, #0
   1f9c8:	10855105 	addne	r5, r5, r5, lsl #2
   1f9cc:	10855105 	addne	r5, r5, r5, lsl #2
   1f9d0:	11a05185 	lslne	r5, r5, #3
   1f9d4:	05812010 	streq	r2, [r1, #16]
   1f9d8:	15815010 	strne	r5, [r1, #16]
   1f9dc:	e8bd8070 	pop	{r4, r5, r6, pc}

0001f9e0 <CAY8910::DSPCallBack(unsigned int*, int)>:
   1f9e0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f9e4:	e3520000 	cmp	r2, #0
   1f9e8:	e24dd01c 	sub	sp, sp, #28
   1f9ec:	e1a05000 	mov	r5, r0
   1f9f0:	d59fb308 	ldrle	fp, [pc, #776]	; 1fd00 <CAY8910::DSPCallBack(unsigned int*, int)+0x320>
   1f9f4:	da000088 	ble	1fc1c <CAY8910::DSPCallBack(unsigned int*, int)+0x23c>
   1f9f8:	e3a06000 	mov	r6, #0
   1f9fc:	e2423001 	sub	r3, r2, #1
   1fa00:	e1a030a3 	lsr	r3, r3, #1
   1fa04:	e2833001 	add	r3, r3, #1
   1fa08:	e0632283 	rsb	r2, r3, r3, lsl #5
   1fa0c:	e0833102 	add	r3, r3, r2, lsl #2
   1fa10:	e1a03103 	lsl	r3, r3, #2
   1fa14:	e58d300c 	str	r3, [sp, #12]
   1fa18:	e2803010 	add	r3, r0, #16
   1fa1c:	e58d3010 	str	r3, [sp, #16]
   1fa20:	e59fa2dc 	ldr	sl, [pc, #732]	; 1fd04 <CAY8910::DSPCallBack(unsigned int*, int)+0x324>
   1fa24:	e280301c 	add	r3, r0, #28
   1fa28:	e59fb2d0 	ldr	fp, [pc, #720]	; 1fd00 <CAY8910::DSPCallBack(unsigned int*, int)+0x320>
   1fa2c:	e58d6000 	str	r6, [sp]
   1fa30:	e58d1004 	str	r1, [sp, #4]
   1fa34:	e2808028 	add	r8, r0, #40	; 0x28
   1fa38:	e58d3014 	str	r3, [sp, #20]
   1fa3c:	e1ca20d0 	ldrd	r2, [sl]
   1fa40:	e1520003 	cmp	r2, r3
   1fa44:	0a00002c 	beq	1fafc <CAY8910::DSPCallBack(unsigned int*, int)+0x11c>
   1fa48:	e08a3203 	add	r3, sl, r3, lsl #4
   1fa4c:	e5933014 	ldr	r3, [r3, #20]
   1fa50:	e3730001 	cmn	r3, #1
   1fa54:	e58d3008 	str	r3, [sp, #8]
   1fa58:	0a000027 	beq	1fafc <CAY8910::DSPCallBack(unsigned int*, int)+0x11c>
   1fa5c:	e595100c 	ldr	r1, [r5, #12]
   1fa60:	e59d0000 	ldr	r0, [sp]
   1fa64:	eb005120 	bl	33eec <__aeabi_idiv>
   1fa68:	e59d3008 	ldr	r3, [sp, #8]
   1fa6c:	e1a04000 	mov	r4, r0
   1fa70:	e0403003 	sub	r3, r0, r3
   1fa74:	e3530000 	cmp	r3, #0
   1fa78:	ca000006 	bgt	1fa98 <CAY8910::DSPCallBack(unsigned int*, int)+0xb8>
   1fa7c:	ea00001e 	b	1fafc <CAY8910::DSPCallBack(unsigned int*, int)+0x11c>
   1fa80:	e5913014 	ldr	r3, [r1, #20]
   1fa84:	e3730001 	cmn	r3, #1
   1fa88:	e0442003 	sub	r2, r4, r3
   1fa8c:	0a00001a 	beq	1fafc <CAY8910::DSPCallBack(unsigned int*, int)+0x11c>
   1fa90:	e3520000 	cmp	r2, #0
   1fa94:	da000018 	ble	1fafc <CAY8910::DSPCallBack(unsigned int*, int)+0x11c>
   1fa98:	e1a00005 	mov	r0, r5
   1fa9c:	ebffff9b 	bl	1f910 <CAY8910::SndDequeue()>
   1faa0:	e5901004 	ldr	r1, [r0, #4]
   1faa4:	e5909000 	ldr	r9, [r0]
   1faa8:	e3510000 	cmp	r1, #0
   1faac:	e5907008 	ldr	r7, [r0, #8]
   1fab0:	0a000002 	beq	1fac0 <CAY8910::DSPCallBack(unsigned int*, int)+0xe0>
   1fab4:	e595000c 	ldr	r0, [r5, #12]
   1fab8:	eb00510b 	bl	33eec <__aeabi_idiv>
   1fabc:	e1a01000 	mov	r1, r0
   1fac0:	e0853109 	add	r3, r5, r9, lsl #2
   1fac4:	e5932028 	ldr	r2, [r3, #40]	; 0x28
   1fac8:	e0877107 	add	r7, r7, r7, lsl #2
   1facc:	e1520001 	cmp	r2, r1
   1fad0:	15831028 	strne	r1, [r3, #40]	; 0x28
   1fad4:	15836058 	strne	r6, [r3, #88]	; 0x58
   1fad8:	e3510000 	cmp	r1, #0
   1fadc:	10877107 	addne	r7, r7, r7, lsl #2
   1fae0:	11a07187 	lslne	r7, r7, #3
   1fae4:	05831010 	streq	r1, [r3, #16]
   1fae8:	15837010 	strne	r7, [r3, #16]
   1faec:	e1ca20d0 	ldrd	r2, [sl]
   1faf0:	e1520003 	cmp	r2, r3
   1faf4:	e08a1203 	add	r1, sl, r3, lsl #4
   1faf8:	1affffe0 	bne	1fa80 <CAY8910::DSPCallBack(unsigned int*, int)+0xa0>
   1fafc:	e3a0e000 	mov	lr, #0
   1fb00:	e1a0000e 	mov	r0, lr
   1fb04:	e59d4010 	ldr	r4, [sp, #16]
   1fb08:	e58b6008 	str	r6, [fp, #8]
   1fb0c:	e5943018 	ldr	r3, [r4, #24]
   1fb10:	e3530000 	cmp	r3, #0
   1fb14:	0a00000f 	beq	1fb58 <CAY8910::DSPCallBack(unsigned int*, int)+0x178>
   1fb18:	e5941000 	ldr	r1, [r4]
   1fb1c:	e083cfa3 	add	ip, r3, r3, lsr #31
   1fb20:	e3510000 	cmp	r1, #0
   1fb24:	0a00000b 	beq	1fb58 <CAY8910::DSPCallBack(unsigned int*, int)+0x178>
   1fb28:	e5942048 	ldr	r2, [r4, #72]	; 0x48
   1fb2c:	e15200cc 	cmp	r2, ip, asr #1
   1fb30:	aa000056 	bge	1fc90 <CAY8910::DSPCallBack(unsigned int*, int)+0x2b0>
   1fb34:	e0800001 	add	r0, r0, r1
   1fb38:	e59f11c8 	ldr	r1, [pc, #456]	; 1fd08 <CAY8910::DSPCallBack(unsigned int*, int)+0x328>
   1fb3c:	e3a0e001 	mov	lr, #1
   1fb40:	e1500001 	cmp	r0, r1
   1fb44:	a1a00001 	movge	r0, r1
   1fb48:	e2822001 	add	r2, r2, #1
   1fb4c:	e1530002 	cmp	r3, r2
   1fb50:	d1a02006 	movle	r2, r6
   1fb54:	e5842048 	str	r2, [r4, #72]	; 0x48
   1fb58:	e2844004 	add	r4, r4, #4
   1fb5c:	e1540008 	cmp	r4, r8
   1fb60:	1affffe9 	bne	1fb0c <CAY8910::DSPCallBack(unsigned int*, int)+0x12c>
   1fb64:	e59d3014 	ldr	r3, [sp, #20]
   1fb68:	e35e0000 	cmp	lr, #0
   1fb6c:	e1a07003 	mov	r7, r3
   1fb70:	158b0008 	strne	r0, [fp, #8]
   1fb74:	e5979018 	ldr	r9, [r7, #24]
   1fb78:	e3590000 	cmp	r9, #0
   1fb7c:	0a000014 	beq	1fbd4 <CAY8910::DSPCallBack(unsigned int*, int)+0x1f4>
   1fb80:	e5973000 	ldr	r3, [r7]
   1fb84:	e3530000 	cmp	r3, #0
   1fb88:	0a000011 	beq	1fbd4 <CAY8910::DSPCallBack(unsigned int*, int)+0x1f4>
   1fb8c:	e5973048 	ldr	r3, [r7, #72]	; 0x48
   1fb90:	e3530000 	cmp	r3, #0
   1fb94:	0a00004f 	beq	1fcd8 <CAY8910::DSPCallBack(unsigned int*, int)+0x2f8>
   1fb98:	e5979030 	ldr	r9, [r7, #48]	; 0x30
   1fb9c:	e0892fa9 	add	r2, r9, r9, lsr #31
   1fba0:	e15300c2 	cmp	r3, r2, asr #1
   1fba4:	aa000041 	bge	1fcb0 <CAY8910::DSPCallBack(unsigned int*, int)+0x2d0>
   1fba8:	e59b1008 	ldr	r1, [fp, #8]
   1fbac:	e5972000 	ldr	r2, [r7]
   1fbb0:	e0822001 	add	r2, r2, r1
   1fbb4:	e59f114c 	ldr	r1, [pc, #332]	; 1fd08 <CAY8910::DSPCallBack(unsigned int*, int)+0x328>
   1fbb8:	e1520001 	cmp	r2, r1
   1fbbc:	a1a02001 	movge	r2, r1
   1fbc0:	e58b2008 	str	r2, [fp, #8]
   1fbc4:	e2833001 	add	r3, r3, #1
   1fbc8:	e1530009 	cmp	r3, r9
   1fbcc:	a1a03006 	movge	r3, r6
   1fbd0:	e5873048 	str	r3, [r7, #72]	; 0x48
   1fbd4:	e2877004 	add	r7, r7, #4
   1fbd8:	e1540007 	cmp	r4, r7
   1fbdc:	1affffe4 	bne	1fb74 <CAY8910::DSPCallBack(unsigned int*, int)+0x194>
   1fbe0:	e59d2000 	ldr	r2, [sp]
   1fbe4:	e59b3008 	ldr	r3, [fp, #8]
   1fbe8:	e59d100c 	ldr	r1, [sp, #12]
   1fbec:	e2822f7d 	add	r2, r2, #500	; 0x1f4
   1fbf0:	e2833702 	add	r3, r3, #524288	; 0x80000
   1fbf4:	e58d2000 	str	r2, [sp]
   1fbf8:	e1510002 	cmp	r1, r2
   1fbfc:	e3c334ff 	bic	r3, r3, #-16777216	; 0xff000000
   1fc00:	e59d2004 	ldr	r2, [sp, #4]
   1fc04:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000
   1fc08:	e5823000 	str	r3, [r2]
   1fc0c:	e5823004 	str	r3, [r2, #4]
   1fc10:	e2823008 	add	r3, r2, #8
   1fc14:	e58d3004 	str	r3, [sp, #4]
   1fc18:	1affff87 	bne	1fa3c <CAY8910::DSPCallBack(unsigned int*, int)+0x5c>
   1fc1c:	eb0052ec 	bl	347d4 <CTimer::GetClockTicks()>
   1fc20:	e3a06000 	mov	r6, #0
   1fc24:	e58b0004 	str	r0, [fp, #4]
   1fc28:	ea000012 	b	1fc78 <CAY8910::DSPCallBack(unsigned int*, int)+0x298>
   1fc2c:	e5901004 	ldr	r1, [r0, #4]
   1fc30:	e5907000 	ldr	r7, [r0]
   1fc34:	e3510000 	cmp	r1, #0
   1fc38:	e5904008 	ldr	r4, [r0, #8]
   1fc3c:	0a000002 	beq	1fc4c <CAY8910::DSPCallBack(unsigned int*, int)+0x26c>
   1fc40:	e595000c 	ldr	r0, [r5, #12]
   1fc44:	eb0050a8 	bl	33eec <__aeabi_idiv>
   1fc48:	e1a01000 	mov	r1, r0
   1fc4c:	e0853107 	add	r3, r5, r7, lsl #2
   1fc50:	e5932028 	ldr	r2, [r3, #40]	; 0x28
   1fc54:	e0844104 	add	r4, r4, r4, lsl #2
   1fc58:	e1520001 	cmp	r2, r1
   1fc5c:	e0844104 	add	r4, r4, r4, lsl #2
   1fc60:	e1a04184 	lsl	r4, r4, #3
   1fc64:	15831028 	strne	r1, [r3, #40]	; 0x28
   1fc68:	15836058 	strne	r6, [r3, #88]	; 0x58
   1fc6c:	e3510000 	cmp	r1, #0
   1fc70:	05831010 	streq	r1, [r3, #16]
   1fc74:	15834010 	strne	r4, [r3, #16]
   1fc78:	e1a00005 	mov	r0, r5
   1fc7c:	ebffff23 	bl	1f910 <CAY8910::SndDequeue()>
   1fc80:	e3500000 	cmp	r0, #0
   1fc84:	1affffe8 	bne	1fc2c <CAY8910::DSPCallBack(unsigned int*, int)+0x24c>
   1fc88:	e28dd01c 	add	sp, sp, #28
   1fc8c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc90:	e1530002 	cmp	r3, r2
   1fc94:	daffffab 	ble	1fb48 <CAY8910::DSPCallBack(unsigned int*, int)+0x168>
   1fc98:	e0400001 	sub	r0, r0, r1
   1fc9c:	e59f1068 	ldr	r1, [pc, #104]	; 1fd0c <CAY8910::DSPCallBack(unsigned int*, int)+0x32c>
   1fca0:	e3700902 	cmn	r0, #32768	; 0x8000
   1fca4:	b1a00001 	movlt	r0, r1
   1fca8:	e3a0e001 	mov	lr, #1
   1fcac:	eaffffa5 	b	1fb48 <CAY8910::DSPCallBack(unsigned int*, int)+0x168>
   1fcb0:	e1530009 	cmp	r3, r9
   1fcb4:	aaffffc2 	bge	1fbc4 <CAY8910::DSPCallBack(unsigned int*, int)+0x1e4>
   1fcb8:	e59b2008 	ldr	r2, [fp, #8]
   1fcbc:	e5971000 	ldr	r1, [r7]
   1fcc0:	e0422001 	sub	r2, r2, r1
   1fcc4:	e59f1040 	ldr	r1, [pc, #64]	; 1fd0c <CAY8910::DSPCallBack(unsigned int*, int)+0x32c>
   1fcc8:	e3720902 	cmn	r2, #32768	; 0x8000
   1fccc:	b1a02001 	movlt	r2, r1
   1fcd0:	e58b2008 	str	r2, [fp, #8]
   1fcd4:	eaffffba 	b	1fbc4 <CAY8910::DSPCallBack(unsigned int*, int)+0x1e4>
   1fcd8:	e1a00005 	mov	r0, r5
   1fcdc:	eb006c85 	bl	3aef8 <CBcmRandomNumberGenerator::GetNumber()>
   1fce0:	e0800100 	add	r0, r0, r0, lsl #2
   1fce4:	e0600200 	rsb	r0, r0, r0, lsl #4
   1fce8:	e1a00080 	lsl	r0, r0, #1
   1fcec:	e249904b 	sub	r9, r9, #75	; 0x4b
   1fcf0:	e0899fa0 	add	r9, r9, r0, lsr #31
   1fcf4:	e5973048 	ldr	r3, [r7, #72]	; 0x48
   1fcf8:	e5879030 	str	r9, [r7, #48]	; 0x30
   1fcfc:	eaffffa6 	b	1fb9c <CAY8910::DSPCallBack(unsigned int*, int)+0x1bc>
   1fd00:	0017707c 	.word	0x0017707c
   1fd04:	00177088 	.word	0x00177088
   1fd08:	00007fff 	.word	0x00007fff
   1fd0c:	ffff8000 	.word	0xffff8000

0001fd10 <CAY8910::SetSound(int, int)>:
   1fd10:	e12fff1e 	bx	lr

0001fd14 <CPWMSound::~CPWMSound()>:
   1fd14:	e92d4010 	push	{r4, lr}
   1fd18:	e1a04000 	mov	r4, r0
   1fd1c:	e59f3014 	ldr	r3, [pc, #20]	; 1fd38 <CPWMSound::~CPWMSound()+0x24>
   1fd20:	e48030a8 	str	r3, [r0], #168	; 0xa8
   1fd24:	eb006c72 	bl	3aef4 <CBcmRandomNumberGenerator::~CBcmRandomNumberGenerator()>
   1fd28:	e1a00004 	mov	r0, r4
   1fd2c:	eb006a7f 	bl	3a730 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()>
   1fd30:	e1a00004 	mov	r0, r4
   1fd34:	e8bd8010 	pop	{r4, pc}
   1fd38:	0003dc04 	.word	0x0003dc04

0001fd3c <CPWMSound::~CPWMSound()>:
   1fd3c:	e92d4010 	push	{r4, lr}
   1fd40:	e1a04000 	mov	r4, r0
   1fd44:	e59f3020 	ldr	r3, [pc, #32]	; 1fd6c <CPWMSound::~CPWMSound()+0x30>
   1fd48:	e48030a8 	str	r3, [r0], #168	; 0xa8
   1fd4c:	eb006c68 	bl	3aef4 <CBcmRandomNumberGenerator::~CBcmRandomNumberGenerator()>
   1fd50:	e1a00004 	mov	r0, r4
   1fd54:	eb006a75 	bl	3a730 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()>
   1fd58:	e1a00004 	mov	r0, r4
   1fd5c:	e3a010ac 	mov	r1, #172	; 0xac
   1fd60:	eb005170 	bl	34328 <operator delete(void*, unsigned int)>
   1fd64:	e1a00004 	mov	r0, r4
   1fd68:	e8bd8010 	pop	{r4, pc}
   1fd6c:	0003dc04 	.word	0x0003dc04

0001fd70 <CPWMSound::GetChunk(unsigned int*, unsigned int)>:
   1fd70:	e92d4070 	push	{r4, r5, r6, lr}
   1fd74:	e2516000 	subs	r6, r1, #0
   1fd78:	e1a05000 	mov	r5, r0
   1fd7c:	e1a04002 	mov	r4, r2
   1fd80:	0a000012 	beq	1fdd0 <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x60>
   1fd84:	e3540000 	cmp	r4, #0
   1fd88:	0a00000b 	beq	1fdbc <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x4c>
   1fd8c:	e3140001 	tst	r4, #1
   1fd90:	0a000003 	beq	1fda4 <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x34>
   1fd94:	e3a02048 	mov	r2, #72	; 0x48
   1fd98:	e59f1044 	ldr	r1, [pc, #68]	; 1fde4 <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x74>
   1fd9c:	e59f0044 	ldr	r0, [pc, #68]	; 1fde8 <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x78>
   1fda0:	eb005c76 	bl	36f80 <assertion_failed>
   1fda4:	e1a01006 	mov	r1, r6
   1fda8:	e595008c 	ldr	r0, [r5, #140]	; 0x8c
   1fdac:	e1a02004 	mov	r2, r4
   1fdb0:	ebffa1c4 	bl	84c8 <CKernel::dspcallback(unsigned int*, int)>
   1fdb4:	e1a00004 	mov	r0, r4
   1fdb8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1fdbc:	e3a02047 	mov	r2, #71	; 0x47
   1fdc0:	e59f101c 	ldr	r1, [pc, #28]	; 1fde4 <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x74>
   1fdc4:	e59f0020 	ldr	r0, [pc, #32]	; 1fdec <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x7c>
   1fdc8:	eb005c6c 	bl	36f80 <assertion_failed>
   1fdcc:	eafffff4 	b	1fda4 <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x34>
   1fdd0:	e3a02046 	mov	r2, #70	; 0x46
   1fdd4:	e59f1008 	ldr	r1, [pc, #8]	; 1fde4 <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x74>
   1fdd8:	e59f0010 	ldr	r0, [pc, #16]	; 1fdf0 <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x80>
   1fddc:	eb005c67 	bl	36f80 <assertion_failed>
   1fde0:	eaffffe7 	b	1fd84 <CPWMSound::GetChunk(unsigned int*, unsigned int)+0x14>
   1fde4:	0003dc10 	.word	0x0003dc10
   1fde8:	0003dc30 	.word	0x0003dc30
   1fdec:	0003dc20 	.word	0x0003dc20
   1fdf0:	0004b104 	.word	0x0004b104

0001fdf4 <CPWMSound::CPWMSound(CInterruptSystem*)>:
   1fdf4:	e92d4010 	push	{r4, lr}
   1fdf8:	e3a03b02 	mov	r3, #2048	; 0x800
   1fdfc:	e59f2054 	ldr	r2, [pc, #84]	; 1fe58 <CPWMSound::CPWMSound(CInterruptSystem*)+0x64>
   1fe00:	e1a04000 	mov	r4, r0
   1fe04:	eb0069d5 	bl	3a560 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)>
   1fe08:	e3a02000 	mov	r2, #0
   1fe0c:	e59f3048 	ldr	r3, [pc, #72]	; 1fe5c <CPWMSound::CPWMSound(CInterruptSystem*)+0x68>
   1fe10:	e5842090 	str	r2, [r4, #144]	; 0x90
   1fe14:	e5843000 	str	r3, [r4]
   1fe18:	e28400a8 	add	r0, r4, #168	; 0xa8
   1fe1c:	eb006c15 	bl	3ae78 <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()>
   1fe20:	e1a00004 	mov	r0, r4
   1fe24:	eb006821 	bl	39eb0 <CPWMSoundBaseDevice::GetRange() const>
   1fe28:	e3500a01 	cmp	r0, #4096	; 0x1000
   1fe2c:	3a000003 	bcc	1fe40 <CPWMSound::CPWMSound(CInterruptSystem*)+0x4c>
   1fe30:	e1a00004 	mov	r0, r4
   1fe34:	eb00681d 	bl	39eb0 <CPWMSoundBaseDevice::GetRange() const>
   1fe38:	e3500a02 	cmp	r0, #8192	; 0x2000
   1fe3c:	3a000003 	bcc	1fe50 <CPWMSound::CPWMSound(CInterruptSystem*)+0x5c>
   1fe40:	e3a02023 	mov	r2, #35	; 0x23
   1fe44:	e59f1014 	ldr	r1, [pc, #20]	; 1fe60 <CPWMSound::CPWMSound(CInterruptSystem*)+0x6c>
   1fe48:	e59f0014 	ldr	r0, [pc, #20]	; 1fe64 <CPWMSound::CPWMSound(CInterruptSystem*)+0x70>
   1fe4c:	eb005c4b 	bl	36f80 <assertion_failed>
   1fe50:	e1a00004 	mov	r0, r4
   1fe54:	e8bd8010 	pop	{r4, pc}
   1fe58:	0000ac44 	.word	0x0000ac44
   1fe5c:	0003dc04 	.word	0x0003dc04
   1fe60:	0003dc10 	.word	0x0003dc10
   1fe64:	0003dc48 	.word	0x0003dc48

0001fe68 <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)>:
   1fe68:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1fe6c:	e59d6018 	ldr	r6, [sp, #24]
   1fe70:	e1a05001 	mov	r5, r1
   1fe74:	e1a08002 	mov	r8, r2
   1fe78:	e1a07003 	mov	r7, r3
   1fe7c:	e1a04000 	mov	r4, r0
   1fe80:	eb006822 	bl	39f10 <CPWMSoundBaseDevice::IsActive() const>
   1fe84:	e3500000 	cmp	r0, #0
   1fe88:	1a000018 	bne	1fef0 <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0x88>
   1fe8c:	e3550000 	cmp	r5, #0
   1fe90:	0a00001c 	beq	1ff08 <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0xa0>
   1fe94:	e2473001 	sub	r3, r7, #1
   1fe98:	e3530001 	cmp	r3, #1
   1fe9c:	9a000003 	bls	1feb0 <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0x48>
   1fea0:	e3a0202f 	mov	r2, #47	; 0x2f
   1fea4:	e59f1070 	ldr	r1, [pc, #112]	; 1ff1c <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0xb4>
   1fea8:	e59f0070 	ldr	r0, [pc, #112]	; 1ff20 <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0xb8>
   1feac:	eb005c33 	bl	36f80 <assertion_failed>
   1feb0:	e2463008 	sub	r3, r6, #8
   1feb4:	e3d33008 	bics	r3, r3, #8
   1feb8:	0a000003 	beq	1fecc <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0x64>
   1febc:	e3a02030 	mov	r2, #48	; 0x30
   1fec0:	e59f1054 	ldr	r1, [pc, #84]	; 1ff1c <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0xb4>
   1fec4:	e59f0058 	ldr	r0, [pc, #88]	; 1ff24 <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0xbc>
   1fec8:	eb005c2c 	bl	36f80 <assertion_failed>
   1fecc:	e5845090 	str	r5, [r4, #144]	; 0x90
   1fed0:	e58450a4 	str	r5, [r4, #164]	; 0xa4
   1fed4:	e5848094 	str	r8, [r4, #148]	; 0x94
   1fed8:	e58480a0 	str	r8, [r4, #160]	; 0xa0
   1fedc:	e5847098 	str	r7, [r4, #152]	; 0x98
   1fee0:	e584609c 	str	r6, [r4, #156]	; 0x9c
   1fee4:	e1a00004 	mov	r0, r4
   1fee8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   1feec:	ea006851 	b	3a038 <CPWMSoundBaseDevice::Start()>
   1fef0:	e3a0202c 	mov	r2, #44	; 0x2c
   1fef4:	e59f1020 	ldr	r1, [pc, #32]	; 1ff1c <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0xb4>
   1fef8:	e59f0028 	ldr	r0, [pc, #40]	; 1ff28 <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0xc0>
   1fefc:	eb005c1f 	bl	36f80 <assertion_failed>
   1ff00:	e3550000 	cmp	r5, #0
   1ff04:	1affffe2 	bne	1fe94 <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0x2c>
   1ff08:	e3a0202e 	mov	r2, #46	; 0x2e
   1ff0c:	e59f1008 	ldr	r1, [pc, #8]	; 1ff1c <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0xb4>
   1ff10:	e59f0014 	ldr	r0, [pc, #20]	; 1ff2c <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0xc4>
   1ff14:	eb005c19 	bl	36f80 <assertion_failed>
   1ff18:	eaffffdd 	b	1fe94 <CPWMSound::Playback(void*, unsigned int, unsigned int, unsigned int)+0x2c>
   1ff1c:	0003dc10 	.word	0x0003dc10
   1ff20:	0003dc9c 	.word	0x0003dc9c
   1ff24:	0003dcc0 	.word	0x0003dcc0
   1ff28:	0003dc7c 	.word	0x0003dc7c
   1ff2c:	0003dc8c 	.word	0x0003dc8c

0001ff30 <CPWMSound::PlaybackActive() const>:
   1ff30:	ea0067f6 	b	39f10 <CPWMSoundBaseDevice::IsActive() const>

0001ff34 <CPWMSound::CancelPlayback()>:
   1ff34:	ea0067df 	b	39eb8 <CPWMSoundBaseDevice::Cancel()>

0001ff38 <CCassWindow::Callback(UG_MESSAGE*)>:
   1ff38:	e12fff1e 	bx	lr

0001ff3c <CCassWindow::CCassWindow(short, short)>:
   1ff3c:	e92d4070 	push	{r4, r5, r6, lr}
   1ff40:	e1a04000 	mov	r4, r0
   1ff44:	e1a06001 	mov	r6, r1
   1ff48:	e1a05002 	mov	r5, r2
   1ff4c:	e24dd010 	sub	sp, sp, #16
   1ff50:	e59f30d0 	ldr	r3, [pc, #208]	; 20028 <CCassWindow::CCassWindow(short, short)+0xec>
   1ff54:	e3a02001 	mov	r2, #1
   1ff58:	e280103c 	add	r1, r0, #60	; 0x3c
   1ff5c:	eb0008b2 	bl	2222c <UG_WindowCreate>
   1ff60:	e1a00004 	mov	r0, r4
   1ff64:	e3a01000 	mov	r1, #0
   1ff68:	eb000a70 	bl	22930 <UG_WindowSetStyle>
   1ff6c:	e2863f4a 	add	r3, r6, #296	; 0x128
   1ff70:	e2852013 	add	r2, r5, #19
   1ff74:	e6bf2072 	sxth	r2, r2
   1ff78:	e2833003 	add	r3, r3, #3
   1ff7c:	e1a01006 	mov	r1, r6
   1ff80:	e58d2000 	str	r2, [sp]
   1ff84:	e6bf3073 	sxth	r3, r3
   1ff88:	e1a02005 	mov	r2, r5
   1ff8c:	e1a00004 	mov	r0, r4
   1ff90:	eb0008f8 	bl	22378 <UG_WindowResize>
   1ff94:	e3a05005 	mov	r5, #5
   1ff98:	e3a02019 	mov	r2, #25
   1ff9c:	e3a03095 	mov	r3, #149	; 0x95
   1ffa0:	e284102c 	add	r1, r4, #44	; 0x2c
   1ffa4:	e58d2008 	str	r2, [sp, #8]
   1ffa8:	e58d3004 	str	r3, [sp, #4]
   1ffac:	e1a00004 	mov	r0, r4
   1ffb0:	e1a03005 	mov	r3, r5
   1ffb4:	e58d5000 	str	r5, [sp]
   1ffb8:	e3a02000 	mov	r2, #0
   1ffbc:	eb0015c7 	bl	256e0 <UG_TextboxCreate>
   1ffc0:	e1a00004 	mov	r0, r4
   1ffc4:	e59f2060 	ldr	r2, [pc, #96]	; 2002c <CCassWindow::CCassWindow(short, short)+0xf0>
   1ffc8:	e3a01000 	mov	r1, #0
   1ffcc:	eb0016a1 	bl	25a58 <UG_TextboxSetFont>
   1ffd0:	e1a00004 	mov	r0, r4
   1ffd4:	e59f2054 	ldr	r2, [pc, #84]	; 20030 <CCassWindow::CCassWindow(short, short)+0xf4>
   1ffd8:	e3a01000 	mov	r1, #0
   1ffdc:	eb00167e 	bl	259dc <UG_TextboxSetText>
   1ffe0:	e1a02005 	mov	r2, r5
   1ffe4:	e1a00004 	mov	r0, r4
   1ffe8:	e3a01000 	mov	r1, #0
   1ffec:	eb00165b 	bl	25960 <UG_TextboxSetBackColor>
   1fff0:	e3a02000 	mov	r2, #0
   1fff4:	e1a00004 	mov	r0, r4
   1fff8:	e1a01002 	mov	r1, r2
   1fffc:	eb001638 	bl	258e4 <UG_TextboxSetForeColor>
   20000:	e3a02012 	mov	r2, #18
   20004:	e3a01000 	mov	r1, #0
   20008:	e1a00004 	mov	r0, r4
   2000c:	eb0016ee 	bl	25bcc <UG_TextboxSetAlignment>
   20010:	e1a00004 	mov	r0, r4
   20014:	eb0008cb 	bl	22348 <UG_WindowShow>
   20018:	eb000f02 	bl	23c28 <UG_Update>
   2001c:	e1a00004 	mov	r0, r4
   20020:	e28dd010 	add	sp, sp, #16
   20024:	e8bd8070 	pop	{r4, r5, r6, pc}
   20028:	0001ff38 	.word	0x0001ff38
   2002c:	0003dd60 	.word	0x0003dd60
   20030:	0003dcec 	.word	0x0003dcec

00020034 <CCassWindow::~CCassWindow()>:
   20034:	e92d4010 	push	{r4, lr}
   20038:	e1a04000 	mov	r4, r0
   2003c:	eb000f61 	bl	23dc8 <UG_WindowHide>
   20040:	e1a00004 	mov	r0, r4
   20044:	eb0008a9 	bl	222f0 <UG_WindowDelete>
   20048:	e1a00004 	mov	r0, r4
   2004c:	e8bd8010 	pop	{r4, pc}

00020050 <CCassWindow::Update(int)>:
   20050:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   20054:	e24dd014 	sub	sp, sp, #20
   20058:	e1a05001 	mov	r5, r1
   2005c:	e28d1008 	add	r1, sp, #8
   20060:	eb000ad0 	bl	22ba8 <UG_WindowGetArea>
   20064:	e3a03000 	mov	r3, #0
   20068:	e1dde0b8 	ldrh	lr, [sp, #8]
   2006c:	e1dd40bc 	ldrh	r4, [sp, #12]
   20070:	e1ddc0ba 	ldrh	ip, [sp, #10]
   20074:	e1dd60be 	ldrh	r6, [sp, #14]
   20078:	e28ee001 	add	lr, lr, #1
   2007c:	e2444001 	sub	r4, r4, #1
   20080:	e28cc003 	add	ip, ip, #3
   20084:	e2466001 	sub	r6, r6, #1
   20088:	e6bfe07e 	sxth	lr, lr
   2008c:	e6bfc07c 	sxth	ip, ip
   20090:	e6bf6076 	sxth	r6, r6
   20094:	e6bf4074 	sxth	r4, r4
   20098:	e1a0000e 	mov	r0, lr
   2009c:	e1a02004 	mov	r2, r4
   200a0:	e58d3000 	str	r3, [sp]
   200a4:	e1a0100c 	mov	r1, ip
   200a8:	e1a03006 	mov	r3, r6
   200ac:	e1cde0b8 	strh	lr, [sp, #8]
   200b0:	e1cd40bc 	strh	r4, [sp, #12]
   200b4:	e1cdc0ba 	strh	ip, [sp, #10]
   200b8:	e1cd60be 	strh	r6, [sp, #14]
   200bc:	eb000149 	bl	205e8 <UG_FillFrame>
   200c0:	e3a0c0ff 	mov	ip, #255	; 0xff
   200c4:	e0444006 	sub	r4, r4, r6
   200c8:	e0040495 	mul	r4, r5, r4
   200cc:	e59f6030 	ldr	r6, [pc, #48]	; 20104 <CCassWindow::Update(int)+0xb4>
   200d0:	e1dd30be 	ldrh	r3, [sp, #14]
   200d4:	e0c76694 	smull	r6, r7, r4, r6
   200d8:	e1a04fc4 	asr	r4, r4, #31
   200dc:	e06422c7 	rsb	r2, r4, r7, asr #5
   200e0:	e2433001 	sub	r3, r3, #1
   200e4:	e1dd10fa 	ldrsh	r1, [sp, #10]
   200e8:	e1dd00f8 	ldrsh	r0, [sp, #8]
   200ec:	e6bf2072 	sxth	r2, r2
   200f0:	e6bf3073 	sxth	r3, r3
   200f4:	e58dc000 	str	ip, [sp]
   200f8:	eb00013a 	bl	205e8 <UG_FillFrame>
   200fc:	e28dd014 	add	sp, sp, #20
   20100:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   20104:	51eb851f 	.word	0x51eb851f

00020108 <UG_DrawCircle.part.0>:
   20108:	e1a0c002 	mov	ip, r2
   2010c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20110:	e24dd01c 	sub	sp, sp, #28
   20114:	e58d2008 	str	r2, [sp, #8]
   20118:	e1a02082 	lsl	r2, r2, #1
   2011c:	e2622001 	rsb	r2, r2, #1
   20120:	e1a05003 	mov	r5, r3
   20124:	e35c0000 	cmp	ip, #0
   20128:	e6bf3072 	sxth	r3, r2
   2012c:	e58d3014 	str	r3, [sp, #20]
   20130:	ba000066 	blt	202d0 <UG_DrawCircle.part.0+0x1c8>
   20134:	e3a03000 	mov	r3, #0
   20138:	e59f6198 	ldr	r6, [pc, #408]	; 202d8 <UG_DrawCircle.part.0+0x1d0>
   2013c:	e58d3004 	str	r3, [sp, #4]
   20140:	e58d300c 	str	r3, [sp, #12]
   20144:	e6ffb070 	uxth	fp, r0
   20148:	e6ffa071 	uxth	sl, r1
   2014c:	e1dd40b4 	ldrh	r4, [sp, #4]
   20150:	e1dd70b8 	ldrh	r7, [sp, #8]
   20154:	e5962000 	ldr	r2, [r6]
   20158:	e084300a 	add	r3, r4, sl
   2015c:	e04b8007 	sub	r8, fp, r7
   20160:	e6bf3073 	sxth	r3, r3
   20164:	e6bf8078 	sxth	r8, r8
   20168:	e1a01003 	mov	r1, r3
   2016c:	e1a00008 	mov	r0, r8
   20170:	e5929000 	ldr	r9, [r2]
   20174:	e1a02005 	mov	r2, r5
   20178:	e58d3010 	str	r3, [sp, #16]
   2017c:	e12fff39 	blx	r9
   20180:	e5962000 	ldr	r2, [r6]
   20184:	e04a9004 	sub	r9, sl, r4
   20188:	e6bf9079 	sxth	r9, r9
   2018c:	e1a00008 	mov	r0, r8
   20190:	e1a01009 	mov	r1, r9
   20194:	e5928000 	ldr	r8, [r2]
   20198:	e1a02005 	mov	r2, r5
   2019c:	e12fff38 	blx	r8
   201a0:	e5962000 	ldr	r2, [r6]
   201a4:	e59d3010 	ldr	r3, [sp, #16]
   201a8:	e087800b 	add	r8, r7, fp
   201ac:	e6bf8078 	sxth	r8, r8
   201b0:	e1a01003 	mov	r1, r3
   201b4:	e1a00008 	mov	r0, r8
   201b8:	e5923000 	ldr	r3, [r2]
   201bc:	e1a02005 	mov	r2, r5
   201c0:	e12fff33 	blx	r3
   201c4:	e5963000 	ldr	r3, [r6]
   201c8:	e1a01009 	mov	r1, r9
   201cc:	e1a00008 	mov	r0, r8
   201d0:	e5933000 	ldr	r3, [r3]
   201d4:	e1a02005 	mov	r2, r5
   201d8:	e12fff33 	blx	r3
   201dc:	e04b8004 	sub	r8, fp, r4
   201e0:	e5962000 	ldr	r2, [r6]
   201e4:	e087300a 	add	r3, r7, sl
   201e8:	e6bf3073 	sxth	r3, r3
   201ec:	e6bf8078 	sxth	r8, r8
   201f0:	e1a01003 	mov	r1, r3
   201f4:	e1a00008 	mov	r0, r8
   201f8:	e5929000 	ldr	r9, [r2]
   201fc:	e1a02005 	mov	r2, r5
   20200:	e58d3010 	str	r3, [sp, #16]
   20204:	e12fff39 	blx	r9
   20208:	e5962000 	ldr	r2, [r6]
   2020c:	e04a9007 	sub	r9, sl, r7
   20210:	e6bf9079 	sxth	r9, r9
   20214:	e1a00008 	mov	r0, r8
   20218:	e1a01009 	mov	r1, r9
   2021c:	e5928000 	ldr	r8, [r2]
   20220:	e1a02005 	mov	r2, r5
   20224:	e12fff38 	blx	r8
   20228:	e5962000 	ldr	r2, [r6]
   2022c:	e59d3010 	ldr	r3, [sp, #16]
   20230:	e084800b 	add	r8, r4, fp
   20234:	e6bf8078 	sxth	r8, r8
   20238:	e1a01003 	mov	r1, r3
   2023c:	e1a00008 	mov	r0, r8
   20240:	e5923000 	ldr	r3, [r2]
   20244:	e1a02005 	mov	r2, r5
   20248:	e12fff33 	blx	r3
   2024c:	e5963000 	ldr	r3, [r6]
   20250:	e1a01009 	mov	r1, r9
   20254:	e5933000 	ldr	r3, [r3]
   20258:	e1a02005 	mov	r2, r5
   2025c:	e1a00008 	mov	r0, r8
   20260:	e12fff33 	blx	r3
   20264:	e59d300c 	ldr	r3, [sp, #12]
   20268:	e59d1014 	ldr	r1, [sp, #20]
   2026c:	e0833084 	add	r3, r3, r4, lsl #1
   20270:	e6ff3073 	uxth	r3, r3
   20274:	e6bf2073 	sxth	r2, r3
   20278:	e58d200c 	str	r2, [sp, #12]
   2027c:	e0812082 	add	r2, r1, r2, lsl #1
   20280:	e2844001 	add	r4, r4, #1
   20284:	e3520000 	cmp	r2, #0
   20288:	e6bf4074 	sxth	r4, r4
   2028c:	da000009 	ble	202b8 <UG_DrawCircle.part.0+0x1b0>
   20290:	e6ff2071 	uxth	r2, r1
   20294:	e0833002 	add	r3, r3, r2
   20298:	e6bf3073 	sxth	r3, r3
   2029c:	e2822002 	add	r2, r2, #2
   202a0:	e2477001 	sub	r7, r7, #1
   202a4:	e58d300c 	str	r3, [sp, #12]
   202a8:	e6bf3072 	sxth	r3, r2
   202ac:	e58d3014 	str	r3, [sp, #20]
   202b0:	e6bf3077 	sxth	r3, r7
   202b4:	e58d3008 	str	r3, [sp, #8]
   202b8:	e59d3008 	ldr	r3, [sp, #8]
   202bc:	e1540003 	cmp	r4, r3
   202c0:	e59d3004 	ldr	r3, [sp, #4]
   202c4:	e2833001 	add	r3, r3, #1
   202c8:	e58d3004 	str	r3, [sp, #4]
   202cc:	daffff9e 	ble	2014c <UG_DrawCircle.part.0+0x44>
   202d0:	e28dd01c 	add	sp, sp, #28
   202d4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202d8:	0017af10 	.word	0x0017af10

000202dc <UG_DrawArc.part.1>:
   202dc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   202e0:	e3520000 	cmp	r2, #0
   202e4:	e24dd024 	sub	sp, sp, #36	; 0x24
   202e8:	e5dd9048 	ldrb	r9, [sp, #72]	; 0x48
   202ec:	ba000083 	blt	20500 <UG_DrawArc.part.1+0x224>
   202f0:	e3a05000 	mov	r5, #0
   202f4:	e1a07000 	mov	r7, r0
   202f8:	e1a08001 	mov	r8, r1
   202fc:	e1a06005 	mov	r6, r5
   20300:	e1a0b082 	lsl	fp, r2, #1
   20304:	e1a04002 	mov	r4, r2
   20308:	e2032001 	and	r2, r3, #1
   2030c:	e58d2010 	str	r2, [sp, #16]
   20310:	e2032002 	and	r2, r3, #2
   20314:	e58d201c 	str	r2, [sp, #28]
   20318:	e2032004 	and	r2, r3, #4
   2031c:	e58d2014 	str	r2, [sp, #20]
   20320:	e2032008 	and	r2, r3, #8
   20324:	e58d2018 	str	r2, [sp, #24]
   20328:	e2032010 	and	r2, r3, #16
   2032c:	e58d2008 	str	r2, [sp, #8]
   20330:	e2032020 	and	r2, r3, #32
   20334:	e26bb001 	rsb	fp, fp, #1
   20338:	e58d200c 	str	r2, [sp, #12]
   2033c:	e59fa1c4 	ldr	sl, [pc, #452]	; 20508 <UG_DrawArc.part.1+0x22c>
   20340:	e2032040 	and	r2, r3, #64	; 0x40
   20344:	e6af3073 	sxtb	r3, r3
   20348:	e6bfb07b 	sxth	fp, fp
   2034c:	e58d2004 	str	r2, [sp, #4]
   20350:	e58d3000 	str	r3, [sp]
   20354:	e59d3010 	ldr	r3, [sp, #16]
   20358:	e3530000 	cmp	r3, #0
   2035c:	0a000007 	beq	20380 <UG_DrawArc.part.1+0xa4>
   20360:	e59a3000 	ldr	r3, [sl]
   20364:	e0481005 	sub	r1, r8, r5
   20368:	e0870004 	add	r0, r7, r4
   2036c:	e5933000 	ldr	r3, [r3]
   20370:	e6bf1071 	sxth	r1, r1
   20374:	e6bf0070 	sxth	r0, r0
   20378:	e1a02009 	mov	r2, r9
   2037c:	e12fff33 	blx	r3
   20380:	e59d301c 	ldr	r3, [sp, #28]
   20384:	e3530000 	cmp	r3, #0
   20388:	0a000007 	beq	203ac <UG_DrawArc.part.1+0xd0>
   2038c:	e59a3000 	ldr	r3, [sl]
   20390:	e0481004 	sub	r1, r8, r4
   20394:	e0870005 	add	r0, r7, r5
   20398:	e5933000 	ldr	r3, [r3]
   2039c:	e6bf1071 	sxth	r1, r1
   203a0:	e6bf0070 	sxth	r0, r0
   203a4:	e1a02009 	mov	r2, r9
   203a8:	e12fff33 	blx	r3
   203ac:	e59d3014 	ldr	r3, [sp, #20]
   203b0:	e3530000 	cmp	r3, #0
   203b4:	0a000007 	beq	203d8 <UG_DrawArc.part.1+0xfc>
   203b8:	e59a3000 	ldr	r3, [sl]
   203bc:	e0481004 	sub	r1, r8, r4
   203c0:	e0470005 	sub	r0, r7, r5
   203c4:	e5933000 	ldr	r3, [r3]
   203c8:	e6bf1071 	sxth	r1, r1
   203cc:	e6bf0070 	sxth	r0, r0
   203d0:	e1a02009 	mov	r2, r9
   203d4:	e12fff33 	blx	r3
   203d8:	e59d3018 	ldr	r3, [sp, #24]
   203dc:	e3530000 	cmp	r3, #0
   203e0:	0a000007 	beq	20404 <UG_DrawArc.part.1+0x128>
   203e4:	e59a3000 	ldr	r3, [sl]
   203e8:	e0481005 	sub	r1, r8, r5
   203ec:	e0470004 	sub	r0, r7, r4
   203f0:	e5933000 	ldr	r3, [r3]
   203f4:	e6bf1071 	sxth	r1, r1
   203f8:	e6bf0070 	sxth	r0, r0
   203fc:	e1a02009 	mov	r2, r9
   20400:	e12fff33 	blx	r3
   20404:	e59d3008 	ldr	r3, [sp, #8]
   20408:	e3530000 	cmp	r3, #0
   2040c:	0a000007 	beq	20430 <UG_DrawArc.part.1+0x154>
   20410:	e59a3000 	ldr	r3, [sl]
   20414:	e0881005 	add	r1, r8, r5
   20418:	e0470004 	sub	r0, r7, r4
   2041c:	e5933000 	ldr	r3, [r3]
   20420:	e6bf1071 	sxth	r1, r1
   20424:	e6bf0070 	sxth	r0, r0
   20428:	e1a02009 	mov	r2, r9
   2042c:	e12fff33 	blx	r3
   20430:	e59d300c 	ldr	r3, [sp, #12]
   20434:	e3530000 	cmp	r3, #0
   20438:	0a000007 	beq	2045c <UG_DrawArc.part.1+0x180>
   2043c:	e59a3000 	ldr	r3, [sl]
   20440:	e0881004 	add	r1, r8, r4
   20444:	e0470005 	sub	r0, r7, r5
   20448:	e5933000 	ldr	r3, [r3]
   2044c:	e6bf1071 	sxth	r1, r1
   20450:	e6bf0070 	sxth	r0, r0
   20454:	e1a02009 	mov	r2, r9
   20458:	e12fff33 	blx	r3
   2045c:	e59d3004 	ldr	r3, [sp, #4]
   20460:	e3530000 	cmp	r3, #0
   20464:	0a000007 	beq	20488 <UG_DrawArc.part.1+0x1ac>
   20468:	e59a3000 	ldr	r3, [sl]
   2046c:	e0881004 	add	r1, r8, r4
   20470:	e0850007 	add	r0, r5, r7
   20474:	e5933000 	ldr	r3, [r3]
   20478:	e6bf1071 	sxth	r1, r1
   2047c:	e6bf0070 	sxth	r0, r0
   20480:	e1a02009 	mov	r2, r9
   20484:	e12fff33 	blx	r3
   20488:	e59d3000 	ldr	r3, [sp]
   2048c:	e3530000 	cmp	r3, #0
   20490:	aa000007 	bge	204b4 <UG_DrawArc.part.1+0x1d8>
   20494:	e59a3000 	ldr	r3, [sl]
   20498:	e0881005 	add	r1, r8, r5
   2049c:	e0870004 	add	r0, r7, r4
   204a0:	e5933000 	ldr	r3, [r3]
   204a4:	e6bf1071 	sxth	r1, r1
   204a8:	e6bf0070 	sxth	r0, r0
   204ac:	e1a02009 	mov	r2, r9
   204b0:	e12fff33 	blx	r3
   204b4:	e6ff3075 	uxth	r3, r5
   204b8:	e0866083 	add	r6, r6, r3, lsl #1
   204bc:	e6ff2076 	uxth	r2, r6
   204c0:	e6bf6072 	sxth	r6, r2
   204c4:	e08b1086 	add	r1, fp, r6, lsl #1
   204c8:	e2833001 	add	r3, r3, #1
   204cc:	e3510000 	cmp	r1, #0
   204d0:	e6bf3073 	sxth	r3, r3
   204d4:	da000006 	ble	204f4 <UG_DrawArc.part.1+0x218>
   204d8:	e6ffb07b 	uxth	fp, fp
   204dc:	e082600b 	add	r6, r2, fp
   204e0:	e2444001 	sub	r4, r4, #1
   204e4:	e28bb002 	add	fp, fp, #2
   204e8:	e6bf6076 	sxth	r6, r6
   204ec:	e6bfb07b 	sxth	fp, fp
   204f0:	e6bf4074 	sxth	r4, r4
   204f4:	e1540003 	cmp	r4, r3
   204f8:	e2855001 	add	r5, r5, #1
   204fc:	aaffff94 	bge	20354 <UG_DrawArc.part.1+0x78>
   20500:	e28dd024 	add	sp, sp, #36	; 0x24
   20504:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20508:	0017af10 	.word	0x0017af10

0002050c <UG_Init>:
   2050c:	e3a0c000 	mov	ip, #0
   20510:	e92d4010 	push	{r4, lr}
   20514:	e5801000 	str	r1, [r0]
   20518:	e1c020b4 	strh	r2, [r0, #4]
   2051c:	e1c030b6 	strh	r3, [r0, #6]
   20520:	e242e005 	sub	lr, r2, #5
   20524:	e2431005 	sub	r1, r3, #5
   20528:	e59f406c 	ldr	r4, [pc, #108]	; 2059c <UG_Init+0x90>
   2052c:	e59f206c 	ldr	r2, [pc, #108]	; 205a0 <UG_Init+0x94>
   20530:	e59f306c 	ldr	r3, [pc, #108]	; 205a4 <UG_Init+0x98>
   20534:	e6bfe07e 	sxth	lr, lr
   20538:	e6bf1071 	sxth	r1, r1
   2053c:	e1c0e2b4 	strh	lr, [r0, #36]	; 0x24
   20540:	e1c0e1bc 	strh	lr, [r0, #28]
   20544:	e1c012b6 	strh	r1, [r0, #38]	; 0x26
   20548:	e1c011be 	strh	r1, [r0, #30]
   2054c:	e5804020 	str	r4, [r0, #32]
   20550:	e5802040 	str	r2, [r0, #64]	; 0x40
   20554:	e5830000 	str	r0, [r3]
   20558:	e580c02c 	str	ip, [r0, #44]	; 0x2c
   2055c:	e1c0c3b4 	strh	ip, [r0, #52]	; 0x34
   20560:	e1c0c3b2 	strh	ip, [r0, #50]	; 0x32
   20564:	e1c0c3b6 	strh	ip, [r0, #54]	; 0x36
   20568:	e1c0c3b8 	strh	ip, [r0, #56]	; 0x38
   2056c:	e580c03c 	str	ip, [r0, #60]	; 0x3c
   20570:	e580c010 	str	ip, [r0, #16]
   20574:	e580c014 	str	ip, [r0, #20]
   20578:	e580c018 	str	ip, [r0, #24]
   2057c:	e580c048 	str	ip, [r0, #72]	; 0x48
   20580:	e5c0c04c 	strb	ip, [r0, #76]	; 0x4c
   20584:	e580c050 	str	ip, [r0, #80]	; 0x50
   20588:	e5c0c054 	strb	ip, [r0, #84]	; 0x54
   2058c:	e580c058 	str	ip, [r0, #88]	; 0x58
   20590:	e5c0c05c 	strb	ip, [r0, #92]	; 0x5c
   20594:	e3a00001 	mov	r0, #1
   20598:	e8bd8010 	pop	{r4, pc}
   2059c:	00040004 	.word	0x00040004
   205a0:	00ff0101 	.word	0x00ff0101
   205a4:	0017af10 	.word	0x0017af10

000205a8 <UG_SelectGUI>:
   205a8:	e59f3008 	ldr	r3, [pc, #8]	; 205b8 <UG_SelectGUI+0x10>
   205ac:	e5830000 	str	r0, [r3]
   205b0:	e3a00001 	mov	r0, #1
   205b4:	e12fff1e 	bx	lr
   205b8:	0017af10 	.word	0x0017af10

000205bc <UG_FontSelect>:
   205bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   205c0:	e1a0e000 	mov	lr, r0
   205c4:	e59fc018 	ldr	ip, [pc, #24]	; 205e4 <UG_FontSelect+0x28>
   205c8:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
   205cc:	e59cc000 	ldr	ip, [ip]
   205d0:	e28cc02c 	add	ip, ip, #44	; 0x2c
   205d4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
   205d8:	e59e3000 	ldr	r3, [lr]
   205dc:	e58c3000 	str	r3, [ip]
   205e0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   205e4:	0017af10 	.word	0x0017af10

000205e8 <UG_FillFrame>:
   205e8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   205ec:	e1a05001 	mov	r5, r1
   205f0:	e59f70b0 	ldr	r7, [pc, #176]	; 206a8 <UG_FillFrame+0xc0>
   205f4:	e1520000 	cmp	r2, r0
   205f8:	e5971000 	ldr	r1, [r7]
   205fc:	a1a09000 	movge	r9, r0
   20600:	e5d1c054 	ldrb	ip, [r1, #84]	; 0x54
   20604:	b1a09002 	movlt	r9, r2
   20608:	a1a06002 	movge	r6, r2
   2060c:	b1a06000 	movlt	r6, r0
   20610:	e1530005 	cmp	r3, r5
   20614:	b1a0a005 	movlt	sl, r5
   20618:	e24dd008 	sub	sp, sp, #8
   2061c:	a1a0a003 	movge	sl, r3
   20620:	b1a05003 	movlt	r5, r3
   20624:	e31c0002 	tst	ip, #2
   20628:	e5dd8028 	ldrb	r8, [sp, #40]	; 0x28
   2062c:	0a00000a 	beq	2065c <UG_FillFrame+0x74>
   20630:	e58d8000 	str	r8, [sp]
   20634:	e5914050 	ldr	r4, [r1, #80]	; 0x50
   20638:	e1a0300a 	mov	r3, sl
   2063c:	e1a02006 	mov	r2, r6
   20640:	e1a01005 	mov	r1, r5
   20644:	e1a00009 	mov	r0, r9
   20648:	e12fff34 	blx	r4
   2064c:	e3500000 	cmp	r0, #0
   20650:	0a000012 	beq	206a0 <UG_FillFrame+0xb8>
   20654:	e155000a 	cmp	r5, sl
   20658:	ca000010 	bgt	206a0 <UG_FillFrame+0xb8>
   2065c:	e1590006 	cmp	r9, r6
   20660:	d1a04009 	movle	r4, r9
   20664:	ca000009 	bgt	20690 <UG_FillFrame+0xa8>
   20668:	e5973000 	ldr	r3, [r7]
   2066c:	e1a00004 	mov	r0, r4
   20670:	e2844001 	add	r4, r4, #1
   20674:	e1a02008 	mov	r2, r8
   20678:	e5933000 	ldr	r3, [r3]
   2067c:	e1a01005 	mov	r1, r5
   20680:	e6bf4074 	sxth	r4, r4
   20684:	e12fff33 	blx	r3
   20688:	e1560004 	cmp	r6, r4
   2068c:	aafffff5 	bge	20668 <UG_FillFrame+0x80>
   20690:	e2855001 	add	r5, r5, #1
   20694:	e6bf5075 	sxth	r5, r5
   20698:	e155000a 	cmp	r5, sl
   2069c:	daffffee 	ble	2065c <UG_FillFrame+0x74>
   206a0:	e28dd008 	add	sp, sp, #8
   206a4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   206a8:	0017af10 	.word	0x0017af10

000206ac <UG_FillScreen>:
   206ac:	e3a01000 	mov	r1, #0
   206b0:	e59f3034 	ldr	r3, [pc, #52]	; 206ec <UG_FillScreen+0x40>
   206b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   206b8:	e5932000 	ldr	r2, [r3]
   206bc:	e24dd00c 	sub	sp, sp, #12
   206c0:	e1d230b6 	ldrh	r3, [r2, #6]
   206c4:	e1d220b4 	ldrh	r2, [r2, #4]
   206c8:	e2433001 	sub	r3, r3, #1
   206cc:	e2422001 	sub	r2, r2, #1
   206d0:	e58d0000 	str	r0, [sp]
   206d4:	e6bf3073 	sxth	r3, r3
   206d8:	e6bf2072 	sxth	r2, r2
   206dc:	e1a00001 	mov	r0, r1
   206e0:	ebffffc0 	bl	205e8 <UG_FillFrame>
   206e4:	e28dd00c 	add	sp, sp, #12
   206e8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   206ec:	0017af10 	.word	0x0017af10

000206f0 <UG_DrawMesh>:
   206f0:	e1520000 	cmp	r2, r0
   206f4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   206f8:	a1a08000 	movge	r8, r0
   206fc:	b1a08002 	movlt	r8, r2
   20700:	a1a06002 	movge	r6, r2
   20704:	b1a06000 	movlt	r6, r0
   20708:	e1530001 	cmp	r3, r1
   2070c:	e1a05001 	mov	r5, r1
   20710:	b1a09001 	movlt	r9, r1
   20714:	a1a09003 	movge	r9, r3
   20718:	b1a05003 	movlt	r5, r3
   2071c:	e5dd7020 	ldrb	r7, [sp, #32]
   20720:	e59fa044 	ldr	sl, [pc, #68]	; 2076c <UG_DrawMesh+0x7c>
   20724:	e1580006 	cmp	r8, r6
   20728:	d1a04008 	movle	r4, r8
   2072c:	ca000009 	bgt	20758 <UG_DrawMesh+0x68>
   20730:	e59a3000 	ldr	r3, [sl]
   20734:	e1a00004 	mov	r0, r4
   20738:	e2844002 	add	r4, r4, #2
   2073c:	e1a02007 	mov	r2, r7
   20740:	e5933000 	ldr	r3, [r3]
   20744:	e1a01005 	mov	r1, r5
   20748:	e6bf4074 	sxth	r4, r4
   2074c:	e12fff33 	blx	r3
   20750:	e1560004 	cmp	r6, r4
   20754:	aafffff5 	bge	20730 <UG_DrawMesh+0x40>
   20758:	e2855002 	add	r5, r5, #2
   2075c:	e6bf5075 	sxth	r5, r5
   20760:	e1590005 	cmp	r9, r5
   20764:	aaffffee 	bge	20724 <UG_DrawMesh+0x34>
   20768:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2076c:	0017af10 	.word	0x0017af10

00020770 <UG_DrawPixel>:
   20770:	e59f3008 	ldr	r3, [pc, #8]	; 20780 <UG_DrawPixel+0x10>
   20774:	e5933000 	ldr	r3, [r3]
   20778:	e5933000 	ldr	r3, [r3]
   2077c:	e12fff13 	bx	r3
   20780:	0017af10 	.word	0x0017af10

00020784 <UG_DrawCircle>:
   20784:	e3520000 	cmp	r2, #0
   20788:	c3a0c000 	movgt	ip, #0
   2078c:	d3a0c001 	movle	ip, #1
   20790:	e18ccfa1 	orr	ip, ip, r1, lsr #31
   20794:	e19ccfa0 	orrs	ip, ip, r0, lsr #31
   20798:	112fff1e 	bxne	lr
   2079c:	eafffe59 	b	20108 <UG_DrawCircle.part.0>

000207a0 <UG_DrawArc>:
   207a0:	e3520000 	cmp	r2, #0
   207a4:	c3a0c000 	movgt	ip, #0
   207a8:	d3a0c001 	movle	ip, #1
   207ac:	e18ccfa1 	orr	ip, ip, r1, lsr #31
   207b0:	e19ccfa0 	orrs	ip, ip, r0, lsr #31
   207b4:	e5ddc000 	ldrb	ip, [sp]
   207b8:	112fff1e 	bxne	lr
   207bc:	e58dc000 	str	ip, [sp]
   207c0:	eafffec5 	b	202dc <UG_DrawArc.part.1>

000207c4 <UG_DrawLine>:
   207c4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   207c8:	e59f81b4 	ldr	r8, [pc, #436]	; 20984 <UG_DrawLine+0x1c0>
   207cc:	e24dd01c 	sub	sp, sp, #28
   207d0:	e598c000 	ldr	ip, [r8]
   207d4:	e1a04000 	mov	r4, r0
   207d8:	e5dce04c 	ldrb	lr, [ip, #76]	; 0x4c
   207dc:	e1a05001 	mov	r5, r1
   207e0:	e31e0002 	tst	lr, #2
   207e4:	e1a09002 	mov	r9, r2
   207e8:	e1a06003 	mov	r6, r3
   207ec:	e5dd7040 	ldrb	r7, [sp, #64]	; 0x40
   207f0:	0a000005 	beq	2080c <UG_DrawLine+0x48>
   207f4:	e58d7000 	str	r7, [sp]
   207f8:	e59ca048 	ldr	sl, [ip, #72]	; 0x48
   207fc:	e12fff3a 	blx	sl
   20800:	e3500000 	cmp	r0, #0
   20804:	0a00003b 	beq	208f8 <UG_DrawLine+0x134>
   20808:	e598c000 	ldr	ip, [r8]
   2080c:	e0492004 	sub	r2, r9, r4
   20810:	e6bf2072 	sxth	r2, r2
   20814:	e0463005 	sub	r3, r6, r5
   20818:	e6bf3073 	sxth	r3, r3
   2081c:	e022bfc2 	eor	fp, r2, r2, asr #31
   20820:	e3520000 	cmp	r2, #0
   20824:	e04bbfc2 	sub	fp, fp, r2, asr #31
   20828:	e0236fc3 	eor	r6, r3, r3, asr #31
   2082c:	d3e02000 	mvnle	r2, #0
   20830:	c3a02001 	movgt	r2, #1
   20834:	e3530000 	cmp	r3, #0
   20838:	e0466fc3 	sub	r6, r6, r3, asr #31
   2083c:	d3e03000 	mvnle	r3, #0
   20840:	c3a03001 	movgt	r3, #1
   20844:	e58d600c 	str	r6, [sp, #12]
   20848:	e58d2014 	str	r2, [sp, #20]
   2084c:	e59c9000 	ldr	r9, [ip]
   20850:	e1a02007 	mov	r2, r7
   20854:	e1a01005 	mov	r1, r5
   20858:	e1a00004 	mov	r0, r4
   2085c:	e6bfa07b 	sxth	sl, fp
   20860:	e6bf6076 	sxth	r6, r6
   20864:	e58d3010 	str	r3, [sp, #16]
   20868:	e12fff39 	blx	r9
   2086c:	e15a0006 	cmp	sl, r6
   20870:	ba000022 	blt	20900 <UG_DrawLine+0x13c>
   20874:	e35a0000 	cmp	sl, #0
   20878:	da00001e 	ble	208f8 <UG_DrawLine+0x134>
   2087c:	e1dd30bc 	ldrh	r3, [sp, #12]
   20880:	e3a09000 	mov	r9, #0
   20884:	e58db00c 	str	fp, [sp, #12]
   20888:	e1a0b003 	mov	fp, r3
   2088c:	e1dd21b4 	ldrh	r2, [sp, #20]
   20890:	e1a060ca 	asr	r6, sl, #1
   20894:	e58d2008 	str	r2, [sp, #8]
   20898:	e59d3008 	ldr	r3, [sp, #8]
   2089c:	e08b6006 	add	r6, fp, r6
   208a0:	e0834004 	add	r4, r3, r4
   208a4:	e6ff3076 	uxth	r3, r6
   208a8:	e6bf6073 	sxth	r6, r3
   208ac:	e6bf4074 	sxth	r4, r4
   208b0:	e15a0006 	cmp	sl, r6
   208b4:	e5981000 	ldr	r1, [r8]
   208b8:	e1a02007 	mov	r2, r7
   208bc:	e1a00004 	mov	r0, r4
   208c0:	e2899001 	add	r9, r9, #1
   208c4:	ca000005 	bgt	208e0 <UG_DrawLine+0x11c>
   208c8:	e59dc00c 	ldr	ip, [sp, #12]
   208cc:	e043600c 	sub	r6, r3, ip
   208d0:	e59d3010 	ldr	r3, [sp, #16]
   208d4:	e6bf6076 	sxth	r6, r6
   208d8:	e0855003 	add	r5, r5, r3
   208dc:	e6bf5075 	sxth	r5, r5
   208e0:	e5913000 	ldr	r3, [r1]
   208e4:	e1a01005 	mov	r1, r5
   208e8:	e12fff33 	blx	r3
   208ec:	e6bf3079 	sxth	r3, r9
   208f0:	e15a0003 	cmp	sl, r3
   208f4:	caffffe7 	bgt	20898 <UG_DrawLine+0xd4>
   208f8:	e28dd01c 	add	sp, sp, #28
   208fc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20900:	e3560000 	cmp	r6, #0
   20904:	dafffffb 	ble	208f8 <UG_DrawLine+0x134>
   20908:	e3a0a000 	mov	sl, #0
   2090c:	e6ff307b 	uxth	r3, fp
   20910:	e1ddb1b0 	ldrh	fp, [sp, #16]
   20914:	e58d3008 	str	r3, [sp, #8]
   20918:	e1a090c6 	asr	r9, r6, #1
   2091c:	e59d3008 	ldr	r3, [sp, #8]
   20920:	e08b5005 	add	r5, fp, r5
   20924:	e0839009 	add	r9, r3, r9
   20928:	e6ff3079 	uxth	r3, r9
   2092c:	e6bf9073 	sxth	r9, r3
   20930:	e6bf5075 	sxth	r5, r5
   20934:	e1560009 	cmp	r6, r9
   20938:	e5980000 	ldr	r0, [r8]
   2093c:	e1a02007 	mov	r2, r7
   20940:	e1a01005 	mov	r1, r5
   20944:	e28aa001 	add	sl, sl, #1
   20948:	ca000005 	bgt	20964 <UG_DrawLine+0x1a0>
   2094c:	e59dc00c 	ldr	ip, [sp, #12]
   20950:	e043900c 	sub	r9, r3, ip
   20954:	e59d3014 	ldr	r3, [sp, #20]
   20958:	e6bf9079 	sxth	r9, r9
   2095c:	e0844003 	add	r4, r4, r3
   20960:	e6bf4074 	sxth	r4, r4
   20964:	e5903000 	ldr	r3, [r0]
   20968:	e1a00004 	mov	r0, r4
   2096c:	e12fff33 	blx	r3
   20970:	e6bf307a 	sxth	r3, sl
   20974:	e1560003 	cmp	r6, r3
   20978:	caffffe7 	bgt	2091c <UG_DrawLine+0x158>
   2097c:	e28dd01c 	add	sp, sp, #28
   20980:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20984:	0017af10 	.word	0x0017af10

00020988 <UG_FillRoundFrame>:
   20988:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2098c:	e24dd01c 	sub	sp, sp, #28
   20990:	e1520000 	cmp	r2, r0
   20994:	e1dd74f0 	ldrsh	r7, [sp, #64]	; 0x40
   20998:	a1a0c000 	movge	ip, r0
   2099c:	b1a0c002 	movlt	ip, r2
   209a0:	a1a00002 	movge	r0, r2
   209a4:	e1530001 	cmp	r3, r1
   209a8:	b1a08003 	movlt	r8, r3
   209ac:	a1a08001 	movge	r8, r1
   209b0:	b1a09001 	movlt	r9, r1
   209b4:	a1a09003 	movge	r9, r3
   209b8:	e3570000 	cmp	r7, #0
   209bc:	e5dda044 	ldrb	sl, [sp, #68]	; 0x44
   209c0:	da000057 	ble	20b24 <UG_FillRoundFrame+0x19c>
   209c4:	e3a05000 	mov	r5, #0
   209c8:	e6ff4077 	uxth	r4, r7
   209cc:	e084c00c 	add	ip, r4, ip
   209d0:	e0400004 	sub	r0, r0, r4
   209d4:	e6ff307c 	uxth	r3, ip
   209d8:	e6ff2070 	uxth	r2, r0
   209dc:	e58d3010 	str	r3, [sp, #16]
   209e0:	e58d2014 	str	r2, [sp, #20]
   209e4:	e6bf0073 	sxth	r0, r3
   209e8:	e58da000 	str	sl, [sp]
   209ec:	e1a03009 	mov	r3, r9
   209f0:	e6bf2072 	sxth	r2, r2
   209f4:	e1a01008 	mov	r1, r8
   209f8:	ebfffefa 	bl	205e8 <UG_FillFrame>
   209fc:	e1a06084 	lsl	r6, r4, #1
   20a00:	e0493004 	sub	r3, r9, r4
   20a04:	e2666003 	rsb	r6, r6, #3
   20a08:	e58d300c 	str	r3, [sp, #12]
   20a0c:	e0843008 	add	r3, r4, r8
   20a10:	e6bf6076 	sxth	r6, r6
   20a14:	e58d3008 	str	r3, [sp, #8]
   20a18:	e59d3008 	ldr	r3, [sp, #8]
   20a1c:	e6ff4077 	uxth	r4, r7
   20a20:	e043b004 	sub	fp, r3, r4
   20a24:	e59d300c 	ldr	r3, [sp, #12]
   20a28:	e1a09004 	mov	r9, r4
   20a2c:	e0844003 	add	r4, r4, r3
   20a30:	e59d3014 	ldr	r3, [sp, #20]
   20a34:	e6ff8075 	uxth	r8, r5
   20a38:	e0832008 	add	r2, r3, r8
   20a3c:	e3570000 	cmp	r7, #0
   20a40:	e6bfb07b 	sxth	fp, fp
   20a44:	e6bf4074 	sxth	r4, r4
   20a48:	e6bf2072 	sxth	r2, r2
   20a4c:	da00000c 	ble	20a84 <UG_FillRoundFrame+0xfc>
   20a50:	e1a00002 	mov	r0, r2
   20a54:	e1a03004 	mov	r3, r4
   20a58:	e1a0100b 	mov	r1, fp
   20a5c:	e58da000 	str	sl, [sp]
   20a60:	ebffff57 	bl	207c4 <UG_DrawLine>
   20a64:	e59d3010 	ldr	r3, [sp, #16]
   20a68:	e58da000 	str	sl, [sp]
   20a6c:	e0432008 	sub	r2, r3, r8
   20a70:	e6bf2072 	sxth	r2, r2
   20a74:	e1a03004 	mov	r3, r4
   20a78:	e1a0100b 	mov	r1, fp
   20a7c:	e1a00002 	mov	r0, r2
   20a80:	ebffff4f 	bl	207c4 <UG_DrawLine>
   20a84:	e59d3010 	ldr	r3, [sp, #16]
   20a88:	e3550000 	cmp	r5, #0
   20a8c:	e0432009 	sub	r2, r3, r9
   20a90:	e59d3008 	ldr	r3, [sp, #8]
   20a94:	e6bf2072 	sxth	r2, r2
   20a98:	e0434008 	sub	r4, r3, r8
   20a9c:	e59d300c 	ldr	r3, [sp, #12]
   20aa0:	e6bf4074 	sxth	r4, r4
   20aa4:	e088b003 	add	fp, r8, r3
   20aa8:	e6bfb07b 	sxth	fp, fp
   20aac:	da00000c 	ble	20ae4 <UG_FillRoundFrame+0x15c>
   20ab0:	e1a00002 	mov	r0, r2
   20ab4:	e1a0300b 	mov	r3, fp
   20ab8:	e1a01004 	mov	r1, r4
   20abc:	e58da000 	str	sl, [sp]
   20ac0:	ebffff3f 	bl	207c4 <UG_DrawLine>
   20ac4:	e59d3014 	ldr	r3, [sp, #20]
   20ac8:	e58da000 	str	sl, [sp]
   20acc:	e0832009 	add	r2, r3, r9
   20ad0:	e6bf2072 	sxth	r2, r2
   20ad4:	e1a0300b 	mov	r3, fp
   20ad8:	e1a01004 	mov	r1, r4
   20adc:	e1a00002 	mov	r0, r2
   20ae0:	ebffff37 	bl	207c4 <UG_DrawLine>
   20ae4:	e3560000 	cmp	r6, #0
   20ae8:	e6ff6076 	uxth	r6, r6
   20aec:	a6ff7077 	uxthge	r7, r7
   20af0:	b2866006 	addlt	r6, r6, #6
   20af4:	a0483007 	subge	r3, r8, r7
   20af8:	b0866108 	addlt	r6, r6, r8, lsl #2
   20afc:	a286600a 	addge	r6, r6, #10
   20b00:	a2477001 	subge	r7, r7, #1
   20b04:	e2888001 	add	r8, r8, #1
   20b08:	a0866103 	addge	r6, r6, r3, lsl #2
   20b0c:	a6bf7077 	sxthge	r7, r7
   20b10:	e6bf5078 	sxth	r5, r8
   20b14:	b6bf6076 	sxthlt	r6, r6
   20b18:	a6bf6076 	sxthge	r6, r6
   20b1c:	e1570005 	cmp	r7, r5
   20b20:	aaffffbc 	bge	20a18 <UG_FillRoundFrame+0x90>
   20b24:	e28dd01c 	add	sp, sp, #28
   20b28:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020b2c <UG_DrawFrame>:
   20b2c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   20b30:	e1a04003 	mov	r4, r3
   20b34:	e1a08000 	mov	r8, r0
   20b38:	e1a07002 	mov	r7, r2
   20b3c:	e1a06001 	mov	r6, r1
   20b40:	e24dd008 	sub	sp, sp, #8
   20b44:	e5dd5020 	ldrb	r5, [sp, #32]
   20b48:	e1a03001 	mov	r3, r1
   20b4c:	e58d5000 	str	r5, [sp]
   20b50:	ebffff1b 	bl	207c4 <UG_DrawLine>
   20b54:	e1a03004 	mov	r3, r4
   20b58:	e1a02007 	mov	r2, r7
   20b5c:	e1a01004 	mov	r1, r4
   20b60:	e1a00008 	mov	r0, r8
   20b64:	e58d5000 	str	r5, [sp]
   20b68:	ebffff15 	bl	207c4 <UG_DrawLine>
   20b6c:	e1a03004 	mov	r3, r4
   20b70:	e1a02008 	mov	r2, r8
   20b74:	e1a00008 	mov	r0, r8
   20b78:	e1a01006 	mov	r1, r6
   20b7c:	e58d5000 	str	r5, [sp]
   20b80:	ebffff0f 	bl	207c4 <UG_DrawLine>
   20b84:	e1a03004 	mov	r3, r4
   20b88:	e1a01006 	mov	r1, r6
   20b8c:	e1a02007 	mov	r2, r7
   20b90:	e1a00007 	mov	r0, r7
   20b94:	e58d5020 	str	r5, [sp, #32]
   20b98:	e28dd008 	add	sp, sp, #8
   20b9c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   20ba0:	eaffff07 	b	207c4 <UG_DrawLine>

00020ba4 <UG_DrawRoundFrame>:
   20ba4:	e1520000 	cmp	r2, r0
   20ba8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20bac:	a1a05002 	movge	r5, r2
   20bb0:	b1a05000 	movlt	r5, r0
   20bb4:	a1a09000 	movge	r9, r0
   20bb8:	b1a09002 	movlt	r9, r2
   20bbc:	e1530001 	cmp	r3, r1
   20bc0:	a1a06003 	movge	r6, r3
   20bc4:	b1a06001 	movlt	r6, r1
   20bc8:	e24dd014 	sub	sp, sp, #20
   20bcc:	e1dd73f8 	ldrsh	r7, [sp, #56]	; 0x38
   20bd0:	a1a04001 	movge	r4, r1
   20bd4:	b1a04003 	movlt	r4, r3
   20bd8:	e1560007 	cmp	r6, r7
   20bdc:	a1550007 	cmpge	r5, r7
   20be0:	e5dd803c 	ldrb	r8, [sp, #60]	; 0x3c
   20be4:	aa000001 	bge	20bf0 <UG_DrawRoundFrame+0x4c>
   20be8:	e28dd014 	add	sp, sp, #20
   20bec:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20bf0:	e6ffb077 	uxth	fp, r7
   20bf4:	e08ba009 	add	sl, fp, r9
   20bf8:	e045300b 	sub	r3, r5, fp
   20bfc:	e6bfa07a 	sxth	sl, sl
   20c00:	e6bf3073 	sxth	r3, r3
   20c04:	e1a02003 	mov	r2, r3
   20c08:	e1a01004 	mov	r1, r4
   20c0c:	e1a0000a 	mov	r0, sl
   20c10:	e58d300c 	str	r3, [sp, #12]
   20c14:	e58d8000 	str	r8, [sp]
   20c18:	e1a03004 	mov	r3, r4
   20c1c:	ebfffee8 	bl	207c4 <UG_DrawLine>
   20c20:	e08b4004 	add	r4, fp, r4
   20c24:	e1a03006 	mov	r3, r6
   20c28:	e1a01006 	mov	r1, r6
   20c2c:	e046600b 	sub	r6, r6, fp
   20c30:	e59d200c 	ldr	r2, [sp, #12]
   20c34:	e1a0000a 	mov	r0, sl
   20c38:	e6bf4074 	sxth	r4, r4
   20c3c:	e6bf6076 	sxth	r6, r6
   20c40:	e58d8000 	str	r8, [sp]
   20c44:	ebfffede 	bl	207c4 <UG_DrawLine>
   20c48:	e1a03006 	mov	r3, r6
   20c4c:	e1a01004 	mov	r1, r4
   20c50:	e1a02009 	mov	r2, r9
   20c54:	e1a00009 	mov	r0, r9
   20c58:	e58d8000 	str	r8, [sp]
   20c5c:	ebfffed8 	bl	207c4 <UG_DrawLine>
   20c60:	e58d8000 	str	r8, [sp]
   20c64:	e1a03006 	mov	r3, r6
   20c68:	e1a01004 	mov	r1, r4
   20c6c:	e1a02005 	mov	r2, r5
   20c70:	e1a00005 	mov	r0, r5
   20c74:	ebfffed2 	bl	207c4 <UG_DrawLine>
   20c78:	e35a0000 	cmp	sl, #0
   20c7c:	ba000023 	blt	20d10 <UG_DrawRoundFrame+0x16c>
   20c80:	e3540000 	cmp	r4, #0
   20c84:	ba00001c 	blt	20cfc <UG_DrawRoundFrame+0x158>
   20c88:	e3570000 	cmp	r7, #0
   20c8c:	daffffd5 	ble	20be8 <UG_DrawRoundFrame+0x44>
   20c90:	e3a0300c 	mov	r3, #12
   20c94:	e58d8000 	str	r8, [sp]
   20c98:	e1a02007 	mov	r2, r7
   20c9c:	e1a01004 	mov	r1, r4
   20ca0:	e1a0000a 	mov	r0, sl
   20ca4:	ebfffd8c 	bl	202dc <UG_DrawArc.part.1>
   20ca8:	e59d300c 	ldr	r3, [sp, #12]
   20cac:	e3530000 	cmp	r3, #0
   20cb0:	ba000011 	blt	20cfc <UG_DrawRoundFrame+0x158>
   20cb4:	e58d8000 	str	r8, [sp]
   20cb8:	e1a01004 	mov	r1, r4
   20cbc:	e3a03003 	mov	r3, #3
   20cc0:	e1a02007 	mov	r2, r7
   20cc4:	e59d000c 	ldr	r0, [sp, #12]
   20cc8:	ebfffd83 	bl	202dc <UG_DrawArc.part.1>
   20ccc:	e3560000 	cmp	r6, #0
   20cd0:	baffffc4 	blt	20be8 <UG_DrawRoundFrame+0x44>
   20cd4:	e3a03030 	mov	r3, #48	; 0x30
   20cd8:	e58d8000 	str	r8, [sp]
   20cdc:	e1a0000a 	mov	r0, sl
   20ce0:	e1a02007 	mov	r2, r7
   20ce4:	e1a01006 	mov	r1, r6
   20ce8:	ebfffd7b 	bl	202dc <UG_DrawArc.part.1>
   20cec:	e59d300c 	ldr	r3, [sp, #12]
   20cf0:	e3530000 	cmp	r3, #0
   20cf4:	aa000010 	bge	20d3c <UG_DrawRoundFrame+0x198>
   20cf8:	eaffffba 	b	20be8 <UG_DrawRoundFrame+0x44>
   20cfc:	e3560000 	cmp	r6, #0
   20d00:	baffffb8 	blt	20be8 <UG_DrawRoundFrame+0x44>
   20d04:	e3570000 	cmp	r7, #0
   20d08:	cafffff1 	bgt	20cd4 <UG_DrawRoundFrame+0x130>
   20d0c:	eaffffb5 	b	20be8 <UG_DrawRoundFrame+0x44>
   20d10:	e59d300c 	ldr	r3, [sp, #12]
   20d14:	e3530000 	cmp	r3, #0
   20d18:	baffffb2 	blt	20be8 <UG_DrawRoundFrame+0x44>
   20d1c:	e3540000 	cmp	r4, #0
   20d20:	ba000001 	blt	20d2c <UG_DrawRoundFrame+0x188>
   20d24:	e3570000 	cmp	r7, #0
   20d28:	ca00000b 	bgt	20d5c <UG_DrawRoundFrame+0x1b8>
   20d2c:	e3560000 	cmp	r6, #0
   20d30:	baffffac 	blt	20be8 <UG_DrawRoundFrame+0x44>
   20d34:	e3570000 	cmp	r7, #0
   20d38:	daffffaa 	ble	20be8 <UG_DrawRoundFrame+0x44>
   20d3c:	e1a02007 	mov	r2, r7
   20d40:	e1a01006 	mov	r1, r6
   20d44:	e3a030c0 	mov	r3, #192	; 0xc0
   20d48:	e59d000c 	ldr	r0, [sp, #12]
   20d4c:	e58d8038 	str	r8, [sp, #56]	; 0x38
   20d50:	e28dd014 	add	sp, sp, #20
   20d54:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d58:	eafffd5f 	b	202dc <UG_DrawArc.part.1>
   20d5c:	e58d8000 	str	r8, [sp]
   20d60:	e1a01004 	mov	r1, r4
   20d64:	e3a03003 	mov	r3, #3
   20d68:	e1a02007 	mov	r2, r7
   20d6c:	e59d000c 	ldr	r0, [sp, #12]
   20d70:	ebfffd59 	bl	202dc <UG_DrawArc.part.1>
   20d74:	e3560000 	cmp	r6, #0
   20d78:	aaffffef 	bge	20d3c <UG_DrawRoundFrame+0x198>
   20d7c:	eaffff99 	b	20be8 <UG_DrawRoundFrame+0x44>

00020d80 <UG_FillCircle>:
   20d80:	e3520000 	cmp	r2, #0
   20d84:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d88:	c3a05000 	movgt	r5, #0
   20d8c:	d3a05001 	movle	r5, #1
   20d90:	e6ff8071 	uxth	r8, r1
   20d94:	e18557a8 	orr	r5, r5, r8, lsr #15
   20d98:	e6ff9070 	uxth	r9, r0
   20d9c:	e19557a9 	orrs	r5, r5, r9, lsr #15
   20da0:	e24dd024 	sub	sp, sp, #36	; 0x24
   20da4:	0a000001 	beq	20db0 <UG_FillCircle+0x30>
   20da8:	e28dd024 	add	sp, sp, #36	; 0x24
   20dac:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20db0:	e1a07002 	mov	r7, r2
   20db4:	e58d300c 	str	r3, [sp, #12]
   20db8:	e1a03082 	lsl	r3, r2, #1
   20dbc:	e2633003 	rsb	r3, r3, #3
   20dc0:	e58d201c 	str	r2, [sp, #28]
   20dc4:	e58d0018 	str	r0, [sp, #24]
   20dc8:	e58d1014 	str	r1, [sp, #20]
   20dcc:	e6bfa073 	sxth	sl, r3
   20dd0:	e6ff4077 	uxth	r4, r7
   20dd4:	e6ff6075 	uxth	r6, r5
   20dd8:	e048b004 	sub	fp, r8, r4
   20ddc:	e58d4010 	str	r4, [sp, #16]
   20de0:	e0492006 	sub	r2, r9, r6
   20de4:	e0884004 	add	r4, r8, r4
   20de8:	e3570000 	cmp	r7, #0
   20dec:	e6bfb07b 	sxth	fp, fp
   20df0:	e6bf4074 	sxth	r4, r4
   20df4:	e6bf2072 	sxth	r2, r2
   20df8:	da00000d 	ble	20e34 <UG_FillCircle+0xb4>
   20dfc:	e59d300c 	ldr	r3, [sp, #12]
   20e00:	e1a00002 	mov	r0, r2
   20e04:	e58d3000 	str	r3, [sp]
   20e08:	e1a0100b 	mov	r1, fp
   20e0c:	e1a03004 	mov	r3, r4
   20e10:	ebfffe6b 	bl	207c4 <UG_DrawLine>
   20e14:	e59d300c 	ldr	r3, [sp, #12]
   20e18:	e0892006 	add	r2, r9, r6
   20e1c:	e6bf2072 	sxth	r2, r2
   20e20:	e58d3000 	str	r3, [sp]
   20e24:	e1a0100b 	mov	r1, fp
   20e28:	e1a03004 	mov	r3, r4
   20e2c:	e1a00002 	mov	r0, r2
   20e30:	ebfffe63 	bl	207c4 <UG_DrawLine>
   20e34:	e6ff3077 	uxth	r3, r7
   20e38:	e0492003 	sub	r2, r9, r3
   20e3c:	e0484006 	sub	r4, r8, r6
   20e40:	e088b006 	add	fp, r8, r6
   20e44:	e3550000 	cmp	r5, #0
   20e48:	e6bf2072 	sxth	r2, r2
   20e4c:	e6bf4074 	sxth	r4, r4
   20e50:	e6bfb07b 	sxth	fp, fp
   20e54:	da00000d 	ble	20e90 <UG_FillCircle+0x110>
   20e58:	e59d500c 	ldr	r5, [sp, #12]
   20e5c:	e1a00002 	mov	r0, r2
   20e60:	e1a0300b 	mov	r3, fp
   20e64:	e1a01004 	mov	r1, r4
   20e68:	e58d5000 	str	r5, [sp]
   20e6c:	ebfffe54 	bl	207c4 <UG_DrawLine>
   20e70:	e6ff3077 	uxth	r3, r7
   20e74:	e0892003 	add	r2, r9, r3
   20e78:	e6bf2072 	sxth	r2, r2
   20e7c:	e58d5000 	str	r5, [sp]
   20e80:	e1a0300b 	mov	r3, fp
   20e84:	e1a01004 	mov	r1, r4
   20e88:	e1a00002 	mov	r0, r2
   20e8c:	ebfffe4c 	bl	207c4 <UG_DrawLine>
   20e90:	e35a0000 	cmp	sl, #0
   20e94:	e6ffa07a 	uxth	sl, sl
   20e98:	a6ff7077 	uxthge	r7, r7
   20e9c:	b28aa006 	addlt	sl, sl, #6
   20ea0:	a0463007 	subge	r3, r6, r7
   20ea4:	b08aa106 	addlt	sl, sl, r6, lsl #2
   20ea8:	a28aa00a 	addge	sl, sl, #10
   20eac:	a2477001 	subge	r7, r7, #1
   20eb0:	e2866001 	add	r6, r6, #1
   20eb4:	a08aa103 	addge	sl, sl, r3, lsl #2
   20eb8:	a6bf7077 	sxthge	r7, r7
   20ebc:	e6bf5076 	sxth	r5, r6
   20ec0:	b6bfa07a 	sxthlt	sl, sl
   20ec4:	a6bfa07a 	sxthge	sl, sl
   20ec8:	e1570005 	cmp	r7, r5
   20ecc:	aaffffbf 	bge	20dd0 <UG_FillCircle+0x50>
   20ed0:	e59d300c 	ldr	r3, [sp, #12]
   20ed4:	e59d201c 	ldr	r2, [sp, #28]
   20ed8:	e59d1014 	ldr	r1, [sp, #20]
   20edc:	e59d0018 	ldr	r0, [sp, #24]
   20ee0:	e28dd024 	add	sp, sp, #36	; 0x24
   20ee4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ee8:	eafffc86 	b	20108 <UG_DrawCircle.part.0>

00020eec <UG_ConsoleSetArea>:
   20eec:	e59fc014 	ldr	ip, [pc, #20]	; 20f08 <UG_ConsoleSetArea+0x1c>
   20ef0:	e59cc000 	ldr	ip, [ip]
   20ef4:	e1cc02b0 	strh	r0, [ip, #32]
   20ef8:	e1cc12b2 	strh	r1, [ip, #34]	; 0x22
   20efc:	e1cc22b4 	strh	r2, [ip, #36]	; 0x24
   20f00:	e1cc32b6 	strh	r3, [ip, #38]	; 0x26
   20f04:	e12fff1e 	bx	lr
   20f08:	0017af10 	.word	0x0017af10

00020f0c <UG_ConsoleSetForecolor>:
   20f0c:	e59f3008 	ldr	r3, [pc, #8]	; 20f1c <UG_ConsoleSetForecolor+0x10>
   20f10:	e5933000 	ldr	r3, [r3]
   20f14:	e5c30028 	strb	r0, [r3, #40]	; 0x28
   20f18:	e12fff1e 	bx	lr
   20f1c:	0017af10 	.word	0x0017af10

00020f20 <UG_ConsoleSetBackcolor>:
   20f20:	e59f3008 	ldr	r3, [pc, #8]	; 20f30 <UG_ConsoleSetBackcolor+0x10>
   20f24:	e5933000 	ldr	r3, [r3]
   20f28:	e5c30029 	strb	r0, [r3, #41]	; 0x29
   20f2c:	e12fff1e 	bx	lr
   20f30:	0017af10 	.word	0x0017af10

00020f34 <UG_SetForecolor>:
   20f34:	e59f3008 	ldr	r3, [pc, #8]	; 20f44 <UG_SetForecolor+0x10>
   20f38:	e5933000 	ldr	r3, [r3]
   20f3c:	e5c30042 	strb	r0, [r3, #66]	; 0x42
   20f40:	e12fff1e 	bx	lr
   20f44:	0017af10 	.word	0x0017af10

00020f48 <UG_SetBackcolor>:
   20f48:	e59f3008 	ldr	r3, [pc, #8]	; 20f58 <UG_SetBackcolor+0x10>
   20f4c:	e5933000 	ldr	r3, [r3]
   20f50:	e5c30043 	strb	r0, [r3, #67]	; 0x43
   20f54:	e12fff1e 	bx	lr
   20f58:	0017af10 	.word	0x0017af10

00020f5c <UG_GetXDim>:
   20f5c:	e59f3008 	ldr	r3, [pc, #8]	; 20f6c <UG_GetXDim+0x10>
   20f60:	e5933000 	ldr	r3, [r3]
   20f64:	e1d300f4 	ldrsh	r0, [r3, #4]
   20f68:	e12fff1e 	bx	lr
   20f6c:	0017af10 	.word	0x0017af10

00020f70 <UG_GetYDim>:
   20f70:	e59f3008 	ldr	r3, [pc, #8]	; 20f80 <UG_GetYDim+0x10>
   20f74:	e5933000 	ldr	r3, [r3]
   20f78:	e1d300f6 	ldrsh	r0, [r3, #6]
   20f7c:	e12fff1e 	bx	lr
   20f80:	0017af10 	.word	0x0017af10

00020f84 <UG_FontSetHSpace>:
   20f84:	e59f3008 	ldr	r3, [pc, #8]	; 20f94 <UG_FontSetHSpace+0x10>
   20f88:	e5933000 	ldr	r3, [r3]
   20f8c:	e5c30040 	strb	r0, [r3, #64]	; 0x40
   20f90:	e12fff1e 	bx	lr
   20f94:	0017af10 	.word	0x0017af10

00020f98 <UG_FontSetVSpace>:
   20f98:	e59f3008 	ldr	r3, [pc, #8]	; 20fa8 <UG_FontSetVSpace+0x10>
   20f9c:	e5933000 	ldr	r3, [r3]
   20fa0:	e5c30041 	strb	r0, [r3, #65]	; 0x41
   20fa4:	e12fff1e 	bx	lr
   20fa8:	0017af10 	.word	0x0017af10

00020fac <_UG_PutChar>:
   20fac:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20fb0:	e6ef5070 	uxtb	r5, r0
   20fb4:	e24dd024 	sub	sp, sp, #36	; 0x24
   20fb8:	e245c0b0 	sub	ip, r5, #176	; 0xb0
   20fbc:	e5dd6048 	ldrb	r6, [sp, #72]	; 0x48
   20fc0:	e59d704c 	ldr	r7, [sp, #76]	; 0x4c
   20fc4:	e35c004c 	cmp	ip, #76	; 0x4c
   20fc8:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
   20fcc:	ea0000c5 	b	212e8 <_UG_PutChar+0x33c>
   20fd0:	000212d0 	.word	0x000212d0
   20fd4:	000212e8 	.word	0x000212e8
   20fd8:	000212e8 	.word	0x000212e8
   20fdc:	000212e8 	.word	0x000212e8
   20fe0:	000212e8 	.word	0x000212e8
   20fe4:	000212dc 	.word	0x000212dc
   20fe8:	000212e8 	.word	0x000212e8
   20fec:	000212e8 	.word	0x000212e8
   20ff0:	000212e8 	.word	0x000212e8
   20ff4:	000212e8 	.word	0x000212e8
   20ff8:	000212e8 	.word	0x000212e8
   20ffc:	000212e8 	.word	0x000212e8
   21000:	000212e8 	.word	0x000212e8
   21004:	000212e8 	.word	0x000212e8
   21008:	000212e8 	.word	0x000212e8
   2100c:	000212e8 	.word	0x000212e8
   21010:	000212e8 	.word	0x000212e8
   21014:	000212e8 	.word	0x000212e8
   21018:	000212e8 	.word	0x000212e8
   2101c:	000212e8 	.word	0x000212e8
   21020:	000212a0 	.word	0x000212a0
   21024:	000212e8 	.word	0x000212e8
   21028:	000212e8 	.word	0x000212e8
   2102c:	000212e8 	.word	0x000212e8
   21030:	000212e8 	.word	0x000212e8
   21034:	000212e8 	.word	0x000212e8
   21038:	000212e8 	.word	0x000212e8
   2103c:	000212e8 	.word	0x000212e8
   21040:	000212e8 	.word	0x000212e8
   21044:	000212e8 	.word	0x000212e8
   21048:	000212e8 	.word	0x000212e8
   2104c:	000212e8 	.word	0x000212e8
   21050:	000212e8 	.word	0x000212e8
   21054:	000212e8 	.word	0x000212e8
   21058:	000212e8 	.word	0x000212e8
   2105c:	000212e8 	.word	0x000212e8
   21060:	000212e8 	.word	0x000212e8
   21064:	000212e8 	.word	0x000212e8
   21068:	000212ac 	.word	0x000212ac
   2106c:	000212e8 	.word	0x000212e8
   21070:	000212e8 	.word	0x000212e8
   21074:	000212e8 	.word	0x000212e8
   21078:	000212e8 	.word	0x000212e8
   2107c:	000212e8 	.word	0x000212e8
   21080:	000212b8 	.word	0x000212b8
   21084:	000212e8 	.word	0x000212e8
   21088:	000212e8 	.word	0x000212e8
   2108c:	000212e8 	.word	0x000212e8
   21090:	000212e8 	.word	0x000212e8
   21094:	000212e8 	.word	0x000212e8
   21098:	000212e8 	.word	0x000212e8
   2109c:	000212e8 	.word	0x000212e8
   210a0:	000212c4 	.word	0x000212c4
   210a4:	000212e8 	.word	0x000212e8
   210a8:	000212e8 	.word	0x000212e8
   210ac:	000212e8 	.word	0x000212e8
   210b0:	000212e8 	.word	0x000212e8
   210b4:	000212e8 	.word	0x000212e8
   210b8:	000212e8 	.word	0x000212e8
   210bc:	000212e8 	.word	0x000212e8
   210c0:	000212e8 	.word	0x000212e8
   210c4:	000212e8 	.word	0x000212e8
   210c8:	000212e8 	.word	0x000212e8
   210cc:	000212e8 	.word	0x000212e8
   210d0:	000212e8 	.word	0x000212e8
   210d4:	000212e8 	.word	0x000212e8
   210d8:	000212e8 	.word	0x000212e8
   210dc:	000212e8 	.word	0x000212e8
   210e0:	000212e8 	.word	0x000212e8
   210e4:	000212e8 	.word	0x000212e8
   210e8:	00021104 	.word	0x00021104
   210ec:	000212e8 	.word	0x000212e8
   210f0:	000212e8 	.word	0x000212e8
   210f4:	000212e8 	.word	0x000212e8
   210f8:	000212e8 	.word	0x000212e8
   210fc:	000212e8 	.word	0x000212e8
   21100:	00021284 	.word	0x00021284
   21104:	e3a0c094 	mov	ip, #148	; 0x94
   21108:	e1a0500c 	mov	r5, ip
   2110c:	e1d7a0ba 	ldrh	sl, [r7, #10]
   21110:	e15a000c 	cmp	sl, ip
   21114:	8a00005f 	bhi	21298 <_UG_PutChar+0x2ec>
   21118:	e1d700bc 	ldrh	r0, [r7, #12]
   2111c:	e150000c 	cmp	r0, ip
   21120:	3a00005c 	bcc	21298 <_UG_PutChar+0x2ec>
   21124:	e1d7c0f6 	ldrsh	ip, [r7, #6]
   21128:	e6ff007c 	uxth	r0, ip
   2112c:	e3500000 	cmp	r0, #0
   21130:	e58d0004 	str	r0, [sp, #4]
   21134:	0a000057 	beq	21298 <_UG_PutChar+0x2ec>
   21138:	e3100007 	tst	r0, #7
   2113c:	e1a001a0 	lsr	r0, r0, #3
   21140:	e58d000c 	str	r0, [sp, #12]
   21144:	12800001 	addne	r0, r0, #1
   21148:	158d000c 	strne	r0, [sp, #12]
   2114c:	e5970010 	ldr	r0, [r7, #16]
   21150:	e59fb4b8 	ldr	fp, [pc, #1208]	; 21610 <_UG_PutChar+0x664>
   21154:	e3500000 	cmp	r0, #0
   21158:	1045e00a 	subne	lr, r5, sl
   2115c:	17d0000e 	ldrbne	r0, [r0, lr]
   21160:	e1a09003 	mov	r9, r3
   21164:	158d0004 	strne	r0, [sp, #4]
   21168:	e1a00001 	mov	r0, r1
   2116c:	e59b1000 	ldr	r1, [fp]
   21170:	e6ff4072 	uxth	r4, r2
   21174:	e5d1305c 	ldrb	r3, [r1, #92]	; 0x5c
   21178:	e58d4010 	str	r4, [sp, #16]
   2117c:	e213e002 	ands	lr, r3, #2
   21180:	0a000092 	beq	213d0 <_UG_PutChar+0x424>
   21184:	e1d730b8 	ldrh	r3, [r7, #8]
   21188:	e244e001 	sub	lr, r4, #1
   2118c:	e083300e 	add	r3, r3, lr
   21190:	e59de004 	ldr	lr, [sp, #4]
   21194:	e240c001 	sub	ip, r0, #1
   21198:	e08ec00c 	add	ip, lr, ip
   2119c:	e5914058 	ldr	r4, [r1, #88]	; 0x58
   211a0:	e6bf3073 	sxth	r3, r3
   211a4:	e1a01002 	mov	r1, r2
   211a8:	e6bf207c 	sxth	r2, ip
   211ac:	e12fff34 	blx	r4
   211b0:	e5d71004 	ldrb	r1, [r7, #4]
   211b4:	e1a04000 	mov	r4, r0
   211b8:	e3510000 	cmp	r1, #0
   211bc:	1a000058 	bne	21324 <_UG_PutChar+0x378>
   211c0:	e1d730ba 	ldrh	r3, [r7, #10]
   211c4:	e1d720f8 	ldrsh	r2, [r7, #8]
   211c8:	e0455003 	sub	r5, r5, r3
   211cc:	e0050592 	mul	r5, r2, r5
   211d0:	e59d300c 	ldr	r3, [sp, #12]
   211d4:	e3520000 	cmp	r2, #0
   211d8:	e0050593 	mul	r5, r3, r5
   211dc:	da00002d 	ble	21298 <_UG_PutChar+0x2ec>
   211e0:	e59d300c 	ldr	r3, [sp, #12]
   211e4:	e58d1008 	str	r1, [sp, #8]
   211e8:	e2433001 	sub	r3, r3, #1
   211ec:	e6ff3073 	uxth	r3, r3
   211f0:	e2833001 	add	r3, r3, #1
   211f4:	e58d3010 	str	r3, [sp, #16]
   211f8:	e59d300c 	ldr	r3, [sp, #12]
   211fc:	e3530000 	cmp	r3, #0
   21200:	0a00003b 	beq	212f4 <_UG_PutChar+0x348>
   21204:	e1a02005 	mov	r2, r5
   21208:	e59d3010 	ldr	r3, [sp, #16]
   2120c:	e59db004 	ldr	fp, [sp, #4]
   21210:	e0833005 	add	r3, r3, r5
   21214:	e58d3000 	str	r3, [sp]
   21218:	e5973000 	ldr	r3, [r7]
   2121c:	e35b0000 	cmp	fp, #0
   21220:	e2855001 	add	r5, r5, #1
   21224:	e7d3a002 	ldrb	sl, [r3, r2]
   21228:	13a08000 	movne	r8, #0
   2122c:	0a000037 	beq	21310 <_UG_PutChar+0x364>
   21230:	e31a0001 	tst	sl, #1
   21234:	e2888001 	add	r8, r8, #1
   21238:	11a00009 	movne	r0, r9
   2123c:	01a00006 	moveq	r0, r6
   21240:	e24bb001 	sub	fp, fp, #1
   21244:	e6ff8078 	uxth	r8, r8
   21248:	e12fff34 	blx	r4
   2124c:	e6ffb07b 	uxth	fp, fp
   21250:	e3580007 	cmp	r8, #7
   21254:	83a03000 	movhi	r3, #0
   21258:	93a03001 	movls	r3, #1
   2125c:	e35b0000 	cmp	fp, #0
   21260:	03a03000 	moveq	r3, #0
   21264:	e3530000 	cmp	r3, #0
   21268:	e1a0a0aa 	lsr	sl, sl, #1
   2126c:	1affffef 	bne	21230 <_UG_PutChar+0x284>
   21270:	e59d3000 	ldr	r3, [sp]
   21274:	e1530005 	cmp	r3, r5
   21278:	0a00001c 	beq	212f0 <_UG_PutChar+0x344>
   2127c:	e1a02005 	mov	r2, r5
   21280:	eaffffe4 	b	21218 <_UG_PutChar+0x26c>
   21284:	e3a0c081 	mov	ip, #129	; 0x81
   21288:	e1d7a0ba 	ldrh	sl, [r7, #10]
   2128c:	e1a0500c 	mov	r5, ip
   21290:	e15a000c 	cmp	sl, ip
   21294:	9affff9f 	bls	21118 <_UG_PutChar+0x16c>
   21298:	e28dd024 	add	sp, sp, #36	; 0x24
   2129c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   212a0:	e3a0c08e 	mov	ip, #142	; 0x8e
   212a4:	e1a0500c 	mov	r5, ip
   212a8:	eaffff97 	b	2110c <_UG_PutChar+0x160>
   212ac:	e3a0c099 	mov	ip, #153	; 0x99
   212b0:	e1a0500c 	mov	r5, ip
   212b4:	eaffff94 	b	2110c <_UG_PutChar+0x160>
   212b8:	e3a0c09a 	mov	ip, #154	; 0x9a
   212bc:	e1a0500c 	mov	r5, ip
   212c0:	eaffff91 	b	2110c <_UG_PutChar+0x160>
   212c4:	e3a0c084 	mov	ip, #132	; 0x84
   212c8:	e1a0500c 	mov	r5, ip
   212cc:	eaffff8e 	b	2110c <_UG_PutChar+0x160>
   212d0:	e3a0c0f8 	mov	ip, #248	; 0xf8
   212d4:	e1a0500c 	mov	r5, ip
   212d8:	eaffff8b 	b	2110c <_UG_PutChar+0x160>
   212dc:	e3a0c0e6 	mov	ip, #230	; 0xe6
   212e0:	e1a0500c 	mov	r5, ip
   212e4:	eaffff88 	b	2110c <_UG_PutChar+0x160>
   212e8:	e6ffc075 	uxth	ip, r5
   212ec:	eaffff86 	b	2110c <_UG_PutChar+0x160>
   212f0:	e1d720f8 	ldrsh	r2, [r7, #8]
   212f4:	e59d3008 	ldr	r3, [sp, #8]
   212f8:	e283a001 	add	sl, r3, #1
   212fc:	e6ff307a 	uxth	r3, sl
   21300:	e1530002 	cmp	r3, r2
   21304:	e58d3008 	str	r3, [sp, #8]
   21308:	baffffba 	blt	211f8 <_UG_PutChar+0x24c>
   2130c:	eaffffe1 	b	21298 <_UG_PutChar+0x2ec>
   21310:	e59d3000 	ldr	r3, [sp]
   21314:	e1550003 	cmp	r5, r3
   21318:	0afffff4 	beq	212f0 <_UG_PutChar+0x344>
   2131c:	e2825002 	add	r5, r2, #2
   21320:	eaffffd2 	b	21270 <_UG_PutChar+0x2c4>
   21324:	e3510001 	cmp	r1, #1
   21328:	1affffda 	bne	21298 <_UG_PutChar+0x2ec>
   2132c:	e1d730ba 	ldrh	r3, [r7, #10]
   21330:	e1d720f8 	ldrsh	r2, [r7, #8]
   21334:	e0453003 	sub	r3, r5, r3
   21338:	e0030392 	mul	r3, r2, r3
   2133c:	e1d7c0f6 	ldrsh	ip, [r7, #6]
   21340:	e3520000 	cmp	r2, #0
   21344:	e003039c 	mul	r3, ip, r3
   21348:	daffffd2 	ble	21298 <_UG_PutChar+0x2ec>
   2134c:	e59da004 	ldr	sl, [sp, #4]
   21350:	e3a08000 	mov	r8, #0
   21354:	e24a1001 	sub	r1, sl, #1
   21358:	e6ff1071 	uxth	r1, r1
   2135c:	e281b001 	add	fp, r1, #1
   21360:	e58db000 	str	fp, [sp]
   21364:	e1a0b007 	mov	fp, r7
   21368:	e35a0000 	cmp	sl, #0
   2136c:	01a07003 	moveq	r7, r3
   21370:	0a00000f 	beq	213b4 <_UG_PutChar+0x408>
   21374:	e59d2000 	ldr	r2, [sp]
   21378:	e0825003 	add	r5, r2, r3
   2137c:	e59b2000 	ldr	r2, [fp]
   21380:	e2837001 	add	r7, r3, #1
   21384:	e7d23003 	ldrb	r3, [r2, r3]
   21388:	e1620983 	smulbb	r2, r3, r9
   2138c:	e2630c01 	rsb	r0, r3, #256	; 0x100
   21390:	e0202096 	mla	r0, r6, r0, r2
   21394:	e1a00440 	asr	r0, r0, #8
   21398:	e6ef0070 	uxtb	r0, r0
   2139c:	e12fff34 	blx	r4
   213a0:	e1570005 	cmp	r7, r5
   213a4:	e1a03007 	mov	r3, r7
   213a8:	1afffff3 	bne	2137c <_UG_PutChar+0x3d0>
   213ac:	e1dbc0f6 	ldrsh	ip, [fp, #6]
   213b0:	e1db20f8 	ldrsh	r2, [fp, #8]
   213b4:	e2888001 	add	r8, r8, #1
   213b8:	e6ff8078 	uxth	r8, r8
   213bc:	e04c300a 	sub	r3, ip, sl
   213c0:	e1580002 	cmp	r8, r2
   213c4:	e0833007 	add	r3, r3, r7
   213c8:	baffffe6 	blt	21368 <_UG_PutChar+0x3bc>
   213cc:	eaffffb1 	b	21298 <_UG_PutChar+0x2ec>
   213d0:	e5d73004 	ldrb	r3, [r7, #4]
   213d4:	e3530000 	cmp	r3, #0
   213d8:	1a000048 	bne	21500 <_UG_PutChar+0x554>
   213dc:	e1d720f8 	ldrsh	r2, [r7, #8]
   213e0:	e045a00a 	sub	sl, r5, sl
   213e4:	e0030a92 	mul	r3, r2, sl
   213e8:	e59d100c 	ldr	r1, [sp, #12]
   213ec:	e3520000 	cmp	r2, #0
   213f0:	e00a0391 	mul	sl, r1, r3
   213f4:	daffffa7 	ble	21298 <_UG_PutChar+0x2ec>
   213f8:	e59d3010 	ldr	r3, [sp, #16]
   213fc:	e58d6000 	str	r6, [sp]
   21400:	e58d3014 	str	r3, [sp, #20]
   21404:	e2413001 	sub	r3, r1, #1
   21408:	e6ff3073 	uxth	r3, r3
   2140c:	e6ff1070 	uxth	r1, r0
   21410:	e2833001 	add	r3, r3, #1
   21414:	e58d1018 	str	r1, [sp, #24]
   21418:	e58d301c 	str	r3, [sp, #28]
   2141c:	e58d704c 	str	r7, [sp, #76]	; 0x4c
   21420:	e59d300c 	ldr	r3, [sp, #12]
   21424:	e3530000 	cmp	r3, #0
   21428:	0a00002a 	beq	214d8 <_UG_PutChar+0x52c>
   2142c:	e1a0300a 	mov	r3, sl
   21430:	e59d201c 	ldr	r2, [sp, #28]
   21434:	e59d5004 	ldr	r5, [sp, #4]
   21438:	e082200a 	add	r2, r2, sl
   2143c:	e59d7018 	ldr	r7, [sp, #24]
   21440:	e1dd81f4 	ldrsh	r8, [sp, #20]
   21444:	e58d2008 	str	r2, [sp, #8]
   21448:	e59d204c 	ldr	r2, [sp, #76]	; 0x4c
   2144c:	e3550000 	cmp	r5, #0
   21450:	e5922000 	ldr	r2, [r2]
   21454:	e28aa001 	add	sl, sl, #1
   21458:	e7d26003 	ldrb	r6, [r2, r3]
   2145c:	0a000017 	beq	214c0 <_UG_PutChar+0x514>
   21460:	e1a04007 	mov	r4, r7
   21464:	e59b3000 	ldr	r3, [fp]
   21468:	e3160001 	tst	r6, #1
   2146c:	e6bf0074 	sxth	r0, r4
   21470:	e2844001 	add	r4, r4, #1
   21474:	11a02009 	movne	r2, r9
   21478:	059d2000 	ldreq	r2, [sp]
   2147c:	e5933000 	ldr	r3, [r3]
   21480:	e1a01008 	mov	r1, r8
   21484:	e6ff4074 	uxth	r4, r4
   21488:	e12fff33 	blx	r3
   2148c:	e0443007 	sub	r3, r4, r7
   21490:	e6ff2073 	uxth	r2, r3
   21494:	e2455001 	sub	r5, r5, #1
   21498:	e3520007 	cmp	r2, #7
   2149c:	e6ff5075 	uxth	r5, r5
   214a0:	83a03000 	movhi	r3, #0
   214a4:	93a03001 	movls	r3, #1
   214a8:	e3550000 	cmp	r5, #0
   214ac:	03a03000 	moveq	r3, #0
   214b0:	e3530000 	cmp	r3, #0
   214b4:	e1a060a6 	lsr	r6, r6, #1
   214b8:	1affffe9 	bne	21464 <_UG_PutChar+0x4b8>
   214bc:	e1a07004 	mov	r7, r4
   214c0:	e59d3008 	ldr	r3, [sp, #8]
   214c4:	e15a0003 	cmp	sl, r3
   214c8:	e1a0300a 	mov	r3, sl
   214cc:	1affffdd 	bne	21448 <_UG_PutChar+0x49c>
   214d0:	e59d304c 	ldr	r3, [sp, #76]	; 0x4c
   214d4:	e1d320f8 	ldrsh	r2, [r3, #8]
   214d8:	e59d3014 	ldr	r3, [sp, #20]
   214dc:	e59d1010 	ldr	r1, [sp, #16]
   214e0:	e2833001 	add	r3, r3, #1
   214e4:	e6ff3073 	uxth	r3, r3
   214e8:	e58d3014 	str	r3, [sp, #20]
   214ec:	e0433001 	sub	r3, r3, r1
   214f0:	e6ff3073 	uxth	r3, r3
   214f4:	e1530002 	cmp	r3, r2
   214f8:	baffffc8 	blt	21420 <_UG_PutChar+0x474>
   214fc:	eaffff65 	b	21298 <_UG_PutChar+0x2ec>
   21500:	e3530001 	cmp	r3, #1
   21504:	1affff63 	bne	21298 <_UG_PutChar+0x2ec>
   21508:	e1d720f8 	ldrsh	r2, [r7, #8]
   2150c:	e045a00a 	sub	sl, r5, sl
   21510:	e00a0a92 	mul	sl, r2, sl
   21514:	e0030a9c 	mul	r3, ip, sl
   21518:	e3520000 	cmp	r2, #0
   2151c:	e58d3008 	str	r3, [sp, #8]
   21520:	daffff5c 	ble	21298 <_UG_PutChar+0x2ec>
   21524:	e59d3004 	ldr	r3, [sp, #4]
   21528:	e6ff1070 	uxth	r1, r0
   2152c:	e2433001 	sub	r3, r3, #1
   21530:	e6ff3073 	uxth	r3, r3
   21534:	e2833001 	add	r3, r3, #1
   21538:	e58de00c 	str	lr, [sp, #12]
   2153c:	e58d1014 	str	r1, [sp, #20]
   21540:	e58d3018 	str	r3, [sp, #24]
   21544:	e59d3004 	ldr	r3, [sp, #4]
   21548:	e3530000 	cmp	r3, #0
   2154c:	0a000023 	beq	215e0 <_UG_PutChar+0x634>
   21550:	e1cd00dc 	ldrd	r0, [sp, #12]
   21554:	e59d2014 	ldr	r2, [sp, #20]
   21558:	e59d5008 	ldr	r5, [sp, #8]
   2155c:	e1a04002 	mov	r4, r2
   21560:	e1a0c005 	mov	ip, r5
   21564:	e081a000 	add	sl, r1, r0
   21568:	e0838002 	add	r8, r3, r2
   2156c:	e6bfa07a 	sxth	sl, sl
   21570:	e6ff8078 	uxth	r8, r8
   21574:	e58d6000 	str	r6, [sp]
   21578:	e5973000 	ldr	r3, [r7]
   2157c:	e59b2000 	ldr	r2, [fp]
   21580:	e7d3300c 	ldrb	r3, [r3, ip]
   21584:	e5925000 	ldr	r5, [r2]
   21588:	e1610983 	smulbb	r1, r3, r9
   2158c:	e2632c01 	rsb	r2, r3, #256	; 0x100
   21590:	e59d3000 	ldr	r3, [sp]
   21594:	e6bf0074 	sxth	r0, r4
   21598:	e0221293 	mla	r2, r3, r2, r1
   2159c:	e2844001 	add	r4, r4, #1
   215a0:	e1a02442 	asr	r2, r2, #8
   215a4:	e6ef2072 	uxtb	r2, r2
   215a8:	e1a0100a 	mov	r1, sl
   215ac:	e6ff4074 	uxth	r4, r4
   215b0:	e28c6001 	add	r6, ip, #1
   215b4:	e12fff35 	blx	r5
   215b8:	e1540008 	cmp	r4, r8
   215bc:	e1a0c006 	mov	ip, r6
   215c0:	1affffec 	bne	21578 <_UG_PutChar+0x5cc>
   215c4:	e59d3008 	ldr	r3, [sp, #8]
   215c8:	e59d1018 	ldr	r1, [sp, #24]
   215cc:	e59d6000 	ldr	r6, [sp]
   215d0:	e0833001 	add	r3, r3, r1
   215d4:	e1d7c0f6 	ldrsh	ip, [r7, #6]
   215d8:	e1d720f8 	ldrsh	r2, [r7, #8]
   215dc:	e58d3008 	str	r3, [sp, #8]
   215e0:	e59d300c 	ldr	r3, [sp, #12]
   215e4:	e59d1008 	ldr	r1, [sp, #8]
   215e8:	e2833001 	add	r3, r3, #1
   215ec:	e6ff3073 	uxth	r3, r3
   215f0:	e58d300c 	str	r3, [sp, #12]
   215f4:	e1530002 	cmp	r3, r2
   215f8:	e59d3004 	ldr	r3, [sp, #4]
   215fc:	e04c3003 	sub	r3, ip, r3
   21600:	e0813003 	add	r3, r1, r3
   21604:	e58d3008 	str	r3, [sp, #8]
   21608:	baffffcd 	blt	21544 <_UG_PutChar+0x598>
   2160c:	eaffff21 	b	21298 <_UG_PutChar+0x2ec>
   21610:	0017af10 	.word	0x0017af10

00021614 <UG_PutChar>:
   21614:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   21618:	e59fc020 	ldr	ip, [pc, #32]	; 21640 <UG_PutChar+0x2c>
   2161c:	e24dd00c 	sub	sp, sp, #12
   21620:	e59cc000 	ldr	ip, [ip]
   21624:	e5dde010 	ldrb	lr, [sp, #16]
   21628:	e28cc02c 	add	ip, ip, #44	; 0x2c
   2162c:	e58de000 	str	lr, [sp]
   21630:	e58dc004 	str	ip, [sp, #4]
   21634:	ebfffe5c 	bl	20fac <_UG_PutChar>
   21638:	e28dd00c 	add	sp, sp, #12
   2163c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   21640:	0017af10 	.word	0x0017af10

00021644 <UG_PutString>:
   21644:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   21648:	e1a08000 	mov	r8, r0
   2164c:	e1a07001 	mov	r7, r1
   21650:	e1a05000 	mov	r5, r0
   21654:	e59f60bc 	ldr	r6, [pc, #188]	; 21718 <UG_PutString+0xd4>
   21658:	e24dd00c 	sub	sp, sp, #12
   2165c:	e2424001 	sub	r4, r2, #1
   21660:	e1f400d1 	ldrsb	r0, [r4, #1]!
   21664:	e3500000 	cmp	r0, #0
   21668:	0a000028 	beq	21710 <UG_PutString+0xcc>
   2166c:	e596c000 	ldr	ip, [r6]
   21670:	e1dc33b6 	ldrh	r3, [ip, #54]	; 0x36
   21674:	e1500003 	cmp	r0, r3
   21678:	bafffff8 	blt	21660 <UG_PutString+0x1c>
   2167c:	e1dc23b8 	ldrh	r2, [ip, #56]	; 0x38
   21680:	e1500002 	cmp	r0, r2
   21684:	cafffff5 	bgt	21660 <UG_PutString+0x1c>
   21688:	e1dc10f4 	ldrsh	r1, [ip, #4]
   2168c:	e350000a 	cmp	r0, #10
   21690:	01a05001 	moveq	r5, r1
   21694:	0afffff1 	beq	21660 <UG_PutString+0x1c>
   21698:	e59c203c 	ldr	r2, [ip, #60]	; 0x3c
   2169c:	e3520000 	cmp	r2, #0
   216a0:	10403003 	subne	r3, r0, r3
   216a4:	17d29003 	ldrbne	r9, [r2, r3]
   216a8:	05dc9032 	ldrbeq	r9, [ip, #50]	; 0x32
   216ac:	e0853009 	add	r3, r5, r9
   216b0:	e1510003 	cmp	r1, r3
   216b4:	ca000005 	bgt	216d0 <UG_PutString+0x8c>
   216b8:	e1a05008 	mov	r5, r8
   216bc:	e1dc24d1 	ldrsb	r2, [ip, #65]	; 0x41
   216c0:	e1dc33b4 	ldrh	r3, [ip, #52]	; 0x34
   216c4:	e0833002 	add	r3, r3, r2
   216c8:	e0837007 	add	r7, r3, r7
   216cc:	e6bf7077 	sxth	r7, r7
   216d0:	e28c202c 	add	r2, ip, #44	; 0x2c
   216d4:	e5dc3042 	ldrb	r3, [ip, #66]	; 0x42
   216d8:	e58d2004 	str	r2, [sp, #4]
   216dc:	e5dc2043 	ldrb	r2, [ip, #67]	; 0x43
   216e0:	e1a01005 	mov	r1, r5
   216e4:	e58d2000 	str	r2, [sp]
   216e8:	e1a02007 	mov	r2, r7
   216ec:	ebfffe2e 	bl	20fac <_UG_PutChar>
   216f0:	e5963000 	ldr	r3, [r6]
   216f4:	e1f400d1 	ldrsb	r0, [r4, #1]!
   216f8:	e1d334d0 	ldrsb	r3, [r3, #64]	; 0x40
   216fc:	e3500000 	cmp	r0, #0
   21700:	e0899003 	add	r9, r9, r3
   21704:	e0895005 	add	r5, r9, r5
   21708:	e6bf5075 	sxth	r5, r5
   2170c:	1affffd6 	bne	2166c <UG_PutString+0x28>
   21710:	e28dd00c 	add	sp, sp, #12
   21714:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   21718:	0017af10 	.word	0x0017af10

0002171c <UG_ConsolePutString>:
   2171c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   21720:	e59f60fc 	ldr	r6, [pc, #252]	; 21824 <UG_ConsolePutString+0x108>
   21724:	e24dd00c 	sub	sp, sp, #12
   21728:	e2405001 	sub	r5, r0, #1
   2172c:	e1f540d1 	ldrsb	r4, [r5, #1]!
   21730:	e3540000 	cmp	r4, #0
   21734:	0a00002a 	beq	217e4 <UG_ConsolePutString+0xc8>
   21738:	e354000a 	cmp	r4, #10
   2173c:	e596c000 	ldr	ip, [r6]
   21740:	0a000034 	beq	21818 <UG_ConsolePutString+0xfc>
   21744:	e59c203c 	ldr	r2, [ip, #60]	; 0x3c
   21748:	e1dc72f4 	ldrsh	r7, [ip, #36]	; 0x24
   2174c:	e3520000 	cmp	r2, #0
   21750:	11dc33b6 	ldrhne	r3, [ip, #54]	; 0x36
   21754:	05dc1032 	ldrbeq	r1, [ip, #50]	; 0x32
   21758:	10443003 	subne	r3, r4, r3
   2175c:	17d21003 	ldrbne	r1, [r2, r3]
   21760:	e1dc34d0 	ldrsb	r3, [ip, #64]	; 0x40
   21764:	e1dc21bc 	ldrh	r2, [ip, #28]
   21768:	e0813003 	add	r3, r1, r3
   2176c:	e0833002 	add	r3, r3, r2
   21770:	e6bf3073 	sxth	r3, r3
   21774:	e0831001 	add	r1, r3, r1
   21778:	e1510007 	cmp	r1, r7
   2177c:	e1cc31bc 	strh	r3, [ip, #28]
   21780:	e1dc21fe 	ldrsh	r2, [ip, #30]
   21784:	e1dc13f4 	ldrsh	r1, [ip, #52]	; 0x34
   21788:	da000006 	ble	217a8 <UG_ConsolePutString+0x8c>
   2178c:	e1dc34d1 	ldrsb	r3, [ip, #65]	; 0x41
   21790:	e0822001 	add	r2, r2, r1
   21794:	e0822003 	add	r2, r2, r3
   21798:	e1dc32b0 	ldrh	r3, [ip, #32]
   2179c:	e6bf2072 	sxth	r2, r2
   217a0:	e1cc21be 	strh	r2, [ip, #30]
   217a4:	e1cc31bc 	strh	r3, [ip, #28]
   217a8:	e1dc32f6 	ldrsh	r3, [ip, #38]	; 0x26
   217ac:	e0821001 	add	r1, r2, r1
   217b0:	e1510003 	cmp	r1, r3
   217b4:	e5dce029 	ldrb	lr, [ip, #41]	; 0x29
   217b8:	ca00000b 	bgt	217ec <UG_ConsolePutString+0xd0>
   217bc:	e5dc3028 	ldrb	r3, [ip, #40]	; 0x28
   217c0:	e1dc11fc 	ldrsh	r1, [ip, #28]
   217c4:	e28cc02c 	add	ip, ip, #44	; 0x2c
   217c8:	e1a00004 	mov	r0, r4
   217cc:	e58dc004 	str	ip, [sp, #4]
   217d0:	e58de000 	str	lr, [sp]
   217d4:	ebfffdf4 	bl	20fac <_UG_PutChar>
   217d8:	e1f540d1 	ldrsb	r4, [r5, #1]!
   217dc:	e3540000 	cmp	r4, #0
   217e0:	1affffd4 	bne	21738 <UG_ConsolePutString+0x1c>
   217e4:	e28dd00c 	add	sp, sp, #12
   217e8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   217ec:	e1dc02f0 	ldrsh	r0, [ip, #32]
   217f0:	e1dc12f2 	ldrsh	r1, [ip, #34]	; 0x22
   217f4:	e1cc01bc 	strh	r0, [ip, #28]
   217f8:	e1cc11be 	strh	r1, [ip, #30]
   217fc:	e1a02007 	mov	r2, r7
   21800:	e58de000 	str	lr, [sp]
   21804:	ebfffb77 	bl	205e8 <UG_FillFrame>
   21808:	e596c000 	ldr	ip, [r6]
   2180c:	e1dc21fe 	ldrsh	r2, [ip, #30]
   21810:	e5dce029 	ldrb	lr, [ip, #41]	; 0x29
   21814:	eaffffe8 	b	217bc <UG_ConsolePutString+0xa0>
   21818:	e1dc30b4 	ldrh	r3, [ip, #4]
   2181c:	e1cc31bc 	strh	r3, [ip, #28]
   21820:	eaffffc1 	b	2172c <UG_ConsolePutString+0x10>
   21824:	0017af10 	.word	0x0017af10

00021828 <_UG_PutText>:
   21828:	e5902004 	ldr	r2, [r0, #4]
   2182c:	e590c000 	ldr	ip, [r0]
   21830:	e5923000 	ldr	r3, [r2]
   21834:	e35c0000 	cmp	ip, #0
   21838:	13530000 	cmpne	r3, #0
   2183c:	012fff1e 	bxeq	lr
   21840:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21844:	e1d070fa 	ldrsh	r7, [r0, #10]
   21848:	e1d040fe 	ldrsh	r4, [r0, #14]
   2184c:	e1d2a0f8 	ldrsh	sl, [r2, #8]
   21850:	e0443007 	sub	r3, r4, r7
   21854:	e153000a 	cmp	r3, sl
   21858:	e24dd024 	sub	sp, sp, #36	; 0x24
   2185c:	ba00007c 	blt	21a54 <_UG_PutText+0x22c>
   21860:	e1dc50d0 	ldrsb	r5, [ip]
   21864:	e3550000 	cmp	r5, #0
   21868:	03a0e001 	moveq	lr, #1
   2186c:	0a000008 	beq	21894 <_UG_PutText+0x6c>
   21870:	e1a0100c 	mov	r1, ip
   21874:	e1a03005 	mov	r3, r5
   21878:	e3a0e001 	mov	lr, #1
   2187c:	e353000a 	cmp	r3, #10
   21880:	e1f130d1 	ldrsb	r3, [r1, #1]!
   21884:	028ee001 	addeq	lr, lr, #1
   21888:	06ffe07e 	uxtheq	lr, lr
   2188c:	e3530000 	cmp	r3, #0
   21890:	1afffff9 	bne	2187c <_UG_PutText+0x54>
   21894:	e5d01012 	ldrb	r1, [r0, #18]
   21898:	e6ff3077 	uxth	r3, r7
   2189c:	e1d071f6 	ldrsh	r7, [r0, #22]
   218a0:	e58d100c 	str	r1, [sp, #12]
   218a4:	e2111030 	ands	r1, r1, #48	; 0x30
   218a8:	e58d701c 	str	r7, [sp, #28]
   218ac:	1a00005e 	bne	21a2c <_UG_PutText+0x204>
   218b0:	e1a06000 	mov	r6, r0
   218b4:	e59de00c 	ldr	lr, [sp, #12]
   218b8:	e1d000bc 	ldrh	r0, [r0, #12]
   218bc:	e31e0010 	tst	lr, #16
   218c0:	e1d6e0b8 	ldrh	lr, [r6, #8]
   218c4:	e2800001 	add	r0, r0, #1
   218c8:	11a010c1 	asrne	r1, r1, #1
   218cc:	e040000e 	sub	r0, r0, lr
   218d0:	e0831001 	add	r1, r3, r1
   218d4:	e6ff3070 	uxth	r3, r0
   218d8:	e58d3010 	str	r3, [sp, #16]
   218dc:	e59d300c 	ldr	r3, [sp, #12]
   218e0:	e1d691b4 	ldrh	r9, [r6, #20]
   218e4:	e2033001 	and	r3, r3, #1
   218e8:	e1d2b0b6 	ldrh	fp, [r2, #6]
   218ec:	e58de018 	str	lr, [sp, #24]
   218f0:	e6bf7071 	sxth	r7, r1
   218f4:	e58d3014 	str	r3, [sp, #20]
   218f8:	e28c8001 	add	r8, ip, #1
   218fc:	e1a0e008 	mov	lr, r8
   21900:	e1a03005 	mov	r3, r5
   21904:	e3a01000 	mov	r1, #0
   21908:	ea00000e 	b	21948 <_UG_PutText+0x120>
   2190c:	e1d200ba 	ldrh	r0, [r2, #10]
   21910:	e1530000 	cmp	r3, r0
   21914:	ba00000a 	blt	21944 <_UG_PutText+0x11c>
   21918:	e1d240bc 	ldrh	r4, [r2, #12]
   2191c:	e0430000 	sub	r0, r3, r0
   21920:	e1530004 	cmp	r3, r4
   21924:	ca000006 	bgt	21944 <_UG_PutText+0x11c>
   21928:	e5923010 	ldr	r3, [r2, #16]
   2192c:	e0811009 	add	r1, r1, r9
   21930:	e3530000 	cmp	r3, #0
   21934:	01a0300b 	moveq	r3, fp
   21938:	17d33000 	ldrbne	r3, [r3, r0]
   2193c:	e6f31071 	uxtah	r1, r3, r1
   21940:	e6ff1071 	uxth	r1, r1
   21944:	e0de30d1 	ldrsb	r3, [lr], #1
   21948:	e3530000 	cmp	r3, #0
   2194c:	1353000a 	cmpne	r3, #10
   21950:	1affffed 	bne	2190c <_UG_PutText+0xe4>
   21954:	e59d3010 	ldr	r3, [sp, #16]
   21958:	e0411009 	sub	r1, r1, r9
   2195c:	e0431001 	sub	r1, r3, r1
   21960:	e6ff1071 	uxth	r1, r1
   21964:	e6bf3071 	sxth	r3, r1
   21968:	e3530000 	cmp	r3, #0
   2196c:	ba000038 	blt	21a54 <_UG_PutText+0x22c>
   21970:	e59d0014 	ldr	r0, [sp, #20]
   21974:	e3500000 	cmp	r0, #0
   21978:	1a000037 	bne	21a5c <_UG_PutText+0x234>
   2197c:	e59d000c 	ldr	r0, [sp, #12]
   21980:	e3100002 	tst	r0, #2
   21984:	059d3018 	ldreq	r3, [sp, #24]
   21988:	159d1018 	ldrne	r1, [sp, #24]
   2198c:	00811003 	addeq	r1, r1, r3
   21990:	108140c3 	addne	r4, r1, r3, asr #1
   21994:	06ff4071 	uxtheq	r4, r1
   21998:	16ff4074 	uxthne	r4, r4
   2199c:	e355000a 	cmp	r5, #10
   219a0:	e6bf4074 	sxth	r4, r4
   219a4:	0a00002e 	beq	21a64 <_UG_PutText+0x23c>
   219a8:	e3550000 	cmp	r5, #0
   219ac:	1a000003 	bne	219c0 <_UG_PutText+0x198>
   219b0:	ea000027 	b	21a54 <_UG_PutText+0x22c>
   219b4:	e3550000 	cmp	r5, #0
   219b8:	e1a0800c 	mov	r8, ip
   219bc:	0a000024 	beq	21a54 <_UG_PutText+0x22c>
   219c0:	e5d61011 	ldrb	r1, [r6, #17]
   219c4:	e5d63010 	ldrb	r3, [r6, #16]
   219c8:	e1a00005 	mov	r0, r5
   219cc:	e88d0006 	stm	sp, {r1, r2}
   219d0:	e1a01004 	mov	r1, r4
   219d4:	e1a02007 	mov	r2, r7
   219d8:	ebfffd73 	bl	20fac <_UG_PutChar>
   219dc:	e5962004 	ldr	r2, [r6, #4]
   219e0:	e1a0c008 	mov	ip, r8
   219e4:	e5921010 	ldr	r1, [r2, #16]
   219e8:	e0894004 	add	r4, r9, r4
   219ec:	e3510000 	cmp	r1, #0
   219f0:	01a0300b 	moveq	r3, fp
   219f4:	11d230ba 	ldrhne	r3, [r2, #10]
   219f8:	10455003 	subne	r5, r5, r3
   219fc:	17d13005 	ldrbne	r3, [r1, r5]
   21a00:	e0dc50d1 	ldrsb	r5, [ip], #1
   21a04:	e0834004 	add	r4, r3, r4
   21a08:	e355000a 	cmp	r5, #10
   21a0c:	e6bf4074 	sxth	r4, r4
   21a10:	1affffe7 	bne	219b4 <_UG_PutText+0x18c>
   21a14:	e59d301c 	ldr	r3, [sp, #28]
   21a18:	e1d850d1 	ldrsb	r5, [r8, #1]
   21a1c:	e08a3003 	add	r3, sl, r3
   21a20:	e0837007 	add	r7, r3, r7
   21a24:	e6bf7077 	sxth	r7, r7
   21a28:	eaffffb2 	b	218f8 <_UG_PutText+0xd0>
   21a2c:	e1660e8a 	smulbb	r6, sl, lr
   21a30:	e24ee001 	sub	lr, lr, #1
   21a34:	e16e078e 	smulbb	lr, lr, r7
   21a38:	e2841001 	add	r1, r4, #1
   21a3c:	e0411003 	sub	r1, r1, r3
   21a40:	e0411006 	sub	r1, r1, r6
   21a44:	e041100e 	sub	r1, r1, lr
   21a48:	e6bf1071 	sxth	r1, r1
   21a4c:	e3510000 	cmp	r1, #0
   21a50:	aaffff96 	bge	218b0 <_UG_PutText+0x88>
   21a54:	e28dd024 	add	sp, sp, #36	; 0x24
   21a58:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a5c:	e59d4018 	ldr	r4, [sp, #24]
   21a60:	eaffffcd 	b	2199c <_UG_PutText+0x174>
   21a64:	e1a03008 	mov	r3, r8
   21a68:	e1a0800c 	mov	r8, ip
   21a6c:	e1a0c003 	mov	ip, r3
   21a70:	eaffffe7 	b	21a14 <_UG_PutText+0x1ec>

00021a74 <_UG_GetFreeObject>:
   21a74:	e5d02000 	ldrb	r2, [r0]
   21a78:	e5900004 	ldr	r0, [r0, #4]
   21a7c:	e3520000 	cmp	r2, #0
   21a80:	0a000010 	beq	21ac8 <_UG_GetFreeObject+0x54>
   21a84:	e5d03000 	ldrb	r3, [r0]
   21a88:	e2033003 	and	r3, r3, #3
   21a8c:	e3530003 	cmp	r3, #3
   21a90:	012fff1e 	bxeq	lr
   21a94:	e2422001 	sub	r2, r2, #1
   21a98:	e6ef2072 	uxtb	r2, r2
   21a9c:	e0802282 	add	r2, r0, r2, lsl #5
   21aa0:	e1a01000 	mov	r1, r0
   21aa4:	ea000004 	b	21abc <_UG_GetFreeObject+0x48>
   21aa8:	e5d13020 	ldrb	r3, [r1, #32]
   21aac:	e1a01000 	mov	r1, r0
   21ab0:	e2033003 	and	r3, r3, #3
   21ab4:	e3530003 	cmp	r3, #3
   21ab8:	012fff1e 	bxeq	lr
   21abc:	e1500002 	cmp	r0, r2
   21ac0:	e2800020 	add	r0, r0, #32
   21ac4:	1afffff7 	bne	21aa8 <_UG_GetFreeObject+0x34>
   21ac8:	e3a00000 	mov	r0, #0
   21acc:	e12fff1e 	bx	lr

00021ad0 <_UG_SearchObject>:
   21ad0:	e5d0c000 	ldrb	ip, [r0]
   21ad4:	e5903004 	ldr	r3, [r0, #4]
   21ad8:	e35c0000 	cmp	ip, #0
   21adc:	0a000018 	beq	21b44 <_UG_SearchObject+0x74>
   21ae0:	e24c0001 	sub	r0, ip, #1
   21ae4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   21ae8:	e6ef0070 	uxtb	r0, r0
   21aec:	e283e020 	add	lr, r3, #32
   21af0:	e08ee280 	add	lr, lr, r0, lsl #5
   21af4:	ea000002 	b	21b04 <_UG_SearchObject+0x34>
   21af8:	e2833020 	add	r3, r3, #32
   21afc:	e153000e 	cmp	r3, lr
   21b00:	0a00000d 	beq	21b3c <_UG_SearchObject+0x6c>
   21b04:	e5d3c000 	ldrb	ip, [r3]
   21b08:	e1a00003 	mov	r0, r3
   21b0c:	e20cc003 	and	ip, ip, #3
   21b10:	e35c0002 	cmp	ip, #2
   21b14:	1afffff7 	bne	21af8 <_UG_SearchObject+0x28>
   21b18:	e5d3c018 	ldrb	ip, [r3, #24]
   21b1c:	e15c0001 	cmp	ip, r1
   21b20:	1afffff4 	bne	21af8 <_UG_SearchObject+0x28>
   21b24:	e5d3c019 	ldrb	ip, [r3, #25]
   21b28:	e15c0002 	cmp	ip, r2
   21b2c:	049df004 	popeq	{pc}		; (ldreq pc, [sp], #4)
   21b30:	e2833020 	add	r3, r3, #32
   21b34:	e153000e 	cmp	r3, lr
   21b38:	1afffff1 	bne	21b04 <_UG_SearchObject+0x34>
   21b3c:	e3a00000 	mov	r0, #0
   21b40:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   21b44:	e1a0000c 	mov	r0, ip
   21b48:	e12fff1e 	bx	lr

00021b4c <_UG_DeleteObject>:
   21b4c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   21b50:	e5d0e000 	ldrb	lr, [r0]
   21b54:	e5903004 	ldr	r3, [r0, #4]
   21b58:	e35e0000 	cmp	lr, #0
   21b5c:	0a00001a 	beq	21bcc <_UG_DeleteObject+0x80>
   21b60:	e24ee001 	sub	lr, lr, #1
   21b64:	e6ef007e 	uxtb	r0, lr
   21b68:	e283e020 	add	lr, r3, #32
   21b6c:	e08ee280 	add	lr, lr, r0, lsl #5
   21b70:	ea000002 	b	21b80 <_UG_DeleteObject+0x34>
   21b74:	e2833020 	add	r3, r3, #32
   21b78:	e153000e 	cmp	r3, lr
   21b7c:	0a000012 	beq	21bcc <_UG_DeleteObject+0x80>
   21b80:	e5d30000 	ldrb	r0, [r3]
   21b84:	e200c003 	and	ip, r0, #3
   21b88:	e35c0002 	cmp	ip, #2
   21b8c:	1afffff8 	bne	21b74 <_UG_DeleteObject+0x28>
   21b90:	e5d3c018 	ldrb	ip, [r3, #24]
   21b94:	e15c0001 	cmp	ip, r1
   21b98:	1afffff5 	bne	21b74 <_UG_DeleteObject+0x28>
   21b9c:	e5d3c019 	ldrb	ip, [r3, #25]
   21ba0:	e15c0002 	cmp	ip, r2
   21ba4:	1afffff2 	bne	21b74 <_UG_DeleteObject+0x28>
   21ba8:	e2100028 	ands	r0, r0, #40	; 0x28
   21bac:	1a000006 	bne	21bcc <_UG_DeleteObject+0x80>
   21bb0:	e3a02003 	mov	r2, #3
   21bb4:	e583001c 	str	r0, [r3, #28]
   21bb8:	e1c301b8 	strh	r0, [r3, #24]
   21bbc:	e5c3001a 	strb	r0, [r3, #26]
   21bc0:	e5830004 	str	r0, [r3, #4]
   21bc4:	e1c320b0 	strh	r2, [r3]
   21bc8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   21bcc:	e3e00000 	mvn	r0, #0
   21bd0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00021bd4 <_UG_ProcessTouchData>:
   21bd4:	e92d4070 	push	{r4, r5, r6, lr}
   21bd8:	e59f30f0 	ldr	r3, [pc, #240]	; 21cd0 <_UG_ProcessTouchData+0xfc>
   21bdc:	e5d02000 	ldrb	r2, [r0]
   21be0:	e5933000 	ldr	r3, [r3]
   21be4:	e3520000 	cmp	r2, #0
   21be8:	e1d3c0fa 	ldrsh	ip, [r3, #10]
   21bec:	e1d350fc 	ldrsh	r5, [r3, #12]
   21bf0:	e5d34008 	ldrb	r4, [r3, #8]
   21bf4:	08bd8070 	popeq	{r4, r5, r6, pc}
   21bf8:	e5903004 	ldr	r3, [r0, #4]
   21bfc:	e2422001 	sub	r2, r2, #1
   21c00:	e6ff2072 	uxth	r2, r2
   21c04:	e2831020 	add	r1, r3, #32
   21c08:	e0816282 	add	r6, r1, r2, lsl #5
   21c0c:	ea000004 	b	21c24 <_UG_ProcessTouchData+0x50>
   21c10:	e1560001 	cmp	r6, r1
   21c14:	e5c30001 	strb	r0, [r3, #1]
   21c18:	e1a03001 	mov	r3, r1
   21c1c:	08bd8070 	popeq	{r4, r5, r6, pc}
   21c20:	e2811020 	add	r1, r1, #32
   21c24:	e5d32000 	ldrb	r2, [r3]
   21c28:	e5d30001 	ldrb	r0, [r3, #1]
   21c2c:	e202204b 	and	r2, r2, #75	; 0x4b
   21c30:	e352000a 	cmp	r2, #10
   21c34:	1afffff5 	bne	21c10 <_UG_ProcessTouchData+0x3c>
   21c38:	e3540000 	cmp	r4, #0
   21c3c:	137c0001 	cmnne	ip, #1
   21c40:	e200e040 	and	lr, r0, #64	; 0x40
   21c44:	0a000015 	beq	21ca0 <_UG_ProcessTouchData+0xcc>
   21c48:	e35e0000 	cmp	lr, #0
   21c4c:	e1d320f8 	ldrsh	r2, [r3, #8]
   21c50:	02000067 	andeq	r0, r0, #103	; 0x67
   21c54:	03800005 	orreq	r0, r0, #5
   21c58:	e152000c 	cmp	r2, ip
   21c5c:	e200e0df 	and	lr, r0, #223	; 0xdf
   21c60:	ca00000c 	bgt	21c98 <_UG_ProcessTouchData+0xc4>
   21c64:	e1d320fc 	ldrsh	r2, [r3, #12]
   21c68:	e152000c 	cmp	r2, ip
   21c6c:	ba000009 	blt	21c98 <_UG_ProcessTouchData+0xc4>
   21c70:	e1d320fa 	ldrsh	r2, [r3, #10]
   21c74:	e1520005 	cmp	r2, r5
   21c78:	ca000006 	bgt	21c98 <_UG_ProcessTouchData+0xc4>
   21c7c:	e1d320fe 	ldrsh	r2, [r3, #14]
   21c80:	e1520005 	cmp	r2, r5
   21c84:	ba000003 	blt	21c98 <_UG_ProcessTouchData+0xc4>
   21c88:	e3100040 	tst	r0, #64	; 0x40
   21c8c:	020000db 	andeq	r0, r0, #219	; 0xdb
   21c90:	138ee020 	orrne	lr, lr, #32
   21c94:	0380e022 	orreq	lr, r0, #34	; 0x22
   21c98:	e38e0040 	orr	r0, lr, #64	; 0x40
   21c9c:	eaffffdb 	b	21c10 <_UG_ProcessTouchData+0x3c>
   21ca0:	e35e0000 	cmp	lr, #0
   21ca4:	0affffd9 	beq	21c10 <_UG_ProcessTouchData+0x3c>
   21ca8:	e3100020 	tst	r0, #32
   21cac:	03800010 	orreq	r0, r0, #16
   21cb0:	0a000002 	beq	21cc0 <_UG_ProcessTouchData+0xec>
   21cb4:	e3100002 	tst	r0, #2
   21cb8:	13800080 	orrne	r0, r0, #128	; 0x80
   21cbc:	e3800008 	orr	r0, r0, #8
   21cc0:	e3100040 	tst	r0, #64	; 0x40
   21cc4:	13800001 	orrne	r0, r0, #1
   21cc8:	e20000b9 	and	r0, r0, #185	; 0xb9
   21ccc:	eaffffcf 	b	21c10 <_UG_ProcessTouchData+0x3c>
   21cd0:	0017af10 	.word	0x0017af10

00021cd4 <_UG_UpdateObjects>:
   21cd4:	e5d03000 	ldrb	r3, [r0]
   21cd8:	e3530000 	cmp	r3, #0
   21cdc:	012fff1e 	bxeq	lr
   21ce0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21ce4:	e2437001 	sub	r7, r3, #1
   21ce8:	e6ff7077 	uxth	r7, r7
   21cec:	e2877001 	add	r7, r7, #1
   21cf0:	e1a08000 	mov	r8, r0
   21cf4:	e3a04000 	mov	r4, #0
   21cf8:	e1a07287 	lsl	r7, r7, #5
   21cfc:	ea000001 	b	21d08 <_UG_UpdateObjects+0x34>
   21d00:	e1570004 	cmp	r7, r4
   21d04:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   21d08:	e5981004 	ldr	r1, [r8, #4]
   21d0c:	e7d16004 	ldrb	r6, [r1, r4]
   21d10:	e0815004 	add	r5, r1, r4
   21d14:	e2063003 	and	r3, r6, #3
   21d18:	e3530002 	cmp	r3, #2
   21d1c:	e2844020 	add	r4, r4, #32
   21d20:	1afffff6 	bne	21d00 <_UG_UpdateObjects+0x2c>
   21d24:	e3160020 	tst	r6, #32
   21d28:	e5d59001 	ldrb	r9, [r5, #1]
   21d2c:	0a000003 	beq	21d40 <_UG_UpdateObjects+0x6c>
   21d30:	e5953004 	ldr	r3, [r5, #4]
   21d34:	e1a01005 	mov	r1, r5
   21d38:	e1a00008 	mov	r0, r8
   21d3c:	e12fff33 	blx	r3
   21d40:	e3160008 	tst	r6, #8
   21d44:	0affffed 	beq	21d00 <_UG_UpdateObjects+0x2c>
   21d48:	e3160080 	tst	r6, #128	; 0x80
   21d4c:	0affffeb 	beq	21d00 <_UG_UpdateObjects+0x2c>
   21d50:	e3190041 	tst	r9, #65	; 0x41
   21d54:	0affffe9 	beq	21d00 <_UG_UpdateObjects+0x2c>
   21d58:	e5953004 	ldr	r3, [r5, #4]
   21d5c:	e1a01005 	mov	r1, r5
   21d60:	e1a00008 	mov	r0, r8
   21d64:	e12fff33 	blx	r3
   21d68:	e1570004 	cmp	r7, r4
   21d6c:	1affffe5 	bne	21d08 <_UG_UpdateObjects+0x34>
   21d70:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00021d74 <_UG_HandleEvents>:
   21d74:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21d78:	e3a03002 	mov	r3, #2
   21d7c:	e3a04000 	mov	r4, #0
   21d80:	e59fa0a8 	ldr	sl, [pc, #168]	; 21e30 <_UG_HandleEvents+0xbc>
   21d84:	e24dd008 	sub	sp, sp, #8
   21d88:	e58a4008 	str	r4, [sl, #8]
   21d8c:	e5ca3004 	strb	r3, [sl, #4]
   21d90:	e5d03000 	ldrb	r3, [r0]
   21d94:	e1530004 	cmp	r3, r4
   21d98:	0a000022 	beq	21e28 <_UG_HandleEvents+0xb4>
   21d9c:	e2438001 	sub	r8, r3, #1
   21da0:	e6ff8078 	uxth	r8, r8
   21da4:	e2888001 	add	r8, r8, #1
   21da8:	e1a09000 	mov	r9, r0
   21dac:	e1a07004 	mov	r7, r4
   21db0:	e1a08288 	lsl	r8, r8, #5
   21db4:	e28d6004 	add	r6, sp, #4
   21db8:	e28a5004 	add	r5, sl, #4
   21dbc:	ea000001 	b	21dc8 <_UG_HandleEvents+0x54>
   21dc0:	e1580004 	cmp	r8, r4
   21dc4:	0a000017 	beq	21e28 <_UG_HandleEvents+0xb4>
   21dc8:	e5993004 	ldr	r3, [r9, #4]
   21dcc:	e0832004 	add	r2, r3, r4
   21dd0:	e58d2004 	str	r2, [sp, #4]
   21dd4:	e7d33004 	ldrb	r3, [r3, r4]
   21dd8:	e2844020 	add	r4, r4, #32
   21ddc:	e2033003 	and	r3, r3, #3
   21de0:	e3530002 	cmp	r3, #2
   21de4:	1afffff5 	bne	21dc0 <_UG_HandleEvents+0x4c>
   21de8:	e5d2301a 	ldrb	r3, [r2, #26]
   21dec:	e3530000 	cmp	r3, #0
   21df0:	0afffff2 	beq	21dc0 <_UG_HandleEvents+0x4c>
   21df4:	e5d21018 	ldrb	r1, [r2, #24]
   21df8:	e5d22019 	ldrb	r2, [r2, #25]
   21dfc:	e5ca3007 	strb	r3, [sl, #7]
   21e00:	e58a6008 	str	r6, [sl, #8]
   21e04:	e5993028 	ldr	r3, [r9, #40]	; 0x28
   21e08:	e5ca1005 	strb	r1, [sl, #5]
   21e0c:	e5ca2006 	strb	r2, [sl, #6]
   21e10:	e1a00005 	mov	r0, r5
   21e14:	e12fff33 	blx	r3
   21e18:	e59d3004 	ldr	r3, [sp, #4]
   21e1c:	e1580004 	cmp	r8, r4
   21e20:	e5c3701a 	strb	r7, [r3, #26]
   21e24:	1affffe7 	bne	21dc8 <_UG_HandleEvents+0x54>
   21e28:	e28dd008 	add	sp, sp, #8
   21e2c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21e30:	0017af10 	.word	0x0017af10

00021e34 <_UG_DrawObjectFrame>:
   21e34:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e38:	e1a09003 	mov	r9, r3
   21e3c:	e1a05000 	mov	r5, r0
   21e40:	e1a07002 	mov	r7, r2
   21e44:	e24dd01c 	sub	sp, sp, #28
   21e48:	e59d4040 	ldr	r4, [sp, #64]	; 0x40
   21e4c:	e6ff3072 	uxth	r3, r2
   21e50:	e58d3008 	str	r3, [sp, #8]
   21e54:	e243a001 	sub	sl, r3, #1
   21e58:	e5d43000 	ldrb	r3, [r4]
   21e5c:	e6bfa07a 	sxth	sl, sl
   21e60:	e6ff6071 	uxth	r6, r1
   21e64:	e1a0200a 	mov	r2, sl
   21e68:	e58d3000 	str	r3, [sp]
   21e6c:	e6ffb079 	uxth	fp, r9
   21e70:	e1a03001 	mov	r3, r1
   21e74:	e1a08001 	mov	r8, r1
   21e78:	ebfffa51 	bl	207c4 <UG_DrawLine>
   21e7c:	e5d42001 	ldrb	r2, [r4, #1]
   21e80:	e58d600c 	str	r6, [sp, #12]
   21e84:	e58db010 	str	fp, [sp, #16]
   21e88:	e2866001 	add	r6, r6, #1
   21e8c:	e24bb001 	sub	fp, fp, #1
   21e90:	e6bf6076 	sxth	r6, r6
   21e94:	e6bfb07b 	sxth	fp, fp
   21e98:	e1a01006 	mov	r1, r6
   21e9c:	e1a0300b 	mov	r3, fp
   21ea0:	e58d2000 	str	r2, [sp]
   21ea4:	e1a00005 	mov	r0, r5
   21ea8:	e1a02005 	mov	r2, r5
   21eac:	ebfffa44 	bl	207c4 <UG_DrawLine>
   21eb0:	e5d42002 	ldrb	r2, [r4, #2]
   21eb4:	e1a03009 	mov	r3, r9
   21eb8:	e58d2000 	str	r2, [sp]
   21ebc:	e1a01009 	mov	r1, r9
   21ec0:	e1a02007 	mov	r2, r7
   21ec4:	e1a00005 	mov	r0, r5
   21ec8:	ebfffa3d 	bl	207c4 <UG_DrawLine>
   21ecc:	e6ff0075 	uxth	r0, r5
   21ed0:	e1a05000 	mov	r5, r0
   21ed4:	e5d42003 	ldrb	r2, [r4, #3]
   21ed8:	e1a01008 	mov	r1, r8
   21edc:	e1a0300b 	mov	r3, fp
   21ee0:	e58d2000 	str	r2, [sp]
   21ee4:	e1a00007 	mov	r0, r7
   21ee8:	e1a02007 	mov	r2, r7
   21eec:	ebfffa34 	bl	207c4 <UG_DrawLine>
   21ef0:	e59d3008 	ldr	r3, [sp, #8]
   21ef4:	e5d4c004 	ldrb	ip, [r4, #4]
   21ef8:	e2857001 	add	r7, r5, #1
   21efc:	e2438002 	sub	r8, r3, #2
   21f00:	e6bf7077 	sxth	r7, r7
   21f04:	e6bf8078 	sxth	r8, r8
   21f08:	e1a03006 	mov	r3, r6
   21f0c:	e1a01006 	mov	r1, r6
   21f10:	e1a00007 	mov	r0, r7
   21f14:	e1a02008 	mov	r2, r8
   21f18:	e58dc000 	str	ip, [sp]
   21f1c:	e58d5014 	str	r5, [sp, #20]
   21f20:	ebfffa27 	bl	207c4 <UG_DrawLine>
   21f24:	e59d200c 	ldr	r2, [sp, #12]
   21f28:	e59d1010 	ldr	r1, [sp, #16]
   21f2c:	e5d4c005 	ldrb	ip, [r4, #5]
   21f30:	e2825002 	add	r5, r2, #2
   21f34:	e2419002 	sub	r9, r1, #2
   21f38:	e6bf5075 	sxth	r5, r5
   21f3c:	e6bf9079 	sxth	r9, r9
   21f40:	e1a02007 	mov	r2, r7
   21f44:	e1a00007 	mov	r0, r7
   21f48:	e1a01005 	mov	r1, r5
   21f4c:	e1a03009 	mov	r3, r9
   21f50:	e58dc000 	str	ip, [sp]
   21f54:	ebfffa1a 	bl	207c4 <UG_DrawLine>
   21f58:	e5d4c006 	ldrb	ip, [r4, #6]
   21f5c:	e1a00007 	mov	r0, r7
   21f60:	e1a0300b 	mov	r3, fp
   21f64:	e1a0100b 	mov	r1, fp
   21f68:	e1a0200a 	mov	r2, sl
   21f6c:	e58dc000 	str	ip, [sp]
   21f70:	ebfffa13 	bl	207c4 <UG_DrawLine>
   21f74:	e5d4c007 	ldrb	ip, [r4, #7]
   21f78:	e1a01006 	mov	r1, r6
   21f7c:	e1a03009 	mov	r3, r9
   21f80:	e1a0200a 	mov	r2, sl
   21f84:	e1a0000a 	mov	r0, sl
   21f88:	e58dc000 	str	ip, [sp]
   21f8c:	ebfffa0c 	bl	207c4 <UG_DrawLine>
   21f90:	e59d0014 	ldr	r0, [sp, #20]
   21f94:	e59d3008 	ldr	r3, [sp, #8]
   21f98:	e5d4c008 	ldrb	ip, [r4, #8]
   21f9c:	e2806002 	add	r6, r0, #2
   21fa0:	e6bf6076 	sxth	r6, r6
   21fa4:	e2432003 	sub	r2, r3, #3
   21fa8:	e1a01005 	mov	r1, r5
   21fac:	e1a03005 	mov	r3, r5
   21fb0:	e1a00006 	mov	r0, r6
   21fb4:	e58dc000 	str	ip, [sp]
   21fb8:	e6bf2072 	sxth	r2, r2
   21fbc:	ebfffa00 	bl	207c4 <UG_DrawLine>
   21fc0:	e59d1010 	ldr	r1, [sp, #16]
   21fc4:	e59d200c 	ldr	r2, [sp, #12]
   21fc8:	e5d4c009 	ldrb	ip, [r4, #9]
   21fcc:	e2417003 	sub	r7, r1, #3
   21fd0:	e6bf7077 	sxth	r7, r7
   21fd4:	e2821003 	add	r1, r2, #3
   21fd8:	e1a03007 	mov	r3, r7
   21fdc:	e1a02006 	mov	r2, r6
   21fe0:	e1a00006 	mov	r0, r6
   21fe4:	e58dc000 	str	ip, [sp]
   21fe8:	e6bf1071 	sxth	r1, r1
   21fec:	ebfff9f4 	bl	207c4 <UG_DrawLine>
   21ff0:	e5d4c00a 	ldrb	ip, [r4, #10]
   21ff4:	e1a00006 	mov	r0, r6
   21ff8:	e1a03009 	mov	r3, r9
   21ffc:	e1a01009 	mov	r1, r9
   22000:	e1a02008 	mov	r2, r8
   22004:	e58dc000 	str	ip, [sp]
   22008:	ebfff9ed 	bl	207c4 <UG_DrawLine>
   2200c:	e5d4200b 	ldrb	r2, [r4, #11]
   22010:	e1a03007 	mov	r3, r7
   22014:	e58d2040 	str	r2, [sp, #64]	; 0x40
   22018:	e1a01005 	mov	r1, r5
   2201c:	e1a02008 	mov	r2, r8
   22020:	e1a00008 	mov	r0, r8
   22024:	e28dd01c 	add	sp, sp, #28
   22028:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2202c:	eafff9e4 	b	207c4 <UG_DrawLine>

00022030 <_UG_SendObjectPrerenderEvent>:
   22030:	e3a03002 	mov	r3, #2
   22034:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   22038:	e5d1c019 	ldrb	ip, [r1, #25]
   2203c:	e5d1e018 	ldrb	lr, [r1, #24]
   22040:	e24dd00c 	sub	sp, sp, #12
   22044:	e5902028 	ldr	r2, [r0, #40]	; 0x28
   22048:	e58d1004 	str	r1, [sp, #4]
   2204c:	e5cde001 	strb	lr, [sp, #1]
   22050:	e5cdc002 	strb	ip, [sp, #2]
   22054:	e5cd3003 	strb	r3, [sp, #3]
   22058:	e5cd3000 	strb	r3, [sp]
   2205c:	e1a0000d 	mov	r0, sp
   22060:	e12fff32 	blx	r2
   22064:	e28dd00c 	add	sp, sp, #12
   22068:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0002206c <_UG_SendObjectPostrenderEvent>:
   2206c:	e3a0c003 	mov	ip, #3
   22070:	e3a02002 	mov	r2, #2
   22074:	e92d4010 	push	{r4, lr}
   22078:	e5d14018 	ldrb	r4, [r1, #24]
   2207c:	e5d1e019 	ldrb	lr, [r1, #25]
   22080:	e24dd008 	sub	sp, sp, #8
   22084:	e5903028 	ldr	r3, [r0, #40]	; 0x28
   22088:	e58d1004 	str	r1, [sp, #4]
   2208c:	e5cd4001 	strb	r4, [sp, #1]
   22090:	e5cde002 	strb	lr, [sp, #2]
   22094:	e5cdc003 	strb	ip, [sp, #3]
   22098:	e5cd2000 	strb	r2, [sp]
   2209c:	e1a0000d 	mov	r0, sp
   220a0:	e12fff33 	blx	r3
   220a4:	e28dd008 	add	sp, sp, #8
   220a8:	e8bd8010 	pop	{r4, pc}

000220ac <UG_DriverRegister>:
   220ac:	e3500002 	cmp	r0, #2
   220b0:	812fff1e 	bxhi	lr
   220b4:	e3a02003 	mov	r2, #3
   220b8:	e59f3010 	ldr	r3, [pc, #16]	; 220d0 <UG_DriverRegister+0x24>
   220bc:	e5933000 	ldr	r3, [r3]
   220c0:	e0830210 	add	r0, r3, r0, lsl r2
   220c4:	e5801048 	str	r1, [r0, #72]	; 0x48
   220c8:	e5c0204c 	strb	r2, [r0, #76]	; 0x4c
   220cc:	e12fff1e 	bx	lr
   220d0:	0017af10 	.word	0x0017af10

000220d4 <UG_DriverEnable>:
   220d4:	e3500002 	cmp	r0, #2
   220d8:	812fff1e 	bxhi	lr
   220dc:	e59f3018 	ldr	r3, [pc, #24]	; 220fc <UG_DriverEnable+0x28>
   220e0:	e5933000 	ldr	r3, [r3]
   220e4:	e0830180 	add	r0, r3, r0, lsl #3
   220e8:	e5d0304c 	ldrb	r3, [r0, #76]	; 0x4c
   220ec:	e3130001 	tst	r3, #1
   220f0:	13833002 	orrne	r3, r3, #2
   220f4:	15c0304c 	strbne	r3, [r0, #76]	; 0x4c
   220f8:	e12fff1e 	bx	lr
   220fc:	0017af10 	.word	0x0017af10

00022100 <UG_DriverDisable>:
   22100:	e3500002 	cmp	r0, #2
   22104:	812fff1e 	bxhi	lr
   22108:	e59f3018 	ldr	r3, [pc, #24]	; 22128 <UG_DriverDisable+0x28>
   2210c:	e5933000 	ldr	r3, [r3]
   22110:	e0830180 	add	r0, r3, r0, lsl #3
   22114:	e5d0304c 	ldrb	r3, [r0, #76]	; 0x4c
   22118:	e3130001 	tst	r3, #1
   2211c:	13c33002 	bicne	r3, r3, #2
   22120:	15c0304c 	strbne	r3, [r0, #76]	; 0x4c
   22124:	e12fff1e 	bx	lr
   22128:	0017af10 	.word	0x0017af10

0002212c <UG_WaitForUpdate>:
   2212c:	e59f3010 	ldr	r3, [pc, #16]	; 22144 <UG_WaitForUpdate+0x18>
   22130:	e5932000 	ldr	r2, [r3]
   22134:	e5d23045 	ldrb	r3, [r2, #69]	; 0x45
   22138:	e3833001 	orr	r3, r3, #1
   2213c:	e5c23045 	strb	r3, [r2, #69]	; 0x45
   22140:	eafffffe 	b	22140 <UG_WaitForUpdate+0x14>
   22144:	0017af10 	.word	0x0017af10

00022148 <UG_DrawBMP>:
   22148:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2214c:	e5925000 	ldr	r5, [r2]
   22150:	e24dd00c 	sub	sp, sp, #12
   22154:	e3550000 	cmp	r5, #0
   22158:	0a000002 	beq	22168 <UG_DrawBMP+0x20>
   2215c:	e5d23008 	ldrb	r3, [r2, #8]
   22160:	e3530010 	cmp	r3, #16
   22164:	0a000001 	beq	22170 <UG_DrawBMP+0x28>
   22168:	e28dd00c 	add	sp, sp, #12
   2216c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22170:	e1d230b6 	ldrh	r3, [r2, #6]
   22174:	e3530000 	cmp	r3, #0
   22178:	0afffffa 	beq	22168 <UG_DrawBMP+0x20>
   2217c:	e1a08000 	mov	r8, r0
   22180:	e3a0a000 	mov	sl, #0
   22184:	e1a06002 	mov	r6, r2
   22188:	e59fb07c 	ldr	fp, [pc, #124]	; 2220c <UG_DrawBMP+0xc4>
   2218c:	e1d220b4 	ldrh	r2, [r2, #4]
   22190:	e58d1004 	str	r1, [sp, #4]
   22194:	e59d1004 	ldr	r1, [sp, #4]
   22198:	e6ff907a 	uxth	r9, sl
   2219c:	e3520000 	cmp	r2, #0
   221a0:	e0897001 	add	r7, r9, r1
   221a4:	e6bf7077 	sxth	r7, r7
   221a8:	11a00008 	movne	r0, r8
   221ac:	0a00000f 	beq	221f0 <UG_DrawBMP+0xa8>
   221b0:	e0d520b2 	ldrh	r2, [r5], #2
   221b4:	e59b3000 	ldr	r3, [fp]
   221b8:	e2804001 	add	r4, r0, #1
   221bc:	e1a02182 	lsl	r2, r2, #3
   221c0:	e20220f8 	and	r2, r2, #248	; 0xf8
   221c4:	e5933000 	ldr	r3, [r3]
   221c8:	e6ff4074 	uxth	r4, r4
   221cc:	e1a01007 	mov	r1, r7
   221d0:	e12fff33 	blx	r3
   221d4:	e0443008 	sub	r3, r4, r8
   221d8:	e1d620b4 	ldrh	r2, [r6, #4]
   221dc:	e6bf3073 	sxth	r3, r3
   221e0:	e1530002 	cmp	r3, r2
   221e4:	e6bf0074 	sxth	r0, r4
   221e8:	bafffff0 	blt	221b0 <UG_DrawBMP+0x68>
   221ec:	e1d630b6 	ldrh	r3, [r6, #6]
   221f0:	e2899001 	add	r9, r9, #1
   221f4:	e6bf9079 	sxth	r9, r9
   221f8:	e1590003 	cmp	r9, r3
   221fc:	e28aa001 	add	sl, sl, #1
   22200:	baffffe3 	blt	22194 <UG_DrawBMP+0x4c>
   22204:	e28dd00c 	add	sp, sp, #12
   22208:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2220c:	0017af10 	.word	0x0017af10

00022210 <UG_TouchUpdate>:
   22210:	e59f3010 	ldr	r3, [pc, #16]	; 22228 <UG_TouchUpdate+0x18>
   22214:	e5933000 	ldr	r3, [r3]
   22218:	e1c300ba 	strh	r0, [r3, #10]
   2221c:	e1c310bc 	strh	r1, [r3, #12]
   22220:	e5c32008 	strb	r2, [r3, #8]
   22224:	e12fff1e 	bx	lr
   22228:	0017af10 	.word	0x0017af10

0002222c <UG_WindowCreate>:
   2222c:	e92d4070 	push	{r4, r5, r6, lr}
   22230:	e16fef12 	clz	lr, r2
   22234:	e3510000 	cmp	r1, #0
   22238:	e1a0e2ae 	lsr	lr, lr, #5
   2223c:	03a0e001 	moveq	lr, #1
   22240:	e3500000 	cmp	r0, #0
   22244:	03a0e001 	moveq	lr, #1
   22248:	e35e0000 	cmp	lr, #0
   2224c:	1a000022 	bne	222dc <UG_WindowCreate+0xb0>
   22250:	e1a0c001 	mov	ip, r1
   22254:	e3a05003 	mov	r5, #3
   22258:	e2424001 	sub	r4, r2, #1
   2225c:	e6ef6074 	uxtb	r6, r4
   22260:	e2814020 	add	r4, r1, #32
   22264:	e0844286 	add	r4, r4, r6, lsl #5
   22268:	e5cc5000 	strb	r5, [ip]
   2226c:	e58ce01c 	str	lr, [ip, #28]
   22270:	e28cc020 	add	ip, ip, #32
   22274:	e15c0004 	cmp	ip, r4
   22278:	1afffffa 	bne	22268 <UG_WindowCreate+0x3c>
   2227c:	e3a0c002 	mov	ip, #2
   22280:	e59f405c 	ldr	r4, [pc, #92]	; 222e4 <UG_WindowCreate+0xb8>
   22284:	e5c02000 	strb	r2, [r0]
   22288:	e5942000 	ldr	r2, [r4]
   2228c:	e580e00c 	str	lr, [r0, #12]
   22290:	e5c0c008 	strb	ip, [r0, #8]
   22294:	e1d240b4 	ldrh	r4, [r2, #4]
   22298:	e1d2c0b6 	ldrh	ip, [r2, #6]
   2229c:	e2444001 	sub	r4, r4, #1
   222a0:	e5801004 	str	r1, [r0, #4]
   222a4:	e1c041b0 	strh	r4, [r0, #16]
   222a8:	e59f1038 	ldr	r1, [pc, #56]	; 222e8 <UG_WindowCreate+0xbc>
   222ac:	e59f4038 	ldr	r4, [pc, #56]	; 222ec <UG_WindowCreate+0xc0>
   222b0:	e24cc001 	sub	ip, ip, #1
   222b4:	e282202c 	add	r2, r2, #44	; 0x2c
   222b8:	e1c0c1b2 	strh	ip, [r0, #18]
   222bc:	e580201c 	str	r2, [r0, #28]
   222c0:	e5803028 	str	r3, [r0, #40]	; 0x28
   222c4:	e5c05014 	strb	r5, [r0, #20]
   222c8:	e580e018 	str	lr, [r0, #24]
   222cc:	e5804020 	str	r4, [r0, #32]
   222d0:	e5801024 	str	r1, [r0, #36]	; 0x24
   222d4:	e3a00000 	mov	r0, #0
   222d8:	e8bd8070 	pop	{r4, r5, r6, pc}
   222dc:	e3e00000 	mvn	r0, #0
   222e0:	e8bd8070 	pop	{r4, r5, r6, pc}
   222e4:	0017af10 	.word	0x0017af10
   222e8:	0f05ff03 	.word	0x0f05ff03
   222ec:	ff110202 	.word	0xff110202

000222f0 <UG_WindowDelete>:
   222f0:	e59f304c 	ldr	r3, [pc, #76]	; 22344 <UG_WindowDelete+0x54>
   222f4:	e5933000 	ldr	r3, [r3]
   222f8:	e5933014 	ldr	r3, [r3, #20]
   222fc:	e1530000 	cmp	r3, r0
   22300:	13500000 	cmpne	r0, #0
   22304:	0a00000c 	beq	2233c <UG_WindowDelete+0x4c>
   22308:	e5d03008 	ldrb	r3, [r0, #8]
   2230c:	e3130002 	tst	r3, #2
   22310:	0a000009 	beq	2233c <UG_WindowDelete+0x4c>
   22314:	e3a03000 	mov	r3, #0
   22318:	e5c03008 	strb	r3, [r0, #8]
   2231c:	e5803028 	str	r3, [r0, #40]	; 0x28
   22320:	e5c03000 	strb	r3, [r0]
   22324:	e5803004 	str	r3, [r0, #4]
   22328:	e580300c 	str	r3, [r0, #12]
   2232c:	e5803010 	str	r3, [r0, #16]
   22330:	e5c03014 	strb	r3, [r0, #20]
   22334:	e1a00003 	mov	r0, r3
   22338:	e12fff1e 	bx	lr
   2233c:	e3e00000 	mvn	r0, #0
   22340:	e12fff1e 	bx	lr
   22344:	0017af10 	.word	0x0017af10

00022348 <UG_WindowShow>:
   22348:	e2502000 	subs	r2, r0, #0
   2234c:	15d23008 	ldrbne	r3, [r2, #8]
   22350:	159f101c 	ldrne	r1, [pc, #28]	; 22374 <UG_WindowShow+0x2c>
   22354:	13c33040 	bicne	r3, r3, #64	; 0x40
   22358:	15911000 	ldrne	r1, [r1]
   2235c:	13833028 	orrne	r3, r3, #40	; 0x28
   22360:	15c23008 	strbne	r3, [r2, #8]
   22364:	13a00000 	movne	r0, #0
   22368:	15812010 	strne	r2, [r1, #16]
   2236c:	03e00000 	mvneq	r0, #0
   22370:	e12fff1e 	bx	lr
   22374:	0017af10 	.word	0x0017af10

00022378 <UG_WindowResize>:
   22378:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2237c:	e59f7198 	ldr	r7, [pc, #408]	; 2251c <UG_WindowResize+0x1a4>
   22380:	e24dd008 	sub	sp, sp, #8
   22384:	e5978000 	ldr	r8, [r7]
   22388:	e250c000 	subs	ip, r0, #0
   2238c:	e1d840b4 	ldrh	r4, [r8, #4]
   22390:	e1d850b6 	ldrh	r5, [r8, #6]
   22394:	e1dd62f8 	ldrsh	r6, [sp, #40]	; 0x28
   22398:	0a000039 	beq	22484 <UG_WindowResize+0x10c>
   2239c:	e5dce008 	ldrb	lr, [ip, #8]
   223a0:	e31e0002 	tst	lr, #2
   223a4:	0a000036 	beq	22484 <UG_WindowResize+0x10c>
   223a8:	e1910002 	orrs	r0, r1, r2
   223ac:	e6ffa072 	uxth	sl, r2
   223b0:	4a000033 	bmi	22484 <UG_WindowResize+0x10c>
   223b4:	e2444001 	sub	r4, r4, #1
   223b8:	e2455001 	sub	r5, r5, #1
   223bc:	e6bf4074 	sxth	r4, r4
   223c0:	e6bf5075 	sxth	r5, r5
   223c4:	e1550006 	cmp	r5, r6
   223c8:	a1540003 	cmpge	r4, r3
   223cc:	b3a09001 	movlt	r9, #1
   223d0:	a3a09000 	movge	r9, #0
   223d4:	ba00002a 	blt	22484 <UG_WindowResize+0x10c>
   223d8:	e0430001 	sub	r0, r3, r1
   223dc:	e6bf0070 	sxth	r0, r0
   223e0:	e3500009 	cmp	r0, #9
   223e4:	da000026 	ble	22484 <UG_WindowResize+0x10c>
   223e8:	e046000a 	sub	r0, r6, sl
   223ec:	e6bf0070 	sxth	r0, r0
   223f0:	e3500009 	cmp	r0, #9
   223f4:	da000022 	ble	22484 <UG_WindowResize+0x10c>
   223f8:	e21e0008 	ands	r0, lr, #8
   223fc:	e1cc10bc 	strh	r1, [ip, #12]
   22400:	e1cc20be 	strh	r2, [ip, #14]
   22404:	e1cc31b0 	strh	r3, [ip, #16]
   22408:	e1cc61b2 	strh	r6, [ip, #18]
   2240c:	0a000003 	beq	22420 <UG_WindowResize+0xa8>
   22410:	e5983014 	ldr	r3, [r8, #20]
   22414:	e153000c 	cmp	r3, ip
   22418:	11a00009 	movne	r0, r9
   2241c:	0a000001 	beq	22428 <UG_WindowResize+0xb0>
   22420:	e28dd008 	add	sp, sp, #8
   22424:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22428:	e3520000 	cmp	r2, #0
   2242c:	e1a0600c 	mov	r6, ip
   22430:	1a000030 	bne	224f8 <UG_WindowResize+0x180>
   22434:	e1d611b2 	ldrh	r1, [r6, #18]
   22438:	e2811001 	add	r1, r1, #1
   2243c:	e6bf1071 	sxth	r1, r1
   22440:	e1550001 	cmp	r5, r1
   22444:	aa000023 	bge	224d8 <UG_WindowResize+0x160>
   22448:	e1d620fc 	ldrsh	r2, [r6, #12]
   2244c:	e3520000 	cmp	r2, #0
   22450:	1a000016 	bne	224b0 <UG_WindowResize+0x138>
   22454:	e1d601b0 	ldrh	r0, [r6, #16]
   22458:	e2800001 	add	r0, r0, #1
   2245c:	e6bf0070 	sxth	r0, r0
   22460:	e1540000 	cmp	r4, r0
   22464:	aa000009 	bge	22490 <UG_WindowResize+0x118>
   22468:	e3a00000 	mov	r0, #0
   2246c:	e5d63008 	ldrb	r3, [r6, #8]
   22470:	e3c33040 	bic	r3, r3, #64	; 0x40
   22474:	e3833020 	orr	r3, r3, #32
   22478:	e5c63008 	strb	r3, [r6, #8]
   2247c:	e28dd008 	add	sp, sp, #8
   22480:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22484:	e3e00000 	mvn	r0, #0
   22488:	e28dd008 	add	sp, sp, #8
   2248c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22490:	e5972000 	ldr	r2, [r7]
   22494:	e1d631f2 	ldrsh	r3, [r6, #18]
   22498:	e5d2c044 	ldrb	ip, [r2, #68]	; 0x44
   2249c:	e1d610fe 	ldrsh	r1, [r6, #14]
   224a0:	e1a02004 	mov	r2, r4
   224a4:	e58dc000 	str	ip, [sp]
   224a8:	ebfff84e 	bl	205e8 <UG_FillFrame>
   224ac:	eaffffed 	b	22468 <UG_WindowResize+0xf0>
   224b0:	e5971000 	ldr	r1, [r7]
   224b4:	e2422001 	sub	r2, r2, #1
   224b8:	e5d10044 	ldrb	r0, [r1, #68]	; 0x44
   224bc:	e1d631f2 	ldrsh	r3, [r6, #18]
   224c0:	e1d610fe 	ldrsh	r1, [r6, #14]
   224c4:	e6bf2072 	sxth	r2, r2
   224c8:	e58d0000 	str	r0, [sp]
   224cc:	e3a00000 	mov	r0, #0
   224d0:	ebfff844 	bl	205e8 <UG_FillFrame>
   224d4:	eaffffde 	b	22454 <UG_WindowResize+0xdc>
   224d8:	e5972000 	ldr	r2, [r7]
   224dc:	e1a03005 	mov	r3, r5
   224e0:	e5d22044 	ldrb	r2, [r2, #68]	; 0x44
   224e4:	e3a00000 	mov	r0, #0
   224e8:	e58d2000 	str	r2, [sp]
   224ec:	e1a02004 	mov	r2, r4
   224f0:	ebfff83c 	bl	205e8 <UG_FillFrame>
   224f4:	eaffffd3 	b	22448 <UG_WindowResize+0xd0>
   224f8:	e5d82044 	ldrb	r2, [r8, #68]	; 0x44
   224fc:	e24a3001 	sub	r3, sl, #1
   22500:	e58d2000 	str	r2, [sp]
   22504:	e6bf3073 	sxth	r3, r3
   22508:	e1a02004 	mov	r2, r4
   2250c:	e1a01009 	mov	r1, r9
   22510:	e1a00009 	mov	r0, r9
   22514:	ebfff833 	bl	205e8 <UG_FillFrame>
   22518:	eaffffc5 	b	22434 <UG_WindowResize+0xbc>
   2251c:	0017af10 	.word	0x0017af10

00022520 <UG_WindowAlert>:
   22520:	e3500000 	cmp	r0, #0
   22524:	0a00000a 	beq	22554 <UG_WindowAlert+0x34>
   22528:	e5d03008 	ldrb	r3, [r0, #8]
   2252c:	e3130002 	tst	r3, #2
   22530:	0a000007 	beq	22554 <UG_WindowAlert+0x34>
   22534:	e5d01023 	ldrb	r1, [r0, #35]	; 0x23
   22538:	e5d02024 	ldrb	r2, [r0, #36]	; 0x24
   2253c:	e3833060 	orr	r3, r3, #96	; 0x60
   22540:	e5c03008 	strb	r3, [r0, #8]
   22544:	e5c01024 	strb	r1, [r0, #36]	; 0x24
   22548:	e5c02023 	strb	r2, [r0, #35]	; 0x23
   2254c:	e3a00000 	mov	r0, #0
   22550:	e12fff1e 	bx	lr
   22554:	e3e00000 	mvn	r0, #0
   22558:	e12fff1e 	bx	lr

0002255c <UG_WindowSetForeColor>:
   2255c:	e3500000 	cmp	r0, #0
   22560:	0a000007 	beq	22584 <UG_WindowSetForeColor+0x28>
   22564:	e5d03008 	ldrb	r3, [r0, #8]
   22568:	e3130002 	tst	r3, #2
   2256c:	0a000004 	beq	22584 <UG_WindowSetForeColor+0x28>
   22570:	e3833020 	orr	r3, r3, #32
   22574:	e5c03008 	strb	r3, [r0, #8]
   22578:	e5c01009 	strb	r1, [r0, #9]
   2257c:	e3a00000 	mov	r0, #0
   22580:	e12fff1e 	bx	lr
   22584:	e3e00000 	mvn	r0, #0
   22588:	e12fff1e 	bx	lr

0002258c <UG_WindowSetBackColor>:
   2258c:	e3500000 	cmp	r0, #0
   22590:	0a000007 	beq	225b4 <UG_WindowSetBackColor+0x28>
   22594:	e5d03008 	ldrb	r3, [r0, #8]
   22598:	e3130002 	tst	r3, #2
   2259c:	0a000004 	beq	225b4 <UG_WindowSetBackColor+0x28>
   225a0:	e3833020 	orr	r3, r3, #32
   225a4:	e5c03008 	strb	r3, [r0, #8]
   225a8:	e5c0100a 	strb	r1, [r0, #10]
   225ac:	e3a00000 	mov	r0, #0
   225b0:	e12fff1e 	bx	lr
   225b4:	e3e00000 	mvn	r0, #0
   225b8:	e12fff1e 	bx	lr

000225bc <UG_WindowSetTitleTextColor>:
   225bc:	e3500000 	cmp	r0, #0
   225c0:	0a000007 	beq	225e4 <UG_WindowSetTitleTextColor+0x28>
   225c4:	e5d03008 	ldrb	r3, [r0, #8]
   225c8:	e3130002 	tst	r3, #2
   225cc:	0a000004 	beq	225e4 <UG_WindowSetTitleTextColor+0x28>
   225d0:	e3833060 	orr	r3, r3, #96	; 0x60
   225d4:	e5c03008 	strb	r3, [r0, #8]
   225d8:	e5c01023 	strb	r1, [r0, #35]	; 0x23
   225dc:	e3a00000 	mov	r0, #0
   225e0:	e12fff1e 	bx	lr
   225e4:	e3e00000 	mvn	r0, #0
   225e8:	e12fff1e 	bx	lr

000225ec <UG_WindowSetTitleColor>:
   225ec:	e3500000 	cmp	r0, #0
   225f0:	0a000007 	beq	22614 <UG_WindowSetTitleColor+0x28>
   225f4:	e5d03008 	ldrb	r3, [r0, #8]
   225f8:	e3130002 	tst	r3, #2
   225fc:	0a000004 	beq	22614 <UG_WindowSetTitleColor+0x28>
   22600:	e3833060 	orr	r3, r3, #96	; 0x60
   22604:	e5c03008 	strb	r3, [r0, #8]
   22608:	e5c01024 	strb	r1, [r0, #36]	; 0x24
   2260c:	e3a00000 	mov	r0, #0
   22610:	e12fff1e 	bx	lr
   22614:	e3e00000 	mvn	r0, #0
   22618:	e12fff1e 	bx	lr

0002261c <UG_WindowSetTitleInactiveTextColor>:
   2261c:	e3500000 	cmp	r0, #0
   22620:	0a000007 	beq	22644 <UG_WindowSetTitleInactiveTextColor+0x28>
   22624:	e5d03008 	ldrb	r3, [r0, #8]
   22628:	e3130002 	tst	r3, #2
   2262c:	0a000004 	beq	22644 <UG_WindowSetTitleInactiveTextColor+0x28>
   22630:	e3833060 	orr	r3, r3, #96	; 0x60
   22634:	e5c03008 	strb	r3, [r0, #8]
   22638:	e5c01025 	strb	r1, [r0, #37]	; 0x25
   2263c:	e3a00000 	mov	r0, #0
   22640:	e12fff1e 	bx	lr
   22644:	e3e00000 	mvn	r0, #0
   22648:	e12fff1e 	bx	lr

0002264c <UG_WindowSetTitleInactiveColor>:
   2264c:	e3500000 	cmp	r0, #0
   22650:	0a000007 	beq	22674 <UG_WindowSetTitleInactiveColor+0x28>
   22654:	e5d03008 	ldrb	r3, [r0, #8]
   22658:	e3130002 	tst	r3, #2
   2265c:	0a000004 	beq	22674 <UG_WindowSetTitleInactiveColor+0x28>
   22660:	e3833060 	orr	r3, r3, #96	; 0x60
   22664:	e5c03008 	strb	r3, [r0, #8]
   22668:	e5c01026 	strb	r1, [r0, #38]	; 0x26
   2266c:	e3a00000 	mov	r0, #0
   22670:	e12fff1e 	bx	lr
   22674:	e3e00000 	mvn	r0, #0
   22678:	e12fff1e 	bx	lr

0002267c <UG_WindowSetTitleText>:
   2267c:	e3500000 	cmp	r0, #0
   22680:	0a000007 	beq	226a4 <UG_WindowSetTitleText+0x28>
   22684:	e5d03008 	ldrb	r3, [r0, #8]
   22688:	e3130002 	tst	r3, #2
   2268c:	0a000004 	beq	226a4 <UG_WindowSetTitleText+0x28>
   22690:	e3833060 	orr	r3, r3, #96	; 0x60
   22694:	e5c03008 	strb	r3, [r0, #8]
   22698:	e5801018 	str	r1, [r0, #24]
   2269c:	e3a00000 	mov	r0, #0
   226a0:	e12fff1e 	bx	lr
   226a4:	e3e00000 	mvn	r0, #0
   226a8:	e12fff1e 	bx	lr

000226ac <UG_WindowSetTitleTextFont>:
   226ac:	e3500000 	cmp	r0, #0
   226b0:	0a000014 	beq	22708 <UG_WindowSetTitleTextFont+0x5c>
   226b4:	e5d03008 	ldrb	r3, [r0, #8]
   226b8:	e3130002 	tst	r3, #2
   226bc:	0a000011 	beq	22708 <UG_WindowSetTitleTextFont+0x5c>
   226c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   226c4:	e3832060 	orr	r2, r3, #96	; 0x60
   226c8:	e5c02008 	strb	r2, [r0, #8]
   226cc:	e1d120f8 	ldrsh	r2, [r1, #8]
   226d0:	e5d0e027 	ldrb	lr, [r0, #39]	; 0x27
   226d4:	e282c001 	add	ip, r2, #1
   226d8:	e15e000c 	cmp	lr, ip
   226dc:	e580101c 	str	r1, [r0, #28]
   226e0:	ca000006 	bgt	22700 <UG_WindowSetTitleTextFont+0x54>
   226e4:	e3c33040 	bic	r3, r3, #64	; 0x40
   226e8:	e3833020 	orr	r3, r3, #32
   226ec:	e2822002 	add	r2, r2, #2
   226f0:	e5c03008 	strb	r3, [r0, #8]
   226f4:	e5c02027 	strb	r2, [r0, #39]	; 0x27
   226f8:	e3a00000 	mov	r0, #0
   226fc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   22700:	e3a00000 	mov	r0, #0
   22704:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   22708:	e3e00000 	mvn	r0, #0
   2270c:	e12fff1e 	bx	lr

00022710 <UG_WindowSetTitleTextHSpace>:
   22710:	e3500000 	cmp	r0, #0
   22714:	0a000007 	beq	22738 <UG_WindowSetTitleTextHSpace+0x28>
   22718:	e5d03008 	ldrb	r3, [r0, #8]
   2271c:	e3130002 	tst	r3, #2
   22720:	0a000004 	beq	22738 <UG_WindowSetTitleTextHSpace+0x28>
   22724:	e3833060 	orr	r3, r3, #96	; 0x60
   22728:	e5c03008 	strb	r3, [r0, #8]
   2272c:	e5c01020 	strb	r1, [r0, #32]
   22730:	e3a00000 	mov	r0, #0
   22734:	e12fff1e 	bx	lr
   22738:	e3e00000 	mvn	r0, #0
   2273c:	e12fff1e 	bx	lr

00022740 <UG_WindowSetTitleTextVSpace>:
   22740:	e3500000 	cmp	r0, #0
   22744:	0a000007 	beq	22768 <UG_WindowSetTitleTextVSpace+0x28>
   22748:	e5d03008 	ldrb	r3, [r0, #8]
   2274c:	e3130002 	tst	r3, #2
   22750:	0a000004 	beq	22768 <UG_WindowSetTitleTextVSpace+0x28>
   22754:	e3833060 	orr	r3, r3, #96	; 0x60
   22758:	e5c03008 	strb	r3, [r0, #8]
   2275c:	e5c01021 	strb	r1, [r0, #33]	; 0x21
   22760:	e3a00000 	mov	r0, #0
   22764:	e12fff1e 	bx	lr
   22768:	e3e00000 	mvn	r0, #0
   2276c:	e12fff1e 	bx	lr

00022770 <UG_WindowSetTitleTextAlignment>:
   22770:	e3500000 	cmp	r0, #0
   22774:	0a000007 	beq	22798 <UG_WindowSetTitleTextAlignment+0x28>
   22778:	e5d03008 	ldrb	r3, [r0, #8]
   2277c:	e3130002 	tst	r3, #2
   22780:	0a000004 	beq	22798 <UG_WindowSetTitleTextAlignment+0x28>
   22784:	e3833060 	orr	r3, r3, #96	; 0x60
   22788:	e5c03008 	strb	r3, [r0, #8]
   2278c:	e5c01022 	strb	r1, [r0, #34]	; 0x22
   22790:	e3a00000 	mov	r0, #0
   22794:	e12fff1e 	bx	lr
   22798:	e3e00000 	mvn	r0, #0
   2279c:	e12fff1e 	bx	lr

000227a0 <UG_WindowSetTitleHeight>:
   227a0:	e3500000 	cmp	r0, #0
   227a4:	0a000008 	beq	227cc <UG_WindowSetTitleHeight+0x2c>
   227a8:	e5d03008 	ldrb	r3, [r0, #8]
   227ac:	e3130002 	tst	r3, #2
   227b0:	0a000005 	beq	227cc <UG_WindowSetTitleHeight+0x2c>
   227b4:	e3c33040 	bic	r3, r3, #64	; 0x40
   227b8:	e3833020 	orr	r3, r3, #32
   227bc:	e5c03008 	strb	r3, [r0, #8]
   227c0:	e5c01027 	strb	r1, [r0, #39]	; 0x27
   227c4:	e3a00000 	mov	r0, #0
   227c8:	e12fff1e 	bx	lr
   227cc:	e3e00000 	mvn	r0, #0
   227d0:	e12fff1e 	bx	lr

000227d4 <UG_WindowSetXStart>:
   227d4:	e250c000 	subs	ip, r0, #0
   227d8:	0a000010 	beq	22820 <UG_WindowSetXStart+0x4c>
   227dc:	e5dc2008 	ldrb	r2, [ip, #8]
   227e0:	e3120002 	tst	r2, #2
   227e4:	0a00000d 	beq	22820 <UG_WindowSetXStart+0x4c>
   227e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   227ec:	e1dc31f0 	ldrsh	r3, [ip, #16]
   227f0:	e1dc20fe 	ldrsh	r2, [ip, #14]
   227f4:	e1cc10bc 	strh	r1, [ip, #12]
   227f8:	e1dcc1f2 	ldrsh	ip, [ip, #18]
   227fc:	e24dd00c 	sub	sp, sp, #12
   22800:	e58dc000 	str	ip, [sp]
   22804:	ebfffedb 	bl	22378 <UG_WindowResize>
   22808:	e3700001 	cmn	r0, #1
   2280c:	13a00000 	movne	r0, #0
   22810:	03a00001 	moveq	r0, #1
   22814:	e2600000 	rsb	r0, r0, #0
   22818:	e28dd00c 	add	sp, sp, #12
   2281c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   22820:	e3e00000 	mvn	r0, #0
   22824:	e12fff1e 	bx	lr

00022828 <UG_WindowSetYStart>:
   22828:	e250c000 	subs	ip, r0, #0
   2282c:	0a000011 	beq	22878 <UG_WindowSetYStart+0x50>
   22830:	e5dc3008 	ldrb	r3, [ip, #8]
   22834:	e3130002 	tst	r3, #2
   22838:	0a00000e 	beq	22878 <UG_WindowSetYStart+0x50>
   2283c:	e1a02001 	mov	r2, r1
   22840:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   22844:	e1dce1f2 	ldrsh	lr, [ip, #18]
   22848:	e24dd00c 	sub	sp, sp, #12
   2284c:	e1dc31f0 	ldrsh	r3, [ip, #16]
   22850:	e1dc10fc 	ldrsh	r1, [ip, #12]
   22854:	e1cc20be 	strh	r2, [ip, #14]
   22858:	e58de000 	str	lr, [sp]
   2285c:	ebfffec5 	bl	22378 <UG_WindowResize>
   22860:	e3700001 	cmn	r0, #1
   22864:	13a00000 	movne	r0, #0
   22868:	03a00001 	moveq	r0, #1
   2286c:	e2600000 	rsb	r0, r0, #0
   22870:	e28dd00c 	add	sp, sp, #12
   22874:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   22878:	e3e00000 	mvn	r0, #0
   2287c:	e12fff1e 	bx	lr

00022880 <UG_WindowSetXEnd>:
   22880:	e250c000 	subs	ip, r0, #0
   22884:	0a000011 	beq	228d0 <UG_WindowSetXEnd+0x50>
   22888:	e5dc3008 	ldrb	r3, [ip, #8]
   2288c:	e3130002 	tst	r3, #2
   22890:	0a00000e 	beq	228d0 <UG_WindowSetXEnd+0x50>
   22894:	e1a03001 	mov	r3, r1
   22898:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2289c:	e1dce1f2 	ldrsh	lr, [ip, #18]
   228a0:	e24dd00c 	sub	sp, sp, #12
   228a4:	e1dc20fe 	ldrsh	r2, [ip, #14]
   228a8:	e1dc10fc 	ldrsh	r1, [ip, #12]
   228ac:	e1cc31b0 	strh	r3, [ip, #16]
   228b0:	e58de000 	str	lr, [sp]
   228b4:	ebfffeaf 	bl	22378 <UG_WindowResize>
   228b8:	e3700001 	cmn	r0, #1
   228bc:	13a00000 	movne	r0, #0
   228c0:	03a00001 	moveq	r0, #1
   228c4:	e2600000 	rsb	r0, r0, #0
   228c8:	e28dd00c 	add	sp, sp, #12
   228cc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   228d0:	e3e00000 	mvn	r0, #0
   228d4:	e12fff1e 	bx	lr

000228d8 <UG_WindowSetYEnd>:
   228d8:	e250c000 	subs	ip, r0, #0
   228dc:	0a000011 	beq	22928 <UG_WindowSetYEnd+0x50>
   228e0:	e5dc3008 	ldrb	r3, [ip, #8]
   228e4:	e3130002 	tst	r3, #2
   228e8:	0a00000e 	beq	22928 <UG_WindowSetYEnd+0x50>
   228ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   228f0:	e1a0e001 	mov	lr, r1
   228f4:	e24dd00c 	sub	sp, sp, #12
   228f8:	e1dc31f0 	ldrsh	r3, [ip, #16]
   228fc:	e1dc20fe 	ldrsh	r2, [ip, #14]
   22900:	e1dc10fc 	ldrsh	r1, [ip, #12]
   22904:	e1cce1b2 	strh	lr, [ip, #18]
   22908:	e58de000 	str	lr, [sp]
   2290c:	ebfffe99 	bl	22378 <UG_WindowResize>
   22910:	e3700001 	cmn	r0, #1
   22914:	13a00000 	movne	r0, #0
   22918:	03a00001 	moveq	r0, #1
   2291c:	e2600000 	rsb	r0, r0, #0
   22920:	e28dd00c 	add	sp, sp, #12
   22924:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   22928:	e3e00000 	mvn	r0, #0
   2292c:	e12fff1e 	bx	lr

00022930 <UG_WindowSetStyle>:
   22930:	e3500000 	cmp	r0, #0
   22934:	0a00000f 	beq	22978 <UG_WindowSetStyle+0x48>
   22938:	e5d02008 	ldrb	r2, [r0, #8]
   2293c:	e3120002 	tst	r2, #2
   22940:	0a00000c 	beq	22978 <UG_WindowSetStyle+0x48>
   22944:	e5d03014 	ldrb	r3, [r0, #20]
   22948:	e3110001 	tst	r1, #1
   2294c:	13833001 	orrne	r3, r3, #1
   22950:	020330fe 	andeq	r3, r3, #254	; 0xfe
   22954:	e3110002 	tst	r1, #2
   22958:	e5c03014 	strb	r3, [r0, #20]
   2295c:	e3822020 	orr	r2, r2, #32
   22960:	13833002 	orrne	r3, r3, #2
   22964:	03c33002 	biceq	r3, r3, #2
   22968:	e5c03014 	strb	r3, [r0, #20]
   2296c:	e5c02008 	strb	r2, [r0, #8]
   22970:	e3a00000 	mov	r0, #0
   22974:	e12fff1e 	bx	lr
   22978:	e3e00000 	mvn	r0, #0
   2297c:	e12fff1e 	bx	lr

00022980 <UG_WindowGetForeColor>:
   22980:	e2502000 	subs	r2, r0, #0
   22984:	0a000003 	beq	22998 <UG_WindowGetForeColor+0x18>
   22988:	e5d23008 	ldrb	r3, [r2, #8]
   2298c:	e2130002 	ands	r0, r3, #2
   22990:	15d20009 	ldrbne	r0, [r2, #9]
   22994:	e12fff1e 	bx	lr
   22998:	e1a00002 	mov	r0, r2
   2299c:	e12fff1e 	bx	lr

000229a0 <UG_WindowGetBackColor>:
   229a0:	e2502000 	subs	r2, r0, #0
   229a4:	0a000003 	beq	229b8 <UG_WindowGetBackColor+0x18>
   229a8:	e5d23008 	ldrb	r3, [r2, #8]
   229ac:	e2130002 	ands	r0, r3, #2
   229b0:	15d2000a 	ldrbne	r0, [r2, #10]
   229b4:	e12fff1e 	bx	lr
   229b8:	e1a00002 	mov	r0, r2
   229bc:	e12fff1e 	bx	lr

000229c0 <UG_WindowGetTitleTextColor>:
   229c0:	e2502000 	subs	r2, r0, #0
   229c4:	0a000003 	beq	229d8 <UG_WindowGetTitleTextColor+0x18>
   229c8:	e5d23008 	ldrb	r3, [r2, #8]
   229cc:	e2130002 	ands	r0, r3, #2
   229d0:	15d20023 	ldrbne	r0, [r2, #35]	; 0x23
   229d4:	e12fff1e 	bx	lr
   229d8:	e1a00002 	mov	r0, r2
   229dc:	e12fff1e 	bx	lr

000229e0 <UG_WindowGetTitleColor>:
   229e0:	e2502000 	subs	r2, r0, #0
   229e4:	0a000003 	beq	229f8 <UG_WindowGetTitleColor+0x18>
   229e8:	e5d23008 	ldrb	r3, [r2, #8]
   229ec:	e2130002 	ands	r0, r3, #2
   229f0:	15d20024 	ldrbne	r0, [r2, #36]	; 0x24
   229f4:	e12fff1e 	bx	lr
   229f8:	e1a00002 	mov	r0, r2
   229fc:	e12fff1e 	bx	lr

00022a00 <UG_WindowGetTitleInactiveTextColor>:
   22a00:	e2502000 	subs	r2, r0, #0
   22a04:	0a000003 	beq	22a18 <UG_WindowGetTitleInactiveTextColor+0x18>
   22a08:	e5d23008 	ldrb	r3, [r2, #8]
   22a0c:	e2130002 	ands	r0, r3, #2
   22a10:	15d20025 	ldrbne	r0, [r2, #37]	; 0x25
   22a14:	e12fff1e 	bx	lr
   22a18:	e1a00002 	mov	r0, r2
   22a1c:	e12fff1e 	bx	lr

00022a20 <UG_WindowGetTitleInactiveColor>:
   22a20:	e2502000 	subs	r2, r0, #0
   22a24:	0a000003 	beq	22a38 <UG_WindowGetTitleInactiveColor+0x18>
   22a28:	e5d23008 	ldrb	r3, [r2, #8]
   22a2c:	e2130002 	ands	r0, r3, #2
   22a30:	15d20026 	ldrbne	r0, [r2, #38]	; 0x26
   22a34:	e12fff1e 	bx	lr
   22a38:	e1a00002 	mov	r0, r2
   22a3c:	e12fff1e 	bx	lr

00022a40 <UG_WindowGetTitleText>:
   22a40:	e3500000 	cmp	r0, #0
   22a44:	012fff1e 	bxeq	lr
   22a48:	e5d03008 	ldrb	r3, [r0, #8]
   22a4c:	e2133002 	ands	r3, r3, #2
   22a50:	15900018 	ldrne	r0, [r0, #24]
   22a54:	01a00003 	moveq	r0, r3
   22a58:	e12fff1e 	bx	lr

00022a5c <UG_WindowGetTitleTextFont>:
   22a5c:	e3500000 	cmp	r0, #0
   22a60:	012fff1e 	bxeq	lr
   22a64:	e5d03008 	ldrb	r3, [r0, #8]
   22a68:	e2133002 	ands	r3, r3, #2
   22a6c:	1590001c 	ldrne	r0, [r0, #28]
   22a70:	01a00003 	moveq	r0, r3
   22a74:	e12fff1e 	bx	lr

00022a78 <UG_WindowGetTitleTextHSpace>:
   22a78:	e2502000 	subs	r2, r0, #0
   22a7c:	0a000003 	beq	22a90 <UG_WindowGetTitleTextHSpace+0x18>
   22a80:	e5d23008 	ldrb	r3, [r2, #8]
   22a84:	e2130002 	ands	r0, r3, #2
   22a88:	11d202d0 	ldrsbne	r0, [r2, #32]
   22a8c:	e12fff1e 	bx	lr
   22a90:	e1a00002 	mov	r0, r2
   22a94:	e12fff1e 	bx	lr

00022a98 <UG_WindowGetTitleTextVSpace>:
   22a98:	e2502000 	subs	r2, r0, #0
   22a9c:	0a000003 	beq	22ab0 <UG_WindowGetTitleTextVSpace+0x18>
   22aa0:	e5d23008 	ldrb	r3, [r2, #8]
   22aa4:	e2130002 	ands	r0, r3, #2
   22aa8:	11d202d1 	ldrsbne	r0, [r2, #33]	; 0x21
   22aac:	e12fff1e 	bx	lr
   22ab0:	e1a00002 	mov	r0, r2
   22ab4:	e12fff1e 	bx	lr

00022ab8 <UG_WindowGetTitleTextAlignment>:
   22ab8:	e2502000 	subs	r2, r0, #0
   22abc:	0a000003 	beq	22ad0 <UG_WindowGetTitleTextAlignment+0x18>
   22ac0:	e5d23008 	ldrb	r3, [r2, #8]
   22ac4:	e2130002 	ands	r0, r3, #2
   22ac8:	15d20022 	ldrbne	r0, [r2, #34]	; 0x22
   22acc:	e12fff1e 	bx	lr
   22ad0:	e1a00002 	mov	r0, r2
   22ad4:	e12fff1e 	bx	lr

00022ad8 <UG_WindowGetTitleHeight>:
   22ad8:	e2502000 	subs	r2, r0, #0
   22adc:	0a000003 	beq	22af0 <UG_WindowGetTitleHeight+0x18>
   22ae0:	e5d23008 	ldrb	r3, [r2, #8]
   22ae4:	e2130002 	ands	r0, r3, #2
   22ae8:	15d20027 	ldrbne	r0, [r2, #39]	; 0x27
   22aec:	e12fff1e 	bx	lr
   22af0:	e1a00002 	mov	r0, r2
   22af4:	e12fff1e 	bx	lr

00022af8 <UG_WindowGetXStart>:
   22af8:	e3500000 	cmp	r0, #0
   22afc:	0a000004 	beq	22b14 <UG_WindowGetXStart+0x1c>
   22b00:	e5d03008 	ldrb	r3, [r0, #8]
   22b04:	e3130002 	tst	r3, #2
   22b08:	0a000001 	beq	22b14 <UG_WindowGetXStart+0x1c>
   22b0c:	e1d000fc 	ldrsh	r0, [r0, #12]
   22b10:	e12fff1e 	bx	lr
   22b14:	e3e00000 	mvn	r0, #0
   22b18:	e12fff1e 	bx	lr

00022b1c <UG_WindowGetYStart>:
   22b1c:	e3500000 	cmp	r0, #0
   22b20:	0a000004 	beq	22b38 <UG_WindowGetYStart+0x1c>
   22b24:	e5d03008 	ldrb	r3, [r0, #8]
   22b28:	e3130002 	tst	r3, #2
   22b2c:	0a000001 	beq	22b38 <UG_WindowGetYStart+0x1c>
   22b30:	e1d000fe 	ldrsh	r0, [r0, #14]
   22b34:	e12fff1e 	bx	lr
   22b38:	e3e00000 	mvn	r0, #0
   22b3c:	e12fff1e 	bx	lr

00022b40 <UG_WindowGetXEnd>:
   22b40:	e3500000 	cmp	r0, #0
   22b44:	0a000004 	beq	22b5c <UG_WindowGetXEnd+0x1c>
   22b48:	e5d03008 	ldrb	r3, [r0, #8]
   22b4c:	e3130002 	tst	r3, #2
   22b50:	0a000001 	beq	22b5c <UG_WindowGetXEnd+0x1c>
   22b54:	e1d001f0 	ldrsh	r0, [r0, #16]
   22b58:	e12fff1e 	bx	lr
   22b5c:	e3e00000 	mvn	r0, #0
   22b60:	e12fff1e 	bx	lr

00022b64 <UG_WindowGetYEnd>:
   22b64:	e3500000 	cmp	r0, #0
   22b68:	0a000004 	beq	22b80 <UG_WindowGetYEnd+0x1c>
   22b6c:	e5d03008 	ldrb	r3, [r0, #8]
   22b70:	e3130002 	tst	r3, #2
   22b74:	0a000001 	beq	22b80 <UG_WindowGetYEnd+0x1c>
   22b78:	e1d001f2 	ldrsh	r0, [r0, #18]
   22b7c:	e12fff1e 	bx	lr
   22b80:	e3e00000 	mvn	r0, #0
   22b84:	e12fff1e 	bx	lr

00022b88 <UG_WindowGetStyle>:
   22b88:	e2502000 	subs	r2, r0, #0
   22b8c:	0a000003 	beq	22ba0 <UG_WindowGetStyle+0x18>
   22b90:	e5d23008 	ldrb	r3, [r2, #8]
   22b94:	e2130002 	ands	r0, r3, #2
   22b98:	15d20014 	ldrbne	r0, [r2, #20]
   22b9c:	e12fff1e 	bx	lr
   22ba0:	e1a00002 	mov	r0, r2
   22ba4:	e12fff1e 	bx	lr

00022ba8 <UG_WindowGetArea>:
   22ba8:	e2503000 	subs	r3, r0, #0
   22bac:	0a000022 	beq	22c3c <UG_WindowGetArea+0x94>
   22bb0:	e5d32008 	ldrb	r2, [r3, #8]
   22bb4:	e3120002 	tst	r2, #2
   22bb8:	0a00001f 	beq	22c3c <UG_WindowGetArea+0x94>
   22bbc:	e92d4010 	push	{r4, lr}
   22bc0:	e1d3c1f0 	ldrsh	ip, [r3, #16]
   22bc4:	e1d340fc 	ldrsh	r4, [r3, #12]
   22bc8:	e1d3e0fe 	ldrsh	lr, [r3, #14]
   22bcc:	e1d321f2 	ldrsh	r2, [r3, #18]
   22bd0:	e1c140b0 	strh	r4, [r1]
   22bd4:	e1c1e0b2 	strh	lr, [r1, #2]
   22bd8:	e1c1c0b4 	strh	ip, [r1, #4]
   22bdc:	e1c120b6 	strh	r2, [r1, #6]
   22be0:	e5d30014 	ldrb	r0, [r3, #20]
   22be4:	e3100001 	tst	r0, #1
   22be8:	1a000008 	bne	22c10 <UG_WindowGetArea+0x68>
   22bec:	e2100002 	ands	r0, r0, #2
   22bf0:	08bd8010 	popeq	{r4, pc}
   22bf4:	e1d120b2 	ldrh	r2, [r1, #2]
   22bf8:	e5d33027 	ldrb	r3, [r3, #39]	; 0x27
   22bfc:	e2822001 	add	r2, r2, #1
   22c00:	e0833002 	add	r3, r3, r2
   22c04:	e1c130b2 	strh	r3, [r1, #2]
   22c08:	e3a00000 	mov	r0, #0
   22c0c:	e8bd8010 	pop	{r4, pc}
   22c10:	e2844003 	add	r4, r4, #3
   22c14:	e28ee003 	add	lr, lr, #3
   22c18:	e24cc003 	sub	ip, ip, #3
   22c1c:	e2422003 	sub	r2, r2, #3
   22c20:	e2100002 	ands	r0, r0, #2
   22c24:	e1c140b0 	strh	r4, [r1]
   22c28:	e1c1e0b2 	strh	lr, [r1, #2]
   22c2c:	e1c1c0b4 	strh	ip, [r1, #4]
   22c30:	e1c120b6 	strh	r2, [r1, #6]
   22c34:	1affffee 	bne	22bf4 <UG_WindowGetArea+0x4c>
   22c38:	e8bd8010 	pop	{r4, pc}
   22c3c:	e3e00000 	mvn	r0, #0
   22c40:	e12fff1e 	bx	lr

00022c44 <_UG_ButtonUpdate>:
   22c44:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   22c48:	e5d12001 	ldrb	r2, [r1, #1]
   22c4c:	e24dd034 	sub	sp, sp, #52	; 0x34
   22c50:	e3120001 	tst	r2, #1
   22c54:	e591501c 	ldr	r5, [r1, #28]
   22c58:	e5d13000 	ldrb	r3, [r1]
   22c5c:	0a00008f 	beq	22ea0 <_UG_ButtonUpdate+0x25c>
   22c60:	e3120080 	tst	r2, #128	; 0x80
   22c64:	13a0c001 	movne	ip, #1
   22c68:	13833020 	orrne	r3, r3, #32
   22c6c:	15c13000 	strbne	r3, [r1]
   22c70:	15c1c01a 	strbne	ip, [r1, #26]
   22c74:	e5d5c000 	ldrb	ip, [r5]
   22c78:	e3120002 	tst	r2, #2
   22c7c:	13a0e004 	movne	lr, #4
   22c80:	138cc001 	orrne	ip, ip, #1
   22c84:	1a000003 	bne	22c98 <_UG_ButtonUpdate+0x54>
   22c88:	e31c0001 	tst	ip, #1
   22c8c:	0a000081 	beq	22e98 <_UG_ButtonUpdate+0x254>
   22c90:	e3a0e005 	mov	lr, #5
   22c94:	e3ccc001 	bic	ip, ip, #1
   22c98:	e3833020 	orr	r3, r3, #32
   22c9c:	e3c22001 	bic	r2, r2, #1
   22ca0:	e5c5c000 	strb	ip, [r5]
   22ca4:	e5c13000 	strb	r3, [r1]
   22ca8:	e5c12001 	strb	r2, [r1, #1]
   22cac:	e5c1e01a 	strb	lr, [r1, #26]
   22cb0:	e3130008 	tst	r3, #8
   22cb4:	e1a06000 	mov	r6, r0
   22cb8:	e1a04001 	mov	r4, r1
   22cbc:	0a00007c 	beq	22eb4 <_UG_ButtonUpdate+0x270>
   22cc0:	e3130040 	tst	r3, #64	; 0x40
   22cc4:	1a000002 	bne	22cd4 <_UG_ButtonUpdate+0x90>
   22cc8:	e5d53000 	ldrb	r3, [r5]
   22ccc:	e3130002 	tst	r3, #2
   22cd0:	0a000059 	beq	22e3c <_UG_ButtonUpdate+0x1f8>
   22cd4:	e28d1008 	add	r1, sp, #8
   22cd8:	e1a00006 	mov	r0, r6
   22cdc:	ebffffb1 	bl	22ba8 <UG_WindowGetArea>
   22ce0:	e1dd00ba 	ldrh	r0, [sp, #10]
   22ce4:	e1d431b6 	ldrh	r3, [r4, #22]
   22ce8:	e1d6c1f2 	ldrsh	ip, [r6, #18]
   22cec:	e0803003 	add	r3, r0, r3
   22cf0:	e6bf3073 	sxth	r3, r3
   22cf4:	e15c0003 	cmp	ip, r3
   22cf8:	e1d4c1b2 	ldrh	ip, [r4, #18]
   22cfc:	e1dd10b8 	ldrh	r1, [sp, #8]
   22d00:	e1d421b4 	ldrh	r2, [r4, #20]
   22d04:	e080000c 	add	r0, r0, ip
   22d08:	e1d4c1b0 	ldrh	ip, [r4, #16]
   22d0c:	e0812002 	add	r2, r1, r2
   22d10:	e6bf2072 	sxth	r2, r2
   22d14:	e081100c 	add	r1, r1, ip
   22d18:	e1c430be 	strh	r3, [r4, #14]
   22d1c:	e1c400ba 	strh	r0, [r4, #10]
   22d20:	e1c420bc 	strh	r2, [r4, #12]
   22d24:	e1c410b8 	strh	r1, [r4, #8]
   22d28:	ba00005f 	blt	22eac <_UG_ButtonUpdate+0x268>
   22d2c:	e1d631f0 	ldrsh	r3, [r6, #16]
   22d30:	e1530002 	cmp	r3, r2
   22d34:	ba00005c 	blt	22eac <_UG_ButtonUpdate+0x268>
   22d38:	e3a03002 	mov	r3, #2
   22d3c:	e5d41018 	ldrb	r1, [r4, #24]
   22d40:	e5d42019 	ldrb	r2, [r4, #25]
   22d44:	e5cd301b 	strb	r3, [sp, #27]
   22d48:	e5cd3018 	strb	r3, [sp, #24]
   22d4c:	e5cd1019 	strb	r1, [sp, #25]
   22d50:	e5cd201a 	strb	r2, [sp, #26]
   22d54:	e5963028 	ldr	r3, [r6, #40]	; 0x28
   22d58:	e58d401c 	str	r4, [sp, #28]
   22d5c:	e28d0018 	add	r0, sp, #24
   22d60:	e12fff33 	blx	r3
   22d64:	e5d53003 	ldrb	r3, [r5, #3]
   22d68:	e5d5c001 	ldrb	ip, [r5, #1]
   22d6c:	e5cd3029 	strb	r3, [sp, #41]	; 0x29
   22d70:	e5d52002 	ldrb	r2, [r5, #2]
   22d74:	e31c0001 	tst	ip, #1
   22d78:	e5cd2028 	strb	r2, [sp, #40]	; 0x28
   22d7c:	e5d51000 	ldrb	r1, [r5]
   22d80:	03a07001 	moveq	r7, #1
   22d84:	13a07003 	movne	r7, #3
   22d88:	e3110001 	tst	r1, #1
   22d8c:	1a00005d 	bne	22f08 <_UG_ButtonUpdate+0x2c4>
   22d90:	e1d400b8 	ldrh	r0, [r4, #8]
   22d94:	e1d410ba 	ldrh	r1, [r4, #10]
   22d98:	e1d420bc 	ldrh	r2, [r4, #12]
   22d9c:	e1d430be 	ldrh	r3, [r4, #14]
   22da0:	e0870000 	add	r0, r7, r0
   22da4:	e0871001 	add	r1, r7, r1
   22da8:	e0422007 	sub	r2, r2, r7
   22dac:	e0433007 	sub	r3, r3, r7
   22db0:	e31c0010 	tst	ip, #16
   22db4:	e6bf0070 	sxth	r0, r0
   22db8:	e6bf1071 	sxth	r1, r1
   22dbc:	e6bf2072 	sxth	r2, r2
   22dc0:	e6bf3073 	sxth	r3, r3
   22dc4:	0a000059 	beq	22f30 <_UG_ButtonUpdate+0x2ec>
   22dc8:	e1cd02b0 	strh	r0, [sp, #32]
   22dcc:	e1cd12b2 	strh	r1, [sp, #34]	; 0x22
   22dd0:	e1cd32b6 	strh	r3, [sp, #38]	; 0x26
   22dd4:	e1cd22b4 	strh	r2, [sp, #36]	; 0x24
   22dd8:	e5d5200c 	ldrb	r2, [r5, #12]
   22ddc:	e59f318c 	ldr	r3, [pc, #396]	; 22f70 <_UG_ButtonUpdate+0x32c>
   22de0:	e5cd202a 	strb	r2, [sp, #42]	; 0x2a
   22de4:	e5951008 	ldr	r1, [r5, #8]
   22de8:	e5952010 	ldr	r2, [r5, #16]
   22dec:	e28d0018 	add	r0, sp, #24
   22df0:	e58d101c 	str	r1, [sp, #28]
   22df4:	e58d2018 	str	r2, [sp, #24]
   22df8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
   22dfc:	ebfffa89 	bl	21828 <_UG_PutText>
   22e00:	e3a00002 	mov	r0, #2
   22e04:	e3a0c003 	mov	ip, #3
   22e08:	e5d43000 	ldrb	r3, [r4]
   22e0c:	e5d41018 	ldrb	r1, [r4, #24]
   22e10:	e3c33040 	bic	r3, r3, #64	; 0x40
   22e14:	e5d42019 	ldrb	r2, [r4, #25]
   22e18:	e5c43000 	strb	r3, [r4]
   22e1c:	e5cd0010 	strb	r0, [sp, #16]
   22e20:	e58d4014 	str	r4, [sp, #20]
   22e24:	e5963028 	ldr	r3, [r6, #40]	; 0x28
   22e28:	e5cdc013 	strb	ip, [sp, #19]
   22e2c:	e5cd1011 	strb	r1, [sp, #17]
   22e30:	e5cd2012 	strb	r2, [sp, #18]
   22e34:	e28d0010 	add	r0, sp, #16
   22e38:	e12fff33 	blx	r3
   22e3c:	e5d53001 	ldrb	r3, [r5, #1]
   22e40:	e3130008 	tst	r3, #8
   22e44:	1a000024 	bne	22edc <_UG_ButtonUpdate+0x298>
   22e48:	e5d52000 	ldrb	r2, [r5]
   22e4c:	e3130001 	tst	r3, #1
   22e50:	e202c001 	and	ip, r2, #1
   22e54:	e1d400f8 	ldrsh	r0, [r4, #8]
   22e58:	e1d410fa 	ldrsh	r1, [r4, #10]
   22e5c:	e1d420fc 	ldrsh	r2, [r4, #12]
   22e60:	e1d430fe 	ldrsh	r3, [r4, #14]
   22e64:	0a000020 	beq	22eec <_UG_ButtonUpdate+0x2a8>
   22e68:	e59fe104 	ldr	lr, [pc, #260]	; 22f74 <_UG_ButtonUpdate+0x330>
   22e6c:	e35c0000 	cmp	ip, #0
   22e70:	e24e500c 	sub	r5, lr, #12
   22e74:	01a0c00e 	moveq	ip, lr
   22e78:	11a0c005 	movne	ip, r5
   22e7c:	e58dc000 	str	ip, [sp]
   22e80:	ebfffbeb 	bl	21e34 <_UG_DrawObjectFrame>
   22e84:	e5d43000 	ldrb	r3, [r4]
   22e88:	e3c33020 	bic	r3, r3, #32
   22e8c:	e5c43000 	strb	r3, [r4]
   22e90:	e28dd034 	add	sp, sp, #52	; 0x34
   22e94:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   22e98:	e3c22001 	bic	r2, r2, #1
   22e9c:	e5c12001 	strb	r2, [r1, #1]
   22ea0:	e2032020 	and	r2, r3, #32
   22ea4:	e3520000 	cmp	r2, #0
   22ea8:	1affff80 	bne	22cb0 <_UG_ButtonUpdate+0x6c>
   22eac:	e28dd034 	add	sp, sp, #52	; 0x34
   22eb0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   22eb4:	e5d52001 	ldrb	r2, [r5, #1]
   22eb8:	e3120010 	tst	r2, #16
   22ebc:	1afffff1 	bne	22e88 <_UG_ButtonUpdate+0x244>
   22ec0:	e5d0c00a 	ldrb	ip, [r0, #10]
   22ec4:	e1d130fe 	ldrsh	r3, [r1, #14]
   22ec8:	e1d120fc 	ldrsh	r2, [r1, #12]
   22ecc:	e1d400f8 	ldrsh	r0, [r4, #8]
   22ed0:	e1d110fa 	ldrsh	r1, [r1, #10]
   22ed4:	e58dc000 	str	ip, [sp]
   22ed8:	ebfff5c2 	bl	205e8 <UG_FillFrame>
   22edc:	e5d43000 	ldrb	r3, [r4]
   22ee0:	e3c33020 	bic	r3, r3, #32
   22ee4:	e5c43000 	strb	r3, [r4]
   22ee8:	eaffffe8 	b	22e90 <_UG_ButtonUpdate+0x24c>
   22eec:	e35c0000 	cmp	ip, #0
   22ef0:	15d5c005 	ldrbne	ip, [r5, #5]
   22ef4:	05d5c004 	ldrbeq	ip, [r5, #4]
   22ef8:	e58dc000 	str	ip, [sp]
   22efc:	ebfff70a 	bl	20b2c <UG_DrawFrame>
   22f00:	e5d43000 	ldrb	r3, [r4]
   22f04:	eaffffdf 	b	22e88 <_UG_ButtonUpdate+0x244>
   22f08:	e31c0002 	tst	ip, #2
   22f0c:	15cd2029 	strbne	r2, [sp, #41]	; 0x29
   22f10:	15cd3028 	strbne	r3, [sp, #40]	; 0x28
   22f14:	1affff9d 	bne	22d90 <_UG_ButtonUpdate+0x14c>
   22f18:	e31c0004 	tst	ip, #4
   22f1c:	15d53005 	ldrbne	r3, [r5, #5]
   22f20:	15cd3029 	strbne	r3, [sp, #41]	; 0x29
   22f24:	15d53004 	ldrbne	r3, [r5, #4]
   22f28:	15cd3028 	strbne	r3, [sp, #40]	; 0x28
   22f2c:	eaffff97 	b	22d90 <_UG_ButtonUpdate+0x14c>
   22f30:	e5ddc029 	ldrb	ip, [sp, #41]	; 0x29
   22f34:	e58dc000 	str	ip, [sp]
   22f38:	ebfff5aa 	bl	205e8 <UG_FillFrame>
   22f3c:	e1d400b8 	ldrh	r0, [r4, #8]
   22f40:	e1d410ba 	ldrh	r1, [r4, #10]
   22f44:	e1d420bc 	ldrh	r2, [r4, #12]
   22f48:	e1d430be 	ldrh	r3, [r4, #14]
   22f4c:	e0870000 	add	r0, r7, r0
   22f50:	e0871001 	add	r1, r7, r1
   22f54:	e0422007 	sub	r2, r2, r7
   22f58:	e0433007 	sub	r3, r3, r7
   22f5c:	e6bf0070 	sxth	r0, r0
   22f60:	e6bf1071 	sxth	r1, r1
   22f64:	e6bf2072 	sxth	r2, r2
   22f68:	e6bf3073 	sxth	r3, r3
   22f6c:	eaffff95 	b	22dc8 <_UG_ButtonUpdate+0x184>
   22f70:	00020002 	.word	0x00020002
   22f74:	0003dd08 	.word	0x0003dd08

00022f78 <_UG_CheckboxUpdate>:
   22f78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   22f7c:	e5d12001 	ldrb	r2, [r1, #1]
   22f80:	e24dd030 	sub	sp, sp, #48	; 0x30
   22f84:	e3120001 	tst	r2, #1
   22f88:	e591501c 	ldr	r5, [r1, #28]
   22f8c:	e5d13000 	ldrb	r3, [r1]
   22f90:	0a00010c 	beq	233c8 <_UG_CheckboxUpdate+0x450>
   22f94:	e3120080 	tst	r2, #128	; 0x80
   22f98:	13a0c001 	movne	ip, #1
   22f9c:	13833020 	orrne	r3, r3, #32
   22fa0:	15c13000 	strbne	r3, [r1]
   22fa4:	15c1c01a 	strbne	ip, [r1, #26]
   22fa8:	e3120002 	tst	r2, #2
   22fac:	e5d5c000 	ldrb	ip, [r5]
   22fb0:	0a000100 	beq	233b8 <_UG_CheckboxUpdate+0x440>
   22fb4:	e3a0e004 	mov	lr, #4
   22fb8:	e38cc001 	orr	ip, ip, #1
   22fbc:	e3833020 	orr	r3, r3, #32
   22fc0:	e3c22001 	bic	r2, r2, #1
   22fc4:	e5c5c000 	strb	ip, [r5]
   22fc8:	e5c13000 	strb	r3, [r1]
   22fcc:	e5c12001 	strb	r2, [r1, #1]
   22fd0:	e5c1e01a 	strb	lr, [r1, #26]
   22fd4:	e1a04001 	mov	r4, r1
   22fd8:	e1a06000 	mov	r6, r0
   22fdc:	e28d1008 	add	r1, sp, #8
   22fe0:	ebfffef0 	bl	22ba8 <UG_WindowGetArea>
   22fe4:	e1dd10ba 	ldrh	r1, [sp, #10]
   22fe8:	e1d4e1b2 	ldrh	lr, [r4, #18]
   22fec:	e1d431b6 	ldrh	r3, [r4, #22]
   22ff0:	e1dd20b8 	ldrh	r2, [sp, #8]
   22ff4:	e0813003 	add	r3, r1, r3
   22ff8:	e1d401b0 	ldrh	r0, [r4, #16]
   22ffc:	e081100e 	add	r1, r1, lr
   23000:	e1d4e1b4 	ldrh	lr, [r4, #20]
   23004:	e1d6c1f2 	ldrsh	ip, [r6, #18]
   23008:	e6bf3073 	sxth	r3, r3
   2300c:	e0820000 	add	r0, r2, r0
   23010:	e082200e 	add	r2, r2, lr
   23014:	e6bf1071 	sxth	r1, r1
   23018:	e6bf0070 	sxth	r0, r0
   2301c:	e6bf2072 	sxth	r2, r2
   23020:	e15c0003 	cmp	ip, r3
   23024:	e1c430be 	strh	r3, [r4, #14]
   23028:	e1c410ba 	strh	r1, [r4, #10]
   2302c:	e1c400b8 	strh	r0, [r4, #8]
   23030:	e1c420bc 	strh	r2, [r4, #12]
   23034:	ba0000e6 	blt	233d4 <_UG_CheckboxUpdate+0x45c>
   23038:	e1d6c1f0 	ldrsh	ip, [r6, #16]
   2303c:	e15c0002 	cmp	ip, r2
   23040:	ba0000e3 	blt	233d4 <_UG_CheckboxUpdate+0x45c>
   23044:	e5d4e000 	ldrb	lr, [r4]
   23048:	e5d5c001 	ldrb	ip, [r5, #1]
   2304c:	e31e0008 	tst	lr, #8
   23050:	0a0000ee 	beq	23410 <_UG_CheckboxUpdate+0x498>
   23054:	e5953008 	ldr	r3, [r5, #8]
   23058:	e31c0001 	tst	ip, #1
   2305c:	e1d380f8 	ldrsh	r8, [r3, #8]
   23060:	e1d3c0f6 	ldrsh	ip, [r3, #6]
   23064:	03a07001 	moveq	r7, #1
   23068:	13a07003 	movne	r7, #3
   2306c:	e15c0008 	cmp	ip, r8
   23070:	b1a0c008 	movlt	ip, r8
   23074:	e31e0040 	tst	lr, #64	; 0x40
   23078:	e6ef807c 	uxtb	r8, ip
   2307c:	0a000156 	beq	235dc <_UG_CheckboxUpdate+0x664>
   23080:	e3a03002 	mov	r3, #2
   23084:	e5d41018 	ldrb	r1, [r4, #24]
   23088:	e5d42019 	ldrb	r2, [r4, #25]
   2308c:	e5cd301b 	strb	r3, [sp, #27]
   23090:	e5cd3018 	strb	r3, [sp, #24]
   23094:	e5cd1019 	strb	r1, [sp, #25]
   23098:	e5cd201a 	strb	r2, [sp, #26]
   2309c:	e5963028 	ldr	r3, [r6, #40]	; 0x28
   230a0:	e58d401c 	str	r4, [sp, #28]
   230a4:	e28d0018 	add	r0, sp, #24
   230a8:	e12fff33 	blx	r3
   230ac:	e5d52003 	ldrb	r2, [r5, #3]
   230b0:	e5cd2029 	strb	r2, [sp, #41]	; 0x29
   230b4:	e5d51002 	ldrb	r1, [r5, #2]
   230b8:	e5cd1028 	strb	r1, [sp, #40]	; 0x28
   230bc:	e5d53000 	ldrb	r3, [r5]
   230c0:	e3130001 	tst	r3, #1
   230c4:	e5d53001 	ldrb	r3, [r5, #1]
   230c8:	0a000008 	beq	230f0 <_UG_CheckboxUpdate+0x178>
   230cc:	e3130002 	tst	r3, #2
   230d0:	15cd1029 	strbne	r1, [sp, #41]	; 0x29
   230d4:	15cd2028 	strbne	r2, [sp, #40]	; 0x28
   230d8:	1a000004 	bne	230f0 <_UG_CheckboxUpdate+0x178>
   230dc:	e3130004 	tst	r3, #4
   230e0:	15d52005 	ldrbne	r2, [r5, #5]
   230e4:	15cd2029 	strbne	r2, [sp, #41]	; 0x29
   230e8:	15d52004 	ldrbne	r2, [r5, #4]
   230ec:	15cd2028 	strbne	r2, [sp, #40]	; 0x28
   230f0:	e1d410ba 	ldrh	r1, [r4, #10]
   230f4:	e3130010 	tst	r3, #16
   230f8:	e0871001 	add	r1, r7, r1
   230fc:	e6bf1071 	sxth	r1, r1
   23100:	e1d400b8 	ldrh	r0, [r4, #8]
   23104:	e1d4e0fc 	ldrsh	lr, [r4, #12]
   23108:	e1d420fe 	ldrsh	r2, [r4, #14]
   2310c:	0a00011b 	beq	23580 <_UG_CheckboxUpdate+0x608>
   23110:	e0873087 	add	r3, r7, r7, lsl #1
   23114:	e0883003 	add	r3, r8, r3
   23118:	e0800003 	add	r0, r0, r3
   2311c:	e1cd12b2 	strh	r1, [sp, #34]	; 0x22
   23120:	e1cde2b4 	strh	lr, [sp, #36]	; 0x24
   23124:	e1cd02b0 	strh	r0, [sp, #32]
   23128:	e1cd22b6 	strh	r2, [sp, #38]	; 0x26
   2312c:	e5d5200c 	ldrb	r2, [r5, #12]
   23130:	e59f34b4 	ldr	r3, [pc, #1204]	; 235ec <_UG_CheckboxUpdate+0x674>
   23134:	e5cd202a 	strb	r2, [sp, #42]	; 0x2a
   23138:	e5951008 	ldr	r1, [r5, #8]
   2313c:	e5952010 	ldr	r2, [r5, #16]
   23140:	e28d0018 	add	r0, sp, #24
   23144:	e58d101c 	str	r1, [sp, #28]
   23148:	e58d2018 	str	r2, [sp, #24]
   2314c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
   23150:	ebfff9b4 	bl	21828 <_UG_PutText>
   23154:	e3a0c003 	mov	ip, #3
   23158:	e3a00002 	mov	r0, #2
   2315c:	e5d43000 	ldrb	r3, [r4]
   23160:	e5d41018 	ldrb	r1, [r4, #24]
   23164:	e3c33040 	bic	r3, r3, #64	; 0x40
   23168:	e5d42019 	ldrb	r2, [r4, #25]
   2316c:	e5c43000 	strb	r3, [r4]
   23170:	e5cd0010 	strb	r0, [sp, #16]
   23174:	e5cd1011 	strb	r1, [sp, #17]
   23178:	e28d0010 	add	r0, sp, #16
   2317c:	e58d4014 	str	r4, [sp, #20]
   23180:	e5963028 	ldr	r3, [r6, #40]	; 0x28
   23184:	e5cdc013 	strb	ip, [sp, #19]
   23188:	e5cd2012 	strb	r2, [sp, #18]
   2318c:	e12fff33 	blx	r3
   23190:	e1d400f8 	ldrsh	r0, [r4, #8]
   23194:	e1d410fa 	ldrsh	r1, [r4, #10]
   23198:	e2482001 	sub	r2, r8, #1
   2319c:	e2483002 	sub	r3, r8, #2
   231a0:	e5d5c014 	ldrb	ip, [r5, #20]
   231a4:	e6ff0070 	uxth	r0, r0
   231a8:	e6ff1071 	uxth	r1, r1
   231ac:	e0872002 	add	r2, r7, r2
   231b0:	e287e001 	add	lr, r7, #1
   231b4:	e0873003 	add	r3, r7, r3
   231b8:	e0802002 	add	r2, r0, r2
   231bc:	e0813003 	add	r3, r1, r3
   231c0:	e080000e 	add	r0, r0, lr
   231c4:	e0871001 	add	r1, r7, r1
   231c8:	e35c0000 	cmp	ip, #0
   231cc:	e6bf2072 	sxth	r2, r2
   231d0:	e6bf0070 	sxth	r0, r0
   231d4:	e6bf3073 	sxth	r3, r3
   231d8:	e6bf1071 	sxth	r1, r1
   231dc:	0a000095 	beq	23438 <_UG_CheckboxUpdate+0x4c0>
   231e0:	e5d5c002 	ldrb	ip, [r5, #2]
   231e4:	e58dc000 	str	ip, [sp]
   231e8:	ebfff575 	bl	207c4 <UG_DrawLine>
   231ec:	e1d400b8 	ldrh	r0, [r4, #8]
   231f0:	e1d410ba 	ldrh	r1, [r4, #10]
   231f4:	e2402001 	sub	r2, r0, #1
   231f8:	e2413001 	sub	r3, r1, #1
   231fc:	e5d5c002 	ldrb	ip, [r5, #2]
   23200:	e0882002 	add	r2, r8, r2
   23204:	e0883003 	add	r3, r8, r3
   23208:	e0872002 	add	r2, r7, r2
   2320c:	e0800007 	add	r0, r0, r7
   23210:	e0873003 	add	r3, r7, r3
   23214:	e0811007 	add	r1, r1, r7
   23218:	e6bf2072 	sxth	r2, r2
   2321c:	e6bf0070 	sxth	r0, r0
   23220:	e6bf3073 	sxth	r3, r3
   23224:	e6bf1071 	sxth	r1, r1
   23228:	e58dc000 	str	ip, [sp]
   2322c:	ebfff564 	bl	207c4 <UG_DrawLine>
   23230:	e1d430ba 	ldrh	r3, [r4, #10]
   23234:	e1d400b8 	ldrh	r0, [r4, #8]
   23238:	e243c001 	sub	ip, r3, #1
   2323c:	e2402002 	sub	r2, r0, #2
   23240:	e088c00c 	add	ip, r8, ip
   23244:	e5d5e002 	ldrb	lr, [r5, #2]
   23248:	e2831001 	add	r1, r3, #1
   2324c:	e0882002 	add	r2, r8, r2
   23250:	e087300c 	add	r3, r7, ip
   23254:	e0872002 	add	r2, r7, r2
   23258:	e0800007 	add	r0, r0, r7
   2325c:	e0871001 	add	r1, r7, r1
   23260:	e6bf2072 	sxth	r2, r2
   23264:	e6bf0070 	sxth	r0, r0
   23268:	e6bf3073 	sxth	r3, r3
   2326c:	e6bf1071 	sxth	r1, r1
   23270:	e58de000 	str	lr, [sp]
   23274:	ebfff552 	bl	207c4 <UG_DrawLine>
   23278:	e1d430ba 	ldrh	r3, [r4, #10]
   2327c:	e1d420b8 	ldrh	r2, [r4, #8]
   23280:	e243e001 	sub	lr, r3, #1
   23284:	e2420001 	sub	r0, r2, #1
   23288:	e088e00e 	add	lr, r8, lr
   2328c:	e5d5c002 	ldrb	ip, [r5, #2]
   23290:	e2831001 	add	r1, r3, #1
   23294:	e0880000 	add	r0, r8, r0
   23298:	e2822001 	add	r2, r2, #1
   2329c:	e087300e 	add	r3, r7, lr
   232a0:	e0870000 	add	r0, r7, r0
   232a4:	e0872002 	add	r2, r7, r2
   232a8:	e0871001 	add	r1, r7, r1
   232ac:	e6bf0070 	sxth	r0, r0
   232b0:	e6bf2072 	sxth	r2, r2
   232b4:	e6bf3073 	sxth	r3, r3
   232b8:	e6bf1071 	sxth	r1, r1
   232bc:	e58dc000 	str	ip, [sp]
   232c0:	ebfff53f 	bl	207c4 <UG_DrawLine>
   232c4:	e1d420b8 	ldrh	r2, [r4, #8]
   232c8:	e1d410ba 	ldrh	r1, [r4, #10]
   232cc:	e2420001 	sub	r0, r2, #1
   232d0:	e2413001 	sub	r3, r1, #1
   232d4:	e5d5c002 	ldrb	ip, [r5, #2]
   232d8:	e0880000 	add	r0, r8, r0
   232dc:	e0883003 	add	r3, r8, r3
   232e0:	e0870000 	add	r0, r7, r0
   232e4:	e0822007 	add	r2, r2, r7
   232e8:	e0873003 	add	r3, r7, r3
   232ec:	e0811007 	add	r1, r1, r7
   232f0:	e6bf0070 	sxth	r0, r0
   232f4:	e6bf2072 	sxth	r2, r2
   232f8:	e6bf3073 	sxth	r3, r3
   232fc:	e6bf1071 	sxth	r1, r1
   23300:	e58dc000 	str	ip, [sp]
   23304:	ebfff52e 	bl	207c4 <UG_DrawLine>
   23308:	e1d420b8 	ldrh	r2, [r4, #8]
   2330c:	e1d410ba 	ldrh	r1, [r4, #10]
   23310:	e2420002 	sub	r0, r2, #2
   23314:	e2413002 	sub	r3, r1, #2
   23318:	e5d5c002 	ldrb	ip, [r5, #2]
   2331c:	e0880000 	add	r0, r8, r0
   23320:	e0883003 	add	r3, r8, r3
   23324:	e0870000 	add	r0, r7, r0
   23328:	e0872002 	add	r2, r7, r2
   2332c:	e0873003 	add	r3, r7, r3
   23330:	e0871001 	add	r1, r7, r1
   23334:	e6bf0070 	sxth	r0, r0
   23338:	e6bf2072 	sxth	r2, r2
   2333c:	e6bf3073 	sxth	r3, r3
   23340:	e6bf1071 	sxth	r1, r1
   23344:	e58dc000 	str	ip, [sp]
   23348:	ebfff51d 	bl	207c4 <UG_DrawLine>
   2334c:	e5d5e001 	ldrb	lr, [r5, #1]
   23350:	e31e0008 	tst	lr, #8
   23354:	1a000035 	bne	23430 <_UG_CheckboxUpdate+0x4b8>
   23358:	e1d400f8 	ldrsh	r0, [r4, #8]
   2335c:	e1d410fa 	ldrsh	r1, [r4, #10]
   23360:	e2402001 	sub	r2, r0, #1
   23364:	e241c001 	sub	ip, r1, #1
   23368:	e1a03087 	lsl	r3, r7, #1
   2336c:	e088c00c 	add	ip, r8, ip
   23370:	e0882002 	add	r2, r8, r2
   23374:	e5d56000 	ldrb	r6, [r5]
   23378:	e0832002 	add	r2, r3, r2
   2337c:	e31e0001 	tst	lr, #1
   23380:	e083300c 	add	r3, r3, ip
   23384:	e6bf2072 	sxth	r2, r2
   23388:	e6bf3073 	sxth	r3, r3
   2338c:	e206c001 	and	ip, r6, #1
   23390:	0a00008a 	beq	235c0 <_UG_CheckboxUpdate+0x648>
   23394:	e59fe254 	ldr	lr, [pc, #596]	; 235f0 <_UG_CheckboxUpdate+0x678>
   23398:	e35c0000 	cmp	ip, #0
   2339c:	e24e500c 	sub	r5, lr, #12
   233a0:	01a0c00e 	moveq	ip, lr
   233a4:	11a0c005 	movne	ip, r5
   233a8:	e58dc000 	str	ip, [sp]
   233ac:	ebfffaa0 	bl	21e34 <_UG_DrawObjectFrame>
   233b0:	e5d4e000 	ldrb	lr, [r4]
   233b4:	ea000017 	b	23418 <_UG_CheckboxUpdate+0x4a0>
   233b8:	e31c0001 	tst	ip, #1
   233bc:	1a000006 	bne	233dc <_UG_CheckboxUpdate+0x464>
   233c0:	e3c22001 	bic	r2, r2, #1
   233c4:	e5c12001 	strb	r2, [r1, #1]
   233c8:	e2033020 	and	r3, r3, #32
   233cc:	e3530000 	cmp	r3, #0
   233d0:	1afffeff 	bne	22fd4 <_UG_CheckboxUpdate+0x5c>
   233d4:	e28dd030 	add	sp, sp, #48	; 0x30
   233d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   233dc:	e3a0e005 	mov	lr, #5
   233e0:	e3833020 	orr	r3, r3, #32
   233e4:	e3ccc001 	bic	ip, ip, #1
   233e8:	e5c5c000 	strb	ip, [r5]
   233ec:	e5c13000 	strb	r3, [r1]
   233f0:	e5c1e01a 	strb	lr, [r1, #26]
   233f4:	e5d53014 	ldrb	r3, [r5, #20]
   233f8:	e3c22001 	bic	r2, r2, #1
   233fc:	e16f3f13 	clz	r3, r3
   23400:	e1a03e33 	lsr	r3, r3, lr
   23404:	e5c53014 	strb	r3, [r5, #20]
   23408:	e5c12001 	strb	r2, [r1, #1]
   2340c:	eafffef0 	b	22fd4 <_UG_CheckboxUpdate+0x5c>
   23410:	e31c0010 	tst	ip, #16
   23414:	0a000002 	beq	23424 <_UG_CheckboxUpdate+0x4ac>
   23418:	e3cee020 	bic	lr, lr, #32
   2341c:	e5c4e000 	strb	lr, [r4]
   23420:	eaffffeb 	b	233d4 <_UG_CheckboxUpdate+0x45c>
   23424:	e5d6c00a 	ldrb	ip, [r6, #10]
   23428:	e58dc000 	str	ip, [sp]
   2342c:	ebfff46d 	bl	205e8 <UG_FillFrame>
   23430:	e5d4e000 	ldrb	lr, [r4]
   23434:	eafffff7 	b	23418 <_UG_CheckboxUpdate+0x4a0>
   23438:	e5d5c003 	ldrb	ip, [r5, #3]
   2343c:	e58dc000 	str	ip, [sp]
   23440:	ebfff4df 	bl	207c4 <UG_DrawLine>
   23444:	e1d400b8 	ldrh	r0, [r4, #8]
   23448:	e1d410ba 	ldrh	r1, [r4, #10]
   2344c:	e2402001 	sub	r2, r0, #1
   23450:	e2413001 	sub	r3, r1, #1
   23454:	e5d5c003 	ldrb	ip, [r5, #3]
   23458:	e0882002 	add	r2, r8, r2
   2345c:	e0883003 	add	r3, r8, r3
   23460:	e0872002 	add	r2, r7, r2
   23464:	e0800007 	add	r0, r0, r7
   23468:	e0873003 	add	r3, r7, r3
   2346c:	e0811007 	add	r1, r1, r7
   23470:	e6bf2072 	sxth	r2, r2
   23474:	e6bf0070 	sxth	r0, r0
   23478:	e6bf3073 	sxth	r3, r3
   2347c:	e6bf1071 	sxth	r1, r1
   23480:	e58dc000 	str	ip, [sp]
   23484:	ebfff4ce 	bl	207c4 <UG_DrawLine>
   23488:	e1d430ba 	ldrh	r3, [r4, #10]
   2348c:	e1d400b8 	ldrh	r0, [r4, #8]
   23490:	e243c001 	sub	ip, r3, #1
   23494:	e2402002 	sub	r2, r0, #2
   23498:	e088c00c 	add	ip, r8, ip
   2349c:	e5d5e003 	ldrb	lr, [r5, #3]
   234a0:	e2831001 	add	r1, r3, #1
   234a4:	e0882002 	add	r2, r8, r2
   234a8:	e087300c 	add	r3, r7, ip
   234ac:	e0872002 	add	r2, r7, r2
   234b0:	e0800007 	add	r0, r0, r7
   234b4:	e0871001 	add	r1, r7, r1
   234b8:	e6bf2072 	sxth	r2, r2
   234bc:	e6bf0070 	sxth	r0, r0
   234c0:	e6bf3073 	sxth	r3, r3
   234c4:	e6bf1071 	sxth	r1, r1
   234c8:	e58de000 	str	lr, [sp]
   234cc:	ebfff4bc 	bl	207c4 <UG_DrawLine>
   234d0:	e1d430ba 	ldrh	r3, [r4, #10]
   234d4:	e1d420b8 	ldrh	r2, [r4, #8]
   234d8:	e243e001 	sub	lr, r3, #1
   234dc:	e2420001 	sub	r0, r2, #1
   234e0:	e088e00e 	add	lr, r8, lr
   234e4:	e5d5c003 	ldrb	ip, [r5, #3]
   234e8:	e2831001 	add	r1, r3, #1
   234ec:	e0880000 	add	r0, r8, r0
   234f0:	e2822001 	add	r2, r2, #1
   234f4:	e087300e 	add	r3, r7, lr
   234f8:	e0870000 	add	r0, r7, r0
   234fc:	e0872002 	add	r2, r7, r2
   23500:	e0871001 	add	r1, r7, r1
   23504:	e6bf0070 	sxth	r0, r0
   23508:	e6bf2072 	sxth	r2, r2
   2350c:	e6bf3073 	sxth	r3, r3
   23510:	e6bf1071 	sxth	r1, r1
   23514:	e58dc000 	str	ip, [sp]
   23518:	ebfff4a9 	bl	207c4 <UG_DrawLine>
   2351c:	e1d420b8 	ldrh	r2, [r4, #8]
   23520:	e1d410ba 	ldrh	r1, [r4, #10]
   23524:	e2420001 	sub	r0, r2, #1
   23528:	e2413001 	sub	r3, r1, #1
   2352c:	e5d5c003 	ldrb	ip, [r5, #3]
   23530:	e0880000 	add	r0, r8, r0
   23534:	e0883003 	add	r3, r8, r3
   23538:	e0870000 	add	r0, r7, r0
   2353c:	e0872002 	add	r2, r7, r2
   23540:	e0873003 	add	r3, r7, r3
   23544:	e0871001 	add	r1, r7, r1
   23548:	e6bf0070 	sxth	r0, r0
   2354c:	e6bf2072 	sxth	r2, r2
   23550:	e6bf3073 	sxth	r3, r3
   23554:	e6bf1071 	sxth	r1, r1
   23558:	e58dc000 	str	ip, [sp]
   2355c:	ebfff498 	bl	207c4 <UG_DrawLine>
   23560:	e1d420b8 	ldrh	r2, [r4, #8]
   23564:	e1d410ba 	ldrh	r1, [r4, #10]
   23568:	e2420002 	sub	r0, r2, #2
   2356c:	e2413002 	sub	r3, r1, #2
   23570:	e0880000 	add	r0, r8, r0
   23574:	e0883003 	add	r3, r8, r3
   23578:	e5d5c003 	ldrb	ip, [r5, #3]
   2357c:	eaffff68 	b	23324 <_UG_CheckboxUpdate+0x3ac>
   23580:	e5ddc029 	ldrb	ip, [sp, #41]	; 0x29
   23584:	e0423007 	sub	r3, r2, r7
   23588:	e0870000 	add	r0, r7, r0
   2358c:	e04e2007 	sub	r2, lr, r7
   23590:	e6bf2072 	sxth	r2, r2
   23594:	e6bf0070 	sxth	r0, r0
   23598:	e6bf3073 	sxth	r3, r3
   2359c:	e58dc000 	str	ip, [sp]
   235a0:	ebfff410 	bl	205e8 <UG_FillFrame>
   235a4:	e1d410ba 	ldrh	r1, [r4, #10]
   235a8:	e1d400b8 	ldrh	r0, [r4, #8]
   235ac:	e0871001 	add	r1, r7, r1
   235b0:	e1d4e0fc 	ldrsh	lr, [r4, #12]
   235b4:	e1d420fe 	ldrsh	r2, [r4, #14]
   235b8:	e6bf1071 	sxth	r1, r1
   235bc:	eafffed3 	b	23110 <_UG_CheckboxUpdate+0x198>
   235c0:	e35c0000 	cmp	ip, #0
   235c4:	15d5c005 	ldrbne	ip, [r5, #5]
   235c8:	05d5c004 	ldrbeq	ip, [r5, #4]
   235cc:	e58dc000 	str	ip, [sp]
   235d0:	ebfff555 	bl	20b2c <UG_DrawFrame>
   235d4:	e5d4e000 	ldrb	lr, [r4]
   235d8:	eaffff8e 	b	23418 <_UG_CheckboxUpdate+0x4a0>
   235dc:	e5d53000 	ldrb	r3, [r5]
   235e0:	e3130002 	tst	r3, #2
   235e4:	0afffeeb 	beq	23198 <_UG_CheckboxUpdate+0x220>
   235e8:	eafffea4 	b	23080 <_UG_CheckboxUpdate+0x108>
   235ec:	00020002 	.word	0x00020002
   235f0:	0003dd20 	.word	0x0003dd20

000235f4 <_UG_TextboxUpdate>:
   235f4:	e5d13000 	ldrb	r3, [r1]
   235f8:	e3130020 	tst	r3, #32
   235fc:	012fff1e 	bxeq	lr
   23600:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   23604:	e3130008 	tst	r3, #8
   23608:	e24dd034 	sub	sp, sp, #52	; 0x34
   2360c:	e1a05000 	mov	r5, r0
   23610:	e1a04001 	mov	r4, r1
   23614:	0a000005 	beq	23630 <_UG_TextboxUpdate+0x3c>
   23618:	e3130040 	tst	r3, #64	; 0x40
   2361c:	1a00000c 	bne	23654 <_UG_TextboxUpdate+0x60>
   23620:	e3c33020 	bic	r3, r3, #32
   23624:	e5c43000 	strb	r3, [r4]
   23628:	e28dd034 	add	sp, sp, #52	; 0x34
   2362c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   23630:	e5d0c00a 	ldrb	ip, [r0, #10]
   23634:	e1d130fe 	ldrsh	r3, [r1, #14]
   23638:	e1d120fc 	ldrsh	r2, [r1, #12]
   2363c:	e1d400f8 	ldrsh	r0, [r4, #8]
   23640:	e1d110fa 	ldrsh	r1, [r1, #10]
   23644:	e58dc000 	str	ip, [sp]
   23648:	ebfff3e6 	bl	205e8 <UG_FillFrame>
   2364c:	e5d43000 	ldrb	r3, [r4]
   23650:	eafffff2 	b	23620 <_UG_TextboxUpdate+0x2c>
   23654:	e28d1008 	add	r1, sp, #8
   23658:	e594601c 	ldr	r6, [r4, #28]
   2365c:	ebfffd51 	bl	22ba8 <UG_WindowGetArea>
   23660:	e1dd00ba 	ldrh	r0, [sp, #10]
   23664:	e1d431b6 	ldrh	r3, [r4, #22]
   23668:	e1d5c1f2 	ldrsh	ip, [r5, #18]
   2366c:	e0803003 	add	r3, r0, r3
   23670:	e6bf3073 	sxth	r3, r3
   23674:	e15c0003 	cmp	ip, r3
   23678:	e1d4c1b2 	ldrh	ip, [r4, #18]
   2367c:	e1dd10b8 	ldrh	r1, [sp, #8]
   23680:	e1d421b4 	ldrh	r2, [r4, #20]
   23684:	e080000c 	add	r0, r0, ip
   23688:	e1d4c1b0 	ldrh	ip, [r4, #16]
   2368c:	e0812002 	add	r2, r1, r2
   23690:	e6bf2072 	sxth	r2, r2
   23694:	e081100c 	add	r1, r1, ip
   23698:	e1c430be 	strh	r3, [r4, #14]
   2369c:	e1c400ba 	strh	r0, [r4, #10]
   236a0:	e1c420bc 	strh	r2, [r4, #12]
   236a4:	e1c410b8 	strh	r1, [r4, #8]
   236a8:	daffffde 	ble	23628 <_UG_TextboxUpdate+0x34>
   236ac:	e1d531f0 	ldrsh	r3, [r5, #16]
   236b0:	e1530002 	cmp	r3, r2
   236b4:	daffffdb 	ble	23628 <_UG_TextboxUpdate+0x34>
   236b8:	e3a07002 	mov	r7, #2
   236bc:	e5d42018 	ldrb	r2, [r4, #24]
   236c0:	e5d43019 	ldrb	r3, [r4, #25]
   236c4:	e5cd2019 	strb	r2, [sp, #25]
   236c8:	e5cd301a 	strb	r3, [sp, #26]
   236cc:	e28d0018 	add	r0, sp, #24
   236d0:	e5953028 	ldr	r3, [r5, #40]	; 0x28
   236d4:	e58d401c 	str	r4, [sp, #28]
   236d8:	e5cd701b 	strb	r7, [sp, #27]
   236dc:	e5cd7018 	strb	r7, [sp, #24]
   236e0:	e12fff33 	blx	r3
   236e4:	e5d6000a 	ldrb	r0, [r6, #10]
   236e8:	e1d430fe 	ldrsh	r3, [r4, #14]
   236ec:	e5cd0029 	strb	r0, [sp, #41]	; 0x29
   236f0:	e5d6c009 	ldrb	ip, [r6, #9]
   236f4:	e1d420fc 	ldrsh	r2, [r4, #12]
   236f8:	e1d410fa 	ldrsh	r1, [r4, #10]
   236fc:	e58d0000 	str	r0, [sp]
   23700:	e1d400f8 	ldrsh	r0, [r4, #8]
   23704:	e5cdc028 	strb	ip, [sp, #40]	; 0x28
   23708:	ebfff3b6 	bl	205e8 <UG_FillFrame>
   2370c:	e1d400b8 	ldrh	r0, [r4, #8]
   23710:	e1d410ba 	ldrh	r1, [r4, #10]
   23714:	e1d420bc 	ldrh	r2, [r4, #12]
   23718:	e1d430be 	ldrh	r3, [r4, #14]
   2371c:	e1cd02b0 	strh	r0, [sp, #32]
   23720:	e1cd12b2 	strh	r1, [sp, #34]	; 0x22
   23724:	e1cd22b4 	strh	r2, [sp, #36]	; 0x24
   23728:	e1cd32b6 	strh	r3, [sp, #38]	; 0x26
   2372c:	e5d6300b 	ldrb	r3, [r6, #11]
   23730:	e28d0018 	add	r0, sp, #24
   23734:	e5cd302a 	strb	r3, [sp, #42]	; 0x2a
   23738:	e1c620d0 	ldrd	r2, [r6]
   2373c:	e58d301c 	str	r3, [sp, #28]
   23740:	e1d630dc 	ldrsb	r3, [r6, #12]
   23744:	e1cd32bc 	strh	r3, [sp, #44]	; 0x2c
   23748:	e1d630dd 	ldrsb	r3, [r6, #13]
   2374c:	e58d2018 	str	r2, [sp, #24]
   23750:	e1cd32be 	strh	r3, [sp, #46]	; 0x2e
   23754:	ebfff833 	bl	21828 <_UG_PutText>
   23758:	e3a00003 	mov	r0, #3
   2375c:	e5d43000 	ldrb	r3, [r4]
   23760:	e5d41018 	ldrb	r1, [r4, #24]
   23764:	e3c33040 	bic	r3, r3, #64	; 0x40
   23768:	e5d42019 	ldrb	r2, [r4, #25]
   2376c:	e5c43000 	strb	r3, [r4]
   23770:	e5953028 	ldr	r3, [r5, #40]	; 0x28
   23774:	e5cd0013 	strb	r0, [sp, #19]
   23778:	e5cd7010 	strb	r7, [sp, #16]
   2377c:	e58d4014 	str	r4, [sp, #20]
   23780:	e5cd1011 	strb	r1, [sp, #17]
   23784:	e5cd2012 	strb	r2, [sp, #18]
   23788:	e28d0010 	add	r0, sp, #16
   2378c:	e12fff33 	blx	r3
   23790:	e5d43000 	ldrb	r3, [r4]
   23794:	eaffffa1 	b	23620 <_UG_TextboxUpdate+0x2c>

00023798 <_UG_ImageUpdate>:
   23798:	e5d13000 	ldrb	r3, [r1]
   2379c:	e3130020 	tst	r3, #32
   237a0:	012fff1e 	bxeq	lr
   237a4:	e92d4070 	push	{r4, r5, r6, lr}
   237a8:	e3130008 	tst	r3, #8
   237ac:	e24dd010 	sub	sp, sp, #16
   237b0:	e1a05000 	mov	r5, r0
   237b4:	e1a04001 	mov	r4, r1
   237b8:	0a000005 	beq	237d4 <_UG_ImageUpdate+0x3c>
   237bc:	e3130040 	tst	r3, #64	; 0x40
   237c0:	1a00000c 	bne	237f8 <_UG_ImageUpdate+0x60>
   237c4:	e3c33020 	bic	r3, r3, #32
   237c8:	e5c43000 	strb	r3, [r4]
   237cc:	e28dd010 	add	sp, sp, #16
   237d0:	e8bd8070 	pop	{r4, r5, r6, pc}
   237d4:	e5d0c00a 	ldrb	ip, [r0, #10]
   237d8:	e1d130fe 	ldrsh	r3, [r1, #14]
   237dc:	e1d120fc 	ldrsh	r2, [r1, #12]
   237e0:	e1d400f8 	ldrsh	r0, [r4, #8]
   237e4:	e1d110fa 	ldrsh	r1, [r1, #10]
   237e8:	e58dc000 	str	ip, [sp]
   237ec:	ebfff37d 	bl	205e8 <UG_FillFrame>
   237f0:	e5d43000 	ldrb	r3, [r4]
   237f4:	eafffff2 	b	237c4 <_UG_ImageUpdate+0x2c>
   237f8:	e591601c 	ldr	r6, [r1, #28]
   237fc:	e28d1008 	add	r1, sp, #8
   23800:	ebfffce8 	bl	22ba8 <UG_WindowGetArea>
   23804:	e5962000 	ldr	r2, [r6]
   23808:	e1dde0ba 	ldrh	lr, [sp, #10]
   2380c:	e1d411b2 	ldrh	r1, [r4, #18]
   23810:	e1ddc0b8 	ldrh	ip, [sp, #8]
   23814:	e1d401b0 	ldrh	r0, [r4, #16]
   23818:	e1d230b6 	ldrh	r3, [r2, #6]
   2381c:	e081100e 	add	r1, r1, lr
   23820:	e6ff1071 	uxth	r1, r1
   23824:	e080000c 	add	r0, r0, ip
   23828:	e1d2c0b4 	ldrh	ip, [r2, #4]
   2382c:	e1d5e1f2 	ldrsh	lr, [r5, #18]
   23830:	e0813003 	add	r3, r1, r3
   23834:	e6ff0070 	uxth	r0, r0
   23838:	e6bf3073 	sxth	r3, r3
   2383c:	e080c00c 	add	ip, r0, ip
   23840:	e6bf1071 	sxth	r1, r1
   23844:	e6bfc07c 	sxth	ip, ip
   23848:	e6bf0070 	sxth	r0, r0
   2384c:	e15e0003 	cmp	lr, r3
   23850:	e1c410ba 	strh	r1, [r4, #10]
   23854:	e1c430be 	strh	r3, [r4, #14]
   23858:	e1c4c0bc 	strh	ip, [r4, #12]
   2385c:	e1c400b8 	strh	r0, [r4, #8]
   23860:	daffffd9 	ble	237cc <_UG_ImageUpdate+0x34>
   23864:	e1d531f0 	ldrsh	r3, [r5, #16]
   23868:	e153000c 	cmp	r3, ip
   2386c:	daffffd6 	ble	237cc <_UG_ImageUpdate+0x34>
   23870:	e5d63004 	ldrb	r3, [r6, #4]
   23874:	e3130001 	tst	r3, #1
   23878:	1a000002 	bne	23888 <_UG_ImageUpdate+0xf0>
   2387c:	e5d43000 	ldrb	r3, [r4]
   23880:	e20330bf 	and	r3, r3, #191	; 0xbf
   23884:	eaffffce 	b	237c4 <_UG_ImageUpdate+0x2c>
   23888:	ebfffa2e 	bl	22148 <UG_DrawBMP>
   2388c:	eafffffa 	b	2387c <_UG_ImageUpdate+0xe4>

00023890 <UG_WindowGetInnerWidth>:
   23890:	e2501000 	subs	r1, r0, #0
   23894:	0a00000d 	beq	238d0 <UG_WindowGetInnerWidth+0x40>
   23898:	e5d13008 	ldrb	r3, [r1, #8]
   2389c:	e2130002 	ands	r0, r3, #2
   238a0:	012fff1e 	bxeq	lr
   238a4:	e1d121b0 	ldrh	r2, [r1, #16]
   238a8:	e1d100bc 	ldrh	r0, [r1, #12]
   238ac:	e5d13014 	ldrb	r3, [r1, #20]
   238b0:	e0420000 	sub	r0, r2, r0
   238b4:	e3130001 	tst	r3, #1
   238b8:	e6ff0070 	uxth	r0, r0
   238bc:	12400006 	subne	r0, r0, #6
   238c0:	16ff0070 	uxthne	r0, r0
   238c4:	e6bf0070 	sxth	r0, r0
   238c8:	e1c00fc0 	bic	r0, r0, r0, asr #31
   238cc:	e12fff1e 	bx	lr
   238d0:	e1a00001 	mov	r0, r1
   238d4:	e12fff1e 	bx	lr

000238d8 <UG_WindowGetOuterWidth>:
   238d8:	e2501000 	subs	r1, r0, #0
   238dc:	0a000007 	beq	23900 <UG_WindowGetOuterWidth+0x28>
   238e0:	e5d13008 	ldrb	r3, [r1, #8]
   238e4:	e2130002 	ands	r0, r3, #2
   238e8:	11d121b0 	ldrhne	r2, [r1, #16]
   238ec:	11d100bc 	ldrhne	r0, [r1, #12]
   238f0:	10420000 	subne	r0, r2, r0
   238f4:	16bf0070 	sxthne	r0, r0
   238f8:	11c00fc0 	bicne	r0, r0, r0, asr #31
   238fc:	e12fff1e 	bx	lr
   23900:	e1a00001 	mov	r0, r1
   23904:	e12fff1e 	bx	lr

00023908 <UG_WindowGetInnerHeight>:
   23908:	e2501000 	subs	r1, r0, #0
   2390c:	0a000011 	beq	23958 <UG_WindowGetInnerHeight+0x50>
   23910:	e5d13008 	ldrb	r3, [r1, #8]
   23914:	e2130002 	ands	r0, r3, #2
   23918:	012fff1e 	bxeq	lr
   2391c:	e1d100be 	ldrh	r0, [r1, #14]
   23920:	e1d121b2 	ldrh	r2, [r1, #18]
   23924:	e5d13014 	ldrb	r3, [r1, #20]
   23928:	e0422000 	sub	r2, r2, r0
   2392c:	e6ff2072 	uxth	r2, r2
   23930:	e3130001 	tst	r3, #1
   23934:	12422006 	subne	r2, r2, #6
   23938:	16ff2072 	uxthne	r2, r2
   2393c:	e3130002 	tst	r3, #2
   23940:	15d10027 	ldrbne	r0, [r1, #39]	; 0x27
   23944:	10422000 	subne	r2, r2, r0
   23948:	16ff2072 	uxthne	r2, r2
   2394c:	e6bf0072 	sxth	r0, r2
   23950:	e1c00fc0 	bic	r0, r0, r0, asr #31
   23954:	e12fff1e 	bx	lr
   23958:	e1a00001 	mov	r0, r1
   2395c:	e12fff1e 	bx	lr

00023960 <UG_WindowGetOuterHeight>:
   23960:	e2501000 	subs	r1, r0, #0
   23964:	0a000007 	beq	23988 <UG_WindowGetOuterHeight+0x28>
   23968:	e5d13008 	ldrb	r3, [r1, #8]
   2396c:	e2130002 	ands	r0, r3, #2
   23970:	11d121b2 	ldrhne	r2, [r1, #18]
   23974:	11d100be 	ldrhne	r0, [r1, #14]
   23978:	10420000 	subne	r0, r2, r0
   2397c:	16bf0070 	sxthne	r0, r0
   23980:	11c00fc0 	bicne	r0, r0, r0, asr #31
   23984:	e12fff1e 	bx	lr
   23988:	e1a00001 	mov	r0, r1
   2398c:	e12fff1e 	bx	lr

00023990 <_UG_WindowDrawTitle>:
   23990:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23994:	e2504000 	subs	r4, r0, #0
   23998:	e24dd020 	sub	sp, sp, #32
   2399c:	0a000047 	beq	23ac0 <_UG_WindowDrawTitle+0x130>
   239a0:	e5d43008 	ldrb	r3, [r4, #8]
   239a4:	e3130002 	tst	r3, #2
   239a8:	0a000044 	beq	23ac0 <_UG_WindowDrawTitle+0x130>
   239ac:	e1d470fc 	ldrsh	r7, [r4, #12]
   239b0:	e5d43014 	ldrb	r3, [r4, #20]
   239b4:	e6ff2077 	uxth	r2, r7
   239b8:	e1d490fe 	ldrsh	r9, [r4, #14]
   239bc:	e2828003 	add	r8, r2, #3
   239c0:	e3130001 	tst	r3, #1
   239c4:	e6bf8078 	sxth	r8, r8
   239c8:	e6ff5079 	uxth	r5, r9
   239cc:	e1d461f0 	ldrsh	r6, [r4, #16]
   239d0:	1a000031 	bne	23a9c <_UG_WindowDrawTitle+0x10c>
   239d4:	e59f30ec 	ldr	r3, [pc, #236]	; 23ac8 <_UG_WindowDrawTitle+0x138>
   239d8:	e1a02006 	mov	r2, r6
   239dc:	e5933000 	ldr	r3, [r3]
   239e0:	e1a00007 	mov	r0, r7
   239e4:	e5933014 	ldr	r3, [r3, #20]
   239e8:	e1530004 	cmp	r3, r4
   239ec:	05d43023 	ldrbeq	r3, [r4, #35]	; 0x23
   239f0:	15d43025 	ldrbne	r3, [r4, #37]	; 0x25
   239f4:	05d41024 	ldrbeq	r1, [r4, #36]	; 0x24
   239f8:	e5cd3018 	strb	r3, [sp, #24]
   239fc:	e5d43027 	ldrb	r3, [r4, #39]	; 0x27
   23a00:	15d41026 	ldrbne	r1, [r4, #38]	; 0x26
   23a04:	e2433001 	sub	r3, r3, #1
   23a08:	e0853003 	add	r3, r5, r3
   23a0c:	e5cd1019 	strb	r1, [sp, #25]
   23a10:	e6bf3073 	sxth	r3, r3
   23a14:	e58d1000 	str	r1, [sp]
   23a18:	e1a01009 	mov	r1, r9
   23a1c:	ebfff2f1 	bl	205e8 <UG_FillFrame>
   23a20:	e5d43027 	ldrb	r3, [r4, #39]	; 0x27
   23a24:	e594e018 	ldr	lr, [r4, #24]
   23a28:	e5d4c022 	ldrb	ip, [r4, #34]	; 0x22
   23a2c:	e1d412d0 	ldrsb	r1, [r4, #32]
   23a30:	e1d422d1 	ldrsb	r2, [r4, #33]	; 0x21
   23a34:	e594a01c 	ldr	sl, [r4, #28]
   23a38:	e2433001 	sub	r3, r3, #1
   23a3c:	e0853003 	add	r3, r5, r3
   23a40:	e28d0008 	add	r0, sp, #8
   23a44:	e1cd31b6 	strh	r3, [sp, #22]
   23a48:	e58de008 	str	lr, [sp, #8]
   23a4c:	e5cdc01a 	strb	ip, [sp, #26]
   23a50:	e1cd11bc 	strh	r1, [sp, #28]
   23a54:	e1cd21be 	strh	r2, [sp, #30]
   23a58:	e1cd81b0 	strh	r8, [sp, #16]
   23a5c:	e1cd91b2 	strh	r9, [sp, #18]
   23a60:	e1cd61b4 	strh	r6, [sp, #20]
   23a64:	e58da00c 	str	sl, [sp, #12]
   23a68:	ebfff76e 	bl	21828 <_UG_PutText>
   23a6c:	e3a0c013 	mov	ip, #19
   23a70:	e5d43027 	ldrb	r3, [r4, #39]	; 0x27
   23a74:	e1a00007 	mov	r0, r7
   23a78:	e0853003 	add	r3, r5, r3
   23a7c:	e6bf3073 	sxth	r3, r3
   23a80:	e1a02006 	mov	r2, r6
   23a84:	e1a01003 	mov	r1, r3
   23a88:	e58dc000 	str	ip, [sp]
   23a8c:	ebfff34c 	bl	207c4 <UG_DrawLine>
   23a90:	e3a00000 	mov	r0, #0
   23a94:	e28dd020 	add	sp, sp, #32
   23a98:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23a9c:	e2855003 	add	r5, r5, #3
   23aa0:	e6ff5075 	uxth	r5, r5
   23aa4:	e2466003 	sub	r6, r6, #3
   23aa8:	e2822006 	add	r2, r2, #6
   23aac:	e1a07008 	mov	r7, r8
   23ab0:	e6bf6076 	sxth	r6, r6
   23ab4:	e6bf9075 	sxth	r9, r5
   23ab8:	e6bf8072 	sxth	r8, r2
   23abc:	eaffffc4 	b	239d4 <_UG_WindowDrawTitle+0x44>
   23ac0:	e3e00000 	mvn	r0, #0
   23ac4:	eafffff2 	b	23a94 <_UG_WindowDrawTitle+0x104>
   23ac8:	0017af10 	.word	0x0017af10

00023acc <_UG_WindowUpdate>:
   23acc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   23ad0:	e5d03008 	ldrb	r3, [r0, #8]
   23ad4:	e24dd008 	sub	sp, sp, #8
   23ad8:	e3c32020 	bic	r2, r3, #32
   23adc:	e3130008 	tst	r3, #8
   23ae0:	e1d060fc 	ldrsh	r6, [r0, #12]
   23ae4:	e5c02008 	strb	r2, [r0, #8]
   23ae8:	e1d050fe 	ldrsh	r5, [r0, #14]
   23aec:	e1d071f0 	ldrsh	r7, [r0, #16]
   23af0:	e1d081f2 	ldrsh	r8, [r0, #18]
   23af4:	0a00002b 	beq	23ba8 <_UG_WindowUpdate+0xdc>
   23af8:	e5d02014 	ldrb	r2, [r0, #20]
   23afc:	e1a04000 	mov	r4, r0
   23b00:	e3120001 	tst	r2, #1
   23b04:	0a000001 	beq	23b10 <_UG_WindowUpdate+0x44>
   23b08:	e3130040 	tst	r3, #64	; 0x40
   23b0c:	0a000030 	beq	23bd4 <_UG_WindowUpdate+0x108>
   23b10:	e3120002 	tst	r2, #2
   23b14:	0a00000a 	beq	23b44 <_UG_WindowUpdate+0x78>
   23b18:	e1a00004 	mov	r0, r4
   23b1c:	ebffff9b 	bl	23990 <_UG_WindowDrawTitle>
   23b20:	e5d43008 	ldrb	r3, [r4, #8]
   23b24:	e3130040 	tst	r3, #64	; 0x40
   23b28:	13c33040 	bicne	r3, r3, #64	; 0x40
   23b2c:	15c43008 	strbne	r3, [r4, #8]
   23b30:	1a00001a 	bne	23ba0 <_UG_WindowUpdate+0xd4>
   23b34:	e5d43027 	ldrb	r3, [r4, #39]	; 0x27
   23b38:	e2833001 	add	r3, r3, #1
   23b3c:	e0835005 	add	r5, r3, r5
   23b40:	e6bf5075 	sxth	r5, r5
   23b44:	e5d4c00a 	ldrb	ip, [r4, #10]
   23b48:	e1a00006 	mov	r0, r6
   23b4c:	e1a03008 	mov	r3, r8
   23b50:	e1a02007 	mov	r2, r7
   23b54:	e1a01005 	mov	r1, r5
   23b58:	e58dc000 	str	ip, [sp]
   23b5c:	ebfff2a1 	bl	205e8 <UG_FillFrame>
   23b60:	e5d40000 	ldrb	r0, [r4]
   23b64:	e3500000 	cmp	r0, #0
   23b68:	0a00000c 	beq	23ba0 <_UG_WindowUpdate+0xd4>
   23b6c:	e3a03000 	mov	r3, #0
   23b70:	e594c004 	ldr	ip, [r4, #4]
   23b74:	e7dc2283 	ldrb	r2, [ip, r3, lsl #5]
   23b78:	e2021003 	and	r1, r2, #3
   23b7c:	e3510002 	cmp	r1, #2
   23b80:	1a000002 	bne	23b90 <_UG_WindowUpdate+0xc4>
   23b84:	e3120008 	tst	r2, #8
   23b88:	13822060 	orrne	r2, r2, #96	; 0x60
   23b8c:	17cc2283 	strbne	r2, [ip, r3, lsl #5]
   23b90:	e2833001 	add	r3, r3, #1
   23b94:	e6ff2073 	uxth	r2, r3
   23b98:	e1500002 	cmp	r0, r2
   23b9c:	8afffff4 	bhi	23b74 <_UG_WindowUpdate+0xa8>
   23ba0:	e28dd008 	add	sp, sp, #8
   23ba4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   23ba8:	e59f2070 	ldr	r2, [pc, #112]	; 23c20 <_UG_WindowUpdate+0x154>
   23bac:	e1a03008 	mov	r3, r8
   23bb0:	e5921000 	ldr	r1, [r2]
   23bb4:	e1a02007 	mov	r2, r7
   23bb8:	e5d10044 	ldrb	r0, [r1, #68]	; 0x44
   23bbc:	e1a01006 	mov	r1, r6
   23bc0:	e58d0000 	str	r0, [sp]
   23bc4:	e1a00006 	mov	r0, r6
   23bc8:	ebfff286 	bl	205e8 <UG_FillFrame>
   23bcc:	e28dd008 	add	sp, sp, #8
   23bd0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   23bd4:	e59f2048 	ldr	r2, [pc, #72]	; 23c24 <_UG_WindowUpdate+0x158>
   23bd8:	e1a03008 	mov	r3, r8
   23bdc:	e58d2000 	str	r2, [sp]
   23be0:	e1a01005 	mov	r1, r5
   23be4:	e1a02007 	mov	r2, r7
   23be8:	e1a00006 	mov	r0, r6
   23bec:	ebfff890 	bl	21e34 <_UG_DrawObjectFrame>
   23bf0:	e5d42014 	ldrb	r2, [r4, #20]
   23bf4:	e2866003 	add	r6, r6, #3
   23bf8:	e2855003 	add	r5, r5, #3
   23bfc:	e2477003 	sub	r7, r7, #3
   23c00:	e2488003 	sub	r8, r8, #3
   23c04:	e3120002 	tst	r2, #2
   23c08:	e6bf6076 	sxth	r6, r6
   23c0c:	e6bf5075 	sxth	r5, r5
   23c10:	e6bf7077 	sxth	r7, r7
   23c14:	e6bf8078 	sxth	r8, r8
   23c18:	0affffc9 	beq	23b44 <_UG_WindowUpdate+0x78>
   23c1c:	eaffffbd 	b	23b18 <_UG_WindowUpdate+0x4c>
   23c20:	0017af10 	.word	0x0017af10
   23c24:	0003dd2c 	.word	0x0003dd2c

00023c28 <UG_Update>:
   23c28:	e92d4070 	push	{r4, r5, r6, lr}
   23c2c:	e59f5108 	ldr	r5, [pc, #264]	; 23d3c <UG_Update+0x114>
   23c30:	e5953000 	ldr	r3, [r5]
   23c34:	e5d32045 	ldrb	r2, [r3, #69]	; 0x45
   23c38:	e5934010 	ldr	r4, [r3, #16]
   23c3c:	e3120001 	tst	r2, #1
   23c40:	e5930014 	ldr	r0, [r3, #20]
   23c44:	13c22001 	bicne	r2, r2, #1
   23c48:	15c32045 	strbne	r2, [r3, #69]	; 0x45
   23c4c:	e1540000 	cmp	r4, r0
   23c50:	13540000 	cmpne	r4, #0
   23c54:	1a00000e 	bne	23c94 <UG_Update+0x6c>
   23c58:	e3500000 	cmp	r0, #0
   23c5c:	08bd8070 	popeq	{r4, r5, r6, pc}
   23c60:	e1a04000 	mov	r4, r0
   23c64:	e5d43008 	ldrb	r3, [r4, #8]
   23c68:	e3130020 	tst	r3, #32
   23c6c:	1a00002c 	bne	23d24 <UG_Update+0xfc>
   23c70:	e3130008 	tst	r3, #8
   23c74:	08bd8070 	popeq	{r4, r5, r6, pc}
   23c78:	e1a00004 	mov	r0, r4
   23c7c:	ebfff7d4 	bl	21bd4 <_UG_ProcessTouchData>
   23c80:	e1a00004 	mov	r0, r4
   23c84:	ebfff812 	bl	21cd4 <_UG_UpdateObjects>
   23c88:	e1a00004 	mov	r0, r4
   23c8c:	e8bd4070 	pop	{r4, r5, r6, lr}
   23c90:	eafff837 	b	21d74 <_UG_HandleEvents>
   23c94:	e3500000 	cmp	r0, #0
   23c98:	e5830018 	str	r0, [r3, #24]
   23c9c:	e5834014 	str	r4, [r3, #20]
   23ca0:	0a000018 	beq	23d08 <UG_Update+0xe0>
   23ca4:	e5d03014 	ldrb	r3, [r0, #20]
   23ca8:	e3130002 	tst	r3, #2
   23cac:	0a000015 	beq	23d08 <UG_Update+0xe0>
   23cb0:	e5d03008 	ldrb	r3, [r0, #8]
   23cb4:	e3130008 	tst	r3, #8
   23cb8:	0a000012 	beq	23d08 <UG_Update+0xe0>
   23cbc:	e1d020fc 	ldrsh	r2, [r0, #12]
   23cc0:	e1d430fc 	ldrsh	r3, [r4, #12]
   23cc4:	e1520003 	cmp	r2, r3
   23cc8:	1a00000b 	bne	23cfc <UG_Update+0xd4>
   23ccc:	e1d021f0 	ldrsh	r2, [r0, #16]
   23cd0:	e1d431f0 	ldrsh	r3, [r4, #16]
   23cd4:	e1520003 	cmp	r2, r3
   23cd8:	1a000007 	bne	23cfc <UG_Update+0xd4>
   23cdc:	e1d020fe 	ldrsh	r2, [r0, #14]
   23ce0:	e1d430fe 	ldrsh	r3, [r4, #14]
   23ce4:	e1520003 	cmp	r2, r3
   23ce8:	1a000003 	bne	23cfc <UG_Update+0xd4>
   23cec:	e1d021f2 	ldrsh	r2, [r0, #18]
   23cf0:	e1d431f2 	ldrsh	r3, [r4, #18]
   23cf4:	e1520003 	cmp	r2, r3
   23cf8:	0a000002 	beq	23d08 <UG_Update+0xe0>
   23cfc:	ebffff23 	bl	23990 <_UG_WindowDrawTitle>
   23d00:	e5953000 	ldr	r3, [r5]
   23d04:	e5934014 	ldr	r4, [r3, #20]
   23d08:	e5d43008 	ldrb	r3, [r4, #8]
   23d0c:	e3c33040 	bic	r3, r3, #64	; 0x40
   23d10:	e3833028 	orr	r3, r3, #40	; 0x28
   23d14:	e5c43008 	strb	r3, [r4, #8]
   23d18:	e5d43008 	ldrb	r3, [r4, #8]
   23d1c:	e3130020 	tst	r3, #32
   23d20:	0affffd2 	beq	23c70 <UG_Update+0x48>
   23d24:	e1a00004 	mov	r0, r4
   23d28:	ebffff67 	bl	23acc <_UG_WindowUpdate>
   23d2c:	e5d43008 	ldrb	r3, [r4, #8]
   23d30:	e3130008 	tst	r3, #8
   23d34:	08bd8070 	popeq	{r4, r5, r6, pc}
   23d38:	eaffffce 	b	23c78 <UG_Update+0x50>
   23d3c:	0017af10 	.word	0x0017af10

00023d40 <_UG_WindowClear>:
   23d40:	e92d4030 	push	{r4, r5, lr}
   23d44:	e2504000 	subs	r4, r0, #0
   23d48:	e24dd00c 	sub	sp, sp, #12
   23d4c:	0a00001a 	beq	23dbc <_UG_WindowClear+0x7c>
   23d50:	e5d43008 	ldrb	r3, [r4, #8]
   23d54:	e3130008 	tst	r3, #8
   23d58:	1a000002 	bne	23d68 <_UG_WindowClear+0x28>
   23d5c:	e3a00000 	mov	r0, #0
   23d60:	e28dd00c 	add	sp, sp, #12
   23d64:	e8bd8030 	pop	{r4, r5, pc}
   23d68:	e59f5054 	ldr	r5, [pc, #84]	; 23dc4 <_UG_WindowClear+0x84>
   23d6c:	e3c33008 	bic	r3, r3, #8
   23d70:	e5952000 	ldr	r2, [r5]
   23d74:	e5c43008 	strb	r3, [r4, #8]
   23d78:	e5d2c044 	ldrb	ip, [r2, #68]	; 0x44
   23d7c:	e1d431f2 	ldrsh	r3, [r4, #18]
   23d80:	e1d421f0 	ldrsh	r2, [r4, #16]
   23d84:	e1d410fe 	ldrsh	r1, [r4, #14]
   23d88:	e1d400fc 	ldrsh	r0, [r4, #12]
   23d8c:	e58dc000 	str	ip, [sp]
   23d90:	ebfff214 	bl	205e8 <UG_FillFrame>
   23d94:	e5953000 	ldr	r3, [r5]
   23d98:	e5932014 	ldr	r2, [r3, #20]
   23d9c:	e1520004 	cmp	r2, r4
   23da0:	0affffed 	beq	23d5c <_UG_WindowClear+0x1c>
   23da4:	e5d23008 	ldrb	r3, [r2, #8]
   23da8:	e3130008 	tst	r3, #8
   23dac:	13c33040 	bicne	r3, r3, #64	; 0x40
   23db0:	13833020 	orrne	r3, r3, #32
   23db4:	15c23008 	strbne	r3, [r2, #8]
   23db8:	eaffffe7 	b	23d5c <_UG_WindowClear+0x1c>
   23dbc:	e3e00000 	mvn	r0, #0
   23dc0:	eaffffe6 	b	23d60 <_UG_WindowClear+0x20>
   23dc4:	0017af10 	.word	0x0017af10

00023dc8 <UG_WindowHide>:
   23dc8:	e2503000 	subs	r3, r0, #0
   23dcc:	0a00002c 	beq	23e84 <UG_WindowHide+0xbc>
   23dd0:	e92d4010 	push	{r4, lr}
   23dd4:	e59f40b0 	ldr	r4, [pc, #176]	; 23e8c <UG_WindowHide+0xc4>
   23dd8:	e5942000 	ldr	r2, [r4]
   23ddc:	e5921014 	ldr	r1, [r2, #20]
   23de0:	e1510003 	cmp	r1, r3
   23de4:	0a000002 	beq	23df4 <UG_WindowHide+0x2c>
   23de8:	ebffffd4 	bl	23d40 <_UG_WindowClear>
   23dec:	e3a00000 	mov	r0, #0
   23df0:	e8bd8010 	pop	{r4, pc}
   23df4:	e5920018 	ldr	r0, [r2, #24]
   23df8:	e3500000 	cmp	r0, #0
   23dfc:	0a000015 	beq	23e58 <UG_WindowHide+0x90>
   23e00:	e5d0c008 	ldrb	ip, [r0, #8]
   23e04:	e31c0008 	tst	ip, #8
   23e08:	0a000012 	beq	23e58 <UG_WindowHide+0x90>
   23e0c:	e1d0c0fc 	ldrsh	ip, [r0, #12]
   23e10:	e1d310fc 	ldrsh	r1, [r3, #12]
   23e14:	e15c0001 	cmp	ip, r1
   23e18:	ca000007 	bgt	23e3c <UG_WindowHide+0x74>
   23e1c:	e1d0c0fe 	ldrsh	ip, [r0, #14]
   23e20:	e1d310fe 	ldrsh	r1, [r3, #14]
   23e24:	e15c0001 	cmp	ip, r1
   23e28:	ca000003 	bgt	23e3c <UG_WindowHide+0x74>
   23e2c:	e1d0c1f0 	ldrsh	ip, [r0, #16]
   23e30:	e1d311f0 	ldrsh	r1, [r3, #16]
   23e34:	e15c0001 	cmp	ip, r1
   23e38:	aa00000c 	bge	23e70 <UG_WindowHide+0xa8>
   23e3c:	e1a00003 	mov	r0, r3
   23e40:	ebffffbe 	bl	23d40 <_UG_WindowClear>
   23e44:	e5942000 	ldr	r2, [r4]
   23e48:	e5920018 	ldr	r0, [r2, #24]
   23e4c:	e5820010 	str	r0, [r2, #16]
   23e50:	e3a00000 	mov	r0, #0
   23e54:	e8bd8010 	pop	{r4, pc}
   23e58:	e5d13008 	ldrb	r3, [r1, #8]
   23e5c:	e3a00000 	mov	r0, #0
   23e60:	e3c33008 	bic	r3, r3, #8
   23e64:	e3833020 	orr	r3, r3, #32
   23e68:	e5c13008 	strb	r3, [r1, #8]
   23e6c:	e8bd8010 	pop	{r4, pc}
   23e70:	e1d0c1f2 	ldrsh	ip, [r0, #18]
   23e74:	e1d311f2 	ldrsh	r1, [r3, #18]
   23e78:	e15c0001 	cmp	ip, r1
   23e7c:	baffffee 	blt	23e3c <UG_WindowHide+0x74>
   23e80:	eafffff1 	b	23e4c <UG_WindowHide+0x84>
   23e84:	e3e00000 	mvn	r0, #0
   23e88:	e12fff1e 	bx	lr
   23e8c:	0017af10 	.word	0x0017af10

00023e90 <UG_ButtonCreate>:
   23e90:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23e94:	e5d04000 	ldrb	r4, [r0]
   23e98:	e590c004 	ldr	ip, [r0, #4]
   23e9c:	e3540000 	cmp	r4, #0
   23ea0:	e1dd62f0 	ldrsh	r6, [sp, #32]
   23ea4:	e1dd72f4 	ldrsh	r7, [sp, #36]	; 0x24
   23ea8:	e1dd82f8 	ldrsh	r8, [sp, #40]	; 0x28
   23eac:	0a000010 	beq	23ef4 <UG_ButtonCreate+0x64>
   23eb0:	e5dce000 	ldrb	lr, [ip]
   23eb4:	e20e5003 	and	r5, lr, #3
   23eb8:	e3550003 	cmp	r5, #3
   23ebc:	0a00000e 	beq	23efc <UG_ButtonCreate+0x6c>
   23ec0:	e2444001 	sub	r4, r4, #1
   23ec4:	e6ef4074 	uxtb	r4, r4
   23ec8:	e08c4284 	add	r4, ip, r4, lsl #5
   23ecc:	e1a0500c 	mov	r5, ip
   23ed0:	ea000004 	b	23ee8 <UG_ButtonCreate+0x58>
   23ed4:	e5d5e020 	ldrb	lr, [r5, #32]
   23ed8:	e1a0500c 	mov	r5, ip
   23edc:	e20e9003 	and	r9, lr, #3
   23ee0:	e3590003 	cmp	r9, #3
   23ee4:	0a000004 	beq	23efc <UG_ButtonCreate+0x6c>
   23ee8:	e15c0004 	cmp	ip, r4
   23eec:	e28cc020 	add	ip, ip, #32
   23ef0:	1afffff7 	bne	23ed4 <UG_ButtonCreate+0x44>
   23ef4:	e3e00000 	mvn	r0, #0
   23ef8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23efc:	e3a04000 	mov	r4, #0
   23f00:	e3a0a001 	mov	sl, #1
   23f04:	e3a09012 	mov	r9, #18
   23f08:	e5c14000 	strb	r4, [r1]
   23f0c:	e59f4098 	ldr	r4, [pc, #152]	; 23fac <UG_ButtonCreate+0x11c>
   23f10:	e5d0500a 	ldrb	r5, [r0, #10]
   23f14:	e5944000 	ldr	r4, [r4]
   23f18:	e5c15003 	strb	r5, [r1, #3]
   23f1c:	e5d00009 	ldrb	r0, [r0, #9]
   23f20:	e3540000 	cmp	r4, #0
   23f24:	1284402c 	addne	r4, r4, #44	; 0x2c
   23f28:	e5c10002 	strb	r0, [r1, #2]
   23f2c:	e5c10004 	strb	r0, [r1, #4]
   23f30:	e5c15005 	strb	r5, [r1, #5]
   23f34:	e5c1a001 	strb	sl, [r1, #1]
   23f38:	e5c1900c 	strb	r9, [r1, #12]
   23f3c:	15814008 	strne	r4, [r1, #8]
   23f40:	0a000017 	beq	23fa4 <UG_ButtonCreate+0x114>
   23f44:	e3cee001 	bic	lr, lr, #1
   23f48:	e1e0e00e 	mvn	lr, lr
   23f4c:	e20ee035 	and	lr, lr, #53	; 0x35
   23f50:	e3a00000 	mov	r0, #0
   23f54:	e3e04000 	mvn	r4, #0
   23f58:	e1e0e00e 	mvn	lr, lr
   23f5c:	e3a05001 	mov	r5, #1
   23f60:	e59f9048 	ldr	r9, [pc, #72]	; 23fb0 <UG_ButtonCreate+0x120>
   23f64:	e5819010 	str	r9, [r1, #16]
   23f68:	e1cc31b0 	strh	r3, [ip, #16]
   23f6c:	e59f3040 	ldr	r3, [pc, #64]	; 23fb4 <UG_ButtonCreate+0x124>
   23f70:	e5cce000 	strb	lr, [ip]
   23f74:	e1cc61b2 	strh	r6, [ip, #18]
   23f78:	e1cc71b4 	strh	r7, [ip, #20]
   23f7c:	e1cc81b6 	strh	r8, [ip, #22]
   23f80:	e5cc2019 	strb	r2, [ip, #25]
   23f84:	e58c101c 	str	r1, [ip, #28]
   23f88:	e5cc0001 	strb	r0, [ip, #1]
   23f8c:	e5cc001a 	strb	r0, [ip, #26]
   23f90:	e5cc5018 	strb	r5, [ip, #24]
   23f94:	e58c4008 	str	r4, [ip, #8]
   23f98:	e58c400c 	str	r4, [ip, #12]
   23f9c:	e58c3004 	str	r3, [ip, #4]
   23fa0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23fa4:	e5814008 	str	r4, [r1, #8]
   23fa8:	eaffffe5 	b	23f44 <UG_ButtonCreate+0xb4>
   23fac:	0017af10 	.word	0x0017af10
   23fb0:	0003c244 	.word	0x0003c244
   23fb4:	00022c44 	.word	0x00022c44

00023fb8 <UG_ButtonDelete>:
   23fb8:	e1a02001 	mov	r2, r1
   23fbc:	e3a01001 	mov	r1, #1
   23fc0:	eafff6e1 	b	21b4c <_UG_DeleteObject>

00023fc4 <UG_ButtonShow>:
   23fc4:	e5d0c000 	ldrb	ip, [r0]
   23fc8:	e5903004 	ldr	r3, [r0, #4]
   23fcc:	e35c0000 	cmp	ip, #0
   23fd0:	0a000015 	beq	2402c <UG_ButtonShow+0x68>
   23fd4:	e24cc001 	sub	ip, ip, #1
   23fd8:	e6ef207c 	uxtb	r2, ip
   23fdc:	e283c020 	add	ip, r3, #32
   23fe0:	e08cc282 	add	ip, ip, r2, lsl #5
   23fe4:	ea000002 	b	23ff4 <UG_ButtonShow+0x30>
   23fe8:	e2833020 	add	r3, r3, #32
   23fec:	e153000c 	cmp	r3, ip
   23ff0:	0a00000d 	beq	2402c <UG_ButtonShow+0x68>
   23ff4:	e5d32000 	ldrb	r2, [r3]
   23ff8:	e2020003 	and	r0, r2, #3
   23ffc:	e3500002 	cmp	r0, #2
   24000:	1afffff8 	bne	23fe8 <UG_ButtonShow+0x24>
   24004:	e5d30018 	ldrb	r0, [r3, #24]
   24008:	e3500001 	cmp	r0, #1
   2400c:	1afffff5 	bne	23fe8 <UG_ButtonShow+0x24>
   24010:	e5d30019 	ldrb	r0, [r3, #25]
   24014:	e1500001 	cmp	r0, r1
   24018:	1afffff2 	bne	23fe8 <UG_ButtonShow+0x24>
   2401c:	e3822068 	orr	r2, r2, #104	; 0x68
   24020:	e3a00000 	mov	r0, #0
   24024:	e5c32000 	strb	r2, [r3]
   24028:	e12fff1e 	bx	lr
   2402c:	e3e00000 	mvn	r0, #0
   24030:	e12fff1e 	bx	lr

00024034 <UG_ButtonHide>:
   24034:	e5d0c000 	ldrb	ip, [r0]
   24038:	e5903004 	ldr	r3, [r0, #4]
   2403c:	e35c0000 	cmp	ip, #0
   24040:	0a00001e 	beq	240c0 <UG_ButtonHide+0x8c>
   24044:	e24cc001 	sub	ip, ip, #1
   24048:	e6ef207c 	uxtb	r2, ip
   2404c:	e283c020 	add	ip, r3, #32
   24050:	e08cc282 	add	ip, ip, r2, lsl #5
   24054:	ea000002 	b	24064 <UG_ButtonHide+0x30>
   24058:	e2833020 	add	r3, r3, #32
   2405c:	e153000c 	cmp	r3, ip
   24060:	0a000016 	beq	240c0 <UG_ButtonHide+0x8c>
   24064:	e5d32000 	ldrb	r2, [r3]
   24068:	e2020003 	and	r0, r2, #3
   2406c:	e3500002 	cmp	r0, #2
   24070:	1afffff8 	bne	24058 <UG_ButtonHide+0x24>
   24074:	e5d30018 	ldrb	r0, [r3, #24]
   24078:	e3500001 	cmp	r0, #1
   2407c:	1afffff5 	bne	24058 <UG_ButtonHide+0x24>
   24080:	e5d30019 	ldrb	r0, [r3, #25]
   24084:	e1500001 	cmp	r0, r1
   24088:	1afffff2 	bne	24058 <UG_ButtonHide+0x24>
   2408c:	e3a01000 	mov	r1, #0
   24090:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24094:	e593e01c 	ldr	lr, [r3, #28]
   24098:	e3c22008 	bic	r2, r2, #8
   2409c:	e5dec000 	ldrb	ip, [lr]
   240a0:	e3822020 	orr	r2, r2, #32
   240a4:	e3ccc001 	bic	ip, ip, #1
   240a8:	e5cec000 	strb	ip, [lr]
   240ac:	e1a00001 	mov	r0, r1
   240b0:	e5c32000 	strb	r2, [r3]
   240b4:	e5c31001 	strb	r1, [r3, #1]
   240b8:	e5c3101a 	strb	r1, [r3, #26]
   240bc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   240c0:	e3e00000 	mvn	r0, #0
   240c4:	e12fff1e 	bx	lr

000240c8 <UG_ButtonSetForeColor>:
   240c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   240cc:	e5d0e000 	ldrb	lr, [r0]
   240d0:	e5903004 	ldr	r3, [r0, #4]
   240d4:	e35e0000 	cmp	lr, #0
   240d8:	0a000017 	beq	2413c <UG_ButtonSetForeColor+0x74>
   240dc:	e24ee001 	sub	lr, lr, #1
   240e0:	e6ef007e 	uxtb	r0, lr
   240e4:	e283e020 	add	lr, r3, #32
   240e8:	e08ee280 	add	lr, lr, r0, lsl #5
   240ec:	ea000002 	b	240fc <UG_ButtonSetForeColor+0x34>
   240f0:	e2833020 	add	r3, r3, #32
   240f4:	e153000e 	cmp	r3, lr
   240f8:	0a00000f 	beq	2413c <UG_ButtonSetForeColor+0x74>
   240fc:	e5d3c000 	ldrb	ip, [r3]
   24100:	e20c0003 	and	r0, ip, #3
   24104:	e3500002 	cmp	r0, #2
   24108:	1afffff8 	bne	240f0 <UG_ButtonSetForeColor+0x28>
   2410c:	e5d30018 	ldrb	r0, [r3, #24]
   24110:	e3500001 	cmp	r0, #1
   24114:	1afffff5 	bne	240f0 <UG_ButtonSetForeColor+0x28>
   24118:	e5d30019 	ldrb	r0, [r3, #25]
   2411c:	e1500001 	cmp	r0, r1
   24120:	1afffff2 	bne	240f0 <UG_ButtonSetForeColor+0x28>
   24124:	e593101c 	ldr	r1, [r3, #28]
   24128:	e38cc060 	orr	ip, ip, #96	; 0x60
   2412c:	e5c12002 	strb	r2, [r1, #2]
   24130:	e3a00000 	mov	r0, #0
   24134:	e5c3c000 	strb	ip, [r3]
   24138:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   2413c:	e3e00000 	mvn	r0, #0
   24140:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024144 <UG_ButtonSetBackColor>:
   24144:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24148:	e5d0e000 	ldrb	lr, [r0]
   2414c:	e5903004 	ldr	r3, [r0, #4]
   24150:	e35e0000 	cmp	lr, #0
   24154:	0a000017 	beq	241b8 <UG_ButtonSetBackColor+0x74>
   24158:	e24ee001 	sub	lr, lr, #1
   2415c:	e6ef007e 	uxtb	r0, lr
   24160:	e283e020 	add	lr, r3, #32
   24164:	e08ee280 	add	lr, lr, r0, lsl #5
   24168:	ea000002 	b	24178 <UG_ButtonSetBackColor+0x34>
   2416c:	e2833020 	add	r3, r3, #32
   24170:	e153000e 	cmp	r3, lr
   24174:	0a00000f 	beq	241b8 <UG_ButtonSetBackColor+0x74>
   24178:	e5d3c000 	ldrb	ip, [r3]
   2417c:	e20c0003 	and	r0, ip, #3
   24180:	e3500002 	cmp	r0, #2
   24184:	1afffff8 	bne	2416c <UG_ButtonSetBackColor+0x28>
   24188:	e5d30018 	ldrb	r0, [r3, #24]
   2418c:	e3500001 	cmp	r0, #1
   24190:	1afffff5 	bne	2416c <UG_ButtonSetBackColor+0x28>
   24194:	e5d30019 	ldrb	r0, [r3, #25]
   24198:	e1500001 	cmp	r0, r1
   2419c:	1afffff2 	bne	2416c <UG_ButtonSetBackColor+0x28>
   241a0:	e593101c 	ldr	r1, [r3, #28]
   241a4:	e38cc060 	orr	ip, ip, #96	; 0x60
   241a8:	e5c12003 	strb	r2, [r1, #3]
   241ac:	e3a00000 	mov	r0, #0
   241b0:	e5c3c000 	strb	ip, [r3]
   241b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   241b8:	e3e00000 	mvn	r0, #0
   241bc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000241c0 <UG_ButtonSetAlternateForeColor>:
   241c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   241c4:	e5d0e000 	ldrb	lr, [r0]
   241c8:	e5903004 	ldr	r3, [r0, #4]
   241cc:	e35e0000 	cmp	lr, #0
   241d0:	0a000017 	beq	24234 <UG_ButtonSetAlternateForeColor+0x74>
   241d4:	e24ee001 	sub	lr, lr, #1
   241d8:	e6ef007e 	uxtb	r0, lr
   241dc:	e283e020 	add	lr, r3, #32
   241e0:	e08ee280 	add	lr, lr, r0, lsl #5
   241e4:	ea000002 	b	241f4 <UG_ButtonSetAlternateForeColor+0x34>
   241e8:	e2833020 	add	r3, r3, #32
   241ec:	e153000e 	cmp	r3, lr
   241f0:	0a00000f 	beq	24234 <UG_ButtonSetAlternateForeColor+0x74>
   241f4:	e5d3c000 	ldrb	ip, [r3]
   241f8:	e20c0003 	and	r0, ip, #3
   241fc:	e3500002 	cmp	r0, #2
   24200:	1afffff8 	bne	241e8 <UG_ButtonSetAlternateForeColor+0x28>
   24204:	e5d30018 	ldrb	r0, [r3, #24]
   24208:	e3500001 	cmp	r0, #1
   2420c:	1afffff5 	bne	241e8 <UG_ButtonSetAlternateForeColor+0x28>
   24210:	e5d30019 	ldrb	r0, [r3, #25]
   24214:	e1500001 	cmp	r0, r1
   24218:	1afffff2 	bne	241e8 <UG_ButtonSetAlternateForeColor+0x28>
   2421c:	e593101c 	ldr	r1, [r3, #28]
   24220:	e38cc060 	orr	ip, ip, #96	; 0x60
   24224:	e5c12004 	strb	r2, [r1, #4]
   24228:	e3a00000 	mov	r0, #0
   2422c:	e5c3c000 	strb	ip, [r3]
   24230:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24234:	e3e00000 	mvn	r0, #0
   24238:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0002423c <UG_ButtonSetAlternateBackColor>:
   2423c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24240:	e5d0e000 	ldrb	lr, [r0]
   24244:	e5903004 	ldr	r3, [r0, #4]
   24248:	e35e0000 	cmp	lr, #0
   2424c:	0a000017 	beq	242b0 <UG_ButtonSetAlternateBackColor+0x74>
   24250:	e24ee001 	sub	lr, lr, #1
   24254:	e6ef007e 	uxtb	r0, lr
   24258:	e283e020 	add	lr, r3, #32
   2425c:	e08ee280 	add	lr, lr, r0, lsl #5
   24260:	ea000002 	b	24270 <UG_ButtonSetAlternateBackColor+0x34>
   24264:	e2833020 	add	r3, r3, #32
   24268:	e153000e 	cmp	r3, lr
   2426c:	0a00000f 	beq	242b0 <UG_ButtonSetAlternateBackColor+0x74>
   24270:	e5d3c000 	ldrb	ip, [r3]
   24274:	e20c0003 	and	r0, ip, #3
   24278:	e3500002 	cmp	r0, #2
   2427c:	1afffff8 	bne	24264 <UG_ButtonSetAlternateBackColor+0x28>
   24280:	e5d30018 	ldrb	r0, [r3, #24]
   24284:	e3500001 	cmp	r0, #1
   24288:	1afffff5 	bne	24264 <UG_ButtonSetAlternateBackColor+0x28>
   2428c:	e5d30019 	ldrb	r0, [r3, #25]
   24290:	e1500001 	cmp	r0, r1
   24294:	1afffff2 	bne	24264 <UG_ButtonSetAlternateBackColor+0x28>
   24298:	e593101c 	ldr	r1, [r3, #28]
   2429c:	e38cc060 	orr	ip, ip, #96	; 0x60
   242a0:	e5c12005 	strb	r2, [r1, #5]
   242a4:	e3a00000 	mov	r0, #0
   242a8:	e5c3c000 	strb	ip, [r3]
   242ac:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   242b0:	e3e00000 	mvn	r0, #0
   242b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000242b8 <UG_ButtonSetText>:
   242b8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   242bc:	e5d0e000 	ldrb	lr, [r0]
   242c0:	e5903004 	ldr	r3, [r0, #4]
   242c4:	e35e0000 	cmp	lr, #0
   242c8:	0a000017 	beq	2432c <UG_ButtonSetText+0x74>
   242cc:	e24ee001 	sub	lr, lr, #1
   242d0:	e6ef007e 	uxtb	r0, lr
   242d4:	e283e020 	add	lr, r3, #32
   242d8:	e08ee280 	add	lr, lr, r0, lsl #5
   242dc:	ea000002 	b	242ec <UG_ButtonSetText+0x34>
   242e0:	e2833020 	add	r3, r3, #32
   242e4:	e153000e 	cmp	r3, lr
   242e8:	0a00000f 	beq	2432c <UG_ButtonSetText+0x74>
   242ec:	e5d3c000 	ldrb	ip, [r3]
   242f0:	e20c0003 	and	r0, ip, #3
   242f4:	e3500002 	cmp	r0, #2
   242f8:	1afffff8 	bne	242e0 <UG_ButtonSetText+0x28>
   242fc:	e5d30018 	ldrb	r0, [r3, #24]
   24300:	e3500001 	cmp	r0, #1
   24304:	1afffff5 	bne	242e0 <UG_ButtonSetText+0x28>
   24308:	e5d30019 	ldrb	r0, [r3, #25]
   2430c:	e1500001 	cmp	r0, r1
   24310:	1afffff2 	bne	242e0 <UG_ButtonSetText+0x28>
   24314:	e593101c 	ldr	r1, [r3, #28]
   24318:	e38cc060 	orr	ip, ip, #96	; 0x60
   2431c:	e5812010 	str	r2, [r1, #16]
   24320:	e3a00000 	mov	r0, #0
   24324:	e5c3c000 	strb	ip, [r3]
   24328:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   2432c:	e3e00000 	mvn	r0, #0
   24330:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024334 <UG_ButtonSetFont>:
   24334:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24338:	e5d0e000 	ldrb	lr, [r0]
   2433c:	e5903004 	ldr	r3, [r0, #4]
   24340:	e35e0000 	cmp	lr, #0
   24344:	0a000017 	beq	243a8 <UG_ButtonSetFont+0x74>
   24348:	e24ee001 	sub	lr, lr, #1
   2434c:	e6ef007e 	uxtb	r0, lr
   24350:	e283e020 	add	lr, r3, #32
   24354:	e08ee280 	add	lr, lr, r0, lsl #5
   24358:	ea000002 	b	24368 <UG_ButtonSetFont+0x34>
   2435c:	e2833020 	add	r3, r3, #32
   24360:	e153000e 	cmp	r3, lr
   24364:	0a00000f 	beq	243a8 <UG_ButtonSetFont+0x74>
   24368:	e5d3c000 	ldrb	ip, [r3]
   2436c:	e20c0003 	and	r0, ip, #3
   24370:	e3500002 	cmp	r0, #2
   24374:	1afffff8 	bne	2435c <UG_ButtonSetFont+0x28>
   24378:	e5d30018 	ldrb	r0, [r3, #24]
   2437c:	e3500001 	cmp	r0, #1
   24380:	1afffff5 	bne	2435c <UG_ButtonSetFont+0x28>
   24384:	e5d30019 	ldrb	r0, [r3, #25]
   24388:	e1500001 	cmp	r0, r1
   2438c:	1afffff2 	bne	2435c <UG_ButtonSetFont+0x28>
   24390:	e593101c 	ldr	r1, [r3, #28]
   24394:	e38cc060 	orr	ip, ip, #96	; 0x60
   24398:	e5812008 	str	r2, [r1, #8]
   2439c:	e3a00000 	mov	r0, #0
   243a0:	e5c3c000 	strb	ip, [r3]
   243a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   243a8:	e3e00000 	mvn	r0, #0
   243ac:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000243b0 <UG_ButtonSetStyle>:
   243b0:	e92d4010 	push	{r4, lr}
   243b4:	e5d0e000 	ldrb	lr, [r0]
   243b8:	e5903004 	ldr	r3, [r0, #4]
   243bc:	e35e0000 	cmp	lr, #0
   243c0:	0a00002f 	beq	24484 <UG_ButtonSetStyle+0xd4>
   243c4:	e24ee001 	sub	lr, lr, #1
   243c8:	e6ef007e 	uxtb	r0, lr
   243cc:	e283e020 	add	lr, r3, #32
   243d0:	e08ee280 	add	lr, lr, r0, lsl #5
   243d4:	ea000002 	b	243e4 <UG_ButtonSetStyle+0x34>
   243d8:	e2833020 	add	r3, r3, #32
   243dc:	e15e0003 	cmp	lr, r3
   243e0:	0a000027 	beq	24484 <UG_ButtonSetStyle+0xd4>
   243e4:	e5d30000 	ldrb	r0, [r3]
   243e8:	e200c003 	and	ip, r0, #3
   243ec:	e35c0002 	cmp	ip, #2
   243f0:	1afffff8 	bne	243d8 <UG_ButtonSetStyle+0x28>
   243f4:	e5d3c018 	ldrb	ip, [r3, #24]
   243f8:	e35c0001 	cmp	ip, #1
   243fc:	1afffff5 	bne	243d8 <UG_ButtonSetStyle+0x28>
   24400:	e5d3c019 	ldrb	ip, [r3, #25]
   24404:	e15c0001 	cmp	ip, r1
   24408:	1afffff2 	bne	243d8 <UG_ButtonSetStyle+0x28>
   2440c:	e593c01c 	ldr	ip, [r3, #28]
   24410:	e3120008 	tst	r2, #8
   24414:	e5dc1001 	ldrb	r1, [ip, #1]
   24418:	e5dce000 	ldrb	lr, [ip]
   2441c:	e20110e1 	and	r1, r1, #225	; 0xe1
   24420:	e5cc1001 	strb	r1, [ip, #1]
   24424:	13811008 	orrne	r1, r1, #8
   24428:	15cc1001 	strbne	r1, [ip, #1]
   2442c:	e3120010 	tst	r2, #16
   24430:	13811010 	orrne	r1, r1, #16
   24434:	15cc1001 	strbne	r1, [ip, #1]
   24438:	e3120002 	tst	r2, #2
   2443c:	e38e4002 	orr	r4, lr, #2
   24440:	13811002 	orrne	r1, r1, #2
   24444:	e5cc4000 	strb	r4, [ip]
   24448:	15cc1001 	strbne	r1, [ip, #1]
   2444c:	1a000004 	bne	24464 <UG_ButtonSetStyle+0xb4>
   24450:	e3120004 	tst	r2, #4
   24454:	13811004 	orrne	r1, r1, #4
   24458:	03cee002 	biceq	lr, lr, #2
   2445c:	15cc1001 	strbne	r1, [ip, #1]
   24460:	05cce000 	strbeq	lr, [ip]
   24464:	e3120001 	tst	r2, #1
   24468:	13811001 	orrne	r1, r1, #1
   2446c:	03c11001 	biceq	r1, r1, #1
   24470:	e3800060 	orr	r0, r0, #96	; 0x60
   24474:	e5cc1001 	strb	r1, [ip, #1]
   24478:	e5c30000 	strb	r0, [r3]
   2447c:	e3a00000 	mov	r0, #0
   24480:	e8bd8010 	pop	{r4, pc}
   24484:	e3e00000 	mvn	r0, #0
   24488:	e8bd8010 	pop	{r4, pc}

0002448c <UG_ButtonSetHSpace>:
   2448c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24490:	e5d0e000 	ldrb	lr, [r0]
   24494:	e5903004 	ldr	r3, [r0, #4]
   24498:	e35e0000 	cmp	lr, #0
   2449c:	0a000017 	beq	24500 <UG_ButtonSetHSpace+0x74>
   244a0:	e24ee001 	sub	lr, lr, #1
   244a4:	e6ef007e 	uxtb	r0, lr
   244a8:	e283e020 	add	lr, r3, #32
   244ac:	e08ee280 	add	lr, lr, r0, lsl #5
   244b0:	ea000002 	b	244c0 <UG_ButtonSetHSpace+0x34>
   244b4:	e2833020 	add	r3, r3, #32
   244b8:	e153000e 	cmp	r3, lr
   244bc:	0a00000f 	beq	24500 <UG_ButtonSetHSpace+0x74>
   244c0:	e5d3c000 	ldrb	ip, [r3]
   244c4:	e20c0003 	and	r0, ip, #3
   244c8:	e3500002 	cmp	r0, #2
   244cc:	1afffff8 	bne	244b4 <UG_ButtonSetHSpace+0x28>
   244d0:	e5d30018 	ldrb	r0, [r3, #24]
   244d4:	e3500001 	cmp	r0, #1
   244d8:	1afffff5 	bne	244b4 <UG_ButtonSetHSpace+0x28>
   244dc:	e5d30019 	ldrb	r0, [r3, #25]
   244e0:	e1500001 	cmp	r0, r1
   244e4:	1afffff2 	bne	244b4 <UG_ButtonSetHSpace+0x28>
   244e8:	e593101c 	ldr	r1, [r3, #28]
   244ec:	e38cc060 	orr	ip, ip, #96	; 0x60
   244f0:	e5c1200d 	strb	r2, [r1, #13]
   244f4:	e3a00000 	mov	r0, #0
   244f8:	e5c3c000 	strb	ip, [r3]
   244fc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24500:	e3e00000 	mvn	r0, #0
   24504:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024508 <UG_ButtonSetVSpace>:
   24508:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2450c:	e5d0e000 	ldrb	lr, [r0]
   24510:	e5903004 	ldr	r3, [r0, #4]
   24514:	e35e0000 	cmp	lr, #0
   24518:	0a000017 	beq	2457c <UG_ButtonSetVSpace+0x74>
   2451c:	e24ee001 	sub	lr, lr, #1
   24520:	e6ef007e 	uxtb	r0, lr
   24524:	e283e020 	add	lr, r3, #32
   24528:	e08ee280 	add	lr, lr, r0, lsl #5
   2452c:	ea000002 	b	2453c <UG_ButtonSetVSpace+0x34>
   24530:	e2833020 	add	r3, r3, #32
   24534:	e153000e 	cmp	r3, lr
   24538:	0a00000f 	beq	2457c <UG_ButtonSetVSpace+0x74>
   2453c:	e5d3c000 	ldrb	ip, [r3]
   24540:	e20c0003 	and	r0, ip, #3
   24544:	e3500002 	cmp	r0, #2
   24548:	1afffff8 	bne	24530 <UG_ButtonSetVSpace+0x28>
   2454c:	e5d30018 	ldrb	r0, [r3, #24]
   24550:	e3500001 	cmp	r0, #1
   24554:	1afffff5 	bne	24530 <UG_ButtonSetVSpace+0x28>
   24558:	e5d30019 	ldrb	r0, [r3, #25]
   2455c:	e1500001 	cmp	r0, r1
   24560:	1afffff2 	bne	24530 <UG_ButtonSetVSpace+0x28>
   24564:	e593101c 	ldr	r1, [r3, #28]
   24568:	e38cc060 	orr	ip, ip, #96	; 0x60
   2456c:	e5c1200e 	strb	r2, [r1, #14]
   24570:	e3a00000 	mov	r0, #0
   24574:	e5c3c000 	strb	ip, [r3]
   24578:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   2457c:	e3e00000 	mvn	r0, #0
   24580:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024584 <UG_ButtonSetAlignment>:
   24584:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24588:	e5d0e000 	ldrb	lr, [r0]
   2458c:	e5903004 	ldr	r3, [r0, #4]
   24590:	e35e0000 	cmp	lr, #0
   24594:	0a000017 	beq	245f8 <UG_ButtonSetAlignment+0x74>
   24598:	e24ee001 	sub	lr, lr, #1
   2459c:	e6ef007e 	uxtb	r0, lr
   245a0:	e283e020 	add	lr, r3, #32
   245a4:	e08ee280 	add	lr, lr, r0, lsl #5
   245a8:	ea000002 	b	245b8 <UG_ButtonSetAlignment+0x34>
   245ac:	e2833020 	add	r3, r3, #32
   245b0:	e153000e 	cmp	r3, lr
   245b4:	0a00000f 	beq	245f8 <UG_ButtonSetAlignment+0x74>
   245b8:	e5d3c000 	ldrb	ip, [r3]
   245bc:	e20c0003 	and	r0, ip, #3
   245c0:	e3500002 	cmp	r0, #2
   245c4:	1afffff8 	bne	245ac <UG_ButtonSetAlignment+0x28>
   245c8:	e5d30018 	ldrb	r0, [r3, #24]
   245cc:	e3500001 	cmp	r0, #1
   245d0:	1afffff5 	bne	245ac <UG_ButtonSetAlignment+0x28>
   245d4:	e5d30019 	ldrb	r0, [r3, #25]
   245d8:	e1500001 	cmp	r0, r1
   245dc:	1afffff2 	bne	245ac <UG_ButtonSetAlignment+0x28>
   245e0:	e593101c 	ldr	r1, [r3, #28]
   245e4:	e38cc060 	orr	ip, ip, #96	; 0x60
   245e8:	e5c1200c 	strb	r2, [r1, #12]
   245ec:	e3a00000 	mov	r0, #0
   245f0:	e5c3c000 	strb	ip, [r3]
   245f4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   245f8:	e3e00000 	mvn	r0, #0
   245fc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024600 <UG_ButtonGetForeColor>:
   24600:	e5d02000 	ldrb	r2, [r0]
   24604:	e5903004 	ldr	r3, [r0, #4]
   24608:	e3520000 	cmp	r2, #0
   2460c:	0a000014 	beq	24664 <UG_ButtonGetForeColor+0x64>
   24610:	e2422001 	sub	r2, r2, #1
   24614:	e6ef2072 	uxtb	r2, r2
   24618:	e2830020 	add	r0, r3, #32
   2461c:	e0800282 	add	r0, r0, r2, lsl #5
   24620:	ea000002 	b	24630 <UG_ButtonGetForeColor+0x30>
   24624:	e2833020 	add	r3, r3, #32
   24628:	e1530000 	cmp	r3, r0
   2462c:	0a00000c 	beq	24664 <UG_ButtonGetForeColor+0x64>
   24630:	e5d32000 	ldrb	r2, [r3]
   24634:	e2022003 	and	r2, r2, #3
   24638:	e3520002 	cmp	r2, #2
   2463c:	1afffff8 	bne	24624 <UG_ButtonGetForeColor+0x24>
   24640:	e5d32018 	ldrb	r2, [r3, #24]
   24644:	e3520001 	cmp	r2, #1
   24648:	1afffff5 	bne	24624 <UG_ButtonGetForeColor+0x24>
   2464c:	e5d32019 	ldrb	r2, [r3, #25]
   24650:	e1520001 	cmp	r2, r1
   24654:	1afffff2 	bne	24624 <UG_ButtonGetForeColor+0x24>
   24658:	e593301c 	ldr	r3, [r3, #28]
   2465c:	e5d30002 	ldrb	r0, [r3, #2]
   24660:	e12fff1e 	bx	lr
   24664:	e3a00000 	mov	r0, #0
   24668:	e12fff1e 	bx	lr

0002466c <UG_ButtonGetBackColor>:
   2466c:	e5d02000 	ldrb	r2, [r0]
   24670:	e5903004 	ldr	r3, [r0, #4]
   24674:	e3520000 	cmp	r2, #0
   24678:	0a000014 	beq	246d0 <UG_ButtonGetBackColor+0x64>
   2467c:	e2422001 	sub	r2, r2, #1
   24680:	e6ef2072 	uxtb	r2, r2
   24684:	e2830020 	add	r0, r3, #32
   24688:	e0800282 	add	r0, r0, r2, lsl #5
   2468c:	ea000002 	b	2469c <UG_ButtonGetBackColor+0x30>
   24690:	e2833020 	add	r3, r3, #32
   24694:	e1530000 	cmp	r3, r0
   24698:	0a00000c 	beq	246d0 <UG_ButtonGetBackColor+0x64>
   2469c:	e5d32000 	ldrb	r2, [r3]
   246a0:	e2022003 	and	r2, r2, #3
   246a4:	e3520002 	cmp	r2, #2
   246a8:	1afffff8 	bne	24690 <UG_ButtonGetBackColor+0x24>
   246ac:	e5d32018 	ldrb	r2, [r3, #24]
   246b0:	e3520001 	cmp	r2, #1
   246b4:	1afffff5 	bne	24690 <UG_ButtonGetBackColor+0x24>
   246b8:	e5d32019 	ldrb	r2, [r3, #25]
   246bc:	e1520001 	cmp	r2, r1
   246c0:	1afffff2 	bne	24690 <UG_ButtonGetBackColor+0x24>
   246c4:	e593301c 	ldr	r3, [r3, #28]
   246c8:	e5d30003 	ldrb	r0, [r3, #3]
   246cc:	e12fff1e 	bx	lr
   246d0:	e3a00000 	mov	r0, #0
   246d4:	e12fff1e 	bx	lr

000246d8 <UG_ButtonGetAlternateForeColor>:
   246d8:	e5d02000 	ldrb	r2, [r0]
   246dc:	e5903004 	ldr	r3, [r0, #4]
   246e0:	e3520000 	cmp	r2, #0
   246e4:	0a000014 	beq	2473c <UG_ButtonGetAlternateForeColor+0x64>
   246e8:	e2422001 	sub	r2, r2, #1
   246ec:	e6ef2072 	uxtb	r2, r2
   246f0:	e2830020 	add	r0, r3, #32
   246f4:	e0800282 	add	r0, r0, r2, lsl #5
   246f8:	ea000002 	b	24708 <UG_ButtonGetAlternateForeColor+0x30>
   246fc:	e2833020 	add	r3, r3, #32
   24700:	e1530000 	cmp	r3, r0
   24704:	0a00000c 	beq	2473c <UG_ButtonGetAlternateForeColor+0x64>
   24708:	e5d32000 	ldrb	r2, [r3]
   2470c:	e2022003 	and	r2, r2, #3
   24710:	e3520002 	cmp	r2, #2
   24714:	1afffff8 	bne	246fc <UG_ButtonGetAlternateForeColor+0x24>
   24718:	e5d32018 	ldrb	r2, [r3, #24]
   2471c:	e3520001 	cmp	r2, #1
   24720:	1afffff5 	bne	246fc <UG_ButtonGetAlternateForeColor+0x24>
   24724:	e5d32019 	ldrb	r2, [r3, #25]
   24728:	e1520001 	cmp	r2, r1
   2472c:	1afffff2 	bne	246fc <UG_ButtonGetAlternateForeColor+0x24>
   24730:	e593301c 	ldr	r3, [r3, #28]
   24734:	e5d30004 	ldrb	r0, [r3, #4]
   24738:	e12fff1e 	bx	lr
   2473c:	e3a00000 	mov	r0, #0
   24740:	e12fff1e 	bx	lr

00024744 <UG_ButtonGetAlternateBackColor>:
   24744:	e5d02000 	ldrb	r2, [r0]
   24748:	e5903004 	ldr	r3, [r0, #4]
   2474c:	e3520000 	cmp	r2, #0
   24750:	0a000014 	beq	247a8 <UG_ButtonGetAlternateBackColor+0x64>
   24754:	e2422001 	sub	r2, r2, #1
   24758:	e6ef2072 	uxtb	r2, r2
   2475c:	e2830020 	add	r0, r3, #32
   24760:	e0800282 	add	r0, r0, r2, lsl #5
   24764:	ea000002 	b	24774 <UG_ButtonGetAlternateBackColor+0x30>
   24768:	e2833020 	add	r3, r3, #32
   2476c:	e1530000 	cmp	r3, r0
   24770:	0a00000c 	beq	247a8 <UG_ButtonGetAlternateBackColor+0x64>
   24774:	e5d32000 	ldrb	r2, [r3]
   24778:	e2022003 	and	r2, r2, #3
   2477c:	e3520002 	cmp	r2, #2
   24780:	1afffff8 	bne	24768 <UG_ButtonGetAlternateBackColor+0x24>
   24784:	e5d32018 	ldrb	r2, [r3, #24]
   24788:	e3520001 	cmp	r2, #1
   2478c:	1afffff5 	bne	24768 <UG_ButtonGetAlternateBackColor+0x24>
   24790:	e5d32019 	ldrb	r2, [r3, #25]
   24794:	e1520001 	cmp	r2, r1
   24798:	1afffff2 	bne	24768 <UG_ButtonGetAlternateBackColor+0x24>
   2479c:	e593301c 	ldr	r3, [r3, #28]
   247a0:	e5d30005 	ldrb	r0, [r3, #5]
   247a4:	e12fff1e 	bx	lr
   247a8:	e3a00000 	mov	r0, #0
   247ac:	e12fff1e 	bx	lr

000247b0 <UG_ButtonGetText>:
   247b0:	e5d02000 	ldrb	r2, [r0]
   247b4:	e5903004 	ldr	r3, [r0, #4]
   247b8:	e3520000 	cmp	r2, #0
   247bc:	0a000014 	beq	24814 <UG_ButtonGetText+0x64>
   247c0:	e2422001 	sub	r2, r2, #1
   247c4:	e6ef2072 	uxtb	r2, r2
   247c8:	e2830020 	add	r0, r3, #32
   247cc:	e0800282 	add	r0, r0, r2, lsl #5
   247d0:	ea000002 	b	247e0 <UG_ButtonGetText+0x30>
   247d4:	e2833020 	add	r3, r3, #32
   247d8:	e1530000 	cmp	r3, r0
   247dc:	0a00000c 	beq	24814 <UG_ButtonGetText+0x64>
   247e0:	e5d32000 	ldrb	r2, [r3]
   247e4:	e2022003 	and	r2, r2, #3
   247e8:	e3520002 	cmp	r2, #2
   247ec:	1afffff8 	bne	247d4 <UG_ButtonGetText+0x24>
   247f0:	e5d32018 	ldrb	r2, [r3, #24]
   247f4:	e3520001 	cmp	r2, #1
   247f8:	1afffff5 	bne	247d4 <UG_ButtonGetText+0x24>
   247fc:	e5d32019 	ldrb	r2, [r3, #25]
   24800:	e1520001 	cmp	r2, r1
   24804:	1afffff2 	bne	247d4 <UG_ButtonGetText+0x24>
   24808:	e593301c 	ldr	r3, [r3, #28]
   2480c:	e5930010 	ldr	r0, [r3, #16]
   24810:	e12fff1e 	bx	lr
   24814:	e3a00000 	mov	r0, #0
   24818:	e12fff1e 	bx	lr

0002481c <UG_ButtonGetFont>:
   2481c:	e5d02000 	ldrb	r2, [r0]
   24820:	e5903004 	ldr	r3, [r0, #4]
   24824:	e3520000 	cmp	r2, #0
   24828:	0a000014 	beq	24880 <UG_ButtonGetFont+0x64>
   2482c:	e2422001 	sub	r2, r2, #1
   24830:	e6ef2072 	uxtb	r2, r2
   24834:	e2830020 	add	r0, r3, #32
   24838:	e0800282 	add	r0, r0, r2, lsl #5
   2483c:	ea000002 	b	2484c <UG_ButtonGetFont+0x30>
   24840:	e2833020 	add	r3, r3, #32
   24844:	e1530000 	cmp	r3, r0
   24848:	0a00000c 	beq	24880 <UG_ButtonGetFont+0x64>
   2484c:	e5d32000 	ldrb	r2, [r3]
   24850:	e2022003 	and	r2, r2, #3
   24854:	e3520002 	cmp	r2, #2
   24858:	1afffff8 	bne	24840 <UG_ButtonGetFont+0x24>
   2485c:	e5d32018 	ldrb	r2, [r3, #24]
   24860:	e3520001 	cmp	r2, #1
   24864:	1afffff5 	bne	24840 <UG_ButtonGetFont+0x24>
   24868:	e5d32019 	ldrb	r2, [r3, #25]
   2486c:	e1520001 	cmp	r2, r1
   24870:	1afffff2 	bne	24840 <UG_ButtonGetFont+0x24>
   24874:	e593301c 	ldr	r3, [r3, #28]
   24878:	e5930008 	ldr	r0, [r3, #8]
   2487c:	e12fff1e 	bx	lr
   24880:	e3a00000 	mov	r0, #0
   24884:	e12fff1e 	bx	lr

00024888 <UG_ButtonGetStyle>:
   24888:	e1a03000 	mov	r3, r0
   2488c:	e5d00000 	ldrb	r0, [r0]
   24890:	e5933004 	ldr	r3, [r3, #4]
   24894:	e3500000 	cmp	r0, #0
   24898:	012fff1e 	bxeq	lr
   2489c:	e2400001 	sub	r0, r0, #1
   248a0:	e6ef2070 	uxtb	r2, r0
   248a4:	e2830020 	add	r0, r3, #32
   248a8:	e0800282 	add	r0, r0, r2, lsl #5
   248ac:	ea000002 	b	248bc <UG_ButtonGetStyle+0x34>
   248b0:	e2833020 	add	r3, r3, #32
   248b4:	e1530000 	cmp	r3, r0
   248b8:	0a00000c 	beq	248f0 <UG_ButtonGetStyle+0x68>
   248bc:	e5d32000 	ldrb	r2, [r3]
   248c0:	e2022003 	and	r2, r2, #3
   248c4:	e3520002 	cmp	r2, #2
   248c8:	1afffff8 	bne	248b0 <UG_ButtonGetStyle+0x28>
   248cc:	e5d32018 	ldrb	r2, [r3, #24]
   248d0:	e3520001 	cmp	r2, #1
   248d4:	1afffff5 	bne	248b0 <UG_ButtonGetStyle+0x28>
   248d8:	e5d32019 	ldrb	r2, [r3, #25]
   248dc:	e1520001 	cmp	r2, r1
   248e0:	1afffff2 	bne	248b0 <UG_ButtonGetStyle+0x28>
   248e4:	e593301c 	ldr	r3, [r3, #28]
   248e8:	e5d30001 	ldrb	r0, [r3, #1]
   248ec:	e12fff1e 	bx	lr
   248f0:	e3a00000 	mov	r0, #0
   248f4:	e12fff1e 	bx	lr

000248f8 <UG_ButtonGetHSpace>:
   248f8:	e5d02000 	ldrb	r2, [r0]
   248fc:	e5903004 	ldr	r3, [r0, #4]
   24900:	e3520000 	cmp	r2, #0
   24904:	0a000014 	beq	2495c <UG_ButtonGetHSpace+0x64>
   24908:	e2422001 	sub	r2, r2, #1
   2490c:	e6ef2072 	uxtb	r2, r2
   24910:	e2830020 	add	r0, r3, #32
   24914:	e0800282 	add	r0, r0, r2, lsl #5
   24918:	ea000002 	b	24928 <UG_ButtonGetHSpace+0x30>
   2491c:	e2833020 	add	r3, r3, #32
   24920:	e1530000 	cmp	r3, r0
   24924:	0a00000c 	beq	2495c <UG_ButtonGetHSpace+0x64>
   24928:	e5d32000 	ldrb	r2, [r3]
   2492c:	e2022003 	and	r2, r2, #3
   24930:	e3520002 	cmp	r2, #2
   24934:	1afffff8 	bne	2491c <UG_ButtonGetHSpace+0x24>
   24938:	e5d32018 	ldrb	r2, [r3, #24]
   2493c:	e3520001 	cmp	r2, #1
   24940:	1afffff5 	bne	2491c <UG_ButtonGetHSpace+0x24>
   24944:	e5d32019 	ldrb	r2, [r3, #25]
   24948:	e1520001 	cmp	r2, r1
   2494c:	1afffff2 	bne	2491c <UG_ButtonGetHSpace+0x24>
   24950:	e593301c 	ldr	r3, [r3, #28]
   24954:	e1d300dd 	ldrsb	r0, [r3, #13]
   24958:	e12fff1e 	bx	lr
   2495c:	e3a00000 	mov	r0, #0
   24960:	e12fff1e 	bx	lr

00024964 <UG_ButtonGetVSpace>:
   24964:	e5d02000 	ldrb	r2, [r0]
   24968:	e5903004 	ldr	r3, [r0, #4]
   2496c:	e3520000 	cmp	r2, #0
   24970:	0a000014 	beq	249c8 <UG_ButtonGetVSpace+0x64>
   24974:	e2422001 	sub	r2, r2, #1
   24978:	e6ef2072 	uxtb	r2, r2
   2497c:	e2830020 	add	r0, r3, #32
   24980:	e0800282 	add	r0, r0, r2, lsl #5
   24984:	ea000002 	b	24994 <UG_ButtonGetVSpace+0x30>
   24988:	e2833020 	add	r3, r3, #32
   2498c:	e1530000 	cmp	r3, r0
   24990:	0a00000c 	beq	249c8 <UG_ButtonGetVSpace+0x64>
   24994:	e5d32000 	ldrb	r2, [r3]
   24998:	e2022003 	and	r2, r2, #3
   2499c:	e3520002 	cmp	r2, #2
   249a0:	1afffff8 	bne	24988 <UG_ButtonGetVSpace+0x24>
   249a4:	e5d32018 	ldrb	r2, [r3, #24]
   249a8:	e3520001 	cmp	r2, #1
   249ac:	1afffff5 	bne	24988 <UG_ButtonGetVSpace+0x24>
   249b0:	e5d32019 	ldrb	r2, [r3, #25]
   249b4:	e1520001 	cmp	r2, r1
   249b8:	1afffff2 	bne	24988 <UG_ButtonGetVSpace+0x24>
   249bc:	e593301c 	ldr	r3, [r3, #28]
   249c0:	e1d300de 	ldrsb	r0, [r3, #14]
   249c4:	e12fff1e 	bx	lr
   249c8:	e3a00000 	mov	r0, #0
   249cc:	e12fff1e 	bx	lr

000249d0 <UG_ButtonGetAlignment>:
   249d0:	e1a03000 	mov	r3, r0
   249d4:	e5d00000 	ldrb	r0, [r0]
   249d8:	e5933004 	ldr	r3, [r3, #4]
   249dc:	e3500000 	cmp	r0, #0
   249e0:	012fff1e 	bxeq	lr
   249e4:	e2400001 	sub	r0, r0, #1
   249e8:	e6ef2070 	uxtb	r2, r0
   249ec:	e2830020 	add	r0, r3, #32
   249f0:	e0800282 	add	r0, r0, r2, lsl #5
   249f4:	ea000002 	b	24a04 <UG_ButtonGetAlignment+0x34>
   249f8:	e2833020 	add	r3, r3, #32
   249fc:	e1530000 	cmp	r3, r0
   24a00:	0a00000c 	beq	24a38 <UG_ButtonGetAlignment+0x68>
   24a04:	e5d32000 	ldrb	r2, [r3]
   24a08:	e2022003 	and	r2, r2, #3
   24a0c:	e3520002 	cmp	r2, #2
   24a10:	1afffff8 	bne	249f8 <UG_ButtonGetAlignment+0x28>
   24a14:	e5d32018 	ldrb	r2, [r3, #24]
   24a18:	e3520001 	cmp	r2, #1
   24a1c:	1afffff5 	bne	249f8 <UG_ButtonGetAlignment+0x28>
   24a20:	e5d32019 	ldrb	r2, [r3, #25]
   24a24:	e1520001 	cmp	r2, r1
   24a28:	1afffff2 	bne	249f8 <UG_ButtonGetAlignment+0x28>
   24a2c:	e593301c 	ldr	r3, [r3, #28]
   24a30:	e5d3000c 	ldrb	r0, [r3, #12]
   24a34:	e12fff1e 	bx	lr
   24a38:	e3a00000 	mov	r0, #0
   24a3c:	e12fff1e 	bx	lr

00024a40 <UG_CheckboxCreate>:
   24a40:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24a44:	e5d04000 	ldrb	r4, [r0]
   24a48:	e590c004 	ldr	ip, [r0, #4]
   24a4c:	e3540000 	cmp	r4, #0
   24a50:	e1dd62f0 	ldrsh	r6, [sp, #32]
   24a54:	e1dd72f4 	ldrsh	r7, [sp, #36]	; 0x24
   24a58:	e1dd82f8 	ldrsh	r8, [sp, #40]	; 0x28
   24a5c:	0a000010 	beq	24aa4 <UG_CheckboxCreate+0x64>
   24a60:	e5dce000 	ldrb	lr, [ip]
   24a64:	e20e5003 	and	r5, lr, #3
   24a68:	e3550003 	cmp	r5, #3
   24a6c:	0a00000e 	beq	24aac <UG_CheckboxCreate+0x6c>
   24a70:	e2444001 	sub	r4, r4, #1
   24a74:	e6ef4074 	uxtb	r4, r4
   24a78:	e08c4284 	add	r4, ip, r4, lsl #5
   24a7c:	e1a0500c 	mov	r5, ip
   24a80:	ea000004 	b	24a98 <UG_CheckboxCreate+0x58>
   24a84:	e5d5e020 	ldrb	lr, [r5, #32]
   24a88:	e1a0500c 	mov	r5, ip
   24a8c:	e20e9003 	and	r9, lr, #3
   24a90:	e3590003 	cmp	r9, #3
   24a94:	0a000004 	beq	24aac <UG_CheckboxCreate+0x6c>
   24a98:	e15c0004 	cmp	ip, r4
   24a9c:	e28cc020 	add	ip, ip, #32
   24aa0:	1afffff7 	bne	24a84 <UG_CheckboxCreate+0x44>
   24aa4:	e3e00000 	mvn	r0, #0
   24aa8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24aac:	e3a04000 	mov	r4, #0
   24ab0:	e3a0a001 	mov	sl, #1
   24ab4:	e3a09009 	mov	r9, #9
   24ab8:	e5c14000 	strb	r4, [r1]
   24abc:	e59f409c 	ldr	r4, [pc, #156]	; 24b60 <UG_CheckboxCreate+0x120>
   24ac0:	e5d0500a 	ldrb	r5, [r0, #10]
   24ac4:	e5944000 	ldr	r4, [r4]
   24ac8:	e5c15003 	strb	r5, [r1, #3]
   24acc:	e5d00009 	ldrb	r0, [r0, #9]
   24ad0:	e3540000 	cmp	r4, #0
   24ad4:	1284402c 	addne	r4, r4, #44	; 0x2c
   24ad8:	e5c10002 	strb	r0, [r1, #2]
   24adc:	e5c10004 	strb	r0, [r1, #4]
   24ae0:	e5c15005 	strb	r5, [r1, #5]
   24ae4:	e5c1a001 	strb	sl, [r1, #1]
   24ae8:	e5c1900c 	strb	r9, [r1, #12]
   24aec:	15814008 	strne	r4, [r1, #8]
   24af0:	0a000018 	beq	24b58 <UG_CheckboxCreate+0x118>
   24af4:	e3cee001 	bic	lr, lr, #1
   24af8:	e1e0e00e 	mvn	lr, lr
   24afc:	e20ee035 	and	lr, lr, #53	; 0x35
   24b00:	e3a00000 	mov	r0, #0
   24b04:	e1e0e00e 	mvn	lr, lr
   24b08:	e3e04000 	mvn	r4, #0
   24b0c:	e3a05004 	mov	r5, #4
   24b10:	e59f904c 	ldr	r9, [pc, #76]	; 24b64 <UG_CheckboxCreate+0x124>
   24b14:	e5c10014 	strb	r0, [r1, #20]
   24b18:	e5819010 	str	r9, [r1, #16]
   24b1c:	e5cce000 	strb	lr, [ip]
   24b20:	e59fe040 	ldr	lr, [pc, #64]	; 24b68 <UG_CheckboxCreate+0x128>
   24b24:	e5cc0001 	strb	r0, [ip, #1]
   24b28:	e5cc001a 	strb	r0, [ip, #26]
   24b2c:	e1cc31b0 	strh	r3, [ip, #16]
   24b30:	e1cc61b2 	strh	r6, [ip, #18]
   24b34:	e1cc71b4 	strh	r7, [ip, #20]
   24b38:	e1cc81b6 	strh	r8, [ip, #22]
   24b3c:	e5cc2019 	strb	r2, [ip, #25]
   24b40:	e58c101c 	str	r1, [ip, #28]
   24b44:	e5cc5018 	strb	r5, [ip, #24]
   24b48:	e58c4008 	str	r4, [ip, #8]
   24b4c:	e58c400c 	str	r4, [ip, #12]
   24b50:	e58ce004 	str	lr, [ip, #4]
   24b54:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24b58:	e5814008 	str	r4, [r1, #8]
   24b5c:	eaffffe4 	b	24af4 <UG_CheckboxCreate+0xb4>
   24b60:	0017af10 	.word	0x0017af10
   24b64:	0003c244 	.word	0x0003c244
   24b68:	00022f78 	.word	0x00022f78

00024b6c <UG_CheckboxDelete>:
   24b6c:	e1a02001 	mov	r2, r1
   24b70:	e3a01004 	mov	r1, #4
   24b74:	eafff3f4 	b	21b4c <_UG_DeleteObject>

00024b78 <UG_CheckboxShow>:
   24b78:	e5d0c000 	ldrb	ip, [r0]
   24b7c:	e5903004 	ldr	r3, [r0, #4]
   24b80:	e35c0000 	cmp	ip, #0
   24b84:	0a000015 	beq	24be0 <UG_CheckboxShow+0x68>
   24b88:	e24cc001 	sub	ip, ip, #1
   24b8c:	e6ef207c 	uxtb	r2, ip
   24b90:	e283c020 	add	ip, r3, #32
   24b94:	e08cc282 	add	ip, ip, r2, lsl #5
   24b98:	ea000002 	b	24ba8 <UG_CheckboxShow+0x30>
   24b9c:	e2833020 	add	r3, r3, #32
   24ba0:	e153000c 	cmp	r3, ip
   24ba4:	0a00000d 	beq	24be0 <UG_CheckboxShow+0x68>
   24ba8:	e5d32000 	ldrb	r2, [r3]
   24bac:	e2020003 	and	r0, r2, #3
   24bb0:	e3500002 	cmp	r0, #2
   24bb4:	1afffff8 	bne	24b9c <UG_CheckboxShow+0x24>
   24bb8:	e5d30018 	ldrb	r0, [r3, #24]
   24bbc:	e3500004 	cmp	r0, #4
   24bc0:	1afffff5 	bne	24b9c <UG_CheckboxShow+0x24>
   24bc4:	e5d30019 	ldrb	r0, [r3, #25]
   24bc8:	e1500001 	cmp	r0, r1
   24bcc:	1afffff2 	bne	24b9c <UG_CheckboxShow+0x24>
   24bd0:	e3822068 	orr	r2, r2, #104	; 0x68
   24bd4:	e3a00000 	mov	r0, #0
   24bd8:	e5c32000 	strb	r2, [r3]
   24bdc:	e12fff1e 	bx	lr
   24be0:	e3e00000 	mvn	r0, #0
   24be4:	e12fff1e 	bx	lr

00024be8 <UG_CheckboxHide>:
   24be8:	e5d0c000 	ldrb	ip, [r0]
   24bec:	e5903004 	ldr	r3, [r0, #4]
   24bf0:	e35c0000 	cmp	ip, #0
   24bf4:	0a00001e 	beq	24c74 <UG_CheckboxHide+0x8c>
   24bf8:	e24cc001 	sub	ip, ip, #1
   24bfc:	e6ef207c 	uxtb	r2, ip
   24c00:	e283c020 	add	ip, r3, #32
   24c04:	e08cc282 	add	ip, ip, r2, lsl #5
   24c08:	ea000002 	b	24c18 <UG_CheckboxHide+0x30>
   24c0c:	e2833020 	add	r3, r3, #32
   24c10:	e153000c 	cmp	r3, ip
   24c14:	0a000016 	beq	24c74 <UG_CheckboxHide+0x8c>
   24c18:	e5d32000 	ldrb	r2, [r3]
   24c1c:	e2020003 	and	r0, r2, #3
   24c20:	e3500002 	cmp	r0, #2
   24c24:	1afffff8 	bne	24c0c <UG_CheckboxHide+0x24>
   24c28:	e5d30018 	ldrb	r0, [r3, #24]
   24c2c:	e3500004 	cmp	r0, #4
   24c30:	1afffff5 	bne	24c0c <UG_CheckboxHide+0x24>
   24c34:	e5d30019 	ldrb	r0, [r3, #25]
   24c38:	e1500001 	cmp	r0, r1
   24c3c:	1afffff2 	bne	24c0c <UG_CheckboxHide+0x24>
   24c40:	e3a01000 	mov	r1, #0
   24c44:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24c48:	e593e01c 	ldr	lr, [r3, #28]
   24c4c:	e3c22008 	bic	r2, r2, #8
   24c50:	e5dec000 	ldrb	ip, [lr]
   24c54:	e3822020 	orr	r2, r2, #32
   24c58:	e3ccc001 	bic	ip, ip, #1
   24c5c:	e5cec000 	strb	ip, [lr]
   24c60:	e1a00001 	mov	r0, r1
   24c64:	e5c32000 	strb	r2, [r3]
   24c68:	e5c31001 	strb	r1, [r3, #1]
   24c6c:	e5c3101a 	strb	r1, [r3, #26]
   24c70:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24c74:	e3e00000 	mvn	r0, #0
   24c78:	e12fff1e 	bx	lr

00024c7c <UG_CheckboxSetCheched>:
   24c7c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24c80:	e5d0e000 	ldrb	lr, [r0]
   24c84:	e5903004 	ldr	r3, [r0, #4]
   24c88:	e35e0000 	cmp	lr, #0
   24c8c:	0a000017 	beq	24cf0 <UG_CheckboxSetCheched+0x74>
   24c90:	e24ee001 	sub	lr, lr, #1
   24c94:	e6ef007e 	uxtb	r0, lr
   24c98:	e283e020 	add	lr, r3, #32
   24c9c:	e08ee280 	add	lr, lr, r0, lsl #5
   24ca0:	ea000002 	b	24cb0 <UG_CheckboxSetCheched+0x34>
   24ca4:	e2833020 	add	r3, r3, #32
   24ca8:	e153000e 	cmp	r3, lr
   24cac:	0a00000f 	beq	24cf0 <UG_CheckboxSetCheched+0x74>
   24cb0:	e5d3c000 	ldrb	ip, [r3]
   24cb4:	e20c0003 	and	r0, ip, #3
   24cb8:	e3500002 	cmp	r0, #2
   24cbc:	1afffff8 	bne	24ca4 <UG_CheckboxSetCheched+0x28>
   24cc0:	e5d30018 	ldrb	r0, [r3, #24]
   24cc4:	e3500004 	cmp	r0, #4
   24cc8:	1afffff5 	bne	24ca4 <UG_CheckboxSetCheched+0x28>
   24ccc:	e5d30019 	ldrb	r0, [r3, #25]
   24cd0:	e1500001 	cmp	r0, r1
   24cd4:	1afffff2 	bne	24ca4 <UG_CheckboxSetCheched+0x28>
   24cd8:	e593101c 	ldr	r1, [r3, #28]
   24cdc:	e38cc060 	orr	ip, ip, #96	; 0x60
   24ce0:	e5c12014 	strb	r2, [r1, #20]
   24ce4:	e3a00000 	mov	r0, #0
   24ce8:	e5c3c000 	strb	ip, [r3]
   24cec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24cf0:	e3e00000 	mvn	r0, #0
   24cf4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024cf8 <UG_CheckboxSetForeColor>:
   24cf8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24cfc:	e5d0e000 	ldrb	lr, [r0]
   24d00:	e5903004 	ldr	r3, [r0, #4]
   24d04:	e35e0000 	cmp	lr, #0
   24d08:	0a000017 	beq	24d6c <UG_CheckboxSetForeColor+0x74>
   24d0c:	e24ee001 	sub	lr, lr, #1
   24d10:	e6ef007e 	uxtb	r0, lr
   24d14:	e283e020 	add	lr, r3, #32
   24d18:	e08ee280 	add	lr, lr, r0, lsl #5
   24d1c:	ea000002 	b	24d2c <UG_CheckboxSetForeColor+0x34>
   24d20:	e2833020 	add	r3, r3, #32
   24d24:	e153000e 	cmp	r3, lr
   24d28:	0a00000f 	beq	24d6c <UG_CheckboxSetForeColor+0x74>
   24d2c:	e5d3c000 	ldrb	ip, [r3]
   24d30:	e20c0003 	and	r0, ip, #3
   24d34:	e3500002 	cmp	r0, #2
   24d38:	1afffff8 	bne	24d20 <UG_CheckboxSetForeColor+0x28>
   24d3c:	e5d30018 	ldrb	r0, [r3, #24]
   24d40:	e3500004 	cmp	r0, #4
   24d44:	1afffff5 	bne	24d20 <UG_CheckboxSetForeColor+0x28>
   24d48:	e5d30019 	ldrb	r0, [r3, #25]
   24d4c:	e1500001 	cmp	r0, r1
   24d50:	1afffff2 	bne	24d20 <UG_CheckboxSetForeColor+0x28>
   24d54:	e593101c 	ldr	r1, [r3, #28]
   24d58:	e38cc060 	orr	ip, ip, #96	; 0x60
   24d5c:	e5c12002 	strb	r2, [r1, #2]
   24d60:	e3a00000 	mov	r0, #0
   24d64:	e5c3c000 	strb	ip, [r3]
   24d68:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24d6c:	e3e00000 	mvn	r0, #0
   24d70:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024d74 <UG_CheckboxSetBackColor>:
   24d74:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24d78:	e5d0e000 	ldrb	lr, [r0]
   24d7c:	e5903004 	ldr	r3, [r0, #4]
   24d80:	e35e0000 	cmp	lr, #0
   24d84:	0a000017 	beq	24de8 <UG_CheckboxSetBackColor+0x74>
   24d88:	e24ee001 	sub	lr, lr, #1
   24d8c:	e6ef007e 	uxtb	r0, lr
   24d90:	e283e020 	add	lr, r3, #32
   24d94:	e08ee280 	add	lr, lr, r0, lsl #5
   24d98:	ea000002 	b	24da8 <UG_CheckboxSetBackColor+0x34>
   24d9c:	e2833020 	add	r3, r3, #32
   24da0:	e153000e 	cmp	r3, lr
   24da4:	0a00000f 	beq	24de8 <UG_CheckboxSetBackColor+0x74>
   24da8:	e5d3c000 	ldrb	ip, [r3]
   24dac:	e20c0003 	and	r0, ip, #3
   24db0:	e3500002 	cmp	r0, #2
   24db4:	1afffff8 	bne	24d9c <UG_CheckboxSetBackColor+0x28>
   24db8:	e5d30018 	ldrb	r0, [r3, #24]
   24dbc:	e3500004 	cmp	r0, #4
   24dc0:	1afffff5 	bne	24d9c <UG_CheckboxSetBackColor+0x28>
   24dc4:	e5d30019 	ldrb	r0, [r3, #25]
   24dc8:	e1500001 	cmp	r0, r1
   24dcc:	1afffff2 	bne	24d9c <UG_CheckboxSetBackColor+0x28>
   24dd0:	e593101c 	ldr	r1, [r3, #28]
   24dd4:	e38cc060 	orr	ip, ip, #96	; 0x60
   24dd8:	e5c12003 	strb	r2, [r1, #3]
   24ddc:	e3a00000 	mov	r0, #0
   24de0:	e5c3c000 	strb	ip, [r3]
   24de4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24de8:	e3e00000 	mvn	r0, #0
   24dec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024df0 <UG_CheckboxSetAlternateForeColor>:
   24df0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24df4:	e5d0e000 	ldrb	lr, [r0]
   24df8:	e5903004 	ldr	r3, [r0, #4]
   24dfc:	e35e0000 	cmp	lr, #0
   24e00:	0a000017 	beq	24e64 <UG_CheckboxSetAlternateForeColor+0x74>
   24e04:	e24ee001 	sub	lr, lr, #1
   24e08:	e6ef007e 	uxtb	r0, lr
   24e0c:	e283e020 	add	lr, r3, #32
   24e10:	e08ee280 	add	lr, lr, r0, lsl #5
   24e14:	ea000002 	b	24e24 <UG_CheckboxSetAlternateForeColor+0x34>
   24e18:	e2833020 	add	r3, r3, #32
   24e1c:	e153000e 	cmp	r3, lr
   24e20:	0a00000f 	beq	24e64 <UG_CheckboxSetAlternateForeColor+0x74>
   24e24:	e5d3c000 	ldrb	ip, [r3]
   24e28:	e20c0003 	and	r0, ip, #3
   24e2c:	e3500002 	cmp	r0, #2
   24e30:	1afffff8 	bne	24e18 <UG_CheckboxSetAlternateForeColor+0x28>
   24e34:	e5d30018 	ldrb	r0, [r3, #24]
   24e38:	e3500004 	cmp	r0, #4
   24e3c:	1afffff5 	bne	24e18 <UG_CheckboxSetAlternateForeColor+0x28>
   24e40:	e5d30019 	ldrb	r0, [r3, #25]
   24e44:	e1500001 	cmp	r0, r1
   24e48:	1afffff2 	bne	24e18 <UG_CheckboxSetAlternateForeColor+0x28>
   24e4c:	e593101c 	ldr	r1, [r3, #28]
   24e50:	e38cc060 	orr	ip, ip, #96	; 0x60
   24e54:	e5c12004 	strb	r2, [r1, #4]
   24e58:	e3a00000 	mov	r0, #0
   24e5c:	e5c3c000 	strb	ip, [r3]
   24e60:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24e64:	e3e00000 	mvn	r0, #0
   24e68:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024e6c <UG_CheckboxSetAlternateBackColor>:
   24e6c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24e70:	e5d0e000 	ldrb	lr, [r0]
   24e74:	e5903004 	ldr	r3, [r0, #4]
   24e78:	e35e0000 	cmp	lr, #0
   24e7c:	0a000017 	beq	24ee0 <UG_CheckboxSetAlternateBackColor+0x74>
   24e80:	e24ee001 	sub	lr, lr, #1
   24e84:	e6ef007e 	uxtb	r0, lr
   24e88:	e283e020 	add	lr, r3, #32
   24e8c:	e08ee280 	add	lr, lr, r0, lsl #5
   24e90:	ea000002 	b	24ea0 <UG_CheckboxSetAlternateBackColor+0x34>
   24e94:	e2833020 	add	r3, r3, #32
   24e98:	e153000e 	cmp	r3, lr
   24e9c:	0a00000f 	beq	24ee0 <UG_CheckboxSetAlternateBackColor+0x74>
   24ea0:	e5d3c000 	ldrb	ip, [r3]
   24ea4:	e20c0003 	and	r0, ip, #3
   24ea8:	e3500002 	cmp	r0, #2
   24eac:	1afffff8 	bne	24e94 <UG_CheckboxSetAlternateBackColor+0x28>
   24eb0:	e5d30018 	ldrb	r0, [r3, #24]
   24eb4:	e3500004 	cmp	r0, #4
   24eb8:	1afffff5 	bne	24e94 <UG_CheckboxSetAlternateBackColor+0x28>
   24ebc:	e5d30019 	ldrb	r0, [r3, #25]
   24ec0:	e1500001 	cmp	r0, r1
   24ec4:	1afffff2 	bne	24e94 <UG_CheckboxSetAlternateBackColor+0x28>
   24ec8:	e593101c 	ldr	r1, [r3, #28]
   24ecc:	e38cc060 	orr	ip, ip, #96	; 0x60
   24ed0:	e5c12005 	strb	r2, [r1, #5]
   24ed4:	e3a00000 	mov	r0, #0
   24ed8:	e5c3c000 	strb	ip, [r3]
   24edc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24ee0:	e3e00000 	mvn	r0, #0
   24ee4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024ee8 <UG_CheckboxSetText>:
   24ee8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24eec:	e5d0e000 	ldrb	lr, [r0]
   24ef0:	e5903004 	ldr	r3, [r0, #4]
   24ef4:	e35e0000 	cmp	lr, #0
   24ef8:	0a000017 	beq	24f5c <UG_CheckboxSetText+0x74>
   24efc:	e24ee001 	sub	lr, lr, #1
   24f00:	e6ef007e 	uxtb	r0, lr
   24f04:	e283e020 	add	lr, r3, #32
   24f08:	e08ee280 	add	lr, lr, r0, lsl #5
   24f0c:	ea000002 	b	24f1c <UG_CheckboxSetText+0x34>
   24f10:	e2833020 	add	r3, r3, #32
   24f14:	e153000e 	cmp	r3, lr
   24f18:	0a00000f 	beq	24f5c <UG_CheckboxSetText+0x74>
   24f1c:	e5d3c000 	ldrb	ip, [r3]
   24f20:	e20c0003 	and	r0, ip, #3
   24f24:	e3500002 	cmp	r0, #2
   24f28:	1afffff8 	bne	24f10 <UG_CheckboxSetText+0x28>
   24f2c:	e5d30018 	ldrb	r0, [r3, #24]
   24f30:	e3500004 	cmp	r0, #4
   24f34:	1afffff5 	bne	24f10 <UG_CheckboxSetText+0x28>
   24f38:	e5d30019 	ldrb	r0, [r3, #25]
   24f3c:	e1500001 	cmp	r0, r1
   24f40:	1afffff2 	bne	24f10 <UG_CheckboxSetText+0x28>
   24f44:	e593101c 	ldr	r1, [r3, #28]
   24f48:	e38cc060 	orr	ip, ip, #96	; 0x60
   24f4c:	e5812010 	str	r2, [r1, #16]
   24f50:	e3a00000 	mov	r0, #0
   24f54:	e5c3c000 	strb	ip, [r3]
   24f58:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24f5c:	e3e00000 	mvn	r0, #0
   24f60:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024f64 <UG_CheckboxSetFont>:
   24f64:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   24f68:	e5d0e000 	ldrb	lr, [r0]
   24f6c:	e5903004 	ldr	r3, [r0, #4]
   24f70:	e35e0000 	cmp	lr, #0
   24f74:	0a000017 	beq	24fd8 <UG_CheckboxSetFont+0x74>
   24f78:	e24ee001 	sub	lr, lr, #1
   24f7c:	e6ef007e 	uxtb	r0, lr
   24f80:	e283e020 	add	lr, r3, #32
   24f84:	e08ee280 	add	lr, lr, r0, lsl #5
   24f88:	ea000002 	b	24f98 <UG_CheckboxSetFont+0x34>
   24f8c:	e2833020 	add	r3, r3, #32
   24f90:	e153000e 	cmp	r3, lr
   24f94:	0a00000f 	beq	24fd8 <UG_CheckboxSetFont+0x74>
   24f98:	e5d3c000 	ldrb	ip, [r3]
   24f9c:	e20c0003 	and	r0, ip, #3
   24fa0:	e3500002 	cmp	r0, #2
   24fa4:	1afffff8 	bne	24f8c <UG_CheckboxSetFont+0x28>
   24fa8:	e5d30018 	ldrb	r0, [r3, #24]
   24fac:	e3500004 	cmp	r0, #4
   24fb0:	1afffff5 	bne	24f8c <UG_CheckboxSetFont+0x28>
   24fb4:	e5d30019 	ldrb	r0, [r3, #25]
   24fb8:	e1500001 	cmp	r0, r1
   24fbc:	1afffff2 	bne	24f8c <UG_CheckboxSetFont+0x28>
   24fc0:	e593101c 	ldr	r1, [r3, #28]
   24fc4:	e38cc060 	orr	ip, ip, #96	; 0x60
   24fc8:	e5812008 	str	r2, [r1, #8]
   24fcc:	e3a00000 	mov	r0, #0
   24fd0:	e5c3c000 	strb	ip, [r3]
   24fd4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   24fd8:	e3e00000 	mvn	r0, #0
   24fdc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00024fe0 <UG_CheckboxSetStyle>:
   24fe0:	e92d4010 	push	{r4, lr}
   24fe4:	e5d0e000 	ldrb	lr, [r0]
   24fe8:	e5903004 	ldr	r3, [r0, #4]
   24fec:	e35e0000 	cmp	lr, #0
   24ff0:	0a00002f 	beq	250b4 <UG_CheckboxSetStyle+0xd4>
   24ff4:	e24ee001 	sub	lr, lr, #1
   24ff8:	e6ef007e 	uxtb	r0, lr
   24ffc:	e283e020 	add	lr, r3, #32
   25000:	e08ee280 	add	lr, lr, r0, lsl #5
   25004:	ea000002 	b	25014 <UG_CheckboxSetStyle+0x34>
   25008:	e2833020 	add	r3, r3, #32
   2500c:	e15e0003 	cmp	lr, r3
   25010:	0a000027 	beq	250b4 <UG_CheckboxSetStyle+0xd4>
   25014:	e5d30000 	ldrb	r0, [r3]
   25018:	e200c003 	and	ip, r0, #3
   2501c:	e35c0002 	cmp	ip, #2
   25020:	1afffff8 	bne	25008 <UG_CheckboxSetStyle+0x28>
   25024:	e5d3c018 	ldrb	ip, [r3, #24]
   25028:	e35c0004 	cmp	ip, #4
   2502c:	1afffff5 	bne	25008 <UG_CheckboxSetStyle+0x28>
   25030:	e5d3c019 	ldrb	ip, [r3, #25]
   25034:	e15c0001 	cmp	ip, r1
   25038:	1afffff2 	bne	25008 <UG_CheckboxSetStyle+0x28>
   2503c:	e593c01c 	ldr	ip, [r3, #28]
   25040:	e3120008 	tst	r2, #8
   25044:	e5dc1001 	ldrb	r1, [ip, #1]
   25048:	e5dce000 	ldrb	lr, [ip]
   2504c:	e20110e1 	and	r1, r1, #225	; 0xe1
   25050:	e5cc1001 	strb	r1, [ip, #1]
   25054:	13811008 	orrne	r1, r1, #8
   25058:	15cc1001 	strbne	r1, [ip, #1]
   2505c:	e3120010 	tst	r2, #16
   25060:	13811010 	orrne	r1, r1, #16
   25064:	15cc1001 	strbne	r1, [ip, #1]
   25068:	e3120002 	tst	r2, #2
   2506c:	e38e4002 	orr	r4, lr, #2
   25070:	13811002 	orrne	r1, r1, #2
   25074:	e5cc4000 	strb	r4, [ip]
   25078:	15cc1001 	strbne	r1, [ip, #1]
   2507c:	1a000004 	bne	25094 <UG_CheckboxSetStyle+0xb4>
   25080:	e3120004 	tst	r2, #4
   25084:	13811004 	orrne	r1, r1, #4
   25088:	03cee002 	biceq	lr, lr, #2
   2508c:	15cc1001 	strbne	r1, [ip, #1]
   25090:	05cce000 	strbeq	lr, [ip]
   25094:	e3120001 	tst	r2, #1
   25098:	13811001 	orrne	r1, r1, #1
   2509c:	03c11001 	biceq	r1, r1, #1
   250a0:	e3800060 	orr	r0, r0, #96	; 0x60
   250a4:	e5cc1001 	strb	r1, [ip, #1]
   250a8:	e5c30000 	strb	r0, [r3]
   250ac:	e3a00000 	mov	r0, #0
   250b0:	e8bd8010 	pop	{r4, pc}
   250b4:	e3e00000 	mvn	r0, #0
   250b8:	e8bd8010 	pop	{r4, pc}

000250bc <UG_CheckboxSetHSpace>:
   250bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   250c0:	e5d0e000 	ldrb	lr, [r0]
   250c4:	e5903004 	ldr	r3, [r0, #4]
   250c8:	e35e0000 	cmp	lr, #0
   250cc:	0a000017 	beq	25130 <UG_CheckboxSetHSpace+0x74>
   250d0:	e24ee001 	sub	lr, lr, #1
   250d4:	e6ef007e 	uxtb	r0, lr
   250d8:	e283e020 	add	lr, r3, #32
   250dc:	e08ee280 	add	lr, lr, r0, lsl #5
   250e0:	ea000002 	b	250f0 <UG_CheckboxSetHSpace+0x34>
   250e4:	e2833020 	add	r3, r3, #32
   250e8:	e153000e 	cmp	r3, lr
   250ec:	0a00000f 	beq	25130 <UG_CheckboxSetHSpace+0x74>
   250f0:	e5d3c000 	ldrb	ip, [r3]
   250f4:	e20c0003 	and	r0, ip, #3
   250f8:	e3500002 	cmp	r0, #2
   250fc:	1afffff8 	bne	250e4 <UG_CheckboxSetHSpace+0x28>
   25100:	e5d30018 	ldrb	r0, [r3, #24]
   25104:	e3500004 	cmp	r0, #4
   25108:	1afffff5 	bne	250e4 <UG_CheckboxSetHSpace+0x28>
   2510c:	e5d30019 	ldrb	r0, [r3, #25]
   25110:	e1500001 	cmp	r0, r1
   25114:	1afffff2 	bne	250e4 <UG_CheckboxSetHSpace+0x28>
   25118:	e593101c 	ldr	r1, [r3, #28]
   2511c:	e38cc060 	orr	ip, ip, #96	; 0x60
   25120:	e5c1200d 	strb	r2, [r1, #13]
   25124:	e3a00000 	mov	r0, #0
   25128:	e5c3c000 	strb	ip, [r3]
   2512c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   25130:	e3e00000 	mvn	r0, #0
   25134:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00025138 <UG_CheckboxSetVSpace>:
   25138:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2513c:	e5d0e000 	ldrb	lr, [r0]
   25140:	e5903004 	ldr	r3, [r0, #4]
   25144:	e35e0000 	cmp	lr, #0
   25148:	0a000017 	beq	251ac <UG_CheckboxSetVSpace+0x74>
   2514c:	e24ee001 	sub	lr, lr, #1
   25150:	e6ef007e 	uxtb	r0, lr
   25154:	e283e020 	add	lr, r3, #32
   25158:	e08ee280 	add	lr, lr, r0, lsl #5
   2515c:	ea000002 	b	2516c <UG_CheckboxSetVSpace+0x34>
   25160:	e2833020 	add	r3, r3, #32
   25164:	e153000e 	cmp	r3, lr
   25168:	0a00000f 	beq	251ac <UG_CheckboxSetVSpace+0x74>
   2516c:	e5d3c000 	ldrb	ip, [r3]
   25170:	e20c0003 	and	r0, ip, #3
   25174:	e3500002 	cmp	r0, #2
   25178:	1afffff8 	bne	25160 <UG_CheckboxSetVSpace+0x28>
   2517c:	e5d30018 	ldrb	r0, [r3, #24]
   25180:	e3500004 	cmp	r0, #4
   25184:	1afffff5 	bne	25160 <UG_CheckboxSetVSpace+0x28>
   25188:	e5d30019 	ldrb	r0, [r3, #25]
   2518c:	e1500001 	cmp	r0, r1
   25190:	1afffff2 	bne	25160 <UG_CheckboxSetVSpace+0x28>
   25194:	e593101c 	ldr	r1, [r3, #28]
   25198:	e38cc060 	orr	ip, ip, #96	; 0x60
   2519c:	e5c1200e 	strb	r2, [r1, #14]
   251a0:	e3a00000 	mov	r0, #0
   251a4:	e5c3c000 	strb	ip, [r3]
   251a8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   251ac:	e3e00000 	mvn	r0, #0
   251b0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000251b4 <UG_CheckboxSetAlignment>:
   251b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   251b8:	e5d0e000 	ldrb	lr, [r0]
   251bc:	e5903004 	ldr	r3, [r0, #4]
   251c0:	e35e0000 	cmp	lr, #0
   251c4:	0a000017 	beq	25228 <UG_CheckboxSetAlignment+0x74>
   251c8:	e24ee001 	sub	lr, lr, #1
   251cc:	e6ef007e 	uxtb	r0, lr
   251d0:	e283e020 	add	lr, r3, #32
   251d4:	e08ee280 	add	lr, lr, r0, lsl #5
   251d8:	ea000002 	b	251e8 <UG_CheckboxSetAlignment+0x34>
   251dc:	e2833020 	add	r3, r3, #32
   251e0:	e153000e 	cmp	r3, lr
   251e4:	0a00000f 	beq	25228 <UG_CheckboxSetAlignment+0x74>
   251e8:	e5d3c000 	ldrb	ip, [r3]
   251ec:	e20c0003 	and	r0, ip, #3
   251f0:	e3500002 	cmp	r0, #2
   251f4:	1afffff8 	bne	251dc <UG_CheckboxSetAlignment+0x28>
   251f8:	e5d30018 	ldrb	r0, [r3, #24]
   251fc:	e3500004 	cmp	r0, #4
   25200:	1afffff5 	bne	251dc <UG_CheckboxSetAlignment+0x28>
   25204:	e5d30019 	ldrb	r0, [r3, #25]
   25208:	e1500001 	cmp	r0, r1
   2520c:	1afffff2 	bne	251dc <UG_CheckboxSetAlignment+0x28>
   25210:	e593101c 	ldr	r1, [r3, #28]
   25214:	e38cc060 	orr	ip, ip, #96	; 0x60
   25218:	e5c1200c 	strb	r2, [r1, #12]
   2521c:	e3a00000 	mov	r0, #0
   25220:	e5c3c000 	strb	ip, [r3]
   25224:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   25228:	e3e00000 	mvn	r0, #0
   2522c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00025230 <UG_CheckboxGetChecked>:
   25230:	e1a03000 	mov	r3, r0
   25234:	e5d00000 	ldrb	r0, [r0]
   25238:	e5933004 	ldr	r3, [r3, #4]
   2523c:	e3500000 	cmp	r0, #0
   25240:	012fff1e 	bxeq	lr
   25244:	e2400001 	sub	r0, r0, #1
   25248:	e6ef2070 	uxtb	r2, r0
   2524c:	e2830020 	add	r0, r3, #32
   25250:	e0800282 	add	r0, r0, r2, lsl #5
   25254:	ea000002 	b	25264 <UG_CheckboxGetChecked+0x34>
   25258:	e2833020 	add	r3, r3, #32
   2525c:	e1530000 	cmp	r3, r0
   25260:	0a00000c 	beq	25298 <UG_CheckboxGetChecked+0x68>
   25264:	e5d32000 	ldrb	r2, [r3]
   25268:	e2022003 	and	r2, r2, #3
   2526c:	e3520002 	cmp	r2, #2
   25270:	1afffff8 	bne	25258 <UG_CheckboxGetChecked+0x28>
   25274:	e5d32018 	ldrb	r2, [r3, #24]
   25278:	e3520004 	cmp	r2, #4
   2527c:	1afffff5 	bne	25258 <UG_CheckboxGetChecked+0x28>
   25280:	e5d32019 	ldrb	r2, [r3, #25]
   25284:	e1520001 	cmp	r2, r1
   25288:	1afffff2 	bne	25258 <UG_CheckboxGetChecked+0x28>
   2528c:	e593301c 	ldr	r3, [r3, #28]
   25290:	e5d30014 	ldrb	r0, [r3, #20]
   25294:	e12fff1e 	bx	lr
   25298:	e3a00000 	mov	r0, #0
   2529c:	e12fff1e 	bx	lr

000252a0 <UG_CheckboxGetForeColor>:
   252a0:	e5d02000 	ldrb	r2, [r0]
   252a4:	e5903004 	ldr	r3, [r0, #4]
   252a8:	e3520000 	cmp	r2, #0
   252ac:	0a000014 	beq	25304 <UG_CheckboxGetForeColor+0x64>
   252b0:	e2422001 	sub	r2, r2, #1
   252b4:	e6ef2072 	uxtb	r2, r2
   252b8:	e2830020 	add	r0, r3, #32
   252bc:	e0800282 	add	r0, r0, r2, lsl #5
   252c0:	ea000002 	b	252d0 <UG_CheckboxGetForeColor+0x30>
   252c4:	e2833020 	add	r3, r3, #32
   252c8:	e1530000 	cmp	r3, r0
   252cc:	0a00000c 	beq	25304 <UG_CheckboxGetForeColor+0x64>
   252d0:	e5d32000 	ldrb	r2, [r3]
   252d4:	e2022003 	and	r2, r2, #3
   252d8:	e3520002 	cmp	r2, #2
   252dc:	1afffff8 	bne	252c4 <UG_CheckboxGetForeColor+0x24>
   252e0:	e5d32018 	ldrb	r2, [r3, #24]
   252e4:	e3520004 	cmp	r2, #4
   252e8:	1afffff5 	bne	252c4 <UG_CheckboxGetForeColor+0x24>
   252ec:	e5d32019 	ldrb	r2, [r3, #25]
   252f0:	e1520001 	cmp	r2, r1
   252f4:	1afffff2 	bne	252c4 <UG_CheckboxGetForeColor+0x24>
   252f8:	e593301c 	ldr	r3, [r3, #28]
   252fc:	e5d30002 	ldrb	r0, [r3, #2]
   25300:	e12fff1e 	bx	lr
   25304:	e3a00000 	mov	r0, #0
   25308:	e12fff1e 	bx	lr

0002530c <UG_CheckboxGetBackColor>:
   2530c:	e5d02000 	ldrb	r2, [r0]
   25310:	e5903004 	ldr	r3, [r0, #4]
   25314:	e3520000 	cmp	r2, #0
   25318:	0a000014 	beq	25370 <UG_CheckboxGetBackColor+0x64>
   2531c:	e2422001 	sub	r2, r2, #1
   25320:	e6ef2072 	uxtb	r2, r2
   25324:	e2830020 	add	r0, r3, #32
   25328:	e0800282 	add	r0, r0, r2, lsl #5
   2532c:	ea000002 	b	2533c <UG_CheckboxGetBackColor+0x30>
   25330:	e2833020 	add	r3, r3, #32
   25334:	e1530000 	cmp	r3, r0
   25338:	0a00000c 	beq	25370 <UG_CheckboxGetBackColor+0x64>
   2533c:	e5d32000 	ldrb	r2, [r3]
   25340:	e2022003 	and	r2, r2, #3
   25344:	e3520002 	cmp	r2, #2
   25348:	1afffff8 	bne	25330 <UG_CheckboxGetBackColor+0x24>
   2534c:	e5d32018 	ldrb	r2, [r3, #24]
   25350:	e3520004 	cmp	r2, #4
   25354:	1afffff5 	bne	25330 <UG_CheckboxGetBackColor+0x24>
   25358:	e5d32019 	ldrb	r2, [r3, #25]
   2535c:	e1520001 	cmp	r2, r1
   25360:	1afffff2 	bne	25330 <UG_CheckboxGetBackColor+0x24>
   25364:	e593301c 	ldr	r3, [r3, #28]
   25368:	e5d30003 	ldrb	r0, [r3, #3]
   2536c:	e12fff1e 	bx	lr
   25370:	e3a00000 	mov	r0, #0
   25374:	e12fff1e 	bx	lr

00025378 <UG_CheckboxGetAlternateForeColor>:
   25378:	e5d02000 	ldrb	r2, [r0]
   2537c:	e5903004 	ldr	r3, [r0, #4]
   25380:	e3520000 	cmp	r2, #0
   25384:	0a000014 	beq	253dc <UG_CheckboxGetAlternateForeColor+0x64>
   25388:	e2422001 	sub	r2, r2, #1
   2538c:	e6ef2072 	uxtb	r2, r2
   25390:	e2830020 	add	r0, r3, #32
   25394:	e0800282 	add	r0, r0, r2, lsl #5
   25398:	ea000002 	b	253a8 <UG_CheckboxGetAlternateForeColor+0x30>
   2539c:	e2833020 	add	r3, r3, #32
   253a0:	e1530000 	cmp	r3, r0
   253a4:	0a00000c 	beq	253dc <UG_CheckboxGetAlternateForeColor+0x64>
   253a8:	e5d32000 	ldrb	r2, [r3]
   253ac:	e2022003 	and	r2, r2, #3
   253b0:	e3520002 	cmp	r2, #2
   253b4:	1afffff8 	bne	2539c <UG_CheckboxGetAlternateForeColor+0x24>
   253b8:	e5d32018 	ldrb	r2, [r3, #24]
   253bc:	e3520004 	cmp	r2, #4
   253c0:	1afffff5 	bne	2539c <UG_CheckboxGetAlternateForeColor+0x24>
   253c4:	e5d32019 	ldrb	r2, [r3, #25]
   253c8:	e1520001 	cmp	r2, r1
   253cc:	1afffff2 	bne	2539c <UG_CheckboxGetAlternateForeColor+0x24>
   253d0:	e593301c 	ldr	r3, [r3, #28]
   253d4:	e5d30004 	ldrb	r0, [r3, #4]
   253d8:	e12fff1e 	bx	lr
   253dc:	e3a00000 	mov	r0, #0
   253e0:	e12fff1e 	bx	lr

000253e4 <UG_CheckboxGetAlternateBackColor>:
   253e4:	e5d02000 	ldrb	r2, [r0]
   253e8:	e5903004 	ldr	r3, [r0, #4]
   253ec:	e3520000 	cmp	r2, #0
   253f0:	0a000014 	beq	25448 <UG_CheckboxGetAlternateBackColor+0x64>
   253f4:	e2422001 	sub	r2, r2, #1
   253f8:	e6ef2072 	uxtb	r2, r2
   253fc:	e2830020 	add	r0, r3, #32
   25400:	e0800282 	add	r0, r0, r2, lsl #5
   25404:	ea000002 	b	25414 <UG_CheckboxGetAlternateBackColor+0x30>
   25408:	e2833020 	add	r3, r3, #32
   2540c:	e1530000 	cmp	r3, r0
   25410:	0a00000c 	beq	25448 <UG_CheckboxGetAlternateBackColor+0x64>
   25414:	e5d32000 	ldrb	r2, [r3]
   25418:	e2022003 	and	r2, r2, #3
   2541c:	e3520002 	cmp	r2, #2
   25420:	1afffff8 	bne	25408 <UG_CheckboxGetAlternateBackColor+0x24>
   25424:	e5d32018 	ldrb	r2, [r3, #24]
   25428:	e3520004 	cmp	r2, #4
   2542c:	1afffff5 	bne	25408 <UG_CheckboxGetAlternateBackColor+0x24>
   25430:	e5d32019 	ldrb	r2, [r3, #25]
   25434:	e1520001 	cmp	r2, r1
   25438:	1afffff2 	bne	25408 <UG_CheckboxGetAlternateBackColor+0x24>
   2543c:	e593301c 	ldr	r3, [r3, #28]
   25440:	e5d30005 	ldrb	r0, [r3, #5]
   25444:	e12fff1e 	bx	lr
   25448:	e3a00000 	mov	r0, #0
   2544c:	e12fff1e 	bx	lr

00025450 <UG_CheckboxGetText>:
   25450:	e5d02000 	ldrb	r2, [r0]
   25454:	e5903004 	ldr	r3, [r0, #4]
   25458:	e3520000 	cmp	r2, #0
   2545c:	0a000014 	beq	254b4 <UG_CheckboxGetText+0x64>
   25460:	e2422001 	sub	r2, r2, #1
   25464:	e6ef2072 	uxtb	r2, r2
   25468:	e2830020 	add	r0, r3, #32
   2546c:	e0800282 	add	r0, r0, r2, lsl #5
   25470:	ea000002 	b	25480 <UG_CheckboxGetText+0x30>
   25474:	e2833020 	add	r3, r3, #32
   25478:	e1530000 	cmp	r3, r0
   2547c:	0a00000c 	beq	254b4 <UG_CheckboxGetText+0x64>
   25480:	e5d32000 	ldrb	r2, [r3]
   25484:	e2022003 	and	r2, r2, #3
   25488:	e3520002 	cmp	r2, #2
   2548c:	1afffff8 	bne	25474 <UG_CheckboxGetText+0x24>
   25490:	e5d32018 	ldrb	r2, [r3, #24]
   25494:	e3520004 	cmp	r2, #4
   25498:	1afffff5 	bne	25474 <UG_CheckboxGetText+0x24>
   2549c:	e5d32019 	ldrb	r2, [r3, #25]
   254a0:	e1520001 	cmp	r2, r1
   254a4:	1afffff2 	bne	25474 <UG_CheckboxGetText+0x24>
   254a8:	e593301c 	ldr	r3, [r3, #28]
   254ac:	e5930010 	ldr	r0, [r3, #16]
   254b0:	e12fff1e 	bx	lr
   254b4:	e3a00000 	mov	r0, #0
   254b8:	e12fff1e 	bx	lr

000254bc <UG_CheckboxGetFont>:
   254bc:	e5d02000 	ldrb	r2, [r0]
   254c0:	e5903004 	ldr	r3, [r0, #4]
   254c4:	e3520000 	cmp	r2, #0
   254c8:	0a000014 	beq	25520 <UG_CheckboxGetFont+0x64>
   254cc:	e2422001 	sub	r2, r2, #1
   254d0:	e6ef2072 	uxtb	r2, r2
   254d4:	e2830020 	add	r0, r3, #32
   254d8:	e0800282 	add	r0, r0, r2, lsl #5
   254dc:	ea000002 	b	254ec <UG_CheckboxGetFont+0x30>
   254e0:	e2833020 	add	r3, r3, #32
   254e4:	e1530000 	cmp	r3, r0
   254e8:	0a00000c 	beq	25520 <UG_CheckboxGetFont+0x64>
   254ec:	e5d32000 	ldrb	r2, [r3]
   254f0:	e2022003 	and	r2, r2, #3
   254f4:	e3520002 	cmp	r2, #2
   254f8:	1afffff8 	bne	254e0 <UG_CheckboxGetFont+0x24>
   254fc:	e5d32018 	ldrb	r2, [r3, #24]
   25500:	e3520004 	cmp	r2, #4
   25504:	1afffff5 	bne	254e0 <UG_CheckboxGetFont+0x24>
   25508:	e5d32019 	ldrb	r2, [r3, #25]
   2550c:	e1520001 	cmp	r2, r1
   25510:	1afffff2 	bne	254e0 <UG_CheckboxGetFont+0x24>
   25514:	e593301c 	ldr	r3, [r3, #28]
   25518:	e5930008 	ldr	r0, [r3, #8]
   2551c:	e12fff1e 	bx	lr
   25520:	e3a00000 	mov	r0, #0
   25524:	e12fff1e 	bx	lr

00025528 <UG_CheckboxGetStyle>:
   25528:	e1a03000 	mov	r3, r0
   2552c:	e5d00000 	ldrb	r0, [r0]
   25530:	e5933004 	ldr	r3, [r3, #4]
   25534:	e3500000 	cmp	r0, #0
   25538:	012fff1e 	bxeq	lr
   2553c:	e2400001 	sub	r0, r0, #1
   25540:	e6ef2070 	uxtb	r2, r0
   25544:	e2830020 	add	r0, r3, #32
   25548:	e0800282 	add	r0, r0, r2, lsl #5
   2554c:	ea000002 	b	2555c <UG_CheckboxGetStyle+0x34>
   25550:	e2833020 	add	r3, r3, #32
   25554:	e1530000 	cmp	r3, r0
   25558:	0a00000c 	beq	25590 <UG_CheckboxGetStyle+0x68>
   2555c:	e5d32000 	ldrb	r2, [r3]
   25560:	e2022003 	and	r2, r2, #3
   25564:	e3520002 	cmp	r2, #2
   25568:	1afffff8 	bne	25550 <UG_CheckboxGetStyle+0x28>
   2556c:	e5d32018 	ldrb	r2, [r3, #24]
   25570:	e3520004 	cmp	r2, #4
   25574:	1afffff5 	bne	25550 <UG_CheckboxGetStyle+0x28>
   25578:	e5d32019 	ldrb	r2, [r3, #25]
   2557c:	e1520001 	cmp	r2, r1
   25580:	1afffff2 	bne	25550 <UG_CheckboxGetStyle+0x28>
   25584:	e593301c 	ldr	r3, [r3, #28]
   25588:	e5d30001 	ldrb	r0, [r3, #1]
   2558c:	e12fff1e 	bx	lr
   25590:	e3a00000 	mov	r0, #0
   25594:	e12fff1e 	bx	lr

00025598 <UG_CheckboxGetHSpace>:
   25598:	e5d02000 	ldrb	r2, [r0]
   2559c:	e5903004 	ldr	r3, [r0, #4]
   255a0:	e3520000 	cmp	r2, #0
   255a4:	0a000014 	beq	255fc <UG_CheckboxGetHSpace+0x64>
   255a8:	e2422001 	sub	r2, r2, #1
   255ac:	e6ef2072 	uxtb	r2, r2
   255b0:	e2830020 	add	r0, r3, #32
   255b4:	e0800282 	add	r0, r0, r2, lsl #5
   255b8:	ea000002 	b	255c8 <UG_CheckboxGetHSpace+0x30>
   255bc:	e2833020 	add	r3, r3, #32
   255c0:	e1530000 	cmp	r3, r0
   255c4:	0a00000c 	beq	255fc <UG_CheckboxGetHSpace+0x64>
   255c8:	e5d32000 	ldrb	r2, [r3]
   255cc:	e2022003 	and	r2, r2, #3
   255d0:	e3520002 	cmp	r2, #2
   255d4:	1afffff8 	bne	255bc <UG_CheckboxGetHSpace+0x24>
   255d8:	e5d32018 	ldrb	r2, [r3, #24]
   255dc:	e3520004 	cmp	r2, #4
   255e0:	1afffff5 	bne	255bc <UG_CheckboxGetHSpace+0x24>
   255e4:	e5d32019 	ldrb	r2, [r3, #25]
   255e8:	e1520001 	cmp	r2, r1
   255ec:	1afffff2 	bne	255bc <UG_CheckboxGetHSpace+0x24>
   255f0:	e593301c 	ldr	r3, [r3, #28]
   255f4:	e1d300dd 	ldrsb	r0, [r3, #13]
   255f8:	e12fff1e 	bx	lr
   255fc:	e3a00000 	mov	r0, #0
   25600:	e12fff1e 	bx	lr

00025604 <UG_CheckboxGetVSpace>:
   25604:	e5d02000 	ldrb	r2, [r0]
   25608:	e5903004 	ldr	r3, [r0, #4]
   2560c:	e3520000 	cmp	r2, #0
   25610:	0a000014 	beq	25668 <UG_CheckboxGetVSpace+0x64>
   25614:	e2422001 	sub	r2, r2, #1
   25618:	e6ef2072 	uxtb	r2, r2
   2561c:	e2830020 	add	r0, r3, #32
   25620:	e0800282 	add	r0, r0, r2, lsl #5
   25624:	ea000002 	b	25634 <UG_CheckboxGetVSpace+0x30>
   25628:	e2833020 	add	r3, r3, #32
   2562c:	e1530000 	cmp	r3, r0
   25630:	0a00000c 	beq	25668 <UG_CheckboxGetVSpace+0x64>
   25634:	e5d32000 	ldrb	r2, [r3]
   25638:	e2022003 	and	r2, r2, #3
   2563c:	e3520002 	cmp	r2, #2
   25640:	1afffff8 	bne	25628 <UG_CheckboxGetVSpace+0x24>
   25644:	e5d32018 	ldrb	r2, [r3, #24]
   25648:	e3520004 	cmp	r2, #4
   2564c:	1afffff5 	bne	25628 <UG_CheckboxGetVSpace+0x24>
   25650:	e5d32019 	ldrb	r2, [r3, #25]
   25654:	e1520001 	cmp	r2, r1
   25658:	1afffff2 	bne	25628 <UG_CheckboxGetVSpace+0x24>
   2565c:	e593301c 	ldr	r3, [r3, #28]
   25660:	e1d300de 	ldrsb	r0, [r3, #14]
   25664:	e12fff1e 	bx	lr
   25668:	e3a00000 	mov	r0, #0
   2566c:	e12fff1e 	bx	lr

00025670 <UG_CheckboxGetAlignment>:
   25670:	e1a03000 	mov	r3, r0
   25674:	e5d00000 	ldrb	r0, [r0]
   25678:	e5933004 	ldr	r3, [r3, #4]
   2567c:	e3500000 	cmp	r0, #0
   25680:	012fff1e 	bxeq	lr
   25684:	e2400001 	sub	r0, r0, #1
   25688:	e6ef2070 	uxtb	r2, r0
   2568c:	e2830020 	add	r0, r3, #32
   25690:	e0800282 	add	r0, r0, r2, lsl #5
   25694:	ea000002 	b	256a4 <UG_CheckboxGetAlignment+0x34>
   25698:	e2833020 	add	r3, r3, #32
   2569c:	e1530000 	cmp	r3, r0
   256a0:	0a00000c 	beq	256d8 <UG_CheckboxGetAlignment+0x68>
   256a4:	e5d32000 	ldrb	r2, [r3]
   256a8:	e2022003 	and	r2, r2, #3
   256ac:	e3520002 	cmp	r2, #2
   256b0:	1afffff8 	bne	25698 <UG_CheckboxGetAlignment+0x28>
   256b4:	e5d32018 	ldrb	r2, [r3, #24]
   256b8:	e3520004 	cmp	r2, #4
   256bc:	1afffff5 	bne	25698 <UG_CheckboxGetAlignment+0x28>
   256c0:	e5d32019 	ldrb	r2, [r3, #25]
   256c4:	e1520001 	cmp	r2, r1
   256c8:	1afffff2 	bne	25698 <UG_CheckboxGetAlignment+0x28>
   256cc:	e593301c 	ldr	r3, [r3, #28]
   256d0:	e5d3000c 	ldrb	r0, [r3, #12]
   256d4:	e12fff1e 	bx	lr
   256d8:	e3a00000 	mov	r0, #0
   256dc:	e12fff1e 	bx	lr

000256e0 <UG_TextboxCreate>:
   256e0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   256e4:	e5d04000 	ldrb	r4, [r0]
   256e8:	e590c004 	ldr	ip, [r0, #4]
   256ec:	e3540000 	cmp	r4, #0
   256f0:	e1dd62f4 	ldrsh	r6, [sp, #36]	; 0x24
   256f4:	e1dd72f8 	ldrsh	r7, [sp, #40]	; 0x28
   256f8:	e1dd82fc 	ldrsh	r8, [sp, #44]	; 0x2c
   256fc:	0a000010 	beq	25744 <UG_TextboxCreate+0x64>
   25700:	e5dce000 	ldrb	lr, [ip]
   25704:	e20e5003 	and	r5, lr, #3
   25708:	e3550003 	cmp	r5, #3
   2570c:	0a00000e 	beq	2574c <UG_TextboxCreate+0x6c>
   25710:	e2444001 	sub	r4, r4, #1
   25714:	e6ef4074 	uxtb	r4, r4
   25718:	e08c4284 	add	r4, ip, r4, lsl #5
   2571c:	e1a0500c 	mov	r5, ip
   25720:	ea000004 	b	25738 <UG_TextboxCreate+0x58>
   25724:	e5d5e020 	ldrb	lr, [r5, #32]
   25728:	e1a0500c 	mov	r5, ip
   2572c:	e20e9003 	and	r9, lr, #3
   25730:	e3590003 	cmp	r9, #3
   25734:	0a000004 	beq	2574c <UG_TextboxCreate+0x6c>
   25738:	e15c0004 	cmp	ip, r4
   2573c:	e28cc020 	add	ip, ip, #32
   25740:	1afffff7 	bne	25724 <UG_TextboxCreate+0x44>
   25744:	e3e00000 	mvn	r0, #0
   25748:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2574c:	e3a05000 	mov	r5, #0
   25750:	e59f4094 	ldr	r4, [pc, #148]	; 257ec <UG_TextboxCreate+0x10c>
   25754:	e5815000 	str	r5, [r1]
   25758:	e5944000 	ldr	r4, [r4]
   2575c:	e1540005 	cmp	r4, r5
   25760:	1284402c 	addne	r4, r4, #44	; 0x2c
   25764:	15814004 	strne	r4, [r1, #4]
   25768:	0a00001d 	beq	257e4 <UG_TextboxCreate+0x104>
   2576c:	e3a04000 	mov	r4, #0
   25770:	e3a0a012 	mov	sl, #18
   25774:	e3e05000 	mvn	r5, #0
   25778:	e3a09002 	mov	r9, #2
   2577c:	e5c14008 	strb	r4, [r1, #8]
   25780:	e5d0b009 	ldrb	fp, [r0, #9]
   25784:	e3cee001 	bic	lr, lr, #1
   25788:	e5c1b009 	strb	fp, [r1, #9]
   2578c:	e5d0000a 	ldrb	r0, [r0, #10]
   25790:	e5c1a00b 	strb	sl, [r1, #11]
   25794:	e59fa054 	ldr	sl, [pc, #84]	; 257f0 <UG_TextboxCreate+0x110>
   25798:	e38ee04a 	orr	lr, lr, #74	; 0x4a
   2579c:	e5c1000a 	strb	r0, [r1, #10]
   257a0:	e5c1400c 	strb	r4, [r1, #12]
   257a4:	e5c1400d 	strb	r4, [r1, #13]
   257a8:	e1a00004 	mov	r0, r4
   257ac:	e5cce000 	strb	lr, [ip]
   257b0:	e5cc4001 	strb	r4, [ip, #1]
   257b4:	e5cc401a 	strb	r4, [ip, #26]
   257b8:	e1cc31b0 	strh	r3, [ip, #16]
   257bc:	e1cc61b2 	strh	r6, [ip, #18]
   257c0:	e1cc71b4 	strh	r7, [ip, #20]
   257c4:	e1cc81b6 	strh	r8, [ip, #22]
   257c8:	e5cc2019 	strb	r2, [ip, #25]
   257cc:	e58c101c 	str	r1, [ip, #28]
   257d0:	e5cc9018 	strb	r9, [ip, #24]
   257d4:	e58c5008 	str	r5, [ip, #8]
   257d8:	e58c500c 	str	r5, [ip, #12]
   257dc:	e58ca004 	str	sl, [ip, #4]
   257e0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   257e4:	e5814004 	str	r4, [r1, #4]
   257e8:	eaffffdf 	b	2576c <UG_TextboxCreate+0x8c>
   257ec:	0017af10 	.word	0x0017af10
   257f0:	000235f4 	.word	0x000235f4

000257f4 <UG_TextboxDelete>:
   257f4:	e1a02001 	mov	r2, r1
   257f8:	e3a01002 	mov	r1, #2
   257fc:	eafff0d2 	b	21b4c <_UG_DeleteObject>

00025800 <UG_TextboxShow>:
   25800:	e5d0c000 	ldrb	ip, [r0]
   25804:	e5903004 	ldr	r3, [r0, #4]
   25808:	e35c0000 	cmp	ip, #0
   2580c:	0a000015 	beq	25868 <UG_TextboxShow+0x68>
   25810:	e24cc001 	sub	ip, ip, #1
   25814:	e6ef207c 	uxtb	r2, ip
   25818:	e283c020 	add	ip, r3, #32
   2581c:	e08cc282 	add	ip, ip, r2, lsl #5
   25820:	ea000002 	b	25830 <UG_TextboxShow+0x30>
   25824:	e2833020 	add	r3, r3, #32
   25828:	e153000c 	cmp	r3, ip
   2582c:	0a00000d 	beq	25868 <UG_TextboxShow+0x68>
   25830:	e5d32000 	ldrb	r2, [r3]
   25834:	e2020003 	and	r0, r2, #3
   25838:	e3500002 	cmp	r0, #2
   2583c:	1afffff8 	bne	25824 <UG_TextboxShow+0x24>
   25840:	e5d30018 	ldrb	r0, [r3, #24]
   25844:	e3500002 	cmp	r0, #2
   25848:	1afffff5 	bne	25824 <UG_TextboxShow+0x24>
   2584c:	e5d30019 	ldrb	r0, [r3, #25]
   25850:	e1500001 	cmp	r0, r1
   25854:	1afffff2 	bne	25824 <UG_TextboxShow+0x24>
   25858:	e3822068 	orr	r2, r2, #104	; 0x68
   2585c:	e3a00000 	mov	r0, #0
   25860:	e5c32000 	strb	r2, [r3]
   25864:	e12fff1e 	bx	lr
   25868:	e3e00000 	mvn	r0, #0
   2586c:	e12fff1e 	bx	lr

00025870 <UG_TextboxHide>:
   25870:	e5d0c000 	ldrb	ip, [r0]
   25874:	e5903004 	ldr	r3, [r0, #4]
   25878:	e35c0000 	cmp	ip, #0
   2587c:	0a000016 	beq	258dc <UG_TextboxHide+0x6c>
   25880:	e24cc001 	sub	ip, ip, #1
   25884:	e6ef207c 	uxtb	r2, ip
   25888:	e283c020 	add	ip, r3, #32
   2588c:	e08cc282 	add	ip, ip, r2, lsl #5
   25890:	ea000002 	b	258a0 <UG_TextboxHide+0x30>
   25894:	e2833020 	add	r3, r3, #32
   25898:	e153000c 	cmp	r3, ip
   2589c:	0a00000e 	beq	258dc <UG_TextboxHide+0x6c>
   258a0:	e5d32000 	ldrb	r2, [r3]
   258a4:	e2020003 	and	r0, r2, #3
   258a8:	e3500002 	cmp	r0, #2
   258ac:	1afffff8 	bne	25894 <UG_TextboxHide+0x24>
   258b0:	e5d30018 	ldrb	r0, [r3, #24]
   258b4:	e3500002 	cmp	r0, #2
   258b8:	1afffff5 	bne	25894 <UG_TextboxHide+0x24>
   258bc:	e5d30019 	ldrb	r0, [r3, #25]
   258c0:	e1500001 	cmp	r0, r1
   258c4:	1afffff2 	bne	25894 <UG_TextboxHide+0x24>
   258c8:	e3c22008 	bic	r2, r2, #8
   258cc:	e3822020 	orr	r2, r2, #32
   258d0:	e3a00000 	mov	r0, #0
   258d4:	e5c32000 	strb	r2, [r3]
   258d8:	e12fff1e 	bx	lr
   258dc:	e3e00000 	mvn	r0, #0
   258e0:	e12fff1e 	bx	lr

000258e4 <UG_TextboxSetForeColor>:
   258e4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   258e8:	e5d0e000 	ldrb	lr, [r0]
   258ec:	e5903004 	ldr	r3, [r0, #4]
   258f0:	e35e0000 	cmp	lr, #0
   258f4:	0a000017 	beq	25958 <UG_TextboxSetForeColor+0x74>
   258f8:	e24ee001 	sub	lr, lr, #1
   258fc:	e6ef007e 	uxtb	r0, lr
   25900:	e283e020 	add	lr, r3, #32
   25904:	e08ee280 	add	lr, lr, r0, lsl #5
   25908:	ea000002 	b	25918 <UG_TextboxSetForeColor+0x34>
   2590c:	e2833020 	add	r3, r3, #32
   25910:	e153000e 	cmp	r3, lr
   25914:	0a00000f 	beq	25958 <UG_TextboxSetForeColor+0x74>
   25918:	e5d3c000 	ldrb	ip, [r3]
   2591c:	e20c0003 	and	r0, ip, #3
   25920:	e3500002 	cmp	r0, #2
   25924:	1afffff8 	bne	2590c <UG_TextboxSetForeColor+0x28>
   25928:	e5d30018 	ldrb	r0, [r3, #24]
   2592c:	e3500002 	cmp	r0, #2
   25930:	1afffff5 	bne	2590c <UG_TextboxSetForeColor+0x28>
   25934:	e5d30019 	ldrb	r0, [r3, #25]
   25938:	e1500001 	cmp	r0, r1
   2593c:	1afffff2 	bne	2590c <UG_TextboxSetForeColor+0x28>
   25940:	e593101c 	ldr	r1, [r3, #28]
   25944:	e38cc060 	orr	ip, ip, #96	; 0x60
   25948:	e5c12009 	strb	r2, [r1, #9]
   2594c:	e3a00000 	mov	r0, #0
   25950:	e5c3c000 	strb	ip, [r3]
   25954:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   25958:	e3e00000 	mvn	r0, #0
   2595c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00025960 <UG_TextboxSetBackColor>:
   25960:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   25964:	e5d0e000 	ldrb	lr, [r0]
   25968:	e5903004 	ldr	r3, [r0, #4]
   2596c:	e35e0000 	cmp	lr, #0
   25970:	0a000017 	beq	259d4 <UG_TextboxSetBackColor+0x74>
   25974:	e24ee001 	sub	lr, lr, #1
   25978:	e6ef007e 	uxtb	r0, lr
   2597c:	e283e020 	add	lr, r3, #32
   25980:	e08ee280 	add	lr, lr, r0, lsl #5
   25984:	ea000002 	b	25994 <UG_TextboxSetBackColor+0x34>
   25988:	e2833020 	add	r3, r3, #32
   2598c:	e153000e 	cmp	r3, lr
   25990:	0a00000f 	beq	259d4 <UG_TextboxSetBackColor+0x74>
   25994:	e5d3c000 	ldrb	ip, [r3]
   25998:	e20c0003 	and	r0, ip, #3
   2599c:	e3500002 	cmp	r0, #2
   259a0:	1afffff8 	bne	25988 <UG_TextboxSetBackColor+0x28>
   259a4:	e5d30018 	ldrb	r0, [r3, #24]
   259a8:	e3500002 	cmp	r0, #2
   259ac:	1afffff5 	bne	25988 <UG_TextboxSetBackColor+0x28>
   259b0:	e5d30019 	ldrb	r0, [r3, #25]
   259b4:	e1500001 	cmp	r0, r1
   259b8:	1afffff2 	bne	25988 <UG_TextboxSetBackColor+0x28>
   259bc:	e593101c 	ldr	r1, [r3, #28]
   259c0:	e38cc060 	orr	ip, ip, #96	; 0x60
   259c4:	e5c1200a 	strb	r2, [r1, #10]
   259c8:	e3a00000 	mov	r0, #0
   259cc:	e5c3c000 	strb	ip, [r3]
   259d0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   259d4:	e3e00000 	mvn	r0, #0
   259d8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000259dc <UG_TextboxSetText>:
   259dc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   259e0:	e5d0e000 	ldrb	lr, [r0]
   259e4:	e5903004 	ldr	r3, [r0, #4]
   259e8:	e35e0000 	cmp	lr, #0
   259ec:	0a000017 	beq	25a50 <UG_TextboxSetText+0x74>
   259f0:	e24ee001 	sub	lr, lr, #1
   259f4:	e6ef007e 	uxtb	r0, lr
   259f8:	e283e020 	add	lr, r3, #32
   259fc:	e08ee280 	add	lr, lr, r0, lsl #5
   25a00:	ea000002 	b	25a10 <UG_TextboxSetText+0x34>
   25a04:	e2833020 	add	r3, r3, #32
   25a08:	e153000e 	cmp	r3, lr
   25a0c:	0a00000f 	beq	25a50 <UG_TextboxSetText+0x74>
   25a10:	e5d3c000 	ldrb	ip, [r3]
   25a14:	e20c0003 	and	r0, ip, #3
   25a18:	e3500002 	cmp	r0, #2
   25a1c:	1afffff8 	bne	25a04 <UG_TextboxSetText+0x28>
   25a20:	e5d30018 	ldrb	r0, [r3, #24]
   25a24:	e3500002 	cmp	r0, #2
   25a28:	1afffff5 	bne	25a04 <UG_TextboxSetText+0x28>
   25a2c:	e5d30019 	ldrb	r0, [r3, #25]
   25a30:	e1500001 	cmp	r0, r1
   25a34:	1afffff2 	bne	25a04 <UG_TextboxSetText+0x28>
   25a38:	e593101c 	ldr	r1, [r3, #28]
   25a3c:	e38cc060 	orr	ip, ip, #96	; 0x60
   25a40:	e5812000 	str	r2, [r1]
   25a44:	e3a00000 	mov	r0, #0
   25a48:	e5c3c000 	strb	ip, [r3]
   25a4c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   25a50:	e3e00000 	mvn	r0, #0
   25a54:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00025a58 <UG_TextboxSetFont>:
   25a58:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   25a5c:	e5d0e000 	ldrb	lr, [r0]
   25a60:	e5903004 	ldr	r3, [r0, #4]
   25a64:	e35e0000 	cmp	lr, #0
   25a68:	0a000017 	beq	25acc <UG_TextboxSetFont+0x74>
   25a6c:	e24ee001 	sub	lr, lr, #1
   25a70:	e6ef007e 	uxtb	r0, lr
   25a74:	e283e020 	add	lr, r3, #32
   25a78:	e08ee280 	add	lr, lr, r0, lsl #5
   25a7c:	ea000002 	b	25a8c <UG_TextboxSetFont+0x34>
   25a80:	e2833020 	add	r3, r3, #32
   25a84:	e153000e 	cmp	r3, lr
   25a88:	0a00000f 	beq	25acc <UG_TextboxSetFont+0x74>
   25a8c:	e5d3c000 	ldrb	ip, [r3]
   25a90:	e20c0003 	and	r0, ip, #3
   25a94:	e3500002 	cmp	r0, #2
   25a98:	1afffff8 	bne	25a80 <UG_TextboxSetFont+0x28>
   25a9c:	e5d30018 	ldrb	r0, [r3, #24]
   25aa0:	e3500002 	cmp	r0, #2
   25aa4:	1afffff5 	bne	25a80 <UG_TextboxSetFont+0x28>
   25aa8:	e5d30019 	ldrb	r0, [r3, #25]
   25aac:	e1500001 	cmp	r0, r1
   25ab0:	1afffff2 	bne	25a80 <UG_TextboxSetFont+0x28>
   25ab4:	e593101c 	ldr	r1, [r3, #28]
   25ab8:	e38cc060 	orr	ip, ip, #96	; 0x60
   25abc:	e5812004 	str	r2, [r1, #4]
   25ac0:	e3a00000 	mov	r0, #0
   25ac4:	e5c3c000 	strb	ip, [r3]
   25ac8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   25acc:	e3e00000 	mvn	r0, #0
   25ad0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00025ad4 <UG_TextboxSetHSpace>:
   25ad4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   25ad8:	e5d0e000 	ldrb	lr, [r0]
   25adc:	e5903004 	ldr	r3, [r0, #4]
   25ae0:	e35e0000 	cmp	lr, #0
   25ae4:	0a000017 	beq	25b48 <UG_TextboxSetHSpace+0x74>
   25ae8:	e24ee001 	sub	lr, lr, #1
   25aec:	e6ef007e 	uxtb	r0, lr
   25af0:	e283e020 	add	lr, r3, #32
   25af4:	e08ee280 	add	lr, lr, r0, lsl #5
   25af8:	ea000002 	b	25b08 <UG_TextboxSetHSpace+0x34>
   25afc:	e2833020 	add	r3, r3, #32
   25b00:	e153000e 	cmp	r3, lr
   25b04:	0a00000f 	beq	25b48 <UG_TextboxSetHSpace+0x74>
   25b08:	e5d3c000 	ldrb	ip, [r3]
   25b0c:	e20c0003 	and	r0, ip, #3
   25b10:	e3500002 	cmp	r0, #2
   25b14:	1afffff8 	bne	25afc <UG_TextboxSetHSpace+0x28>
   25b18:	e5d30018 	ldrb	r0, [r3, #24]
   25b1c:	e3500002 	cmp	r0, #2
   25b20:	1afffff5 	bne	25afc <UG_TextboxSetHSpace+0x28>
   25b24:	e5d30019 	ldrb	r0, [r3, #25]
   25b28:	e1500001 	cmp	r0, r1
   25b2c:	1afffff2 	bne	25afc <UG_TextboxSetHSpace+0x28>
   25b30:	e593101c 	ldr	r1, [r3, #28]
   25b34:	e38cc060 	orr	ip, ip, #96	; 0x60
   25b38:	e5c1200c 	strb	r2, [r1, #12]
   25b3c:	e3a00000 	mov	r0, #0
   25b40:	e5c3c000 	strb	ip, [r3]
   25b44:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   25b48:	e3e00000 	mvn	r0, #0
   25b4c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00025b50 <UG_TextboxSetVSpace>:
   25b50:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   25b54:	e5d0e000 	ldrb	lr, [r0]
   25b58:	e5903004 	ldr	r3, [r0, #4]
   25b5c:	e35e0000 	cmp	lr, #0
   25b60:	0a000017 	beq	25bc4 <UG_TextboxSetVSpace+0x74>
   25b64:	e24ee001 	sub	lr, lr, #1
   25b68:	e6ef007e 	uxtb	r0, lr
   25b6c:	e283e020 	add	lr, r3, #32
   25b70:	e08ee280 	add	lr, lr, r0, lsl #5
   25b74:	ea000002 	b	25b84 <UG_TextboxSetVSpace+0x34>
   25b78:	e2833020 	add	r3, r3, #32
   25b7c:	e153000e 	cmp	r3, lr
   25b80:	0a00000f 	beq	25bc4 <UG_TextboxSetVSpace+0x74>
   25b84:	e5d3c000 	ldrb	ip, [r3]
   25b88:	e20c0003 	and	r0, ip, #3
   25b8c:	e3500002 	cmp	r0, #2
   25b90:	1afffff8 	bne	25b78 <UG_TextboxSetVSpace+0x28>
   25b94:	e5d30018 	ldrb	r0, [r3, #24]
   25b98:	e3500002 	cmp	r0, #2
   25b9c:	1afffff5 	bne	25b78 <UG_TextboxSetVSpace+0x28>
   25ba0:	e5d30019 	ldrb	r0, [r3, #25]
   25ba4:	e1500001 	cmp	r0, r1
   25ba8:	1afffff2 	bne	25b78 <UG_TextboxSetVSpace+0x28>
   25bac:	e593101c 	ldr	r1, [r3, #28]
   25bb0:	e38cc060 	orr	ip, ip, #96	; 0x60
   25bb4:	e5c1200d 	strb	r2, [r1, #13]
   25bb8:	e3a00000 	mov	r0, #0
   25bbc:	e5c3c000 	strb	ip, [r3]
   25bc0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   25bc4:	e3e00000 	mvn	r0, #0
   25bc8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00025bcc <UG_TextboxSetAlignment>:
   25bcc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   25bd0:	e5d0e000 	ldrb	lr, [r0]
   25bd4:	e5903004 	ldr	r3, [r0, #4]
   25bd8:	e35e0000 	cmp	lr, #0
   25bdc:	0a000017 	beq	25c40 <UG_TextboxSetAlignment+0x74>
   25be0:	e24ee001 	sub	lr, lr, #1
   25be4:	e6ef007e 	uxtb	r0, lr
   25be8:	e283e020 	add	lr, r3, #32
   25bec:	e08ee280 	add	lr, lr, r0, lsl #5
   25bf0:	ea000002 	b	25c00 <UG_TextboxSetAlignment+0x34>
   25bf4:	e2833020 	add	r3, r3, #32
   25bf8:	e153000e 	cmp	r3, lr
   25bfc:	0a00000f 	beq	25c40 <UG_TextboxSetAlignment+0x74>
   25c00:	e5d3c000 	ldrb	ip, [r3]
   25c04:	e20c0003 	and	r0, ip, #3
   25c08:	e3500002 	cmp	r0, #2
   25c0c:	1afffff8 	bne	25bf4 <UG_TextboxSetAlignment+0x28>
   25c10:	e5d30018 	ldrb	r0, [r3, #24]
   25c14:	e3500002 	cmp	r0, #2
   25c18:	1afffff5 	bne	25bf4 <UG_TextboxSetAlignment+0x28>
   25c1c:	e5d30019 	ldrb	r0, [r3, #25]
   25c20:	e1500001 	cmp	r0, r1
   25c24:	1afffff2 	bne	25bf4 <UG_TextboxSetAlignment+0x28>
   25c28:	e593101c 	ldr	r1, [r3, #28]
   25c2c:	e38cc060 	orr	ip, ip, #96	; 0x60
   25c30:	e5c1200b 	strb	r2, [r1, #11]
   25c34:	e3a00000 	mov	r0, #0
   25c38:	e5c3c000 	strb	ip, [r3]
   25c3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   25c40:	e3e00000 	mvn	r0, #0
   25c44:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00025c48 <UG_TextboxGetForeColor>:
   25c48:	e5d02000 	ldrb	r2, [r0]
   25c4c:	e5903004 	ldr	r3, [r0, #4]
   25c50:	e3520000 	cmp	r2, #0
   25c54:	0a000014 	beq	25cac <UG_TextboxGetForeColor+0x64>
   25c58:	e2422001 	sub	r2, r2, #1
   25c5c:	e6ef2072 	uxtb	r2, r2
   25c60:	e2830020 	add	r0, r3, #32
   25c64:	e0800282 	add	r0, r0, r2, lsl #5
   25c68:	ea000002 	b	25c78 <UG_TextboxGetForeColor+0x30>
   25c6c:	e2833020 	add	r3, r3, #32
   25c70:	e1530000 	cmp	r3, r0
   25c74:	0a00000c 	beq	25cac <UG_TextboxGetForeColor+0x64>
   25c78:	e5d32000 	ldrb	r2, [r3]
   25c7c:	e2022003 	and	r2, r2, #3
   25c80:	e3520002 	cmp	r2, #2
   25c84:	1afffff8 	bne	25c6c <UG_TextboxGetForeColor+0x24>
   25c88:	e5d32018 	ldrb	r2, [r3, #24]
   25c8c:	e3520002 	cmp	r2, #2
   25c90:	1afffff5 	bne	25c6c <UG_TextboxGetForeColor+0x24>
   25c94:	e5d32019 	ldrb	r2, [r3, #25]
   25c98:	e1520001 	cmp	r2, r1
   25c9c:	1afffff2 	bne	25c6c <UG_TextboxGetForeColor+0x24>
   25ca0:	e593301c 	ldr	r3, [r3, #28]
   25ca4:	e5d30009 	ldrb	r0, [r3, #9]
   25ca8:	e12fff1e 	bx	lr
   25cac:	e3a00000 	mov	r0, #0
   25cb0:	e12fff1e 	bx	lr

00025cb4 <UG_TextboxGetBackColor>:
   25cb4:	e5d02000 	ldrb	r2, [r0]
   25cb8:	e5903004 	ldr	r3, [r0, #4]
   25cbc:	e3520000 	cmp	r2, #0
   25cc0:	0a000014 	beq	25d18 <UG_TextboxGetBackColor+0x64>
   25cc4:	e2422001 	sub	r2, r2, #1
   25cc8:	e6ef2072 	uxtb	r2, r2
   25ccc:	e2830020 	add	r0, r3, #32
   25cd0:	e0800282 	add	r0, r0, r2, lsl #5
   25cd4:	ea000002 	b	25ce4 <UG_TextboxGetBackColor+0x30>
   25cd8:	e2833020 	add	r3, r3, #32
   25cdc:	e1530000 	cmp	r3, r0
   25ce0:	0a00000c 	beq	25d18 <UG_TextboxGetBackColor+0x64>
   25ce4:	e5d32000 	ldrb	r2, [r3]
   25ce8:	e2022003 	and	r2, r2, #3
   25cec:	e3520002 	cmp	r2, #2
   25cf0:	1afffff8 	bne	25cd8 <UG_TextboxGetBackColor+0x24>
   25cf4:	e5d32018 	ldrb	r2, [r3, #24]
   25cf8:	e3520002 	cmp	r2, #2
   25cfc:	1afffff5 	bne	25cd8 <UG_TextboxGetBackColor+0x24>
   25d00:	e5d32019 	ldrb	r2, [r3, #25]
   25d04:	e1520001 	cmp	r2, r1
   25d08:	1afffff2 	bne	25cd8 <UG_TextboxGetBackColor+0x24>
   25d0c:	e593301c 	ldr	r3, [r3, #28]
   25d10:	e5d3000a 	ldrb	r0, [r3, #10]
   25d14:	e12fff1e 	bx	lr
   25d18:	e3a00000 	mov	r0, #0
   25d1c:	e12fff1e 	bx	lr

00025d20 <UG_TextboxGetText>:
   25d20:	e5d02000 	ldrb	r2, [r0]
   25d24:	e5903004 	ldr	r3, [r0, #4]
   25d28:	e3520000 	cmp	r2, #0
   25d2c:	0a000014 	beq	25d84 <UG_TextboxGetText+0x64>
   25d30:	e2422001 	sub	r2, r2, #1
   25d34:	e6ef2072 	uxtb	r2, r2
   25d38:	e2830020 	add	r0, r3, #32
   25d3c:	e0800282 	add	r0, r0, r2, lsl #5
   25d40:	ea000002 	b	25d50 <UG_TextboxGetText+0x30>
   25d44:	e2833020 	add	r3, r3, #32
   25d48:	e1530000 	cmp	r3, r0
   25d4c:	0a00000c 	beq	25d84 <UG_TextboxGetText+0x64>
   25d50:	e5d32000 	ldrb	r2, [r3]
   25d54:	e2022003 	and	r2, r2, #3
   25d58:	e3520002 	cmp	r2, #2
   25d5c:	1afffff8 	bne	25d44 <UG_TextboxGetText+0x24>
   25d60:	e5d32018 	ldrb	r2, [r3, #24]
   25d64:	e3520002 	cmp	r2, #2
   25d68:	1afffff5 	bne	25d44 <UG_TextboxGetText+0x24>
   25d6c:	e5d32019 	ldrb	r2, [r3, #25]
   25d70:	e1520001 	cmp	r2, r1
   25d74:	1afffff2 	bne	25d44 <UG_TextboxGetText+0x24>
   25d78:	e593301c 	ldr	r3, [r3, #28]
   25d7c:	e5930000 	ldr	r0, [r3]
   25d80:	e12fff1e 	bx	lr
   25d84:	e3a00000 	mov	r0, #0
   25d88:	e12fff1e 	bx	lr

00025d8c <UG_TextboxGetFont>:
   25d8c:	e5d02000 	ldrb	r2, [r0]
   25d90:	e5903004 	ldr	r3, [r0, #4]
   25d94:	e3520000 	cmp	r2, #0
   25d98:	0a000014 	beq	25df0 <UG_TextboxGetFont+0x64>
   25d9c:	e2422001 	sub	r2, r2, #1
   25da0:	e6ef2072 	uxtb	r2, r2
   25da4:	e2830020 	add	r0, r3, #32
   25da8:	e0800282 	add	r0, r0, r2, lsl #5
   25dac:	ea000002 	b	25dbc <UG_TextboxGetFont+0x30>
   25db0:	e2833020 	add	r3, r3, #32
   25db4:	e1530000 	cmp	r3, r0
   25db8:	0a00000c 	beq	25df0 <UG_TextboxGetFont+0x64>
   25dbc:	e5d32000 	ldrb	r2, [r3]
   25dc0:	e2022003 	and	r2, r2, #3
   25dc4:	e3520002 	cmp	r2, #2
   25dc8:	1afffff8 	bne	25db0 <UG_TextboxGetFont+0x24>
   25dcc:	e5d32018 	ldrb	r2, [r3, #24]
   25dd0:	e3520002 	cmp	r2, #2
   25dd4:	1afffff5 	bne	25db0 <UG_TextboxGetFont+0x24>
   25dd8:	e5d32019 	ldrb	r2, [r3, #25]
   25ddc:	e1520001 	cmp	r2, r1
   25de0:	1afffff2 	bne	25db0 <UG_TextboxGetFont+0x24>
   25de4:	e593301c 	ldr	r3, [r3, #28]
   25de8:	e5930004 	ldr	r0, [r3, #4]
   25dec:	e12fff1e 	bx	lr
   25df0:	e3a00000 	mov	r0, #0
   25df4:	e12fff1e 	bx	lr

00025df8 <UG_TextboxGetHSpace>:
   25df8:	e5d02000 	ldrb	r2, [r0]
   25dfc:	e5903004 	ldr	r3, [r0, #4]
   25e00:	e3520000 	cmp	r2, #0
   25e04:	0a000014 	beq	25e5c <UG_TextboxGetHSpace+0x64>
   25e08:	e2422001 	sub	r2, r2, #1
   25e0c:	e6ef2072 	uxtb	r2, r2
   25e10:	e2830020 	add	r0, r3, #32
   25e14:	e0800282 	add	r0, r0, r2, lsl #5
   25e18:	ea000002 	b	25e28 <UG_TextboxGetHSpace+0x30>
   25e1c:	e2833020 	add	r3, r3, #32
   25e20:	e1530000 	cmp	r3, r0
   25e24:	0a00000c 	beq	25e5c <UG_TextboxGetHSpace+0x64>
   25e28:	e5d32000 	ldrb	r2, [r3]
   25e2c:	e2022003 	and	r2, r2, #3
   25e30:	e3520002 	cmp	r2, #2
   25e34:	1afffff8 	bne	25e1c <UG_TextboxGetHSpace+0x24>
   25e38:	e5d32018 	ldrb	r2, [r3, #24]
   25e3c:	e3520002 	cmp	r2, #2
   25e40:	1afffff5 	bne	25e1c <UG_TextboxGetHSpace+0x24>
   25e44:	e5d32019 	ldrb	r2, [r3, #25]
   25e48:	e1520001 	cmp	r2, r1
   25e4c:	1afffff2 	bne	25e1c <UG_TextboxGetHSpace+0x24>
   25e50:	e593301c 	ldr	r3, [r3, #28]
   25e54:	e1d300dc 	ldrsb	r0, [r3, #12]
   25e58:	e12fff1e 	bx	lr
   25e5c:	e3a00000 	mov	r0, #0
   25e60:	e12fff1e 	bx	lr

00025e64 <UG_TextboxGetVSpace>:
   25e64:	e5d02000 	ldrb	r2, [r0]
   25e68:	e5903004 	ldr	r3, [r0, #4]
   25e6c:	e3520000 	cmp	r2, #0
   25e70:	0a000014 	beq	25ec8 <UG_TextboxGetVSpace+0x64>
   25e74:	e2422001 	sub	r2, r2, #1
   25e78:	e6ef2072 	uxtb	r2, r2
   25e7c:	e2830020 	add	r0, r3, #32
   25e80:	e0800282 	add	r0, r0, r2, lsl #5
   25e84:	ea000002 	b	25e94 <UG_TextboxGetVSpace+0x30>
   25e88:	e2833020 	add	r3, r3, #32
   25e8c:	e1530000 	cmp	r3, r0
   25e90:	0a00000c 	beq	25ec8 <UG_TextboxGetVSpace+0x64>
   25e94:	e5d32000 	ldrb	r2, [r3]
   25e98:	e2022003 	and	r2, r2, #3
   25e9c:	e3520002 	cmp	r2, #2
   25ea0:	1afffff8 	bne	25e88 <UG_TextboxGetVSpace+0x24>
   25ea4:	e5d32018 	ldrb	r2, [r3, #24]
   25ea8:	e3520002 	cmp	r2, #2
   25eac:	1afffff5 	bne	25e88 <UG_TextboxGetVSpace+0x24>
   25eb0:	e5d32019 	ldrb	r2, [r3, #25]
   25eb4:	e1520001 	cmp	r2, r1
   25eb8:	1afffff2 	bne	25e88 <UG_TextboxGetVSpace+0x24>
   25ebc:	e593301c 	ldr	r3, [r3, #28]
   25ec0:	e1d300dd 	ldrsb	r0, [r3, #13]
   25ec4:	e12fff1e 	bx	lr
   25ec8:	e3a00000 	mov	r0, #0
   25ecc:	e12fff1e 	bx	lr

00025ed0 <UG_TextboxGetAlignment>:
   25ed0:	e1a03000 	mov	r3, r0
   25ed4:	e5d00000 	ldrb	r0, [r0]
   25ed8:	e5933004 	ldr	r3, [r3, #4]
   25edc:	e3500000 	cmp	r0, #0
   25ee0:	012fff1e 	bxeq	lr
   25ee4:	e2400001 	sub	r0, r0, #1
   25ee8:	e6ef2070 	uxtb	r2, r0
   25eec:	e2830020 	add	r0, r3, #32
   25ef0:	e0800282 	add	r0, r0, r2, lsl #5
   25ef4:	ea000002 	b	25f04 <UG_TextboxGetAlignment+0x34>
   25ef8:	e2833020 	add	r3, r3, #32
   25efc:	e1530000 	cmp	r3, r0
   25f00:	0a00000c 	beq	25f38 <UG_TextboxGetAlignment+0x68>
   25f04:	e5d32000 	ldrb	r2, [r3]
   25f08:	e2022003 	and	r2, r2, #3
   25f0c:	e3520002 	cmp	r2, #2
   25f10:	1afffff8 	bne	25ef8 <UG_TextboxGetAlignment+0x28>
   25f14:	e5d32018 	ldrb	r2, [r3, #24]
   25f18:	e3520002 	cmp	r2, #2
   25f1c:	1afffff5 	bne	25ef8 <UG_TextboxGetAlignment+0x28>
   25f20:	e5d32019 	ldrb	r2, [r3, #25]
   25f24:	e1520001 	cmp	r2, r1
   25f28:	1afffff2 	bne	25ef8 <UG_TextboxGetAlignment+0x28>
   25f2c:	e593301c 	ldr	r3, [r3, #28]
   25f30:	e5d3000b 	ldrb	r0, [r3, #11]
   25f34:	e12fff1e 	bx	lr
   25f38:	e3a00000 	mov	r0, #0
   25f3c:	e12fff1e 	bx	lr

00025f40 <UG_ImageCreate>:
   25f40:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25f44:	e5d04000 	ldrb	r4, [r0]
   25f48:	e590c004 	ldr	ip, [r0, #4]
   25f4c:	e3540000 	cmp	r4, #0
   25f50:	e1dd82f0 	ldrsh	r8, [sp, #32]
   25f54:	e1dd72f4 	ldrsh	r7, [sp, #36]	; 0x24
   25f58:	e1dd62f8 	ldrsh	r6, [sp, #40]	; 0x28
   25f5c:	0a000010 	beq	25fa4 <UG_ImageCreate+0x64>
   25f60:	e5dce000 	ldrb	lr, [ip]
   25f64:	e20e0003 	and	r0, lr, #3
   25f68:	e3500003 	cmp	r0, #3
   25f6c:	0a00000e 	beq	25fac <UG_ImageCreate+0x6c>
   25f70:	e2440001 	sub	r0, r4, #1
   25f74:	e6ef0070 	uxtb	r0, r0
   25f78:	e08c0280 	add	r0, ip, r0, lsl #5
   25f7c:	e1a0400c 	mov	r4, ip
   25f80:	ea000004 	b	25f98 <UG_ImageCreate+0x58>
   25f84:	e5d4e020 	ldrb	lr, [r4, #32]
   25f88:	e1a0400c 	mov	r4, ip
   25f8c:	e20e5003 	and	r5, lr, #3
   25f90:	e3550003 	cmp	r5, #3
   25f94:	0a000004 	beq	25fac <UG_ImageCreate+0x6c>
   25f98:	e15c0000 	cmp	ip, r0
   25f9c:	e28cc020 	add	ip, ip, #32
   25fa0:	1afffff7 	bne	25f84 <UG_ImageCreate+0x44>
   25fa4:	e3e00000 	mvn	r0, #0
   25fa8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25fac:	e3a04000 	mov	r4, #0
   25fb0:	e3a0a001 	mov	sl, #1
   25fb4:	e3e05000 	mvn	r5, #0
   25fb8:	e3a09003 	mov	r9, #3
   25fbc:	e3cee001 	bic	lr, lr, #1
   25fc0:	e38ee04a 	orr	lr, lr, #74	; 0x4a
   25fc4:	e5814000 	str	r4, [r1]
   25fc8:	e5c1a004 	strb	sl, [r1, #4]
   25fcc:	e5cce000 	strb	lr, [ip]
   25fd0:	e59fe034 	ldr	lr, [pc, #52]	; 2600c <UG_ImageCreate+0xcc>
   25fd4:	e1a00004 	mov	r0, r4
   25fd8:	e5cc4001 	strb	r4, [ip, #1]
   25fdc:	e5cc401a 	strb	r4, [ip, #26]
   25fe0:	e1cc31b0 	strh	r3, [ip, #16]
   25fe4:	e1cc81b2 	strh	r8, [ip, #18]
   25fe8:	e1cc71b4 	strh	r7, [ip, #20]
   25fec:	e1cc61b6 	strh	r6, [ip, #22]
   25ff0:	e5cc2019 	strb	r2, [ip, #25]
   25ff4:	e58c101c 	str	r1, [ip, #28]
   25ff8:	e5cc9018 	strb	r9, [ip, #24]
   25ffc:	e58c5008 	str	r5, [ip, #8]
   26000:	e58c500c 	str	r5, [ip, #12]
   26004:	e58ce004 	str	lr, [ip, #4]
   26008:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2600c:	00023798 	.word	0x00023798

00026010 <UG_ImageDelete>:
   26010:	e1a02001 	mov	r2, r1
   26014:	e3a01003 	mov	r1, #3
   26018:	eaffeecb 	b	21b4c <_UG_DeleteObject>

0002601c <UG_ImageShow>:
   2601c:	e5d0c000 	ldrb	ip, [r0]
   26020:	e5903004 	ldr	r3, [r0, #4]
   26024:	e35c0000 	cmp	ip, #0
   26028:	0a000015 	beq	26084 <UG_ImageShow+0x68>
   2602c:	e24cc001 	sub	ip, ip, #1
   26030:	e6ef207c 	uxtb	r2, ip
   26034:	e283c020 	add	ip, r3, #32
   26038:	e08cc282 	add	ip, ip, r2, lsl #5
   2603c:	ea000002 	b	2604c <UG_ImageShow+0x30>
   26040:	e2833020 	add	r3, r3, #32
   26044:	e153000c 	cmp	r3, ip
   26048:	0a00000d 	beq	26084 <UG_ImageShow+0x68>
   2604c:	e5d32000 	ldrb	r2, [r3]
   26050:	e2020003 	and	r0, r2, #3
   26054:	e3500002 	cmp	r0, #2
   26058:	1afffff8 	bne	26040 <UG_ImageShow+0x24>
   2605c:	e5d30018 	ldrb	r0, [r3, #24]
   26060:	e3500003 	cmp	r0, #3
   26064:	1afffff5 	bne	26040 <UG_ImageShow+0x24>
   26068:	e5d30019 	ldrb	r0, [r3, #25]
   2606c:	e1500001 	cmp	r0, r1
   26070:	1afffff2 	bne	26040 <UG_ImageShow+0x24>
   26074:	e3822068 	orr	r2, r2, #104	; 0x68
   26078:	e3a00000 	mov	r0, #0
   2607c:	e5c32000 	strb	r2, [r3]
   26080:	e12fff1e 	bx	lr
   26084:	e3e00000 	mvn	r0, #0
   26088:	e12fff1e 	bx	lr

0002608c <UG_ImageHide>:
   2608c:	e5d0c000 	ldrb	ip, [r0]
   26090:	e5903004 	ldr	r3, [r0, #4]
   26094:	e35c0000 	cmp	ip, #0
   26098:	0a000016 	beq	260f8 <UG_ImageHide+0x6c>
   2609c:	e24cc001 	sub	ip, ip, #1
   260a0:	e6ef207c 	uxtb	r2, ip
   260a4:	e283c020 	add	ip, r3, #32
   260a8:	e08cc282 	add	ip, ip, r2, lsl #5
   260ac:	ea000002 	b	260bc <UG_ImageHide+0x30>
   260b0:	e2833020 	add	r3, r3, #32
   260b4:	e153000c 	cmp	r3, ip
   260b8:	0a00000e 	beq	260f8 <UG_ImageHide+0x6c>
   260bc:	e5d32000 	ldrb	r2, [r3]
   260c0:	e2020003 	and	r0, r2, #3
   260c4:	e3500002 	cmp	r0, #2
   260c8:	1afffff8 	bne	260b0 <UG_ImageHide+0x24>
   260cc:	e5d30018 	ldrb	r0, [r3, #24]
   260d0:	e3500003 	cmp	r0, #3
   260d4:	1afffff5 	bne	260b0 <UG_ImageHide+0x24>
   260d8:	e5d30019 	ldrb	r0, [r3, #25]
   260dc:	e1500001 	cmp	r0, r1
   260e0:	1afffff2 	bne	260b0 <UG_ImageHide+0x24>
   260e4:	e3c22008 	bic	r2, r2, #8
   260e8:	e3822020 	orr	r2, r2, #32
   260ec:	e3a00000 	mov	r0, #0
   260f0:	e5c32000 	strb	r2, [r3]
   260f4:	e12fff1e 	bx	lr
   260f8:	e3e00000 	mvn	r0, #0
   260fc:	e12fff1e 	bx	lr

00026100 <UG_ImageSetBMP>:
   26100:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   26104:	e5d0e000 	ldrb	lr, [r0]
   26108:	e5903004 	ldr	r3, [r0, #4]
   2610c:	e35e0000 	cmp	lr, #0
   26110:	0a000019 	beq	2617c <UG_ImageSetBMP+0x7c>
   26114:	e24ee001 	sub	lr, lr, #1
   26118:	e6ef007e 	uxtb	r0, lr
   2611c:	e283e020 	add	lr, r3, #32
   26120:	e08ee280 	add	lr, lr, r0, lsl #5
   26124:	ea000002 	b	26134 <UG_ImageSetBMP+0x34>
   26128:	e2833020 	add	r3, r3, #32
   2612c:	e153000e 	cmp	r3, lr
   26130:	0a000011 	beq	2617c <UG_ImageSetBMP+0x7c>
   26134:	e5d3c000 	ldrb	ip, [r3]
   26138:	e20c0003 	and	r0, ip, #3
   2613c:	e3500002 	cmp	r0, #2
   26140:	1afffff8 	bne	26128 <UG_ImageSetBMP+0x28>
   26144:	e5d30018 	ldrb	r0, [r3, #24]
   26148:	e3500003 	cmp	r0, #3
   2614c:	1afffff5 	bne	26128 <UG_ImageSetBMP+0x28>
   26150:	e5d30019 	ldrb	r0, [r3, #25]
   26154:	e1500001 	cmp	r0, r1
   26158:	1afffff2 	bne	26128 <UG_ImageSetBMP+0x28>
   2615c:	e3a0e001 	mov	lr, #1
   26160:	e593101c 	ldr	r1, [r3, #28]
   26164:	e38cc060 	orr	ip, ip, #96	; 0x60
   26168:	e5c1e004 	strb	lr, [r1, #4]
   2616c:	e5812000 	str	r2, [r1]
   26170:	e3a00000 	mov	r0, #0
   26174:	e5c3c000 	strb	ip, [r3]
   26178:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   2617c:	e3e00000 	mvn	r0, #0
   26180:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00026184 <CUGUI::SetPixel(short, short, unsigned char)>:
   26184:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   26188:	e59f4068 	ldr	r4, [pc, #104]	; 261f8 <CUGUI::SetPixel(short, short, unsigned char)+0x74>
   2618c:	e1a05000 	mov	r5, r0
   26190:	e5940000 	ldr	r0, [r4]
   26194:	e1a06001 	mov	r6, r1
   26198:	e3500000 	cmp	r0, #0
   2619c:	e1a07002 	mov	r7, r2
   261a0:	0a00000e 	beq	261e0 <CUGUI::SetPixel(short, short, unsigned char)+0x5c>
   261a4:	e5900000 	ldr	r0, [r0]
   261a8:	e3500000 	cmp	r0, #0
   261ac:	0a000004 	beq	261c4 <CUGUI::SetPixel(short, short, unsigned char)+0x40>
   261b0:	e1a03007 	mov	r3, r7
   261b4:	e1a02006 	mov	r2, r6
   261b8:	e1a01005 	mov	r1, r5
   261bc:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   261c0:	ea004345 	b	36edc <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned char)>
   261c4:	e59f0030 	ldr	r0, [pc, #48]	; 261fc <CUGUI::SetPixel(short, short, unsigned char)+0x78>
   261c8:	e3a02055 	mov	r2, #85	; 0x55
   261cc:	e59f102c 	ldr	r1, [pc, #44]	; 26200 <CUGUI::SetPixel(short, short, unsigned char)+0x7c>
   261d0:	eb00436a 	bl	36f80 <assertion_failed>
   261d4:	e5943000 	ldr	r3, [r4]
   261d8:	e5930000 	ldr	r0, [r3]
   261dc:	eafffff3 	b	261b0 <CUGUI::SetPixel(short, short, unsigned char)+0x2c>
   261e0:	e59f001c 	ldr	r0, [pc, #28]	; 26204 <CUGUI::SetPixel(short, short, unsigned char)+0x80>
   261e4:	e3a02054 	mov	r2, #84	; 0x54
   261e8:	e59f1010 	ldr	r1, [pc, #16]	; 26200 <CUGUI::SetPixel(short, short, unsigned char)+0x7c>
   261ec:	eb004363 	bl	36f80 <assertion_failed>
   261f0:	e5940000 	ldr	r0, [r4]
   261f4:	eaffffea 	b	261a4 <CUGUI::SetPixel(short, short, unsigned char)+0x20>
   261f8:	0017af1c 	.word	0x0017af1c
   261fc:	0004a044 	.word	0x0004a044
   26200:	0004a028 	.word	0x0004a028
   26204:	0004a034 	.word	0x0004a034

00026208 <CUGUI::CUGUI(CScreenDevice*)>:
   26208:	e3a03000 	mov	r3, #0
   2620c:	e92d4070 	push	{r4, r5, r6, lr}
   26210:	e59f5034 	ldr	r5, [pc, #52]	; 2624c <CUGUI::CUGUI(CScreenDevice*)+0x44>
   26214:	e1a04000 	mov	r4, r0
   26218:	e5952000 	ldr	r2, [r5]
   2621c:	e5801000 	str	r1, [r0]
   26220:	e1520003 	cmp	r2, r3
   26224:	e5803064 	str	r3, [r0, #100]	; 0x64
   26228:	e5803068 	str	r3, [r0, #104]	; 0x68
   2622c:	0a000003 	beq	26240 <CUGUI::CUGUI(CScreenDevice*)+0x38>
   26230:	e3a02010 	mov	r2, #16
   26234:	e59f1014 	ldr	r1, [pc, #20]	; 26250 <CUGUI::CUGUI(CScreenDevice*)+0x48>
   26238:	e59f0014 	ldr	r0, [pc, #20]	; 26254 <CUGUI::CUGUI(CScreenDevice*)+0x4c>
   2623c:	eb00434f 	bl	36f80 <assertion_failed>
   26240:	e5854000 	str	r4, [r5]
   26244:	e1a00004 	mov	r0, r4
   26248:	e8bd8070 	pop	{r4, r5, r6, pc}
   2624c:	0017af1c 	.word	0x0017af1c
   26250:	0004a028 	.word	0x0004a028
   26254:	0004a05c 	.word	0x0004a05c

00026258 <CUGUI::~CUGUI()>:
   26258:	e3a02000 	mov	r2, #0
   2625c:	e59f3004 	ldr	r3, [pc, #4]	; 26268 <CUGUI::~CUGUI()+0x10>
   26260:	e5832000 	str	r2, [r3]
   26264:	e12fff1e 	bx	lr
   26268:	0017af1c 	.word	0x0017af1c

0002626c <CUGUI::Initialize()>:
   2626c:	e92d4070 	push	{r4, r5, r6, lr}
   26270:	e1a04000 	mov	r4, r0
   26274:	e5900000 	ldr	r0, [r0]
   26278:	e3500000 	cmp	r0, #0
   2627c:	0a000031 	beq	26348 <CUGUI::Initialize()+0xdc>
   26280:	eb003f2a 	bl	35f30 <CScreenDevice::GetWidth() const>
   26284:	e1a06000 	mov	r6, r0
   26288:	e5940000 	ldr	r0, [r4]
   2628c:	eb003f2b 	bl	35f40 <CScreenDevice::GetHeight() const>
   26290:	e2845004 	add	r5, r4, #4
   26294:	e6bf3070 	sxth	r3, r0
   26298:	e6bf2076 	sxth	r2, r6
   2629c:	e1a00005 	mov	r0, r5
   262a0:	e59f10d4 	ldr	r1, [pc, #212]	; 2637c <CUGUI::Initialize()+0x110>
   262a4:	ebffe898 	bl	2050c <UG_Init>
   262a8:	e3500000 	cmp	r0, #0
   262ac:	ba000023 	blt	26340 <CUGUI::Initialize()+0xd4>
   262b0:	e1a00005 	mov	r0, r5
   262b4:	ebffe8bb 	bl	205a8 <UG_SelectGUI>
   262b8:	e3500000 	cmp	r0, #0
   262bc:	ba00001f 	blt	26340 <CUGUI::Initialize()+0xd4>
   262c0:	eb00447e 	bl	374c0 <CDeviceNameService::Get()>
   262c4:	e3a02000 	mov	r2, #0
   262c8:	e59f10b0 	ldr	r1, [pc, #176]	; 26380 <CUGUI::Initialize()+0x114>
   262cc:	eb004439 	bl	373b8 <CDeviceNameService::GetDevice(char const*, int)>
   262d0:	e2505000 	subs	r5, r0, #0
   262d4:	0a00000a 	beq	26304 <CUGUI::Initialize()+0x98>
   262d8:	e5940000 	ldr	r0, [r4]
   262dc:	eb003f13 	bl	35f30 <CScreenDevice::GetWidth() const>
   262e0:	e1a06000 	mov	r6, r0
   262e4:	e5940000 	ldr	r0, [r4]
   262e8:	eb003f14 	bl	35f40 <CScreenDevice::GetHeight() const>
   262ec:	e1a01006 	mov	r1, r6
   262f0:	e1a02000 	mov	r2, r0
   262f4:	e1a00005 	mov	r0, r5
   262f8:	eb001d8f 	bl	2d93c <CUSBMouseDevice::Setup(unsigned int, unsigned int)>
   262fc:	e3500000 	cmp	r0, #0
   26300:	1a000016 	bne	26360 <CUGUI::Initialize()+0xf4>
   26304:	eb00446d 	bl	374c0 <CDeviceNameService::Get()>
   26308:	e3a02000 	mov	r2, #0
   2630c:	e59f1070 	ldr	r1, [pc, #112]	; 26384 <CUGUI::Initialize()+0x118>
   26310:	eb004428 	bl	373b8 <CDeviceNameService::GetDevice(char const*, int)>
   26314:	e3500000 	cmp	r0, #0
   26318:	e5840064 	str	r0, [r4, #100]	; 0x64
   2631c:	0a000001 	beq	26328 <CUGUI::Initialize()+0xbc>
   26320:	e59f1060 	ldr	r1, [pc, #96]	; 26388 <CUGUI::Initialize()+0x11c>
   26324:	eb003143 	bl	32838 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))>
   26328:	e3e01000 	mvn	r1, #0
   2632c:	e3a02000 	mov	r2, #0
   26330:	e1a00001 	mov	r0, r1
   26334:	ebffefb5 	bl	22210 <UG_TouchUpdate>
   26338:	e3a00001 	mov	r0, #1
   2633c:	e8bd8070 	pop	{r4, r5, r6, pc}
   26340:	e3a00000 	mov	r0, #0
   26344:	e8bd8070 	pop	{r4, r5, r6, pc}
   26348:	e59f003c 	ldr	r0, [pc, #60]	; 2638c <CUGUI::Initialize()+0x120>
   2634c:	e3a0201e 	mov	r2, #30
   26350:	e59f1038 	ldr	r1, [pc, #56]	; 26390 <CUGUI::Initialize()+0x124>
   26354:	eb004309 	bl	36f80 <assertion_failed>
   26358:	e5940000 	ldr	r0, [r4]
   2635c:	eaffffc7 	b	26280 <CUGUI::Initialize()+0x14>
   26360:	e3a01001 	mov	r1, #1
   26364:	e1a00005 	mov	r0, r5
   26368:	eb001d79 	bl	2d954 <CUSBMouseDevice::ShowCursor(int)>
   2636c:	e1a00005 	mov	r0, r5
   26370:	e59f101c 	ldr	r1, [pc, #28]	; 26394 <CUGUI::Initialize()+0x128>
   26374:	eb001d72 	bl	2d944 <CUSBMouseDevice::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))>
   26378:	eaffffe1 	b	26304 <CUGUI::Initialize()+0x98>
   2637c:	00026184 	.word	0x00026184
   26380:	0004a07c 	.word	0x0004a07c
   26384:	0004a084 	.word	0x0004a084
   26388:	000264d4 	.word	0x000264d4
   2638c:	0004a06c 	.word	0x0004a06c
   26390:	0004a028 	.word	0x0004a028
   26394:	00026428 	.word	0x00026428

00026398 <CUGUI::Update()>:
   26398:	e92d4070 	push	{r4, r5, r6, lr}
   2639c:	e1a04000 	mov	r4, r0
   263a0:	ebfff620 	bl	23c28 <UG_Update>
   263a4:	e5943064 	ldr	r3, [r4, #100]	; 0x64
   263a8:	e3530000 	cmp	r3, #0
   263ac:	08bd8070 	popeq	{r4, r5, r6, pc}
   263b0:	eb003b60 	bl	35138 <CTimer::Get()>
   263b4:	eb003906 	bl	347d4 <CTimer::GetClockTicks()>
   263b8:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   263bc:	e59f201c 	ldr	r2, [pc, #28]	; 263e0 <CUGUI::Update()+0x48>
   263c0:	e0403003 	sub	r3, r0, r3
   263c4:	e1530002 	cmp	r3, r2
   263c8:	e1a05000 	mov	r5, r0
   263cc:	98bd8070 	popls	{r4, r5, r6, pc}
   263d0:	e5940064 	ldr	r0, [r4, #100]	; 0x64
   263d4:	eb003095 	bl	32630 <CTouchScreenDevice::Update()>
   263d8:	e5845068 	str	r5, [r4, #104]	; 0x68
   263dc:	e8bd8070 	pop	{r4, r5, r6, pc}
   263e0:	00004119 	.word	0x00004119

000263e4 <CUGUI::MouseEventHandler(TMouseEvent, unsigned int, unsigned int, unsigned int)>:
   263e4:	e3510001 	cmp	r1, #1
   263e8:	e59d0000 	ldr	r0, [sp]
   263ec:	0a000007 	beq	26410 <CUGUI::MouseEventHandler(TMouseEvent, unsigned int, unsigned int, unsigned int)+0x2c>
   263f0:	e3510002 	cmp	r1, #2
   263f4:	112fff1e 	bxne	lr
   263f8:	e3120001 	tst	r2, #1
   263fc:	012fff1e 	bxeq	lr
   26400:	e3e01000 	mvn	r1, #0
   26404:	e3a02000 	mov	r2, #0
   26408:	e1a00001 	mov	r0, r1
   2640c:	eaffef7f 	b	22210 <UG_TouchUpdate>
   26410:	e3120001 	tst	r2, #1
   26414:	012fff1e 	bxeq	lr
   26418:	e1a02001 	mov	r2, r1
   2641c:	e6bf1070 	sxth	r1, r0
   26420:	e6bf0073 	sxth	r0, r3
   26424:	eaffef79 	b	22210 <UG_TouchUpdate>

00026428 <CUGUI::MouseEventStub(TMouseEvent, unsigned int, unsigned int, unsigned int)>:
   26428:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2642c:	e59f4054 	ldr	r4, [pc, #84]	; 26488 <CUGUI::MouseEventStub(TMouseEvent, unsigned int, unsigned int, unsigned int)+0x60>
   26430:	e1a05000 	mov	r5, r0
   26434:	e5940000 	ldr	r0, [r4]
   26438:	e24dd014 	sub	sp, sp, #20
   2643c:	e3500000 	cmp	r0, #0
   26440:	e1a06001 	mov	r6, r1
   26444:	e1a07002 	mov	r7, r2
   26448:	0a000006 	beq	26468 <CUGUI::MouseEventStub(TMouseEvent, unsigned int, unsigned int, unsigned int)+0x40>
   2644c:	e58d3000 	str	r3, [sp]
   26450:	e1a02006 	mov	r2, r6
   26454:	e1a03007 	mov	r3, r7
   26458:	e1a01005 	mov	r1, r5
   2645c:	ebffffe0 	bl	263e4 <CUGUI::MouseEventHandler(TMouseEvent, unsigned int, unsigned int, unsigned int)>
   26460:	e28dd014 	add	sp, sp, #20
   26464:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   26468:	e59f001c 	ldr	r0, [pc, #28]	; 2648c <CUGUI::MouseEventStub(TMouseEvent, unsigned int, unsigned int, unsigned int)+0x64>
   2646c:	e3a02072 	mov	r2, #114	; 0x72
   26470:	e59f1018 	ldr	r1, [pc, #24]	; 26490 <CUGUI::MouseEventStub(TMouseEvent, unsigned int, unsigned int, unsigned int)+0x68>
   26474:	e58d300c 	str	r3, [sp, #12]
   26478:	eb0042c0 	bl	36f80 <assertion_failed>
   2647c:	e5940000 	ldr	r0, [r4]
   26480:	e59d300c 	ldr	r3, [sp, #12]
   26484:	eafffff0 	b	2644c <CUGUI::MouseEventStub(TMouseEvent, unsigned int, unsigned int, unsigned int)+0x24>
   26488:	0017af1c 	.word	0x0017af1c
   2648c:	0004a034 	.word	0x0004a034
   26490:	0004a028 	.word	0x0004a028

00026494 <CUGUI::TouchScreenEventHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)>:
   26494:	e3510000 	cmp	r1, #0
   26498:	e59d0000 	ldr	r0, [sp]
   2649c:	0a000006 	beq	264bc <CUGUI::TouchScreenEventHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x28>
   264a0:	e3510001 	cmp	r1, #1
   264a4:	112fff1e 	bxne	lr
   264a8:	e3520000 	cmp	r2, #0
   264ac:	112fff1e 	bxne	lr
   264b0:	e3e01000 	mvn	r1, #0
   264b4:	e1a00001 	mov	r0, r1
   264b8:	eaffef54 	b	22210 <UG_TouchUpdate>
   264bc:	e3520000 	cmp	r2, #0
   264c0:	112fff1e 	bxne	lr
   264c4:	e6bf1070 	sxth	r1, r0
   264c8:	e3a02001 	mov	r2, #1
   264cc:	e6bf0073 	sxth	r0, r3
   264d0:	eaffef4e 	b	22210 <UG_TouchUpdate>

000264d4 <CUGUI::TouchScreenEventStub(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)>:
   264d4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   264d8:	e59f4054 	ldr	r4, [pc, #84]	; 26534 <CUGUI::TouchScreenEventStub(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x60>
   264dc:	e1a05000 	mov	r5, r0
   264e0:	e5940000 	ldr	r0, [r4]
   264e4:	e24dd014 	sub	sp, sp, #20
   264e8:	e3500000 	cmp	r0, #0
   264ec:	e1a06001 	mov	r6, r1
   264f0:	e1a07002 	mov	r7, r2
   264f4:	0a000006 	beq	26514 <CUGUI::TouchScreenEventStub(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x40>
   264f8:	e58d3000 	str	r3, [sp]
   264fc:	e1a02006 	mov	r2, r6
   26500:	e1a03007 	mov	r3, r7
   26504:	e1a01005 	mov	r1, r5
   26508:	ebffffe1 	bl	26494 <CUGUI::TouchScreenEventHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)>
   2650c:	e28dd014 	add	sp, sp, #20
   26510:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   26514:	e59f001c 	ldr	r0, [pc, #28]	; 26538 <CUGUI::TouchScreenEventStub(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x64>
   26518:	e3a0208f 	mov	r2, #143	; 0x8f
   2651c:	e59f1018 	ldr	r1, [pc, #24]	; 2653c <CUGUI::TouchScreenEventStub(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x68>
   26520:	e58d300c 	str	r3, [sp, #12]
   26524:	eb004295 	bl	36f80 <assertion_failed>
   26528:	e5940000 	ldr	r0, [r4]
   2652c:	e59d300c 	ldr	r3, [sp, #12]
   26530:	eafffff0 	b	264f8 <CUGUI::TouchScreenEventStub(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x24>
   26534:	0017af1c 	.word	0x0017af1c
   26538:	0004a034 	.word	0x0004a034
   2653c:	0004a028 	.word	0x0004a028

00026540 <CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)>:
   26540:	e92d4070 	push	{r4, r5, r6, lr}
   26544:	e2525000 	subs	r5, r2, #0
   26548:	e1a04001 	mov	r4, r1
   2654c:	0a00000a 	beq	2657c <CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)+0x3c>
   26550:	e354000f 	cmp	r4, #15
   26554:	9a000003 	bls	26568 <CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)+0x28>
   26558:	e3a02f96 	mov	r2, #600	; 0x258
   2655c:	e59f102c 	ldr	r1, [pc, #44]	; 26590 <CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)+0x50>
   26560:	e59f002c 	ldr	r0, [pc, #44]	; 26594 <CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)+0x54>
   26564:	eb004285 	bl	36f80 <assertion_failed>
   26568:	e3a03000 	mov	r3, #0
   2656c:	e2844016 	add	r4, r4, #22
   26570:	e0854104 	add	r4, r5, r4, lsl #2
   26574:	e5843004 	str	r3, [r4, #4]
   26578:	e8bd8070 	pop	{r4, r5, r6, pc}
   2657c:	e59f2014 	ldr	r2, [pc, #20]	; 26598 <CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)+0x58>
   26580:	e59f1008 	ldr	r1, [pc, #8]	; 26590 <CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)+0x50>
   26584:	e59f0010 	ldr	r0, [pc, #16]	; 2659c <CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)+0x5c>
   26588:	eb00427c 	bl	36f80 <assertion_failed>
   2658c:	eaffffef 	b	26550 <CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)+0x10>
   26590:	0004a0b0 	.word	0x0004a0b0
   26594:	0004a0cc 	.word	0x0004a0cc
   26598:	00000255 	.word	0x00000255
   2659c:	0004a0c0 	.word	0x0004a0c0

000265a0 <CDWHCIDevice::~CDWHCIDevice()>:
   265a0:	e3a03000 	mov	r3, #0
   265a4:	e92d4010 	push	{r4, lr}
   265a8:	e1a04000 	mov	r4, r0
   265ac:	e59f201c 	ldr	r2, [pc, #28]	; 265d0 <CDWHCIDevice::~CDWHCIDevice()+0x30>
   265b0:	e5803008 	str	r3, [r0, #8]
   265b4:	e1c020f0 	strd	r2, [r0]
   265b8:	e28000a4 	add	r0, r0, #164	; 0xa4
   265bc:	eb001aee 	bl	2d17c <CDWHCIRootPort::~CDWHCIRootPort()>
   265c0:	e1a00004 	mov	r0, r4
   265c4:	eb001120 	bl	2aa4c <CUSBHostController::~CUSBHostController()>
   265c8:	e1a00004 	mov	r0, r4
   265cc:	e8bd8010 	pop	{r4, pc}
   265d0:	0004a094 	.word	0x0004a094

000265d4 <CDWHCIDevice::~CDWHCIDevice()>:
   265d4:	e3a03000 	mov	r3, #0
   265d8:	e92d4010 	push	{r4, lr}
   265dc:	e1a04000 	mov	r4, r0
   265e0:	e59f2028 	ldr	r2, [pc, #40]	; 26610 <CDWHCIDevice::~CDWHCIDevice()+0x3c>
   265e4:	e5803008 	str	r3, [r0, #8]
   265e8:	e1c020f0 	strd	r2, [r0]
   265ec:	e28000a4 	add	r0, r0, #164	; 0xa4
   265f0:	eb001ae1 	bl	2d17c <CDWHCIRootPort::~CDWHCIRootPort()>
   265f4:	e1a00004 	mov	r0, r4
   265f8:	eb001113 	bl	2aa4c <CUSBHostController::~CUSBHostController()>
   265fc:	e1a00004 	mov	r0, r4
   26600:	e3a010ac 	mov	r1, #172	; 0xac
   26604:	eb003747 	bl	34328 <operator delete(void*, unsigned int)>
   26608:	e1a00004 	mov	r0, r4
   2660c:	e8bd8010 	pop	{r4, pc}
   26610:	0004a094 	.word	0x0004a094

00026614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>:
   26614:	e92d4030 	push	{r4, r5, lr}
   26618:	e24dd01c 	sub	sp, sp, #28
   2661c:	e1a05000 	mov	r5, r0
   26620:	e28d000c 	add	r0, sp, #12
   26624:	eb00091a 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   26628:	e3a03000 	mov	r3, #0
   2662c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   26630:	eb0043ce 	bl	37570 <CLogger::Get()>
   26634:	e1a04000 	mov	r4, r0
   26638:	e28d000c 	add	r0, sp, #12
   2663c:	eb00091d 	bl	28ab8 <CDWHCIRegister::Read()>
   26640:	e59f3020 	ldr	r3, [pc, #32]	; 26668 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]+0x54>
   26644:	e88d0021 	stm	sp, {r0, r5}
   26648:	e3a02004 	mov	r2, #4
   2664c:	e1a00004 	mov	r0, r4
   26650:	e59f1014 	ldr	r1, [pc, #20]	; 2666c <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]+0x58>
   26654:	eb0044a5 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   26658:	e28d000c 	add	r0, sp, #12
   2665c:	eb000914 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26660:	e28dd01c 	add	sp, sp, #28
   26664:	e8bd8030 	pop	{r4, r5, pc}
   26668:	0004a0ec 	.word	0x0004a0ec
   2666c:	0004a0a4 	.word	0x0004a0a4

00026670 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)>:
   26670:	e92d4070 	push	{r4, r5, r6, lr}
   26674:	e1a04000 	mov	r4, r0
   26678:	e1a06001 	mov	r6, r1
   2667c:	e1a05002 	mov	r5, r2
   26680:	eb0010ed 	bl	2aa3c <CUSBHostController::CUSBHostController()>
   26684:	e3a03000 	mov	r3, #0
   26688:	e3a00001 	mov	r0, #1
   2668c:	e59fc0b4 	ldr	ip, [pc, #180]	; 26748 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0xd8>
   26690:	e5843010 	str	r3, [r4, #16]
   26694:	e584300c 	str	r3, [r4, #12]
   26698:	e584309c 	str	r3, [r4, #156]	; 0x9c
   2669c:	e58430a0 	str	r3, [r4, #160]	; 0xa0
   266a0:	e5840014 	str	r0, [r4, #20]
   266a4:	e5840058 	str	r0, [r4, #88]	; 0x58
   266a8:	e5846004 	str	r6, [r4, #4]
   266ac:	e5845008 	str	r5, [r4, #8]
   266b0:	e584c000 	str	ip, [r4]
   266b4:	e1a01004 	mov	r1, r4
   266b8:	e28400a4 	add	r0, r4, #164	; 0xa4
   266bc:	eb001a9e 	bl	2d13c <CDWHCIRootPort::CDWHCIRootPort(CDWHCIDevice*)>
   266c0:	e5943004 	ldr	r3, [r4, #4]
   266c4:	e3530000 	cmp	r3, #0
   266c8:	0a000012 	beq	26718 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0xa8>
   266cc:	e5943008 	ldr	r3, [r4, #8]
   266d0:	e3530000 	cmp	r3, #0
   266d4:	0a000016 	beq	26734 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0xc4>
   266d8:	e3a01000 	mov	r1, #0
   266dc:	e2843014 	add	r3, r4, #20
   266e0:	e2842054 	add	r2, r4, #84	; 0x54
   266e4:	e5a31004 	str	r1, [r3, #4]!
   266e8:	e1520003 	cmp	r2, r3
   266ec:	1afffffc 	bne	266e4 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0x74>
   266f0:	e3a03000 	mov	r3, #0
   266f4:	e1a01003 	mov	r1, r3
   266f8:	e2832016 	add	r2, r3, #22
   266fc:	e2833001 	add	r3, r3, #1
   26700:	e0842102 	add	r2, r4, r2, lsl #2
   26704:	e3530010 	cmp	r3, #16
   26708:	e5821004 	str	r1, [r2, #4]
   2670c:	1afffff9 	bne	266f8 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0x88>
   26710:	e1a00004 	mov	r0, r4
   26714:	e8bd8070 	pop	{r4, r5, r6, pc}
   26718:	e3a02045 	mov	r2, #69	; 0x45
   2671c:	e59f1028 	ldr	r1, [pc, #40]	; 2674c <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0xdc>
   26720:	e59f0028 	ldr	r0, [pc, #40]	; 26750 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0xe0>
   26724:	eb004215 	bl	36f80 <assertion_failed>
   26728:	e5943008 	ldr	r3, [r4, #8]
   2672c:	e3530000 	cmp	r3, #0
   26730:	1affffe8 	bne	266d8 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0x68>
   26734:	e3a02046 	mov	r2, #70	; 0x46
   26738:	e59f100c 	ldr	r1, [pc, #12]	; 2674c <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0xdc>
   2673c:	e59f0010 	ldr	r0, [pc, #16]	; 26754 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0xe4>
   26740:	eb00420e 	bl	36f80 <assertion_failed>
   26744:	eaffffe3 	b	266d8 <CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)+0x68>
   26748:	0004a094 	.word	0x0004a094
   2674c:	0004a0b0 	.word	0x0004a0b0
   26750:	0004a0f8 	.word	0x0004a0f8
   26754:	0004a110 	.word	0x0004a110

00026758 <CDWHCIDevice::GetPortSpeed()>:
   26758:	e92d4010 	push	{r4, lr}
   2675c:	e24dd010 	sub	sp, sp, #16
   26760:	e59f103c 	ldr	r1, [pc, #60]	; 267a4 <CDWHCIDevice::GetPortSpeed()+0x4c>
   26764:	e28d0004 	add	r0, sp, #4
   26768:	eb0008c9 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   2676c:	e28d0004 	add	r0, sp, #4
   26770:	eb0008d0 	bl	28ab8 <CDWHCIRegister::Read()>
   26774:	e1a008a0 	lsr	r0, r0, #17
   26778:	e2000003 	and	r0, r0, #3
   2677c:	e3500003 	cmp	r0, #3
   26780:	01a04000 	moveq	r4, r0
   26784:	159f301c 	ldrne	r3, [pc, #28]	; 267a8 <CDWHCIDevice::GetPortSpeed()+0x50>
   26788:	10830000 	addne	r0, r3, r0
   2678c:	15d04020 	ldrbne	r4, [r0, #32]
   26790:	e28d0004 	add	r0, sp, #4
   26794:	eb0008c6 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26798:	e1a00004 	mov	r0, r4
   2679c:	e28dd010 	add	sp, sp, #16
   267a0:	e8bd8010 	pop	{r4, pc}
   267a4:	20980440 	.word	0x20980440
   267a8:	0004a08c 	.word	0x0004a08c

000267ac <CDWHCIDevice::OvercurrentDetected()>:
   267ac:	e92d4010 	push	{r4, lr}
   267b0:	e24dd010 	sub	sp, sp, #16
   267b4:	e59f1028 	ldr	r1, [pc, #40]	; 267e4 <CDWHCIDevice::OvercurrentDetected()+0x38>
   267b8:	e28d0004 	add	r0, sp, #4
   267bc:	eb0008b4 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   267c0:	e28d0004 	add	r0, sp, #4
   267c4:	eb0008bb 	bl	28ab8 <CDWHCIRegister::Read()>
   267c8:	e1a04000 	mov	r4, r0
   267cc:	e28d0004 	add	r0, sp, #4
   267d0:	eb0008b7 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   267d4:	e1a00224 	lsr	r0, r4, #4
   267d8:	e2000001 	and	r0, r0, #1
   267dc:	e28dd010 	add	sp, sp, #16
   267e0:	e8bd8010 	pop	{r4, pc}
   267e4:	20980440 	.word	0x20980440

000267e8 <CDWHCIDevice::DisableRootPort()>:
   267e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   267ec:	e24dd014 	sub	sp, sp, #20
   267f0:	e59f1030 	ldr	r1, [pc, #48]	; 26828 <CDWHCIDevice::DisableRootPort()+0x40>
   267f4:	e28d0004 	add	r0, sp, #4
   267f8:	eb0008a5 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   267fc:	e28d0004 	add	r0, sp, #4
   26800:	eb0008ac 	bl	28ab8 <CDWHCIRegister::Read()>
   26804:	e3e01a01 	mvn	r1, #4096	; 0x1000
   26808:	e28d0004 	add	r0, sp, #4
   2680c:	eb0008e2 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26810:	e28d0004 	add	r0, sp, #4
   26814:	eb0008ae 	bl	28ad4 <CDWHCIRegister::Write()>
   26818:	e28d0004 	add	r0, sp, #4
   2681c:	eb0008a4 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26820:	e28dd014 	add	sp, sp, #20
   26824:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   26828:	20980440 	.word	0x20980440

0002682c <CDWHCIDevice::PowerOn()>:
   2682c:	e92d4010 	push	{r4, lr}
   26830:	e24dd028 	sub	sp, sp, #40	; 0x28
   26834:	e28d000c 	add	r0, sp, #12
   26838:	eb003201 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   2683c:	e3a03000 	mov	r3, #0
   26840:	e58d3000 	str	r3, [sp]
   26844:	e3a03014 	mov	r3, #20
   26848:	e3a0c003 	mov	ip, #3
   2684c:	e08d2003 	add	r2, sp, r3
   26850:	e59f1038 	ldr	r1, [pc, #56]	; 26890 <CDWHCIDevice::PowerOn()+0x64>
   26854:	e28d000c 	add	r0, sp, #12
   26858:	e58dc020 	str	ip, [sp, #32]
   2685c:	e58dc024 	str	ip, [sp, #36]	; 0x24
   26860:	eb00323e 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   26864:	e2504000 	subs	r4, r0, #0
   26868:	159d4024 	ldrne	r4, [sp, #36]	; 0x24
   2686c:	e28d000c 	add	r0, sp, #12
   26870:	12044003 	andne	r4, r4, #3
   26874:	12444001 	subne	r4, r4, #1
   26878:	116f4f14 	clzne	r4, r4
   2687c:	11a042a4 	lsrne	r4, r4, #5
   26880:	eb0031f5 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   26884:	e1a00004 	mov	r0, r4
   26888:	e28dd028 	add	sp, sp, #40	; 0x28
   2688c:	e8bd8010 	pop	{r4, pc}
   26890:	00028001 	.word	0x00028001

00026894 <CDWHCIDevice::EnableGlobalInterrupts()>:
   26894:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   26898:	e24dd014 	sub	sp, sp, #20
   2689c:	e59f1030 	ldr	r1, [pc, #48]	; 268d4 <CDWHCIDevice::EnableGlobalInterrupts()+0x40>
   268a0:	e28d0004 	add	r0, sp, #4
   268a4:	eb00087a 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   268a8:	e28d0004 	add	r0, sp, #4
   268ac:	eb000881 	bl	28ab8 <CDWHCIRegister::Read()>
   268b0:	e3a01001 	mov	r1, #1
   268b4:	e28d0004 	add	r0, sp, #4
   268b8:	eb0008c7 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   268bc:	e28d0004 	add	r0, sp, #4
   268c0:	eb000883 	bl	28ad4 <CDWHCIRegister::Write()>
   268c4:	e28d0004 	add	r0, sp, #4
   268c8:	eb000879 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   268cc:	e28dd014 	add	sp, sp, #20
   268d0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   268d4:	20980008 	.word	0x20980008

000268d8 <CDWHCIDevice::EnableCommonInterrupts()>:
   268d8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   268dc:	e24dd014 	sub	sp, sp, #20
   268e0:	e59f1024 	ldr	r1, [pc, #36]	; 2690c <CDWHCIDevice::EnableCommonInterrupts()+0x34>
   268e4:	e28d0004 	add	r0, sp, #4
   268e8:	eb000869 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   268ec:	e28d0004 	add	r0, sp, #4
   268f0:	eb000900 	bl	28cf8 <CDWHCIRegister::SetAll()>
   268f4:	e28d0004 	add	r0, sp, #4
   268f8:	eb000875 	bl	28ad4 <CDWHCIRegister::Write()>
   268fc:	e28d0004 	add	r0, sp, #4
   26900:	eb00086b 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26904:	e28dd014 	add	sp, sp, #20
   26908:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   2690c:	20980014 	.word	0x20980014

00026910 <CDWHCIDevice::EnableHostInterrupts()>:
   26910:	e92d4010 	push	{r4, lr}
   26914:	e1a04000 	mov	r4, r0
   26918:	e24dd010 	sub	sp, sp, #16
   2691c:	e3a02000 	mov	r2, #0
   26920:	e59f1040 	ldr	r1, [pc, #64]	; 26968 <CDWHCIDevice::EnableHostInterrupts()+0x58>
   26924:	e28d0004 	add	r0, sp, #4
   26928:	eb00085d 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   2692c:	e28d0004 	add	r0, sp, #4
   26930:	eb000867 	bl	28ad4 <CDWHCIRegister::Write()>
   26934:	e1a00004 	mov	r0, r4
   26938:	ebffffe6 	bl	268d8 <CDWHCIDevice::EnableCommonInterrupts()>
   2693c:	e28d0004 	add	r0, sp, #4
   26940:	eb00085c 	bl	28ab8 <CDWHCIRegister::Read()>
   26944:	e3a01402 	mov	r1, #33554432	; 0x2000000
   26948:	e28d0004 	add	r0, sp, #4
   2694c:	eb0008a2 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26950:	e28d0004 	add	r0, sp, #4
   26954:	eb00085e 	bl	28ad4 <CDWHCIRegister::Write()>
   26958:	e28d0004 	add	r0, sp, #4
   2695c:	eb000854 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26960:	e28dd010 	add	sp, sp, #16
   26964:	e8bd8010 	pop	{r4, pc}
   26968:	20980018 	.word	0x20980018

0002696c <CDWHCIDevice::EnableChannelInterrupt(unsigned int)>:
   2696c:	e92d4030 	push	{r4, r5, lr}
   26970:	e1a04000 	mov	r4, r0
   26974:	e24dd014 	sub	sp, sp, #20
   26978:	e1a05001 	mov	r5, r1
   2697c:	e28d0004 	add	r0, sp, #4
   26980:	e59f1054 	ldr	r1, [pc, #84]	; 269dc <CDWHCIDevice::EnableChannelInterrupt(unsigned int)+0x70>
   26984:	eb000842 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   26988:	e5940058 	ldr	r0, [r4, #88]	; 0x58
   2698c:	e3500000 	cmp	r0, #0
   26990:	1a00000f 	bne	269d4 <CDWHCIDevice::EnableChannelInterrupt(unsigned int)+0x68>
   26994:	e28d0004 	add	r0, sp, #4
   26998:	eb000846 	bl	28ab8 <CDWHCIRegister::Read()>
   2699c:	e3a01001 	mov	r1, #1
   269a0:	e28d0004 	add	r0, sp, #4
   269a4:	e1a01511 	lsl	r1, r1, r5
   269a8:	eb00088b 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   269ac:	e28d0004 	add	r0, sp, #4
   269b0:	eb000847 	bl	28ad4 <CDWHCIRegister::Write()>
   269b4:	e5943058 	ldr	r3, [r4, #88]	; 0x58
   269b8:	e3530000 	cmp	r3, #0
   269bc:	0a000000 	beq	269c4 <CDWHCIDevice::EnableChannelInterrupt(unsigned int)+0x58>
   269c0:	eb00368c 	bl	343f8 <LeaveCritical>
   269c4:	e28d0004 	add	r0, sp, #4
   269c8:	eb000839 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   269cc:	e28dd014 	add	sp, sp, #20
   269d0:	e8bd8030 	pop	{r4, r5, pc}
   269d4:	eb00365b 	bl	34348 <EnterCritical>
   269d8:	eaffffed 	b	26994 <CDWHCIDevice::EnableChannelInterrupt(unsigned int)+0x28>
   269dc:	20980418 	.word	0x20980418

000269e0 <CDWHCIDevice::DisableChannelInterrupt(unsigned int)>:
   269e0:	e92d4030 	push	{r4, r5, lr}
   269e4:	e1a04000 	mov	r4, r0
   269e8:	e24dd014 	sub	sp, sp, #20
   269ec:	e1a05001 	mov	r5, r1
   269f0:	e28d0004 	add	r0, sp, #4
   269f4:	e59f1054 	ldr	r1, [pc, #84]	; 26a50 <CDWHCIDevice::DisableChannelInterrupt(unsigned int)+0x70>
   269f8:	eb000825 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   269fc:	e5940058 	ldr	r0, [r4, #88]	; 0x58
   26a00:	e3500000 	cmp	r0, #0
   26a04:	1a00000f 	bne	26a48 <CDWHCIDevice::DisableChannelInterrupt(unsigned int)+0x68>
   26a08:	e28d0004 	add	r0, sp, #4
   26a0c:	eb000829 	bl	28ab8 <CDWHCIRegister::Read()>
   26a10:	e3a01001 	mov	r1, #1
   26a14:	e28d0004 	add	r0, sp, #4
   26a18:	e1e01511 	mvn	r1, r1, lsl r5
   26a1c:	eb00085e 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26a20:	e28d0004 	add	r0, sp, #4
   26a24:	eb00082a 	bl	28ad4 <CDWHCIRegister::Write()>
   26a28:	e5943058 	ldr	r3, [r4, #88]	; 0x58
   26a2c:	e3530000 	cmp	r3, #0
   26a30:	0a000000 	beq	26a38 <CDWHCIDevice::DisableChannelInterrupt(unsigned int)+0x58>
   26a34:	eb00366f 	bl	343f8 <LeaveCritical>
   26a38:	e28d0004 	add	r0, sp, #4
   26a3c:	eb00081c 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26a40:	e28dd014 	add	sp, sp, #20
   26a44:	e8bd8030 	pop	{r4, r5, pc}
   26a48:	eb00363e 	bl	34348 <EnterCritical>
   26a4c:	eaffffed 	b	26a08 <CDWHCIDevice::DisableChannelInterrupt(unsigned int)+0x28>
   26a50:	20980418 	.word	0x20980418

00026a54 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)>:
   26a54:	e92d4070 	push	{r4, r5, r6, lr}
   26a58:	e2514000 	subs	r4, r1, #0
   26a5c:	e24dd048 	sub	sp, sp, #72	; 0x48
   26a60:	e1a06000 	mov	r6, r0
   26a64:	0a0000d9 	beq	26dd0 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x37c>
   26a68:	e1a00004 	mov	r0, r4
   26a6c:	eb00095d 	bl	28fe8 <CDWHCITransferStageData::GetChannelNumber() const>
   26a70:	e596300c 	ldr	r3, [r6, #12]
   26a74:	e1a05000 	mov	r5, r0
   26a78:	e1500003 	cmp	r0, r3
   26a7c:	2a0000ce 	bcs	26dbc <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x368>
   26a80:	e3a01001 	mov	r1, #1
   26a84:	e1a00004 	mov	r0, r4
   26a88:	eb000950 	bl	28fd0 <CDWHCITransferStageData::SetSubState(unsigned int)>
   26a8c:	e59f1360 	ldr	r1, [pc, #864]	; 26df4 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3a0>
   26a90:	e1a05285 	lsl	r5, r5, #5
   26a94:	e0851001 	add	r1, r5, r1
   26a98:	e1a0000d 	mov	r0, sp
   26a9c:	eb0007fc 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   26aa0:	e1a0000d 	mov	r0, sp
   26aa4:	eb000893 	bl	28cf8 <CDWHCIRegister::SetAll()>
   26aa8:	e1a0000d 	mov	r0, sp
   26aac:	eb000808 	bl	28ad4 <CDWHCIRegister::Write()>
   26ab0:	e59f1340 	ldr	r1, [pc, #832]	; 26df8 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3a4>
   26ab4:	e3a02000 	mov	r2, #0
   26ab8:	e0851001 	add	r1, r5, r1
   26abc:	e28d000c 	add	r0, sp, #12
   26ac0:	eb0007f7 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   26ac4:	e1a00004 	mov	r0, r4
   26ac8:	eb000a80 	bl	294d0 <CDWHCITransferStageData::GetBytesToTransfer() const>
   26acc:	e3c014ff 	bic	r1, r0, #-16777216	; 0xff000000
   26ad0:	e3c1173e 	bic	r1, r1, #16252928	; 0xf80000
   26ad4:	e28d000c 	add	r0, sp, #12
   26ad8:	eb00083f 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26adc:	e1a00004 	mov	r0, r4
   26ae0:	eb000a7c 	bl	294d8 <CDWHCITransferStageData::GetPacketsToTransfer() const>
   26ae4:	e59f1310 	ldr	r1, [pc, #784]	; 26dfc <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3a8>
   26ae8:	e0011980 	and	r1, r1, r0, lsl #19
   26aec:	e28d000c 	add	r0, sp, #12
   26af0:	eb000839 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26af4:	e1a00004 	mov	r0, r4
   26af8:	eb000a3f 	bl	293fc <CDWHCITransferStageData::GetPID() const>
   26afc:	e1a01e80 	lsl	r1, r0, #29
   26b00:	e28d000c 	add	r0, sp, #12
   26b04:	eb000834 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26b08:	e28d000c 	add	r0, sp, #12
   26b0c:	eb0007f0 	bl	28ad4 <CDWHCIRegister::Write()>
   26b10:	e1a00004 	mov	r0, r4
   26b14:	eb000a5c 	bl	2948c <CDWHCITransferStageData::GetDMAAddress() const>
   26b18:	e59f12e0 	ldr	r1, [pc, #736]	; 26e00 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3ac>
   26b1c:	e2802101 	add	r2, r0, #1073741824	; 0x40000000
   26b20:	e0851001 	add	r1, r5, r1
   26b24:	e28d0018 	add	r0, sp, #24
   26b28:	eb0007dd 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   26b2c:	e28d0018 	add	r0, sp, #24
   26b30:	eb0007e7 	bl	28ad4 <CDWHCIRegister::Write()>
   26b34:	e1a00004 	mov	r0, r4
   26b38:	eb000a53 	bl	2948c <CDWHCITransferStageData::GetDMAAddress() const>
   26b3c:	e1a06000 	mov	r6, r0
   26b40:	e1a00004 	mov	r0, r4
   26b44:	eb000a61 	bl	294d0 <CDWHCITransferStageData::GetBytesToTransfer() const>
   26b48:	e1a01000 	mov	r1, r0
   26b4c:	e1a00006 	mov	r0, r6
   26b50:	eb00363d 	bl	3444c <CleanAndInvalidateDataCacheRange>
   26b54:	e59f12a8 	ldr	r1, [pc, #680]	; 26e04 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3b0>
   26b58:	e3a02000 	mov	r2, #0
   26b5c:	e0851001 	add	r1, r5, r1
   26b60:	e28d0024 	add	r0, sp, #36	; 0x24
   26b64:	eb0007ce 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   26b68:	e1a00004 	mov	r0, r4
   26b6c:	eb000a5b 	bl	294e0 <CDWHCITransferStageData::IsSplit() const>
   26b70:	e3500000 	cmp	r0, #0
   26b74:	1a000079 	bne	26d60 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x30c>
   26b78:	e28d0024 	add	r0, sp, #36	; 0x24
   26b7c:	eb0007d4 	bl	28ad4 <CDWHCIRegister::Write()>
   26b80:	e59f1280 	ldr	r1, [pc, #640]	; 26e08 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3b4>
   26b84:	e28d0030 	add	r0, sp, #48	; 0x30
   26b88:	e0851001 	add	r1, r5, r1
   26b8c:	eb0007c0 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   26b90:	e28d0030 	add	r0, sp, #48	; 0x30
   26b94:	eb0007c7 	bl	28ab8 <CDWHCIRegister::Read()>
   26b98:	e59f126c 	ldr	r1, [pc, #620]	; 26e0c <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3b8>
   26b9c:	e28d0030 	add	r0, sp, #48	; 0x30
   26ba0:	eb0007fd 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26ba4:	e1a00004 	mov	r0, r4
   26ba8:	eb000a0f 	bl	293ec <CDWHCITransferStageData::GetMaxPacketSize() const>
   26bac:	e1a01a80 	lsl	r1, r0, #21
   26bb0:	e1a01aa1 	lsr	r1, r1, #21
   26bb4:	e28d0030 	add	r0, sp, #48	; 0x30
   26bb8:	eb000807 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26bbc:	e28d0030 	add	r0, sp, #48	; 0x30
   26bc0:	e3e01603 	mvn	r1, #3145728	; 0x300000
   26bc4:	eb0007f4 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26bc8:	e28d0030 	add	r0, sp, #48	; 0x30
   26bcc:	e3a01601 	mov	r1, #1048576	; 0x100000
   26bd0:	eb000801 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26bd4:	e1a00004 	mov	r0, r4
   26bd8:	eb000a27 	bl	2947c <CDWHCITransferStageData::IsDirectionIn() const>
   26bdc:	e3500000 	cmp	r0, #0
   26be0:	0a000056 	beq	26d40 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x2ec>
   26be4:	e3a01902 	mov	r1, #32768	; 0x8000
   26be8:	e28d0030 	add	r0, sp, #48	; 0x30
   26bec:	eb0007fa 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26bf0:	e1a00004 	mov	r0, r4
   26bf4:	eb0009fe 	bl	293f4 <CDWHCITransferStageData::GetSpeed() const>
   26bf8:	e3500000 	cmp	r0, #0
   26bfc:	1a00004b 	bne	26d30 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x2dc>
   26c00:	e3a01802 	mov	r1, #131072	; 0x20000
   26c04:	e28d0030 	add	r0, sp, #48	; 0x30
   26c08:	eb0007f3 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26c0c:	e3e0157f 	mvn	r1, #532676608	; 0x1fc00000
   26c10:	e28d0030 	add	r0, sp, #48	; 0x30
   26c14:	eb0007e0 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26c18:	e1a00004 	mov	r0, r4
   26c1c:	eb0009b1 	bl	292e8 <CDWHCITransferStageData::GetDeviceAddress() const>
   26c20:	e1a01b00 	lsl	r1, r0, #22
   26c24:	e28d0030 	add	r0, sp, #48	; 0x30
   26c28:	eb0007eb 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26c2c:	e3e01703 	mvn	r1, #786432	; 0xc0000
   26c30:	e28d0030 	add	r0, sp, #48	; 0x30
   26c34:	eb0007d8 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26c38:	e1a00004 	mov	r0, r4
   26c3c:	eb0009ba 	bl	2932c <CDWHCITransferStageData::GetEndpointType() const>
   26c40:	e1a01900 	lsl	r1, r0, #18
   26c44:	e28d0030 	add	r0, sp, #48	; 0x30
   26c48:	eb0007e3 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26c4c:	e3e01b1e 	mvn	r1, #30720	; 0x7800
   26c50:	e28d0030 	add	r0, sp, #48	; 0x30
   26c54:	eb0007d0 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26c58:	e1a00004 	mov	r0, r4
   26c5c:	eb0009d1 	bl	293a8 <CDWHCITransferStageData::GetEndpointNumber() const>
   26c60:	e1a01580 	lsl	r1, r0, #11
   26c64:	e28d0030 	add	r0, sp, #48	; 0x30
   26c68:	eb0007db 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26c6c:	e1a00004 	mov	r0, r4
   26c70:	eb000a9d 	bl	296ec <CDWHCITransferStageData::GetFrameScheduler() const>
   26c74:	e2506000 	subs	r6, r0, #0
   26c78:	0a00000b 	beq	26cac <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x258>
   26c7c:	e5963000 	ldr	r3, [r6]
   26c80:	e5933014 	ldr	r3, [r3, #20]
   26c84:	e12fff33 	blx	r3
   26c88:	e5963000 	ldr	r3, [r6]
   26c8c:	e1a00006 	mov	r0, r6
   26c90:	e5933018 	ldr	r3, [r3, #24]
   26c94:	e12fff33 	blx	r3
   26c98:	e3500000 	cmp	r0, #0
   26c9c:	1a00002b 	bne	26d50 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x2fc>
   26ca0:	e3e01202 	mvn	r1, #536870912	; 0x20000000
   26ca4:	e28d0030 	add	r0, sp, #48	; 0x30
   26ca8:	eb0007bb 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26cac:	e59f115c 	ldr	r1, [pc, #348]	; 26e10 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3bc>
   26cb0:	e28d003c 	add	r0, sp, #60	; 0x3c
   26cb4:	e0851001 	add	r1, r5, r1
   26cb8:	eb000775 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   26cbc:	e1a00004 	mov	r0, r4
   26cc0:	eb000a51 	bl	2960c <CDWHCITransferStageData::GetStatusMask() const>
   26cc4:	e1a01000 	mov	r1, r0
   26cc8:	e28d003c 	add	r0, sp, #60	; 0x3c
   26ccc:	eb00079c 	bl	28b44 <CDWHCIRegister::Set(unsigned int)>
   26cd0:	e28d003c 	add	r0, sp, #60	; 0x3c
   26cd4:	eb00077e 	bl	28ad4 <CDWHCIRegister::Write()>
   26cd8:	e28d0030 	add	r0, sp, #48	; 0x30
   26cdc:	e3a01102 	mov	r1, #-2147483648	; 0x80000000
   26ce0:	eb0007bd 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26ce4:	e3e01101 	mvn	r1, #1073741824	; 0x40000000
   26ce8:	e28d0030 	add	r0, sp, #48	; 0x30
   26cec:	eb0007aa 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26cf0:	e28d0030 	add	r0, sp, #48	; 0x30
   26cf4:	eb000776 	bl	28ad4 <CDWHCIRegister::Write()>
   26cf8:	e28d003c 	add	r0, sp, #60	; 0x3c
   26cfc:	eb00076c 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26d00:	e28d0030 	add	r0, sp, #48	; 0x30
   26d04:	eb00076a 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26d08:	e28d0024 	add	r0, sp, #36	; 0x24
   26d0c:	eb000768 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26d10:	e28d0018 	add	r0, sp, #24
   26d14:	eb000766 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26d18:	e28d000c 	add	r0, sp, #12
   26d1c:	eb000764 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26d20:	e1a0000d 	mov	r0, sp
   26d24:	eb000762 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26d28:	e28dd048 	add	sp, sp, #72	; 0x48
   26d2c:	e8bd8070 	pop	{r4, r5, r6, pc}
   26d30:	e3e01802 	mvn	r1, #131072	; 0x20000
   26d34:	e28d0030 	add	r0, sp, #48	; 0x30
   26d38:	eb000797 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26d3c:	eaffffb2 	b	26c0c <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x1b8>
   26d40:	e3e01902 	mvn	r1, #32768	; 0x8000
   26d44:	e28d0030 	add	r0, sp, #48	; 0x30
   26d48:	eb000793 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26d4c:	eaffffa7 	b	26bf0 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x19c>
   26d50:	e3a01202 	mov	r1, #536870912	; 0x20000000
   26d54:	e28d0030 	add	r0, sp, #48	; 0x30
   26d58:	eb00079f 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26d5c:	eaffffd2 	b	26cac <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x258>
   26d60:	e1a00004 	mov	r0, r4
   26d64:	eb000a09 	bl	29590 <CDWHCITransferStageData::GetHubPortAddress() const>
   26d68:	e1a01000 	mov	r1, r0
   26d6c:	e28d0024 	add	r0, sp, #36	; 0x24
   26d70:	eb000799 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26d74:	e1a00004 	mov	r0, r4
   26d78:	eb0009e7 	bl	2951c <CDWHCITransferStageData::GetHubAddress() const>
   26d7c:	e1a01380 	lsl	r1, r0, #7
   26d80:	e28d0024 	add	r0, sp, #36	; 0x24
   26d84:	eb000794 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26d88:	e1a00004 	mov	r0, r4
   26d8c:	eb000a1c 	bl	29604 <CDWHCITransferStageData::GetSplitPosition() const>
   26d90:	e1a01700 	lsl	r1, r0, #14
   26d94:	e28d0024 	add	r0, sp, #36	; 0x24
   26d98:	eb00078f 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26d9c:	e1a00004 	mov	r0, r4
   26da0:	eb0009d0 	bl	294e8 <CDWHCITransferStageData::IsSplitComplete() const>
   26da4:	e3500000 	cmp	r0, #0
   26da8:	1a00000d 	bne	26de4 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x390>
   26dac:	e3a01102 	mov	r1, #-2147483648	; 0x80000000
   26db0:	e28d0024 	add	r0, sp, #36	; 0x24
   26db4:	eb000788 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26db8:	eaffff6e 	b	26b78 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x124>
   26dbc:	e59f2050 	ldr	r2, [pc, #80]	; 26e14 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3c0>
   26dc0:	e59f1050 	ldr	r1, [pc, #80]	; 26e18 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3c4>
   26dc4:	e59f0050 	ldr	r0, [pc, #80]	; 26e1c <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3c8>
   26dc8:	eb00406c 	bl	36f80 <assertion_failed>
   26dcc:	eaffff2b 	b	26a80 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x2c>
   26dd0:	e59f2048 	ldr	r2, [pc, #72]	; 26e20 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3cc>
   26dd4:	e59f103c 	ldr	r1, [pc, #60]	; 26e18 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3c4>
   26dd8:	e59f0044 	ldr	r0, [pc, #68]	; 26e24 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x3d0>
   26ddc:	eb004067 	bl	36f80 <assertion_failed>
   26de0:	eaffff20 	b	26a68 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x14>
   26de4:	e3a01801 	mov	r1, #65536	; 0x10000
   26de8:	e28d0024 	add	r0, sp, #36	; 0x24
   26dec:	eb00077a 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26df0:	eaffffed 	b	26dac <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)+0x358>
   26df4:	20980508 	.word	0x20980508
   26df8:	20980510 	.word	0x20980510
   26dfc:	1ff80000 	.word	0x1ff80000
   26e00:	20980514 	.word	0x20980514
   26e04:	20980504 	.word	0x20980504
   26e08:	20980500 	.word	0x20980500
   26e0c:	fffff800 	.word	0xfffff800
   26e10:	2098050c 	.word	0x2098050c
   26e14:	000002ab 	.word	0x000002ab
   26e18:	0004a0b0 	.word	0x0004a0b0
   26e1c:	0004a130 	.word	0x0004a130
   26e20:	000002a9 	.word	0x000002a9
   26e24:	0004a120 	.word	0x0004a120

00026e28 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)>:
   26e28:	e92d4070 	push	{r4, r5, r6, lr}
   26e2c:	e2515000 	subs	r5, r1, #0
   26e30:	e24dd018 	sub	sp, sp, #24
   26e34:	e1a06000 	mov	r6, r0
   26e38:	0a000037 	beq	26f1c <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0xf4>
   26e3c:	e1a00005 	mov	r0, r5
   26e40:	eb000868 	bl	28fe8 <CDWHCITransferStageData::GetChannelNumber() const>
   26e44:	e596300c 	ldr	r3, [r6, #12]
   26e48:	e1a04000 	mov	r4, r0
   26e4c:	e1500003 	cmp	r0, r3
   26e50:	2a00002c 	bcs	26f08 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0xe0>
   26e54:	e59f10d4 	ldr	r1, [pc, #212]	; 26f30 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0x108>
   26e58:	e1a0000d 	mov	r0, sp
   26e5c:	e0841001 	add	r1, r4, r1
   26e60:	e1a04281 	lsl	r4, r1, #5
   26e64:	e1a01004 	mov	r1, r4
   26e68:	eb000709 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   26e6c:	e1a0000d 	mov	r0, sp
   26e70:	eb000710 	bl	28ab8 <CDWHCIRegister::Read()>
   26e74:	e1a0000d 	mov	r0, sp
   26e78:	e3a01102 	mov	r1, #-2147483648	; 0x80000000
   26e7c:	eb000734 	bl	28b54 <CDWHCIRegister::IsSet(unsigned int) const>
   26e80:	e3500000 	cmp	r0, #0
   26e84:	1a000006 	bne	26ea4 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0x7c>
   26e88:	e1a01005 	mov	r1, r5
   26e8c:	e1a00006 	mov	r0, r6
   26e90:	ebfffeef 	bl	26a54 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)>
   26e94:	e1a0000d 	mov	r0, sp
   26e98:	eb000705 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26e9c:	e28dd018 	add	sp, sp, #24
   26ea0:	e8bd8070 	pop	{r4, r5, r6, pc}
   26ea4:	e1a00005 	mov	r0, r5
   26ea8:	e3a01000 	mov	r1, #0
   26eac:	eb000847 	bl	28fd0 <CDWHCITransferStageData::SetSubState(unsigned int)>
   26eb0:	e1a0000d 	mov	r0, sp
   26eb4:	e3e01102 	mvn	r1, #-2147483648	; 0x80000000
   26eb8:	eb000737 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   26ebc:	e3a01101 	mov	r1, #1073741824	; 0x40000000
   26ec0:	e1a0000d 	mov	r0, sp
   26ec4:	eb000744 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   26ec8:	e1a0000d 	mov	r0, sp
   26ecc:	eb000700 	bl	28ad4 <CDWHCIRegister::Write()>
   26ed0:	e284100c 	add	r1, r4, #12
   26ed4:	e28d000c 	add	r0, sp, #12
   26ed8:	eb0006ed 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   26edc:	e3a01002 	mov	r1, #2
   26ee0:	e28d000c 	add	r0, sp, #12
   26ee4:	eb000716 	bl	28b44 <CDWHCIRegister::Set(unsigned int)>
   26ee8:	e28d000c 	add	r0, sp, #12
   26eec:	eb0006f8 	bl	28ad4 <CDWHCIRegister::Write()>
   26ef0:	e28d000c 	add	r0, sp, #12
   26ef4:	eb0006ee 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26ef8:	e1a0000d 	mov	r0, sp
   26efc:	eb0006ec 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   26f00:	e28dd018 	add	sp, sp, #24
   26f04:	e8bd8070 	pop	{r4, r5, r6, pc}
   26f08:	e3a02e29 	mov	r2, #656	; 0x290
   26f0c:	e59f1020 	ldr	r1, [pc, #32]	; 26f34 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0x10c>
   26f10:	e59f0020 	ldr	r0, [pc, #32]	; 26f38 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0x110>
   26f14:	eb004019 	bl	36f80 <assertion_failed>
   26f18:	eaffffcd 	b	26e54 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0x2c>
   26f1c:	e59f2018 	ldr	r2, [pc, #24]	; 26f3c <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0x114>
   26f20:	e59f100c 	ldr	r1, [pc, #12]	; 26f34 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0x10c>
   26f24:	e59f0014 	ldr	r0, [pc, #20]	; 26f40 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0x118>
   26f28:	eb004014 	bl	36f80 <assertion_failed>
   26f2c:	eaffffc2 	b	26e3c <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)+0x14>
   26f30:	0104c028 	.word	0x0104c028
   26f34:	0004a0b0 	.word	0x0004a0b0
   26f38:	0004a130 	.word	0x0004a130
   26f3c:	0000028e 	.word	0x0000028e
   26f40:	0004a120 	.word	0x0004a120

00026f44 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)>:
   26f44:	e92d4070 	push	{r4, r5, r6, lr}
   26f48:	e3a03000 	mov	r3, #0
   26f4c:	e1a05000 	mov	r5, r0
   26f50:	e1a04001 	mov	r4, r1
   26f54:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   26f58:	e1510003 	cmp	r1, r3
   26f5c:	0a00001f 	beq	26fe0 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0x9c>
   26f60:	e1a00004 	mov	r0, r4
   26f64:	eb000817 	bl	28fc8 <CDWHCITransferStageData::GetState() const>
   26f68:	e3500003 	cmp	r0, #3
   26f6c:	0a000003 	beq	26f80 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0x3c>
   26f70:	e59f207c 	ldr	r2, [pc, #124]	; 26ff4 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0xb0>
   26f74:	e59f107c 	ldr	r1, [pc, #124]	; 26ff8 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0xb4>
   26f78:	e59f007c 	ldr	r0, [pc, #124]	; 26ffc <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0xb8>
   26f7c:	eb003fff 	bl	36f80 <assertion_failed>
   26f80:	e1a00004 	mov	r0, r4
   26f84:	eb000955 	bl	294e0 <CDWHCITransferStageData::IsSplit() const>
   26f88:	e2501000 	subs	r1, r0, #0
   26f8c:	1a000007 	bne	26fb0 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0x6c>
   26f90:	e1a00004 	mov	r0, r4
   26f94:	eb000809 	bl	28fc0 <CDWHCITransferStageData::SetState(unsigned int)>
   26f98:	e1a01004 	mov	r1, r4
   26f9c:	e1a00005 	mov	r0, r5
   26fa0:	ebffffa0 	bl	26e28 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)>
   26fa4:	e3a03000 	mov	r3, #0
   26fa8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   26fac:	e8bd8070 	pop	{r4, r5, r6, pc}
   26fb0:	e1a00004 	mov	r0, r4
   26fb4:	e3a01001 	mov	r1, #1
   26fb8:	eb000800 	bl	28fc0 <CDWHCITransferStageData::SetState(unsigned int)>
   26fbc:	e3a01000 	mov	r1, #0
   26fc0:	e1a00004 	mov	r0, r4
   26fc4:	eb0007ef 	bl	28f88 <CDWHCITransferStageData::SetSplitComplete(int)>
   26fc8:	e1a00004 	mov	r0, r4
   26fcc:	eb0009c6 	bl	296ec <CDWHCITransferStageData::GetFrameScheduler() const>
   26fd0:	e5903000 	ldr	r3, [r0]
   26fd4:	e5933008 	ldr	r3, [r3, #8]
   26fd8:	e12fff33 	blx	r3
   26fdc:	eaffffed 	b	26f98 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0x54>
   26fe0:	e59f2018 	ldr	r2, [pc, #24]	; 27000 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0xbc>
   26fe4:	e59f100c 	ldr	r1, [pc, #12]	; 26ff8 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0xb4>
   26fe8:	e59f0014 	ldr	r0, [pc, #20]	; 27004 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0xc0>
   26fec:	eb003fe3 	bl	36f80 <assertion_failed>
   26ff0:	eaffffda 	b	26f60 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)+0x1c>
   26ff4:	00000425 	.word	0x00000425
   26ff8:	0004a0b0 	.word	0x0004a0b0
   26ffc:	0004a148 	.word	0x0004a148
   27000:	00000424 	.word	0x00000424
   27004:	0004a120 	.word	0x0004a120

00027008 <CDWHCIDevice::TimerStub(unsigned int, void*, void*)>:
   27008:	e92d4070 	push	{r4, r5, r6, lr}
   2700c:	e2525000 	subs	r5, r2, #0
   27010:	e1a04001 	mov	r4, r1
   27014:	0a00000d 	beq	27050 <CDWHCIDevice::TimerStub(unsigned int, void*, void*)+0x48>
   27018:	e3540000 	cmp	r4, #0
   2701c:	0a000003 	beq	27030 <CDWHCIDevice::TimerStub(unsigned int, void*, void*)+0x28>
   27020:	e1a01004 	mov	r1, r4
   27024:	e1a00005 	mov	r0, r5
   27028:	e8bd4070 	pop	{r4, r5, r6, lr}
   2702c:	eaffffc4 	b	26f44 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)>
   27030:	e59f102c 	ldr	r1, [pc, #44]	; 27064 <CDWHCIDevice::TimerStub(unsigned int, void*, void*)+0x5c>
   27034:	e59f002c 	ldr	r0, [pc, #44]	; 27068 <CDWHCIDevice::TimerStub(unsigned int, void*, void*)+0x60>
   27038:	e59f202c 	ldr	r2, [pc, #44]	; 2706c <CDWHCIDevice::TimerStub(unsigned int, void*, void*)+0x64>
   2703c:	eb003fcf 	bl	36f80 <assertion_failed>
   27040:	e1a01004 	mov	r1, r4
   27044:	e1a00005 	mov	r0, r5
   27048:	e8bd4070 	pop	{r4, r5, r6, lr}
   2704c:	eaffffbc 	b	26f44 <CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)>
   27050:	e59f2018 	ldr	r2, [pc, #24]	; 27070 <CDWHCIDevice::TimerStub(unsigned int, void*, void*)+0x68>
   27054:	e59f1008 	ldr	r1, [pc, #8]	; 27064 <CDWHCIDevice::TimerStub(unsigned int, void*, void*)+0x5c>
   27058:	e59f0014 	ldr	r0, [pc, #20]	; 27074 <CDWHCIDevice::TimerStub(unsigned int, void*, void*)+0x6c>
   2705c:	eb003fc7 	bl	36f80 <assertion_failed>
   27060:	eaffffec 	b	27018 <CDWHCIDevice::TimerStub(unsigned int, void*, void*)+0x10>
   27064:	0004a0b0 	.word	0x0004a0b0
   27068:	0004a17c 	.word	0x0004a17c
   2706c:	0000043e 	.word	0x0000043e
   27070:	0000043b 	.word	0x0000043b
   27074:	0004a0c0 	.word	0x0004a0c0

00027078 <CDWHCIDevice::AllocateChannel()>:
   27078:	e92d4070 	push	{r4, r5, r6, lr}
   2707c:	e1a05000 	mov	r5, r0
   27080:	e5900014 	ldr	r0, [r0, #20]
   27084:	e3500000 	cmp	r0, #0
   27088:	1a000014 	bne	270e0 <CDWHCIDevice::AllocateChannel()+0x68>
   2708c:	e595100c 	ldr	r1, [r5, #12]
   27090:	e3510000 	cmp	r1, #0
   27094:	0a00000e 	beq	270d4 <CDWHCIDevice::AllocateChannel()+0x5c>
   27098:	e5954010 	ldr	r4, [r5, #16]
   2709c:	e2144001 	ands	r4, r4, #1
   270a0:	0a000022 	beq	27130 <CDWHCIDevice::AllocateChannel()+0xb8>
   270a4:	e3a04000 	mov	r4, #0
   270a8:	e3a03001 	mov	r3, #1
   270ac:	ea000002 	b	270bc <CDWHCIDevice::AllocateChannel()+0x44>
   270b0:	e5952010 	ldr	r2, [r5, #16]
   270b4:	e1120003 	tst	r2, r3
   270b8:	0a000012 	beq	27108 <CDWHCIDevice::AllocateChannel()+0x90>
   270bc:	e2844001 	add	r4, r4, #1
   270c0:	e1540001 	cmp	r4, r1
   270c4:	e1a03083 	lsl	r3, r3, #1
   270c8:	3afffff8 	bcc	270b0 <CDWHCIDevice::AllocateChannel()+0x38>
   270cc:	e3500000 	cmp	r0, #0
   270d0:	1a000014 	bne	27128 <CDWHCIDevice::AllocateChannel()+0xb0>
   270d4:	e3a04010 	mov	r4, #16
   270d8:	e1a00004 	mov	r0, r4
   270dc:	e8bd8070 	pop	{r4, r5, r6, pc}
   270e0:	eb003498 	bl	34348 <EnterCritical>
   270e4:	e595100c 	ldr	r1, [r5, #12]
   270e8:	e3510000 	cmp	r1, #0
   270ec:	05950014 	ldreq	r0, [r5, #20]
   270f0:	0afffff5 	beq	270cc <CDWHCIDevice::AllocateChannel()+0x54>
   270f4:	e5954010 	ldr	r4, [r5, #16]
   270f8:	e5950014 	ldr	r0, [r5, #20]
   270fc:	e2144001 	ands	r4, r4, #1
   27100:	1affffe7 	bne	270a4 <CDWHCIDevice::AllocateChannel()+0x2c>
   27104:	e3a03001 	mov	r3, #1
   27108:	e5952010 	ldr	r2, [r5, #16]
   2710c:	e3500000 	cmp	r0, #0
   27110:	e1823003 	orr	r3, r2, r3
   27114:	e5853010 	str	r3, [r5, #16]
   27118:	0affffee 	beq	270d8 <CDWHCIDevice::AllocateChannel()+0x60>
   2711c:	eb0034b5 	bl	343f8 <LeaveCritical>
   27120:	e1a00004 	mov	r0, r4
   27124:	e8bd8070 	pop	{r4, r5, r6, pc}
   27128:	eb0034b2 	bl	343f8 <LeaveCritical>
   2712c:	eaffffe8 	b	270d4 <CDWHCIDevice::AllocateChannel()+0x5c>
   27130:	e5953010 	ldr	r3, [r5, #16]
   27134:	e3833001 	orr	r3, r3, #1
   27138:	e5853010 	str	r3, [r5, #16]
   2713c:	eaffffe5 	b	270d8 <CDWHCIDevice::AllocateChannel()+0x60>

00027140 <CDWHCIDevice::FreeChannel(unsigned int)>:
   27140:	e590300c 	ldr	r3, [r0, #12]
   27144:	e92d4070 	push	{r4, r5, r6, lr}
   27148:	e1530001 	cmp	r3, r1
   2714c:	e1a04000 	mov	r4, r0
   27150:	e1a06001 	mov	r6, r1
   27154:	9a000016 	bls	271b4 <CDWHCIDevice::FreeChannel(unsigned int)+0x74>
   27158:	e3a05001 	mov	r5, #1
   2715c:	e5940014 	ldr	r0, [r4, #20]
   27160:	e1a05615 	lsl	r5, r5, r6
   27164:	e3500000 	cmp	r0, #0
   27168:	1a00000f 	bne	271ac <CDWHCIDevice::FreeChannel(unsigned int)+0x6c>
   2716c:	e5943010 	ldr	r3, [r4, #16]
   27170:	e1130005 	tst	r3, r5
   27174:	0a000007 	beq	27198 <CDWHCIDevice::FreeChannel(unsigned int)+0x58>
   27178:	e5943010 	ldr	r3, [r4, #16]
   2717c:	e5942014 	ldr	r2, [r4, #20]
   27180:	e1c35005 	bic	r5, r3, r5
   27184:	e3520000 	cmp	r2, #0
   27188:	e5845010 	str	r5, [r4, #16]
   2718c:	08bd8070 	popeq	{r4, r5, r6, pc}
   27190:	e8bd4070 	pop	{r4, r5, r6, lr}
   27194:	ea003497 	b	343f8 <LeaveCritical>
   27198:	e59f2028 	ldr	r2, [pc, #40]	; 271c8 <CDWHCIDevice::FreeChannel(unsigned int)+0x88>
   2719c:	e59f1028 	ldr	r1, [pc, #40]	; 271cc <CDWHCIDevice::FreeChannel(unsigned int)+0x8c>
   271a0:	e59f0028 	ldr	r0, [pc, #40]	; 271d0 <CDWHCIDevice::FreeChannel(unsigned int)+0x90>
   271a4:	eb003f75 	bl	36f80 <assertion_failed>
   271a8:	eafffff2 	b	27178 <CDWHCIDevice::FreeChannel(unsigned int)+0x38>
   271ac:	eb003465 	bl	34348 <EnterCritical>
   271b0:	eaffffed 	b	2716c <CDWHCIDevice::FreeChannel(unsigned int)+0x2c>
   271b4:	e59f2018 	ldr	r2, [pc, #24]	; 271d4 <CDWHCIDevice::FreeChannel(unsigned int)+0x94>
   271b8:	e59f100c 	ldr	r1, [pc, #12]	; 271cc <CDWHCIDevice::FreeChannel(unsigned int)+0x8c>
   271bc:	e59f0014 	ldr	r0, [pc, #20]	; 271d8 <CDWHCIDevice::FreeChannel(unsigned int)+0x98>
   271c0:	eb003f6e 	bl	36f80 <assertion_failed>
   271c4:	eaffffe3 	b	27158 <CDWHCIDevice::FreeChannel(unsigned int)+0x18>
   271c8:	00000462 	.word	0x00000462
   271cc:	0004a0b0 	.word	0x0004a0b0
   271d0:	0004a188 	.word	0x0004a188
   271d4:	0000045d 	.word	0x0000045d
   271d8:	0004a130 	.word	0x0004a130

000271dc <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)>:
   271dc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   271e0:	e2517000 	subs	r7, r1, #0
   271e4:	e24dd00c 	sub	sp, sp, #12
   271e8:	e1a04000 	mov	r4, r0
   271ec:	e1a08002 	mov	r8, r2
   271f0:	e1a09003 	mov	r9, r3
   271f4:	0a000039 	beq	272e0 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x104>
   271f8:	e1a00004 	mov	r0, r4
   271fc:	ebffff9d 	bl	27078 <CDWHCIDevice::AllocateChannel()>
   27200:	e594300c 	ldr	r3, [r4, #12]
   27204:	e1a05000 	mov	r5, r0
   27208:	e1530000 	cmp	r3, r0
   2720c:	93a07000 	movls	r7, #0
   27210:	8a000002 	bhi	27220 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x44>
   27214:	e1a00007 	mov	r0, r7
   27218:	e28dd00c 	add	sp, sp, #12
   2721c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   27220:	e3a00054 	mov	r0, #84	; 0x54
   27224:	eb00343b 	bl	34318 <operator new(unsigned int)>
   27228:	e1a03008 	mov	r3, r8
   2722c:	e58d9000 	str	r9, [sp]
   27230:	e1a02007 	mov	r2, r7
   27234:	e1a01005 	mov	r1, r5
   27238:	e0848105 	add	r8, r4, r5, lsl #2
   2723c:	e1a06000 	mov	r6, r0
   27240:	eb00077e 	bl	29040 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)>
   27244:	e5983018 	ldr	r3, [r8, #24]
   27248:	e3530000 	cmp	r3, #0
   2724c:	0a000003 	beq	27260 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x84>
   27250:	e59f20d0 	ldr	r2, [pc, #208]	; 27328 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x14c>
   27254:	e59f10d0 	ldr	r1, [pc, #208]	; 2732c <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x150>
   27258:	e59f00d0 	ldr	r0, [pc, #208]	; 27330 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x154>
   2725c:	eb003f47 	bl	36f80 <assertion_failed>
   27260:	e1a01005 	mov	r1, r5
   27264:	e1a00004 	mov	r0, r4
   27268:	e5886018 	str	r6, [r8, #24]
   2726c:	ebfffdbe 	bl	2696c <CDWHCIDevice::EnableChannelInterrupt(unsigned int)>
   27270:	e1a00006 	mov	r0, r6
   27274:	eb000899 	bl	294e0 <CDWHCITransferStageData::IsSplit() const>
   27278:	e2501000 	subs	r1, r0, #0
   2727c:	e1a00006 	mov	r0, r6
   27280:	0a000014 	beq	272d8 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0xfc>
   27284:	eb000755 	bl	28fe0 <CDWHCITransferStageData::BeginSplitCycle()>
   27288:	e2507000 	subs	r7, r0, #0
   2728c:	0a000018 	beq	272f4 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x118>
   27290:	e3a01001 	mov	r1, #1
   27294:	e1a00006 	mov	r0, r6
   27298:	eb000748 	bl	28fc0 <CDWHCITransferStageData::SetState(unsigned int)>
   2729c:	e3a01000 	mov	r1, #0
   272a0:	e1a00006 	mov	r0, r6
   272a4:	eb000737 	bl	28f88 <CDWHCITransferStageData::SetSplitComplete(int)>
   272a8:	e1a00006 	mov	r0, r6
   272ac:	eb00090e 	bl	296ec <CDWHCITransferStageData::GetFrameScheduler() const>
   272b0:	e5903000 	ldr	r3, [r0]
   272b4:	e5933008 	ldr	r3, [r3, #8]
   272b8:	e12fff33 	blx	r3
   272bc:	e3a07001 	mov	r7, #1
   272c0:	e1a00004 	mov	r0, r4
   272c4:	e1a01006 	mov	r1, r6
   272c8:	ebfffed6 	bl	26e28 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)>
   272cc:	e1a00007 	mov	r0, r7
   272d0:	e28dd00c 	add	sp, sp, #12
   272d4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   272d8:	eb000738 	bl	28fc0 <CDWHCITransferStageData::SetState(unsigned int)>
   272dc:	eafffff6 	b	272bc <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0xe0>
   272e0:	e59f204c 	ldr	r2, [pc, #76]	; 27334 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x158>
   272e4:	e59f1040 	ldr	r1, [pc, #64]	; 2732c <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x150>
   272e8:	e59f0048 	ldr	r0, [pc, #72]	; 27338 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x15c>
   272ec:	eb003f23 	bl	36f80 <assertion_failed>
   272f0:	eaffffc0 	b	271f8 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x1c>
   272f4:	e1a01005 	mov	r1, r5
   272f8:	e1a00004 	mov	r0, r4
   272fc:	ebfffdb7 	bl	269e0 <CDWHCIDevice::DisableChannelInterrupt(unsigned int)>
   27300:	e1a00006 	mov	r0, r6
   27304:	eb0006a1 	bl	28d90 <CDWHCITransferStageData::~CDWHCITransferStageData()>
   27308:	e1a00006 	mov	r0, r6
   2730c:	e3a01054 	mov	r1, #84	; 0x54
   27310:	eb003404 	bl	34328 <operator delete(void*, unsigned int)>
   27314:	e5887018 	str	r7, [r8, #24]
   27318:	e1a01005 	mov	r1, r5
   2731c:	e1a00004 	mov	r0, r4
   27320:	ebffff86 	bl	27140 <CDWHCIDevice::FreeChannel(unsigned int)>
   27324:	eaffffba 	b	27214 <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)+0x38>
   27328:	0000026b 	.word	0x0000026b
   2732c:	0004a0b0 	.word	0x0004a0b0
   27330:	0004a1b8 	.word	0x0004a1b8
   27334:	0000025f 	.word	0x0000025f
   27338:	0004a1ac 	.word	0x0004a1ac

0002733c <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)>:
   2733c:	e92d4070 	push	{r4, r5, r6, lr}
   27340:	e3a03000 	mov	r3, #0
   27344:	e1a05000 	mov	r5, r0
   27348:	e1a04001 	mov	r4, r1
   2734c:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   27350:	e1510003 	cmp	r1, r3
   27354:	0a000024 	beq	273ec <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0xb0>
   27358:	e1a00004 	mov	r0, r4
   2735c:	eb000e64 	bl	2acf4 <CUSBRequest::GetEndpoint() const>
   27360:	eb000d4f 	bl	2a8a4 <CUSBEndpoint::GetType() const>
   27364:	e3500001 	cmp	r0, #1
   27368:	1a000015 	bne	273c4 <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0x88>
   2736c:	e1a00004 	mov	r0, r4
   27370:	eb000eac 	bl	2ae28 <CUSBRequest::GetBufLen() const>
   27374:	e3500000 	cmp	r0, #0
   27378:	1a000003 	bne	2738c <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0x50>
   2737c:	e3a020dd 	mov	r2, #221	; 0xdd
   27380:	e59f1078 	ldr	r1, [pc, #120]	; 27400 <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0xc4>
   27384:	e59f0078 	ldr	r0, [pc, #120]	; 27404 <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0xc8>
   27388:	eb003efc 	bl	36f80 <assertion_failed>
   2738c:	e3a01000 	mov	r1, #0
   27390:	e1a00004 	mov	r0, r4
   27394:	eb000e66 	bl	2ad34 <CUSBRequest::SetStatus(int)>
   27398:	e1a00004 	mov	r0, r4
   2739c:	eb000e54 	bl	2acf4 <CUSBRequest::GetEndpoint() const>
   273a0:	eb000d41 	bl	2a8ac <CUSBEndpoint::IsDirectionIn() const>
   273a4:	e1a01004 	mov	r1, r4
   273a8:	e1a02000 	mov	r2, r0
   273ac:	e3a03000 	mov	r3, #0
   273b0:	e1a00005 	mov	r0, r5
   273b4:	ebffff88 	bl	271dc <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)>
   273b8:	e3a03000 	mov	r3, #0
   273bc:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   273c0:	e8bd8070 	pop	{r4, r5, r6, pc}
   273c4:	e1a00004 	mov	r0, r4
   273c8:	eb000e49 	bl	2acf4 <CUSBRequest::GetEndpoint() const>
   273cc:	eb000d34 	bl	2a8a4 <CUSBEndpoint::GetType() const>
   273d0:	e3500002 	cmp	r0, #2
   273d4:	0affffe4 	beq	2736c <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0x30>
   273d8:	e3a020dc 	mov	r2, #220	; 0xdc
   273dc:	e59f101c 	ldr	r1, [pc, #28]	; 27400 <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0xc4>
   273e0:	e59f0020 	ldr	r0, [pc, #32]	; 27408 <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0xcc>
   273e4:	eb003ee5 	bl	36f80 <assertion_failed>
   273e8:	eaffffdf 	b	2736c <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0x30>
   273ec:	e3a020da 	mov	r2, #218	; 0xda
   273f0:	e59f1008 	ldr	r1, [pc, #8]	; 27400 <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0xc4>
   273f4:	e59f0010 	ldr	r0, [pc, #16]	; 2740c <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0xd0>
   273f8:	eb003ee0 	bl	36f80 <assertion_failed>
   273fc:	eaffffd5 	b	27358 <CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*)+0x1c>
   27400:	0004a0b0 	.word	0x0004a0b0
   27404:	0004a248 	.word	0x0004a248
   27408:	0004a1d4 	.word	0x0004a1d4
   2740c:	0004a1ac 	.word	0x0004a1ac

00027410 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)>:
   27410:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27414:	e0807101 	add	r7, r0, r1, lsl #2
   27418:	e5974018 	ldr	r4, [r7, #24]
   2741c:	e24dd020 	sub	sp, sp, #32
   27420:	e3540000 	cmp	r4, #0
   27424:	e1a05000 	mov	r5, r0
   27428:	e1a06001 	mov	r6, r1
   2742c:	0a00007c 	beq	27624 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x214>
   27430:	e1a00004 	mov	r0, r4
   27434:	eb00089b 	bl	296a8 <CDWHCITransferStageData::GetURB() const>
   27438:	e2508000 	subs	r8, r0, #0
   2743c:	0a000080 	beq	27644 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x234>
   27440:	e1a00004 	mov	r0, r4
   27444:	eb0006e3 	bl	28fd8 <CDWHCITransferStageData::GetSubState() const>
   27448:	e3500000 	cmp	r0, #0
   2744c:	0a00005f 	beq	275d0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x1c0>
   27450:	e3500001 	cmp	r0, #1
   27454:	0a00002e 	beq	27514 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x104>
   27458:	e3a02fce 	mov	r2, #824	; 0x338
   2745c:	e59f1448 	ldr	r1, [pc, #1096]	; 278ac <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x49c>
   27460:	e59f0448 	ldr	r0, [pc, #1096]	; 278b0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4a0>
   27464:	eb003ec5 	bl	36f80 <assertion_failed>
   27468:	e1a00004 	mov	r0, r4
   2746c:	eb0006d5 	bl	28fc8 <CDWHCITransferStageData::GetState() const>
   27470:	e3500001 	cmp	r0, #1
   27474:	e1a09000 	mov	r9, r0
   27478:	0a00009b 	beq	276ec <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x2dc>
   2747c:	3a000075 	bcc	27658 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x248>
   27480:	e3500002 	cmp	r0, #2
   27484:	1a000056 	bne	275e4 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x1d4>
   27488:	e1a00004 	mov	r0, r4
   2748c:	eb00086b 	bl	29640 <CDWHCITransferStageData::GetTransactionStatus() const>
   27490:	e59f341c 	ldr	r3, [pc, #1052]	; 278b4 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4a4>
   27494:	e1a09000 	mov	r9, r0
   27498:	e0033000 	and	r3, r3, r0
   2749c:	e3530000 	cmp	r3, #0
   274a0:	0a0000a9 	beq	2774c <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x33c>
   274a4:	eb004031 	bl	37570 <CLogger::Get()>
   274a8:	e59f1408 	ldr	r1, [pc, #1032]	; 278b8 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4a8>
   274ac:	e58d9000 	str	r9, [sp]
   274b0:	e59f3404 	ldr	r3, [pc, #1028]	; 278bc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4ac>
   274b4:	e3a02001 	mov	r2, #1
   274b8:	eb00410c 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   274bc:	e3a01000 	mov	r1, #0
   274c0:	e1a00008 	mov	r0, r8
   274c4:	eb000e1a 	bl	2ad34 <CUSBRequest::SetStatus(int)>
   274c8:	e1a01006 	mov	r1, r6
   274cc:	e1a00005 	mov	r0, r5
   274d0:	ebfffd42 	bl	269e0 <CDWHCIDevice::DisableChannelInterrupt(unsigned int)>
   274d4:	e3540000 	cmp	r4, #0
   274d8:	0a000004 	beq	274f0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0xe0>
   274dc:	e1a00004 	mov	r0, r4
   274e0:	eb00062a 	bl	28d90 <CDWHCITransferStageData::~CDWHCITransferStageData()>
   274e4:	e1a00004 	mov	r0, r4
   274e8:	e3a01054 	mov	r1, #84	; 0x54
   274ec:	eb00338d 	bl	34328 <operator delete(void*, unsigned int)>
   274f0:	e3a03000 	mov	r3, #0
   274f4:	e1a01006 	mov	r1, r6
   274f8:	e1a00005 	mov	r0, r5
   274fc:	e5873018 	str	r3, [r7, #24]
   27500:	ebffff0e 	bl	27140 <CDWHCIDevice::FreeChannel(unsigned int)>
   27504:	e1a00008 	mov	r0, r8
   27508:	eb000e52 	bl	2ae58 <CUSBRequest::CallCompletionRoutine()>
   2750c:	e28dd020 	add	sp, sp, #32
   27510:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27514:	e1a00004 	mov	r0, r4
   27518:	eb0007db 	bl	2948c <CDWHCITransferStageData::GetDMAAddress() const>
   2751c:	e1a09000 	mov	r9, r0
   27520:	e1a00004 	mov	r0, r4
   27524:	eb0007e9 	bl	294d0 <CDWHCITransferStageData::GetBytesToTransfer() const>
   27528:	e1a01000 	mov	r1, r0
   2752c:	e1a00009 	mov	r0, r9
   27530:	eb0033c5 	bl	3444c <CleanAndInvalidateDataCacheRange>
   27534:	e59f1384 	ldr	r1, [pc, #900]	; 278c0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4b0>
   27538:	e1a09286 	lsl	r9, r6, #5
   2753c:	e0891001 	add	r1, r9, r1
   27540:	e28d0008 	add	r0, sp, #8
   27544:	eb000552 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   27548:	e28d0008 	add	r0, sp, #8
   2754c:	eb000559 	bl	28ab8 <CDWHCIRegister::Read()>
   27550:	e59f136c 	ldr	r1, [pc, #876]	; 278c4 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4b4>
   27554:	e28d0014 	add	r0, sp, #20
   27558:	e0891001 	add	r1, r9, r1
   2755c:	eb00054c 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   27560:	e28d0014 	add	r0, sp, #20
   27564:	eb000553 	bl	28ab8 <CDWHCIRegister::Read()>
   27568:	e3500002 	cmp	r0, #2
   2756c:	0a00006d 	beq	27728 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x318>
   27570:	e1a00004 	mov	r0, r4
   27574:	eb00069d 	bl	28ff0 <CDWHCITransferStageData::IsPeriodic() const>
   27578:	e3500000 	cmp	r0, #0
   2757c:	1a00001e 	bne	275fc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x1ec>
   27580:	e28d0014 	add	r0, sp, #20
   27584:	eb00054b 	bl	28ab8 <CDWHCIRegister::Read()>
   27588:	e1a0a000 	mov	sl, r0
   2758c:	e28d0008 	add	r0, sp, #8
   27590:	eb00055e 	bl	28b10 <CDWHCIRegister::Get() const>
   27594:	e1a09000 	mov	r9, r0
   27598:	e28d0008 	add	r0, sp, #8
   2759c:	eb00055b 	bl	28b10 <CDWHCIRegister::Get() const>
   275a0:	e59f2320 	ldr	r2, [pc, #800]	; 278c8 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4b8>
   275a4:	e3c034ff 	bic	r3, r0, #-16777216	; 0xff000000
   275a8:	e3c3373e 	bic	r3, r3, #16252928	; 0xf80000
   275ac:	e1a0100a 	mov	r1, sl
   275b0:	e00229a9 	and	r2, r2, r9, lsr #19
   275b4:	e1a00004 	mov	r0, r4
   275b8:	eb000605 	bl	28dd4 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)>
   275bc:	e28d0014 	add	r0, sp, #20
   275c0:	eb00053b 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   275c4:	e28d0008 	add	r0, sp, #8
   275c8:	eb000539 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   275cc:	eaffffa5 	b	27468 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x58>
   275d0:	e1a01004 	mov	r1, r4
   275d4:	e1a00005 	mov	r0, r5
   275d8:	ebfffd1d 	bl	26a54 <CDWHCIDevice::StartChannel(CDWHCITransferStageData*)>
   275dc:	e28dd020 	add	sp, sp, #32
   275e0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   275e4:	e59f22e0 	ldr	r2, [pc, #736]	; 278cc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4bc>
   275e8:	e59f12bc 	ldr	r1, [pc, #700]	; 278ac <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x49c>
   275ec:	e59f02bc 	ldr	r0, [pc, #700]	; 278b0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4a0>
   275f0:	eb003e62 	bl	36f80 <assertion_failed>
   275f4:	e28dd020 	add	sp, sp, #32
   275f8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   275fc:	e28d0008 	add	r0, sp, #8
   27600:	eb000542 	bl	28b10 <CDWHCIRegister::Get() const>
   27604:	e2200206 	eor	r0, r0, #1610612736	; 0x60000000
   27608:	e3100206 	tst	r0, #1610612736	; 0x60000000
   2760c:	1affffdb 	bne	27580 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x170>
   27610:	e3a02e33 	mov	r2, #816	; 0x330
   27614:	e59f1290 	ldr	r1, [pc, #656]	; 278ac <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x49c>
   27618:	e59f02b0 	ldr	r0, [pc, #688]	; 278d0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4c0>
   2761c:	eb003e57 	bl	36f80 <assertion_failed>
   27620:	eaffffd6 	b	27580 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x170>
   27624:	e59f22a8 	ldr	r2, [pc, #680]	; 278d4 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4c4>
   27628:	e59f127c 	ldr	r1, [pc, #636]	; 278ac <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x49c>
   2762c:	e59f02a4 	ldr	r0, [pc, #676]	; 278d8 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4c8>
   27630:	eb003e52 	bl	36f80 <assertion_failed>
   27634:	e1a00004 	mov	r0, r4
   27638:	eb00081a 	bl	296a8 <CDWHCITransferStageData::GetURB() const>
   2763c:	e2508000 	subs	r8, r0, #0
   27640:	1affff7e 	bne	27440 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x30>
   27644:	e59f2290 	ldr	r2, [pc, #656]	; 278dc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4cc>
   27648:	e59f125c 	ldr	r1, [pc, #604]	; 278ac <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x49c>
   2764c:	e59f028c 	ldr	r0, [pc, #652]	; 278e0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4d0>
   27650:	eb003e4a 	bl	36f80 <assertion_failed>
   27654:	eaffff79 	b	27440 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x30>
   27658:	e1a00004 	mov	r0, r4
   2765c:	eb0007f7 	bl	29640 <CDWHCITransferStageData::GetTransactionStatus() const>
   27660:	e59f324c 	ldr	r3, [pc, #588]	; 278b4 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4a4>
   27664:	e1a09000 	mov	r9, r0
   27668:	e0033000 	and	r3, r3, r0
   2766c:	e3530000 	cmp	r3, #0
   27670:	1a000077 	bne	27854 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x444>
   27674:	e3100050 	tst	r0, #80	; 0x50
   27678:	0a000015 	beq	276d4 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x2c4>
   2767c:	e1a00004 	mov	r0, r4
   27680:	eb00065a 	bl	28ff0 <CDWHCITransferStageData::IsPeriodic() const>
   27684:	e3500000 	cmp	r0, #0
   27688:	0a000011 	beq	276d4 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x2c4>
   2768c:	e3a01003 	mov	r1, #3
   27690:	e1a00004 	mov	r0, r4
   27694:	eb000649 	bl	28fc0 <CDWHCITransferStageData::SetState(unsigned int)>
   27698:	e1a00008 	mov	r0, r8
   2769c:	eb000d94 	bl	2acf4 <CUSBRequest::GetEndpoint() const>
   276a0:	eb000c87 	bl	2a8c4 <CUSBEndpoint::GetInterval() const>
   276a4:	e0800100 	add	r0, r0, r0, lsl #2
   276a8:	e0800100 	add	r0, r0, r0, lsl #2
   276ac:	e59f3230 	ldr	r3, [pc, #560]	; 278e4 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4d4>
   276b0:	e1a06100 	lsl	r6, r0, #2
   276b4:	e0876396 	umull	r6, r7, r6, r3
   276b8:	e5950008 	ldr	r0, [r5, #8]
   276bc:	e1a03004 	mov	r3, r4
   276c0:	e58d5000 	str	r5, [sp]
   276c4:	e1a01327 	lsr	r1, r7, #6
   276c8:	e59f2218 	ldr	r2, [pc, #536]	; 278e8 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4d8>
   276cc:	eb0034d6 	bl	34a2c <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)>
   276d0:	eaffffc1 	b	275dc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x1cc>
   276d4:	e1a00004 	mov	r0, r4
   276d8:	eb000769 	bl	29484 <CDWHCITransferStageData::IsStatusStage() const>
   276dc:	e3500000 	cmp	r0, #0
   276e0:	0a000065 	beq	2787c <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x46c>
   276e4:	e3a01001 	mov	r1, #1
   276e8:	eaffff74 	b	274c0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0xb0>
   276ec:	e1a00004 	mov	r0, r4
   276f0:	eb0007d2 	bl	29640 <CDWHCITransferStageData::GetTransactionStatus() const>
   276f4:	e59f31f0 	ldr	r3, [pc, #496]	; 278ec <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4dc>
   276f8:	e1a0a000 	mov	sl, r0
   276fc:	e0033000 	and	r3, r3, r0
   27700:	e3530000 	cmp	r3, #0
   27704:	0a000038 	beq	277ec <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x3dc>
   27708:	eb003f98 	bl	37570 <CLogger::Get()>
   2770c:	e59f11a4 	ldr	r1, [pc, #420]	; 278b8 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4a8>
   27710:	e58da000 	str	sl, [sp]
   27714:	e1a02009 	mov	r2, r9
   27718:	e59f319c 	ldr	r3, [pc, #412]	; 278bc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4ac>
   2771c:	eb004073 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   27720:	e3a01000 	mov	r1, #0
   27724:	eaffff65 	b	274c0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0xb0>
   27728:	e1a01004 	mov	r1, r4
   2772c:	e1a00005 	mov	r0, r5
   27730:	ebfffdbc 	bl	26e28 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)>
   27734:	e28d0014 	add	r0, sp, #20
   27738:	eb0004dd 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   2773c:	e28d0008 	add	r0, sp, #8
   27740:	eb0004db 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   27744:	e28dd020 	add	sp, sp, #32
   27748:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2774c:	e1a00004 	mov	r0, r4
   27750:	eb0007e5 	bl	296ec <CDWHCITransferStageData::GetFrameScheduler() const>
   27754:	e5903000 	ldr	r3, [r0]
   27758:	e1a01009 	mov	r1, r9
   2775c:	e5933010 	ldr	r3, [r3, #16]
   27760:	e12fff33 	blx	r3
   27764:	e1a00004 	mov	r0, r4
   27768:	eb0007df 	bl	296ec <CDWHCITransferStageData::GetFrameScheduler() const>
   2776c:	e5903000 	ldr	r3, [r0]
   27770:	e593300c 	ldr	r3, [r3, #12]
   27774:	e12fff33 	blx	r3
   27778:	e3500000 	cmp	r0, #0
   2777c:	1a000016 	bne	277dc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x3cc>
   27780:	e1a00004 	mov	r0, r4
   27784:	eb0007be 	bl	29684 <CDWHCITransferStageData::IsStageComplete() const>
   27788:	e3500000 	cmp	r0, #0
   2778c:	1a000023 	bne	27820 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x410>
   27790:	e1a00004 	mov	r0, r4
   27794:	eb000611 	bl	28fe0 <CDWHCITransferStageData::BeginSplitCycle()>
   27798:	e2501000 	subs	r1, r0, #0
   2779c:	0affff47 	beq	274c0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0xb0>
   277a0:	e1a00004 	mov	r0, r4
   277a4:	eb000611 	bl	28ff0 <CDWHCITransferStageData::IsPeriodic() const>
   277a8:	e2506000 	subs	r6, r0, #0
   277ac:	1affffb6 	bne	2768c <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x27c>
   277b0:	e3a01001 	mov	r1, #1
   277b4:	e1a00004 	mov	r0, r4
   277b8:	eb000600 	bl	28fc0 <CDWHCITransferStageData::SetState(unsigned int)>
   277bc:	e1a01006 	mov	r1, r6
   277c0:	e1a00004 	mov	r0, r4
   277c4:	eb0005ef 	bl	28f88 <CDWHCITransferStageData::SetSplitComplete(int)>
   277c8:	e1a00004 	mov	r0, r4
   277cc:	eb0007c6 	bl	296ec <CDWHCITransferStageData::GetFrameScheduler() const>
   277d0:	e5903000 	ldr	r3, [r0]
   277d4:	e5933008 	ldr	r3, [r3, #8]
   277d8:	e12fff33 	blx	r3
   277dc:	e1a01004 	mov	r1, r4
   277e0:	e1a00005 	mov	r0, r5
   277e4:	ebfffd8f 	bl	26e28 <CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)>
   277e8:	eaffff7b 	b	275dc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x1cc>
   277ec:	e1a00004 	mov	r0, r4
   277f0:	eb0007bd 	bl	296ec <CDWHCITransferStageData::GetFrameScheduler() const>
   277f4:	e5903000 	ldr	r3, [r0]
   277f8:	e1a0100a 	mov	r1, sl
   277fc:	e5933010 	ldr	r3, [r3, #16]
   27800:	e12fff33 	blx	r3
   27804:	e1a00004 	mov	r0, r4
   27808:	e3a01002 	mov	r1, #2
   2780c:	eb0005eb 	bl	28fc0 <CDWHCITransferStageData::SetState(unsigned int)>
   27810:	e1a01009 	mov	r1, r9
   27814:	e1a00004 	mov	r0, r4
   27818:	eb0005da 	bl	28f88 <CDWHCITransferStageData::SetSplitComplete(int)>
   2781c:	eaffffd0 	b	27764 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x354>
   27820:	e1a01006 	mov	r1, r6
   27824:	e1a00005 	mov	r0, r5
   27828:	ebfffc6c 	bl	269e0 <CDWHCIDevice::DisableChannelInterrupt(unsigned int)>
   2782c:	e1a00004 	mov	r0, r4
   27830:	eb000713 	bl	29484 <CDWHCITransferStageData::IsStatusStage() const>
   27834:	e3500000 	cmp	r0, #0
   27838:	0a000015 	beq	27894 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x484>
   2783c:	e3a01001 	mov	r1, #1
   27840:	e1a00008 	mov	r0, r8
   27844:	eb000d3a 	bl	2ad34 <CUSBRequest::SetStatus(int)>
   27848:	e3540000 	cmp	r4, #0
   2784c:	1affff22 	bne	274dc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0xcc>
   27850:	eaffff26 	b	274f0 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0xe0>
   27854:	eb003f45 	bl	37570 <CLogger::Get()>
   27858:	e58d9000 	str	r9, [sp]
   2785c:	e59f3058 	ldr	r3, [pc, #88]	; 278bc <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4ac>
   27860:	e3a02001 	mov	r2, #1
   27864:	e59f104c 	ldr	r1, [pc, #76]	; 278b8 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x4a8>
   27868:	eb004020 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2786c:	e3a01000 	mov	r1, #0
   27870:	e1a00008 	mov	r0, r8
   27874:	eb000d2e 	bl	2ad34 <CUSBRequest::SetStatus(int)>
   27878:	eaffff12 	b	274c8 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0xb8>
   2787c:	e1a00004 	mov	r0, r4
   27880:	eb000783 	bl	29694 <CDWHCITransferStageData::GetResultLen() const>
   27884:	e1a01000 	mov	r1, r0
   27888:	e1a00008 	mov	r0, r8
   2788c:	eb000d2a 	bl	2ad3c <CUSBRequest::SetResultLen(unsigned int)>
   27890:	eaffff93 	b	276e4 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x2d4>
   27894:	e1a00004 	mov	r0, r4
   27898:	eb00077d 	bl	29694 <CDWHCITransferStageData::GetResultLen() const>
   2789c:	e1a01000 	mov	r1, r0
   278a0:	e1a00008 	mov	r0, r8
   278a4:	eb000d24 	bl	2ad3c <CUSBRequest::SetResultLen(unsigned int)>
   278a8:	eaffffe3 	b	2783c <CDWHCIDevice::ChannelInterruptHandler(unsigned int)+0x42c>
   278ac:	0004a0b0 	.word	0x0004a0b0
   278b0:	0004a8b8 	.word	0x0004a8b8
   278b4:	0000078c 	.word	0x0000078c
   278b8:	0004a0a4 	.word	0x0004a0a4
   278bc:	0004a2d8 	.word	0x0004a2d8
   278c0:	20980510 	.word	0x20980510
   278c4:	20980508 	.word	0x20980508
   278c8:	000003ff 	.word	0x000003ff
   278cc:	000003de 	.word	0x000003de
   278d0:	0004a260 	.word	0x0004a260
   278d4:	00000315 	.word	0x00000315
   278d8:	0004a120 	.word	0x0004a120
   278dc:	00000317 	.word	0x00000317
   278e0:	0004a1ac 	.word	0x0004a1ac
   278e4:	10624dd3 	.word	0x10624dd3
   278e8:	00027008 	.word	0x00027008
   278ec:	000007dc 	.word	0x000007dc

000278f0 <CDWHCIDevice::InterruptHandler()>:
   278f0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   278f4:	e1a06000 	mov	r6, r0
   278f8:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   278fc:	e3a04000 	mov	r4, #0
   27900:	ee074f9a 	mcr	15, 0, r4, cr7, cr10, {4}
   27904:	e59f10d0 	ldr	r1, [pc, #208]	; 279dc <CDWHCIDevice::InterruptHandler()+0xec>
   27908:	e28d0004 	add	r0, sp, #4
   2790c:	eb000460 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   27910:	e28d0004 	add	r0, sp, #4
   27914:	eb000467 	bl	28ab8 <CDWHCIRegister::Read()>
   27918:	e28d0004 	add	r0, sp, #4
   2791c:	eb00047b 	bl	28b10 <CDWHCIRegister::Get() const>
   27920:	e3100402 	tst	r0, #33554432	; 0x2000000
   27924:	1a000007 	bne	27948 <CDWHCIDevice::InterruptHandler()+0x58>
   27928:	e28d0004 	add	r0, sp, #4
   2792c:	eb000468 	bl	28ad4 <CDWHCIRegister::Write()>
   27930:	e3a03000 	mov	r3, #0
   27934:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   27938:	e28d0004 	add	r0, sp, #4
   2793c:	eb00045c 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   27940:	e28dd02c 	add	sp, sp, #44	; 0x2c
   27944:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   27948:	e59f1090 	ldr	r1, [pc, #144]	; 279e0 <CDWHCIDevice::InterruptHandler()+0xf0>
   2794c:	e28d0010 	add	r0, sp, #16
   27950:	eb00044f 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   27954:	e28d0010 	add	r0, sp, #16
   27958:	eb000456 	bl	28ab8 <CDWHCIRegister::Read()>
   2795c:	e28d0010 	add	r0, sp, #16
   27960:	eb00045b 	bl	28ad4 <CDWHCIRegister::Write()>
   27964:	e596300c 	ldr	r3, [r6, #12]
   27968:	e1530004 	cmp	r3, r4
   2796c:	0a000017 	beq	279d0 <CDWHCIDevice::InterruptHandler()+0xe0>
   27970:	e3a05001 	mov	r5, #1
   27974:	e59f7068 	ldr	r7, [pc, #104]	; 279e4 <CDWHCIDevice::InterruptHandler()+0xf4>
   27978:	ea000004 	b	27990 <CDWHCIDevice::InterruptHandler()+0xa0>
   2797c:	e596300c 	ldr	r3, [r6, #12]
   27980:	e2844001 	add	r4, r4, #1
   27984:	e1530004 	cmp	r3, r4
   27988:	e1a05085 	lsl	r5, r5, #1
   2798c:	9a00000f 	bls	279d0 <CDWHCIDevice::InterruptHandler()+0xe0>
   27990:	e28d0010 	add	r0, sp, #16
   27994:	eb00045d 	bl	28b10 <CDWHCIRegister::Get() const>
   27998:	e1100005 	tst	r0, r5
   2799c:	0afffff6 	beq	2797c <CDWHCIDevice::InterruptHandler()+0x8c>
   279a0:	e3a02000 	mov	r2, #0
   279a4:	e0871284 	add	r1, r7, r4, lsl #5
   279a8:	e28d001c 	add	r0, sp, #28
   279ac:	eb00043c 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   279b0:	e28d001c 	add	r0, sp, #28
   279b4:	eb000446 	bl	28ad4 <CDWHCIRegister::Write()>
   279b8:	e1a00006 	mov	r0, r6
   279bc:	e1a01004 	mov	r1, r4
   279c0:	ebfffe92 	bl	27410 <CDWHCIDevice::ChannelInterruptHandler(unsigned int)>
   279c4:	e28d001c 	add	r0, sp, #28
   279c8:	eb000439 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   279cc:	eaffffea 	b	2797c <CDWHCIDevice::InterruptHandler()+0x8c>
   279d0:	e28d0010 	add	r0, sp, #16
   279d4:	eb000436 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   279d8:	eaffffd2 	b	27928 <CDWHCIDevice::InterruptHandler()+0x38>
   279dc:	20980014 	.word	0x20980014
   279e0:	20980414 	.word	0x20980414
   279e4:	2098050c 	.word	0x2098050c

000279e8 <CDWHCIDevice::InterruptStub(void*)>:
   279e8:	e92d4010 	push	{r4, lr}
   279ec:	e2504000 	subs	r4, r0, #0
   279f0:	0a000002 	beq	27a00 <CDWHCIDevice::InterruptStub(void*)+0x18>
   279f4:	e1a00004 	mov	r0, r4
   279f8:	e8bd4010 	pop	{r4, lr}
   279fc:	eaffffbb 	b	278f0 <CDWHCIDevice::InterruptHandler()>
   27a00:	e59f0014 	ldr	r0, [pc, #20]	; 27a1c <CDWHCIDevice::InterruptStub(void*)+0x34>
   27a04:	e59f2014 	ldr	r2, [pc, #20]	; 27a20 <CDWHCIDevice::InterruptStub(void*)+0x38>
   27a08:	e59f1014 	ldr	r1, [pc, #20]	; 27a24 <CDWHCIDevice::InterruptStub(void*)+0x3c>
   27a0c:	eb003d5b 	bl	36f80 <assertion_failed>
   27a10:	e1a00004 	mov	r0, r4
   27a14:	e8bd4010 	pop	{r4, lr}
   27a18:	eaffffb4 	b	278f0 <CDWHCIDevice::InterruptHandler()>
   27a1c:	0004a0c0 	.word	0x0004a0c0
   27a20:	0000041b 	.word	0x0000041b
   27a24:	0004a0b0 	.word	0x0004a0b0

00027a28 <CDWHCIDevice::AllocateWaitBlock()>:
   27a28:	e92d4070 	push	{r4, r5, r6, lr}
   27a2c:	e1a05000 	mov	r5, r0
   27a30:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
   27a34:	e3500000 	cmp	r0, #0
   27a38:	1a000015 	bne	27a94 <CDWHCIDevice::AllocateWaitBlock()+0x6c>
   27a3c:	e3a04000 	mov	r4, #0
   27a40:	e3a03001 	mov	r3, #1
   27a44:	ea000003 	b	27a58 <CDWHCIDevice::AllocateWaitBlock()+0x30>
   27a48:	e2844001 	add	r4, r4, #1
   27a4c:	e3540010 	cmp	r4, #16
   27a50:	e1a03083 	lsl	r3, r3, #1
   27a54:	0a000009 	beq	27a80 <CDWHCIDevice::AllocateWaitBlock()+0x58>
   27a58:	e595209c 	ldr	r2, [r5, #156]	; 0x9c
   27a5c:	e1120003 	tst	r2, r3
   27a60:	1afffff8 	bne	27a48 <CDWHCIDevice::AllocateWaitBlock()+0x20>
   27a64:	e595209c 	ldr	r2, [r5, #156]	; 0x9c
   27a68:	e3500000 	cmp	r0, #0
   27a6c:	e1823003 	orr	r3, r2, r3
   27a70:	e585309c 	str	r3, [r5, #156]	; 0x9c
   27a74:	1a000003 	bne	27a88 <CDWHCIDevice::AllocateWaitBlock()+0x60>
   27a78:	e1a00004 	mov	r0, r4
   27a7c:	e8bd8070 	pop	{r4, r5, r6, pc}
   27a80:	e3500000 	cmp	r0, #0
   27a84:	0afffffb 	beq	27a78 <CDWHCIDevice::AllocateWaitBlock()+0x50>
   27a88:	eb00325a 	bl	343f8 <LeaveCritical>
   27a8c:	e1a00004 	mov	r0, r4
   27a90:	e8bd8070 	pop	{r4, r5, r6, pc}
   27a94:	eb00322b 	bl	34348 <EnterCritical>
   27a98:	e59500a0 	ldr	r0, [r5, #160]	; 0xa0
   27a9c:	eaffffe6 	b	27a3c <CDWHCIDevice::AllocateWaitBlock()+0x14>

00027aa0 <CDWHCIDevice::FreeWaitBlock(unsigned int)>:
   27aa0:	e351000f 	cmp	r1, #15
   27aa4:	e92d4070 	push	{r4, r5, r6, lr}
   27aa8:	e1a06001 	mov	r6, r1
   27aac:	e1a04000 	mov	r4, r0
   27ab0:	8a000016 	bhi	27b10 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x70>
   27ab4:	e3a05001 	mov	r5, #1
   27ab8:	e59400a0 	ldr	r0, [r4, #160]	; 0xa0
   27abc:	e1a05615 	lsl	r5, r5, r6
   27ac0:	e3500000 	cmp	r0, #0
   27ac4:	1a00000f 	bne	27b08 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x68>
   27ac8:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
   27acc:	e1130005 	tst	r3, r5
   27ad0:	0a000007 	beq	27af4 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x54>
   27ad4:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
   27ad8:	e59420a0 	ldr	r2, [r4, #160]	; 0xa0
   27adc:	e1c35005 	bic	r5, r3, r5
   27ae0:	e3520000 	cmp	r2, #0
   27ae4:	e584509c 	str	r5, [r4, #156]	; 0x9c
   27ae8:	08bd8070 	popeq	{r4, r5, r6, pc}
   27aec:	e8bd4070 	pop	{r4, r5, r6, lr}
   27af0:	ea003240 	b	343f8 <LeaveCritical>
   27af4:	e59f2028 	ldr	r2, [pc, #40]	; 27b24 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x84>
   27af8:	e59f1028 	ldr	r1, [pc, #40]	; 27b28 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x88>
   27afc:	e59f0028 	ldr	r0, [pc, #40]	; 27b2c <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x8c>
   27b00:	eb003d1e 	bl	36f80 <assertion_failed>
   27b04:	eafffff2 	b	27ad4 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x34>
   27b08:	eb00320e 	bl	34348 <EnterCritical>
   27b0c:	eaffffed 	b	27ac8 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x28>
   27b10:	e59f2018 	ldr	r2, [pc, #24]	; 27b30 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x90>
   27b14:	e59f100c 	ldr	r1, [pc, #12]	; 27b28 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x88>
   27b18:	e59f0014 	ldr	r0, [pc, #20]	; 27b34 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x94>
   27b1c:	eb003d17 	bl	36f80 <assertion_failed>
   27b20:	eaffffe3 	b	27ab4 <CDWHCIDevice::FreeWaitBlock(unsigned int)+0x14>
   27b24:	00000487 	.word	0x00000487
   27b28:	0004a0b0 	.word	0x0004a0b0
   27b2c:	0004a2fc 	.word	0x0004a2fc
   27b30:	00000482 	.word	0x00000482
   27b34:	0004a0cc 	.word	0x0004a0cc

00027b38 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)>:
   27b38:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27b3c:	e1a07001 	mov	r7, r1
   27b40:	e1a08002 	mov	r8, r2
   27b44:	e1a09003 	mov	r9, r3
   27b48:	e1a06000 	mov	r6, r0
   27b4c:	ebffffb5 	bl	27a28 <CDWHCIDevice::AllocateWaitBlock()>
   27b50:	e350000f 	cmp	r0, #15
   27b54:	8a000021 	bhi	27be0 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xa8>
   27b58:	e3570000 	cmp	r7, #0
   27b5c:	e1a05000 	mov	r5, r0
   27b60:	0a000025 	beq	27bfc <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xc4>
   27b64:	e1a03006 	mov	r3, r6
   27b68:	e1a02005 	mov	r2, r5
   27b6c:	e59f109c 	ldr	r1, [pc, #156]	; 27c10 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xd8>
   27b70:	e1a00007 	mov	r0, r7
   27b74:	e0864105 	add	r4, r6, r5, lsl #2
   27b78:	eb000cac 	bl	2ae30 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   27b7c:	e594305c 	ldr	r3, [r4, #92]	; 0x5c
   27b80:	e3530000 	cmp	r3, #0
   27b84:	1a000017 	bne	27be8 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xb0>
   27b88:	e3a01001 	mov	r1, #1
   27b8c:	e1a03009 	mov	r3, r9
   27b90:	e584105c 	str	r1, [r4, #92]	; 0x5c
   27b94:	e1a02008 	mov	r2, r8
   27b98:	e1a01007 	mov	r1, r7
   27b9c:	e1a00006 	mov	r0, r6
   27ba0:	ebfffd8d 	bl	271dc <CDWHCIDevice::TransferStageAsync(CUSBRequest*, int, int)>
   27ba4:	e3500000 	cmp	r0, #0
   27ba8:	0a000008 	beq	27bd0 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0x98>
   27bac:	e594305c 	ldr	r3, [r4, #92]	; 0x5c
   27bb0:	e3530000 	cmp	r3, #0
   27bb4:	1afffffc 	bne	27bac <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0x74>
   27bb8:	e1a00006 	mov	r0, r6
   27bbc:	e1a01005 	mov	r1, r5
   27bc0:	ebffffb6 	bl	27aa0 <CDWHCIDevice::FreeWaitBlock(unsigned int)>
   27bc4:	e1a00007 	mov	r0, r7
   27bc8:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   27bcc:	ea000c5c 	b	2ad44 <CUSBRequest::GetStatus() const>
   27bd0:	e584005c 	str	r0, [r4, #92]	; 0x5c
   27bd4:	e1a01005 	mov	r1, r5
   27bd8:	e1a00006 	mov	r0, r6
   27bdc:	ebffffaf 	bl	27aa0 <CDWHCIDevice::FreeWaitBlock(unsigned int)>
   27be0:	e3a00000 	mov	r0, #0
   27be4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27be8:	e59f2024 	ldr	r2, [pc, #36]	; 27c14 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xdc>
   27bec:	e59f1024 	ldr	r1, [pc, #36]	; 27c18 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xe0>
   27bf0:	e59f0024 	ldr	r0, [pc, #36]	; 27c1c <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xe4>
   27bf4:	eb003ce1 	bl	36f80 <assertion_failed>
   27bf8:	eaffffe2 	b	27b88 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0x50>
   27bfc:	e59f201c 	ldr	r2, [pc, #28]	; 27c20 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xe8>
   27c00:	e59f1010 	ldr	r1, [pc, #16]	; 27c18 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xe0>
   27c04:	e59f0018 	ldr	r0, [pc, #24]	; 27c24 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0xec>
   27c08:	eb003cdc 	bl	36f80 <assertion_failed>
   27c0c:	eaffffd4 	b	27b64 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)+0x2c>
   27c10:	00026540 	.word	0x00026540
   27c14:	0000023d 	.word	0x0000023d
   27c18:	0004a0b0 	.word	0x0004a0b0
   27c1c:	0004a324 	.word	0x0004a324
   27c20:	0000023a 	.word	0x0000023a
   27c24:	0004a1ac 	.word	0x0004a1ac

00027c28 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)>:
   27c28:	e92d4070 	push	{r4, r5, r6, lr}
   27c2c:	e3a03000 	mov	r3, #0
   27c30:	e1a05000 	mov	r5, r0
   27c34:	e1a04001 	mov	r4, r1
   27c38:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   27c3c:	e1510003 	cmp	r1, r3
   27c40:	0a000077 	beq	27e24 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x1fc>
   27c44:	e3a01000 	mov	r1, #0
   27c48:	e1a00004 	mov	r0, r4
   27c4c:	eb000c38 	bl	2ad34 <CUSBRequest::SetStatus(int)>
   27c50:	e1a00004 	mov	r0, r4
   27c54:	eb000c26 	bl	2acf4 <CUSBRequest::GetEndpoint() const>
   27c58:	eb000b11 	bl	2a8a4 <CUSBEndpoint::GetType() const>
   27c5c:	e3500000 	cmp	r0, #0
   27c60:	e1a00004 	mov	r0, r4
   27c64:	1a00001a 	bne	27cd4 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xac>
   27c68:	eb000c44 	bl	2ad80 <CUSBRequest::GetSetupData()>
   27c6c:	e2506000 	subs	r6, r0, #0
   27c70:	0a000066 	beq	27e10 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x1e8>
   27c74:	e1d630d0 	ldrsb	r3, [r6]
   27c78:	e1a00004 	mov	r0, r4
   27c7c:	e3530000 	cmp	r3, #0
   27c80:	ba000035 	blt	27d5c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x134>
   27c84:	eb000c67 	bl	2ae28 <CUSBRequest::GetBufLen() const>
   27c88:	e2503000 	subs	r3, r0, #0
   27c8c:	1a000050 	bne	27dd4 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x1ac>
   27c90:	e1a02003 	mov	r2, r3
   27c94:	e1a01004 	mov	r1, r4
   27c98:	e1a00005 	mov	r0, r5
   27c9c:	ebffffa5 	bl	27b38 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)>
   27ca0:	e3500000 	cmp	r0, #0
   27ca4:	0a00001c 	beq	27d1c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xf4>
   27ca8:	e3a03001 	mov	r3, #1
   27cac:	e1a01004 	mov	r1, r4
   27cb0:	e1a00005 	mov	r0, r5
   27cb4:	e1a02003 	mov	r2, r3
   27cb8:	ebffff9e 	bl	27b38 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)>
   27cbc:	e3500000 	cmp	r0, #0
   27cc0:	0a000015 	beq	27d1c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xf4>
   27cc4:	e3a03000 	mov	r3, #0
   27cc8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   27ccc:	e3a00001 	mov	r0, #1
   27cd0:	e8bd8070 	pop	{r4, r5, r6, pc}
   27cd4:	eb000c06 	bl	2acf4 <CUSBRequest::GetEndpoint() const>
   27cd8:	eb000af1 	bl	2a8a4 <CUSBEndpoint::GetType() const>
   27cdc:	e3500001 	cmp	r0, #1
   27ce0:	1a00000f 	bne	27d24 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xfc>
   27ce4:	e1a00004 	mov	r0, r4
   27ce8:	eb000c4e 	bl	2ae28 <CUSBRequest::GetBufLen() const>
   27cec:	e3500000 	cmp	r0, #0
   27cf0:	0a000032 	beq	27dc0 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x198>
   27cf4:	e1a00004 	mov	r0, r4
   27cf8:	eb000bfd 	bl	2acf4 <CUSBRequest::GetEndpoint() const>
   27cfc:	eb000aea 	bl	2a8ac <CUSBEndpoint::IsDirectionIn() const>
   27d00:	e1a01004 	mov	r1, r4
   27d04:	e1a02000 	mov	r2, r0
   27d08:	e3a03000 	mov	r3, #0
   27d0c:	e1a00005 	mov	r0, r5
   27d10:	ebffff88 	bl	27b38 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)>
   27d14:	e3500000 	cmp	r0, #0
   27d18:	1affffe9 	bne	27cc4 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x9c>
   27d1c:	e3a00000 	mov	r0, #0
   27d20:	e8bd8070 	pop	{r4, r5, r6, pc}
   27d24:	e1a00004 	mov	r0, r4
   27d28:	eb000bf1 	bl	2acf4 <CUSBRequest::GetEndpoint() const>
   27d2c:	eb000adc 	bl	2a8a4 <CUSBEndpoint::GetType() const>
   27d30:	e3500002 	cmp	r0, #2
   27d34:	0affffea 	beq	27ce4 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xbc>
   27d38:	e3a020c8 	mov	r2, #200	; 0xc8
   27d3c:	e59f1108 	ldr	r1, [pc, #264]	; 27e4c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x224>
   27d40:	e59f0108 	ldr	r0, [pc, #264]	; 27e50 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x228>
   27d44:	eb003c8d 	bl	36f80 <assertion_failed>
   27d48:	e1a00004 	mov	r0, r4
   27d4c:	eb000c35 	bl	2ae28 <CUSBRequest::GetBufLen() const>
   27d50:	e3500000 	cmp	r0, #0
   27d54:	1affffe6 	bne	27cf4 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xcc>
   27d58:	ea000018 	b	27dc0 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x198>
   27d5c:	eb000c31 	bl	2ae28 <CUSBRequest::GetBufLen() const>
   27d60:	e3500000 	cmp	r0, #0
   27d64:	0a000033 	beq	27e38 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x210>
   27d68:	e3a03000 	mov	r3, #0
   27d6c:	e1a01004 	mov	r1, r4
   27d70:	e1a02003 	mov	r2, r3
   27d74:	e1a00005 	mov	r0, r5
   27d78:	ebffff6e 	bl	27b38 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)>
   27d7c:	e3500000 	cmp	r0, #0
   27d80:	0affffe5 	beq	27d1c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xf4>
   27d84:	e3a03000 	mov	r3, #0
   27d88:	e3a02001 	mov	r2, #1
   27d8c:	e1a01004 	mov	r1, r4
   27d90:	e1a00005 	mov	r0, r5
   27d94:	ebffff67 	bl	27b38 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)>
   27d98:	e3500000 	cmp	r0, #0
   27d9c:	0affffde 	beq	27d1c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xf4>
   27da0:	e1a01004 	mov	r1, r4
   27da4:	e1a00005 	mov	r0, r5
   27da8:	e3a03001 	mov	r3, #1
   27dac:	e3a02000 	mov	r2, #0
   27db0:	ebffff60 	bl	27b38 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)>
   27db4:	e3500000 	cmp	r0, #0
   27db8:	1affffc1 	bne	27cc4 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x9c>
   27dbc:	eaffffd6 	b	27d1c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xf4>
   27dc0:	e3a020c9 	mov	r2, #201	; 0xc9
   27dc4:	e59f1080 	ldr	r1, [pc, #128]	; 27e4c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x224>
   27dc8:	e59f0084 	ldr	r0, [pc, #132]	; 27e54 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x22c>
   27dcc:	eb003c6b 	bl	36f80 <assertion_failed>
   27dd0:	eaffffc7 	b	27cf4 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xcc>
   27dd4:	e3a03000 	mov	r3, #0
   27dd8:	e1a01004 	mov	r1, r4
   27ddc:	e1a02003 	mov	r2, r3
   27de0:	e1a00005 	mov	r0, r5
   27de4:	ebffff53 	bl	27b38 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)>
   27de8:	e3500000 	cmp	r0, #0
   27dec:	0affffca 	beq	27d1c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xf4>
   27df0:	e3a03000 	mov	r3, #0
   27df4:	e1a01004 	mov	r1, r4
   27df8:	e1a02003 	mov	r2, r3
   27dfc:	e1a00005 	mov	r0, r5
   27e00:	ebffff4c 	bl	27b38 <CDWHCIDevice::TransferStage(CUSBRequest*, int, int)>
   27e04:	e3500000 	cmp	r0, #0
   27e08:	0affffc3 	beq	27d1c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0xf4>
   27e0c:	eaffffa5 	b	27ca8 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x80>
   27e10:	e3a020a3 	mov	r2, #163	; 0xa3
   27e14:	e59f1030 	ldr	r1, [pc, #48]	; 27e4c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x224>
   27e18:	e59f0038 	ldr	r0, [pc, #56]	; 27e58 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x230>
   27e1c:	eb003c57 	bl	36f80 <assertion_failed>
   27e20:	eaffff93 	b	27c74 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x4c>
   27e24:	e3a0209c 	mov	r2, #156	; 0x9c
   27e28:	e59f101c 	ldr	r1, [pc, #28]	; 27e4c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x224>
   27e2c:	e59f0028 	ldr	r0, [pc, #40]	; 27e5c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x234>
   27e30:	eb003c52 	bl	36f80 <assertion_failed>
   27e34:	eaffff82 	b	27c44 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x1c>
   27e38:	e3a020a7 	mov	r2, #167	; 0xa7
   27e3c:	e59f1008 	ldr	r1, [pc, #8]	; 27e4c <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x224>
   27e40:	e59f000c 	ldr	r0, [pc, #12]	; 27e54 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x22c>
   27e44:	eb003c4d 	bl	36f80 <assertion_failed>
   27e48:	eaffffc6 	b	27d68 <CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*)+0x140>
   27e4c:	0004a0b0 	.word	0x0004a0b0
   27e50:	0004a1d4 	.word	0x0004a1d4
   27e54:	0004a248 	.word	0x0004a248
   27e58:	0004a33c 	.word	0x0004a33c
   27e5c:	0004a1ac 	.word	0x0004a1ac

00027e60 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)>:
   27e60:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27e64:	e2516000 	subs	r6, r1, #0
   27e68:	e1a08000 	mov	r8, r0
   27e6c:	e1a05002 	mov	r5, r2
   27e70:	e1a07003 	mov	r7, r3
   27e74:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
   27e78:	0a00002c 	beq	27f30 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xd0>
   27e7c:	e3550000 	cmp	r5, #0
   27e80:	0a000025 	beq	27f1c <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xbc>
   27e84:	e3540000 	cmp	r4, #0
   27e88:	0a00001e 	beq	27f08 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xa8>
   27e8c:	e59fb0b0 	ldr	fp, [pc, #176]	; 27f44 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xe4>
   27e90:	e59fa0b0 	ldr	sl, [pc, #176]	; 27f48 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xe8>
   27e94:	e59f90b0 	ldr	r9, [pc, #176]	; 27f4c <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xec>
   27e98:	ea000008 	b	27ec0 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x60>
   27e9c:	e3570000 	cmp	r7, #0
   27ea0:	1a00000c 	bne	27ed8 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x78>
   27ea4:	e5983008 	ldr	r3, [r8, #8]
   27ea8:	e3530000 	cmp	r3, #0
   27eac:	0a00000b 	beq	27ee0 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x80>
   27eb0:	e3a00001 	mov	r0, #1
   27eb4:	eb003460 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   27eb8:	e2544001 	subs	r4, r4, #1
   27ebc:	0a00000f 	beq	27f00 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xa0>
   27ec0:	e1a00006 	mov	r0, r6
   27ec4:	eb0002fb 	bl	28ab8 <CDWHCIRegister::Read()>
   27ec8:	e1100005 	tst	r0, r5
   27ecc:	1afffff2 	bne	27e9c <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x3c>
   27ed0:	e3570000 	cmp	r7, #0
   27ed4:	1afffff2 	bne	27ea4 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x44>
   27ed8:	e3a00001 	mov	r0, #1
   27edc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ee0:	e1a0200b 	mov	r2, fp
   27ee4:	e1a0100a 	mov	r1, sl
   27ee8:	e1a00009 	mov	r0, r9
   27eec:	eb003c23 	bl	36f80 <assertion_failed>
   27ef0:	e3a00001 	mov	r0, #1
   27ef4:	eb003450 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   27ef8:	e2544001 	subs	r4, r4, #1
   27efc:	1affffef 	bne	27ec0 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x60>
   27f00:	e1a00004 	mov	r0, r4
   27f04:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f08:	e59f2040 	ldr	r2, [pc, #64]	; 27f50 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xf0>
   27f0c:	e59f1034 	ldr	r1, [pc, #52]	; 27f48 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xe8>
   27f10:	e59f003c 	ldr	r0, [pc, #60]	; 27f54 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xf4>
   27f14:	eb003c19 	bl	36f80 <assertion_failed>
   27f18:	eaffffdb 	b	27e8c <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x2c>
   27f1c:	e59f2034 	ldr	r2, [pc, #52]	; 27f58 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xf8>
   27f20:	e59f1020 	ldr	r1, [pc, #32]	; 27f48 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xe8>
   27f24:	e59f0030 	ldr	r0, [pc, #48]	; 27f5c <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xfc>
   27f28:	eb003c14 	bl	36f80 <assertion_failed>
   27f2c:	eaffffd4 	b	27e84 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x24>
   27f30:	e59f2028 	ldr	r2, [pc, #40]	; 27f60 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x100>
   27f34:	e59f100c 	ldr	r1, [pc, #12]	; 27f48 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0xe8>
   27f38:	e59f0024 	ldr	r0, [pc, #36]	; 27f64 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x104>
   27f3c:	eb003c0f 	bl	36f80 <assertion_failed>
   27f40:	eaffffcd 	b	27e7c <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)+0x1c>
   27f44:	00000498 	.word	0x00000498
   27f48:	0004a0b0 	.word	0x0004a0b0
   27f4c:	0004a110 	.word	0x0004a110
   27f50:	00000494 	.word	0x00000494
   27f54:	0004a364 	.word	0x0004a364
   27f58:	00000493 	.word	0x00000493
   27f5c:	0004a358 	.word	0x0004a358
   27f60:	00000492 	.word	0x00000492
   27f64:	0004a348 	.word	0x0004a348

00027f68 <CDWHCIDevice::EnableRootPort()>:
   27f68:	e92d4030 	push	{r4, r5, lr}
   27f6c:	e24dd01c 	sub	sp, sp, #28
   27f70:	e1a04000 	mov	r4, r0
   27f74:	e59f10a8 	ldr	r1, [pc, #168]	; 28024 <CDWHCIDevice::EnableRootPort()+0xbc>
   27f78:	e28d000c 	add	r0, sp, #12
   27f7c:	eb0002c4 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   27f80:	e3a05014 	mov	r5, #20
   27f84:	e3a03001 	mov	r3, #1
   27f88:	e1a00004 	mov	r0, r4
   27f8c:	e28d100c 	add	r1, sp, #12
   27f90:	e58d5000 	str	r5, [sp]
   27f94:	e1a02003 	mov	r2, r3
   27f98:	ebffffb0 	bl	27e60 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)>
   27f9c:	e2504000 	subs	r4, r0, #0
   27fa0:	0a00001a 	beq	28010 <CDWHCIDevice::EnableRootPort()+0xa8>
   27fa4:	e3a00064 	mov	r0, #100	; 0x64
   27fa8:	eb003423 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   27fac:	e28d000c 	add	r0, sp, #12
   27fb0:	eb0002c0 	bl	28ab8 <CDWHCIRegister::Read()>
   27fb4:	e3e0102e 	mvn	r1, #46	; 0x2e
   27fb8:	e28d000c 	add	r0, sp, #12
   27fbc:	eb0002f6 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   27fc0:	e3a01c01 	mov	r1, #256	; 0x100
   27fc4:	e28d000c 	add	r0, sp, #12
   27fc8:	eb000303 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   27fcc:	e28d000c 	add	r0, sp, #12
   27fd0:	eb0002bf 	bl	28ad4 <CDWHCIRegister::Write()>
   27fd4:	e3a00032 	mov	r0, #50	; 0x32
   27fd8:	eb003417 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   27fdc:	e28d000c 	add	r0, sp, #12
   27fe0:	eb0002b4 	bl	28ab8 <CDWHCIRegister::Read()>
   27fe4:	e3e0102e 	mvn	r1, #46	; 0x2e
   27fe8:	e28d000c 	add	r0, sp, #12
   27fec:	eb0002ea 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   27ff0:	e3e01c01 	mvn	r1, #256	; 0x100
   27ff4:	e28d000c 	add	r0, sp, #12
   27ff8:	eb0002e7 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   27ffc:	e28d000c 	add	r0, sp, #12
   28000:	eb0002b3 	bl	28ad4 <CDWHCIRegister::Write()>
   28004:	e1a00005 	mov	r0, r5
   28008:	eb00340b 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   2800c:	e3a04001 	mov	r4, #1
   28010:	e28d000c 	add	r0, sp, #12
   28014:	eb0002a6 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   28018:	e1a00004 	mov	r0, r4
   2801c:	e28dd01c 	add	sp, sp, #28
   28020:	e8bd8030 	pop	{r4, r5, pc}
   28024:	20980440 	.word	0x20980440

00028028 <CDWHCIDevice::Reset()>:
   28028:	e92d4030 	push	{r4, r5, lr}
   2802c:	e1a04000 	mov	r4, r0
   28030:	e3a05064 	mov	r5, #100	; 0x64
   28034:	e24dd01c 	sub	sp, sp, #28
   28038:	e3a02000 	mov	r2, #0
   2803c:	e59f1084 	ldr	r1, [pc, #132]	; 280c8 <CDWHCIDevice::Reset()+0xa0>
   28040:	e28d000c 	add	r0, sp, #12
   28044:	eb000296 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   28048:	e28d100c 	add	r1, sp, #12
   2804c:	e1a00004 	mov	r0, r4
   28050:	e58d5000 	str	r5, [sp]
   28054:	e3a03001 	mov	r3, #1
   28058:	e3a02102 	mov	r2, #-2147483648	; 0x80000000
   2805c:	ebffff7f 	bl	27e60 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)>
   28060:	e3500000 	cmp	r0, #0
   28064:	1a000005 	bne	28080 <CDWHCIDevice::Reset()+0x58>
   28068:	e3a04000 	mov	r4, #0
   2806c:	e28d000c 	add	r0, sp, #12
   28070:	eb00028f 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   28074:	e1a00004 	mov	r0, r4
   28078:	e28dd01c 	add	sp, sp, #28
   2807c:	e8bd8030 	pop	{r4, r5, pc}
   28080:	e3a01001 	mov	r1, #1
   28084:	e28d000c 	add	r0, sp, #12
   28088:	eb0002d3 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   2808c:	e28d000c 	add	r0, sp, #12
   28090:	eb00028f 	bl	28ad4 <CDWHCIRegister::Write()>
   28094:	e3a0300a 	mov	r3, #10
   28098:	e1a00004 	mov	r0, r4
   2809c:	e58d3000 	str	r3, [sp]
   280a0:	e3a02001 	mov	r2, #1
   280a4:	e3a03000 	mov	r3, #0
   280a8:	e28d100c 	add	r1, sp, #12
   280ac:	ebffff6b 	bl	27e60 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)>
   280b0:	e3500000 	cmp	r0, #0
   280b4:	0affffeb 	beq	28068 <CDWHCIDevice::Reset()+0x40>
   280b8:	e1a00005 	mov	r0, r5
   280bc:	eb0033de 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   280c0:	e3a04001 	mov	r4, #1
   280c4:	eaffffe8 	b	2806c <CDWHCIDevice::Reset()+0x44>
   280c8:	20980010 	.word	0x20980010

000280cc <CDWHCIDevice::InitCore()>:
   280cc:	e92d4030 	push	{r4, r5, lr}
   280d0:	e1a04000 	mov	r4, r0
   280d4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   280d8:	e59f1220 	ldr	r1, [pc, #544]	; 28300 <CDWHCIDevice::InitCore()+0x234>
   280dc:	e28d0004 	add	r0, sp, #4
   280e0:	eb00026b 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   280e4:	e28d0004 	add	r0, sp, #4
   280e8:	eb000272 	bl	28ab8 <CDWHCIRegister::Read()>
   280ec:	e28d0004 	add	r0, sp, #4
   280f0:	e3e01601 	mvn	r1, #1048576	; 0x100000
   280f4:	eb0002a8 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   280f8:	e3e01501 	mvn	r1, #4194304	; 0x400000
   280fc:	e28d0004 	add	r0, sp, #4
   28100:	eb0002a5 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   28104:	e28d0004 	add	r0, sp, #4
   28108:	eb000271 	bl	28ad4 <CDWHCIRegister::Write()>
   2810c:	e1a00004 	mov	r0, r4
   28110:	ebffffc4 	bl	28028 <CDWHCIDevice::Reset()>
   28114:	e2505000 	subs	r5, r0, #0
   28118:	0a00005b 	beq	2828c <CDWHCIDevice::InitCore()+0x1c0>
   2811c:	e28d0004 	add	r0, sp, #4
   28120:	eb000264 	bl	28ab8 <CDWHCIRegister::Read()>
   28124:	e3e01010 	mvn	r1, #16
   28128:	e28d0004 	add	r0, sp, #4
   2812c:	eb00029a 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   28130:	e3e01008 	mvn	r1, #8
   28134:	e28d0004 	add	r0, sp, #4
   28138:	eb000297 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   2813c:	e28d0004 	add	r0, sp, #4
   28140:	eb000263 	bl	28ad4 <CDWHCIRegister::Write()>
   28144:	e59f11b8 	ldr	r1, [pc, #440]	; 28304 <CDWHCIDevice::InitCore()+0x238>
   28148:	e28d0010 	add	r0, sp, #16
   2814c:	eb000250 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   28150:	e28d0010 	add	r0, sp, #16
   28154:	eb000257 	bl	28ab8 <CDWHCIRegister::Read()>
   28158:	e28d0010 	add	r0, sp, #16
   2815c:	eb00026b 	bl	28b10 <CDWHCIRegister::Get() const>
   28160:	e1a001a0 	lsr	r0, r0, #3
   28164:	e2000003 	and	r0, r0, #3
   28168:	e3500002 	cmp	r0, #2
   2816c:	1a000041 	bne	28278 <CDWHCIDevice::InitCore()+0x1ac>
   28170:	e28d0004 	add	r0, sp, #4
   28174:	eb00024f 	bl	28ab8 <CDWHCIRegister::Read()>
   28178:	e28d0010 	add	r0, sp, #16
   2817c:	eb000263 	bl	28b10 <CDWHCIRegister::Get() const>
   28180:	e1a00320 	lsr	r0, r0, #6
   28184:	e2000003 	and	r0, r0, #3
   28188:	e3500002 	cmp	r0, #2
   2818c:	0a000044 	beq	282a4 <CDWHCIDevice::InitCore()+0x1d8>
   28190:	e3e01802 	mvn	r1, #131072	; 0x20000
   28194:	e28d0004 	add	r0, sp, #4
   28198:	eb00027f 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   2819c:	e3e01702 	mvn	r1, #524288	; 0x80000
   281a0:	e28d0004 	add	r0, sp, #4
   281a4:	eb00027c 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   281a8:	e28d0004 	add	r0, sp, #4
   281ac:	eb000248 	bl	28ad4 <CDWHCIRegister::Write()>
   281b0:	e594300c 	ldr	r3, [r4, #12]
   281b4:	e3530000 	cmp	r3, #0
   281b8:	1a00004b 	bne	282ec <CDWHCIDevice::InitCore()+0x220>
   281bc:	e28d0010 	add	r0, sp, #16
   281c0:	eb000252 	bl	28b10 <CDWHCIRegister::Get() const>
   281c4:	e1a00720 	lsr	r0, r0, #14
   281c8:	e200000f 	and	r0, r0, #15
   281cc:	e2403003 	sub	r3, r0, #3
   281d0:	e353000c 	cmp	r3, #12
   281d4:	e2800001 	add	r0, r0, #1
   281d8:	e584000c 	str	r0, [r4, #12]
   281dc:	8a00003d 	bhi	282d8 <CDWHCIDevice::InitCore()+0x20c>
   281e0:	e59f1120 	ldr	r1, [pc, #288]	; 28308 <CDWHCIDevice::InitCore()+0x23c>
   281e4:	e28d001c 	add	r0, sp, #28
   281e8:	eb000229 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   281ec:	e28d001c 	add	r0, sp, #28
   281f0:	eb000230 	bl	28ab8 <CDWHCIRegister::Read()>
   281f4:	e28d001c 	add	r0, sp, #28
   281f8:	e3a01020 	mov	r1, #32
   281fc:	eb000276 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   28200:	e28d001c 	add	r0, sp, #28
   28204:	e3a01010 	mov	r1, #16
   28208:	eb000273 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   2820c:	e3e01006 	mvn	r1, #6
   28210:	e28d001c 	add	r0, sp, #28
   28214:	eb000260 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   28218:	e28d001c 	add	r0, sp, #28
   2821c:	eb00022c 	bl	28ad4 <CDWHCIRegister::Write()>
   28220:	e28d0004 	add	r0, sp, #4
   28224:	eb000223 	bl	28ab8 <CDWHCIRegister::Read()>
   28228:	e3e01c02 	mvn	r1, #512	; 0x200
   2822c:	e28d0004 	add	r0, sp, #4
   28230:	eb000259 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   28234:	e3e01c01 	mvn	r1, #256	; 0x100
   28238:	e28d0004 	add	r0, sp, #4
   2823c:	eb000256 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   28240:	e28d0004 	add	r0, sp, #4
   28244:	eb000222 	bl	28ad4 <CDWHCIRegister::Write()>
   28248:	e1a00004 	mov	r0, r4
   2824c:	ebfff9a1 	bl	268d8 <CDWHCIDevice::EnableCommonInterrupts()>
   28250:	e28d001c 	add	r0, sp, #28
   28254:	eb000216 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   28258:	e28d0010 	add	r0, sp, #16
   2825c:	eb000214 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   28260:	e3a05001 	mov	r5, #1
   28264:	e28d0004 	add	r0, sp, #4
   28268:	eb000211 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   2826c:	e1a00005 	mov	r0, r5
   28270:	e28dd02c 	add	sp, sp, #44	; 0x2c
   28274:	e8bd8030 	pop	{r4, r5, pc}
   28278:	e59f208c 	ldr	r2, [pc, #140]	; 2830c <CDWHCIDevice::InitCore()+0x240>
   2827c:	e59f108c 	ldr	r1, [pc, #140]	; 28310 <CDWHCIDevice::InitCore()+0x244>
   28280:	e59f008c 	ldr	r0, [pc, #140]	; 28314 <CDWHCIDevice::InitCore()+0x248>
   28284:	eb003b3d 	bl	36f80 <assertion_failed>
   28288:	eaffffb8 	b	28170 <CDWHCIDevice::InitCore()+0xa4>
   2828c:	eb003cb7 	bl	37570 <CLogger::Get()>
   28290:	e59f3080 	ldr	r3, [pc, #128]	; 28318 <CDWHCIDevice::InitCore()+0x24c>
   28294:	e3a02001 	mov	r2, #1
   28298:	e59f107c 	ldr	r1, [pc, #124]	; 2831c <CDWHCIDevice::InitCore()+0x250>
   2829c:	eb003d93 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   282a0:	eaffffef 	b	28264 <CDWHCIDevice::InitCore()+0x198>
   282a4:	e28d0010 	add	r0, sp, #16
   282a8:	eb000218 	bl	28b10 <CDWHCIRegister::Get() const>
   282ac:	e1a00420 	lsr	r0, r0, #8
   282b0:	e2000003 	and	r0, r0, #3
   282b4:	e3500001 	cmp	r0, #1
   282b8:	1affffb4 	bne	28190 <CDWHCIDevice::InitCore()+0xc4>
   282bc:	e28d0004 	add	r0, sp, #4
   282c0:	e3a01802 	mov	r1, #131072	; 0x20000
   282c4:	eb000244 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   282c8:	e3a01702 	mov	r1, #524288	; 0x80000
   282cc:	e28d0004 	add	r0, sp, #4
   282d0:	eb000241 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   282d4:	eaffffb3 	b	281a8 <CDWHCIDevice::InitCore()+0xdc>
   282d8:	e3a02d05 	mov	r2, #320	; 0x140
   282dc:	e59f102c 	ldr	r1, [pc, #44]	; 28310 <CDWHCIDevice::InitCore()+0x244>
   282e0:	e59f0038 	ldr	r0, [pc, #56]	; 28320 <CDWHCIDevice::InitCore()+0x254>
   282e4:	eb003b25 	bl	36f80 <assertion_failed>
   282e8:	eaffffbc 	b	281e0 <CDWHCIDevice::InitCore()+0x114>
   282ec:	e59f2030 	ldr	r2, [pc, #48]	; 28324 <CDWHCIDevice::InitCore()+0x258>
   282f0:	e59f1018 	ldr	r1, [pc, #24]	; 28310 <CDWHCIDevice::InitCore()+0x244>
   282f4:	e59f002c 	ldr	r0, [pc, #44]	; 28328 <CDWHCIDevice::InitCore()+0x25c>
   282f8:	eb003b20 	bl	36f80 <assertion_failed>
   282fc:	eaffffae 	b	281bc <CDWHCIDevice::InitCore()+0xf0>
   28300:	2098000c 	.word	0x2098000c
   28304:	20980048 	.word	0x20980048
   28308:	20980008 	.word	0x20980008
   2830c:	0000012e 	.word	0x0000012e
   28310:	0004a0b0 	.word	0x0004a0b0
   28314:	0004a384 	.word	0x0004a384
   28318:	0004a374 	.word	0x0004a374
   2831c:	0004a0a4 	.word	0x0004a0a4
   28320:	0004a3d0 	.word	0x0004a3d0
   28324:	0000013e 	.word	0x0000013e
   28328:	0004a3bc 	.word	0x0004a3bc

0002832c <CDWHCIDevice::FlushTxFIFO(unsigned int)>:
   2832c:	e92d4030 	push	{r4, r5, lr}
   28330:	e1a05001 	mov	r5, r1
   28334:	e24dd01c 	sub	sp, sp, #28
   28338:	e3a02000 	mov	r2, #0
   2833c:	e1a04000 	mov	r4, r0
   28340:	e59f107c 	ldr	r1, [pc, #124]	; 283c4 <CDWHCIDevice::FlushTxFIFO(unsigned int)+0x98>
   28344:	e28d000c 	add	r0, sp, #12
   28348:	eb0001d5 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   2834c:	e28d000c 	add	r0, sp, #12
   28350:	e3a01020 	mov	r1, #32
   28354:	eb000220 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   28358:	e28d000c 	add	r0, sp, #12
   2835c:	e3e01d1f 	mvn	r1, #1984	; 0x7c0
   28360:	eb00020d 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   28364:	e1a01305 	lsl	r1, r5, #6
   28368:	e28d000c 	add	r0, sp, #12
   2836c:	eb00021a 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   28370:	e28d000c 	add	r0, sp, #12
   28374:	eb0001d6 	bl	28ad4 <CDWHCIRegister::Write()>
   28378:	e3a0300a 	mov	r3, #10
   2837c:	e1a00004 	mov	r0, r4
   28380:	e58d3000 	str	r3, [sp]
   28384:	e28d100c 	add	r1, sp, #12
   28388:	e3a03000 	mov	r3, #0
   2838c:	e3a02020 	mov	r2, #32
   28390:	ebfffeb2 	bl	27e60 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)>
   28394:	e3500000 	cmp	r0, #0
   28398:	1a000003 	bne	283ac <CDWHCIDevice::FlushTxFIFO(unsigned int)+0x80>
   2839c:	e28d000c 	add	r0, sp, #12
   283a0:	eb0001c3 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   283a4:	e28dd01c 	add	sp, sp, #28
   283a8:	e8bd8030 	pop	{r4, r5, pc}
   283ac:	e3a00001 	mov	r0, #1
   283b0:	eb003328 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   283b4:	e28d000c 	add	r0, sp, #12
   283b8:	eb0001bd 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   283bc:	e28dd01c 	add	sp, sp, #28
   283c0:	e8bd8030 	pop	{r4, r5, pc}
   283c4:	20980010 	.word	0x20980010

000283c8 <CDWHCIDevice::FlushRxFIFO()>:
   283c8:	e92d4010 	push	{r4, lr}
   283cc:	e24dd018 	sub	sp, sp, #24
   283d0:	e3a02000 	mov	r2, #0
   283d4:	e1a04000 	mov	r4, r0
   283d8:	e59f1064 	ldr	r1, [pc, #100]	; 28444 <CDWHCIDevice::FlushRxFIFO()+0x7c>
   283dc:	e28d000c 	add	r0, sp, #12
   283e0:	eb0001af 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   283e4:	e3a01010 	mov	r1, #16
   283e8:	e28d000c 	add	r0, sp, #12
   283ec:	eb0001fa 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   283f0:	e28d000c 	add	r0, sp, #12
   283f4:	eb0001b6 	bl	28ad4 <CDWHCIRegister::Write()>
   283f8:	e3a0300a 	mov	r3, #10
   283fc:	e1a00004 	mov	r0, r4
   28400:	e58d3000 	str	r3, [sp]
   28404:	e28d100c 	add	r1, sp, #12
   28408:	e3a03000 	mov	r3, #0
   2840c:	e3a02010 	mov	r2, #16
   28410:	ebfffe92 	bl	27e60 <CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, int, unsigned int)>
   28414:	e3500000 	cmp	r0, #0
   28418:	1a000003 	bne	2842c <CDWHCIDevice::FlushRxFIFO()+0x64>
   2841c:	e28d000c 	add	r0, sp, #12
   28420:	eb0001a3 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   28424:	e28dd018 	add	sp, sp, #24
   28428:	e8bd8010 	pop	{r4, pc}
   2842c:	e3a00001 	mov	r0, #1
   28430:	eb003308 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   28434:	e28d000c 	add	r0, sp, #12
   28438:	eb00019d 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   2843c:	e28dd018 	add	sp, sp, #24
   28440:	e8bd8010 	pop	{r4, pc}
   28444:	20980010 	.word	0x20980010

00028448 <CDWHCIDevice::InitHost()>:
   28448:	e92d4030 	push	{r4, r5, lr}
   2844c:	e24dd064 	sub	sp, sp, #100	; 0x64
   28450:	e3a02000 	mov	r2, #0
   28454:	e59f11d0 	ldr	r1, [pc, #464]	; 2862c <CDWHCIDevice::InitHost()+0x1e4>
   28458:	e1a04000 	mov	r4, r0
   2845c:	e1a0000d 	mov	r0, sp
   28460:	eb00018f 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   28464:	e1a0000d 	mov	r0, sp
   28468:	eb000199 	bl	28ad4 <CDWHCIRegister::Write()>
   2846c:	e59f11bc 	ldr	r1, [pc, #444]	; 28630 <CDWHCIDevice::InitHost()+0x1e8>
   28470:	e28d000c 	add	r0, sp, #12
   28474:	eb000186 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   28478:	e28d000c 	add	r0, sp, #12
   2847c:	eb00018d 	bl	28ab8 <CDWHCIRegister::Read()>
   28480:	e28d000c 	add	r0, sp, #12
   28484:	e3e01003 	mvn	r1, #3
   28488:	eb0001c3 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   2848c:	e59f11a0 	ldr	r1, [pc, #416]	; 28634 <CDWHCIDevice::InitHost()+0x1ec>
   28490:	e28d0018 	add	r0, sp, #24
   28494:	eb00017e 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   28498:	e59f1198 	ldr	r1, [pc, #408]	; 28638 <CDWHCIDevice::InitHost()+0x1f0>
   2849c:	e28d0024 	add	r0, sp, #36	; 0x24
   284a0:	eb00017b 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   284a4:	e28d0018 	add	r0, sp, #24
   284a8:	eb000182 	bl	28ab8 <CDWHCIRegister::Read()>
   284ac:	e1a00320 	lsr	r0, r0, #6
   284b0:	e2000003 	and	r0, r0, #3
   284b4:	e3500002 	cmp	r0, #2
   284b8:	0a00004d 	beq	285f4 <CDWHCIDevice::InitHost()+0x1ac>
   284bc:	e3a01000 	mov	r1, #0
   284c0:	e28d000c 	add	r0, sp, #12
   284c4:	eb0001c4 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   284c8:	e28d000c 	add	r0, sp, #12
   284cc:	eb000180 	bl	28ad4 <CDWHCIRegister::Write()>
   284d0:	e3a02b01 	mov	r2, #1024	; 0x400
   284d4:	e59f1160 	ldr	r1, [pc, #352]	; 2863c <CDWHCIDevice::InitHost()+0x1f4>
   284d8:	e28d0030 	add	r0, sp, #48	; 0x30
   284dc:	eb000170 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   284e0:	e28d0030 	add	r0, sp, #48	; 0x30
   284e4:	eb00017a 	bl	28ad4 <CDWHCIRegister::Write()>
   284e8:	e3a02000 	mov	r2, #0
   284ec:	e59f114c 	ldr	r1, [pc, #332]	; 28640 <CDWHCIDevice::InitHost()+0x1f8>
   284f0:	e28d003c 	add	r0, sp, #60	; 0x3c
   284f4:	eb00016a 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   284f8:	e28d003c 	add	r0, sp, #60	; 0x3c
   284fc:	e3a01b01 	mov	r1, #1024	; 0x400
   28500:	eb0001b5 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   28504:	e3a01301 	mov	r1, #67108864	; 0x4000000
   28508:	e28d003c 	add	r0, sp, #60	; 0x3c
   2850c:	eb0001b2 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   28510:	e28d003c 	add	r0, sp, #60	; 0x3c
   28514:	eb00016e 	bl	28ad4 <CDWHCIRegister::Write()>
   28518:	e3a02000 	mov	r2, #0
   2851c:	e59f1120 	ldr	r1, [pc, #288]	; 28644 <CDWHCIDevice::InitHost()+0x1fc>
   28520:	e28d0048 	add	r0, sp, #72	; 0x48
   28524:	eb00015e 	bl	28aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>
   28528:	e28d0048 	add	r0, sp, #72	; 0x48
   2852c:	e3a01b02 	mov	r1, #2048	; 0x800
   28530:	eb0001a9 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   28534:	e3a01301 	mov	r1, #67108864	; 0x4000000
   28538:	e28d0048 	add	r0, sp, #72	; 0x48
   2853c:	eb0001a6 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   28540:	e28d0048 	add	r0, sp, #72	; 0x48
   28544:	eb000162 	bl	28ad4 <CDWHCIRegister::Write()>
   28548:	e3a01010 	mov	r1, #16
   2854c:	e1a00004 	mov	r0, r4
   28550:	ebffff75 	bl	2832c <CDWHCIDevice::FlushTxFIFO(unsigned int)>
   28554:	e1a00004 	mov	r0, r4
   28558:	ebffff9a 	bl	283c8 <CDWHCIDevice::FlushRxFIFO()>
   2855c:	e59f10e4 	ldr	r1, [pc, #228]	; 28648 <CDWHCIDevice::InitHost()+0x200>
   28560:	e28d0054 	add	r0, sp, #84	; 0x54
   28564:	eb00014a 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   28568:	e28d0054 	add	r0, sp, #84	; 0x54
   2856c:	eb000151 	bl	28ab8 <CDWHCIRegister::Read()>
   28570:	e28d0054 	add	r0, sp, #84	; 0x54
   28574:	e3e0102e 	mvn	r1, #46	; 0x2e
   28578:	eb000187 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   2857c:	e28d0054 	add	r0, sp, #84	; 0x54
   28580:	eb000162 	bl	28b10 <CDWHCIRegister::Get() const>
   28584:	e3100a01 	tst	r0, #4096	; 0x1000
   28588:	1a000004 	bne	285a0 <CDWHCIDevice::InitHost()+0x158>
   2858c:	e28d0054 	add	r0, sp, #84	; 0x54
   28590:	e3a01a01 	mov	r1, #4096	; 0x1000
   28594:	eb000190 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   28598:	e28d0054 	add	r0, sp, #84	; 0x54
   2859c:	eb00014c 	bl	28ad4 <CDWHCIRegister::Write()>
   285a0:	e1a00004 	mov	r0, r4
   285a4:	ebfff8d9 	bl	26910 <CDWHCIDevice::EnableHostInterrupts()>
   285a8:	e28d0054 	add	r0, sp, #84	; 0x54
   285ac:	eb000140 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   285b0:	e28d0048 	add	r0, sp, #72	; 0x48
   285b4:	eb00013e 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   285b8:	e28d003c 	add	r0, sp, #60	; 0x3c
   285bc:	eb00013c 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   285c0:	e28d0030 	add	r0, sp, #48	; 0x30
   285c4:	eb00013a 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   285c8:	e28d0024 	add	r0, sp, #36	; 0x24
   285cc:	eb000138 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   285d0:	e28d0018 	add	r0, sp, #24
   285d4:	eb000136 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   285d8:	e28d000c 	add	r0, sp, #12
   285dc:	eb000134 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   285e0:	e1a0000d 	mov	r0, sp
   285e4:	eb000132 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   285e8:	e3a00001 	mov	r0, #1
   285ec:	e28dd064 	add	sp, sp, #100	; 0x64
   285f0:	e8bd8030 	pop	{r4, r5, pc}
   285f4:	e28d0018 	add	r0, sp, #24
   285f8:	eb000144 	bl	28b10 <CDWHCIRegister::Get() const>
   285fc:	e1a00420 	lsr	r0, r0, #8
   28600:	e2005003 	and	r5, r0, #3
   28604:	e3550001 	cmp	r5, #1
   28608:	1affffab 	bne	284bc <CDWHCIDevice::InitHost()+0x74>
   2860c:	e28d0024 	add	r0, sp, #36	; 0x24
   28610:	eb000128 	bl	28ab8 <CDWHCIRegister::Read()>
   28614:	e3100802 	tst	r0, #131072	; 0x20000
   28618:	0affffa7 	beq	284bc <CDWHCIDevice::InitHost()+0x74>
   2861c:	e1a01005 	mov	r1, r5
   28620:	e28d000c 	add	r0, sp, #12
   28624:	eb00016c 	bl	28bdc <CDWHCIRegister::Or(unsigned int)>
   28628:	eaffffa6 	b	284c8 <CDWHCIDevice::InitHost()+0x80>
   2862c:	20980e00 	.word	0x20980e00
   28630:	20980400 	.word	0x20980400
   28634:	20980048 	.word	0x20980048
   28638:	2098000c 	.word	0x2098000c
   2863c:	20980024 	.word	0x20980024
   28640:	20980028 	.word	0x20980028
   28644:	20980100 	.word	0x20980100
   28648:	20980440 	.word	0x20980440

0002864c <CDWHCIDevice::Initialize()>:
   2864c:	e92d4030 	push	{r4, r5, lr}
   28650:	e3a03000 	mov	r3, #0
   28654:	e24dd024 	sub	sp, sp, #36	; 0x24
   28658:	e1a04000 	mov	r4, r0
   2865c:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   28660:	e5903004 	ldr	r3, [r0, #4]
   28664:	e3530000 	cmp	r3, #0
   28668:	0a000047 	beq	2878c <CDWHCIDevice::Initialize()+0x140>
   2866c:	e5943008 	ldr	r3, [r4, #8]
   28670:	e3530000 	cmp	r3, #0
   28674:	0a00004b 	beq	287a8 <CDWHCIDevice::Initialize()+0x15c>
   28678:	e59f11d4 	ldr	r1, [pc, #468]	; 28854 <CDWHCIDevice::Initialize()+0x208>
   2867c:	e28d0008 	add	r0, sp, #8
   28680:	eb000103 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   28684:	e28d0008 	add	r0, sp, #8
   28688:	eb00010a 	bl	28ab8 <CDWHCIRegister::Read()>
   2868c:	e59f31c4 	ldr	r3, [pc, #452]	; 28858 <CDWHCIDevice::Initialize()+0x20c>
   28690:	e1500003 	cmp	r0, r3
   28694:	0a00000f 	beq	286d8 <CDWHCIDevice::Initialize()+0x8c>
   28698:	eb003bb4 	bl	37570 <CLogger::Get()>
   2869c:	e1a04000 	mov	r4, r0
   286a0:	e28d0008 	add	r0, sp, #8
   286a4:	eb000119 	bl	28b10 <CDWHCIRegister::Get() const>
   286a8:	e59f31ac 	ldr	r3, [pc, #428]	; 2885c <CDWHCIDevice::Initialize()+0x210>
   286ac:	e58d0000 	str	r0, [sp]
   286b0:	e3a02001 	mov	r2, #1
   286b4:	e1a00004 	mov	r0, r4
   286b8:	e59f11a0 	ldr	r1, [pc, #416]	; 28860 <CDWHCIDevice::Initialize()+0x214>
   286bc:	eb003c8b 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   286c0:	e3a05000 	mov	r5, #0
   286c4:	e28d0008 	add	r0, sp, #8
   286c8:	eb0000f9 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   286cc:	e1a00005 	mov	r0, r5
   286d0:	e28dd024 	add	sp, sp, #36	; 0x24
   286d4:	e8bd8030 	pop	{r4, r5, pc}
   286d8:	e1a00004 	mov	r0, r4
   286dc:	ebfff852 	bl	2682c <CDWHCIDevice::PowerOn()>
   286e0:	e2505000 	subs	r5, r0, #0
   286e4:	0a000034 	beq	287bc <CDWHCIDevice::Initialize()+0x170>
   286e8:	e59f1174 	ldr	r1, [pc, #372]	; 28864 <CDWHCIDevice::Initialize()+0x218>
   286ec:	e28d0014 	add	r0, sp, #20
   286f0:	eb0000e7 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   286f4:	e28d0014 	add	r0, sp, #20
   286f8:	eb0000ee 	bl	28ab8 <CDWHCIRegister::Read()>
   286fc:	e28d0014 	add	r0, sp, #20
   28700:	e3e01001 	mvn	r1, #1
   28704:	eb000124 	bl	28b9c <CDWHCIRegister::And(unsigned int)>
   28708:	e28d0014 	add	r0, sp, #20
   2870c:	eb0000f0 	bl	28ad4 <CDWHCIRegister::Write()>
   28710:	e5940004 	ldr	r0, [r4, #4]
   28714:	e3500000 	cmp	r0, #0
   28718:	0a000039 	beq	28804 <CDWHCIDevice::Initialize()+0x1b8>
   2871c:	e1a03004 	mov	r3, r4
   28720:	e59f2140 	ldr	r2, [pc, #320]	; 28868 <CDWHCIDevice::Initialize()+0x21c>
   28724:	e3a01009 	mov	r1, #9
   28728:	eb004405 	bl	39744 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   2872c:	e1a00004 	mov	r0, r4
   28730:	ebfffe65 	bl	280cc <CDWHCIDevice::InitCore()>
   28734:	e2505000 	subs	r5, r0, #0
   28738:	0a00000d 	beq	28774 <CDWHCIDevice::Initialize()+0x128>
   2873c:	e1a00004 	mov	r0, r4
   28740:	ebfff853 	bl	26894 <CDWHCIDevice::EnableGlobalInterrupts()>
   28744:	e1a00004 	mov	r0, r4
   28748:	ebffff3e 	bl	28448 <CDWHCIDevice::InitHost()>
   2874c:	e2505000 	subs	r5, r0, #0
   28750:	1a00001f 	bne	287d4 <CDWHCIDevice::Initialize()+0x188>
   28754:	eb003b85 	bl	37570 <CLogger::Get()>
   28758:	e59f310c 	ldr	r3, [pc, #268]	; 2886c <CDWHCIDevice::Initialize()+0x220>
   2875c:	e3a02001 	mov	r2, #1
   28760:	e59f10f8 	ldr	r1, [pc, #248]	; 28860 <CDWHCIDevice::Initialize()+0x214>
   28764:	eb003c61 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   28768:	e28d0014 	add	r0, sp, #20
   2876c:	eb0000d0 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   28770:	eaffffd3 	b	286c4 <CDWHCIDevice::Initialize()+0x78>
   28774:	eb003b7d 	bl	37570 <CLogger::Get()>
   28778:	e59f30f0 	ldr	r3, [pc, #240]	; 28870 <CDWHCIDevice::Initialize()+0x224>
   2877c:	e3a02001 	mov	r2, #1
   28780:	e59f10d8 	ldr	r1, [pc, #216]	; 28860 <CDWHCIDevice::Initialize()+0x214>
   28784:	eb003c59 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   28788:	eafffff6 	b	28768 <CDWHCIDevice::Initialize()+0x11c>
   2878c:	e3a0205d 	mov	r2, #93	; 0x5d
   28790:	e59f10dc 	ldr	r1, [pc, #220]	; 28874 <CDWHCIDevice::Initialize()+0x228>
   28794:	e59f00dc 	ldr	r0, [pc, #220]	; 28878 <CDWHCIDevice::Initialize()+0x22c>
   28798:	eb0039f8 	bl	36f80 <assertion_failed>
   2879c:	e5943008 	ldr	r3, [r4, #8]
   287a0:	e3530000 	cmp	r3, #0
   287a4:	1affffb3 	bne	28678 <CDWHCIDevice::Initialize()+0x2c>
   287a8:	e3a0205e 	mov	r2, #94	; 0x5e
   287ac:	e59f10c0 	ldr	r1, [pc, #192]	; 28874 <CDWHCIDevice::Initialize()+0x228>
   287b0:	e59f00c4 	ldr	r0, [pc, #196]	; 2887c <CDWHCIDevice::Initialize()+0x230>
   287b4:	eb0039f1 	bl	36f80 <assertion_failed>
   287b8:	eaffffae 	b	28678 <CDWHCIDevice::Initialize()+0x2c>
   287bc:	eb003b6b 	bl	37570 <CLogger::Get()>
   287c0:	e59f30b8 	ldr	r3, [pc, #184]	; 28880 <CDWHCIDevice::Initialize()+0x234>
   287c4:	e3a02001 	mov	r2, #1
   287c8:	e59f1090 	ldr	r1, [pc, #144]	; 28860 <CDWHCIDevice::Initialize()+0x214>
   287cc:	eb003c47 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   287d0:	eaffffbb 	b	286c4 <CDWHCIDevice::Initialize()+0x78>
   287d4:	e1a00004 	mov	r0, r4
   287d8:	ebfffde2 	bl	27f68 <CDWHCIDevice::EnableRootPort()>
   287dc:	e3500000 	cmp	r0, #0
   287e0:	0a00000d 	beq	2881c <CDWHCIDevice::Initialize()+0x1d0>
   287e4:	e28400a4 	add	r0, r4, #164	; 0xa4
   287e8:	eb00126d 	bl	2d1a4 <CDWHCIRootPort::Initialize()>
   287ec:	e3500000 	cmp	r0, #0
   287f0:	0a000010 	beq	28838 <CDWHCIDevice::Initialize()+0x1ec>
   287f4:	e3a03000 	mov	r3, #0
   287f8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   287fc:	e3a05001 	mov	r5, #1
   28800:	eaffffd8 	b	28768 <CDWHCIDevice::Initialize()+0x11c>
   28804:	e59f006c 	ldr	r0, [pc, #108]	; 28878 <CDWHCIDevice::Initialize()+0x22c>
   28808:	e3a02073 	mov	r2, #115	; 0x73
   2880c:	e59f1060 	ldr	r1, [pc, #96]	; 28874 <CDWHCIDevice::Initialize()+0x228>
   28810:	eb0039da 	bl	36f80 <assertion_failed>
   28814:	e5940004 	ldr	r0, [r4, #4]
   28818:	eaffffbf 	b	2871c <CDWHCIDevice::Initialize()+0xd0>
   2881c:	eb003b53 	bl	37570 <CLogger::Get()>
   28820:	e59f305c 	ldr	r3, [pc, #92]	; 28884 <CDWHCIDevice::Initialize()+0x238>
   28824:	e3a02002 	mov	r2, #2
   28828:	e59f1030 	ldr	r1, [pc, #48]	; 28860 <CDWHCIDevice::Initialize()+0x214>
   2882c:	eb003c2f 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   28830:	e3a05001 	mov	r5, #1
   28834:	eaffffcb 	b	28768 <CDWHCIDevice::Initialize()+0x11c>
   28838:	eb003b4c 	bl	37570 <CLogger::Get()>
   2883c:	e59f3044 	ldr	r3, [pc, #68]	; 28888 <CDWHCIDevice::Initialize()+0x23c>
   28840:	e3a02002 	mov	r2, #2
   28844:	e59f1014 	ldr	r1, [pc, #20]	; 28860 <CDWHCIDevice::Initialize()+0x214>
   28848:	eb003c28 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2884c:	e3a05001 	mov	r5, #1
   28850:	eaffffc4 	b	28768 <CDWHCIDevice::Initialize()+0x11c>
   28854:	20980040 	.word	0x20980040
   28858:	4f54280a 	.word	0x4f54280a
   2885c:	0004a408 	.word	0x0004a408
   28860:	0004a0a4 	.word	0x0004a0a4
   28864:	20980008 	.word	0x20980008
   28868:	000279e8 	.word	0x000279e8
   2886c:	0004a448 	.word	0x0004a448
   28870:	0004a430 	.word	0x0004a430
   28874:	0004a0b0 	.word	0x0004a0b0
   28878:	0004a0f8 	.word	0x0004a0f8
   2887c:	0004a110 	.word	0x0004a110
   28880:	0004a420 	.word	0x0004a420
   28884:	0004a460 	.word	0x0004a460
   28888:	0004a484 	.word	0x0004a484

0002888c <CDWHCIDevice::DumpRegister(char const*, unsigned int)>:
   2888c:	e92d4030 	push	{r4, r5, lr}
   28890:	e24dd01c 	sub	sp, sp, #28
   28894:	e1a05001 	mov	r5, r1
   28898:	e28d000c 	add	r0, sp, #12
   2889c:	e1a01002 	mov	r1, r2
   288a0:	eb00007b 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   288a4:	e3a03000 	mov	r3, #0
   288a8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   288ac:	eb003b2f 	bl	37570 <CLogger::Get()>
   288b0:	e1a04000 	mov	r4, r0
   288b4:	e28d000c 	add	r0, sp, #12
   288b8:	eb00007e 	bl	28ab8 <CDWHCIRegister::Read()>
   288bc:	e59f3020 	ldr	r3, [pc, #32]	; 288e4 <CDWHCIDevice::DumpRegister(char const*, unsigned int)+0x58>
   288c0:	e88d0021 	stm	sp, {r0, r5}
   288c4:	e3a02004 	mov	r2, #4
   288c8:	e1a00004 	mov	r0, r4
   288cc:	e59f1014 	ldr	r1, [pc, #20]	; 288e8 <CDWHCIDevice::DumpRegister(char const*, unsigned int)+0x5c>
   288d0:	eb003c06 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   288d4:	e28d000c 	add	r0, sp, #12
   288d8:	eb000075 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   288dc:	e28dd01c 	add	sp, sp, #28
   288e0:	e8bd8030 	pop	{r4, r5, pc}
   288e4:	0004a0ec 	.word	0x0004a0ec
   288e8:	0004a0a4 	.word	0x0004a0a4

000288ec <CDWHCIDevice::DumpStatus(unsigned int)>:
   288ec:	e92d4070 	push	{r4, r5, r6, lr}
   288f0:	e1a05001 	mov	r5, r1
   288f4:	e59f0104 	ldr	r0, [pc, #260]	; 28a00 <CDWHCIDevice::DumpStatus(unsigned int)+0x114>
   288f8:	e59f1104 	ldr	r1, [pc, #260]	; 28a04 <CDWHCIDevice::DumpStatus(unsigned int)+0x118>
   288fc:	ebfff744 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28900:	e59f1100 	ldr	r1, [pc, #256]	; 28a08 <CDWHCIDevice::DumpStatus(unsigned int)+0x11c>
   28904:	e59f0100 	ldr	r0, [pc, #256]	; 28a0c <CDWHCIDevice::DumpStatus(unsigned int)+0x120>
   28908:	ebfff741 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   2890c:	e59f10fc 	ldr	r1, [pc, #252]	; 28a10 <CDWHCIDevice::DumpStatus(unsigned int)+0x124>
   28910:	e59f00fc 	ldr	r0, [pc, #252]	; 28a14 <CDWHCIDevice::DumpStatus(unsigned int)+0x128>
   28914:	ebfff73e 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28918:	e59f10f8 	ldr	r1, [pc, #248]	; 28a18 <CDWHCIDevice::DumpStatus(unsigned int)+0x12c>
   2891c:	e59f00f8 	ldr	r0, [pc, #248]	; 28a1c <CDWHCIDevice::DumpStatus(unsigned int)+0x130>
   28920:	ebfff73b 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28924:	e59f10f4 	ldr	r1, [pc, #244]	; 28a20 <CDWHCIDevice::DumpStatus(unsigned int)+0x134>
   28928:	e59f00f4 	ldr	r0, [pc, #244]	; 28a24 <CDWHCIDevice::DumpStatus(unsigned int)+0x138>
   2892c:	ebfff738 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28930:	e59f10f0 	ldr	r1, [pc, #240]	; 28a28 <CDWHCIDevice::DumpStatus(unsigned int)+0x13c>
   28934:	e59f00f0 	ldr	r0, [pc, #240]	; 28a2c <CDWHCIDevice::DumpStatus(unsigned int)+0x140>
   28938:	ebfff735 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   2893c:	e59f10ec 	ldr	r1, [pc, #236]	; 28a30 <CDWHCIDevice::DumpStatus(unsigned int)+0x144>
   28940:	e59f00ec 	ldr	r0, [pc, #236]	; 28a34 <CDWHCIDevice::DumpStatus(unsigned int)+0x148>
   28944:	ebfff732 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28948:	e59f10e8 	ldr	r1, [pc, #232]	; 28a38 <CDWHCIDevice::DumpStatus(unsigned int)+0x14c>
   2894c:	e59f00e8 	ldr	r0, [pc, #232]	; 28a3c <CDWHCIDevice::DumpStatus(unsigned int)+0x150>
   28950:	ebfff72f 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28954:	e59f10e4 	ldr	r1, [pc, #228]	; 28a40 <CDWHCIDevice::DumpStatus(unsigned int)+0x154>
   28958:	e59f00e4 	ldr	r0, [pc, #228]	; 28a44 <CDWHCIDevice::DumpStatus(unsigned int)+0x158>
   2895c:	ebfff72c 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28960:	e59f10e0 	ldr	r1, [pc, #224]	; 28a48 <CDWHCIDevice::DumpStatus(unsigned int)+0x15c>
   28964:	e59f00e0 	ldr	r0, [pc, #224]	; 28a4c <CDWHCIDevice::DumpStatus(unsigned int)+0x160>
   28968:	ebfff729 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   2896c:	e59f10dc 	ldr	r1, [pc, #220]	; 28a50 <CDWHCIDevice::DumpStatus(unsigned int)+0x164>
   28970:	e59f00dc 	ldr	r0, [pc, #220]	; 28a54 <CDWHCIDevice::DumpStatus(unsigned int)+0x168>
   28974:	ebfff726 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28978:	e59f40d8 	ldr	r4, [pc, #216]	; 28a58 <CDWHCIDevice::DumpStatus(unsigned int)+0x16c>
   2897c:	e59f10d8 	ldr	r1, [pc, #216]	; 28a5c <CDWHCIDevice::DumpStatus(unsigned int)+0x170>
   28980:	e59f00d8 	ldr	r0, [pc, #216]	; 28a60 <CDWHCIDevice::DumpStatus(unsigned int)+0x174>
   28984:	ebfff722 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28988:	e59f10d4 	ldr	r1, [pc, #212]	; 28a64 <CDWHCIDevice::DumpStatus(unsigned int)+0x178>
   2898c:	e59f00d4 	ldr	r0, [pc, #212]	; 28a68 <CDWHCIDevice::DumpStatus(unsigned int)+0x17c>
   28990:	ebfff71f 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28994:	e0854004 	add	r4, r5, r4
   28998:	e59f10cc 	ldr	r1, [pc, #204]	; 28a6c <CDWHCIDevice::DumpStatus(unsigned int)+0x180>
   2899c:	e59f00cc 	ldr	r0, [pc, #204]	; 28a70 <CDWHCIDevice::DumpStatus(unsigned int)+0x184>
   289a0:	e1a04284 	lsl	r4, r4, #5
   289a4:	ebfff71a 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   289a8:	e59f10c4 	ldr	r1, [pc, #196]	; 28a74 <CDWHCIDevice::DumpStatus(unsigned int)+0x188>
   289ac:	e59f00c4 	ldr	r0, [pc, #196]	; 28a78 <CDWHCIDevice::DumpStatus(unsigned int)+0x18c>
   289b0:	ebfff717 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   289b4:	e1a01004 	mov	r1, r4
   289b8:	e59f00bc 	ldr	r0, [pc, #188]	; 28a7c <CDWHCIDevice::DumpStatus(unsigned int)+0x190>
   289bc:	ebfff714 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   289c0:	e2841004 	add	r1, r4, #4
   289c4:	e59f00b4 	ldr	r0, [pc, #180]	; 28a80 <CDWHCIDevice::DumpStatus(unsigned int)+0x194>
   289c8:	ebfff711 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   289cc:	e2841008 	add	r1, r4, #8
   289d0:	e59f00ac 	ldr	r0, [pc, #172]	; 28a84 <CDWHCIDevice::DumpStatus(unsigned int)+0x198>
   289d4:	ebfff70e 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   289d8:	e284100c 	add	r1, r4, #12
   289dc:	e59f00a4 	ldr	r0, [pc, #164]	; 28a88 <CDWHCIDevice::DumpStatus(unsigned int)+0x19c>
   289e0:	ebfff70b 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   289e4:	e2841010 	add	r1, r4, #16
   289e8:	e59f009c 	ldr	r0, [pc, #156]	; 28a8c <CDWHCIDevice::DumpStatus(unsigned int)+0x1a0>
   289ec:	ebfff708 	bl	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   289f0:	e2841014 	add	r1, r4, #20
   289f4:	e59f0094 	ldr	r0, [pc, #148]	; 28a90 <CDWHCIDevice::DumpStatus(unsigned int)+0x1a4>
   289f8:	e8bd4070 	pop	{r4, r5, r6, lr}
   289fc:	eafff704 	b	26614 <CDWHCIDevice::DumpRegister(char const*, unsigned int) [clone .constprop.4]>
   28a00:	0004a4a0 	.word	0x0004a4a0
   28a04:	20980000 	.word	0x20980000
   28a08:	20980008 	.word	0x20980008
   28a0c:	0004a4ac 	.word	0x0004a4ac
   28a10:	2098000c 	.word	0x2098000c
   28a14:	0004a4b4 	.word	0x0004a4b4
   28a18:	20980010 	.word	0x20980010
   28a1c:	0004a4bc 	.word	0x0004a4bc
   28a20:	20980014 	.word	0x20980014
   28a24:	0004a4c4 	.word	0x0004a4c4
   28a28:	20980018 	.word	0x20980018
   28a2c:	0004a4d0 	.word	0x0004a4d0
   28a30:	20980024 	.word	0x20980024
   28a34:	0004a4dc 	.word	0x0004a4dc
   28a38:	20980028 	.word	0x20980028
   28a3c:	0004a4e8 	.word	0x0004a4e8
   28a40:	2098002c 	.word	0x2098002c
   28a44:	0004a4fc 	.word	0x0004a4fc
   28a48:	20980100 	.word	0x20980100
   28a4c:	0004a50c 	.word	0x0004a50c
   28a50:	20980400 	.word	0x20980400
   28a54:	0004a524 	.word	0x0004a524
   28a58:	0104c028 	.word	0x0104c028
   28a5c:	20980410 	.word	0x20980410
   28a60:	0004a530 	.word	0x0004a530
   28a64:	20980414 	.word	0x20980414
   28a68:	0004a548 	.word	0x0004a548
   28a6c:	20980418 	.word	0x20980418
   28a70:	0004a55c 	.word	0x0004a55c
   28a74:	20980440 	.word	0x20980440
   28a78:	0004a574 	.word	0x0004a574
   28a7c:	0004a580 	.word	0x0004a580
   28a80:	0004a598 	.word	0x0004a598
   28a84:	0004a5b0 	.word	0x0004a5b0
   28a88:	0004a5c4 	.word	0x0004a5c4
   28a8c:	0004a5dc 	.word	0x0004a5dc
   28a90:	0004a5f4 	.word	0x0004a5f4

00028a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>:
   28a94:	e3a02000 	mov	r2, #0
   28a98:	e5801004 	str	r1, [r0, #4]
   28a9c:	e5802000 	str	r2, [r0]
   28aa0:	e12fff1e 	bx	lr

00028aa4 <CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)>:
   28aa4:	e3a0c001 	mov	ip, #1
   28aa8:	e9800006 	stmib	r0, {r1, r2}
   28aac:	e580c000 	str	ip, [r0]
   28ab0:	e12fff1e 	bx	lr

00028ab4 <CDWHCIRegister::~CDWHCIRegister()>:
   28ab4:	e12fff1e 	bx	lr

00028ab8 <CDWHCIRegister::Read()>:
   28ab8:	e1a03000 	mov	r3, r0
   28abc:	e3a02001 	mov	r2, #1
   28ac0:	e5901004 	ldr	r1, [r0, #4]
   28ac4:	e5910000 	ldr	r0, [r1]
   28ac8:	e5832000 	str	r2, [r3]
   28acc:	e5830008 	str	r0, [r3, #8]
   28ad0:	e12fff1e 	bx	lr

00028ad4 <CDWHCIRegister::Write()>:
   28ad4:	e5903000 	ldr	r3, [r0]
   28ad8:	e92d4010 	push	{r4, lr}
   28adc:	e3530000 	cmp	r3, #0
   28ae0:	e1a04000 	mov	r4, r0
   28ae4:	1a000003 	bne	28af8 <CDWHCIRegister::Write()+0x24>
   28ae8:	e3a02035 	mov	r2, #53	; 0x35
   28aec:	e59f1014 	ldr	r1, [pc, #20]	; 28b08 <CDWHCIRegister::Write()+0x34>
   28af0:	e59f0014 	ldr	r0, [pc, #20]	; 28b0c <CDWHCIRegister::Write()+0x38>
   28af4:	eb003921 	bl	36f80 <assertion_failed>
   28af8:	e5942008 	ldr	r2, [r4, #8]
   28afc:	e5943004 	ldr	r3, [r4, #4]
   28b00:	e5832000 	str	r2, [r3]
   28b04:	e8bd8010 	pop	{r4, pc}
   28b08:	0004a60c 	.word	0x0004a60c
   28b0c:	0004a620 	.word	0x0004a620

00028b10 <CDWHCIRegister::Get() const>:
   28b10:	e5903000 	ldr	r3, [r0]
   28b14:	e92d4010 	push	{r4, lr}
   28b18:	e3530000 	cmp	r3, #0
   28b1c:	e1a04000 	mov	r4, r0
   28b20:	1a000003 	bne	28b34 <CDWHCIRegister::Get() const+0x24>
   28b24:	e3a0203b 	mov	r2, #59	; 0x3b
   28b28:	e59f100c 	ldr	r1, [pc, #12]	; 28b3c <CDWHCIRegister::Get() const+0x2c>
   28b2c:	e59f000c 	ldr	r0, [pc, #12]	; 28b40 <CDWHCIRegister::Get() const+0x30>
   28b30:	eb003912 	bl	36f80 <assertion_failed>
   28b34:	e5940008 	ldr	r0, [r4, #8]
   28b38:	e8bd8010 	pop	{r4, pc}
   28b3c:	0004a60c 	.word	0x0004a60c
   28b40:	0004a620 	.word	0x0004a620

00028b44 <CDWHCIRegister::Set(unsigned int)>:
   28b44:	e3a03001 	mov	r3, #1
   28b48:	e5801008 	str	r1, [r0, #8]
   28b4c:	e5803000 	str	r3, [r0]
   28b50:	e12fff1e 	bx	lr

00028b54 <CDWHCIRegister::IsSet(unsigned int) const>:
   28b54:	e5903000 	ldr	r3, [r0]
   28b58:	e92d4070 	push	{r4, r5, r6, lr}
   28b5c:	e3530000 	cmp	r3, #0
   28b60:	e1a04000 	mov	r4, r0
   28b64:	e1a05001 	mov	r5, r1
   28b68:	0a000004 	beq	28b80 <CDWHCIRegister::IsSet(unsigned int) const+0x2c>
   28b6c:	e5943008 	ldr	r3, [r4, #8]
   28b70:	e1150003 	tst	r5, r3
   28b74:	13a00001 	movne	r0, #1
   28b78:	03a00000 	moveq	r0, #0
   28b7c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28b80:	e3a02047 	mov	r2, #71	; 0x47
   28b84:	e59f1008 	ldr	r1, [pc, #8]	; 28b94 <CDWHCIRegister::IsSet(unsigned int) const+0x40>
   28b88:	e59f0008 	ldr	r0, [pc, #8]	; 28b98 <CDWHCIRegister::IsSet(unsigned int) const+0x44>
   28b8c:	eb0038fb 	bl	36f80 <assertion_failed>
   28b90:	eafffff5 	b	28b6c <CDWHCIRegister::IsSet(unsigned int) const+0x18>
   28b94:	0004a60c 	.word	0x0004a60c
   28b98:	0004a620 	.word	0x0004a620

00028b9c <CDWHCIRegister::And(unsigned int)>:
   28b9c:	e5903000 	ldr	r3, [r0]
   28ba0:	e92d4070 	push	{r4, r5, r6, lr}
   28ba4:	e3530000 	cmp	r3, #0
   28ba8:	e1a04000 	mov	r4, r0
   28bac:	e1a05001 	mov	r5, r1
   28bb0:	1a000003 	bne	28bc4 <CDWHCIRegister::And(unsigned int)+0x28>
   28bb4:	e3a0204d 	mov	r2, #77	; 0x4d
   28bb8:	e59f1014 	ldr	r1, [pc, #20]	; 28bd4 <CDWHCIRegister::And(unsigned int)+0x38>
   28bbc:	e59f0014 	ldr	r0, [pc, #20]	; 28bd8 <CDWHCIRegister::And(unsigned int)+0x3c>
   28bc0:	eb0038ee 	bl	36f80 <assertion_failed>
   28bc4:	e5941008 	ldr	r1, [r4, #8]
   28bc8:	e0011005 	and	r1, r1, r5
   28bcc:	e5841008 	str	r1, [r4, #8]
   28bd0:	e8bd8070 	pop	{r4, r5, r6, pc}
   28bd4:	0004a60c 	.word	0x0004a60c
   28bd8:	0004a620 	.word	0x0004a620

00028bdc <CDWHCIRegister::Or(unsigned int)>:
   28bdc:	e5903000 	ldr	r3, [r0]
   28be0:	e92d4070 	push	{r4, r5, r6, lr}
   28be4:	e3530000 	cmp	r3, #0
   28be8:	e1a04000 	mov	r4, r0
   28bec:	e1a05001 	mov	r5, r1
   28bf0:	1a000003 	bne	28c04 <CDWHCIRegister::Or(unsigned int)+0x28>
   28bf4:	e3a02053 	mov	r2, #83	; 0x53
   28bf8:	e59f1014 	ldr	r1, [pc, #20]	; 28c14 <CDWHCIRegister::Or(unsigned int)+0x38>
   28bfc:	e59f0014 	ldr	r0, [pc, #20]	; 28c18 <CDWHCIRegister::Or(unsigned int)+0x3c>
   28c00:	eb0038de 	bl	36f80 <assertion_failed>
   28c04:	e5941008 	ldr	r1, [r4, #8]
   28c08:	e1811005 	orr	r1, r1, r5
   28c0c:	e5841008 	str	r1, [r4, #8]
   28c10:	e8bd8070 	pop	{r4, r5, r6, pc}
   28c14:	0004a60c 	.word	0x0004a60c
   28c18:	0004a620 	.word	0x0004a620

00028c1c <CDWHCIRegister::ClearBit(unsigned int)>:
   28c1c:	e5903000 	ldr	r3, [r0]
   28c20:	e92d4070 	push	{r4, r5, r6, lr}
   28c24:	e3530000 	cmp	r3, #0
   28c28:	e1a04000 	mov	r4, r0
   28c2c:	e1a05001 	mov	r5, r1
   28c30:	0a00000a 	beq	28c60 <CDWHCIRegister::ClearBit(unsigned int)+0x44>
   28c34:	e355001f 	cmp	r5, #31
   28c38:	9a000003 	bls	28c4c <CDWHCIRegister::ClearBit(unsigned int)+0x30>
   28c3c:	e3a0205a 	mov	r2, #90	; 0x5a
   28c40:	e59f102c 	ldr	r1, [pc, #44]	; 28c74 <CDWHCIRegister::ClearBit(unsigned int)+0x58>
   28c44:	e59f002c 	ldr	r0, [pc, #44]	; 28c78 <CDWHCIRegister::ClearBit(unsigned int)+0x5c>
   28c48:	eb0038cc 	bl	36f80 <assertion_failed>
   28c4c:	e3a03001 	mov	r3, #1
   28c50:	e5941008 	ldr	r1, [r4, #8]
   28c54:	e1c11513 	bic	r1, r1, r3, lsl r5
   28c58:	e5841008 	str	r1, [r4, #8]
   28c5c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28c60:	e3a02059 	mov	r2, #89	; 0x59
   28c64:	e59f1008 	ldr	r1, [pc, #8]	; 28c74 <CDWHCIRegister::ClearBit(unsigned int)+0x58>
   28c68:	e59f000c 	ldr	r0, [pc, #12]	; 28c7c <CDWHCIRegister::ClearBit(unsigned int)+0x60>
   28c6c:	eb0038c3 	bl	36f80 <assertion_failed>
   28c70:	eaffffef 	b	28c34 <CDWHCIRegister::ClearBit(unsigned int)+0x18>
   28c74:	0004a60c 	.word	0x0004a60c
   28c78:	0004a62c 	.word	0x0004a62c
   28c7c:	0004a620 	.word	0x0004a620

00028c80 <CDWHCIRegister::SetBit(unsigned int)>:
   28c80:	e5903000 	ldr	r3, [r0]
   28c84:	e92d4070 	push	{r4, r5, r6, lr}
   28c88:	e3530000 	cmp	r3, #0
   28c8c:	e1a04000 	mov	r4, r0
   28c90:	e1a05001 	mov	r5, r1
   28c94:	0a00000a 	beq	28cc4 <CDWHCIRegister::SetBit(unsigned int)+0x44>
   28c98:	e355001f 	cmp	r5, #31
   28c9c:	9a000003 	bls	28cb0 <CDWHCIRegister::SetBit(unsigned int)+0x30>
   28ca0:	e3a02061 	mov	r2, #97	; 0x61
   28ca4:	e59f102c 	ldr	r1, [pc, #44]	; 28cd8 <CDWHCIRegister::SetBit(unsigned int)+0x58>
   28ca8:	e59f002c 	ldr	r0, [pc, #44]	; 28cdc <CDWHCIRegister::SetBit(unsigned int)+0x5c>
   28cac:	eb0038b3 	bl	36f80 <assertion_failed>
   28cb0:	e3a03001 	mov	r3, #1
   28cb4:	e5941008 	ldr	r1, [r4, #8]
   28cb8:	e1811513 	orr	r1, r1, r3, lsl r5
   28cbc:	e5841008 	str	r1, [r4, #8]
   28cc0:	e8bd8070 	pop	{r4, r5, r6, pc}
   28cc4:	e3a02060 	mov	r2, #96	; 0x60
   28cc8:	e59f1008 	ldr	r1, [pc, #8]	; 28cd8 <CDWHCIRegister::SetBit(unsigned int)+0x58>
   28ccc:	e59f000c 	ldr	r0, [pc, #12]	; 28ce0 <CDWHCIRegister::SetBit(unsigned int)+0x60>
   28cd0:	eb0038aa 	bl	36f80 <assertion_failed>
   28cd4:	eaffffef 	b	28c98 <CDWHCIRegister::SetBit(unsigned int)+0x18>
   28cd8:	0004a60c 	.word	0x0004a60c
   28cdc:	0004a62c 	.word	0x0004a62c
   28ce0:	0004a620 	.word	0x0004a620

00028ce4 <CDWHCIRegister::ClearAll()>:
   28ce4:	e3a02000 	mov	r2, #0
   28ce8:	e3a03001 	mov	r3, #1
   28cec:	e5802008 	str	r2, [r0, #8]
   28cf0:	e5803000 	str	r3, [r0]
   28cf4:	e12fff1e 	bx	lr

00028cf8 <CDWHCIRegister::SetAll()>:
   28cf8:	e3e02000 	mvn	r2, #0
   28cfc:	e3a03001 	mov	r3, #1
   28d00:	e5802008 	str	r2, [r0, #8]
   28d04:	e5803000 	str	r3, [r0]
   28d08:	e12fff1e 	bx	lr

00028d0c <CDWHCIRegister::Dump() const>:
   28d0c:	e92d4010 	push	{r4, lr}
   28d10:	e5903000 	ldr	r3, [r0]
   28d14:	e24dd008 	sub	sp, sp, #8
   28d18:	e3530000 	cmp	r3, #0
   28d1c:	e1a04000 	mov	r4, r0
   28d20:	1a00000a 	bne	28d50 <CDWHCIRegister::Dump() const+0x44>
   28d24:	eb003a11 	bl	37570 <CLogger::Get()>
   28d28:	e5942004 	ldr	r2, [r4, #4]
   28d2c:	e59f3050 	ldr	r3, [pc, #80]	; 28d84 <CDWHCIRegister::Dump() const+0x78>
   28d30:	e1a02a02 	lsl	r2, r2, #20
   28d34:	e1a02a22 	lsr	r2, r2, #20
   28d38:	e58d2000 	str	r2, [sp]
   28d3c:	e59f1044 	ldr	r1, [pc, #68]	; 28d88 <CDWHCIRegister::Dump() const+0x7c>
   28d40:	e3a02004 	mov	r2, #4
   28d44:	eb003ae9 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   28d48:	e28dd008 	add	sp, sp, #8
   28d4c:	e8bd8010 	pop	{r4, pc}
   28d50:	eb003a06 	bl	37570 <CLogger::Get()>
   28d54:	e5943004 	ldr	r3, [r4, #4]
   28d58:	e5942008 	ldr	r2, [r4, #8]
   28d5c:	e1a03a03 	lsl	r3, r3, #20
   28d60:	e1a03a23 	lsr	r3, r3, #20
   28d64:	e58d3000 	str	r3, [sp]
   28d68:	e58d2004 	str	r2, [sp, #4]
   28d6c:	e59f3018 	ldr	r3, [pc, #24]	; 28d8c <CDWHCIRegister::Dump() const+0x80>
   28d70:	e3a02004 	mov	r2, #4
   28d74:	e59f100c 	ldr	r1, [pc, #12]	; 28d88 <CDWHCIRegister::Dump() const+0x7c>
   28d78:	eb003adc 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   28d7c:	e28dd008 	add	sp, sp, #8
   28d80:	e8bd8010 	pop	{r4, pc}
   28d84:	0004a66c 	.word	0x0004a66c
   28d88:	0004a664 	.word	0x0004a664
   28d8c:	0004a648 	.word	0x0004a648

00028d90 <CDWHCITransferStageData::~CDWHCITransferStageData()>:
   28d90:	e92d4010 	push	{r4, lr}
   28d94:	e1a04000 	mov	r4, r0
   28d98:	e5900050 	ldr	r0, [r0, #80]	; 0x50
   28d9c:	e3500000 	cmp	r0, #0
   28da0:	0a000002 	beq	28db0 <CDWHCITransferStageData::~CDWHCITransferStageData()+0x20>
   28da4:	e5903000 	ldr	r3, [r0]
   28da8:	e5933004 	ldr	r3, [r3, #4]
   28dac:	e12fff33 	blx	r3
   28db0:	e3a03000 	mov	r3, #0
   28db4:	e5940048 	ldr	r0, [r4, #72]	; 0x48
   28db8:	e5843050 	str	r3, [r4, #80]	; 0x50
   28dbc:	e1500003 	cmp	r0, r3
   28dc0:	e584304c 	str	r3, [r4, #76]	; 0x4c
   28dc4:	0a000000 	beq	28dcc <CDWHCITransferStageData::~CDWHCITransferStageData()+0x3c>
   28dc8:	eb002d55 	bl	34324 <operator delete[](void*)>
   28dcc:	e1a00004 	mov	r0, r4
   28dd0:	e8bd8010 	pop	{r4, pc}

00028dd4 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)>:
   28dd4:	e92d4070 	push	{r4, r5, r6, lr}
   28dd8:	e1a04000 	mov	r4, r0
   28ddc:	e59f018c 	ldr	r0, [pc, #396]	; 28f70 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x19c>
   28de0:	e5841044 	str	r1, [r4, #68]	; 0x44
   28de4:	e0000001 	and	r0, r0, r1
   28de8:	e3500000 	cmp	r0, #0
   28dec:	0a00000f 	beq	28e30 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x5c>
   28df0:	e3110010 	tst	r1, #16
   28df4:	08bd8070 	popeq	{r4, r5, r6, pc}
   28df8:	e5940004 	ldr	r0, [r4, #4]
   28dfc:	eb00082a 	bl	2aeac <CUSBRequest::IsCompleteOnNAK() const>
   28e00:	e3500000 	cmp	r0, #0
   28e04:	08bd8070 	popeq	{r4, r5, r6, pc}
   28e08:	e594001c 	ldr	r0, [r4, #28]
   28e0c:	eb0006a4 	bl	2a8a4 <CUSBEndpoint::GetType() const>
   28e10:	e3500001 	cmp	r0, #1
   28e14:	1a00004b 	bne	28f48 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x174>
   28e18:	e5943008 	ldr	r3, [r4, #8]
   28e1c:	e3530000 	cmp	r3, #0
   28e20:	0a00004d 	beq	28f5c <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x188>
   28e24:	e3a03000 	mov	r3, #0
   28e28:	e584302c 	str	r3, [r4, #44]	; 0x2c
   28e2c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28e30:	e5941010 	ldr	r1, [r4, #16]
   28e34:	e5945034 	ldr	r5, [r4, #52]	; 0x34
   28e38:	e594c030 	ldr	ip, [r4, #48]	; 0x30
   28e3c:	e3510000 	cmp	r1, #0
   28e40:	e0455002 	sub	r5, r5, r2
   28e44:	e04c3003 	sub	r3, ip, r3
   28e48:	e5941038 	ldr	r1, [r4, #56]	; 0x38
   28e4c:	e594204c 	ldr	r2, [r4, #76]	; 0x4c
   28e50:	1a000016 	bne	28eb0 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0xdc>
   28e54:	e0831001 	add	r1, r3, r1
   28e58:	e0823003 	add	r3, r2, r3
   28e5c:	e5841038 	str	r1, [r4, #56]	; 0x38
   28e60:	e584304c 	str	r3, [r4, #76]	; 0x4c
   28e64:	e594200c 	ldr	r2, [r4, #12]
   28e68:	e1a01005 	mov	r1, r5
   28e6c:	e594001c 	ldr	r0, [r4, #28]
   28e70:	eb0006b2 	bl	2a940 <CUSBEndpoint::SkipPID(unsigned int, int)>
   28e74:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
   28e78:	e1520005 	cmp	r2, r5
   28e7c:	3a00001b 	bcc	28ef0 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x11c>
   28e80:	e5940028 	ldr	r0, [r4, #40]	; 0x28
   28e84:	e5941038 	ldr	r1, [r4, #56]	; 0x38
   28e88:	e594c030 	ldr	ip, [r4, #48]	; 0x30
   28e8c:	e0403001 	sub	r3, r0, r1
   28e90:	e0422005 	sub	r2, r2, r5
   28e94:	e153000c 	cmp	r3, ip
   28e98:	e584202c 	str	r2, [r4, #44]	; 0x2c
   28e9c:	28bd8070 	popcs	{r4, r5, r6, pc}
   28ea0:	e1500001 	cmp	r0, r1
   28ea4:	3a000017 	bcc	28f08 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x134>
   28ea8:	e5843030 	str	r3, [r4, #48]	; 0x30
   28eac:	e8bd8070 	pop	{r4, r5, r6, pc}
   28eb0:	e16f0f13 	clz	r0, r3
   28eb4:	e594e014 	ldr	lr, [r4, #20]
   28eb8:	e1a002a0 	lsr	r0, r0, #5
   28ebc:	e35e0000 	cmp	lr, #0
   28ec0:	03a00000 	moveq	r0, #0
   28ec4:	e3500000 	cmp	r0, #0
   28ec8:	1a000016 	bne	28f28 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x154>
   28ecc:	e0831001 	add	r1, r3, r1
   28ed0:	e35e0000 	cmp	lr, #0
   28ed4:	e0823003 	add	r3, r2, r3
   28ed8:	e5841038 	str	r1, [r4, #56]	; 0x38
   28edc:	e584304c 	str	r3, [r4, #76]	; 0x4c
   28ee0:	1affffdf 	bne	28e64 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x90>
   28ee4:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
   28ee8:	e1520005 	cmp	r2, r5
   28eec:	2affffe3 	bcs	28e80 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0xac>
   28ef0:	e3a020c3 	mov	r2, #195	; 0xc3
   28ef4:	e59f1078 	ldr	r1, [pc, #120]	; 28f74 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x1a0>
   28ef8:	e59f0078 	ldr	r0, [pc, #120]	; 28f78 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x1a4>
   28efc:	eb00381f 	bl	36f80 <assertion_failed>
   28f00:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
   28f04:	eaffffdd 	b	28e80 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0xac>
   28f08:	e3a020c9 	mov	r2, #201	; 0xc9
   28f0c:	e59f1060 	ldr	r1, [pc, #96]	; 28f74 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x1a0>
   28f10:	e59f0064 	ldr	r0, [pc, #100]	; 28f7c <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x1a8>
   28f14:	eb003819 	bl	36f80 <assertion_failed>
   28f18:	e5943028 	ldr	r3, [r4, #40]	; 0x28
   28f1c:	e5942038 	ldr	r2, [r4, #56]	; 0x38
   28f20:	e0433002 	sub	r3, r3, r2
   28f24:	eaffffdf 	b	28ea8 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0xd4>
   28f28:	e35c0000 	cmp	ip, #0
   28f2c:	15943024 	ldrne	r3, [r4, #36]	; 0x24
   28f30:	10030593 	mulne	r3, r3, r5
   28f34:	10811003 	addne	r1, r1, r3
   28f38:	10822003 	addne	r2, r2, r3
   28f3c:	e5841038 	str	r1, [r4, #56]	; 0x38
   28f40:	e584204c 	str	r2, [r4, #76]	; 0x4c
   28f44:	eaffffc6 	b	28e64 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x90>
   28f48:	e3a020a6 	mov	r2, #166	; 0xa6
   28f4c:	e59f1020 	ldr	r1, [pc, #32]	; 28f74 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x1a0>
   28f50:	e59f0028 	ldr	r0, [pc, #40]	; 28f80 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x1ac>
   28f54:	eb003809 	bl	36f80 <assertion_failed>
   28f58:	eaffffae 	b	28e18 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x44>
   28f5c:	e3a020a7 	mov	r2, #167	; 0xa7
   28f60:	e59f100c 	ldr	r1, [pc, #12]	; 28f74 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x1a0>
   28f64:	e59f0018 	ldr	r0, [pc, #24]	; 28f84 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x1b0>
   28f68:	eb003804 	bl	36f80 <assertion_failed>
   28f6c:	eaffffac 	b	28e24 <CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)+0x50>
   28f70:	000007dc 	.word	0x000007dc
   28f74:	0004a68c 	.word	0x0004a68c
   28f78:	0004a6d8 	.word	0x0004a6d8
   28f7c:	0004a6fc 	.word	0x0004a6fc
   28f80:	0004a6a4 	.word	0x0004a6a4
   28f84:	0004a6d0 	.word	0x0004a6d0

00028f88 <CDWHCITransferStageData::SetSplitComplete(int)>:
   28f88:	e5903010 	ldr	r3, [r0, #16]
   28f8c:	e92d4070 	push	{r4, r5, r6, lr}
   28f90:	e3530000 	cmp	r3, #0
   28f94:	e1a04000 	mov	r4, r0
   28f98:	e1a05001 	mov	r5, r1
   28f9c:	1a000003 	bne	28fb0 <CDWHCITransferStageData::SetSplitComplete(int)+0x28>
   28fa0:	e3a020d0 	mov	r2, #208	; 0xd0
   28fa4:	e59f100c 	ldr	r1, [pc, #12]	; 28fb8 <CDWHCITransferStageData::SetSplitComplete(int)+0x30>
   28fa8:	e59f000c 	ldr	r0, [pc, #12]	; 28fbc <CDWHCITransferStageData::SetSplitComplete(int)+0x34>
   28fac:	eb0037f3 	bl	36f80 <assertion_failed>
   28fb0:	e5845014 	str	r5, [r4, #20]
   28fb4:	e8bd8070 	pop	{r4, r5, r6, pc}
   28fb8:	0004a68c 	.word	0x0004a68c
   28fbc:	0004a728 	.word	0x0004a728

00028fc0 <CDWHCITransferStageData::SetState(unsigned int)>:
   28fc0:	e580103c 	str	r1, [r0, #60]	; 0x3c
   28fc4:	e12fff1e 	bx	lr

00028fc8 <CDWHCITransferStageData::GetState() const>:
   28fc8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
   28fcc:	e12fff1e 	bx	lr

00028fd0 <CDWHCITransferStageData::SetSubState(unsigned int)>:
   28fd0:	e5801040 	str	r1, [r0, #64]	; 0x40
   28fd4:	e12fff1e 	bx	lr

00028fd8 <CDWHCITransferStageData::GetSubState() const>:
   28fd8:	e5900040 	ldr	r0, [r0, #64]	; 0x40
   28fdc:	e12fff1e 	bx	lr

00028fe0 <CDWHCITransferStageData::BeginSplitCycle()>:
   28fe0:	e3a00001 	mov	r0, #1
   28fe4:	e12fff1e 	bx	lr

00028fe8 <CDWHCITransferStageData::GetChannelNumber() const>:
   28fe8:	e5900000 	ldr	r0, [r0]
   28fec:	e12fff1e 	bx	lr

00028ff0 <CDWHCITransferStageData::IsPeriodic() const>:
   28ff0:	e92d4010 	push	{r4, lr}
   28ff4:	e1a04000 	mov	r4, r0
   28ff8:	e590001c 	ldr	r0, [r0, #28]
   28ffc:	e3500000 	cmp	r0, #0
   29000:	0a000006 	beq	29020 <CDWHCITransferStageData::IsPeriodic() const+0x30>
   29004:	eb000626 	bl	2a8a4 <CUSBEndpoint::GetType() const>
   29008:	e2400002 	sub	r0, r0, #2
   2900c:	e6ef0070 	uxtb	r0, r0
   29010:	e3500001 	cmp	r0, #1
   29014:	83a00000 	movhi	r0, #0
   29018:	93a00001 	movls	r0, #1
   2901c:	e8bd8010 	pop	{r4, pc}
   29020:	e59f0010 	ldr	r0, [pc, #16]	; 29038 <CDWHCITransferStageData::IsPeriodic() const+0x48>
   29024:	e3a020f5 	mov	r2, #245	; 0xf5
   29028:	e59f100c 	ldr	r1, [pc, #12]	; 2903c <CDWHCITransferStageData::IsPeriodic() const+0x4c>
   2902c:	eb0037d3 	bl	36f80 <assertion_failed>
   29030:	e594001c 	ldr	r0, [r4, #28]
   29034:	eafffff2 	b	29004 <CDWHCITransferStageData::IsPeriodic() const+0x14>
   29038:	0004a73c 	.word	0x0004a73c
   2903c:	0004a68c 	.word	0x0004a68c

00029040 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)>:
   29040:	e92d4070 	push	{r4, r5, r6, lr}
   29044:	e1a05002 	mov	r5, r2
   29048:	e3a02000 	mov	r2, #0
   2904c:	e59d6010 	ldr	r6, [sp, #16]
   29050:	e1550002 	cmp	r5, r2
   29054:	e1a04000 	mov	r4, r0
   29058:	e8800022 	stm	r0, {r1, r5}
   2905c:	e5803008 	str	r3, [r0, #8]
   29060:	e580600c 	str	r6, [r0, #12]
   29064:	e5802014 	str	r2, [r0, #20]
   29068:	e5802038 	str	r2, [r0, #56]	; 0x38
   2906c:	e580203c 	str	r2, [r0, #60]	; 0x3c
   29070:	e5802040 	str	r2, [r0, #64]	; 0x40
   29074:	e5802044 	str	r2, [r0, #68]	; 0x44
   29078:	e5802048 	str	r2, [r0, #72]	; 0x48
   2907c:	e5802050 	str	r2, [r0, #80]	; 0x50
   29080:	0a000079 	beq	2926c <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x22c>
   29084:	e1a00005 	mov	r0, r5
   29088:	eb000719 	bl	2acf4 <CUSBRequest::GetEndpoint() const>
   2908c:	e3500000 	cmp	r0, #0
   29090:	e584001c 	str	r0, [r4, #28]
   29094:	0a000079 	beq	29280 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x240>
   29098:	eb0005ef 	bl	2a85c <CUSBEndpoint::GetDevice() const>
   2909c:	e3500000 	cmp	r0, #0
   290a0:	e5840018 	str	r0, [r4, #24]
   290a4:	0a00007e 	beq	292a4 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x264>
   290a8:	eb0002a6 	bl	29b48 <CUSBDevice::GetSpeed() const>
   290ac:	e5c40020 	strb	r0, [r4, #32]
   290b0:	e594001c 	ldr	r0, [r4, #28]
   290b4:	eb000600 	bl	2a8bc <CUSBEndpoint::GetMaxPacketSize() const>
   290b8:	e5840024 	str	r0, [r4, #36]	; 0x24
   290bc:	e5940018 	ldr	r0, [r4, #24]
   290c0:	eb0002a2 	bl	29b50 <CUSBDevice::IsSplit() const>
   290c4:	e3560000 	cmp	r6, #0
   290c8:	e5840010 	str	r0, [r4, #16]
   290cc:	0a00003e 	beq	291cc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x18c>
   290d0:	e5943048 	ldr	r3, [r4, #72]	; 0x48
   290d4:	e3530000 	cmp	r3, #0
   290d8:	0a000003 	beq	290ec <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0xac>
   290dc:	e3a0205c 	mov	r2, #92	; 0x5c
   290e0:	e59f11e4 	ldr	r1, [pc, #484]	; 292cc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x28c>
   290e4:	e59f01e4 	ldr	r0, [pc, #484]	; 292d0 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x290>
   290e8:	eb0037a4 	bl	36f80 <assertion_failed>
   290ec:	e3a00004 	mov	r0, #4
   290f0:	eb002c89 	bl	3431c <operator new[](unsigned int)>
   290f4:	e3a02000 	mov	r2, #0
   290f8:	e3a03001 	mov	r3, #1
   290fc:	e5840048 	str	r0, [r4, #72]	; 0x48
   29100:	e584004c 	str	r0, [r4, #76]	; 0x4c
   29104:	e5842028 	str	r2, [r4, #40]	; 0x28
   29108:	e5842030 	str	r2, [r4, #48]	; 0x30
   2910c:	e584302c 	str	r3, [r4, #44]	; 0x2c
   29110:	e5843034 	str	r3, [r4, #52]	; 0x34
   29114:	e3100003 	tst	r0, #3
   29118:	1a000026 	bne	291b8 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x178>
   2911c:	e5943010 	ldr	r3, [r4, #16]
   29120:	e3530000 	cmp	r3, #0
   29124:	0a00000a 	beq	29154 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x114>
   29128:	e1a00004 	mov	r0, r4
   2912c:	ebffffaf 	bl	28ff0 <CDWHCITransferStageData::IsPeriodic() const>
   29130:	e3500000 	cmp	r0, #0
   29134:	0a000018 	beq	2919c <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x15c>
   29138:	e3a00014 	mov	r0, #20
   2913c:	eb002c75 	bl	34318 <operator new(unsigned int)>
   29140:	e1a05000 	mov	r5, r0
   29144:	eb000ed7 	bl	2cca8 <CDWHCIFrameSchedulerPeriodic::CDWHCIFrameSchedulerPeriodic()>
   29148:	e5845050 	str	r5, [r4, #80]	; 0x50
   2914c:	e1a00004 	mov	r0, r4
   29150:	e8bd8070 	pop	{r4, r5, r6, pc}
   29154:	e5940018 	ldr	r0, [r4, #24]
   29158:	eb00027e 	bl	29b58 <CUSBDevice::GetHubAddress() const>
   2915c:	e3500000 	cmp	r0, #0
   29160:	1afffff9 	bne	2914c <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x10c>
   29164:	e5d43020 	ldrb	r3, [r4, #32]
   29168:	e3530002 	cmp	r3, #2
   2916c:	0afffff6 	beq	2914c <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x10c>
   29170:	e1a00004 	mov	r0, r4
   29174:	ebffff9d 	bl	28ff0 <CDWHCITransferStageData::IsPeriodic() const>
   29178:	e1a06000 	mov	r6, r0
   2917c:	e3a0000c 	mov	r0, #12
   29180:	eb002c64 	bl	34318 <operator new(unsigned int)>
   29184:	e1a05000 	mov	r5, r0
   29188:	e1a01006 	mov	r1, r6
   2918c:	eb001694 	bl	2ebe4 <CDWHCIFrameSchedulerNoSplit::CDWHCIFrameSchedulerNoSplit(int)>
   29190:	e5845050 	str	r5, [r4, #80]	; 0x50
   29194:	e1a00004 	mov	r0, r4
   29198:	e8bd8070 	pop	{r4, r5, r6, pc}
   2919c:	e3a00010 	mov	r0, #16
   291a0:	eb002c5c 	bl	34318 <operator new(unsigned int)>
   291a4:	e1a05000 	mov	r5, r0
   291a8:	eb000e11 	bl	2c9f4 <CDWHCIFrameSchedulerNonPeriodic::CDWHCIFrameSchedulerNonPeriodic()>
   291ac:	e5845050 	str	r5, [r4, #80]	; 0x50
   291b0:	e1a00004 	mov	r0, r4
   291b4:	e8bd8070 	pop	{r4, r5, r6, pc}
   291b8:	e3a02068 	mov	r2, #104	; 0x68
   291bc:	e59f1108 	ldr	r1, [pc, #264]	; 292cc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x28c>
   291c0:	e59f010c 	ldr	r0, [pc, #268]	; 292d4 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x294>
   291c4:	eb00376d 	bl	36f80 <assertion_failed>
   291c8:	eaffffd3 	b	2911c <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0xdc>
   291cc:	e1a01006 	mov	r1, r6
   291d0:	e594001c 	ldr	r0, [r4, #28]
   291d4:	eb0005c7 	bl	2a8f8 <CUSBEndpoint::GetNextPID(int)>
   291d8:	e3500000 	cmp	r0, #0
   291dc:	e1a00005 	mov	r0, r5
   291e0:	0a00001c 	beq	29258 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x218>
   291e4:	eb0006fc 	bl	2addc <CUSBRequest::GetBuffer()>
   291e8:	e584004c 	str	r0, [r4, #76]	; 0x4c
   291ec:	e1a00005 	mov	r0, r5
   291f0:	eb00070c 	bl	2ae28 <CUSBRequest::GetBufLen() const>
   291f4:	e1a05000 	mov	r5, r0
   291f8:	e5840028 	str	r0, [r4, #40]	; 0x28
   291fc:	e5946024 	ldr	r6, [r4, #36]	; 0x24
   29200:	e2460001 	sub	r0, r6, #1
   29204:	e0800005 	add	r0, r0, r5
   29208:	e1a01006 	mov	r1, r6
   2920c:	eb002b2b 	bl	33ec0 <__aeabi_uidiv>
   29210:	e5943010 	ldr	r3, [r4, #16]
   29214:	e584002c 	str	r0, [r4, #44]	; 0x2c
   29218:	e3530000 	cmp	r3, #0
   2921c:	0a000026 	beq	292bc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x27c>
   29220:	e1560005 	cmp	r6, r5
   29224:	31a05006 	movcc	r5, r6
   29228:	e3a03001 	mov	r3, #1
   2922c:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   29230:	e5845030 	str	r5, [r4, #48]	; 0x30
   29234:	e5843034 	str	r3, [r4, #52]	; 0x34
   29238:	e3500000 	cmp	r0, #0
   2923c:	1affffb4 	bne	29114 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0xd4>
   29240:	e59f0090 	ldr	r0, [pc, #144]	; 292d8 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x298>
   29244:	e3a02067 	mov	r2, #103	; 0x67
   29248:	e59f107c 	ldr	r1, [pc, #124]	; 292cc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x28c>
   2924c:	eb00374b 	bl	36f80 <assertion_failed>
   29250:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   29254:	eaffffae 	b	29114 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0xd4>
   29258:	eb0006c8 	bl	2ad80 <CUSBRequest::GetSetupData()>
   2925c:	e3a05008 	mov	r5, #8
   29260:	e584004c 	str	r0, [r4, #76]	; 0x4c
   29264:	e5845028 	str	r5, [r4, #40]	; 0x28
   29268:	eaffffe3 	b	291fc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x1bc>
   2926c:	e3a0202c 	mov	r2, #44	; 0x2c
   29270:	e59f1054 	ldr	r1, [pc, #84]	; 292cc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x28c>
   29274:	e59f0060 	ldr	r0, [pc, #96]	; 292dc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x29c>
   29278:	eb003740 	bl	36f80 <assertion_failed>
   2927c:	eaffff80 	b	29084 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x44>
   29280:	e3a0202f 	mov	r2, #47	; 0x2f
   29284:	e59f1040 	ldr	r1, [pc, #64]	; 292cc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x28c>
   29288:	e59f0050 	ldr	r0, [pc, #80]	; 292e0 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x2a0>
   2928c:	eb00373b 	bl	36f80 <assertion_failed>
   29290:	e594001c 	ldr	r0, [r4, #28]
   29294:	eb000570 	bl	2a85c <CUSBEndpoint::GetDevice() const>
   29298:	e3500000 	cmp	r0, #0
   2929c:	e5840018 	str	r0, [r4, #24]
   292a0:	1affff80 	bne	290a8 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x68>
   292a4:	e59f0038 	ldr	r0, [pc, #56]	; 292e4 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x2a4>
   292a8:	e3a02031 	mov	r2, #49	; 0x31
   292ac:	e59f1018 	ldr	r1, [pc, #24]	; 292cc <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x28c>
   292b0:	eb003732 	bl	36f80 <assertion_failed>
   292b4:	e5940018 	ldr	r0, [r4, #24]
   292b8:	eaffff7a 	b	290a8 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x68>
   292bc:	e5840034 	str	r0, [r4, #52]	; 0x34
   292c0:	e5845030 	str	r5, [r4, #48]	; 0x30
   292c4:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   292c8:	eaffffda 	b	29238 <CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, int, int)+0x1f8>
   292cc:	0004a68c 	.word	0x0004a68c
   292d0:	0004a76c 	.word	0x0004a76c
   292d4:	0004a798 	.word	0x0004a798
   292d8:	0004a780 	.word	0x0004a780
   292dc:	0004a750 	.word	0x0004a750
   292e0:	0004a73c 	.word	0x0004a73c
   292e4:	0004a75c 	.word	0x0004a75c

000292e8 <CDWHCITransferStageData::GetDeviceAddress() const>:
   292e8:	e5903018 	ldr	r3, [r0, #24]
   292ec:	e3530000 	cmp	r3, #0
   292f0:	0a000001 	beq	292fc <CDWHCITransferStageData::GetDeviceAddress() const+0x14>
   292f4:	e1a00003 	mov	r0, r3
   292f8:	ea000210 	b	29b40 <CUSBDevice::GetAddress() const>
   292fc:	e92d4010 	push	{r4, lr}
   29300:	e1a04000 	mov	r4, r0
   29304:	e3a020fe 	mov	r2, #254	; 0xfe
   29308:	e59f0014 	ldr	r0, [pc, #20]	; 29324 <CDWHCITransferStageData::GetDeviceAddress() const+0x3c>
   2930c:	e59f1014 	ldr	r1, [pc, #20]	; 29328 <CDWHCITransferStageData::GetDeviceAddress() const+0x40>
   29310:	eb00371a 	bl	36f80 <assertion_failed>
   29314:	e5943018 	ldr	r3, [r4, #24]
   29318:	e8bd4010 	pop	{r4, lr}
   2931c:	e1a00003 	mov	r0, r3
   29320:	ea000206 	b	29b40 <CUSBDevice::GetAddress() const>
   29324:	0004a75c 	.word	0x0004a75c
   29328:	0004a68c 	.word	0x0004a68c

0002932c <CDWHCITransferStageData::GetEndpointType() const>:
   2932c:	e92d4010 	push	{r4, lr}
   29330:	e1a04000 	mov	r4, r0
   29334:	e590001c 	ldr	r0, [r0, #28]
   29338:	e3500000 	cmp	r0, #0
   2933c:	0a00000f 	beq	29380 <CDWHCITransferStageData::GetEndpointType() const+0x54>
   29340:	eb000557 	bl	2a8a4 <CUSBEndpoint::GetType() const>
   29344:	e3500001 	cmp	r0, #1
   29348:	0a00000a 	beq	29378 <CDWHCITransferStageData::GetEndpointType() const+0x4c>
   2934c:	3a000007 	bcc	29370 <CDWHCITransferStageData::GetEndpointType() const+0x44>
   29350:	e3500002 	cmp	r0, #2
   29354:	1a000001 	bne	29360 <CDWHCITransferStageData::GetEndpointType() const+0x34>
   29358:	e3a00003 	mov	r0, #3
   2935c:	e8bd8010 	pop	{r4, pc}
   29360:	e59f2030 	ldr	r2, [pc, #48]	; 29398 <CDWHCITransferStageData::GetEndpointType() const+0x6c>
   29364:	e59f1030 	ldr	r1, [pc, #48]	; 2939c <CDWHCITransferStageData::GetEndpointType() const+0x70>
   29368:	e59f0030 	ldr	r0, [pc, #48]	; 293a0 <CDWHCITransferStageData::GetEndpointType() const+0x74>
   2936c:	eb003703 	bl	36f80 <assertion_failed>
   29370:	e3a00000 	mov	r0, #0
   29374:	e8bd8010 	pop	{r4, pc}
   29378:	e3a00002 	mov	r0, #2
   2937c:	e8bd8010 	pop	{r4, pc}
   29380:	e59f001c 	ldr	r0, [pc, #28]	; 293a4 <CDWHCITransferStageData::GetEndpointType() const+0x78>
   29384:	e3a02f41 	mov	r2, #260	; 0x104
   29388:	e59f100c 	ldr	r1, [pc, #12]	; 2939c <CDWHCITransferStageData::GetEndpointType() const+0x70>
   2938c:	eb0036fb 	bl	36f80 <assertion_failed>
   29390:	e594001c 	ldr	r0, [r4, #28]
   29394:	eaffffe9 	b	29340 <CDWHCITransferStageData::GetEndpointType() const+0x14>
   29398:	00000117 	.word	0x00000117
   2939c:	0004a68c 	.word	0x0004a68c
   293a0:	0004a8b8 	.word	0x0004a8b8
   293a4:	0004a73c 	.word	0x0004a73c

000293a8 <CDWHCITransferStageData::GetEndpointNumber() const>:
   293a8:	e590301c 	ldr	r3, [r0, #28]
   293ac:	e3530000 	cmp	r3, #0
   293b0:	0a000001 	beq	293bc <CDWHCITransferStageData::GetEndpointNumber() const+0x14>
   293b4:	e1a00003 	mov	r0, r3
   293b8:	ea000537 	b	2a89c <CUSBEndpoint::GetNumber() const>
   293bc:	e92d4010 	push	{r4, lr}
   293c0:	e1a04000 	mov	r4, r0
   293c4:	e3a02e12 	mov	r2, #288	; 0x120
   293c8:	e59f0014 	ldr	r0, [pc, #20]	; 293e4 <CDWHCITransferStageData::GetEndpointNumber() const+0x3c>
   293cc:	e59f1014 	ldr	r1, [pc, #20]	; 293e8 <CDWHCITransferStageData::GetEndpointNumber() const+0x40>
   293d0:	eb0036ea 	bl	36f80 <assertion_failed>
   293d4:	e594301c 	ldr	r3, [r4, #28]
   293d8:	e8bd4010 	pop	{r4, lr}
   293dc:	e1a00003 	mov	r0, r3
   293e0:	ea00052d 	b	2a89c <CUSBEndpoint::GetNumber() const>
   293e4:	0004a73c 	.word	0x0004a73c
   293e8:	0004a68c 	.word	0x0004a68c

000293ec <CDWHCITransferStageData::GetMaxPacketSize() const>:
   293ec:	e5900024 	ldr	r0, [r0, #36]	; 0x24
   293f0:	e12fff1e 	bx	lr

000293f4 <CDWHCITransferStageData::GetSpeed() const>:
   293f4:	e5d00020 	ldrb	r0, [r0, #32]
   293f8:	e12fff1e 	bx	lr

000293fc <CDWHCITransferStageData::GetPID() const>:
   293fc:	e92d4010 	push	{r4, lr}
   29400:	e1a04000 	mov	r4, r0
   29404:	e590001c 	ldr	r0, [r0, #28]
   29408:	e3500000 	cmp	r0, #0
   2940c:	0a000010 	beq	29454 <CDWHCITransferStageData::GetPID() const+0x58>
   29410:	e594100c 	ldr	r1, [r4, #12]
   29414:	eb000537 	bl	2a8f8 <CUSBEndpoint::GetNextPID(int)>
   29418:	e3500001 	cmp	r0, #1
   2941c:	0a00000a 	beq	2944c <CDWHCITransferStageData::GetPID() const+0x50>
   29420:	3a000007 	bcc	29444 <CDWHCITransferStageData::GetPID() const+0x48>
   29424:	e3500002 	cmp	r0, #2
   29428:	08bd8010 	popeq	{r4, pc}
   2942c:	e59f2038 	ldr	r2, [pc, #56]	; 2946c <CDWHCITransferStageData::GetPID() const+0x70>
   29430:	e59f1038 	ldr	r1, [pc, #56]	; 29470 <CDWHCITransferStageData::GetPID() const+0x74>
   29434:	e59f0038 	ldr	r0, [pc, #56]	; 29474 <CDWHCITransferStageData::GetPID() const+0x78>
   29438:	eb0036d0 	bl	36f80 <assertion_failed>
   2943c:	e3a00000 	mov	r0, #0
   29440:	e8bd8010 	pop	{r4, pc}
   29444:	e3a00003 	mov	r0, #3
   29448:	e8bd8010 	pop	{r4, pc}
   2944c:	e3a00000 	mov	r0, #0
   29450:	e8bd8010 	pop	{r4, pc}
   29454:	e59f001c 	ldr	r0, [pc, #28]	; 29478 <CDWHCITransferStageData::GetPID() const+0x7c>
   29458:	e3a02e13 	mov	r2, #304	; 0x130
   2945c:	e59f100c 	ldr	r1, [pc, #12]	; 29470 <CDWHCITransferStageData::GetPID() const+0x74>
   29460:	eb0036c6 	bl	36f80 <assertion_failed>
   29464:	e594001c 	ldr	r0, [r4, #28]
   29468:	eaffffe8 	b	29410 <CDWHCITransferStageData::GetPID() const+0x14>
   2946c:	00000143 	.word	0x00000143
   29470:	0004a68c 	.word	0x0004a68c
   29474:	0004a8b8 	.word	0x0004a8b8
   29478:	0004a73c 	.word	0x0004a73c

0002947c <CDWHCITransferStageData::IsDirectionIn() const>:
   2947c:	e5900008 	ldr	r0, [r0, #8]
   29480:	e12fff1e 	bx	lr

00029484 <CDWHCITransferStageData::IsStatusStage() const>:
   29484:	e590000c 	ldr	r0, [r0, #12]
   29488:	e12fff1e 	bx	lr

0002948c <CDWHCITransferStageData::GetDMAAddress() const>:
   2948c:	e590304c 	ldr	r3, [r0, #76]	; 0x4c
   29490:	e3530000 	cmp	r3, #0
   29494:	0a000001 	beq	294a0 <CDWHCITransferStageData::GetDMAAddress() const+0x14>
   29498:	e1a00003 	mov	r0, r3
   2949c:	e12fff1e 	bx	lr
   294a0:	e92d4010 	push	{r4, lr}
   294a4:	e1a04000 	mov	r4, r0
   294a8:	e59f2014 	ldr	r2, [pc, #20]	; 294c4 <CDWHCITransferStageData::GetDMAAddress() const+0x38>
   294ac:	e59f1014 	ldr	r1, [pc, #20]	; 294c8 <CDWHCITransferStageData::GetDMAAddress() const+0x3c>
   294b0:	e59f0014 	ldr	r0, [pc, #20]	; 294cc <CDWHCITransferStageData::GetDMAAddress() const+0x40>
   294b4:	eb0036b1 	bl	36f80 <assertion_failed>
   294b8:	e594304c 	ldr	r3, [r4, #76]	; 0x4c
   294bc:	e1a00003 	mov	r0, r3
   294c0:	e8bd8010 	pop	{r4, pc}
   294c4:	00000156 	.word	0x00000156
   294c8:	0004a68c 	.word	0x0004a68c
   294cc:	0004a780 	.word	0x0004a780

000294d0 <CDWHCITransferStageData::GetBytesToTransfer() const>:
   294d0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
   294d4:	e12fff1e 	bx	lr

000294d8 <CDWHCITransferStageData::GetPacketsToTransfer() const>:
   294d8:	e5900034 	ldr	r0, [r0, #52]	; 0x34
   294dc:	e12fff1e 	bx	lr

000294e0 <CDWHCITransferStageData::IsSplit() const>:
   294e0:	e5900010 	ldr	r0, [r0, #16]
   294e4:	e12fff1e 	bx	lr

000294e8 <CDWHCITransferStageData::IsSplitComplete() const>:
   294e8:	e5903010 	ldr	r3, [r0, #16]
   294ec:	e92d4010 	push	{r4, lr}
   294f0:	e3530000 	cmp	r3, #0
   294f4:	e1a04000 	mov	r4, r0
   294f8:	1a000003 	bne	2950c <CDWHCITransferStageData::IsSplitComplete() const+0x24>
   294fc:	e3a02f5b 	mov	r2, #364	; 0x16c
   29500:	e59f100c 	ldr	r1, [pc, #12]	; 29514 <CDWHCITransferStageData::IsSplitComplete() const+0x2c>
   29504:	e59f000c 	ldr	r0, [pc, #12]	; 29518 <CDWHCITransferStageData::IsSplitComplete() const+0x30>
   29508:	eb00369c 	bl	36f80 <assertion_failed>
   2950c:	e5940014 	ldr	r0, [r4, #20]
   29510:	e8bd8010 	pop	{r4, pc}
   29514:	0004a68c 	.word	0x0004a68c
   29518:	0004a728 	.word	0x0004a728

0002951c <CDWHCITransferStageData::GetHubAddress() const>:
   2951c:	e5903010 	ldr	r3, [r0, #16]
   29520:	e92d4010 	push	{r4, lr}
   29524:	e3530000 	cmp	r3, #0
   29528:	e1a04000 	mov	r4, r0
   2952c:	0a000004 	beq	29544 <CDWHCITransferStageData::GetHubAddress() const+0x28>
   29530:	e5940018 	ldr	r0, [r4, #24]
   29534:	e3500000 	cmp	r0, #0
   29538:	0a000008 	beq	29560 <CDWHCITransferStageData::GetHubAddress() const+0x44>
   2953c:	e8bd4010 	pop	{r4, lr}
   29540:	ea000184 	b	29b58 <CUSBDevice::GetHubAddress() const>
   29544:	e59f0030 	ldr	r0, [pc, #48]	; 2957c <CDWHCITransferStageData::GetHubAddress() const+0x60>
   29548:	e59f2030 	ldr	r2, [pc, #48]	; 29580 <CDWHCITransferStageData::GetHubAddress() const+0x64>
   2954c:	e59f1030 	ldr	r1, [pc, #48]	; 29584 <CDWHCITransferStageData::GetHubAddress() const+0x68>
   29550:	eb00368a 	bl	36f80 <assertion_failed>
   29554:	e5940018 	ldr	r0, [r4, #24]
   29558:	e3500000 	cmp	r0, #0
   2955c:	1afffff6 	bne	2953c <CDWHCITransferStageData::GetHubAddress() const+0x20>
   29560:	e59f0020 	ldr	r0, [pc, #32]	; 29588 <CDWHCITransferStageData::GetHubAddress() const+0x6c>
   29564:	e59f2020 	ldr	r2, [pc, #32]	; 2958c <CDWHCITransferStageData::GetHubAddress() const+0x70>
   29568:	e59f1014 	ldr	r1, [pc, #20]	; 29584 <CDWHCITransferStageData::GetHubAddress() const+0x68>
   2956c:	eb003683 	bl	36f80 <assertion_failed>
   29570:	e5940018 	ldr	r0, [r4, #24]
   29574:	e8bd4010 	pop	{r4, lr}
   29578:	ea000176 	b	29b58 <CUSBDevice::GetHubAddress() const>
   2957c:	0004a728 	.word	0x0004a728
   29580:	00000173 	.word	0x00000173
   29584:	0004a68c 	.word	0x0004a68c
   29588:	0004a75c 	.word	0x0004a75c
   2958c:	00000175 	.word	0x00000175

00029590 <CDWHCITransferStageData::GetHubPortAddress() const>:
   29590:	e5903010 	ldr	r3, [r0, #16]
   29594:	e92d4010 	push	{r4, lr}
   29598:	e3530000 	cmp	r3, #0
   2959c:	e1a04000 	mov	r4, r0
   295a0:	0a000004 	beq	295b8 <CDWHCITransferStageData::GetHubPortAddress() const+0x28>
   295a4:	e5940018 	ldr	r0, [r4, #24]
   295a8:	e3500000 	cmp	r0, #0
   295ac:	0a000008 	beq	295d4 <CDWHCITransferStageData::GetHubPortAddress() const+0x44>
   295b0:	e8bd4010 	pop	{r4, lr}
   295b4:	ea000169 	b	29b60 <CUSBDevice::GetHubPortNumber() const>
   295b8:	e59f0030 	ldr	r0, [pc, #48]	; 295f0 <CDWHCITransferStageData::GetHubPortAddress() const+0x60>
   295bc:	e59f2030 	ldr	r2, [pc, #48]	; 295f4 <CDWHCITransferStageData::GetHubPortAddress() const+0x64>
   295c0:	e59f1030 	ldr	r1, [pc, #48]	; 295f8 <CDWHCITransferStageData::GetHubPortAddress() const+0x68>
   295c4:	eb00366d 	bl	36f80 <assertion_failed>
   295c8:	e5940018 	ldr	r0, [r4, #24]
   295cc:	e3500000 	cmp	r0, #0
   295d0:	1afffff6 	bne	295b0 <CDWHCITransferStageData::GetHubPortAddress() const+0x20>
   295d4:	e59f0020 	ldr	r0, [pc, #32]	; 295fc <CDWHCITransferStageData::GetHubPortAddress() const+0x6c>
   295d8:	e59f2020 	ldr	r2, [pc, #32]	; 29600 <CDWHCITransferStageData::GetHubPortAddress() const+0x70>
   295dc:	e59f1014 	ldr	r1, [pc, #20]	; 295f8 <CDWHCITransferStageData::GetHubPortAddress() const+0x68>
   295e0:	eb003666 	bl	36f80 <assertion_failed>
   295e4:	e5940018 	ldr	r0, [r4, #24]
   295e8:	e8bd4010 	pop	{r4, lr}
   295ec:	ea00015b 	b	29b60 <CUSBDevice::GetHubPortNumber() const>
   295f0:	0004a728 	.word	0x0004a728
   295f4:	0000017b 	.word	0x0000017b
   295f8:	0004a68c 	.word	0x0004a68c
   295fc:	0004a75c 	.word	0x0004a75c
   29600:	0000017d 	.word	0x0000017d

00029604 <CDWHCITransferStageData::GetSplitPosition() const>:
   29604:	e3a00003 	mov	r0, #3
   29608:	e12fff1e 	bx	lr

0002960c <CDWHCITransferStageData::GetStatusMask() const>:
   2960c:	e5903010 	ldr	r3, [r0, #16]
   29610:	e3530000 	cmp	r3, #0
   29614:	0a000001 	beq	29620 <CDWHCITransferStageData::GetStatusMask() const+0x14>
   29618:	e59f0018 	ldr	r0, [pc, #24]	; 29638 <CDWHCITransferStageData::GetStatusMask() const+0x2c>
   2961c:	e12fff1e 	bx	lr
   29620:	e92d4010 	push	{r4, lr}
   29624:	ebfffe71 	bl	28ff0 <CDWHCITransferStageData::IsPeriodic() const>
   29628:	e3500000 	cmp	r0, #0
   2962c:	159f0004 	ldrne	r0, [pc, #4]	; 29638 <CDWHCITransferStageData::GetStatusMask() const+0x2c>
   29630:	059f0004 	ldreq	r0, [pc, #4]	; 2963c <CDWHCITransferStageData::GetStatusMask() const+0x30>
   29634:	e8bd8010 	pop	{r4, pc}
   29638:	000007ff 	.word	0x000007ff
   2963c:	0000078f 	.word	0x0000078f

00029640 <CDWHCITransferStageData::GetTransactionStatus() const>:
   29640:	e5903044 	ldr	r3, [r0, #68]	; 0x44
   29644:	e3530000 	cmp	r3, #0
   29648:	0a000001 	beq	29654 <CDWHCITransferStageData::GetTransactionStatus() const+0x14>
   2964c:	e1a00003 	mov	r0, r3
   29650:	e12fff1e 	bx	lr
   29654:	e92d4010 	push	{r4, lr}
   29658:	e1a04000 	mov	r4, r0
   2965c:	e59f2014 	ldr	r2, [pc, #20]	; 29678 <CDWHCITransferStageData::GetTransactionStatus() const+0x38>
   29660:	e59f1014 	ldr	r1, [pc, #20]	; 2967c <CDWHCITransferStageData::GetTransactionStatus() const+0x3c>
   29664:	e59f0014 	ldr	r0, [pc, #20]	; 29680 <CDWHCITransferStageData::GetTransactionStatus() const+0x40>
   29668:	eb003644 	bl	36f80 <assertion_failed>
   2966c:	e5943044 	ldr	r3, [r4, #68]	; 0x44
   29670:	e1a00003 	mov	r0, r3
   29674:	e8bd8010 	pop	{r4, pc}
   29678:	0000019a 	.word	0x0000019a
   2967c:	0004a68c 	.word	0x0004a68c
   29680:	0004a7bc 	.word	0x0004a7bc

00029684 <CDWHCITransferStageData::IsStageComplete() const>:
   29684:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
   29688:	e16f0f10 	clz	r0, r0
   2968c:	e1a002a0 	lsr	r0, r0, #5
   29690:	e12fff1e 	bx	lr

00029694 <CDWHCITransferStageData::GetResultLen() const>:
   29694:	e5902038 	ldr	r2, [r0, #56]	; 0x38
   29698:	e5900028 	ldr	r0, [r0, #40]	; 0x28
   2969c:	e1520000 	cmp	r2, r0
   296a0:	31a00002 	movcc	r0, r2
   296a4:	e12fff1e 	bx	lr

000296a8 <CDWHCITransferStageData::GetURB() const>:
   296a8:	e5903004 	ldr	r3, [r0, #4]
   296ac:	e3530000 	cmp	r3, #0
   296b0:	0a000001 	beq	296bc <CDWHCITransferStageData::GetURB() const+0x14>
   296b4:	e1a00003 	mov	r0, r3
   296b8:	e12fff1e 	bx	lr
   296bc:	e92d4010 	push	{r4, lr}
   296c0:	e1a04000 	mov	r4, r0
   296c4:	e59f2014 	ldr	r2, [pc, #20]	; 296e0 <CDWHCITransferStageData::GetURB() const+0x38>
   296c8:	e59f1014 	ldr	r1, [pc, #20]	; 296e4 <CDWHCITransferStageData::GetURB() const+0x3c>
   296cc:	e59f0014 	ldr	r0, [pc, #20]	; 296e8 <CDWHCITransferStageData::GetURB() const+0x40>
   296d0:	eb00362a 	bl	36f80 <assertion_failed>
   296d4:	e5943004 	ldr	r3, [r4, #4]
   296d8:	e1a00003 	mov	r0, r3
   296dc:	e8bd8010 	pop	{r4, pc}
   296e0:	000001af 	.word	0x000001af
   296e4:	0004a68c 	.word	0x0004a68c
   296e8:	0004a750 	.word	0x0004a750

000296ec <CDWHCITransferStageData::GetFrameScheduler() const>:
   296ec:	e5900050 	ldr	r0, [r0, #80]	; 0x50
   296f0:	e12fff1e 	bx	lr

000296f4 <CUSBDevice::~CUSBDevice()>:
   296f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   296f8:	e1a04000 	mov	r4, r0
   296fc:	e1a07000 	mov	r7, r0
   29700:	e3a06000 	mov	r6, #0
   29704:	e59f3098 	ldr	r3, [pc, #152]	; 297a4 <CUSBDevice::~CUSBDevice()+0xb0>
   29708:	e2805048 	add	r5, r0, #72	; 0x48
   2970c:	e4843020 	str	r3, [r4], #32
   29710:	e5b40004 	ldr	r0, [r4, #4]!
   29714:	e3500000 	cmp	r0, #0
   29718:	0a000002 	beq	29728 <CUSBDevice::~CUSBDevice()+0x34>
   2971c:	e5903000 	ldr	r3, [r0]
   29720:	e5933004 	ldr	r3, [r3, #4]
   29724:	e12fff33 	blx	r3
   29728:	e1540005 	cmp	r4, r5
   2972c:	e5846000 	str	r6, [r4]
   29730:	1afffff6 	bne	29710 <CUSBDevice::~CUSBDevice()+0x1c>
   29734:	e5974020 	ldr	r4, [r7, #32]
   29738:	e3540000 	cmp	r4, #0
   2973c:	0a000004 	beq	29754 <CUSBDevice::~CUSBDevice()+0x60>
   29740:	e1a00004 	mov	r0, r4
   29744:	eb001b3e 	bl	30444 <CUSBConfigurationParser::~CUSBConfigurationParser()>
   29748:	e1a00004 	mov	r0, r4
   2974c:	e3a0101c 	mov	r1, #28
   29750:	eb002af4 	bl	34328 <operator delete(void*, unsigned int)>
   29754:	e3a04000 	mov	r4, #0
   29758:	e3a01009 	mov	r1, #9
   2975c:	e597001c 	ldr	r0, [r7, #28]
   29760:	e5874020 	str	r4, [r7, #32]
   29764:	eb002aef 	bl	34328 <operator delete(void*, unsigned int)>
   29768:	e587401c 	str	r4, [r7, #28]
   2976c:	e3a01012 	mov	r1, #18
   29770:	e5970018 	ldr	r0, [r7, #24]
   29774:	eb002aeb 	bl	34328 <operator delete(void*, unsigned int)>
   29778:	e597500c 	ldr	r5, [r7, #12]
   2977c:	e5874018 	str	r4, [r7, #24]
   29780:	e1550004 	cmp	r5, r4
   29784:	0a000004 	beq	2979c <CUSBDevice::~CUSBDevice()+0xa8>
   29788:	e1a00005 	mov	r0, r5
   2978c:	eb000431 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   29790:	e1a00005 	mov	r0, r5
   29794:	e3a01018 	mov	r1, #24
   29798:	eb002ae2 	bl	34328 <operator delete(void*, unsigned int)>
   2979c:	e1a00007 	mov	r0, r7
   297a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   297a4:	0004a7e0 	.word	0x0004a7e0

000297a8 <CUSBDevice::~CUSBDevice()>:
   297a8:	e92d4010 	push	{r4, lr}
   297ac:	e1a04000 	mov	r4, r0
   297b0:	ebffffcf 	bl	296f4 <CUSBDevice::~CUSBDevice()>
   297b4:	e1a00004 	mov	r0, r4
   297b8:	e3a0104c 	mov	r1, #76	; 0x4c
   297bc:	eb002ad9 	bl	34328 <operator delete(void*, unsigned int)>
   297c0:	e1a00004 	mov	r0, r4
   297c4:	e8bd8010 	pop	{r4, pc}

000297c8 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)>:
   297c8:	e92d4070 	push	{r4, r5, r6, lr}
   297cc:	e1a04000 	mov	r4, r0
   297d0:	e3a00000 	mov	r0, #0
   297d4:	e59fc0bc 	ldr	ip, [pc, #188]	; 29898 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0xd0>
   297d8:	e1510000 	cmp	r1, r0
   297dc:	e5841004 	str	r1, [r4, #4]
   297e0:	e5dd5014 	ldrb	r5, [sp, #20]
   297e4:	e5dd1010 	ldrb	r1, [sp, #16]
   297e8:	e5c42009 	strb	r2, [r4, #9]
   297ec:	e5843010 	str	r3, [r4, #16]
   297f0:	e584c000 	str	ip, [r4]
   297f4:	e5c41014 	strb	r1, [r4, #20]
   297f8:	e5c40008 	strb	r0, [r4, #8]
   297fc:	e584000c 	str	r0, [r4, #12]
   29800:	e5840018 	str	r0, [r4, #24]
   29804:	e584001c 	str	r0, [r4, #28]
   29808:	e5840020 	str	r0, [r4, #32]
   2980c:	e5c45015 	strb	r5, [r4, #21]
   29810:	0a000014 	beq	29868 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0xa0>
   29814:	e3a00018 	mov	r0, #24
   29818:	eb002abe 	bl	34318 <operator new(unsigned int)>
   2981c:	e1a06000 	mov	r6, r0
   29820:	e1a01004 	mov	r1, r4
   29824:	eb000364 	bl	2a5bc <CUSBEndpoint::CUSBEndpoint(CUSBDevice*)>
   29828:	e3550000 	cmp	r5, #0
   2982c:	e584600c 	str	r6, [r4, #12]
   29830:	0a000007 	beq	29854 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0x8c>
   29834:	e3a01000 	mov	r1, #0
   29838:	e2843020 	add	r3, r4, #32
   2983c:	e2842048 	add	r2, r4, #72	; 0x48
   29840:	e5a31004 	str	r1, [r3, #4]!
   29844:	e1530002 	cmp	r3, r2
   29848:	1afffffc 	bne	29840 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0x78>
   2984c:	e1a00004 	mov	r0, r4
   29850:	e8bd8070 	pop	{r4, r5, r6, pc}
   29854:	e3a02037 	mov	r2, #55	; 0x37
   29858:	e59f103c 	ldr	r1, [pc, #60]	; 2989c <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0xd4>
   2985c:	e59f003c 	ldr	r0, [pc, #60]	; 298a0 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0xd8>
   29860:	eb0035c6 	bl	36f80 <assertion_failed>
   29864:	eafffff2 	b	29834 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0x6c>
   29868:	e3a02031 	mov	r2, #49	; 0x31
   2986c:	e59f1028 	ldr	r1, [pc, #40]	; 2989c <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0xd4>
   29870:	e59f002c 	ldr	r0, [pc, #44]	; 298a4 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0xdc>
   29874:	eb0035c1 	bl	36f80 <assertion_failed>
   29878:	e594300c 	ldr	r3, [r4, #12]
   2987c:	e3530000 	cmp	r3, #0
   29880:	0affffe3 	beq	29814 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0x4c>
   29884:	e3a02033 	mov	r2, #51	; 0x33
   29888:	e59f100c 	ldr	r1, [pc, #12]	; 2989c <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0xd4>
   2988c:	e59f0014 	ldr	r0, [pc, #20]	; 298a8 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0xe0>
   29890:	eb0035ba 	bl	36f80 <assertion_failed>
   29894:	eaffffde 	b	29814 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)+0x4c>
   29898:	0004a7e0 	.word	0x0004a7e0
   2989c:	0004a7f8 	.word	0x0004a7f8
   298a0:	0004a82c 	.word	0x0004a82c
   298a4:	0004a808 	.word	0x0004a808
   298a8:	0004a818 	.word	0x0004a818

000298ac <CUSBDevice::GetName(TDeviceNameSelector) const>:
   298ac:	e92d4070 	push	{r4, r5, r6, lr}
   298b0:	e1a06000 	mov	r6, r0
   298b4:	e24dd008 	sub	sp, sp, #8
   298b8:	e3a00010 	mov	r0, #16
   298bc:	e1a05001 	mov	r5, r1
   298c0:	eb002a94 	bl	34318 <operator new(unsigned int)>
   298c4:	e1a04000 	mov	r4, r0
   298c8:	eb003ac1 	bl	383d4 <CString::CString()>
   298cc:	e3550000 	cmp	r5, #0
   298d0:	0a00001a 	beq	29940 <CUSBDevice::GetName(TDeviceNameSelector) const+0x94>
   298d4:	e3550001 	cmp	r5, #1
   298d8:	0a000009 	beq	29904 <CUSBDevice::GetName(TDeviceNameSelector) const+0x58>
   298dc:	e59f20c8 	ldr	r2, [pc, #200]	; 299ac <CUSBDevice::GetName(TDeviceNameSelector) const+0x100>
   298e0:	e59f10c8 	ldr	r1, [pc, #200]	; 299b0 <CUSBDevice::GetName(TDeviceNameSelector) const+0x104>
   298e4:	e59f00c8 	ldr	r0, [pc, #200]	; 299b4 <CUSBDevice::GetName(TDeviceNameSelector) const+0x108>
   298e8:	eb0035a4 	bl	36f80 <assertion_failed>
   298ec:	e59f10c4 	ldr	r1, [pc, #196]	; 299b8 <CUSBDevice::GetName(TDeviceNameSelector) const+0x10c>
   298f0:	e1a00004 	mov	r0, r4
   298f4:	eb003ad2 	bl	38444 <CString::operator=(char const*)>
   298f8:	e1a00004 	mov	r0, r4
   298fc:	e28dd008 	add	sp, sp, #8
   29900:	e8bd8070 	pop	{r4, r5, r6, pc}
   29904:	e5961018 	ldr	r1, [r6, #24]
   29908:	e3510000 	cmp	r1, #0
   2990c:	0a000020 	beq	29994 <CUSBDevice::GetName(TDeviceNameSelector) const+0xe8>
   29910:	e5d12004 	ldrb	r2, [r1, #4]
   29914:	e2423001 	sub	r3, r2, #1
   29918:	e6ef3073 	uxtb	r3, r3
   2991c:	e35300fd 	cmp	r3, #253	; 0xfd
   29920:	8afffff1 	bhi	298ec <CUSBDevice::GetName(TDeviceNameSelector) const+0x40>
   29924:	e5d13005 	ldrb	r3, [r1, #5]
   29928:	e5d11006 	ldrb	r1, [r1, #6]
   2992c:	e1a00004 	mov	r0, r4
   29930:	e58d1000 	str	r1, [sp]
   29934:	e59f1080 	ldr	r1, [pc, #128]	; 299bc <CUSBDevice::GetName(TDeviceNameSelector) const+0x110>
   29938:	eb003e2d 	bl	391f4 <CString::Format(char const*, ...)>
   2993c:	eaffffed 	b	298f8 <CUSBDevice::GetName(TDeviceNameSelector) const+0x4c>
   29940:	e5961018 	ldr	r1, [r6, #24]
   29944:	e3510000 	cmp	r1, #0
   29948:	0a00000b 	beq	2997c <CUSBDevice::GetName(TDeviceNameSelector) const+0xd0>
   2994c:	e5d1000b 	ldrb	r0, [r1, #11]
   29950:	e5d1300a 	ldrb	r3, [r1, #10]
   29954:	e5d12008 	ldrb	r2, [r1, #8]
   29958:	e5d11009 	ldrb	r1, [r1, #9]
   2995c:	e1833400 	orr	r3, r3, r0, lsl #8
   29960:	e1822401 	orr	r2, r2, r1, lsl #8
   29964:	e1a00004 	mov	r0, r4
   29968:	e59f1050 	ldr	r1, [pc, #80]	; 299c0 <CUSBDevice::GetName(TDeviceNameSelector) const+0x114>
   2996c:	eb003e20 	bl	391f4 <CString::Format(char const*, ...)>
   29970:	e1a00004 	mov	r0, r4
   29974:	e28dd008 	add	sp, sp, #8
   29978:	e8bd8070 	pop	{r4, r5, r6, pc}
   2997c:	e59f102c 	ldr	r1, [pc, #44]	; 299b0 <CUSBDevice::GetName(TDeviceNameSelector) const+0x104>
   29980:	e59f203c 	ldr	r2, [pc, #60]	; 299c4 <CUSBDevice::GetName(TDeviceNameSelector) const+0x118>
   29984:	e59f003c 	ldr	r0, [pc, #60]	; 299c8 <CUSBDevice::GetName(TDeviceNameSelector) const+0x11c>
   29988:	eb00357c 	bl	36f80 <assertion_failed>
   2998c:	e5961018 	ldr	r1, [r6, #24]
   29990:	eaffffed 	b	2994c <CUSBDevice::GetName(TDeviceNameSelector) const+0xa0>
   29994:	e59f1014 	ldr	r1, [pc, #20]	; 299b0 <CUSBDevice::GetName(TDeviceNameSelector) const+0x104>
   29998:	e3a02f65 	mov	r2, #404	; 0x194
   2999c:	e59f0024 	ldr	r0, [pc, #36]	; 299c8 <CUSBDevice::GetName(TDeviceNameSelector) const+0x11c>
   299a0:	eb003576 	bl	36f80 <assertion_failed>
   299a4:	e5961018 	ldr	r1, [r6, #24]
   299a8:	eaffffd8 	b	29910 <CUSBDevice::GetName(TDeviceNameSelector) const+0x64>
   299ac:	000001a1 	.word	0x000001a1
   299b0:	0004a7f8 	.word	0x0004a7f8
   299b4:	0004a8b8 	.word	0x0004a8b8
   299b8:	0004a870 	.word	0x0004a870
   299bc:	0004a864 	.word	0x0004a864
   299c0:	0004a858 	.word	0x0004a858
   299c4:	0000018d 	.word	0x0000018d
   299c8:	0004a844 	.word	0x0004a844

000299cc <CUSBDevice::GetNames() const>:
   299cc:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   299d0:	e1a08000 	mov	r8, r0
   299d4:	e3a00010 	mov	r0, #16
   299d8:	eb002a4e 	bl	34318 <operator new(unsigned int)>
   299dc:	e3a04000 	mov	r4, #0
   299e0:	e1a06000 	mov	r6, r0
   299e4:	eb003a7a 	bl	383d4 <CString::CString()>
   299e8:	e59f70fc 	ldr	r7, [pc, #252]	; 29aec <CUSBDevice::GetNames() const+0x120>
   299ec:	e59f90fc 	ldr	r9, [pc, #252]	; 29af0 <CUSBDevice::GetNames() const+0x124>
   299f0:	e59fb0fc 	ldr	fp, [pc, #252]	; 29af4 <CUSBDevice::GetNames() const+0x128>
   299f4:	e59fa0fc 	ldr	sl, [pc, #252]	; 29af8 <CUSBDevice::GetNames() const+0x12c>
   299f8:	e1a01004 	mov	r1, r4
   299fc:	e1a00008 	mov	r0, r8
   29a00:	ebffffa9 	bl	298ac <CUSBDevice::GetName(TDeviceNameSelector) const>
   29a04:	e2505000 	subs	r5, r0, #0
   29a08:	0a000021 	beq	29a94 <CUSBDevice::GetNames() const+0xc8>
   29a0c:	e1a01007 	mov	r1, r7
   29a10:	eb003ac1 	bl	3851c <CString::Compare(char const*) const>
   29a14:	e3500000 	cmp	r0, #0
   29a18:	1a000010 	bne	29a60 <CUSBDevice::GetNames() const+0x94>
   29a1c:	e5953000 	ldr	r3, [r5]
   29a20:	e1a00005 	mov	r0, r5
   29a24:	e5933004 	ldr	r3, [r3, #4]
   29a28:	e12fff33 	blx	r3
   29a2c:	e3540001 	cmp	r4, #1
   29a30:	1a000008 	bne	29a58 <CUSBDevice::GetNames() const+0x8c>
   29a34:	e1a00006 	mov	r0, r6
   29a38:	eb003a92 	bl	38488 <CString::GetLength() const>
   29a3c:	e3500000 	cmp	r0, #0
   29a40:	1a000002 	bne	29a50 <CUSBDevice::GetNames() const+0x84>
   29a44:	e59f10a0 	ldr	r1, [pc, #160]	; 29aec <CUSBDevice::GetNames() const+0x120>
   29a48:	e1a00006 	mov	r0, r6
   29a4c:	eb003a7c 	bl	38444 <CString::operator=(char const*)>
   29a50:	e1a00006 	mov	r0, r6
   29a54:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29a58:	e3a04001 	mov	r4, #1
   29a5c:	eaffffe5 	b	299f8 <CUSBDevice::GetNames() const+0x2c>
   29a60:	e1a00006 	mov	r0, r6
   29a64:	eb003a87 	bl	38488 <CString::GetLength() const>
   29a68:	e3500000 	cmp	r0, #0
   29a6c:	0a000002 	beq	29a7c <CUSBDevice::GetNames() const+0xb0>
   29a70:	e1a01009 	mov	r1, r9
   29a74:	e1a00006 	mov	r0, r6
   29a78:	eb003a86 	bl	38498 <CString::Append(char const*)>
   29a7c:	e1a00005 	mov	r0, r5
   29a80:	eb003a69 	bl	3842c <CString::operator char const*() const>
   29a84:	e1a01000 	mov	r1, r0
   29a88:	e1a00006 	mov	r0, r6
   29a8c:	eb003a81 	bl	38498 <CString::Append(char const*)>
   29a90:	eaffffe1 	b	29a1c <CUSBDevice::GetNames() const+0x50>
   29a94:	e1a0200b 	mov	r2, fp
   29a98:	e1a0100a 	mov	r1, sl
   29a9c:	e59f0058 	ldr	r0, [pc, #88]	; 29afc <CUSBDevice::GetNames() const+0x130>
   29aa0:	eb003536 	bl	36f80 <assertion_failed>
   29aa4:	e1a01007 	mov	r1, r7
   29aa8:	e1a00005 	mov	r0, r5
   29aac:	eb003a9a 	bl	3851c <CString::Compare(char const*) const>
   29ab0:	e3500000 	cmp	r0, #0
   29ab4:	0affffdc 	beq	29a2c <CUSBDevice::GetNames() const+0x60>
   29ab8:	e1a00006 	mov	r0, r6
   29abc:	eb003a71 	bl	38488 <CString::GetLength() const>
   29ac0:	e3500000 	cmp	r0, #0
   29ac4:	0a000003 	beq	29ad8 <CUSBDevice::GetNames() const+0x10c>
   29ac8:	e1a00006 	mov	r0, r6
   29acc:	e1a01009 	mov	r1, r9
   29ad0:	eb003a70 	bl	38498 <CString::Append(char const*)>
   29ad4:	e1a00005 	mov	r0, r5
   29ad8:	eb003a53 	bl	3842c <CString::operator char const*() const>
   29adc:	e1a01000 	mov	r1, r0
   29ae0:	e1a00006 	mov	r0, r6
   29ae4:	eb003a6b 	bl	38498 <CString::Append(char const*)>
   29ae8:	eaffffcf 	b	29a2c <CUSBDevice::GetNames() const+0x60>
   29aec:	0004a870 	.word	0x0004a870
   29af0:	0004a884 	.word	0x0004a884
   29af4:	000001b2 	.word	0x000001b2
   29af8:	0004a7f8 	.word	0x0004a7f8
   29afc:	0004a878 	.word	0x0004a878

00029b00 <CUSBDevice::SetAddress(unsigned char)>:
   29b00:	e3110080 	tst	r1, #128	; 0x80
   29b04:	e92d4070 	push	{r4, r5, r6, lr}
   29b08:	e1a04001 	mov	r4, r1
   29b0c:	e1a05000 	mov	r5, r0
   29b10:	1a000001 	bne	29b1c <CUSBDevice::SetAddress(unsigned char)+0x1c>
   29b14:	e5c54008 	strb	r4, [r5, #8]
   29b18:	e8bd8070 	pop	{r4, r5, r6, pc}
   29b1c:	e59f2010 	ldr	r2, [pc, #16]	; 29b34 <CUSBDevice::SetAddress(unsigned char)+0x34>
   29b20:	e59f1010 	ldr	r1, [pc, #16]	; 29b38 <CUSBDevice::SetAddress(unsigned char)+0x38>
   29b24:	e59f0010 	ldr	r0, [pc, #16]	; 29b3c <CUSBDevice::SetAddress(unsigned char)+0x3c>
   29b28:	eb003514 	bl	36f80 <assertion_failed>
   29b2c:	e5c54008 	strb	r4, [r5, #8]
   29b30:	e8bd8070 	pop	{r4, r5, r6, pc}
   29b34:	000001cb 	.word	0x000001cb
   29b38:	0004a7f8 	.word	0x0004a7f8
   29b3c:	0004a888 	.word	0x0004a888

00029b40 <CUSBDevice::GetAddress() const>:
   29b40:	e5d00008 	ldrb	r0, [r0, #8]
   29b44:	e12fff1e 	bx	lr

00029b48 <CUSBDevice::GetSpeed() const>:
   29b48:	e5d00009 	ldrb	r0, [r0, #9]
   29b4c:	e12fff1e 	bx	lr

00029b50 <CUSBDevice::IsSplit() const>:
   29b50:	e5900010 	ldr	r0, [r0, #16]
   29b54:	e12fff1e 	bx	lr

00029b58 <CUSBDevice::GetHubAddress() const>:
   29b58:	e5d00014 	ldrb	r0, [r0, #20]
   29b5c:	e12fff1e 	bx	lr

00029b60 <CUSBDevice::GetHubPortNumber() const>:
   29b60:	e5d00015 	ldrb	r0, [r0, #21]
   29b64:	e12fff1e 	bx	lr

00029b68 <CUSBDevice::GetEndpoint0() const>:
   29b68:	e590300c 	ldr	r3, [r0, #12]
   29b6c:	e3530000 	cmp	r3, #0
   29b70:	0a000001 	beq	29b7c <CUSBDevice::GetEndpoint0() const+0x14>
   29b74:	e1a00003 	mov	r0, r3
   29b78:	e12fff1e 	bx	lr
   29b7c:	e92d4010 	push	{r4, lr}
   29b80:	e1a04000 	mov	r4, r0
   29b84:	e3a02f7b 	mov	r2, #492	; 0x1ec
   29b88:	e59f1010 	ldr	r1, [pc, #16]	; 29ba0 <CUSBDevice::GetEndpoint0() const+0x38>
   29b8c:	e59f0010 	ldr	r0, [pc, #16]	; 29ba4 <CUSBDevice::GetEndpoint0() const+0x3c>
   29b90:	eb0034fa 	bl	36f80 <assertion_failed>
   29b94:	e594300c 	ldr	r3, [r4, #12]
   29b98:	e1a00003 	mov	r0, r3
   29b9c:	e8bd8010 	pop	{r4, pc}
   29ba0:	0004a7f8 	.word	0x0004a7f8
   29ba4:	0004a8a8 	.word	0x0004a8a8

00029ba8 <CUSBDevice::GetHost() const>:
   29ba8:	e5903004 	ldr	r3, [r0, #4]
   29bac:	e3530000 	cmp	r3, #0
   29bb0:	0a000001 	beq	29bbc <CUSBDevice::GetHost() const+0x14>
   29bb4:	e1a00003 	mov	r0, r3
   29bb8:	e12fff1e 	bx	lr
   29bbc:	e92d4010 	push	{r4, lr}
   29bc0:	e1a04000 	mov	r4, r0
   29bc4:	e59f2014 	ldr	r2, [pc, #20]	; 29be0 <CUSBDevice::GetHost() const+0x38>
   29bc8:	e59f1014 	ldr	r1, [pc, #20]	; 29be4 <CUSBDevice::GetHost() const+0x3c>
   29bcc:	e59f0014 	ldr	r0, [pc, #20]	; 29be8 <CUSBDevice::GetHost() const+0x40>
   29bd0:	eb0034ea 	bl	36f80 <assertion_failed>
   29bd4:	e5943004 	ldr	r3, [r4, #4]
   29bd8:	e1a00003 	mov	r0, r3
   29bdc:	e8bd8010 	pop	{r4, pc}
   29be0:	000001f2 	.word	0x000001f2
   29be4:	0004a7f8 	.word	0x0004a7f8
   29be8:	0004a808 	.word	0x0004a808

00029bec <CUSBDevice::GetDeviceDescriptor() const>:
   29bec:	e5903018 	ldr	r3, [r0, #24]
   29bf0:	e3530000 	cmp	r3, #0
   29bf4:	0a000001 	beq	29c00 <CUSBDevice::GetDeviceDescriptor() const+0x14>
   29bf8:	e1a00003 	mov	r0, r3
   29bfc:	e12fff1e 	bx	lr
   29c00:	e92d4010 	push	{r4, lr}
   29c04:	e1a04000 	mov	r4, r0
   29c08:	e3a02f7e 	mov	r2, #504	; 0x1f8
   29c0c:	e59f1010 	ldr	r1, [pc, #16]	; 29c24 <CUSBDevice::GetDeviceDescriptor() const+0x38>
   29c10:	e59f0010 	ldr	r0, [pc, #16]	; 29c28 <CUSBDevice::GetDeviceDescriptor() const+0x3c>
   29c14:	eb0034d9 	bl	36f80 <assertion_failed>
   29c18:	e5943018 	ldr	r3, [r4, #24]
   29c1c:	e1a00003 	mov	r0, r3
   29c20:	e8bd8010 	pop	{r4, pc}
   29c24:	0004a7f8 	.word	0x0004a7f8
   29c28:	0004a844 	.word	0x0004a844

00029c2c <CUSBDevice::GetConfigurationDescriptor() const>:
   29c2c:	e590301c 	ldr	r3, [r0, #28]
   29c30:	e3530000 	cmp	r3, #0
   29c34:	0a000001 	beq	29c40 <CUSBDevice::GetConfigurationDescriptor() const+0x14>
   29c38:	e1a00003 	mov	r0, r3
   29c3c:	e12fff1e 	bx	lr
   29c40:	e92d4010 	push	{r4, lr}
   29c44:	e1a04000 	mov	r4, r0
   29c48:	e59f2014 	ldr	r2, [pc, #20]	; 29c64 <CUSBDevice::GetConfigurationDescriptor() const+0x38>
   29c4c:	e59f1014 	ldr	r1, [pc, #20]	; 29c68 <CUSBDevice::GetConfigurationDescriptor() const+0x3c>
   29c50:	e59f0014 	ldr	r0, [pc, #20]	; 29c6c <CUSBDevice::GetConfigurationDescriptor() const+0x40>
   29c54:	eb0034c9 	bl	36f80 <assertion_failed>
   29c58:	e594301c 	ldr	r3, [r4, #28]
   29c5c:	e1a00003 	mov	r0, r3
   29c60:	e8bd8010 	pop	{r4, pc}
   29c64:	000001fe 	.word	0x000001fe
   29c68:	0004a7f8 	.word	0x0004a7f8
   29c6c:	0004a8bc 	.word	0x0004a8bc

00029c70 <CUSBDevice::GetDescriptor(unsigned char)>:
   29c70:	e92d4070 	push	{r4, r5, r6, lr}
   29c74:	e1a04000 	mov	r4, r0
   29c78:	e5900020 	ldr	r0, [r0, #32]
   29c7c:	e1a05001 	mov	r5, r1
   29c80:	e3500000 	cmp	r0, #0
   29c84:	0a000002 	beq	29c94 <CUSBDevice::GetDescriptor(unsigned char)+0x24>
   29c88:	e1a01005 	mov	r1, r5
   29c8c:	e8bd4070 	pop	{r4, r5, r6, lr}
   29c90:	ea0019ee 	b	30450 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   29c94:	e59f1018 	ldr	r1, [pc, #24]	; 29cb4 <CUSBDevice::GetDescriptor(unsigned char)+0x44>
   29c98:	e59f0018 	ldr	r0, [pc, #24]	; 29cb8 <CUSBDevice::GetDescriptor(unsigned char)+0x48>
   29c9c:	e3a02f81 	mov	r2, #516	; 0x204
   29ca0:	eb0034b6 	bl	36f80 <assertion_failed>
   29ca4:	e5940020 	ldr	r0, [r4, #32]
   29ca8:	e1a01005 	mov	r1, r5
   29cac:	e8bd4070 	pop	{r4, r5, r6, lr}
   29cb0:	ea0019e6 	b	30450 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   29cb4:	0004a7f8 	.word	0x0004a7f8
   29cb8:	0004a8d0 	.word	0x0004a8d0

00029cbc <CUSBDevice::ConfigurationError(char const*) const>:
   29cbc:	e92d4070 	push	{r4, r5, r6, lr}
   29cc0:	e1a04000 	mov	r4, r0
   29cc4:	e5900020 	ldr	r0, [r0, #32]
   29cc8:	e1a05001 	mov	r5, r1
   29ccc:	e3500000 	cmp	r0, #0
   29cd0:	0a000002 	beq	29ce0 <CUSBDevice::ConfigurationError(char const*) const+0x24>
   29cd4:	e1a01005 	mov	r1, r5
   29cd8:	e8bd4070 	pop	{r4, r5, r6, lr}
   29cdc:	ea001a27 	b	30580 <CUSBConfigurationParser::Error(char const*) const>
   29ce0:	e59f1018 	ldr	r1, [pc, #24]	; 29d00 <CUSBDevice::ConfigurationError(char const*) const+0x44>
   29ce4:	e59f0018 	ldr	r0, [pc, #24]	; 29d04 <CUSBDevice::ConfigurationError(char const*) const+0x48>
   29ce8:	e59f2018 	ldr	r2, [pc, #24]	; 29d08 <CUSBDevice::ConfigurationError(char const*) const+0x4c>
   29cec:	eb0034a3 	bl	36f80 <assertion_failed>
   29cf0:	e5940020 	ldr	r0, [r4, #32]
   29cf4:	e1a01005 	mov	r1, r5
   29cf8:	e8bd4070 	pop	{r4, r5, r6, lr}
   29cfc:	ea001a1f 	b	30580 <CUSBConfigurationParser::Error(char const*) const>
   29d00:	0004a7f8 	.word	0x0004a7f8
   29d04:	0004a8d0 	.word	0x0004a8d0
   29d08:	0000020a 	.word	0x0000020a

00029d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>:
   29d0c:	e92d000c 	push	{r2, r3}
   29d10:	e92d4070 	push	{r4, r5, r6, lr}
   29d14:	e24dd020 	sub	sp, sp, #32
   29d18:	e59d4030 	ldr	r4, [sp, #48]	; 0x30
   29d1c:	e1a05000 	mov	r5, r0
   29d20:	e3540000 	cmp	r4, #0
   29d24:	e1a06001 	mov	r6, r1
   29d28:	0a00001b 	beq	29d9c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0x90>
   29d2c:	e28d0010 	add	r0, sp, #16
   29d30:	eb0039a7 	bl	383d4 <CString::CString()>
   29d34:	e5d52015 	ldrb	r2, [r5, #21]
   29d38:	e5d53014 	ldrb	r3, [r5, #20]
   29d3c:	e59f106c 	ldr	r1, [pc, #108]	; 29db0 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0xa4>
   29d40:	e28d0010 	add	r0, sp, #16
   29d44:	e58d2000 	str	r2, [sp]
   29d48:	e59f2064 	ldr	r2, [pc, #100]	; 29db4 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0xa8>
   29d4c:	eb003d28 	bl	391f4 <CString::Format(char const*, ...)>
   29d50:	e28d3034 	add	r3, sp, #52	; 0x34
   29d54:	e58d300c 	str	r3, [sp, #12]
   29d58:	eb003604 	bl	37570 <CLogger::Get()>
   29d5c:	e1a05000 	mov	r5, r0
   29d60:	e28d0010 	add	r0, sp, #16
   29d64:	eb0039b0 	bl	3842c <CString::operator char const*() const>
   29d68:	e59dc00c 	ldr	ip, [sp, #12]
   29d6c:	e1a01000 	mov	r1, r0
   29d70:	e1a03004 	mov	r3, r4
   29d74:	e1a00005 	mov	r0, r5
   29d78:	e1a02006 	mov	r2, r6
   29d7c:	e58dc000 	str	ip, [sp]
   29d80:	eb00365d 	bl	376fc <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)>
   29d84:	e28d0010 	add	r0, sp, #16
   29d88:	eb00395e 	bl	38308 <CString::~CString()>
   29d8c:	e28dd020 	add	sp, sp, #32
   29d90:	e8bd4070 	pop	{r4, r5, r6, lr}
   29d94:	e28dd008 	add	sp, sp, #8
   29d98:	e12fff1e 	bx	lr
   29d9c:	e3a02e21 	mov	r2, #528	; 0x210
   29da0:	e59f1010 	ldr	r1, [pc, #16]	; 29db8 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0xac>
   29da4:	e59f0010 	ldr	r0, [pc, #16]	; 29dbc <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0xb0>
   29da8:	eb003474 	bl	36f80 <assertion_failed>
   29dac:	eaffffde 	b	29d2c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0x20>
   29db0:	0004a8f8 	.word	0x0004a8f8
   29db4:	0004a7f0 	.word	0x0004a7f0
   29db8:	0004a7f8 	.word	0x0004a7f8
   29dbc:	0004a8e8 	.word	0x0004a8e8

00029dc0 <CUSBDevice::Initialize()>:
   29dc0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29dc4:	e5903018 	ldr	r3, [r0, #24]
   29dc8:	e24dd014 	sub	sp, sp, #20
   29dcc:	e3530000 	cmp	r3, #0
   29dd0:	e1a04000 	mov	r4, r0
   29dd4:	0a000003 	beq	29de8 <CUSBDevice::Initialize()+0x28>
   29dd8:	e3a02061 	mov	r2, #97	; 0x61
   29ddc:	e59f1654 	ldr	r1, [pc, #1620]	; 2a438 <CUSBDevice::Initialize()+0x678>
   29de0:	e59f0654 	ldr	r0, [pc, #1620]	; 2a43c <CUSBDevice::Initialize()+0x67c>
   29de4:	eb003465 	bl	36f80 <assertion_failed>
   29de8:	e3a00012 	mov	r0, #18
   29dec:	eb002949 	bl	34318 <operator new(unsigned int)>
   29df0:	e5943004 	ldr	r3, [r4, #4]
   29df4:	e5840018 	str	r0, [r4, #24]
   29df8:	e3530000 	cmp	r3, #0
   29dfc:	0a000034 	beq	29ed4 <CUSBDevice::Initialize()+0x114>
   29e00:	e594100c 	ldr	r1, [r4, #12]
   29e04:	e3510000 	cmp	r1, #0
   29e08:	0a00002b 	beq	29ebc <CUSBDevice::Initialize()+0xfc>
   29e0c:	e3a05000 	mov	r5, #0
   29e10:	e3a0c008 	mov	ip, #8
   29e14:	e3a06080 	mov	r6, #128	; 0x80
   29e18:	e5942018 	ldr	r2, [r4, #24]
   29e1c:	e5940004 	ldr	r0, [r4, #4]
   29e20:	e1a03005 	mov	r3, r5
   29e24:	e88d1004 	stm	sp, {r2, ip}
   29e28:	e58d500c 	str	r5, [sp, #12]
   29e2c:	e58d6008 	str	r6, [sp, #8]
   29e30:	e3a02001 	mov	r2, #1
   29e34:	eb00033c 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   29e38:	e3500008 	cmp	r0, #8
   29e3c:	1a000012 	bne	29e8c <CUSBDevice::Initialize()+0xcc>
   29e40:	e5943018 	ldr	r3, [r4, #24]
   29e44:	e5d37000 	ldrb	r7, [r3]
   29e48:	e3570012 	cmp	r7, #18
   29e4c:	1a000002 	bne	29e5c <CUSBDevice::Initialize()+0x9c>
   29e50:	e5d38001 	ldrb	r8, [r3, #1]
   29e54:	e3580001 	cmp	r8, #1
   29e58:	0a000022 	beq	29ee8 <CUSBDevice::Initialize()+0x128>
   29e5c:	e3a06000 	mov	r6, #0
   29e60:	e59f25d8 	ldr	r2, [pc, #1496]	; 2a440 <CUSBDevice::Initialize()+0x680>
   29e64:	e3a01001 	mov	r1, #1
   29e68:	e1a00004 	mov	r0, r4
   29e6c:	ebffffa6 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   29e70:	e3a01012 	mov	r1, #18
   29e74:	e5940018 	ldr	r0, [r4, #24]
   29e78:	eb00292a 	bl	34328 <operator delete(void*, unsigned int)>
   29e7c:	e5846018 	str	r6, [r4, #24]
   29e80:	e1a00006 	mov	r0, r6
   29e84:	e28dd014 	add	sp, sp, #20
   29e88:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29e8c:	e3a01001 	mov	r1, #1
   29e90:	e59f25ac 	ldr	r2, [pc, #1452]	; 2a444 <CUSBDevice::Initialize()+0x684>
   29e94:	e1a06005 	mov	r6, r5
   29e98:	e1a00004 	mov	r0, r4
   29e9c:	ebffff9a 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   29ea0:	e5940018 	ldr	r0, [r4, #24]
   29ea4:	e3a01012 	mov	r1, #18
   29ea8:	eb00291e 	bl	34328 <operator delete(void*, unsigned int)>
   29eac:	e1a00006 	mov	r0, r6
   29eb0:	e5845018 	str	r5, [r4, #24]
   29eb4:	e28dd014 	add	sp, sp, #20
   29eb8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ebc:	e59f1574 	ldr	r1, [pc, #1396]	; 2a438 <CUSBDevice::Initialize()+0x678>
   29ec0:	e3a02066 	mov	r2, #102	; 0x66
   29ec4:	e59f057c 	ldr	r0, [pc, #1404]	; 2a448 <CUSBDevice::Initialize()+0x688>
   29ec8:	eb00342c 	bl	36f80 <assertion_failed>
   29ecc:	e594100c 	ldr	r1, [r4, #12]
   29ed0:	eaffffcd 	b	29e0c <CUSBDevice::Initialize()+0x4c>
   29ed4:	e3a02065 	mov	r2, #101	; 0x65
   29ed8:	e59f1558 	ldr	r1, [pc, #1368]	; 2a438 <CUSBDevice::Initialize()+0x678>
   29edc:	e59f0568 	ldr	r0, [pc, #1384]	; 2a44c <CUSBDevice::Initialize()+0x68c>
   29ee0:	eb003426 	bl	36f80 <assertion_failed>
   29ee4:	eaffffc5 	b	29e00 <CUSBDevice::Initialize()+0x40>
   29ee8:	e5d31007 	ldrb	r1, [r3, #7]
   29eec:	e594000c 	ldr	r0, [r4, #12]
   29ef0:	eb00026f 	bl	2a8b4 <CUSBEndpoint::SetMaxPacketSize(unsigned int)>
   29ef4:	e5943018 	ldr	r3, [r4, #24]
   29ef8:	e594100c 	ldr	r1, [r4, #12]
   29efc:	e5940004 	ldr	r0, [r4, #4]
   29f00:	e1a02008 	mov	r2, r8
   29f04:	e88d0088 	stm	sp, {r3, r7}
   29f08:	e58d500c 	str	r5, [sp, #12]
   29f0c:	e58d6008 	str	r6, [sp, #8]
   29f10:	e1a03005 	mov	r3, r5
   29f14:	eb000304 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   29f18:	e3500012 	cmp	r0, #18
   29f1c:	1a000043 	bne	2a030 <CUSBDevice::Initialize()+0x270>
   29f20:	e59f3528 	ldr	r3, [pc, #1320]	; 2a450 <CUSBDevice::Initialize()+0x690>
   29f24:	e5d37000 	ldrb	r7, [r3]
   29f28:	e2872001 	add	r2, r7, #1
   29f2c:	e3170080 	tst	r7, #128	; 0x80
   29f30:	e5c32000 	strb	r2, [r3]
   29f34:	1a000040 	bne	2a03c <CUSBDevice::Initialize()+0x27c>
   29f38:	e1a02007 	mov	r2, r7
   29f3c:	e594100c 	ldr	r1, [r4, #12]
   29f40:	e5940004 	ldr	r0, [r4, #4]
   29f44:	eb000306 	bl	2ab64 <CUSBHostController::SetAddress(CUSBEndpoint*, unsigned char)>
   29f48:	e2506000 	subs	r6, r0, #0
   29f4c:	0a00004a 	beq	2a07c <CUSBDevice::Initialize()+0x2bc>
   29f50:	e594301c 	ldr	r3, [r4, #28]
   29f54:	e5c47008 	strb	r7, [r4, #8]
   29f58:	e3530000 	cmp	r3, #0
   29f5c:	0a000003 	beq	29f70 <CUSBDevice::Initialize()+0x1b0>
   29f60:	e3a020a5 	mov	r2, #165	; 0xa5
   29f64:	e59f14cc 	ldr	r1, [pc, #1228]	; 2a438 <CUSBDevice::Initialize()+0x678>
   29f68:	e59f04e4 	ldr	r0, [pc, #1252]	; 2a454 <CUSBDevice::Initialize()+0x694>
   29f6c:	eb003403 	bl	36f80 <assertion_failed>
   29f70:	e3a00009 	mov	r0, #9
   29f74:	eb0028e7 	bl	34318 <operator new(unsigned int)>
   29f78:	e5942018 	ldr	r2, [r4, #24]
   29f7c:	e584001c 	str	r0, [r4, #28]
   29f80:	e5d23008 	ldrb	r3, [r2, #8]
   29f84:	e5d2c009 	ldrb	ip, [r2, #9]
   29f88:	e59f14c8 	ldr	r1, [pc, #1224]	; 2a458 <CUSBDevice::Initialize()+0x698>
   29f8c:	e183340c 	orr	r3, r3, ip, lsl #8
   29f90:	e1530001 	cmp	r3, r1
   29f94:	05d2500a 	ldrbeq	r5, [r2, #10]
   29f98:	05d2200b 	ldrbeq	r2, [r2, #11]
   29f9c:	059f34b8 	ldreq	r3, [pc, #1208]	; 2a45c <CUSBDevice::Initialize()+0x69c>
   29fa0:	01855402 	orreq	r5, r5, r2, lsl #8
   29fa4:	00455003 	subeq	r5, r5, r3
   29fa8:	016f5f15 	clzeq	r5, r5
   29fac:	13a05000 	movne	r5, #0
   29fb0:	e3a06009 	mov	r6, #9
   29fb4:	e3a07000 	mov	r7, #0
   29fb8:	e3a08080 	mov	r8, #128	; 0x80
   29fbc:	e5943004 	ldr	r3, [r4, #4]
   29fc0:	01a052a5 	lsreq	r5, r5, #5
   29fc4:	e594100c 	ldr	r1, [r4, #12]
   29fc8:	e3a02002 	mov	r2, #2
   29fcc:	e58d0000 	str	r0, [sp]
   29fd0:	e58d700c 	str	r7, [sp, #12]
   29fd4:	e1a00003 	mov	r0, r3
   29fd8:	e98d0140 	stmib	sp, {r6, r8}
   29fdc:	e1a03005 	mov	r3, r5
   29fe0:	eb0002d1 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   29fe4:	e1500006 	cmp	r0, r6
   29fe8:	1a000019 	bne	2a054 <CUSBDevice::Initialize()+0x294>
   29fec:	e594001c 	ldr	r0, [r4, #28]
   29ff0:	e5d06000 	ldrb	r6, [r0]
   29ff4:	e3560009 	cmp	r6, #9
   29ff8:	1a000002 	bne	2a008 <CUSBDevice::Initialize()+0x248>
   29ffc:	e5d0a001 	ldrb	sl, [r0, #1]
   2a000:	e35a0002 	cmp	sl, #2
   2a004:	0a000022 	beq	2a094 <CUSBDevice::Initialize()+0x2d4>
   2a008:	e3a06000 	mov	r6, #0
   2a00c:	e59f244c 	ldr	r2, [pc, #1100]	; 2a460 <CUSBDevice::Initialize()+0x6a0>
   2a010:	e3a01001 	mov	r1, #1
   2a014:	e1a00004 	mov	r0, r4
   2a018:	ebffff3b 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a01c:	e3a01009 	mov	r1, #9
   2a020:	e594001c 	ldr	r0, [r4, #28]
   2a024:	eb0028bf 	bl	34328 <operator delete(void*, unsigned int)>
   2a028:	e584601c 	str	r6, [r4, #28]
   2a02c:	eaffff93 	b	29e80 <CUSBDevice::Initialize()+0xc0>
   2a030:	e1a01008 	mov	r1, r8
   2a034:	e59f2428 	ldr	r2, [pc, #1064]	; 2a464 <CUSBDevice::Initialize()+0x6a4>
   2a038:	eaffff95 	b	29e94 <CUSBDevice::Initialize()+0xd4>
   2a03c:	e1a01008 	mov	r1, r8
   2a040:	e1a00004 	mov	r0, r4
   2a044:	e59f241c 	ldr	r2, [pc, #1052]	; 2a468 <CUSBDevice::Initialize()+0x6a8>
   2a048:	e1a06005 	mov	r6, r5
   2a04c:	ebffff2e 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a050:	eaffff8a 	b	29e80 <CUSBDevice::Initialize()+0xc0>
   2a054:	e59f2410 	ldr	r2, [pc, #1040]	; 2a46c <CUSBDevice::Initialize()+0x6ac>
   2a058:	e3a01001 	mov	r1, #1
   2a05c:	e1a00004 	mov	r0, r4
   2a060:	ebffff29 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a064:	e1a01006 	mov	r1, r6
   2a068:	e594001c 	ldr	r0, [r4, #28]
   2a06c:	eb0028ad 	bl	34328 <operator delete(void*, unsigned int)>
   2a070:	e1a06007 	mov	r6, r7
   2a074:	e584701c 	str	r7, [r4, #28]
   2a078:	eaffff80 	b	29e80 <CUSBDevice::Initialize()+0xc0>
   2a07c:	e1a03007 	mov	r3, r7
   2a080:	e1a01008 	mov	r1, r8
   2a084:	e1a00004 	mov	r0, r4
   2a088:	e59f23e0 	ldr	r2, [pc, #992]	; 2a470 <CUSBDevice::Initialize()+0x6b0>
   2a08c:	ebffff1e 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a090:	eaffff7a 	b	29e80 <CUSBDevice::Initialize()+0xc0>
   2a094:	e5d09002 	ldrb	r9, [r0, #2]
   2a098:	e5d03003 	ldrb	r3, [r0, #3]
   2a09c:	e1899403 	orr	r9, r9, r3, lsl #8
   2a0a0:	e3590c02 	cmp	r9, #512	; 0x200
   2a0a4:	8affffd7 	bhi	2a008 <CUSBDevice::Initialize()+0x248>
   2a0a8:	e1a01006 	mov	r1, r6
   2a0ac:	eb00289d 	bl	34328 <operator delete(void*, unsigned int)>
   2a0b0:	e1a00009 	mov	r0, r9
   2a0b4:	eb002898 	bl	3431c <operator new[](unsigned int)>
   2a0b8:	e58d700c 	str	r7, [sp, #12]
   2a0bc:	e584001c 	str	r0, [r4, #28]
   2a0c0:	e58d0000 	str	r0, [sp]
   2a0c4:	e58d8008 	str	r8, [sp, #8]
   2a0c8:	e58d9004 	str	r9, [sp, #4]
   2a0cc:	e1a03005 	mov	r3, r5
   2a0d0:	e1a0200a 	mov	r2, sl
   2a0d4:	e594100c 	ldr	r1, [r4, #12]
   2a0d8:	e5940004 	ldr	r0, [r4, #4]
   2a0dc:	eb000292 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   2a0e0:	e1500009 	cmp	r0, r9
   2a0e4:	1a0000ae 	bne	2a3a4 <CUSBDevice::Initialize()+0x5e4>
   2a0e8:	e5943020 	ldr	r3, [r4, #32]
   2a0ec:	e3530000 	cmp	r3, #0
   2a0f0:	0a000003 	beq	2a104 <CUSBDevice::Initialize()+0x344>
   2a0f4:	e3a020e3 	mov	r2, #227	; 0xe3
   2a0f8:	e59f1338 	ldr	r1, [pc, #824]	; 2a438 <CUSBDevice::Initialize()+0x678>
   2a0fc:	e59f0370 	ldr	r0, [pc, #880]	; 2a474 <CUSBDevice::Initialize()+0x6b4>
   2a100:	eb00339e 	bl	36f80 <assertion_failed>
   2a104:	e3a0001c 	mov	r0, #28
   2a108:	eb002882 	bl	34318 <operator new(unsigned int)>
   2a10c:	e1a05000 	mov	r5, r0
   2a110:	e1a02009 	mov	r2, r9
   2a114:	e594101c 	ldr	r1, [r4, #28]
   2a118:	eb00185b 	bl	3028c <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)>
   2a11c:	e5845020 	str	r5, [r4, #32]
   2a120:	e1a00005 	mov	r0, r5
   2a124:	eb0018c7 	bl	30448 <CUSBConfigurationParser::IsValid() const>
   2a128:	e2506000 	subs	r6, r0, #0
   2a12c:	e1a00004 	mov	r0, r4
   2a130:	0a00009d 	beq	2a3ac <CUSBDevice::Initialize()+0x5ec>
   2a134:	ebfffe24 	bl	299cc <CUSBDevice::GetNames() const>
   2a138:	e2505000 	subs	r5, r0, #0
   2a13c:	0a0000b1 	beq	2a408 <CUSBDevice::Initialize()+0x648>
   2a140:	eb0038b9 	bl	3842c <CString::operator char const*() const>
   2a144:	e59f232c 	ldr	r2, [pc, #812]	; 2a478 <CUSBDevice::Initialize()+0x6b8>
   2a148:	e1a03000 	mov	r3, r0
   2a14c:	e3a01003 	mov	r1, #3
   2a150:	e1a00004 	mov	r0, r4
   2a154:	ebfffeec 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a158:	e5953000 	ldr	r3, [r5]
   2a15c:	e1a00005 	mov	r0, r5
   2a160:	e5933004 	ldr	r3, [r3, #4]
   2a164:	e12fff33 	blx	r3
   2a168:	e3a07000 	mov	r7, #0
   2a16c:	e1a06007 	mov	r6, r7
   2a170:	e59fb304 	ldr	fp, [pc, #772]	; 2a47c <CUSBDevice::Initialize()+0x6bc>
   2a174:	e59f9304 	ldr	r9, [pc, #772]	; 2a480 <CUSBDevice::Initialize()+0x6c0>
   2a178:	e59fa304 	ldr	sl, [pc, #772]	; 2a484 <CUSBDevice::Initialize()+0x6c4>
   2a17c:	e3a01004 	mov	r1, #4
   2a180:	e5940020 	ldr	r0, [r4, #32]
   2a184:	eb0018b1 	bl	30450 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   2a188:	e2505000 	subs	r5, r0, #0
   2a18c:	0a000089 	beq	2a3b8 <CUSBDevice::Initialize()+0x5f8>
   2a190:	e5d53002 	ldrb	r3, [r5, #2]
   2a194:	e1530007 	cmp	r3, r7
   2a198:	0a000002 	beq	2a1a8 <CUSBDevice::Initialize()+0x3e8>
   2a19c:	e2878001 	add	r8, r7, #1
   2a1a0:	e1530008 	cmp	r3, r8
   2a1a4:	1a000056 	bne	2a304 <CUSBDevice::Initialize()+0x544>
   2a1a8:	e5943020 	ldr	r3, [r4, #32]
   2a1ac:	e3530000 	cmp	r3, #0
   2a1b0:	0a00005c 	beq	2a328 <CUSBDevice::Initialize()+0x568>
   2a1b4:	e0845106 	add	r5, r4, r6, lsl #2
   2a1b8:	e5953024 	ldr	r3, [r5, #36]	; 0x24
   2a1bc:	e3530000 	cmp	r3, #0
   2a1c0:	0a000003 	beq	2a1d4 <CUSBDevice::Initialize()+0x414>
   2a1c4:	e3a02f45 	mov	r2, #276	; 0x114
   2a1c8:	e59f1268 	ldr	r1, [pc, #616]	; 2a438 <CUSBDevice::Initialize()+0x678>
   2a1cc:	e59f02b4 	ldr	r0, [pc, #692]	; 2a488 <CUSBDevice::Initialize()+0x6c8>
   2a1d0:	eb00336a 	bl	36f80 <assertion_failed>
   2a1d4:	e3a00010 	mov	r0, #16
   2a1d8:	eb00284e 	bl	34318 <operator new(unsigned int)>
   2a1dc:	e1a08000 	mov	r8, r0
   2a1e0:	e5942020 	ldr	r2, [r4, #32]
   2a1e4:	e1a01004 	mov	r1, r4
   2a1e8:	eb0010e3 	bl	2e57c <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)>
   2a1ec:	e5858024 	str	r8, [r5, #36]	; 0x24
   2a1f0:	e1a00008 	mov	r0, r8
   2a1f4:	eb0010c0 	bl	2e4fc <CUSBFunction::Initialize()>
   2a1f8:	e3500000 	cmp	r0, #0
   2a1fc:	0a00004e 	beq	2a33c <CUSBDevice::Initialize()+0x57c>
   2a200:	e3560000 	cmp	r6, #0
   2a204:	1a000019 	bne	2a270 <CUSBDevice::Initialize()+0x4b0>
   2a208:	e1a01006 	mov	r1, r6
   2a20c:	e1a00004 	mov	r0, r4
   2a210:	e5948024 	ldr	r8, [r4, #36]	; 0x24
   2a214:	ebfffda4 	bl	298ac <CUSBDevice::GetName(TDeviceNameSelector) const>
   2a218:	e1a01000 	mov	r1, r0
   2a21c:	e1a00008 	mov	r0, r8
   2a220:	eb000323 	bl	2aeb4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)>
   2a224:	e2508000 	subs	r8, r0, #0
   2a228:	0a000007 	beq	2a24c <CUSBDevice::Initialize()+0x48c>
   2a22c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   2a230:	e3500000 	cmp	r0, #0
   2a234:	1a000023 	bne	2a2c8 <CUSBDevice::Initialize()+0x508>
   2a238:	e3a06001 	mov	r6, #1
   2a23c:	e5848024 	str	r8, [r4, #36]	; 0x24
   2a240:	e2877001 	add	r7, r7, #1
   2a244:	e6ef7077 	uxtb	r7, r7
   2a248:	eaffffcb 	b	2a17c <CUSBDevice::Initialize()+0x3bc>
   2a24c:	e3a01001 	mov	r1, #1
   2a250:	e1a00004 	mov	r0, r4
   2a254:	e5948024 	ldr	r8, [r4, #36]	; 0x24
   2a258:	ebfffd93 	bl	298ac <CUSBDevice::GetName(TDeviceNameSelector) const>
   2a25c:	e1a01000 	mov	r1, r0
   2a260:	e1a00008 	mov	r0, r8
   2a264:	eb000312 	bl	2aeb4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)>
   2a268:	e2508000 	subs	r8, r0, #0
   2a26c:	1affffee 	bne	2a22c <CUSBDevice::Initialize()+0x46c>
   2a270:	e5950024 	ldr	r0, [r5, #36]	; 0x24
   2a274:	eb001130 	bl	2e73c <CUSBFunction::GetInterfaceName() const>
   2a278:	e2508000 	subs	r8, r0, #0
   2a27c:	0a000055 	beq	2a3d8 <CUSBDevice::Initialize()+0x618>
   2a280:	e1a01009 	mov	r1, r9
   2a284:	eb0038a4 	bl	3851c <CString::Compare(char const*) const>
   2a288:	e3500000 	cmp	r0, #0
   2a28c:	0a000037 	beq	2a370 <CUSBDevice::Initialize()+0x5b0>
   2a290:	e1a00008 	mov	r0, r8
   2a294:	eb003864 	bl	3842c <CString::operator char const*() const>
   2a298:	e1a0200a 	mov	r2, sl
   2a29c:	e1a03000 	mov	r3, r0
   2a2a0:	e3a01003 	mov	r1, #3
   2a2a4:	e1a00004 	mov	r0, r4
   2a2a8:	ebfffe97 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a2ac:	e1a01008 	mov	r1, r8
   2a2b0:	e5950024 	ldr	r0, [r5, #36]	; 0x24
   2a2b4:	eb0002fe 	bl	2aeb4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)>
   2a2b8:	e1a08000 	mov	r8, r0
   2a2bc:	e5950024 	ldr	r0, [r5, #36]	; 0x24
   2a2c0:	e3500000 	cmp	r0, #0
   2a2c4:	0a000002 	beq	2a2d4 <CUSBDevice::Initialize()+0x514>
   2a2c8:	e5903000 	ldr	r3, [r0]
   2a2cc:	e5933004 	ldr	r3, [r3, #4]
   2a2d0:	e12fff33 	blx	r3
   2a2d4:	e3580000 	cmp	r8, #0
   2a2d8:	0a000048 	beq	2a400 <CUSBDevice::Initialize()+0x640>
   2a2dc:	e2866001 	add	r6, r6, #1
   2a2e0:	e356000a 	cmp	r6, #10
   2a2e4:	e5858024 	str	r8, [r5, #36]	; 0x24
   2a2e8:	1affffd4 	bne	2a240 <CUSBDevice::Initialize()+0x480>
   2a2ec:	e1a00004 	mov	r0, r4
   2a2f0:	e59f2194 	ldr	r2, [pc, #404]	; 2a48c <CUSBDevice::Initialize()+0x6cc>
   2a2f4:	e3a01002 	mov	r1, #2
   2a2f8:	ebfffe83 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a2fc:	e3a06001 	mov	r6, #1
   2a300:	eafffede 	b	29e80 <CUSBDevice::Initialize()+0xc0>
   2a304:	e5d53003 	ldrb	r3, [r5, #3]
   2a308:	e59f2180 	ldr	r2, [pc, #384]	; 2a490 <CUSBDevice::Initialize()+0x6d0>
   2a30c:	e3a01004 	mov	r1, #4
   2a310:	e1a00004 	mov	r0, r4
   2a314:	ebfffe7c 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a318:	e5d53002 	ldrb	r3, [r5, #2]
   2a31c:	e1580003 	cmp	r8, r3
   2a320:	06ef7078 	uxtbeq	r7, r8
   2a324:	eaffff94 	b	2a17c <CUSBDevice::Initialize()+0x3bc>
   2a328:	e59f2164 	ldr	r2, [pc, #356]	; 2a494 <CUSBDevice::Initialize()+0x6d4>
   2a32c:	e59f1104 	ldr	r1, [pc, #260]	; 2a438 <CUSBDevice::Initialize()+0x678>
   2a330:	e59f0160 	ldr	r0, [pc, #352]	; 2a498 <CUSBDevice::Initialize()+0x6d8>
   2a334:	eb003311 	bl	36f80 <assertion_failed>
   2a338:	eaffff9d 	b	2a1b4 <CUSBDevice::Initialize()+0x3f4>
   2a33c:	e1a00004 	mov	r0, r4
   2a340:	e59f2154 	ldr	r2, [pc, #340]	; 2a49c <CUSBDevice::Initialize()+0x6dc>
   2a344:	e3a01001 	mov	r1, #1
   2a348:	ebfffe6f 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a34c:	e5950024 	ldr	r0, [r5, #36]	; 0x24
   2a350:	e3500000 	cmp	r0, #0
   2a354:	0a000002 	beq	2a364 <CUSBDevice::Initialize()+0x5a4>
   2a358:	e5903000 	ldr	r3, [r0]
   2a35c:	e5933004 	ldr	r3, [r3, #4]
   2a360:	e12fff33 	blx	r3
   2a364:	e3a03000 	mov	r3, #0
   2a368:	e5853024 	str	r3, [r5, #36]	; 0x24
   2a36c:	eaffff82 	b	2a17c <CUSBDevice::Initialize()+0x3bc>
   2a370:	e5983000 	ldr	r3, [r8]
   2a374:	e1a00008 	mov	r0, r8
   2a378:	e5933004 	ldr	r3, [r3, #4]
   2a37c:	e12fff33 	blx	r3
   2a380:	e5950024 	ldr	r0, [r5, #36]	; 0x24
   2a384:	e3500000 	cmp	r0, #0
   2a388:	13a08000 	movne	r8, #0
   2a38c:	1affffcd 	bne	2a2c8 <CUSBDevice::Initialize()+0x508>
   2a390:	e1a0200b 	mov	r2, fp
   2a394:	e3a01002 	mov	r1, #2
   2a398:	e1a00004 	mov	r0, r4
   2a39c:	ebfffe5a 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a3a0:	eaffff75 	b	2a17c <CUSBDevice::Initialize()+0x3bc>
   2a3a4:	e59f20f4 	ldr	r2, [pc, #244]	; 2a4a0 <CUSBDevice::Initialize()+0x6e0>
   2a3a8:	eaffff2a 	b	2a058 <CUSBDevice::Initialize()+0x298>
   2a3ac:	e59f10f0 	ldr	r1, [pc, #240]	; 2a4a4 <CUSBDevice::Initialize()+0x6e4>
   2a3b0:	ebfffe41 	bl	29cbc <CUSBDevice::ConfigurationError(char const*) const>
   2a3b4:	eafffeb1 	b	29e80 <CUSBDevice::Initialize()+0xc0>
   2a3b8:	e3560000 	cmp	r6, #0
   2a3bc:	13a06001 	movne	r6, #1
   2a3c0:	1afffeae 	bne	29e80 <CUSBDevice::Initialize()+0xc0>
   2a3c4:	e1a00004 	mov	r0, r4
   2a3c8:	e59f20d8 	ldr	r2, [pc, #216]	; 2a4a8 <CUSBDevice::Initialize()+0x6e8>
   2a3cc:	e3a01002 	mov	r1, #2
   2a3d0:	ebfffe4d 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a3d4:	eafffea9 	b	29e80 <CUSBDevice::Initialize()+0xc0>
   2a3d8:	e3a02e13 	mov	r2, #304	; 0x130
   2a3dc:	e59f1054 	ldr	r1, [pc, #84]	; 2a438 <CUSBDevice::Initialize()+0x678>
   2a3e0:	e59f00c4 	ldr	r0, [pc, #196]	; 2a4ac <CUSBDevice::Initialize()+0x6ec>
   2a3e4:	eb0032e5 	bl	36f80 <assertion_failed>
   2a3e8:	e1a01009 	mov	r1, r9
   2a3ec:	e1a00008 	mov	r0, r8
   2a3f0:	eb003849 	bl	3851c <CString::Compare(char const*) const>
   2a3f4:	e3500000 	cmp	r0, #0
   2a3f8:	0affffe0 	beq	2a380 <CUSBDevice::Initialize()+0x5c0>
   2a3fc:	eaffffa3 	b	2a290 <CUSBDevice::Initialize()+0x4d0>
   2a400:	e5858024 	str	r8, [r5, #36]	; 0x24
   2a404:	eaffffe1 	b	2a390 <CUSBDevice::Initialize()+0x5d0>
   2a408:	e3a020ef 	mov	r2, #239	; 0xef
   2a40c:	e59f1024 	ldr	r1, [pc, #36]	; 2a438 <CUSBDevice::Initialize()+0x678>
   2a410:	e59f0098 	ldr	r0, [pc, #152]	; 2a4b0 <CUSBDevice::Initialize()+0x6f0>
   2a414:	eb0032d9 	bl	36f80 <assertion_failed>
   2a418:	e1a00005 	mov	r0, r5
   2a41c:	eb003802 	bl	3842c <CString::operator char const*() const>
   2a420:	e59f2050 	ldr	r2, [pc, #80]	; 2a478 <CUSBDevice::Initialize()+0x6b8>
   2a424:	e1a03000 	mov	r3, r0
   2a428:	e3a01003 	mov	r1, #3
   2a42c:	e1a00004 	mov	r0, r4
   2a430:	ebfffe35 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a434:	eaffff4b 	b	2a168 <CUSBDevice::Initialize()+0x3a8>
   2a438:	0004a7f8 	.word	0x0004a7f8
   2a43c:	0004a900 	.word	0x0004a900
   2a440:	0004a93c 	.word	0x0004a93c
   2a444:	0004a914 	.word	0x0004a914
   2a448:	0004a8a8 	.word	0x0004a8a8
   2a44c:	0004a808 	.word	0x0004a808
   2a450:	00058ed0 	.word	0x00058ed0
   2a454:	0004a9a4 	.word	0x0004a9a4
   2a458:	00000525 	.word	0x00000525
   2a45c:	0000a4a2 	.word	0x0000a4a2
   2a460:	0004a9e4 	.word	0x0004a9e4
   2a464:	0004a958 	.word	0x0004a958
   2a468:	0004a978 	.word	0x0004a978
   2a46c:	0004a9b8 	.word	0x0004a9b8
   2a470:	0004a98c 	.word	0x0004a98c
   2a474:	0004aa2c 	.word	0x0004aa2c
   2a478:	0004aa50 	.word	0x0004aa50
   2a47c:	0004aacc 	.word	0x0004aacc
   2a480:	0004a870 	.word	0x0004a870
   2a484:	0004aab8 	.word	0x0004aab8
   2a488:	0004aa80 	.word	0x0004aa80
   2a48c:	0004aae8 	.word	0x0004aae8
   2a490:	0004aa60 	.word	0x0004aa60
   2a494:	00000113 	.word	0x00000113
   2a498:	0004a8d0 	.word	0x0004a8d0
   2a49c:	0004aa9c 	.word	0x0004aa9c
   2a4a0:	0004aa08 	.word	0x0004aa08
   2a4a4:	0004a7f0 	.word	0x0004a7f0
   2a4a8:	0004ab08 	.word	0x0004ab08
   2a4ac:	0004a878 	.word	0x0004a878
   2a4b0:	0004aa44 	.word	0x0004aa44

0002a4b4 <CUSBDevice::Configure()>:
   2a4b4:	e5903004 	ldr	r3, [r0, #4]
   2a4b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2a4bc:	e3530000 	cmp	r3, #0
   2a4c0:	e1a05000 	mov	r5, r0
   2a4c4:	0a00002b 	beq	2a578 <CUSBDevice::Configure()+0xc4>
   2a4c8:	e595300c 	ldr	r3, [r5, #12]
   2a4cc:	e3530000 	cmp	r3, #0
   2a4d0:	0a00002f 	beq	2a594 <CUSBDevice::Configure()+0xe0>
   2a4d4:	e595601c 	ldr	r6, [r5, #28]
   2a4d8:	e3560000 	cmp	r6, #0
   2a4dc:	0a00001b 	beq	2a550 <CUSBDevice::Configure()+0x9c>
   2a4e0:	e5d62005 	ldrb	r2, [r6, #5]
   2a4e4:	e595100c 	ldr	r1, [r5, #12]
   2a4e8:	e5950004 	ldr	r0, [r5, #4]
   2a4ec:	eb0001af 	bl	2abb0 <CUSBHostController::SetConfiguration(CUSBEndpoint*, unsigned char)>
   2a4f0:	e2506000 	subs	r6, r0, #0
   2a4f4:	0a000017 	beq	2a558 <CUSBDevice::Configure()+0xa4>
   2a4f8:	e3a06000 	mov	r6, #0
   2a4fc:	e1a07006 	mov	r7, r6
   2a500:	e2854020 	add	r4, r5, #32
   2a504:	e2855048 	add	r5, r5, #72	; 0x48
   2a508:	e5b40004 	ldr	r0, [r4, #4]!
   2a50c:	e3500000 	cmp	r0, #0
   2a510:	0a00000c 	beq	2a548 <CUSBDevice::Configure()+0x94>
   2a514:	e5903000 	ldr	r3, [r0]
   2a518:	e5933018 	ldr	r3, [r3, #24]
   2a51c:	e12fff33 	blx	r3
   2a520:	e3500000 	cmp	r0, #0
   2a524:	13a06001 	movne	r6, #1
   2a528:	1a000006 	bne	2a548 <CUSBDevice::Configure()+0x94>
   2a52c:	e5940000 	ldr	r0, [r4]
   2a530:	e3500000 	cmp	r0, #0
   2a534:	0a000002 	beq	2a544 <CUSBDevice::Configure()+0x90>
   2a538:	e5903000 	ldr	r3, [r0]
   2a53c:	e5933004 	ldr	r3, [r3, #4]
   2a540:	e12fff33 	blx	r3
   2a544:	e5847000 	str	r7, [r4]
   2a548:	e1540005 	cmp	r4, r5
   2a54c:	1affffed 	bne	2a508 <CUSBDevice::Configure()+0x54>
   2a550:	e1a00006 	mov	r0, r6
   2a554:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2a558:	e595301c 	ldr	r3, [r5, #28]
   2a55c:	e1a00005 	mov	r0, r5
   2a560:	e5d33005 	ldrb	r3, [r3, #5]
   2a564:	e59f203c 	ldr	r2, [pc, #60]	; 2a5a8 <CUSBDevice::Configure()+0xf4>
   2a568:	e3a01001 	mov	r1, #1
   2a56c:	ebfffde6 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2a570:	e1a00006 	mov	r0, r6
   2a574:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2a578:	e59f202c 	ldr	r2, [pc, #44]	; 2a5ac <CUSBDevice::Configure()+0xf8>
   2a57c:	e59f102c 	ldr	r1, [pc, #44]	; 2a5b0 <CUSBDevice::Configure()+0xfc>
   2a580:	e59f002c 	ldr	r0, [pc, #44]	; 2a5b4 <CUSBDevice::Configure()+0x100>
   2a584:	eb00327d 	bl	36f80 <assertion_failed>
   2a588:	e595300c 	ldr	r3, [r5, #12]
   2a58c:	e3530000 	cmp	r3, #0
   2a590:	1affffcf 	bne	2a4d4 <CUSBDevice::Configure()+0x20>
   2a594:	e3a02e16 	mov	r2, #352	; 0x160
   2a598:	e59f1010 	ldr	r1, [pc, #16]	; 2a5b0 <CUSBDevice::Configure()+0xfc>
   2a59c:	e59f0014 	ldr	r0, [pc, #20]	; 2a5b8 <CUSBDevice::Configure()+0x104>
   2a5a0:	eb003276 	bl	36f80 <assertion_failed>
   2a5a4:	eaffffca 	b	2a4d4 <CUSBDevice::Configure()+0x20>
   2a5a8:	0004ab2c 	.word	0x0004ab2c
   2a5ac:	0000015f 	.word	0x0000015f
   2a5b0:	0004a7f8 	.word	0x0004a7f8
   2a5b4:	0004a808 	.word	0x0004a808
   2a5b8:	0004a8a8 	.word	0x0004a8a8

0002a5bc <CUSBEndpoint::CUSBEndpoint(CUSBDevice*)>:
   2a5bc:	e3a03000 	mov	r3, #0
   2a5c0:	e92d4010 	push	{r4, lr}
   2a5c4:	e3a02001 	mov	r2, #1
   2a5c8:	e1a04000 	mov	r4, r0
   2a5cc:	e3a00008 	mov	r0, #8
   2a5d0:	e1510003 	cmp	r1, r3
   2a5d4:	e5841000 	str	r1, [r4]
   2a5d8:	e584000c 	str	r0, [r4, #12]
   2a5dc:	e5842010 	str	r2, [r4, #16]
   2a5e0:	e5c43004 	strb	r3, [r4, #4]
   2a5e4:	e5c43005 	strb	r3, [r4, #5]
   2a5e8:	e5843008 	str	r3, [r4, #8]
   2a5ec:	e5c43014 	strb	r3, [r4, #20]
   2a5f0:	0a000001 	beq	2a5fc <CUSBEndpoint::CUSBEndpoint(CUSBDevice*)+0x40>
   2a5f4:	e1a00004 	mov	r0, r4
   2a5f8:	e8bd8010 	pop	{r4, pc}
   2a5fc:	e3a02020 	mov	r2, #32
   2a600:	e59f100c 	ldr	r1, [pc, #12]	; 2a614 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*)+0x58>
   2a604:	e59f000c 	ldr	r0, [pc, #12]	; 2a618 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*)+0x5c>
   2a608:	eb00325c 	bl	36f80 <assertion_failed>
   2a60c:	e1a00004 	mov	r0, r4
   2a610:	e8bd8010 	pop	{r4, pc}
   2a614:	0004ab4c 	.word	0x0004ab4c
   2a618:	0004a75c 	.word	0x0004a75c

0002a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>:
   2a61c:	e3a03001 	mov	r3, #1
   2a620:	e3510000 	cmp	r1, #0
   2a624:	e92d4070 	push	{r4, r5, r6, lr}
   2a628:	e1a04000 	mov	r4, r0
   2a62c:	e5801000 	str	r1, [r0]
   2a630:	e1a05002 	mov	r5, r2
   2a634:	e5803010 	str	r3, [r0, #16]
   2a638:	0a000047 	beq	2a75c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x140>
   2a63c:	e3550000 	cmp	r5, #0
   2a640:	0a00004b 	beq	2a774 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x158>
   2a644:	e5d53000 	ldrb	r3, [r5]
   2a648:	e3530006 	cmp	r3, #6
   2a64c:	9a000036 	bls	2a72c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x110>
   2a650:	e5d53001 	ldrb	r3, [r5, #1]
   2a654:	e3530005 	cmp	r3, #5
   2a658:	0a000003 	beq	2a66c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x50>
   2a65c:	e3a0202b 	mov	r2, #43	; 0x2b
   2a660:	e59f114c 	ldr	r1, [pc, #332]	; 2a7b4 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x198>
   2a664:	e59f014c 	ldr	r0, [pc, #332]	; 2a7b8 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x19c>
   2a668:	eb003244 	bl	36f80 <assertion_failed>
   2a66c:	e5d53003 	ldrb	r3, [r5, #3]
   2a670:	e2033003 	and	r3, r3, #3
   2a674:	e3530002 	cmp	r3, #2
   2a678:	0a00001d 	beq	2a6f4 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0xd8>
   2a67c:	e3530003 	cmp	r3, #3
   2a680:	0a000005 	beq	2a69c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x80>
   2a684:	e3a0203a 	mov	r2, #58	; 0x3a
   2a688:	e59f1124 	ldr	r1, [pc, #292]	; 2a7b4 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x198>
   2a68c:	e59f0128 	ldr	r0, [pc, #296]	; 2a7bc <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x1a0>
   2a690:	eb00323a 	bl	36f80 <assertion_failed>
   2a694:	e1a00004 	mov	r0, r4
   2a698:	e8bd8070 	pop	{r4, r5, r6, pc}
   2a69c:	e3a03002 	mov	r3, #2
   2a6a0:	e3a06001 	mov	r6, #1
   2a6a4:	e5c43005 	strb	r3, [r4, #5]
   2a6a8:	e5c46014 	strb	r6, [r4, #20]
   2a6ac:	e5d53002 	ldrb	r3, [r5, #2]
   2a6b0:	e5940000 	ldr	r0, [r4]
   2a6b4:	e203200f 	and	r2, r3, #15
   2a6b8:	e1a033a3 	lsr	r3, r3, #7
   2a6bc:	e5c42004 	strb	r2, [r4, #4]
   2a6c0:	e5843008 	str	r3, [r4, #8]
   2a6c4:	e5d53004 	ldrb	r3, [r5, #4]
   2a6c8:	e5d52005 	ldrb	r2, [r5, #5]
   2a6cc:	e1833402 	orr	r3, r3, r2, lsl #8
   2a6d0:	e584300c 	str	r3, [r4, #12]
   2a6d4:	e5d55006 	ldrb	r5, [r5, #6]
   2a6d8:	e3550000 	cmp	r5, #0
   2a6dc:	1a000017 	bne	2a740 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x124>
   2a6e0:	ebfffd18 	bl	29b48 <CUSBDevice::GetSpeed() const>
   2a6e4:	e3a03014 	mov	r3, #20
   2a6e8:	e1a00004 	mov	r0, r4
   2a6ec:	e5843010 	str	r3, [r4, #16]
   2a6f0:	e8bd8070 	pop	{r4, r5, r6, pc}
   2a6f4:	e3a03001 	mov	r3, #1
   2a6f8:	e5c43005 	strb	r3, [r4, #5]
   2a6fc:	e5c43014 	strb	r3, [r4, #20]
   2a700:	e5d53002 	ldrb	r3, [r5, #2]
   2a704:	e1a00004 	mov	r0, r4
   2a708:	e203200f 	and	r2, r3, #15
   2a70c:	e1a033a3 	lsr	r3, r3, #7
   2a710:	e5c42004 	strb	r2, [r4, #4]
   2a714:	e5843008 	str	r3, [r4, #8]
   2a718:	e5d53004 	ldrb	r3, [r5, #4]
   2a71c:	e5d52005 	ldrb	r2, [r5, #5]
   2a720:	e1833402 	orr	r3, r3, r2, lsl #8
   2a724:	e584300c 	str	r3, [r4, #12]
   2a728:	e8bd8070 	pop	{r4, r5, r6, pc}
   2a72c:	e3a0202a 	mov	r2, #42	; 0x2a
   2a730:	e59f107c 	ldr	r1, [pc, #124]	; 2a7b4 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x198>
   2a734:	e59f0084 	ldr	r0, [pc, #132]	; 2a7c0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x1a4>
   2a738:	eb003210 	bl	36f80 <assertion_failed>
   2a73c:	eaffffc3 	b	2a650 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x34>
   2a740:	ebfffd00 	bl	29b48 <CUSBDevice::GetSpeed() const>
   2a744:	e3500002 	cmp	r0, #2
   2a748:	15845010 	strne	r5, [r4, #16]
   2a74c:	0a00000d 	beq	2a788 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x16c>
   2a750:	e3550013 	cmp	r5, #19
   2a754:	8affffce 	bhi	2a694 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x78>
   2a758:	eaffffe1 	b	2a6e4 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0xc8>
   2a75c:	e3a02027 	mov	r2, #39	; 0x27
   2a760:	e59f104c 	ldr	r1, [pc, #76]	; 2a7b4 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x198>
   2a764:	e59f0058 	ldr	r0, [pc, #88]	; 2a7c4 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x1a8>
   2a768:	eb003204 	bl	36f80 <assertion_failed>
   2a76c:	e3550000 	cmp	r5, #0
   2a770:	1affffb3 	bne	2a644 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x28>
   2a774:	e3a02029 	mov	r2, #41	; 0x29
   2a778:	e59f1034 	ldr	r1, [pc, #52]	; 2a7b4 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x198>
   2a77c:	e59f0044 	ldr	r0, [pc, #68]	; 2a7c8 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x1ac>
   2a780:	eb0031fe 	bl	36f80 <assertion_failed>
   2a784:	eaffffae 	b	2a644 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x28>
   2a788:	e3550010 	cmp	r5, #16
   2a78c:	83a03a01 	movhi	r3, #4096	; 0x1000
   2a790:	85843010 	strhi	r3, [r4, #16]
   2a794:	8affffbe 	bhi	2a694 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x78>
   2a798:	e2455001 	sub	r5, r5, #1
   2a79c:	e1a05516 	lsl	r5, r6, r5
   2a7a0:	e1a051a5 	lsr	r5, r5, #3
   2a7a4:	e3550000 	cmp	r5, #0
   2a7a8:	e5845010 	str	r5, [r4, #16]
   2a7ac:	0affffcc 	beq	2a6e4 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0xc8>
   2a7b0:	eaffffe6 	b	2a750 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x134>
   2a7b4:	0004ab4c 	.word	0x0004ab4c
   2a7b8:	0004ab88 	.word	0x0004ab88
   2a7bc:	0004a8b8 	.word	0x0004a8b8
   2a7c0:	0004ab68 	.word	0x0004ab68
   2a7c4:	0004a75c 	.word	0x0004a75c
   2a7c8:	0004ab5c 	.word	0x0004ab5c

0002a7cc <CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)>:
   2a7cc:	e92d4070 	push	{r4, r5, r6, lr}
   2a7d0:	e2515000 	subs	r5, r1, #0
   2a7d4:	e1a04000 	mov	r4, r0
   2a7d8:	e1a06002 	mov	r6, r2
   2a7dc:	0a000015 	beq	2a838 <CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)+0x6c>
   2a7e0:	e3560000 	cmp	r6, #0
   2a7e4:	e5846000 	str	r6, [r4]
   2a7e8:	0a00000d 	beq	2a824 <CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)+0x58>
   2a7ec:	e5d53004 	ldrb	r3, [r5, #4]
   2a7f0:	e1a00004 	mov	r0, r4
   2a7f4:	e5c43004 	strb	r3, [r4, #4]
   2a7f8:	e5d53005 	ldrb	r3, [r5, #5]
   2a7fc:	e595c008 	ldr	ip, [r5, #8]
   2a800:	e595100c 	ldr	r1, [r5, #12]
   2a804:	e5952010 	ldr	r2, [r5, #16]
   2a808:	e5c43005 	strb	r3, [r4, #5]
   2a80c:	e5d53014 	ldrb	r3, [r5, #20]
   2a810:	e584c008 	str	ip, [r4, #8]
   2a814:	e584100c 	str	r1, [r4, #12]
   2a818:	e5842010 	str	r2, [r4, #16]
   2a81c:	e5c43014 	strb	r3, [r4, #20]
   2a820:	e8bd8070 	pop	{r4, r5, r6, pc}
   2a824:	e3a0206d 	mov	r2, #109	; 0x6d
   2a828:	e59f101c 	ldr	r1, [pc, #28]	; 2a84c <CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)+0x80>
   2a82c:	e59f001c 	ldr	r0, [pc, #28]	; 2a850 <CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)+0x84>
   2a830:	eb0031d2 	bl	36f80 <assertion_failed>
   2a834:	eaffffec 	b	2a7ec <CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)+0x20>
   2a838:	e3a0206a 	mov	r2, #106	; 0x6a
   2a83c:	e59f1008 	ldr	r1, [pc, #8]	; 2a84c <CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)+0x80>
   2a840:	e59f000c 	ldr	r0, [pc, #12]	; 2a854 <CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)+0x88>
   2a844:	eb0031cd 	bl	36f80 <assertion_failed>
   2a848:	eaffffe4 	b	2a7e0 <CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)+0x14>
   2a84c:	0004ab4c 	.word	0x0004ab4c
   2a850:	0004a75c 	.word	0x0004a75c
   2a854:	0004abb8 	.word	0x0004abb8

0002a858 <CUSBEndpoint::~CUSBEndpoint()>:
   2a858:	e12fff1e 	bx	lr

0002a85c <CUSBEndpoint::GetDevice() const>:
   2a85c:	e5903000 	ldr	r3, [r0]
   2a860:	e3530000 	cmp	r3, #0
   2a864:	0a000001 	beq	2a870 <CUSBEndpoint::GetDevice() const+0x14>
   2a868:	e1a00003 	mov	r0, r3
   2a86c:	e12fff1e 	bx	lr
   2a870:	e92d4010 	push	{r4, lr}
   2a874:	e1a04000 	mov	r4, r0
   2a878:	e3a0207e 	mov	r2, #126	; 0x7e
   2a87c:	e59f1010 	ldr	r1, [pc, #16]	; 2a894 <CUSBEndpoint::GetDevice() const+0x38>
   2a880:	e59f0010 	ldr	r0, [pc, #16]	; 2a898 <CUSBEndpoint::GetDevice() const+0x3c>
   2a884:	eb0031bd 	bl	36f80 <assertion_failed>
   2a888:	e5943000 	ldr	r3, [r4]
   2a88c:	e1a00003 	mov	r0, r3
   2a890:	e8bd8010 	pop	{r4, pc}
   2a894:	0004ab4c 	.word	0x0004ab4c
   2a898:	0004a75c 	.word	0x0004a75c

0002a89c <CUSBEndpoint::GetNumber() const>:
   2a89c:	e5d00004 	ldrb	r0, [r0, #4]
   2a8a0:	e12fff1e 	bx	lr

0002a8a4 <CUSBEndpoint::GetType() const>:
   2a8a4:	e5d00005 	ldrb	r0, [r0, #5]
   2a8a8:	e12fff1e 	bx	lr

0002a8ac <CUSBEndpoint::IsDirectionIn() const>:
   2a8ac:	e5900008 	ldr	r0, [r0, #8]
   2a8b0:	e12fff1e 	bx	lr

0002a8b4 <CUSBEndpoint::SetMaxPacketSize(unsigned int)>:
   2a8b4:	e580100c 	str	r1, [r0, #12]
   2a8b8:	e12fff1e 	bx	lr

0002a8bc <CUSBEndpoint::GetMaxPacketSize() const>:
   2a8bc:	e590000c 	ldr	r0, [r0, #12]
   2a8c0:	e12fff1e 	bx	lr

0002a8c4 <CUSBEndpoint::GetInterval() const>:
   2a8c4:	e5d03005 	ldrb	r3, [r0, #5]
   2a8c8:	e92d4010 	push	{r4, lr}
   2a8cc:	e3530002 	cmp	r3, #2
   2a8d0:	e1a04000 	mov	r4, r0
   2a8d4:	0a000003 	beq	2a8e8 <CUSBEndpoint::GetInterval() const+0x24>
   2a8d8:	e3a0209d 	mov	r2, #157	; 0x9d
   2a8dc:	e59f100c 	ldr	r1, [pc, #12]	; 2a8f0 <CUSBEndpoint::GetInterval() const+0x2c>
   2a8e0:	e59f000c 	ldr	r0, [pc, #12]	; 2a8f4 <CUSBEndpoint::GetInterval() const+0x30>
   2a8e4:	eb0031a5 	bl	36f80 <assertion_failed>
   2a8e8:	e5940010 	ldr	r0, [r4, #16]
   2a8ec:	e8bd8010 	pop	{r4, pc}
   2a8f0:	0004ab4c 	.word	0x0004ab4c
   2a8f4:	0004abc8 	.word	0x0004abc8

0002a8f8 <CUSBEndpoint::GetNextPID(int)>:
   2a8f8:	e3510000 	cmp	r1, #0
   2a8fc:	0a000004 	beq	2a914 <CUSBEndpoint::GetNextPID(int)+0x1c>
   2a900:	e5d03005 	ldrb	r3, [r0, #5]
   2a904:	e3530000 	cmp	r3, #0
   2a908:	1a000003 	bne	2a91c <CUSBEndpoint::GetNextPID(int)+0x24>
   2a90c:	e3a00002 	mov	r0, #2
   2a910:	e12fff1e 	bx	lr
   2a914:	e5d00014 	ldrb	r0, [r0, #20]
   2a918:	e12fff1e 	bx	lr
   2a91c:	e92d4010 	push	{r4, lr}
   2a920:	e3a020a6 	mov	r2, #166	; 0xa6
   2a924:	e59f100c 	ldr	r1, [pc, #12]	; 2a938 <CUSBEndpoint::GetNextPID(int)+0x40>
   2a928:	e59f000c 	ldr	r0, [pc, #12]	; 2a93c <CUSBEndpoint::GetNextPID(int)+0x44>
   2a92c:	eb003193 	bl	36f80 <assertion_failed>
   2a930:	e3a00002 	mov	r0, #2
   2a934:	e8bd8010 	pop	{r4, pc}
   2a938:	0004ab4c 	.word	0x0004ab4c
   2a93c:	0004abe8 	.word	0x0004abe8

0002a940 <CUSBEndpoint::SkipPID(unsigned int, int)>:
   2a940:	e5d03005 	ldrb	r3, [r0, #5]
   2a944:	e92d4070 	push	{r4, r5, r6, lr}
   2a948:	e3530002 	cmp	r3, #2
   2a94c:	e1a04000 	mov	r4, r0
   2a950:	e1a06001 	mov	r6, r1
   2a954:	e1a05002 	mov	r5, r2
   2a958:	8a000011 	bhi	2a9a4 <CUSBEndpoint::SkipPID(unsigned int, int)+0x64>
   2a95c:	e3550000 	cmp	r5, #0
   2a960:	1a000009 	bne	2a98c <CUSBEndpoint::SkipPID(unsigned int, int)+0x4c>
   2a964:	e5d43014 	ldrb	r3, [r4, #20]
   2a968:	e3530001 	cmp	r3, #1
   2a96c:	0a00001b 	beq	2a9e0 <CUSBEndpoint::SkipPID(unsigned int, int)+0xa0>
   2a970:	3a00001c 	bcc	2a9e8 <CUSBEndpoint::SkipPID(unsigned int, int)+0xa8>
   2a974:	e3530002 	cmp	r3, #2
   2a978:	1a000013 	bne	2a9cc <CUSBEndpoint::SkipPID(unsigned int, int)+0x8c>
   2a97c:	e3160001 	tst	r6, #1
   2a980:	13a03001 	movne	r3, #1
   2a984:	15c43014 	strbne	r3, [r4, #20]
   2a988:	e8bd8070 	pop	{r4, r5, r6, pc}
   2a98c:	e5d43005 	ldrb	r3, [r4, #5]
   2a990:	e3530000 	cmp	r3, #0
   2a994:	1a000007 	bne	2a9b8 <CUSBEndpoint::SkipPID(unsigned int, int)+0x78>
   2a998:	e3a03000 	mov	r3, #0
   2a99c:	e5c43014 	strb	r3, [r4, #20]
   2a9a0:	e8bd8070 	pop	{r4, r5, r6, pc}
   2a9a4:	e3a020b2 	mov	r2, #178	; 0xb2
   2a9a8:	e59f1044 	ldr	r1, [pc, #68]	; 2a9f4 <CUSBEndpoint::SkipPID(unsigned int, int)+0xb4>
   2a9ac:	e59f0044 	ldr	r0, [pc, #68]	; 2a9f8 <CUSBEndpoint::SkipPID(unsigned int, int)+0xb8>
   2a9b0:	eb003172 	bl	36f80 <assertion_failed>
   2a9b4:	eaffffe8 	b	2a95c <CUSBEndpoint::SkipPID(unsigned int, int)+0x1c>
   2a9b8:	e3a020d1 	mov	r2, #209	; 0xd1
   2a9bc:	e59f1030 	ldr	r1, [pc, #48]	; 2a9f4 <CUSBEndpoint::SkipPID(unsigned int, int)+0xb4>
   2a9c0:	e59f0034 	ldr	r0, [pc, #52]	; 2a9fc <CUSBEndpoint::SkipPID(unsigned int, int)+0xbc>
   2a9c4:	eb00316d 	bl	36f80 <assertion_failed>
   2a9c8:	eafffff2 	b	2a998 <CUSBEndpoint::SkipPID(unsigned int, int)+0x58>
   2a9cc:	e3a020cb 	mov	r2, #203	; 0xcb
   2a9d0:	e8bd4070 	pop	{r4, r5, r6, lr}
   2a9d4:	e59f1018 	ldr	r1, [pc, #24]	; 2a9f4 <CUSBEndpoint::SkipPID(unsigned int, int)+0xb4>
   2a9d8:	e59f0020 	ldr	r0, [pc, #32]	; 2aa00 <CUSBEndpoint::SkipPID(unsigned int, int)+0xc0>
   2a9dc:	ea003167 	b	36f80 <assertion_failed>
   2a9e0:	e3160001 	tst	r6, #1
   2a9e4:	08bd8070 	popeq	{r4, r5, r6, pc}
   2a9e8:	e3a03002 	mov	r3, #2
   2a9ec:	e5c43014 	strb	r3, [r4, #20]
   2a9f0:	e8bd8070 	pop	{r4, r5, r6, pc}
   2a9f4:	0004ab4c 	.word	0x0004ab4c
   2a9f8:	0004ac08 	.word	0x0004ac08
   2a9fc:	0004abe8 	.word	0x0004abe8
   2aa00:	0004a8b8 	.word	0x0004a8b8

0002aa04 <CUSBEndpoint::ResetPID()>:
   2aa04:	e5d03005 	ldrb	r3, [r0, #5]
   2aa08:	e92d4010 	push	{r4, lr}
   2aa0c:	e3530001 	cmp	r3, #1
   2aa10:	e1a04000 	mov	r4, r0
   2aa14:	0a000003 	beq	2aa28 <CUSBEndpoint::ResetPID()+0x24>
   2aa18:	e3a020d9 	mov	r2, #217	; 0xd9
   2aa1c:	e59f1010 	ldr	r1, [pc, #16]	; 2aa34 <CUSBEndpoint::ResetPID()+0x30>
   2aa20:	e59f0010 	ldr	r0, [pc, #16]	; 2aa38 <CUSBEndpoint::ResetPID()+0x34>
   2aa24:	eb003155 	bl	36f80 <assertion_failed>
   2aa28:	e3a03001 	mov	r3, #1
   2aa2c:	e5c43014 	strb	r3, [r4, #20]
   2aa30:	e8bd8010 	pop	{r4, pc}
   2aa34:	0004ab4c 	.word	0x0004ab4c
   2aa38:	0004ac68 	.word	0x0004ac68

0002aa3c <CUSBHostController::CUSBHostController()>:
   2aa3c:	e59f3004 	ldr	r3, [pc, #4]	; 2aa48 <CUSBHostController::CUSBHostController()+0xc>
   2aa40:	e5803000 	str	r3, [r0]
   2aa44:	e12fff1e 	bx	lr
   2aa48:	0004ac8c 	.word	0x0004ac8c

0002aa4c <CUSBHostController::~CUSBHostController()>:
   2aa4c:	e12fff1e 	bx	lr

0002aa50 <CUSBHostController::~CUSBHostController()>:
   2aa50:	e92d4010 	push	{r4, lr}
   2aa54:	e1a04000 	mov	r4, r0
   2aa58:	e3a01004 	mov	r1, #4
   2aa5c:	eb002631 	bl	34328 <operator delete(void*, unsigned int)>
   2aa60:	e1a00004 	mov	r0, r4
   2aa64:	e8bd8010 	pop	{r4, pc}

0002aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>:
   2aa68:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aa6c:	e1a06000 	mov	r6, r0
   2aa70:	e24dd034 	sub	sp, sp, #52	; 0x34
   2aa74:	e3a00008 	mov	r0, #8
   2aa78:	e1dd56b4 	ldrh	r5, [sp, #100]	; 0x64
   2aa7c:	e1a0a002 	mov	sl, r2
   2aa80:	e1a09003 	mov	r9, r3
   2aa84:	e1dd85b8 	ldrh	r8, [sp, #88]	; 0x58
   2aa88:	e1dd75bc 	ldrh	r7, [sp, #92]	; 0x5c
   2aa8c:	e1a0b001 	mov	fp, r1
   2aa90:	eb002620 	bl	34318 <operator new(unsigned int)>
   2aa94:	e1a04000 	mov	r4, r0
   2aa98:	e58d0000 	str	r0, [sp]
   2aa9c:	e1a02428 	lsr	r2, r8, #8
   2aaa0:	e5c0a000 	strb	sl, [r0]
   2aaa4:	e5c09001 	strb	r9, [r0, #1]
   2aaa8:	e1a00427 	lsr	r0, r7, #8
   2aaac:	e1a0c425 	lsr	ip, r5, #8
   2aab0:	e1a0100b 	mov	r1, fp
   2aab4:	e5c42003 	strb	r2, [r4, #3]
   2aab8:	e1a03005 	mov	r3, r5
   2aabc:	e59d2060 	ldr	r2, [sp, #96]	; 0x60
   2aac0:	e5c40005 	strb	r0, [r4, #5]
   2aac4:	e28d0008 	add	r0, sp, #8
   2aac8:	e5c4c007 	strb	ip, [r4, #7]
   2aacc:	e5c48002 	strb	r8, [r4, #2]
   2aad0:	e5c47004 	strb	r7, [r4, #4]
   2aad4:	e5c45006 	strb	r5, [r4, #6]
   2aad8:	eb00005f 	bl	2ac5c <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   2aadc:	e5963000 	ldr	r3, [r6]
   2aae0:	e1a00006 	mov	r0, r6
   2aae4:	e5933008 	ldr	r3, [r3, #8]
   2aae8:	e28d1008 	add	r1, sp, #8
   2aaec:	e12fff33 	blx	r3
   2aaf0:	e3500000 	cmp	r0, #0
   2aaf4:	0a00000a 	beq	2ab24 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)+0xbc>
   2aaf8:	e28d0008 	add	r0, sp, #8
   2aafc:	eb000092 	bl	2ad4c <CUSBRequest::GetResultLength() const>
   2ab00:	e1a05000 	mov	r5, r0
   2ab04:	e1a00004 	mov	r0, r4
   2ab08:	e3a01008 	mov	r1, #8
   2ab0c:	eb002605 	bl	34328 <operator delete(void*, unsigned int)>
   2ab10:	e28d0008 	add	r0, sp, #8
   2ab14:	eb000075 	bl	2acf0 <CUSBRequest::~CUSBRequest()>
   2ab18:	e1a00005 	mov	r0, r5
   2ab1c:	e28dd034 	add	sp, sp, #52	; 0x34
   2ab20:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab24:	e3e05000 	mvn	r5, #0
   2ab28:	eafffff5 	b	2ab04 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)+0x9c>

0002ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>:
   2ab2c:	e92d4010 	push	{r4, lr}
   2ab30:	e1833402 	orr	r3, r3, r2, lsl #8
   2ab34:	e59d4008 	ldr	r4, [sp, #8]
   2ab38:	e5dde010 	ldrb	lr, [sp, #16]
   2ab3c:	e1ddc1b4 	ldrh	ip, [sp, #20]
   2ab40:	e58d3008 	str	r3, [sp, #8]
   2ab44:	e1dd30bc 	ldrh	r3, [sp, #12]
   2ab48:	e58d4010 	str	r4, [sp, #16]
   2ab4c:	e58d3014 	str	r3, [sp, #20]
   2ab50:	e1a0200e 	mov	r2, lr
   2ab54:	e58dc00c 	str	ip, [sp, #12]
   2ab58:	e3a03006 	mov	r3, #6
   2ab5c:	e8bd4010 	pop	{r4, lr}
   2ab60:	eaffffc0 	b	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>

0002ab64 <CUSBHostController::SetAddress(CUSBEndpoint*, unsigned char)>:
   2ab64:	e92d4010 	push	{r4, lr}
   2ab68:	e3a04000 	mov	r4, #0
   2ab6c:	e24dd010 	sub	sp, sp, #16
   2ab70:	e58d2000 	str	r2, [sp]
   2ab74:	e58d400c 	str	r4, [sp, #12]
   2ab78:	e58d4008 	str	r4, [sp, #8]
   2ab7c:	e58d4004 	str	r4, [sp, #4]
   2ab80:	e1a02004 	mov	r2, r4
   2ab84:	e3a03005 	mov	r3, #5
   2ab88:	ebffffb6 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2ab8c:	e1500004 	cmp	r0, r4
   2ab90:	b1a00004 	movlt	r0, r4
   2ab94:	ba000003 	blt	2aba8 <CUSBHostController::SetAddress(CUSBEndpoint*, unsigned char)+0x44>
   2ab98:	eb002966 	bl	35138 <CTimer::Get()>
   2ab9c:	e3a00032 	mov	r0, #50	; 0x32
   2aba0:	eb002925 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   2aba4:	e3a00001 	mov	r0, #1
   2aba8:	e28dd010 	add	sp, sp, #16
   2abac:	e8bd8010 	pop	{r4, pc}

0002abb0 <CUSBHostController::SetConfiguration(CUSBEndpoint*, unsigned char)>:
   2abb0:	e92d4010 	push	{r4, lr}
   2abb4:	e3a04000 	mov	r4, #0
   2abb8:	e24dd010 	sub	sp, sp, #16
   2abbc:	e58d2000 	str	r2, [sp]
   2abc0:	e58d400c 	str	r4, [sp, #12]
   2abc4:	e58d4008 	str	r4, [sp, #8]
   2abc8:	e58d4004 	str	r4, [sp, #4]
   2abcc:	e1a02004 	mov	r2, r4
   2abd0:	e3a03009 	mov	r3, #9
   2abd4:	ebffffa3 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2abd8:	e1500004 	cmp	r0, r4
   2abdc:	b1a00004 	movlt	r0, r4
   2abe0:	ba000003 	blt	2abf4 <CUSBHostController::SetConfiguration(CUSBEndpoint*, unsigned char)+0x44>
   2abe4:	eb002953 	bl	35138 <CTimer::Get()>
   2abe8:	e3a00032 	mov	r0, #50	; 0x32
   2abec:	eb002912 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   2abf0:	e3a00001 	mov	r0, #1
   2abf4:	e28dd010 	add	sp, sp, #16
   2abf8:	e8bd8010 	pop	{r4, pc}

0002abfc <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int)>:
   2abfc:	e3a0c000 	mov	ip, #0
   2ac00:	e92d4010 	push	{r4, lr}
   2ac04:	e1a04000 	mov	r4, r0
   2ac08:	e24dd030 	sub	sp, sp, #48	; 0x30
   2ac0c:	e58dc000 	str	ip, [sp]
   2ac10:	e28d0008 	add	r0, sp, #8
   2ac14:	eb000010 	bl	2ac5c <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   2ac18:	e5943000 	ldr	r3, [r4]
   2ac1c:	e1a00004 	mov	r0, r4
   2ac20:	e5933008 	ldr	r3, [r3, #8]
   2ac24:	e28d1008 	add	r1, sp, #8
   2ac28:	e12fff33 	blx	r3
   2ac2c:	e3500000 	cmp	r0, #0
   2ac30:	0a000007 	beq	2ac54 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int)+0x58>
   2ac34:	e28d0008 	add	r0, sp, #8
   2ac38:	eb000043 	bl	2ad4c <CUSBRequest::GetResultLength() const>
   2ac3c:	e1a04000 	mov	r4, r0
   2ac40:	e28d0008 	add	r0, sp, #8
   2ac44:	eb000029 	bl	2acf0 <CUSBRequest::~CUSBRequest()>
   2ac48:	e1a00004 	mov	r0, r4
   2ac4c:	e28dd030 	add	sp, sp, #48	; 0x30
   2ac50:	e8bd8010 	pop	{r4, pc}
   2ac54:	e3e04000 	mvn	r4, #0
   2ac58:	eafffff8 	b	2ac40 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int)+0x44>

0002ac5c <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>:
   2ac5c:	e92d4010 	push	{r4, lr}
   2ac60:	e1a04000 	mov	r4, r0
   2ac64:	e3a00000 	mov	r0, #0
   2ac68:	e59dc008 	ldr	ip, [sp, #8]
   2ac6c:	e1510000 	cmp	r1, r0
   2ac70:	e5841000 	str	r1, [r4]
   2ac74:	e1c420f8 	strd	r2, [r4, #8]
   2ac78:	e584c004 	str	ip, [r4, #4]
   2ac7c:	e5840010 	str	r0, [r4, #16]
   2ac80:	e5840014 	str	r0, [r4, #20]
   2ac84:	e5840018 	str	r0, [r4, #24]
   2ac88:	e584001c 	str	r0, [r4, #28]
   2ac8c:	e5840020 	str	r0, [r4, #32]
   2ac90:	e5840024 	str	r0, [r4, #36]	; 0x24
   2ac94:	0a00000c 	beq	2accc <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x70>
   2ac98:	e3520000 	cmp	r2, #0
   2ac9c:	0a000001 	beq	2aca8 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x4c>
   2aca0:	e1a00004 	mov	r0, r4
   2aca4:	e8bd8010 	pop	{r4, pc}
   2aca8:	e594300c 	ldr	r3, [r4, #12]
   2acac:	e3530000 	cmp	r3, #0
   2acb0:	0afffffa 	beq	2aca0 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x44>
   2acb4:	e3a02024 	mov	r2, #36	; 0x24
   2acb8:	e59f1024 	ldr	r1, [pc, #36]	; 2ace4 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x88>
   2acbc:	e59f0024 	ldr	r0, [pc, #36]	; 2ace8 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x8c>
   2acc0:	eb0030ae 	bl	36f80 <assertion_failed>
   2acc4:	e1a00004 	mov	r0, r4
   2acc8:	e8bd8010 	pop	{r4, pc}
   2accc:	e3a02023 	mov	r2, #35	; 0x23
   2acd0:	e59f100c 	ldr	r1, [pc, #12]	; 2ace4 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x88>
   2acd4:	e59f0010 	ldr	r0, [pc, #16]	; 2acec <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x90>
   2acd8:	eb0030a8 	bl	36f80 <assertion_failed>
   2acdc:	e5942008 	ldr	r2, [r4, #8]
   2ace0:	eaffffec 	b	2ac98 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x3c>
   2ace4:	0004ac9c 	.word	0x0004ac9c
   2ace8:	0004acac 	.word	0x0004acac
   2acec:	0004a73c 	.word	0x0004a73c

0002acf0 <CUSBRequest::~CUSBRequest()>:
   2acf0:	e12fff1e 	bx	lr

0002acf4 <CUSBRequest::GetEndpoint() const>:
   2acf4:	e5903000 	ldr	r3, [r0]
   2acf8:	e3530000 	cmp	r3, #0
   2acfc:	0a000001 	beq	2ad08 <CUSBRequest::GetEndpoint() const+0x14>
   2ad00:	e1a00003 	mov	r0, r3
   2ad04:	e12fff1e 	bx	lr
   2ad08:	e92d4010 	push	{r4, lr}
   2ad0c:	e1a04000 	mov	r4, r0
   2ad10:	e3a02031 	mov	r2, #49	; 0x31
   2ad14:	e59f1010 	ldr	r1, [pc, #16]	; 2ad2c <CUSBRequest::GetEndpoint() const+0x38>
   2ad18:	e59f0010 	ldr	r0, [pc, #16]	; 2ad30 <CUSBRequest::GetEndpoint() const+0x3c>
   2ad1c:	eb003097 	bl	36f80 <assertion_failed>
   2ad20:	e5943000 	ldr	r3, [r4]
   2ad24:	e1a00003 	mov	r0, r3
   2ad28:	e8bd8010 	pop	{r4, pc}
   2ad2c:	0004ac9c 	.word	0x0004ac9c
   2ad30:	0004a73c 	.word	0x0004a73c

0002ad34 <CUSBRequest::SetStatus(int)>:
   2ad34:	e5801010 	str	r1, [r0, #16]
   2ad38:	e12fff1e 	bx	lr

0002ad3c <CUSBRequest::SetResultLen(unsigned int)>:
   2ad3c:	e5801014 	str	r1, [r0, #20]
   2ad40:	e12fff1e 	bx	lr

0002ad44 <CUSBRequest::GetStatus() const>:
   2ad44:	e5900010 	ldr	r0, [r0, #16]
   2ad48:	e12fff1e 	bx	lr

0002ad4c <CUSBRequest::GetResultLength() const>:
   2ad4c:	e5903010 	ldr	r3, [r0, #16]
   2ad50:	e92d4010 	push	{r4, lr}
   2ad54:	e3530000 	cmp	r3, #0
   2ad58:	e1a04000 	mov	r4, r0
   2ad5c:	1a000003 	bne	2ad70 <CUSBRequest::GetResultLength() const+0x24>
   2ad60:	e3a02046 	mov	r2, #70	; 0x46
   2ad64:	e59f100c 	ldr	r1, [pc, #12]	; 2ad78 <CUSBRequest::GetResultLength() const+0x2c>
   2ad68:	e59f000c 	ldr	r0, [pc, #12]	; 2ad7c <CUSBRequest::GetResultLength() const+0x30>
   2ad6c:	eb003083 	bl	36f80 <assertion_failed>
   2ad70:	e5940014 	ldr	r0, [r4, #20]
   2ad74:	e8bd8010 	pop	{r4, pc}
   2ad78:	0004ac9c 	.word	0x0004ac9c
   2ad7c:	0004acd0 	.word	0x0004acd0

0002ad80 <CUSBRequest::GetSetupData()>:
   2ad80:	e92d4010 	push	{r4, lr}
   2ad84:	e1a04000 	mov	r4, r0
   2ad88:	e5900000 	ldr	r0, [r0]
   2ad8c:	ebfffec4 	bl	2a8a4 <CUSBEndpoint::GetType() const>
   2ad90:	e3500000 	cmp	r0, #0
   2ad94:	1a000008 	bne	2adbc <CUSBRequest::GetSetupData()+0x3c>
   2ad98:	e5940004 	ldr	r0, [r4, #4]
   2ad9c:	e3500000 	cmp	r0, #0
   2ada0:	18bd8010 	popne	{r4, pc}
   2ada4:	e3a0204e 	mov	r2, #78	; 0x4e
   2ada8:	e59f1020 	ldr	r1, [pc, #32]	; 2add0 <CUSBRequest::GetSetupData()+0x50>
   2adac:	e59f0020 	ldr	r0, [pc, #32]	; 2add4 <CUSBRequest::GetSetupData()+0x54>
   2adb0:	eb003072 	bl	36f80 <assertion_failed>
   2adb4:	e5940004 	ldr	r0, [r4, #4]
   2adb8:	e8bd8010 	pop	{r4, pc}
   2adbc:	e3a0204d 	mov	r2, #77	; 0x4d
   2adc0:	e59f1008 	ldr	r1, [pc, #8]	; 2add0 <CUSBRequest::GetSetupData()+0x50>
   2adc4:	e59f000c 	ldr	r0, [pc, #12]	; 2add8 <CUSBRequest::GetSetupData()+0x58>
   2adc8:	eb00306c 	bl	36f80 <assertion_failed>
   2adcc:	eafffff1 	b	2ad98 <CUSBRequest::GetSetupData()+0x18>
   2add0:	0004ac9c 	.word	0x0004ac9c
   2add4:	0004ad0c 	.word	0x0004ad0c
   2add8:	0004acdc 	.word	0x0004acdc

0002addc <CUSBRequest::GetBuffer()>:
   2addc:	e5903008 	ldr	r3, [r0, #8]
   2ade0:	e3530000 	cmp	r3, #0
   2ade4:	0a000001 	beq	2adf0 <CUSBRequest::GetBuffer()+0x14>
   2ade8:	e1a00003 	mov	r0, r3
   2adec:	e12fff1e 	bx	lr
   2adf0:	e590200c 	ldr	r2, [r0, #12]
   2adf4:	e3520000 	cmp	r2, #0
   2adf8:	0afffffa 	beq	2ade8 <CUSBRequest::GetBuffer()+0xc>
   2adfc:	e92d4010 	push	{r4, lr}
   2ae00:	e1a04000 	mov	r4, r0
   2ae04:	e3a02056 	mov	r2, #86	; 0x56
   2ae08:	e59f1010 	ldr	r1, [pc, #16]	; 2ae20 <CUSBRequest::GetBuffer()+0x44>
   2ae0c:	e59f0010 	ldr	r0, [pc, #16]	; 2ae24 <CUSBRequest::GetBuffer()+0x48>
   2ae10:	eb00305a 	bl	36f80 <assertion_failed>
   2ae14:	e5943008 	ldr	r3, [r4, #8]
   2ae18:	e1a00003 	mov	r0, r3
   2ae1c:	e8bd8010 	pop	{r4, pc}
   2ae20:	0004ac9c 	.word	0x0004ac9c
   2ae24:	0004acac 	.word	0x0004acac

0002ae28 <CUSBRequest::GetBufLen() const>:
   2ae28:	e590000c 	ldr	r0, [r0, #12]
   2ae2c:	e12fff1e 	bx	lr

0002ae30 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>:
   2ae30:	e3510000 	cmp	r1, #0
   2ae34:	e5801018 	str	r1, [r0, #24]
   2ae38:	e1c021fc 	strd	r2, [r0, #28]
   2ae3c:	112fff1e 	bxne	lr
   2ae40:	e3a02066 	mov	r2, #102	; 0x66
   2ae44:	e59f1004 	ldr	r1, [pc, #4]	; 2ae50 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)+0x20>
   2ae48:	e59f0004 	ldr	r0, [pc, #4]	; 2ae54 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)+0x24>
   2ae4c:	ea00304b 	b	36f80 <assertion_failed>
   2ae50:	0004ac9c 	.word	0x0004ac9c
   2ae54:	0004ad20 	.word	0x0004ad20

0002ae58 <CUSBRequest::CallCompletionRoutine()>:
   2ae58:	e5903018 	ldr	r3, [r0, #24]
   2ae5c:	e92d4010 	push	{r4, lr}
   2ae60:	e3530000 	cmp	r3, #0
   2ae64:	e1a04000 	mov	r4, r0
   2ae68:	0a000004 	beq	2ae80 <CUSBRequest::CallCompletionRoutine()+0x28>
   2ae6c:	e5942020 	ldr	r2, [r4, #32]
   2ae70:	e594101c 	ldr	r1, [r4, #28]
   2ae74:	e1a00004 	mov	r0, r4
   2ae78:	e8bd4010 	pop	{r4, lr}
   2ae7c:	e12fff13 	bx	r3
   2ae80:	e3a0206b 	mov	r2, #107	; 0x6b
   2ae84:	e59f100c 	ldr	r1, [pc, #12]	; 2ae98 <CUSBRequest::CallCompletionRoutine()+0x40>
   2ae88:	e59f000c 	ldr	r0, [pc, #12]	; 2ae9c <CUSBRequest::CallCompletionRoutine()+0x44>
   2ae8c:	eb00303b 	bl	36f80 <assertion_failed>
   2ae90:	e5943018 	ldr	r3, [r4, #24]
   2ae94:	eafffff4 	b	2ae6c <CUSBRequest::CallCompletionRoutine()+0x14>
   2ae98:	0004ac9c 	.word	0x0004ac9c
   2ae9c:	0004ad20 	.word	0x0004ad20

0002aea0 <CUSBRequest::SetCompleteOnNAK()>:
   2aea0:	e3a03001 	mov	r3, #1
   2aea4:	e5803024 	str	r3, [r0, #36]	; 0x24
   2aea8:	e12fff1e 	bx	lr

0002aeac <CUSBRequest::IsCompleteOnNAK() const>:
   2aeac:	e5900024 	ldr	r0, [r0, #36]	; 0x24
   2aeb0:	e12fff1e 	bx	lr

0002aeb4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)>:
   2aeb4:	e92d4070 	push	{r4, r5, r6, lr}
   2aeb8:	e2506000 	subs	r6, r0, #0
   2aebc:	e1a04001 	mov	r4, r1
   2aec0:	0a00002d 	beq	2af7c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0xc8>
   2aec4:	e3540000 	cmp	r4, #0
   2aec8:	0a000031 	beq	2af94 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0xe0>
   2aecc:	e59f1274 	ldr	r1, [pc, #628]	; 2b148 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x294>
   2aed0:	e1a00004 	mov	r0, r4
   2aed4:	eb003590 	bl	3851c <CString::Compare(char const*) const>
   2aed8:	e3500000 	cmp	r0, #0
   2aedc:	0a000004 	beq	2aef4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x40>
   2aee0:	e59f1264 	ldr	r1, [pc, #612]	; 2b14c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x298>
   2aee4:	e1a00004 	mov	r0, r4
   2aee8:	eb00358b 	bl	3851c <CString::Compare(char const*) const>
   2aeec:	e3500000 	cmp	r0, #0
   2aef0:	1a000016 	bne	2af50 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x9c>
   2aef4:	e3a00058 	mov	r0, #88	; 0x58
   2aef8:	eb002506 	bl	34318 <operator new(unsigned int)>
   2aefc:	e1a01006 	mov	r1, r6
   2af00:	e1a05000 	mov	r5, r0
   2af04:	eb0000ce 	bl	2b244 <CUSBStandardHub::CUSBStandardHub(CUSBFunction*)>
   2af08:	e1a00005 	mov	r0, r5
   2af0c:	eb000e38 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2af10:	e1a06000 	mov	r6, r0
   2af14:	e1a00004 	mov	r0, r4
   2af18:	eb003543 	bl	3842c <CString::operator char const*() const>
   2af1c:	e59f222c 	ldr	r2, [pc, #556]	; 2b150 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x29c>
   2af20:	e1a03000 	mov	r3, r0
   2af24:	e3a01003 	mov	r1, #3
   2af28:	e1a00006 	mov	r0, r6
   2af2c:	ebfffb76 	bl	29d0c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   2af30:	e3540000 	cmp	r4, #0
   2af34:	0a000003 	beq	2af48 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x94>
   2af38:	e5943000 	ldr	r3, [r4]
   2af3c:	e1a00004 	mov	r0, r4
   2af40:	e5933004 	ldr	r3, [r3, #4]
   2af44:	e12fff33 	blx	r3
   2af48:	e1a00005 	mov	r0, r5
   2af4c:	e8bd8070 	pop	{r4, r5, r6, pc}
   2af50:	e59f11fc 	ldr	r1, [pc, #508]	; 2b154 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2a0>
   2af54:	e1a00004 	mov	r0, r4
   2af58:	eb00356f 	bl	3851c <CString::Compare(char const*) const>
   2af5c:	e3500000 	cmp	r0, #0
   2af60:	1a000010 	bne	2afa8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0xf4>
   2af64:	e3a00030 	mov	r0, #48	; 0x30
   2af68:	eb0024ea 	bl	34318 <operator new(unsigned int)>
   2af6c:	e1a01006 	mov	r1, r6
   2af70:	e1a05000 	mov	r5, r0
   2af74:	eb000346 	bl	2bc94 <CUSBBulkOnlyMassStorageDevice::CUSBBulkOnlyMassStorageDevice(CUSBFunction*)>
   2af78:	eaffffe2 	b	2af08 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   2af7c:	e3a02025 	mov	r2, #37	; 0x25
   2af80:	e59f11d0 	ldr	r1, [pc, #464]	; 2b158 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2a4>
   2af84:	e59f01d0 	ldr	r0, [pc, #464]	; 2b15c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2a8>
   2af88:	eb002ffc 	bl	36f80 <assertion_failed>
   2af8c:	e3540000 	cmp	r4, #0
   2af90:	1affffcd 	bne	2aecc <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x18>
   2af94:	e3a02026 	mov	r2, #38	; 0x26
   2af98:	e59f11b8 	ldr	r1, [pc, #440]	; 2b158 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2a4>
   2af9c:	e59f01bc 	ldr	r0, [pc, #444]	; 2b160 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2ac>
   2afa0:	eb002ff6 	bl	36f80 <assertion_failed>
   2afa4:	eaffffc8 	b	2aecc <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x18>
   2afa8:	e59f11b4 	ldr	r1, [pc, #436]	; 2b164 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2b0>
   2afac:	e1a00004 	mov	r0, r4
   2afb0:	eb003559 	bl	3851c <CString::Compare(char const*) const>
   2afb4:	e3500000 	cmp	r0, #0
   2afb8:	0a00000a 	beq	2afe8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x134>
   2afbc:	e59f11a4 	ldr	r1, [pc, #420]	; 2b168 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2b4>
   2afc0:	e1a00004 	mov	r0, r4
   2afc4:	eb003554 	bl	3851c <CString::Compare(char const*) const>
   2afc8:	e3500000 	cmp	r0, #0
   2afcc:	1a00000b 	bne	2b000 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x14c>
   2afd0:	e3a00040 	mov	r0, #64	; 0x40
   2afd4:	eb0024cf 	bl	34318 <operator new(unsigned int)>
   2afd8:	e1a01006 	mov	r1, r6
   2afdc:	e1a05000 	mov	r5, r0
   2afe0:	eb000a48 	bl	2d908 <CUSBMouseDevice::CUSBMouseDevice(CUSBFunction*)>
   2afe4:	eaffffc7 	b	2af08 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   2afe8:	e3a00e45 	mov	r0, #1104	; 0x450
   2afec:	eb0024c9 	bl	34318 <operator new(unsigned int)>
   2aff0:	e1a01006 	mov	r1, r6
   2aff4:	e1a05000 	mov	r5, r0
   2aff8:	eb0007b6 	bl	2ced8 <CUSBKeyboardDevice::CUSBKeyboardDevice(CUSBFunction*)>
   2affc:	eaffffc1 	b	2af08 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   2b000:	e59f1164 	ldr	r1, [pc, #356]	; 2b16c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2b8>
   2b004:	e1a00004 	mov	r0, r4
   2b008:	eb003543 	bl	3851c <CString::Compare(char const*) const>
   2b00c:	e3500000 	cmp	r0, #0
   2b010:	1a000005 	bne	2b02c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x178>
   2b014:	e3a000a0 	mov	r0, #160	; 0xa0
   2b018:	eb0024be 	bl	34318 <operator new(unsigned int)>
   2b01c:	e1a01006 	mov	r1, r6
   2b020:	e1a05000 	mov	r5, r0
   2b024:	eb000aa5 	bl	2dac0 <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)>
   2b028:	eaffffb6 	b	2af08 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   2b02c:	e59f113c 	ldr	r1, [pc, #316]	; 2b170 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2bc>
   2b030:	e1a00004 	mov	r0, r4
   2b034:	eb003538 	bl	3851c <CString::Compare(char const*) const>
   2b038:	e3500000 	cmp	r0, #0
   2b03c:	0a000004 	beq	2b054 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x1a0>
   2b040:	e59f112c 	ldr	r1, [pc, #300]	; 2b174 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2c0>
   2b044:	e1a00004 	mov	r0, r4
   2b048:	eb003533 	bl	3851c <CString::Compare(char const*) const>
   2b04c:	e3500000 	cmp	r0, #0
   2b050:	1a000005 	bne	2b06c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x1b8>
   2b054:	e3a0001c 	mov	r0, #28
   2b058:	eb0024ae 	bl	34318 <operator new(unsigned int)>
   2b05c:	e1a01006 	mov	r1, r6
   2b060:	e1a05000 	mov	r5, r0
   2b064:	eb000f34 	bl	2ed3c <CUSBPrinterDevice::CUSBPrinterDevice(CUSBFunction*)>
   2b068:	eaffffa6 	b	2af08 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   2b06c:	e59f1104 	ldr	r1, [pc, #260]	; 2b178 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2c4>
   2b070:	e1a00004 	mov	r0, r4
   2b074:	eb003528 	bl	3851c <CString::Compare(char const*) const>
   2b078:	e3500000 	cmp	r0, #0
   2b07c:	1a000005 	bne	2b098 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x1e4>
   2b080:	e3a00028 	mov	r0, #40	; 0x28
   2b084:	eb0024a3 	bl	34318 <operator new(unsigned int)>
   2b088:	e1a01006 	mov	r1, r6
   2b08c:	e1a05000 	mov	r5, r0
   2b090:	eb001793 	bl	30ee4 <CSMSC951xDevice::CSMSC951xDevice(CUSBFunction*)>
   2b094:	eaffff9b 	b	2af08 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   2b098:	e59f10dc 	ldr	r1, [pc, #220]	; 2b17c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2c8>
   2b09c:	e1a00004 	mov	r0, r4
   2b0a0:	eb00351d 	bl	3851c <CString::Compare(char const*) const>
   2b0a4:	e3500000 	cmp	r0, #0
   2b0a8:	0a000004 	beq	2b0c0 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x20c>
   2b0ac:	e59f10cc 	ldr	r1, [pc, #204]	; 2b180 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2cc>
   2b0b0:	e1a00004 	mov	r0, r4
   2b0b4:	eb003518 	bl	3851c <CString::Compare(char const*) const>
   2b0b8:	e3500000 	cmp	r0, #0
   2b0bc:	1a000005 	bne	2b0d8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x224>
   2b0c0:	e3a00028 	mov	r0, #40	; 0x28
   2b0c4:	eb002493 	bl	34318 <operator new(unsigned int)>
   2b0c8:	e1a01006 	mov	r1, r6
   2b0cc:	e1a05000 	mov	r5, r0
   2b0d0:	eb000fe2 	bl	2f060 <CUSBBluetoothDevice::CUSBBluetoothDevice(CUSBFunction*)>
   2b0d4:	eaffff8b 	b	2af08 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   2b0d8:	e59f10a4 	ldr	r1, [pc, #164]	; 2b184 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2d0>
   2b0dc:	e1a00004 	mov	r0, r4
   2b0e0:	eb00350d 	bl	3851c <CString::Compare(char const*) const>
   2b0e4:	e3500000 	cmp	r0, #0
   2b0e8:	0a000004 	beq	2b100 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x24c>
   2b0ec:	e59f1094 	ldr	r1, [pc, #148]	; 2b188 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2d4>
   2b0f0:	e1a00004 	mov	r0, r4
   2b0f4:	eb003508 	bl	3851c <CString::Compare(char const*) const>
   2b0f8:	e3500000 	cmp	r0, #0
   2b0fc:	1a000005 	bne	2b118 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x264>
   2b100:	e3a00028 	mov	r0, #40	; 0x28
   2b104:	eb002483 	bl	34318 <operator new(unsigned int)>
   2b108:	e1a01006 	mov	r1, r6
   2b10c:	e1a05000 	mov	r5, r0
   2b110:	eb00114e 	bl	2f650 <CUSBMIDIDevice::CUSBMIDIDevice(CUSBFunction*)>
   2b114:	eaffff7b 	b	2af08 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   2b118:	e59f106c 	ldr	r1, [pc, #108]	; 2b18c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2d8>
   2b11c:	e1a00004 	mov	r0, r4
   2b120:	eb0034fd 	bl	3851c <CString::Compare(char const*) const>
   2b124:	e3500000 	cmp	r0, #0
   2b128:	13a05000 	movne	r5, #0
   2b12c:	1affff7f 	bne	2af30 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x7c>
   2b130:	e3a00024 	mov	r0, #36	; 0x24
   2b134:	eb002477 	bl	34318 <operator new(unsigned int)>
   2b138:	e1a01006 	mov	r1, r6
   2b13c:	e1a05000 	mov	r5, r0
   2b140:	eb001374 	bl	2ff18 <CUSBCDCEthernetDevice::CUSBCDCEthernetDevice(CUSBFunction*)>
   2b144:	eaffff6f 	b	2af08 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   2b148:	0004ad64 	.word	0x0004ad64
   2b14c:	0004ad70 	.word	0x0004ad70
   2b150:	0004ae0c 	.word	0x0004ae0c
   2b154:	0004ad7c 	.word	0x0004ad7c
   2b158:	0004ad3c 	.word	0x0004ad3c
   2b15c:	0004ad54 	.word	0x0004ad54
   2b160:	0004a878 	.word	0x0004a878
   2b164:	0004ad88 	.word	0x0004ad88
   2b168:	0004ad94 	.word	0x0004ad94
   2b16c:	0004ada0 	.word	0x0004ada0
   2b170:	0004adac 	.word	0x0004adac
   2b174:	0004adb8 	.word	0x0004adb8
   2b178:	0004adc4 	.word	0x0004adc4
   2b17c:	0004add0 	.word	0x0004add0
   2b180:	0004addc 	.word	0x0004addc
   2b184:	0004ade8 	.word	0x0004ade8
   2b188:	0004adf4 	.word	0x0004adf4
   2b18c:	0004ae00 	.word	0x0004ae00

0002b190 <CUSBStandardHub::~CUSBStandardHub()>:
   2b190:	e5902014 	ldr	r2, [r0, #20]
   2b194:	e59f3084 	ldr	r3, [pc, #132]	; 2b220 <CUSBStandardHub::~CUSBStandardHub()+0x90>
   2b198:	e3520000 	cmp	r2, #0
   2b19c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2b1a0:	e1a07000 	mov	r7, r0
   2b1a4:	e5803000 	str	r3, [r0]
   2b1a8:	0a000012 	beq	2b1f8 <CUSBStandardHub::~CUSBStandardHub()+0x68>
   2b1ac:	e3a04000 	mov	r4, #0
   2b1b0:	e1a08004 	mov	r8, r4
   2b1b4:	e2806014 	add	r6, r0, #20
   2b1b8:	e2805034 	add	r5, r0, #52	; 0x34
   2b1bc:	e5b50004 	ldr	r0, [r5, #4]!
   2b1c0:	e3a01004 	mov	r1, #4
   2b1c4:	eb002457 	bl	34328 <operator delete(void*, unsigned int)>
   2b1c8:	e5b60004 	ldr	r0, [r6, #4]!
   2b1cc:	e2844001 	add	r4, r4, #1
   2b1d0:	e3500000 	cmp	r0, #0
   2b1d4:	e5858000 	str	r8, [r5]
   2b1d8:	0a000002 	beq	2b1e8 <CUSBStandardHub::~CUSBStandardHub()+0x58>
   2b1dc:	e5903000 	ldr	r3, [r0]
   2b1e0:	e5933004 	ldr	r3, [r3, #4]
   2b1e4:	e12fff33 	blx	r3
   2b1e8:	e5973014 	ldr	r3, [r7, #20]
   2b1ec:	e5868000 	str	r8, [r6]
   2b1f0:	e1530004 	cmp	r3, r4
   2b1f4:	8afffff0 	bhi	2b1bc <CUSBStandardHub::~CUSBStandardHub()+0x2c>
   2b1f8:	e3a04000 	mov	r4, #0
   2b1fc:	e3a01009 	mov	r1, #9
   2b200:	e5970010 	ldr	r0, [r7, #16]
   2b204:	e5874014 	str	r4, [r7, #20]
   2b208:	eb002446 	bl	34328 <operator delete(void*, unsigned int)>
   2b20c:	e5874010 	str	r4, [r7, #16]
   2b210:	e1a00007 	mov	r0, r7
   2b214:	eb000cba 	bl	2e504 <CUSBFunction::~CUSBFunction()>
   2b218:	e1a00007 	mov	r0, r7
   2b21c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2b220:	0004ae30 	.word	0x0004ae30

0002b224 <CUSBStandardHub::~CUSBStandardHub()>:
   2b224:	e92d4010 	push	{r4, lr}
   2b228:	e1a04000 	mov	r4, r0
   2b22c:	ebffffd7 	bl	2b190 <CUSBStandardHub::~CUSBStandardHub()>
   2b230:	e1a00004 	mov	r0, r4
   2b234:	e3a01058 	mov	r1, #88	; 0x58
   2b238:	eb00243a 	bl	34328 <operator delete(void*, unsigned int)>
   2b23c:	e1a00004 	mov	r0, r4
   2b240:	e8bd8010 	pop	{r4, pc}

0002b244 <CUSBStandardHub::CUSBStandardHub(CUSBFunction*)>:
   2b244:	e92d4010 	push	{r4, lr}
   2b248:	e1a04000 	mov	r4, r0
   2b24c:	eb000cfb 	bl	2e640 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   2b250:	e3a03000 	mov	r3, #0
   2b254:	e2842038 	add	r2, r4, #56	; 0x38
   2b258:	e1a00002 	mov	r0, r2
   2b25c:	e59fc028 	ldr	ip, [pc, #40]	; 2b28c <CUSBStandardHub::CUSBStandardHub(CUSBFunction*)+0x48>
   2b260:	e1a01003 	mov	r1, r3
   2b264:	e5843010 	str	r3, [r4, #16]
   2b268:	e5843014 	str	r3, [r4, #20]
   2b26c:	e584c000 	str	ip, [r4]
   2b270:	e2843018 	add	r3, r4, #24
   2b274:	e4831004 	str	r1, [r3], #4
   2b278:	e1530000 	cmp	r3, r0
   2b27c:	e4821004 	str	r1, [r2], #4
   2b280:	1afffffb 	bne	2b274 <CUSBStandardHub::CUSBStandardHub(CUSBFunction*)+0x30>
   2b284:	e1a00004 	mov	r0, r4
   2b288:	e8bd8010 	pop	{r4, pc}
   2b28c:	0004ae30 	.word	0x0004ae30

0002b290 <CUSBStandardHub::EnumeratePorts()>:
   2b290:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b294:	e24dd01c 	sub	sp, sp, #28
   2b298:	e1a06000 	mov	r6, r0
   2b29c:	eb000d75 	bl	2e878 <CUSBFunction::GetHost() const>
   2b2a0:	e250b000 	subs	fp, r0, #0
   2b2a4:	0a000159 	beq	2b810 <CUSBStandardHub::EnumeratePorts()+0x580>
   2b2a8:	e1a00006 	mov	r0, r6
   2b2ac:	eb000d60 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2b2b0:	e250a000 	subs	sl, r0, #0
   2b2b4:	0a00015d 	beq	2b830 <CUSBStandardHub::EnumeratePorts()+0x5a0>
   2b2b8:	e5963014 	ldr	r3, [r6, #20]
   2b2bc:	e3530000 	cmp	r3, #0
   2b2c0:	0a00001e 	beq	2b340 <CUSBStandardHub::EnumeratePorts()+0xb0>
   2b2c4:	e3a04001 	mov	r4, #1
   2b2c8:	e3a05000 	mov	r5, #0
   2b2cc:	e3a07008 	mov	r7, #8
   2b2d0:	ea000004 	b	2b2e8 <CUSBStandardHub::EnumeratePorts()+0x58>
   2b2d4:	e5963014 	ldr	r3, [r6, #20]
   2b2d8:	e2842001 	add	r2, r4, #1
   2b2dc:	e1530004 	cmp	r3, r4
   2b2e0:	9a00001d 	bls	2b35c <CUSBStandardHub::EnumeratePorts()+0xcc>
   2b2e4:	e1a04002 	mov	r4, r2
   2b2e8:	e6ff3074 	uxth	r3, r4
   2b2ec:	e58d3004 	str	r3, [sp, #4]
   2b2f0:	e58d500c 	str	r5, [sp, #12]
   2b2f4:	e58d5008 	str	r5, [sp, #8]
   2b2f8:	e58d7000 	str	r7, [sp]
   2b2fc:	e3a03003 	mov	r3, #3
   2b300:	e3a02023 	mov	r2, #35	; 0x23
   2b304:	e1a0100a 	mov	r1, sl
   2b308:	e1a0000b 	mov	r0, fp
   2b30c:	ebfffdd5 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2b310:	e3500000 	cmp	r0, #0
   2b314:	aaffffee 	bge	2b2d4 <CUSBStandardHub::EnumeratePorts()+0x44>
   2b318:	eb003094 	bl	37570 <CLogger::Get()>
   2b31c:	e58d4000 	str	r4, [sp]
   2b320:	e59f3634 	ldr	r3, [pc, #1588]	; 2b95c <CUSBStandardHub::EnumeratePorts()+0x6cc>
   2b324:	e3a02001 	mov	r2, #1
   2b328:	e59f1630 	ldr	r1, [pc, #1584]	; 2b960 <CUSBStandardHub::EnumeratePorts()+0x6d0>
   2b32c:	eb00316f 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b330:	e3a04000 	mov	r4, #0
   2b334:	e1a00004 	mov	r0, r4
   2b338:	e28dd01c 	add	sp, sp, #28
   2b33c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b340:	e3a02091 	mov	r2, #145	; 0x91
   2b344:	e59f1618 	ldr	r1, [pc, #1560]	; 2b964 <CUSBStandardHub::EnumeratePorts()+0x6d4>
   2b348:	e59f0618 	ldr	r0, [pc, #1560]	; 2b968 <CUSBStandardHub::EnumeratePorts()+0x6d8>
   2b34c:	eb002f0b 	bl	36f80 <assertion_failed>
   2b350:	e5963014 	ldr	r3, [r6, #20]
   2b354:	e3530000 	cmp	r3, #0
   2b358:	1affffd9 	bne	2b2c4 <CUSBStandardHub::EnumeratePorts()+0x34>
   2b35c:	eb0028f3 	bl	35730 <CKernelOptions::Get()>
   2b360:	e3500000 	cmp	r0, #0
   2b364:	0a000002 	beq	2b374 <CUSBStandardHub::EnumeratePorts()+0xe4>
   2b368:	eb0028ea 	bl	35718 <CKernelOptions::GetUSBPowerDelay() const>
   2b36c:	e2504000 	subs	r4, r0, #0
   2b370:	1a000000 	bne	2b378 <CUSBStandardHub::EnumeratePorts()+0xe8>
   2b374:	e59f45f0 	ldr	r4, [pc, #1520]	; 2b96c <CUSBStandardHub::EnumeratePorts()+0x6dc>
   2b378:	eb00276e 	bl	35138 <CTimer::Get()>
   2b37c:	e1a00004 	mov	r0, r4
   2b380:	eb00272d 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   2b384:	e5963014 	ldr	r3, [r6, #20]
   2b388:	e3530000 	cmp	r3, #0
   2b38c:	13a05001 	movne	r5, #1
   2b390:	12864034 	addne	r4, r6, #52	; 0x34
   2b394:	1a00005d 	bne	2b510 <CUSBStandardHub::EnumeratePorts()+0x280>
   2b398:	ea0000a7 	b	2b63c <CUSBStandardHub::EnumeratePorts()+0x3ac>
   2b39c:	e5942000 	ldr	r2, [r4]
   2b3a0:	e5d23000 	ldrb	r3, [r2]
   2b3a4:	e5d22001 	ldrb	r2, [r2, #1]
   2b3a8:	e1833402 	orr	r3, r3, r2, lsl #8
   2b3ac:	e3130c01 	tst	r3, #256	; 0x100
   2b3b0:	0a0000d6 	beq	2b710 <CUSBStandardHub::EnumeratePorts()+0x480>
   2b3b4:	e3130001 	tst	r3, #1
   2b3b8:	0a00004f 	beq	2b4fc <CUSBStandardHub::EnumeratePorts()+0x26c>
   2b3bc:	e3a09000 	mov	r9, #0
   2b3c0:	e3a08004 	mov	r8, #4
   2b3c4:	e58d7004 	str	r7, [sp, #4]
   2b3c8:	e58d900c 	str	r9, [sp, #12]
   2b3cc:	e58d9008 	str	r9, [sp, #8]
   2b3d0:	e58d8000 	str	r8, [sp]
   2b3d4:	e3a03003 	mov	r3, #3
   2b3d8:	e3a02023 	mov	r2, #35	; 0x23
   2b3dc:	e1a0100a 	mov	r1, sl
   2b3e0:	e1a0000b 	mov	r0, fp
   2b3e4:	ebfffd9f 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2b3e8:	e1500009 	cmp	r0, r9
   2b3ec:	ba0000d0 	blt	2b734 <CUSBStandardHub::EnumeratePorts()+0x4a4>
   2b3f0:	eb002750 	bl	35138 <CTimer::Get()>
   2b3f4:	e3a00064 	mov	r0, #100	; 0x64
   2b3f8:	eb00270f 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   2b3fc:	e5943000 	ldr	r3, [r4]
   2b400:	e3a020a3 	mov	r2, #163	; 0xa3
   2b404:	e58d3008 	str	r3, [sp, #8]
   2b408:	e58d800c 	str	r8, [sp, #12]
   2b40c:	e58d7004 	str	r7, [sp, #4]
   2b410:	e58d9000 	str	r9, [sp]
   2b414:	e1a03009 	mov	r3, r9
   2b418:	e1a0100a 	mov	r1, sl
   2b41c:	e1a0000b 	mov	r0, fp
   2b420:	ebfffd90 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2b424:	e3500004 	cmp	r0, #4
   2b428:	1affffc0 	bne	2b330 <CUSBStandardHub::EnumeratePorts()+0xa0>
   2b42c:	e5942000 	ldr	r2, [r4]
   2b430:	e5d23000 	ldrb	r3, [r2]
   2b434:	e5d22001 	ldrb	r2, [r2, #1]
   2b438:	e1833402 	orr	r3, r3, r2, lsl #8
   2b43c:	e3130002 	tst	r3, #2
   2b440:	0a0000db 	beq	2b7b4 <CUSBStandardHub::EnumeratePorts()+0x524>
   2b444:	e2132008 	ands	r2, r3, #8
   2b448:	1a0000fd 	bne	2b844 <CUSBStandardHub::EnumeratePorts()+0x5b4>
   2b44c:	e3130c02 	tst	r3, #512	; 0x200
   2b450:	11a09002 	movne	r9, r2
   2b454:	1a000002 	bne	2b464 <CUSBStandardHub::EnumeratePorts()+0x1d4>
   2b458:	e3130b01 	tst	r3, #1024	; 0x400
   2b45c:	03a09001 	moveq	r9, #1
   2b460:	13a09002 	movne	r9, #2
   2b464:	e1a00006 	mov	r0, r6
   2b468:	eb000ce1 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2b46c:	e2507000 	subs	r7, r0, #0
   2b470:	0a0000d6 	beq	2b7d0 <CUSBStandardHub::EnumeratePorts()+0x540>
   2b474:	e1a00007 	mov	r0, r7
   2b478:	ebfff9b4 	bl	29b50 <CUSBDevice::IsSplit() const>
   2b47c:	e1a08000 	mov	r8, r0
   2b480:	e1a00007 	mov	r0, r7
   2b484:	ebfff9b3 	bl	29b58 <CUSBDevice::GetHubAddress() const>
   2b488:	e58d0010 	str	r0, [sp, #16]
   2b48c:	e1a00007 	mov	r0, r7
   2b490:	ebfff9b2 	bl	29b60 <CUSBDevice::GetHubPortNumber() const>
   2b494:	e3580000 	cmp	r8, #0
   2b498:	e58d0014 	str	r0, [sp, #20]
   2b49c:	0a0000b4 	beq	2b774 <CUSBStandardHub::EnumeratePorts()+0x4e4>
   2b4a0:	e5143020 	ldr	r3, [r4, #-32]	; 0xffffffe0
   2b4a4:	e3530000 	cmp	r3, #0
   2b4a8:	0a000003 	beq	2b4bc <CUSBStandardHub::EnumeratePorts()+0x22c>
   2b4ac:	e59f24bc 	ldr	r2, [pc, #1212]	; 2b970 <CUSBStandardHub::EnumeratePorts()+0x6e0>
   2b4b0:	e59f14ac 	ldr	r1, [pc, #1196]	; 2b964 <CUSBStandardHub::EnumeratePorts()+0x6d4>
   2b4b4:	e59f04b8 	ldr	r0, [pc, #1208]	; 2b974 <CUSBStandardHub::EnumeratePorts()+0x6e4>
   2b4b8:	eb002eb0 	bl	36f80 <assertion_failed>
   2b4bc:	e3a0004c 	mov	r0, #76	; 0x4c
   2b4c0:	eb002394 	bl	34318 <operator new(unsigned int)>
   2b4c4:	e1a07000 	mov	r7, r0
   2b4c8:	e59d3014 	ldr	r3, [sp, #20]
   2b4cc:	e1a02009 	mov	r2, r9
   2b4d0:	e58d3004 	str	r3, [sp, #4]
   2b4d4:	e59d3010 	ldr	r3, [sp, #16]
   2b4d8:	e1a0100b 	mov	r1, fp
   2b4dc:	e58d3000 	str	r3, [sp]
   2b4e0:	e1a03008 	mov	r3, r8
   2b4e4:	ebfff8b7 	bl	297c8 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)>
   2b4e8:	e5047020 	str	r7, [r4, #-32]	; 0xffffffe0
   2b4ec:	e1a00007 	mov	r0, r7
   2b4f0:	ebfffa32 	bl	29dc0 <CUSBDevice::Initialize()>
   2b4f4:	e3500000 	cmp	r0, #0
   2b4f8:	0a000094 	beq	2b750 <CUSBStandardHub::EnumeratePorts()+0x4c0>
   2b4fc:	e5963014 	ldr	r3, [r6, #20]
   2b500:	e2852001 	add	r2, r5, #1
   2b504:	e1550003 	cmp	r5, r3
   2b508:	2a000020 	bcs	2b590 <CUSBStandardHub::EnumeratePorts()+0x300>
   2b50c:	e1a05002 	mov	r5, r2
   2b510:	e5b43004 	ldr	r3, [r4, #4]!
   2b514:	e3530000 	cmp	r3, #0
   2b518:	0a000003 	beq	2b52c <CUSBStandardHub::EnumeratePorts()+0x29c>
   2b51c:	e3a020b1 	mov	r2, #177	; 0xb1
   2b520:	e59f143c 	ldr	r1, [pc, #1084]	; 2b964 <CUSBStandardHub::EnumeratePorts()+0x6d4>
   2b524:	e59f044c 	ldr	r0, [pc, #1100]	; 2b978 <CUSBStandardHub::EnumeratePorts()+0x6e8>
   2b528:	eb002e94 	bl	36f80 <assertion_failed>
   2b52c:	e3a00004 	mov	r0, #4
   2b530:	eb002378 	bl	34318 <operator new(unsigned int)>
   2b534:	e3a02004 	mov	r2, #4
   2b538:	e3a03000 	mov	r3, #0
   2b53c:	e6ff7075 	uxth	r7, r5
   2b540:	e5840000 	str	r0, [r4]
   2b544:	e1a0100a 	mov	r1, sl
   2b548:	e58d0008 	str	r0, [sp, #8]
   2b54c:	e58d200c 	str	r2, [sp, #12]
   2b550:	e88d0088 	stm	sp, {r3, r7}
   2b554:	e3a020a3 	mov	r2, #163	; 0xa3
   2b558:	e1a0000b 	mov	r0, fp
   2b55c:	ebfffd41 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2b560:	e3500004 	cmp	r0, #4
   2b564:	0affff8c 	beq	2b39c <CUSBStandardHub::EnumeratePorts()+0x10c>
   2b568:	eb003000 	bl	37570 <CLogger::Get()>
   2b56c:	e59f3408 	ldr	r3, [pc, #1032]	; 2b97c <CUSBStandardHub::EnumeratePorts()+0x6ec>
   2b570:	e3a02001 	mov	r2, #1
   2b574:	e58d5000 	str	r5, [sp]
   2b578:	e59f13e0 	ldr	r1, [pc, #992]	; 2b960 <CUSBStandardHub::EnumeratePorts()+0x6d0>
   2b57c:	eb0030db 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b580:	e5963014 	ldr	r3, [r6, #20]
   2b584:	e2852001 	add	r2, r5, #1
   2b588:	e1550003 	cmp	r5, r3
   2b58c:	3affffde 	bcc	2b50c <CUSBStandardHub::EnumeratePorts()+0x27c>
   2b590:	e3530000 	cmp	r3, #0
   2b594:	0a000028 	beq	2b63c <CUSBStandardHub::EnumeratePorts()+0x3ac>
   2b598:	e3a04000 	mov	r4, #0
   2b59c:	e59f83dc 	ldr	r8, [pc, #988]	; 2b980 <CUSBStandardHub::EnumeratePorts()+0x6f0>
   2b5a0:	e59f73b8 	ldr	r7, [pc, #952]	; 2b960 <CUSBStandardHub::EnumeratePorts()+0x6d0>
   2b5a4:	e59f93d8 	ldr	r9, [pc, #984]	; 2b984 <CUSBStandardHub::EnumeratePorts()+0x6f4>
   2b5a8:	e2865014 	add	r5, r6, #20
   2b5ac:	ea000008 	b	2b5d4 <CUSBStandardHub::EnumeratePorts()+0x344>
   2b5b0:	eb002fee 	bl	37570 <CLogger::Get()>
   2b5b4:	e1a03008 	mov	r3, r8
   2b5b8:	e58d4000 	str	r4, [sp]
   2b5bc:	e3a02004 	mov	r2, #4
   2b5c0:	e1a01007 	mov	r1, r7
   2b5c4:	eb0030c9 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b5c8:	e5963014 	ldr	r3, [r6, #20]
   2b5cc:	e1530004 	cmp	r3, r4
   2b5d0:	9a000019 	bls	2b63c <CUSBStandardHub::EnumeratePorts()+0x3ac>
   2b5d4:	e5b50004 	ldr	r0, [r5, #4]!
   2b5d8:	e2844001 	add	r4, r4, #1
   2b5dc:	e3500000 	cmp	r0, #0
   2b5e0:	0afffff9 	beq	2b5cc <CUSBStandardHub::EnumeratePorts()+0x33c>
   2b5e4:	e5903000 	ldr	r3, [r0]
   2b5e8:	e593300c 	ldr	r3, [r3, #12]
   2b5ec:	e12fff33 	blx	r3
   2b5f0:	e3500000 	cmp	r0, #0
   2b5f4:	1affffed 	bne	2b5b0 <CUSBStandardHub::EnumeratePorts()+0x320>
   2b5f8:	eb002fdc 	bl	37570 <CLogger::Get()>
   2b5fc:	e58d4000 	str	r4, [sp]
   2b600:	e1a03009 	mov	r3, r9
   2b604:	e3a02002 	mov	r2, #2
   2b608:	e1a01007 	mov	r1, r7
   2b60c:	eb0030b7 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b610:	e5950000 	ldr	r0, [r5]
   2b614:	e3500000 	cmp	r0, #0
   2b618:	0a000002 	beq	2b628 <CUSBStandardHub::EnumeratePorts()+0x398>
   2b61c:	e5903000 	ldr	r3, [r0]
   2b620:	e5933004 	ldr	r3, [r3, #4]
   2b624:	e12fff33 	blx	r3
   2b628:	e3a03000 	mov	r3, #0
   2b62c:	e5853000 	str	r3, [r5]
   2b630:	e5963014 	ldr	r3, [r6, #20]
   2b634:	e1530004 	cmp	r3, r4
   2b638:	8affffe5 	bhi	2b5d4 <CUSBStandardHub::EnumeratePorts()+0x344>
   2b63c:	e3a00004 	mov	r0, #4
   2b640:	eb002334 	bl	34318 <operator new(unsigned int)>
   2b644:	e3a04000 	mov	r4, #0
   2b648:	e3a05004 	mov	r5, #4
   2b64c:	e58d0008 	str	r0, [sp, #8]
   2b650:	e1a07000 	mov	r7, r0
   2b654:	e58d500c 	str	r5, [sp, #12]
   2b658:	e58d4004 	str	r4, [sp, #4]
   2b65c:	e58d4000 	str	r4, [sp]
   2b660:	e1a03004 	mov	r3, r4
   2b664:	e3a020a0 	mov	r2, #160	; 0xa0
   2b668:	e1a0100a 	mov	r1, sl
   2b66c:	e1a0000b 	mov	r0, fp
   2b670:	ebfffcfc 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2b674:	e1500005 	cmp	r0, r5
   2b678:	e1a08000 	mov	r8, r0
   2b67c:	1a000058 	bne	2b7e4 <CUSBStandardHub::EnumeratePorts()+0x554>
   2b680:	e5d73000 	ldrb	r3, [r7]
   2b684:	e3130002 	tst	r3, #2
   2b688:	0a00007e 	beq	2b888 <CUSBStandardHub::EnumeratePorts()+0x5f8>
   2b68c:	e5963014 	ldr	r3, [r6, #20]
   2b690:	e3530000 	cmp	r3, #0
   2b694:	0a000011 	beq	2b6e0 <CUSBStandardHub::EnumeratePorts()+0x450>
   2b698:	e3a05001 	mov	r5, #1
   2b69c:	e3a08008 	mov	r8, #8
   2b6a0:	ea000000 	b	2b6a8 <CUSBStandardHub::EnumeratePorts()+0x418>
   2b6a4:	e1a05002 	mov	r5, r2
   2b6a8:	e6ff3075 	uxth	r3, r5
   2b6ac:	e58d3004 	str	r3, [sp, #4]
   2b6b0:	e3a02023 	mov	r2, #35	; 0x23
   2b6b4:	e3a03001 	mov	r3, #1
   2b6b8:	e58d400c 	str	r4, [sp, #12]
   2b6bc:	e58d4008 	str	r4, [sp, #8]
   2b6c0:	e58d8000 	str	r8, [sp]
   2b6c4:	e1a0100a 	mov	r1, sl
   2b6c8:	e1a0000b 	mov	r0, fp
   2b6cc:	ebfffce5 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2b6d0:	e5963014 	ldr	r3, [r6, #20]
   2b6d4:	e2852001 	add	r2, r5, #1
   2b6d8:	e1530005 	cmp	r3, r5
   2b6dc:	8afffff0 	bhi	2b6a4 <CUSBStandardHub::EnumeratePorts()+0x414>
   2b6e0:	e3a04000 	mov	r4, #0
   2b6e4:	eb002fa1 	bl	37570 <CLogger::Get()>
   2b6e8:	e59f3298 	ldr	r3, [pc, #664]	; 2b988 <CUSBStandardHub::EnumeratePorts()+0x6f8>
   2b6ec:	e3a02001 	mov	r2, #1
   2b6f0:	e59f1268 	ldr	r1, [pc, #616]	; 2b960 <CUSBStandardHub::EnumeratePorts()+0x6d0>
   2b6f4:	eb00307d 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b6f8:	e1a00007 	mov	r0, r7
   2b6fc:	e3a01004 	mov	r1, #4
   2b700:	eb002308 	bl	34328 <operator delete(void*, unsigned int)>
   2b704:	e1a00004 	mov	r0, r4
   2b708:	e28dd01c 	add	sp, sp, #28
   2b70c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b710:	e3a020bf 	mov	r2, #191	; 0xbf
   2b714:	e59f1248 	ldr	r1, [pc, #584]	; 2b964 <CUSBStandardHub::EnumeratePorts()+0x6d4>
   2b718:	e59f026c 	ldr	r0, [pc, #620]	; 2b98c <CUSBStandardHub::EnumeratePorts()+0x6fc>
   2b71c:	eb002e17 	bl	36f80 <assertion_failed>
   2b720:	e5942000 	ldr	r2, [r4]
   2b724:	e5d23000 	ldrb	r3, [r2]
   2b728:	e5d22001 	ldrb	r2, [r2, #1]
   2b72c:	e1833402 	orr	r3, r3, r2, lsl #8
   2b730:	eaffff1f 	b	2b3b4 <CUSBStandardHub::EnumeratePorts()+0x124>
   2b734:	eb002f8d 	bl	37570 <CLogger::Get()>
   2b738:	e58d5000 	str	r5, [sp]
   2b73c:	e59f324c 	ldr	r3, [pc, #588]	; 2b990 <CUSBStandardHub::EnumeratePorts()+0x700>
   2b740:	e3a02001 	mov	r2, #1
   2b744:	e59f1214 	ldr	r1, [pc, #532]	; 2b960 <CUSBStandardHub::EnumeratePorts()+0x6d0>
   2b748:	eb003068 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b74c:	eaffff6a 	b	2b4fc <CUSBStandardHub::EnumeratePorts()+0x26c>
   2b750:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   2b754:	e3500000 	cmp	r0, #0
   2b758:	0a000002 	beq	2b768 <CUSBStandardHub::EnumeratePorts()+0x4d8>
   2b75c:	e5903000 	ldr	r3, [r0]
   2b760:	e5933004 	ldr	r3, [r3, #4]
   2b764:	e12fff33 	blx	r3
   2b768:	e3a03000 	mov	r3, #0
   2b76c:	e5043020 	str	r3, [r4, #-32]	; 0xffffffe0
   2b770:	eaffff61 	b	2b4fc <CUSBStandardHub::EnumeratePorts()+0x26c>
   2b774:	e1a00007 	mov	r0, r7
   2b778:	ebfff8f2 	bl	29b48 <CUSBDevice::GetSpeed() const>
   2b77c:	e2403002 	sub	r3, r0, #2
   2b780:	e16f3f13 	clz	r3, r3
   2b784:	e3590002 	cmp	r9, #2
   2b788:	e1a032a3 	lsr	r3, r3, #5
   2b78c:	03a03000 	moveq	r3, #0
   2b790:	e3530000 	cmp	r3, #0
   2b794:	0affff41 	beq	2b4a0 <CUSBStandardHub::EnumeratePorts()+0x210>
   2b798:	e1a00007 	mov	r0, r7
   2b79c:	ebfff8e7 	bl	29b40 <CUSBDevice::GetAddress() const>
   2b7a0:	e6ef3075 	uxtb	r3, r5
   2b7a4:	e58d0010 	str	r0, [sp, #16]
   2b7a8:	e3a08001 	mov	r8, #1
   2b7ac:	e58d3014 	str	r3, [sp, #20]
   2b7b0:	eaffff3a 	b	2b4a0 <CUSBStandardHub::EnumeratePorts()+0x210>
   2b7b4:	eb002f6d 	bl	37570 <CLogger::Get()>
   2b7b8:	e58d5000 	str	r5, [sp]
   2b7bc:	e59f31d0 	ldr	r3, [pc, #464]	; 2b994 <CUSBStandardHub::EnumeratePorts()+0x704>
   2b7c0:	e3a02001 	mov	r2, #1
   2b7c4:	e59f1194 	ldr	r1, [pc, #404]	; 2b960 <CUSBStandardHub::EnumeratePorts()+0x6d0>
   2b7c8:	eb003048 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b7cc:	eaffff4a 	b	2b4fc <CUSBStandardHub::EnumeratePorts()+0x26c>
   2b7d0:	e3a020fd 	mov	r2, #253	; 0xfd
   2b7d4:	e59f1188 	ldr	r1, [pc, #392]	; 2b964 <CUSBStandardHub::EnumeratePorts()+0x6d4>
   2b7d8:	e59f01b8 	ldr	r0, [pc, #440]	; 2b998 <CUSBStandardHub::EnumeratePorts()+0x708>
   2b7dc:	eb002de7 	bl	36f80 <assertion_failed>
   2b7e0:	eaffff23 	b	2b474 <CUSBStandardHub::EnumeratePorts()+0x1e4>
   2b7e4:	eb002f61 	bl	37570 <CLogger::Get()>
   2b7e8:	e59f31ac 	ldr	r3, [pc, #428]	; 2b99c <CUSBStandardHub::EnumeratePorts()+0x70c>
   2b7ec:	e3a02001 	mov	r2, #1
   2b7f0:	e59f1168 	ldr	r1, [pc, #360]	; 2b960 <CUSBStandardHub::EnumeratePorts()+0x6d0>
   2b7f4:	eb00303d 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b7f8:	e1a00007 	mov	r0, r7
   2b7fc:	e1a01005 	mov	r1, r5
   2b800:	eb0022c8 	bl	34328 <operator delete(void*, unsigned int)>
   2b804:	e1a00004 	mov	r0, r4
   2b808:	e28dd01c 	add	sp, sp, #28
   2b80c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b810:	e3a0208c 	mov	r2, #140	; 0x8c
   2b814:	e59f1148 	ldr	r1, [pc, #328]	; 2b964 <CUSBStandardHub::EnumeratePorts()+0x6d4>
   2b818:	e59f0180 	ldr	r0, [pc, #384]	; 2b9a0 <CUSBStandardHub::EnumeratePorts()+0x710>
   2b81c:	eb002dd7 	bl	36f80 <assertion_failed>
   2b820:	e1a00006 	mov	r0, r6
   2b824:	eb000c02 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2b828:	e250a000 	subs	sl, r0, #0
   2b82c:	1afffea1 	bne	2b2b8 <CUSBStandardHub::EnumeratePorts()+0x28>
   2b830:	e3a0208f 	mov	r2, #143	; 0x8f
   2b834:	e59f1128 	ldr	r1, [pc, #296]	; 2b964 <CUSBStandardHub::EnumeratePorts()+0x6d4>
   2b838:	e59f0164 	ldr	r0, [pc, #356]	; 2b9a4 <CUSBStandardHub::EnumeratePorts()+0x714>
   2b83c:	eb002dcf 	bl	36f80 <assertion_failed>
   2b840:	eafffe9c 	b	2b2b8 <CUSBStandardHub::EnumeratePorts()+0x28>
   2b844:	e3a03008 	mov	r3, #8
   2b848:	e1a0100a 	mov	r1, sl
   2b84c:	e58d3000 	str	r3, [sp]
   2b850:	e3a02023 	mov	r2, #35	; 0x23
   2b854:	e3a03001 	mov	r3, #1
   2b858:	e58d900c 	str	r9, [sp, #12]
   2b85c:	e98d0280 	stmib	sp, {r7, r9}
   2b860:	e1a0000b 	mov	r0, fp
   2b864:	ebfffc7f 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2b868:	eb002f40 	bl	37570 <CLogger::Get()>
   2b86c:	e58d5000 	str	r5, [sp]
   2b870:	e59f3130 	ldr	r3, [pc, #304]	; 2b9a8 <CUSBStandardHub::EnumeratePorts()+0x718>
   2b874:	e3a02001 	mov	r2, #1
   2b878:	e59f10e0 	ldr	r1, [pc, #224]	; 2b960 <CUSBStandardHub::EnumeratePorts()+0x6d0>
   2b87c:	e1a04009 	mov	r4, r9
   2b880:	eb00301a 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b884:	eafffeaa 	b	2b334 <CUSBStandardHub::EnumeratePorts()+0xa4>
   2b888:	e1a00007 	mov	r0, r7
   2b88c:	e1a01008 	mov	r1, r8
   2b890:	eb0022a4 	bl	34328 <operator delete(void*, unsigned int)>
   2b894:	e5963014 	ldr	r3, [r6, #20]
   2b898:	e3530000 	cmp	r3, #0
   2b89c:	03a04001 	moveq	r4, #1
   2b8a0:	0afffea3 	beq	2b334 <CUSBStandardHub::EnumeratePorts()+0xa4>
   2b8a4:	e3a05001 	mov	r5, #1
   2b8a8:	e58d8010 	str	r8, [sp, #16]
   2b8ac:	e1a04005 	mov	r4, r5
   2b8b0:	e2868034 	add	r8, r6, #52	; 0x34
   2b8b4:	ea000004 	b	2b8cc <CUSBStandardHub::EnumeratePorts()+0x63c>
   2b8b8:	e5963014 	ldr	r3, [r6, #20]
   2b8bc:	e2852001 	add	r2, r5, #1
   2b8c0:	e1550003 	cmp	r5, r3
   2b8c4:	2afffe9a 	bcs	2b334 <CUSBStandardHub::EnumeratePorts()+0xa4>
   2b8c8:	e1a05002 	mov	r5, r2
   2b8cc:	e3a07000 	mov	r7, #0
   2b8d0:	e5b82004 	ldr	r2, [r8, #4]!
   2b8d4:	e59d3010 	ldr	r3, [sp, #16]
   2b8d8:	e6ff9075 	uxth	r9, r5
   2b8dc:	e58d300c 	str	r3, [sp, #12]
   2b8e0:	e58d2008 	str	r2, [sp, #8]
   2b8e4:	e58d7000 	str	r7, [sp]
   2b8e8:	e1a03007 	mov	r3, r7
   2b8ec:	e58d9004 	str	r9, [sp, #4]
   2b8f0:	e3a020a3 	mov	r2, #163	; 0xa3
   2b8f4:	e1a0100a 	mov	r1, sl
   2b8f8:	e1a0000b 	mov	r0, fp
   2b8fc:	ebfffc59 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2b900:	e3500004 	cmp	r0, #4
   2b904:	1affffeb 	bne	2b8b8 <CUSBStandardHub::EnumeratePorts()+0x628>
   2b908:	e5983000 	ldr	r3, [r8]
   2b90c:	e5d33000 	ldrb	r3, [r3]
   2b910:	e3130008 	tst	r3, #8
   2b914:	0affffe7 	beq	2b8b8 <CUSBStandardHub::EnumeratePorts()+0x628>
   2b918:	e3a03008 	mov	r3, #8
   2b91c:	e1a0100a 	mov	r1, sl
   2b920:	e88d0208 	stm	sp, {r3, r9}
   2b924:	e3a02023 	mov	r2, #35	; 0x23
   2b928:	e3a03001 	mov	r3, #1
   2b92c:	e58d700c 	str	r7, [sp, #12]
   2b930:	e58d7008 	str	r7, [sp, #8]
   2b934:	e1a0000b 	mov	r0, fp
   2b938:	ebfffc4a 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2b93c:	eb002f0b 	bl	37570 <CLogger::Get()>
   2b940:	e58d5000 	str	r5, [sp]
   2b944:	e59f305c 	ldr	r3, [pc, #92]	; 2b9a8 <CUSBStandardHub::EnumeratePorts()+0x718>
   2b948:	e3a02001 	mov	r2, #1
   2b94c:	e59f100c 	ldr	r1, [pc, #12]	; 2b960 <CUSBStandardHub::EnumeratePorts()+0x6d0>
   2b950:	e1a04007 	mov	r4, r7
   2b954:	eb002fe5 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2b958:	eaffffd6 	b	2b8b8 <CUSBStandardHub::EnumeratePorts()+0x628>
   2b95c:	0004ae94 	.word	0x0004ae94
   2b960:	0004ae4c 	.word	0x0004ae4c
   2b964:	0004ae54 	.word	0x0004ae54
   2b968:	0004ae84 	.word	0x0004ae84
   2b96c:	000001fe 	.word	0x000001fe
   2b970:	0000010e 	.word	0x0000010e
   2b974:	0004af7c 	.word	0x0004af7c
   2b978:	0004aeac 	.word	0x0004aeac
   2b97c:	0004aec4 	.word	0x0004aec4
   2b980:	0004afb8 	.word	0x0004afb8
   2b984:	0004af94 	.word	0x0004af94
   2b988:	0004afec 	.word	0x0004afec
   2b98c:	0004aee4 	.word	0x0004aee4
   2b990:	0004af18 	.word	0x0004af18
   2b994:	0004af30 	.word	0x0004af30
   2b998:	0004af6c 	.word	0x0004af6c
   2b99c:	0004afd4 	.word	0x0004afd4
   2b9a0:	0004ae68 	.word	0x0004ae68
   2b9a4:	0004ae74 	.word	0x0004ae74
   2b9a8:	0004af48 	.word	0x0004af48

0002b9ac <CUSBStandardHub::Configure()>:
   2b9ac:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2b9b0:	e24dd024 	sub	sp, sp, #36	; 0x24
   2b9b4:	e1a04000 	mov	r4, r0
   2b9b8:	eb000b7d 	bl	2e7b4 <CUSBFunction::GetNumEndpoints() const>
   2b9bc:	e3500001 	cmp	r0, #1
   2b9c0:	0a000006 	beq	2b9e0 <CUSBStandardHub::Configure()+0x34>
   2b9c4:	e1a00004 	mov	r0, r4
   2b9c8:	e59f11d4 	ldr	r1, [pc, #468]	; 2bba4 <CUSBStandardHub::Configure()+0x1f8>
   2b9cc:	eb000bfe 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2b9d0:	e3a05000 	mov	r5, #0
   2b9d4:	e1a00005 	mov	r0, r5
   2b9d8:	e28dd024 	add	sp, sp, #36	; 0x24
   2b9dc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2b9e0:	e1a06000 	mov	r6, r0
   2b9e4:	e3a01005 	mov	r1, #5
   2b9e8:	e1a00004 	mov	r0, r4
   2b9ec:	eb000be3 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   2b9f0:	e3500000 	cmp	r0, #0
   2b9f4:	0afffff2 	beq	2b9c4 <CUSBStandardHub::Configure()+0x18>
   2b9f8:	e1d030d2 	ldrsb	r3, [r0, #2]
   2b9fc:	e3530000 	cmp	r3, #0
   2ba00:	aaffffef 	bge	2b9c4 <CUSBStandardHub::Configure()+0x18>
   2ba04:	e5d03003 	ldrb	r3, [r0, #3]
   2ba08:	e203303f 	and	r3, r3, #63	; 0x3f
   2ba0c:	e3530003 	cmp	r3, #3
   2ba10:	1affffeb 	bne	2b9c4 <CUSBStandardHub::Configure()+0x18>
   2ba14:	e1a00004 	mov	r0, r4
   2ba18:	eb000ba7 	bl	2e8bc <CUSBFunction::Configure()>
   2ba1c:	e2505000 	subs	r5, r0, #0
   2ba20:	0a000046 	beq	2bb40 <CUSBStandardHub::Configure()+0x194>
   2ba24:	e5943010 	ldr	r3, [r4, #16]
   2ba28:	e3530000 	cmp	r3, #0
   2ba2c:	0a000003 	beq	2ba40 <CUSBStandardHub::Configure()+0x94>
   2ba30:	e3a0205a 	mov	r2, #90	; 0x5a
   2ba34:	e59f116c 	ldr	r1, [pc, #364]	; 2bba8 <CUSBStandardHub::Configure()+0x1fc>
   2ba38:	e59f016c 	ldr	r0, [pc, #364]	; 2bbac <CUSBStandardHub::Configure()+0x200>
   2ba3c:	eb002d4f 	bl	36f80 <assertion_failed>
   2ba40:	e3a00009 	mov	r0, #9
   2ba44:	eb002233 	bl	34318 <operator new(unsigned int)>
   2ba48:	e5840010 	str	r0, [r4, #16]
   2ba4c:	e1a00004 	mov	r0, r4
   2ba50:	eb000b88 	bl	2e878 <CUSBFunction::GetHost() const>
   2ba54:	e1a07000 	mov	r7, r0
   2ba58:	e1a00004 	mov	r0, r4
   2ba5c:	eb000b74 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2ba60:	e3a06000 	mov	r6, #0
   2ba64:	e3a0c0a0 	mov	ip, #160	; 0xa0
   2ba68:	e3a05009 	mov	r5, #9
   2ba6c:	e5942010 	ldr	r2, [r4, #16]
   2ba70:	e1a01000 	mov	r1, r0
   2ba74:	e88d1024 	stm	sp, {r2, r5, ip}
   2ba78:	e1a00007 	mov	r0, r7
   2ba7c:	e58d600c 	str	r6, [sp, #12]
   2ba80:	e1a03006 	mov	r3, r6
   2ba84:	e3a02029 	mov	r2, #41	; 0x29
   2ba88:	ebfffc27 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   2ba8c:	e1500005 	cmp	r0, r5
   2ba90:	e1a07000 	mov	r7, r0
   2ba94:	1a00001e 	bne	2bb14 <CUSBStandardHub::Configure()+0x168>
   2ba98:	e5943010 	ldr	r3, [r4, #16]
   2ba9c:	e5d33002 	ldrb	r3, [r3, #2]
   2baa0:	e3530008 	cmp	r3, #8
   2baa4:	e5843014 	str	r3, [r4, #20]
   2baa8:	8a00002a 	bhi	2bb58 <CUSBStandardHub::Configure()+0x1ac>
   2baac:	e28d0010 	add	r0, sp, #16
   2bab0:	eb003247 	bl	383d4 <CString::CString()>
   2bab4:	e59f30f4 	ldr	r3, [pc, #244]	; 2bbb0 <CUSBStandardHub::Configure()+0x204>
   2bab8:	e59f10f4 	ldr	r1, [pc, #244]	; 2bbb4 <CUSBStandardHub::Configure()+0x208>
   2babc:	e5932000 	ldr	r2, [r3]
   2bac0:	e28d0010 	add	r0, sp, #16
   2bac4:	e282c001 	add	ip, r2, #1
   2bac8:	e583c000 	str	ip, [r3]
   2bacc:	eb0035c8 	bl	391f4 <CString::Format(char const*, ...)>
   2bad0:	eb002e7a 	bl	374c0 <CDeviceNameService::Get()>
   2bad4:	e1a05000 	mov	r5, r0
   2bad8:	e28d0010 	add	r0, sp, #16
   2badc:	eb003252 	bl	3842c <CString::operator char const*() const>
   2bae0:	e1a03006 	mov	r3, r6
   2bae4:	e1a01000 	mov	r1, r0
   2bae8:	e1a02004 	mov	r2, r4
   2baec:	e1a00005 	mov	r0, r5
   2baf0:	eb002e01 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   2baf4:	e1a00004 	mov	r0, r4
   2baf8:	ebfffde4 	bl	2b290 <CUSBStandardHub::EnumeratePorts()>
   2bafc:	e2505000 	subs	r5, r0, #0
   2bb00:	13a05001 	movne	r5, #1
   2bb04:	0a000020 	beq	2bb8c <CUSBStandardHub::Configure()+0x1e0>
   2bb08:	e28d0010 	add	r0, sp, #16
   2bb0c:	eb0031fd 	bl	38308 <CString::~CString()>
   2bb10:	eaffffaf 	b	2b9d4 <CUSBStandardHub::Configure()+0x28>
   2bb14:	eb002e95 	bl	37570 <CLogger::Get()>
   2bb18:	e59f3098 	ldr	r3, [pc, #152]	; 2bbb8 <CUSBStandardHub::Configure()+0x20c>
   2bb1c:	e3a02001 	mov	r2, #1
   2bb20:	e59f107c 	ldr	r1, [pc, #124]	; 2bba4 <CUSBStandardHub::Configure()+0x1f8>
   2bb24:	eb002f71 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2bb28:	e1a01005 	mov	r1, r5
   2bb2c:	e5940010 	ldr	r0, [r4, #16]
   2bb30:	eb0021fc 	bl	34328 <operator delete(void*, unsigned int)>
   2bb34:	e1a05006 	mov	r5, r6
   2bb38:	e5846010 	str	r6, [r4, #16]
   2bb3c:	eaffffa4 	b	2b9d4 <CUSBStandardHub::Configure()+0x28>
   2bb40:	eb002e8a 	bl	37570 <CLogger::Get()>
   2bb44:	e1a02006 	mov	r2, r6
   2bb48:	e59f306c 	ldr	r3, [pc, #108]	; 2bbbc <CUSBStandardHub::Configure()+0x210>
   2bb4c:	e59f1050 	ldr	r1, [pc, #80]	; 2bba4 <CUSBStandardHub::Configure()+0x1f8>
   2bb50:	eb002f66 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2bb54:	eaffff9e 	b	2b9d4 <CUSBStandardHub::Configure()+0x28>
   2bb58:	eb002e84 	bl	37570 <CLogger::Get()>
   2bb5c:	e5942014 	ldr	r2, [r4, #20]
   2bb60:	e59f3058 	ldr	r3, [pc, #88]	; 2bbc0 <CUSBStandardHub::Configure()+0x214>
   2bb64:	e58d2000 	str	r2, [sp]
   2bb68:	e59f1034 	ldr	r1, [pc, #52]	; 2bba4 <CUSBStandardHub::Configure()+0x1f8>
   2bb6c:	e3a02001 	mov	r2, #1
   2bb70:	eb002f5e 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2bb74:	e1a01007 	mov	r1, r7
   2bb78:	e5940010 	ldr	r0, [r4, #16]
   2bb7c:	eb0021e9 	bl	34328 <operator delete(void*, unsigned int)>
   2bb80:	e1a05006 	mov	r5, r6
   2bb84:	e5846010 	str	r6, [r4, #16]
   2bb88:	eaffff91 	b	2b9d4 <CUSBStandardHub::Configure()+0x28>
   2bb8c:	eb002e77 	bl	37570 <CLogger::Get()>
   2bb90:	e59f302c 	ldr	r3, [pc, #44]	; 2bbc4 <CUSBStandardHub::Configure()+0x218>
   2bb94:	e3a02001 	mov	r2, #1
   2bb98:	e59f1004 	ldr	r1, [pc, #4]	; 2bba4 <CUSBStandardHub::Configure()+0x1f8>
   2bb9c:	eb002f53 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2bba0:	eaffffd8 	b	2bb08 <CUSBStandardHub::Configure()+0x15c>
   2bba4:	0004ae4c 	.word	0x0004ae4c
   2bba8:	0004ae54 	.word	0x0004ae54
   2bbac:	0004b020 	.word	0x0004b020
   2bbb0:	00058ed4 	.word	0x00058ed4
   2bbb4:	0004b060 	.word	0x0004b060
   2bbb8:	0004b030 	.word	0x0004b030
   2bbbc:	0004b008 	.word	0x0004b008
   2bbc0:	0004b04c 	.word	0x0004b04c
   2bbc4:	0004b068 	.word	0x0004b068

0002bbc8 <CUSBBulkOnlyMassStorageDevice::Seek(unsigned long long)>:
   2bbc8:	e1c022f0 	strd	r2, [r0, #32]
   2bbcc:	e1a01003 	mov	r1, r3
   2bbd0:	e1a00002 	mov	r0, r2
   2bbd4:	e12fff1e 	bx	lr

0002bbd8 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()>:
   2bbd8:	e92d4070 	push	{r4, r5, r6, lr}
   2bbdc:	e5905028 	ldr	r5, [r0, #40]	; 0x28
   2bbe0:	e59f3088 	ldr	r3, [pc, #136]	; 2bc70 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()+0x98>
   2bbe4:	e3550000 	cmp	r5, #0
   2bbe8:	e1a04000 	mov	r4, r0
   2bbec:	e5803000 	str	r3, [r0]
   2bbf0:	0a000004 	beq	2bc08 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()+0x30>
   2bbf4:	e1a00005 	mov	r0, r5
   2bbf8:	eb001b2f 	bl	328bc <CPartitionManager::~CPartitionManager()>
   2bbfc:	e1a00005 	mov	r0, r5
   2bc00:	e3a01024 	mov	r1, #36	; 0x24
   2bc04:	eb0021c7 	bl	34328 <operator delete(void*, unsigned int)>
   2bc08:	e3a03000 	mov	r3, #0
   2bc0c:	e5945014 	ldr	r5, [r4, #20]
   2bc10:	e5843028 	str	r3, [r4, #40]	; 0x28
   2bc14:	e1550003 	cmp	r5, r3
   2bc18:	0a000004 	beq	2bc30 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()+0x58>
   2bc1c:	e1a00005 	mov	r0, r5
   2bc20:	ebfffb0c 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2bc24:	e1a00005 	mov	r0, r5
   2bc28:	e3a01018 	mov	r1, #24
   2bc2c:	eb0021bd 	bl	34328 <operator delete(void*, unsigned int)>
   2bc30:	e3a03000 	mov	r3, #0
   2bc34:	e5945010 	ldr	r5, [r4, #16]
   2bc38:	e5843014 	str	r3, [r4, #20]
   2bc3c:	e1550003 	cmp	r5, r3
   2bc40:	0a000004 	beq	2bc58 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()+0x80>
   2bc44:	e1a00005 	mov	r0, r5
   2bc48:	ebfffb02 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2bc4c:	e1a00005 	mov	r0, r5
   2bc50:	e3a01018 	mov	r1, #24
   2bc54:	eb0021b3 	bl	34328 <operator delete(void*, unsigned int)>
   2bc58:	e3a03000 	mov	r3, #0
   2bc5c:	e1a00004 	mov	r0, r4
   2bc60:	e5843010 	str	r3, [r4, #16]
   2bc64:	eb000a26 	bl	2e504 <CUSBFunction::~CUSBFunction()>
   2bc68:	e1a00004 	mov	r0, r4
   2bc6c:	e8bd8070 	pop	{r4, r5, r6, pc}
   2bc70:	0004b088 	.word	0x0004b088

0002bc74 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()>:
   2bc74:	e92d4010 	push	{r4, lr}
   2bc78:	e1a04000 	mov	r4, r0
   2bc7c:	ebffffd5 	bl	2bbd8 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()>
   2bc80:	e1a00004 	mov	r0, r4
   2bc84:	e3a01030 	mov	r1, #48	; 0x30
   2bc88:	eb0021a6 	bl	34328 <operator delete(void*, unsigned int)>
   2bc8c:	e1a00004 	mov	r0, r4
   2bc90:	e8bd8010 	pop	{r4, pc}

0002bc94 <CUSBBulkOnlyMassStorageDevice::CUSBBulkOnlyMassStorageDevice(CUSBFunction*)>:
   2bc94:	e92d4010 	push	{r4, lr}
   2bc98:	e1a04000 	mov	r4, r0
   2bc9c:	eb000a67 	bl	2e640 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   2bca0:	e3a03000 	mov	r3, #0
   2bca4:	e3a00000 	mov	r0, #0
   2bca8:	e3a01000 	mov	r1, #0
   2bcac:	e59f2020 	ldr	r2, [pc, #32]	; 2bcd4 <CUSBBulkOnlyMassStorageDevice::CUSBBulkOnlyMassStorageDevice(CUSBFunction*)+0x40>
   2bcb0:	e1c402f0 	strd	r0, [r4, #32]
   2bcb4:	e5842000 	str	r2, [r4]
   2bcb8:	e5843010 	str	r3, [r4, #16]
   2bcbc:	e5843014 	str	r3, [r4, #20]
   2bcc0:	e5843018 	str	r3, [r4, #24]
   2bcc4:	e584301c 	str	r3, [r4, #28]
   2bcc8:	e5843028 	str	r3, [r4, #40]	; 0x28
   2bccc:	e1a00004 	mov	r0, r4
   2bcd0:	e8bd8010 	pop	{r4, pc}
   2bcd4:	0004b088 	.word	0x0004b088

0002bcd8 <CUSBBulkOnlyMassStorageDevice::GetCapacity() const>:
   2bcd8:	e590001c 	ldr	r0, [r0, #28]
   2bcdc:	e12fff1e 	bx	lr

0002bce0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)>:
   2bce0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   2bce4:	e2519000 	subs	r9, r1, #0
   2bce8:	e24dd034 	sub	sp, sp, #52	; 0x34
   2bcec:	e1a04000 	mov	r4, r0
   2bcf0:	e1a08002 	mov	r8, r2
   2bcf4:	e1a07003 	mov	r7, r3
   2bcf8:	e59d5050 	ldr	r5, [sp, #80]	; 0x50
   2bcfc:	e59d6054 	ldr	r6, [sp, #84]	; 0x54
   2bd00:	0a000061 	beq	2be8c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x1ac>
   2bd04:	e2483006 	sub	r3, r8, #6
   2bd08:	e353000a 	cmp	r3, #10
   2bd0c:	8a00004f 	bhi	2be50 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x170>
   2bd10:	e2973000 	adds	r3, r7, #0
   2bd14:	13a03001 	movne	r3, #1
   2bd18:	e3550000 	cmp	r5, #0
   2bd1c:	03a03001 	moveq	r3, #1
   2bd20:	e3530000 	cmp	r3, #0
   2bd24:	0a00004e 	beq	2be64 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x184>
   2bd28:	e3a0201f 	mov	r2, #31
   2bd2c:	e3a01000 	mov	r1, #0
   2bd30:	e28d0010 	add	r0, sp, #16
   2bd34:	eb00250e 	bl	35174 <memset>
   2bd38:	e3560000 	cmp	r6, #0
   2bd3c:	03a0e000 	moveq	lr, #0
   2bd40:	13a0e080 	movne	lr, #128	; 0x80
   2bd44:	e5dd001e 	ldrb	r0, [sp, #30]
   2bd48:	e5943018 	ldr	r3, [r4, #24]
   2bd4c:	e3c0201f 	bic	r2, r0, #31
   2bd50:	e5ddc01d 	ldrb	ip, [sp, #29]
   2bd54:	e208001f 	and	r0, r8, #31
   2bd58:	e2833001 	add	r3, r3, #1
   2bd5c:	e1800002 	orr	r0, r0, r2
   2bd60:	e1a02008 	mov	r2, r8
   2bd64:	e59f81e4 	ldr	r8, [pc, #484]	; 2bf50 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x270>
   2bd68:	e5843018 	str	r3, [r4, #24]
   2bd6c:	e3ccc00f 	bic	ip, ip, #15
   2bd70:	e1a01009 	mov	r1, r9
   2bd74:	e5cd001e 	strb	r0, [sp, #30]
   2bd78:	e28d001f 	add	r0, sp, #31
   2bd7c:	e5cde01c 	strb	lr, [sp, #28]
   2bd80:	e58d3014 	str	r3, [sp, #20]
   2bd84:	e5cdc01d 	strb	ip, [sp, #29]
   2bd88:	e58d8010 	str	r8, [sp, #16]
   2bd8c:	e58d5018 	str	r5, [sp, #24]
   2bd90:	eb002610 	bl	355d8 <memcpy>
   2bd94:	e1a00004 	mov	r0, r4
   2bd98:	eb000ab6 	bl	2e878 <CUSBFunction::GetHost() const>
   2bd9c:	e2508000 	subs	r8, r0, #0
   2bda0:	0a000034 	beq	2be78 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x198>
   2bda4:	e28d2010 	add	r2, sp, #16
   2bda8:	e3a0301f 	mov	r3, #31
   2bdac:	e5941014 	ldr	r1, [r4, #20]
   2bdb0:	e1a00008 	mov	r0, r8
   2bdb4:	ebfffb90 	bl	2abfc <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int)>
   2bdb8:	e3500000 	cmp	r0, #0
   2bdbc:	ba000055 	blt	2bf18 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x238>
   2bdc0:	e3550000 	cmp	r5, #0
   2bdc4:	e5941010 	ldr	r1, [r4, #16]
   2bdc8:	0a000009 	beq	2bdf4 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x114>
   2bdcc:	e5940014 	ldr	r0, [r4, #20]
   2bdd0:	e3560000 	cmp	r6, #0
   2bdd4:	01a01000 	moveq	r1, r0
   2bdd8:	e1a03005 	mov	r3, r5
   2bddc:	e1a02007 	mov	r2, r7
   2bde0:	e1a00008 	mov	r0, r8
   2bde4:	ebfffb84 	bl	2abfc <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int)>
   2bde8:	e2505000 	subs	r5, r0, #0
   2bdec:	ba000050 	blt	2bf34 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x254>
   2bdf0:	e5941010 	ldr	r1, [r4, #16]
   2bdf4:	e1a00008 	mov	r0, r8
   2bdf8:	e3a0300d 	mov	r3, #13
   2bdfc:	e1a0200d 	mov	r2, sp
   2be00:	ebfffb7d 	bl	2abfc <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int)>
   2be04:	e350000d 	cmp	r0, #13
   2be08:	1a000024 	bne	2bea0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x1c0>
   2be0c:	e59f3140 	ldr	r3, [pc, #320]	; 2bf54 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x274>
   2be10:	e59d2000 	ldr	r2, [sp]
   2be14:	e1520003 	cmp	r2, r3
   2be18:	1a000029 	bne	2bec4 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x1e4>
   2be1c:	e5943018 	ldr	r3, [r4, #24]
   2be20:	e59d2004 	ldr	r2, [sp, #4]
   2be24:	e1520003 	cmp	r2, r3
   2be28:	1a00002c 	bne	2bee0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x200>
   2be2c:	e5dd300c 	ldrb	r3, [sp, #12]
   2be30:	e3530000 	cmp	r3, #0
   2be34:	1a000020 	bne	2bebc <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x1dc>
   2be38:	e59d3008 	ldr	r3, [sp, #8]
   2be3c:	e3530000 	cmp	r3, #0
   2be40:	1a00002d 	bne	2befc <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x21c>
   2be44:	e1a00005 	mov	r0, r5
   2be48:	e28dd034 	add	sp, sp, #52	; 0x34
   2be4c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   2be50:	e59f2100 	ldr	r2, [pc, #256]	; 2bf58 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x278>
   2be54:	e59f1100 	ldr	r1, [pc, #256]	; 2bf5c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x27c>
   2be58:	e59f0100 	ldr	r0, [pc, #256]	; 2bf60 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x280>
   2be5c:	eb002c47 	bl	36f80 <assertion_failed>
   2be60:	eaffffaa 	b	2bd10 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x30>
   2be64:	e59f20f8 	ldr	r2, [pc, #248]	; 2bf64 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x284>
   2be68:	e59f10ec 	ldr	r1, [pc, #236]	; 2bf5c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x27c>
   2be6c:	e59f00f4 	ldr	r0, [pc, #244]	; 2bf68 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x288>
   2be70:	eb002c42 	bl	36f80 <assertion_failed>
   2be74:	eaffffab 	b	2bd28 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x48>
   2be78:	e59f20ec 	ldr	r2, [pc, #236]	; 2bf6c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x28c>
   2be7c:	e59f10d8 	ldr	r1, [pc, #216]	; 2bf5c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x27c>
   2be80:	e59f00e8 	ldr	r0, [pc, #232]	; 2bf70 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x290>
   2be84:	eb002c3d 	bl	36f80 <assertion_failed>
   2be88:	eaffffc5 	b	2bda4 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0xc4>
   2be8c:	e59f20e0 	ldr	r2, [pc, #224]	; 2bf74 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x294>
   2be90:	e59f10c4 	ldr	r1, [pc, #196]	; 2bf5c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x27c>
   2be94:	e59f00dc 	ldr	r0, [pc, #220]	; 2bf78 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x298>
   2be98:	eb002c38 	bl	36f80 <assertion_failed>
   2be9c:	eaffff98 	b	2bd04 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x24>
   2bea0:	eb002db2 	bl	37570 <CLogger::Get()>
   2bea4:	e59f30d0 	ldr	r3, [pc, #208]	; 2bf7c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x29c>
   2bea8:	e3a02001 	mov	r2, #1
   2beac:	e59f10cc 	ldr	r1, [pc, #204]	; 2bf80 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2a0>
   2beb0:	eb002e8e 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2beb4:	e3e05000 	mvn	r5, #0
   2beb8:	eaffffe1 	b	2be44 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x164>
   2bebc:	e3e05000 	mvn	r5, #0
   2bec0:	eaffffdf 	b	2be44 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x164>
   2bec4:	eb002da9 	bl	37570 <CLogger::Get()>
   2bec8:	e59f30b4 	ldr	r3, [pc, #180]	; 2bf84 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2a4>
   2becc:	e3a02001 	mov	r2, #1
   2bed0:	e59f10a8 	ldr	r1, [pc, #168]	; 2bf80 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2a0>
   2bed4:	eb002e85 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2bed8:	e3e05000 	mvn	r5, #0
   2bedc:	eaffffd8 	b	2be44 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x164>
   2bee0:	eb002da2 	bl	37570 <CLogger::Get()>
   2bee4:	e59f309c 	ldr	r3, [pc, #156]	; 2bf88 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2a8>
   2bee8:	e3a02001 	mov	r2, #1
   2beec:	e59f108c 	ldr	r1, [pc, #140]	; 2bf80 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2a0>
   2bef0:	eb002e7e 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2bef4:	e3e05000 	mvn	r5, #0
   2bef8:	eaffffd1 	b	2be44 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x164>
   2befc:	eb002d9b 	bl	37570 <CLogger::Get()>
   2bf00:	e59f3084 	ldr	r3, [pc, #132]	; 2bf8c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2ac>
   2bf04:	e3a02001 	mov	r2, #1
   2bf08:	e59f1070 	ldr	r1, [pc, #112]	; 2bf80 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2a0>
   2bf0c:	eb002e77 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2bf10:	e3e05000 	mvn	r5, #0
   2bf14:	eaffffca 	b	2be44 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x164>
   2bf18:	eb002d94 	bl	37570 <CLogger::Get()>
   2bf1c:	e59f306c 	ldr	r3, [pc, #108]	; 2bf90 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2b0>
   2bf20:	e3a02001 	mov	r2, #1
   2bf24:	e59f1054 	ldr	r1, [pc, #84]	; 2bf80 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2a0>
   2bf28:	eb002e70 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2bf2c:	e3e05000 	mvn	r5, #0
   2bf30:	eaffffc3 	b	2be44 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x164>
   2bf34:	eb002d8d 	bl	37570 <CLogger::Get()>
   2bf38:	e59f3054 	ldr	r3, [pc, #84]	; 2bf94 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2b4>
   2bf3c:	e3a02001 	mov	r2, #1
   2bf40:	e59f1038 	ldr	r1, [pc, #56]	; 2bf80 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x2a0>
   2bf44:	eb002e69 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2bf48:	e3e05000 	mvn	r5, #0
   2bf4c:	eaffffbc 	b	2be44 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)+0x164>
   2bf50:	43425355 	.word	0x43425355
   2bf54:	53425355 	.word	0x53425355
   2bf58:	00000216 	.word	0x00000216
   2bf5c:	0004b0ac 	.word	0x0004b0ac
   2bf60:	0004b0d0 	.word	0x0004b0d0
   2bf64:	00000217 	.word	0x00000217
   2bf68:	0004b0f4 	.word	0x0004b0f4
   2bf6c:	00000226 	.word	0x00000226
   2bf70:	0004ae68 	.word	0x0004ae68
   2bf74:	00000215 	.word	0x00000215
   2bf78:	0004b0c0 	.word	0x0004b0c0
   2bf7c:	0004b140 	.word	0x0004b140
   2bf80:	0004b0a4 	.word	0x0004b0a4
   2bf84:	0004b154 	.word	0x0004b154
   2bf88:	0004b16c 	.word	0x0004b16c
   2bf8c:	0004b180 	.word	0x0004b180
   2bf90:	0004b114 	.word	0x0004b114
   2bf94:	0004b128 	.word	0x0004b128

0002bf98 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)>:
   2bf98:	e92d4df0 	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bf9c:	e2518000 	subs	r8, r1, #0
   2bfa0:	e24dd018 	sub	sp, sp, #24
   2bfa4:	e1a05000 	mov	r5, r0
   2bfa8:	e1a04002 	mov	r4, r2
   2bfac:	0a00002f 	beq	2c070 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0xd8>
   2bfb0:	e1c502d0 	ldrd	r0, [r5, #32]
   2bfb4:	e3a03000 	mov	r3, #0
   2bfb8:	e59f20e8 	ldr	r2, [pc, #232]	; 2c0a8 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0x110>
   2bfbc:	e003b001 	and	fp, r3, r1
   2bfc0:	e002a000 	and	sl, r2, r0
   2bfc4:	e19a300b 	orrs	r3, sl, fp
   2bfc8:	e3e06000 	mvn	r6, #0
   2bfcc:	13a03001 	movne	r3, #1
   2bfd0:	03a03000 	moveq	r3, #0
   2bfd4:	e59f70cc 	ldr	r7, [pc, #204]	; 2c0a8 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0x110>
   2bfd8:	e1510007 	cmp	r1, r7
   2bfdc:	01500006 	cmpeq	r0, r6
   2bfe0:	83833001 	orrhi	r3, r3, #1
   2bfe4:	e3530000 	cmp	r3, #0
   2bfe8:	1a000025 	bne	2c084 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0xec>
   2bfec:	e1a0cb84 	lsl	ip, r4, #23
   2bff0:	e1a0cbac 	lsr	ip, ip, #23
   2bff4:	e1a034a0 	lsr	r3, r0, #9
   2bff8:	e35c0000 	cmp	ip, #0
   2bffc:	e1833b81 	orr	r3, r3, r1, lsl #23
   2c000:	1a00001f 	bne	2c084 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0xec>
   2c004:	e3a06001 	mov	r6, #1
   2c008:	e3a0e028 	mov	lr, #40	; 0x28
   2c00c:	e1a014a4 	lsr	r1, r4, #9
   2c010:	e6bf2f33 	rev	r2, r3
   2c014:	e6bf1fb1 	rev16	r1, r1
   2c018:	e6ff1071 	uxth	r1, r1
   2c01c:	e1cd20be 	strh	r2, [sp, #14]
   2c020:	e1a02822 	lsr	r2, r2, #16
   2c024:	e1cd21b0 	strh	r2, [sp, #16]
   2c028:	e5cdc012 	strb	ip, [sp, #18]
   2c02c:	e5cdc015 	strb	ip, [sp, #21]
   2c030:	e5cd1013 	strb	r1, [sp, #19]
   2c034:	e1a0c421 	lsr	ip, r1, #8
   2c038:	e58d4000 	str	r4, [sp]
   2c03c:	e1a03008 	mov	r3, r8
   2c040:	e1a00005 	mov	r0, r5
   2c044:	e58d6004 	str	r6, [sp, #4]
   2c048:	e3a0200a 	mov	r2, #10
   2c04c:	e28d100c 	add	r1, sp, #12
   2c050:	e5cdc014 	strb	ip, [sp, #20]
   2c054:	e1cde0bc 	strh	lr, [sp, #12]
   2c058:	ebffff20 	bl	2bce0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)>
   2c05c:	e1500004 	cmp	r0, r4
   2c060:	1a000009 	bne	2c08c <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0xf4>
   2c064:	e1a00004 	mov	r0, r4
   2c068:	e28dd018 	add	sp, sp, #24
   2c06c:	e8bd8df0 	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c070:	e59f2034 	ldr	r2, [pc, #52]	; 2c0ac <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0x114>
   2c074:	e59f1034 	ldr	r1, [pc, #52]	; 2c0b0 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0x118>
   2c078:	e59f0034 	ldr	r0, [pc, #52]	; 2c0b4 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0x11c>
   2c07c:	eb002bbf 	bl	36f80 <assertion_failed>
   2c080:	eaffffca 	b	2bfb0 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0x18>
   2c084:	e3e04000 	mvn	r4, #0
   2c088:	eafffff5 	b	2c064 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0xcc>
   2c08c:	eb002d37 	bl	37570 <CLogger::Get()>
   2c090:	e1a02006 	mov	r2, r6
   2c094:	e59f301c 	ldr	r3, [pc, #28]	; 2c0b8 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0x120>
   2c098:	e59f101c 	ldr	r1, [pc, #28]	; 2c0bc <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0x124>
   2c09c:	eb002e13 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c0a0:	e3e04000 	mvn	r4, #0
   2c0a4:	eaffffee 	b	2c064 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)+0xcc>
   2c0a8:	000001ff 	.word	0x000001ff
   2c0ac:	000001ca 	.word	0x000001ca
   2c0b0:	0004b0ac 	.word	0x0004b0ac
   2c0b4:	0004b104 	.word	0x0004b104
   2c0b8:	0004b198 	.word	0x0004b198
   2c0bc:	0004b0a4 	.word	0x0004b0a4

0002c0c0 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)>:
   2c0c0:	e92d4df0 	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c0c4:	e2518000 	subs	r8, r1, #0
   2c0c8:	e24dd018 	sub	sp, sp, #24
   2c0cc:	e1a05000 	mov	r5, r0
   2c0d0:	e1a04002 	mov	r4, r2
   2c0d4:	0a00002d 	beq	2c190 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0xd0>
   2c0d8:	e1c502d0 	ldrd	r0, [r5, #32]
   2c0dc:	e3a03000 	mov	r3, #0
   2c0e0:	e59f20e0 	ldr	r2, [pc, #224]	; 2c1c8 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0x108>
   2c0e4:	e003b001 	and	fp, r3, r1
   2c0e8:	e002a000 	and	sl, r2, r0
   2c0ec:	e19a300b 	orrs	r3, sl, fp
   2c0f0:	e3e06000 	mvn	r6, #0
   2c0f4:	13a03001 	movne	r3, #1
   2c0f8:	03a03000 	moveq	r3, #0
   2c0fc:	e59f70c4 	ldr	r7, [pc, #196]	; 2c1c8 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0x108>
   2c100:	e1510007 	cmp	r1, r7
   2c104:	01500006 	cmpeq	r0, r6
   2c108:	83833001 	orrhi	r3, r3, #1
   2c10c:	e3530000 	cmp	r3, #0
   2c110:	1a000023 	bne	2c1a4 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0xe4>
   2c114:	e1a0cb84 	lsl	ip, r4, #23
   2c118:	e1a0cbac 	lsr	ip, ip, #23
   2c11c:	e1a034a0 	lsr	r3, r0, #9
   2c120:	e35c0000 	cmp	ip, #0
   2c124:	e1833b81 	orr	r3, r3, r1, lsl #23
   2c128:	1a00001d 	bne	2c1a4 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0xe4>
   2c12c:	e1a014a4 	lsr	r1, r4, #9
   2c130:	e6bf2f33 	rev	r2, r3
   2c134:	e6bf1fb1 	rev16	r1, r1
   2c138:	e6ff1071 	uxth	r1, r1
   2c13c:	e59fe088 	ldr	lr, [pc, #136]	; 2c1cc <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0x10c>
   2c140:	e1cd20be 	strh	r2, [sp, #14]
   2c144:	e1a02822 	lsr	r2, r2, #16
   2c148:	e88d1010 	stm	sp, {r4, ip}
   2c14c:	e1cd21b0 	strh	r2, [sp, #16]
   2c150:	e5cdc012 	strb	ip, [sp, #18]
   2c154:	e5cdc015 	strb	ip, [sp, #21]
   2c158:	e5cd1013 	strb	r1, [sp, #19]
   2c15c:	e1a0c421 	lsr	ip, r1, #8
   2c160:	e1a03008 	mov	r3, r8
   2c164:	e1a00005 	mov	r0, r5
   2c168:	e3a0200a 	mov	r2, #10
   2c16c:	e28d100c 	add	r1, sp, #12
   2c170:	e5cdc014 	strb	ip, [sp, #20]
   2c174:	e1cde0bc 	strh	lr, [sp, #12]
   2c178:	ebfffed8 	bl	2bce0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)>
   2c17c:	e3500000 	cmp	r0, #0
   2c180:	a1a00004 	movge	r0, r4
   2c184:	ba000008 	blt	2c1ac <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0xec>
   2c188:	e28dd018 	add	sp, sp, #24
   2c18c:	e8bd8df0 	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c190:	e59f2038 	ldr	r2, [pc, #56]	; 2c1d0 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0x110>
   2c194:	e59f1038 	ldr	r1, [pc, #56]	; 2c1d4 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0x114>
   2c198:	e59f0038 	ldr	r0, [pc, #56]	; 2c1d8 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0x118>
   2c19c:	eb002b77 	bl	36f80 <assertion_failed>
   2c1a0:	eaffffcc 	b	2c0d8 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0x18>
   2c1a4:	e3e00000 	mvn	r0, #0
   2c1a8:	eafffff6 	b	2c188 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0xc8>
   2c1ac:	eb002cef 	bl	37570 <CLogger::Get()>
   2c1b0:	e59f3024 	ldr	r3, [pc, #36]	; 2c1dc <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0x11c>
   2c1b4:	e3a02001 	mov	r2, #1
   2c1b8:	e59f1020 	ldr	r1, [pc, #32]	; 2c1e0 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0x120>
   2c1bc:	eb002dcb 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c1c0:	e3e00000 	mvn	r0, #0
   2c1c4:	eaffffef 	b	2c188 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)+0xc8>
   2c1c8:	000001ff 	.word	0x000001ff
   2c1cc:	0000082a 	.word	0x0000082a
   2c1d0:	000001ef 	.word	0x000001ef
   2c1d4:	0004b0ac 	.word	0x0004b0ac
   2c1d8:	0004b104 	.word	0x0004b104
   2c1dc:	0004b1a8 	.word	0x0004b1a8
   2c1e0:	0004b0a4 	.word	0x0004b0a4

0002c1e4 <CUSBBulkOnlyMassStorageDevice::Reset()>:
   2c1e4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2c1e8:	e24dd014 	sub	sp, sp, #20
   2c1ec:	e1a05000 	mov	r5, r0
   2c1f0:	eb0009a0 	bl	2e878 <CUSBFunction::GetHost() const>
   2c1f4:	e2506000 	subs	r6, r0, #0
   2c1f8:	0a00002e 	beq	2c2b8 <CUSBBulkOnlyMassStorageDevice::Reset()+0xd4>
   2c1fc:	e1a00005 	mov	r0, r5
   2c200:	eb00098b 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2c204:	e3a04000 	mov	r4, #0
   2c208:	e1a01000 	mov	r1, r0
   2c20c:	e58d400c 	str	r4, [sp, #12]
   2c210:	e58d4008 	str	r4, [sp, #8]
   2c214:	e58d4004 	str	r4, [sp, #4]
   2c218:	e58d4000 	str	r4, [sp]
   2c21c:	e3a030ff 	mov	r3, #255	; 0xff
   2c220:	e3a02021 	mov	r2, #33	; 0x21
   2c224:	e1a00006 	mov	r0, r6
   2c228:	ebfffa0e 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2c22c:	e1500004 	cmp	r0, r4
   2c230:	ba000025 	blt	2c2cc <CUSBBulkOnlyMassStorageDevice::Reset()+0xe8>
   2c234:	e1a00005 	mov	r0, r5
   2c238:	eb00097d 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2c23c:	e3a07001 	mov	r7, #1
   2c240:	e1a01000 	mov	r1, r0
   2c244:	e58d400c 	str	r4, [sp, #12]
   2c248:	e58d4008 	str	r4, [sp, #8]
   2c24c:	e88d0090 	stm	sp, {r4, r7}
   2c250:	e1a03007 	mov	r3, r7
   2c254:	e3a02002 	mov	r2, #2
   2c258:	e1a00006 	mov	r0, r6
   2c25c:	ebfffa01 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2c260:	e3500000 	cmp	r0, #0
   2c264:	ba00001f 	blt	2c2e8 <CUSBBulkOnlyMassStorageDevice::Reset()+0x104>
   2c268:	e1a00005 	mov	r0, r5
   2c26c:	eb000970 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2c270:	e3a02002 	mov	r2, #2
   2c274:	e1a01000 	mov	r1, r0
   2c278:	e58d400c 	str	r4, [sp, #12]
   2c27c:	e58d4008 	str	r4, [sp, #8]
   2c280:	e58d4000 	str	r4, [sp]
   2c284:	e1a03007 	mov	r3, r7
   2c288:	e1a00006 	mov	r0, r6
   2c28c:	e58d2004 	str	r2, [sp, #4]
   2c290:	ebfff9f4 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2c294:	e3500000 	cmp	r0, #0
   2c298:	ba000019 	blt	2c304 <CUSBBulkOnlyMassStorageDevice::Reset()+0x120>
   2c29c:	e5950010 	ldr	r0, [r5, #16]
   2c2a0:	ebfff9d7 	bl	2aa04 <CUSBEndpoint::ResetPID()>
   2c2a4:	e5950014 	ldr	r0, [r5, #20]
   2c2a8:	ebfff9d5 	bl	2aa04 <CUSBEndpoint::ResetPID()>
   2c2ac:	e1a00004 	mov	r0, r4
   2c2b0:	e28dd014 	add	sp, sp, #20
   2c2b4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2c2b8:	e59f2060 	ldr	r2, [pc, #96]	; 2c320 <CUSBBulkOnlyMassStorageDevice::Reset()+0x13c>
   2c2bc:	e59f1060 	ldr	r1, [pc, #96]	; 2c324 <CUSBBulkOnlyMassStorageDevice::Reset()+0x140>
   2c2c0:	e59f0060 	ldr	r0, [pc, #96]	; 2c328 <CUSBBulkOnlyMassStorageDevice::Reset()+0x144>
   2c2c4:	eb002b2d 	bl	36f80 <assertion_failed>
   2c2c8:	eaffffcb 	b	2c1fc <CUSBBulkOnlyMassStorageDevice::Reset()+0x18>
   2c2cc:	eb002ca7 	bl	37570 <CLogger::Get()>
   2c2d0:	e59f3054 	ldr	r3, [pc, #84]	; 2c32c <CUSBBulkOnlyMassStorageDevice::Reset()+0x148>
   2c2d4:	e3a02004 	mov	r2, #4
   2c2d8:	e59f1050 	ldr	r1, [pc, #80]	; 2c330 <CUSBBulkOnlyMassStorageDevice::Reset()+0x14c>
   2c2dc:	eb002d83 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c2e0:	e3e00000 	mvn	r0, #0
   2c2e4:	eafffff1 	b	2c2b0 <CUSBBulkOnlyMassStorageDevice::Reset()+0xcc>
   2c2e8:	eb002ca0 	bl	37570 <CLogger::Get()>
   2c2ec:	e59f3040 	ldr	r3, [pc, #64]	; 2c334 <CUSBBulkOnlyMassStorageDevice::Reset()+0x150>
   2c2f0:	e3a02004 	mov	r2, #4
   2c2f4:	e59f1034 	ldr	r1, [pc, #52]	; 2c330 <CUSBBulkOnlyMassStorageDevice::Reset()+0x14c>
   2c2f8:	eb002d7c 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c2fc:	e3e00000 	mvn	r0, #0
   2c300:	eaffffea 	b	2c2b0 <CUSBBulkOnlyMassStorageDevice::Reset()+0xcc>
   2c304:	eb002c99 	bl	37570 <CLogger::Get()>
   2c308:	e59f3028 	ldr	r3, [pc, #40]	; 2c338 <CUSBBulkOnlyMassStorageDevice::Reset()+0x154>
   2c30c:	e3a02004 	mov	r2, #4
   2c310:	e59f1018 	ldr	r1, [pc, #24]	; 2c330 <CUSBBulkOnlyMassStorageDevice::Reset()+0x14c>
   2c314:	eb002d75 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c318:	e3e00000 	mvn	r0, #0
   2c31c:	eaffffe3 	b	2c2b0 <CUSBBulkOnlyMassStorageDevice::Reset()+0xcc>
   2c320:	00000265 	.word	0x00000265
   2c324:	0004b0ac 	.word	0x0004b0ac
   2c328:	0004ae68 	.word	0x0004ae68
   2c32c:	0004b1b8 	.word	0x0004b1b8
   2c330:	0004b0a4 	.word	0x0004b0a4
   2c334:	0004b1cc 	.word	0x0004b1cc
   2c338:	0004b1ec 	.word	0x0004b1ec

0002c33c <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned int)>:
   2c33c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2c340:	e1a07000 	mov	r7, r0
   2c344:	e1a08001 	mov	r8, r1
   2c348:	e1a06002 	mov	r6, r2
   2c34c:	e3a04004 	mov	r4, #4
   2c350:	e1a02006 	mov	r2, r6
   2c354:	e1a01008 	mov	r1, r8
   2c358:	e1a00007 	mov	r0, r7
   2c35c:	ebffff0d 	bl	2bf98 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)>
   2c360:	e1500006 	cmp	r0, r6
   2c364:	e1a05000 	mov	r5, r0
   2c368:	1a000001 	bne	2c374 <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned int)+0x38>
   2c36c:	e1a00005 	mov	r0, r5
   2c370:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2c374:	e1a00007 	mov	r0, r7
   2c378:	ebffff99 	bl	2c1e4 <CUSBBulkOnlyMassStorageDevice::Reset()>
   2c37c:	e3500000 	cmp	r0, #0
   2c380:	1a000003 	bne	2c394 <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned int)+0x58>
   2c384:	e2544001 	subs	r4, r4, #1
   2c388:	1afffff0 	bne	2c350 <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned int)+0x14>
   2c38c:	e1a00005 	mov	r0, r5
   2c390:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2c394:	e1a05000 	mov	r5, r0
   2c398:	eafffff3 	b	2c36c <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned int)+0x30>

0002c39c <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned int)>:
   2c39c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2c3a0:	e1a07000 	mov	r7, r0
   2c3a4:	e1a08001 	mov	r8, r1
   2c3a8:	e1a06002 	mov	r6, r2
   2c3ac:	e3a04004 	mov	r4, #4
   2c3b0:	e1a02006 	mov	r2, r6
   2c3b4:	e1a01008 	mov	r1, r8
   2c3b8:	e1a00007 	mov	r0, r7
   2c3bc:	ebffff3f 	bl	2c0c0 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)>
   2c3c0:	e1500006 	cmp	r0, r6
   2c3c4:	e1a05000 	mov	r5, r0
   2c3c8:	1a000001 	bne	2c3d4 <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned int)+0x38>
   2c3cc:	e1a00005 	mov	r0, r5
   2c3d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2c3d4:	e1a00007 	mov	r0, r7
   2c3d8:	ebffff81 	bl	2c1e4 <CUSBBulkOnlyMassStorageDevice::Reset()>
   2c3dc:	e3500000 	cmp	r0, #0
   2c3e0:	1a000003 	bne	2c3f4 <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned int)+0x58>
   2c3e4:	e2544001 	subs	r4, r4, #1
   2c3e8:	1afffff0 	bne	2c3b0 <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned int)+0x14>
   2c3ec:	e1a00005 	mov	r0, r5
   2c3f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2c3f4:	e1a05000 	mov	r5, r0
   2c3f8:	eafffff3 	b	2c3cc <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned int)+0x30>

0002c3fc <CUSBBulkOnlyMassStorageDevice::Configure()>:
   2c3fc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2c400:	e24dd064 	sub	sp, sp, #100	; 0x64
   2c404:	e1a05000 	mov	r5, r0
   2c408:	eb0008e9 	bl	2e7b4 <CUSBFunction::GetNumEndpoints() const>
   2c40c:	e3500001 	cmp	r0, #1
   2c410:	8a000004 	bhi	2c428 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2c>
   2c414:	ea0000bb 	b	2c708 <CUSBBulkOnlyMassStorageDevice::Configure()+0x30c>
   2c418:	e5d43003 	ldrb	r3, [r4, #3]
   2c41c:	e203303f 	and	r3, r3, #63	; 0x3f
   2c420:	e3530002 	cmp	r3, #2
   2c424:	0a00008b 	beq	2c658 <CUSBBulkOnlyMassStorageDevice::Configure()+0x25c>
   2c428:	e3a01005 	mov	r1, #5
   2c42c:	e1a00005 	mov	r0, r5
   2c430:	eb000952 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   2c434:	e2504000 	subs	r4, r0, #0
   2c438:	1afffff6 	bne	2c418 <CUSBBulkOnlyMassStorageDevice::Configure()+0x1c>
   2c43c:	e5953010 	ldr	r3, [r5, #16]
   2c440:	e1a00005 	mov	r0, r5
   2c444:	e3530000 	cmp	r3, #0
   2c448:	0a000093 	beq	2c69c <CUSBBulkOnlyMassStorageDevice::Configure()+0x2a0>
   2c44c:	e5953014 	ldr	r3, [r5, #20]
   2c450:	e3530000 	cmp	r3, #0
   2c454:	0a000090 	beq	2c69c <CUSBBulkOnlyMassStorageDevice::Configure()+0x2a0>
   2c458:	eb000917 	bl	2e8bc <CUSBFunction::Configure()>
   2c45c:	e2506000 	subs	r6, r0, #0
   2c460:	0a0000af 	beq	2c724 <CUSBBulkOnlyMassStorageDevice::Configure()+0x328>
   2c464:	e3a00024 	mov	r0, #36	; 0x24
   2c468:	e3a06001 	mov	r6, #1
   2c46c:	e3a0c012 	mov	ip, #18
   2c470:	e88d0041 	stm	sp, {r0, r6}
   2c474:	e1cd01b0 	strh	r0, [sp, #16]
   2c478:	e28d303c 	add	r3, sp, #60	; 0x3c
   2c47c:	e3a02006 	mov	r2, #6
   2c480:	e28d100c 	add	r1, sp, #12
   2c484:	e1a00005 	mov	r0, r5
   2c488:	e58dc00c 	str	ip, [sp, #12]
   2c48c:	ebfffe13 	bl	2bce0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)>
   2c490:	e3500024 	cmp	r0, #36	; 0x24
   2c494:	1a000094 	bne	2c6ec <CUSBBulkOnlyMassStorageDevice::Configure()+0x2f0>
   2c498:	e5dd303c 	ldrb	r3, [sp, #60]	; 0x3c
   2c49c:	e213301f 	ands	r3, r3, #31
   2c4a0:	01a04003 	moveq	r4, r3
   2c4a4:	03a06063 	moveq	r6, #99	; 0x63
   2c4a8:	0a00000e 	beq	2c4e8 <CUSBBulkOnlyMassStorageDevice::Configure()+0xec>
   2c4ac:	ea0000ab 	b	2c760 <CUSBBulkOnlyMassStorageDevice::Configure()+0x364>
   2c4b0:	e3a00012 	mov	r0, #18
   2c4b4:	e3a07001 	mov	r7, #1
   2c4b8:	e3a0c003 	mov	ip, #3
   2c4bc:	e88d0081 	stm	sp, {r0, r7}
   2c4c0:	e1cd02b0 	strh	r0, [sp, #32]
   2c4c4:	e3a02006 	mov	r2, #6
   2c4c8:	e28d101c 	add	r1, sp, #28
   2c4cc:	e1a00005 	mov	r0, r5
   2c4d0:	e58dc01c 	str	ip, [sp, #28]
   2c4d4:	ebfffe01 	bl	2bce0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)>
   2c4d8:	e3500000 	cmp	r0, #0
   2c4dc:	ba000098 	blt	2c744 <CUSBBulkOnlyMassStorageDevice::Configure()+0x348>
   2c4e0:	e2566001 	subs	r6, r6, #1
   2c4e4:	0a0000a7 	beq	2c788 <CUSBBulkOnlyMassStorageDevice::Configure()+0x38c>
   2c4e8:	eb002312 	bl	35138 <CTimer::Get()>
   2c4ec:	e3a00064 	mov	r0, #100	; 0x64
   2c4f0:	eb0022d1 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   2c4f4:	e3a03000 	mov	r3, #0
   2c4f8:	e58d4004 	str	r4, [sp, #4]
   2c4fc:	e58d4000 	str	r4, [sp]
   2c500:	e3a02006 	mov	r2, #6
   2c504:	e28d1014 	add	r1, sp, #20
   2c508:	e1a00005 	mov	r0, r5
   2c50c:	e58d4014 	str	r4, [sp, #20]
   2c510:	e1cd41b8 	strh	r4, [sp, #24]
   2c514:	ebfffdf1 	bl	2bce0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)>
   2c518:	e3500000 	cmp	r0, #0
   2c51c:	e28d3028 	add	r3, sp, #40	; 0x28
   2c520:	baffffe2 	blt	2c4b0 <CUSBBulkOnlyMassStorageDevice::Configure()+0xb4>
   2c524:	e3a02008 	mov	r2, #8
   2c528:	e3a06001 	mov	r6, #1
   2c52c:	e3a0c025 	mov	ip, #37	; 0x25
   2c530:	e88d0044 	stm	sp, {r2, r6}
   2c534:	e28d3014 	add	r3, sp, #20
   2c538:	e28d101c 	add	r1, sp, #28
   2c53c:	e3a0200a 	mov	r2, #10
   2c540:	e1a00005 	mov	r0, r5
   2c544:	e58d4020 	str	r4, [sp, #32]
   2c548:	e1cd42b4 	strh	r4, [sp, #36]	; 0x24
   2c54c:	e58dc01c 	str	ip, [sp, #28]
   2c550:	ebfffde2 	bl	2bce0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, int)>
   2c554:	e3500008 	cmp	r0, #8
   2c558:	1a000090 	bne	2c7a0 <CUSBBulkOnlyMassStorageDevice::Configure()+0x3a4>
   2c55c:	e59d4018 	ldr	r4, [sp, #24]
   2c560:	e6bf4f34 	rev	r4, r4
   2c564:	e3540c02 	cmp	r4, #512	; 0x200
   2c568:	1a000093 	bne	2c7bc <CUSBBulkOnlyMassStorageDevice::Configure()+0x3c0>
   2c56c:	e59d3014 	ldr	r3, [sp, #20]
   2c570:	e6bf3f33 	rev	r3, r3
   2c574:	e3730001 	cmn	r3, #1
   2c578:	e585301c 	str	r3, [r5, #28]
   2c57c:	0a000096 	beq	2c7dc <CUSBBulkOnlyMassStorageDevice::Configure()+0x3e0>
   2c580:	e2833001 	add	r3, r3, #1
   2c584:	e585301c 	str	r3, [r5, #28]
   2c588:	eb002bf8 	bl	37570 <CLogger::Get()>
   2c58c:	e595201c 	ldr	r2, [r5, #28]
   2c590:	e59f3260 	ldr	r3, [pc, #608]	; 2c7f8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x3fc>
   2c594:	e1a025a2 	lsr	r2, r2, #11
   2c598:	e59f125c 	ldr	r1, [pc, #604]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c59c:	e58d2000 	str	r2, [sp]
   2c5a0:	e59f4258 	ldr	r4, [pc, #600]	; 2c800 <CUSBBulkOnlyMassStorageDevice::Configure()+0x404>
   2c5a4:	e3a02004 	mov	r2, #4
   2c5a8:	eb002cd0 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c5ac:	e28d0028 	add	r0, sp, #40	; 0x28
   2c5b0:	eb002f87 	bl	383d4 <CString::CString()>
   2c5b4:	e28d0028 	add	r0, sp, #40	; 0x28
   2c5b8:	e5942000 	ldr	r2, [r4]
   2c5bc:	e59f1240 	ldr	r1, [pc, #576]	; 2c804 <CUSBBulkOnlyMassStorageDevice::Configure()+0x408>
   2c5c0:	eb00330b 	bl	391f4 <CString::Format(char const*, ...)>
   2c5c4:	e5953028 	ldr	r3, [r5, #40]	; 0x28
   2c5c8:	e3530000 	cmp	r3, #0
   2c5cc:	0a000003 	beq	2c5e0 <CUSBBulkOnlyMassStorageDevice::Configure()+0x1e4>
   2c5d0:	e3a02f5f 	mov	r2, #380	; 0x17c
   2c5d4:	e59f122c 	ldr	r1, [pc, #556]	; 2c808 <CUSBBulkOnlyMassStorageDevice::Configure()+0x40c>
   2c5d8:	e59f022c 	ldr	r0, [pc, #556]	; 2c80c <CUSBBulkOnlyMassStorageDevice::Configure()+0x410>
   2c5dc:	eb002a67 	bl	36f80 <assertion_failed>
   2c5e0:	e28d0028 	add	r0, sp, #40	; 0x28
   2c5e4:	eb002f90 	bl	3842c <CString::operator char const*() const>
   2c5e8:	e1a07000 	mov	r7, r0
   2c5ec:	e3a00024 	mov	r0, #36	; 0x24
   2c5f0:	eb001f48 	bl	34318 <operator new(unsigned int)>
   2c5f4:	e1a06000 	mov	r6, r0
   2c5f8:	e1a02007 	mov	r2, r7
   2c5fc:	e1a01005 	mov	r1, r5
   2c600:	eb0018a1 	bl	3288c <CPartitionManager::CPartitionManager(CDevice*, char const*)>
   2c604:	e5856028 	str	r6, [r5, #40]	; 0x28
   2c608:	e1a00006 	mov	r0, r6
   2c60c:	eb0018bd 	bl	32908 <CPartitionManager::Initialize()>
   2c610:	e2506000 	subs	r6, r0, #0
   2c614:	0a00000c 	beq	2c64c <CUSBBulkOnlyMassStorageDevice::Configure()+0x250>
   2c618:	eb002ba8 	bl	374c0 <CDeviceNameService::Get()>
   2c61c:	e1a07000 	mov	r7, r0
   2c620:	e28d0028 	add	r0, sp, #40	; 0x28
   2c624:	eb002f80 	bl	3842c <CString::operator char const*() const>
   2c628:	e3a06001 	mov	r6, #1
   2c62c:	e1a01000 	mov	r1, r0
   2c630:	e1a03006 	mov	r3, r6
   2c634:	e1a02005 	mov	r2, r5
   2c638:	e1a00007 	mov	r0, r7
   2c63c:	eb002b2e 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   2c640:	e5943000 	ldr	r3, [r4]
   2c644:	e0833006 	add	r3, r3, r6
   2c648:	e5843000 	str	r3, [r4]
   2c64c:	e28d0028 	add	r0, sp, #40	; 0x28
   2c650:	eb002f2c 	bl	38308 <CString::~CString()>
   2c654:	ea000013 	b	2c6a8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2ac>
   2c658:	e1d430d2 	ldrsb	r3, [r4, #2]
   2c65c:	e3530000 	cmp	r3, #0
   2c660:	ba000013 	blt	2c6b4 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2b8>
   2c664:	e5953014 	ldr	r3, [r5, #20]
   2c668:	e1a00005 	mov	r0, r5
   2c66c:	e3530000 	cmp	r3, #0
   2c670:	1a000009 	bne	2c69c <CUSBBulkOnlyMassStorageDevice::Configure()+0x2a0>
   2c674:	eb00085e 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2c678:	e1a07000 	mov	r7, r0
   2c67c:	e3a00018 	mov	r0, #24
   2c680:	eb001f24 	bl	34318 <operator new(unsigned int)>
   2c684:	e1a06000 	mov	r6, r0
   2c688:	e1a02004 	mov	r2, r4
   2c68c:	e1a01007 	mov	r1, r7
   2c690:	ebfff7e1 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   2c694:	e5856014 	str	r6, [r5, #20]
   2c698:	eaffff62 	b	2c428 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2c>
   2c69c:	e59f1158 	ldr	r1, [pc, #344]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c6a0:	eb0008c9 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2c6a4:	e3a06000 	mov	r6, #0
   2c6a8:	e1a00006 	mov	r0, r6
   2c6ac:	e28dd064 	add	sp, sp, #100	; 0x64
   2c6b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2c6b4:	e5953010 	ldr	r3, [r5, #16]
   2c6b8:	e1a00005 	mov	r0, r5
   2c6bc:	e3530000 	cmp	r3, #0
   2c6c0:	1afffff5 	bne	2c69c <CUSBBulkOnlyMassStorageDevice::Configure()+0x2a0>
   2c6c4:	eb00084a 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2c6c8:	e1a07000 	mov	r7, r0
   2c6cc:	e3a00018 	mov	r0, #24
   2c6d0:	eb001f10 	bl	34318 <operator new(unsigned int)>
   2c6d4:	e1a06000 	mov	r6, r0
   2c6d8:	e1a02004 	mov	r2, r4
   2c6dc:	e1a01007 	mov	r1, r7
   2c6e0:	ebfff7cd 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   2c6e4:	e5856010 	str	r6, [r5, #16]
   2c6e8:	eaffff4e 	b	2c428 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2c>
   2c6ec:	eb002b9f 	bl	37570 <CLogger::Get()>
   2c6f0:	e1a02006 	mov	r2, r6
   2c6f4:	e59f3114 	ldr	r3, [pc, #276]	; 2c810 <CUSBBulkOnlyMassStorageDevice::Configure()+0x414>
   2c6f8:	e59f10fc 	ldr	r1, [pc, #252]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c6fc:	e1a06004 	mov	r6, r4
   2c700:	eb002c7a 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c704:	eaffffe7 	b	2c6a8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2ac>
   2c708:	e3a06000 	mov	r6, #0
   2c70c:	e1a00005 	mov	r0, r5
   2c710:	e59f10e4 	ldr	r1, [pc, #228]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c714:	eb0008ac 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2c718:	e1a00006 	mov	r0, r6
   2c71c:	e28dd064 	add	sp, sp, #100	; 0x64
   2c720:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2c724:	eb002b91 	bl	37570 <CLogger::Get()>
   2c728:	e59f30e4 	ldr	r3, [pc, #228]	; 2c814 <CUSBBulkOnlyMassStorageDevice::Configure()+0x418>
   2c72c:	e3a02001 	mov	r2, #1
   2c730:	e59f10c4 	ldr	r1, [pc, #196]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c734:	eb002c6d 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c738:	e1a00006 	mov	r0, r6
   2c73c:	e28dd064 	add	sp, sp, #100	; 0x64
   2c740:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2c744:	eb002b89 	bl	37570 <CLogger::Get()>
   2c748:	e1a02007 	mov	r2, r7
   2c74c:	e59f30c4 	ldr	r3, [pc, #196]	; 2c818 <CUSBBulkOnlyMassStorageDevice::Configure()+0x41c>
   2c750:	e59f10a4 	ldr	r1, [pc, #164]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c754:	eb002c65 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c758:	e3a06000 	mov	r6, #0
   2c75c:	eaffffd1 	b	2c6a8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2ac>
   2c760:	eb002b82 	bl	37570 <CLogger::Get()>
   2c764:	e5dd303c 	ldrb	r3, [sp, #60]	; 0x3c
   2c768:	e1a02006 	mov	r2, r6
   2c76c:	e203301f 	and	r3, r3, #31
   2c770:	e58d3000 	str	r3, [sp]
   2c774:	e59f1080 	ldr	r1, [pc, #128]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c778:	e59f309c 	ldr	r3, [pc, #156]	; 2c81c <CUSBBulkOnlyMassStorageDevice::Configure()+0x420>
   2c77c:	e1a06004 	mov	r6, r4
   2c780:	eb002c5a 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c784:	eaffffc7 	b	2c6a8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2ac>
   2c788:	eb002b78 	bl	37570 <CLogger::Get()>
   2c78c:	e1a02007 	mov	r2, r7
   2c790:	e59f3088 	ldr	r3, [pc, #136]	; 2c820 <CUSBBulkOnlyMassStorageDevice::Configure()+0x424>
   2c794:	e59f1060 	ldr	r1, [pc, #96]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c798:	eb002c54 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c79c:	eaffffc1 	b	2c6a8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2ac>
   2c7a0:	eb002b72 	bl	37570 <CLogger::Get()>
   2c7a4:	e1a02006 	mov	r2, r6
   2c7a8:	e59f3074 	ldr	r3, [pc, #116]	; 2c824 <CUSBBulkOnlyMassStorageDevice::Configure()+0x428>
   2c7ac:	e59f1048 	ldr	r1, [pc, #72]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c7b0:	eb002c4e 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c7b4:	e3a06000 	mov	r6, #0
   2c7b8:	eaffffba 	b	2c6a8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2ac>
   2c7bc:	eb002b6b 	bl	37570 <CLogger::Get()>
   2c7c0:	e1a02006 	mov	r2, r6
   2c7c4:	e58d4000 	str	r4, [sp]
   2c7c8:	e59f3058 	ldr	r3, [pc, #88]	; 2c828 <CUSBBulkOnlyMassStorageDevice::Configure()+0x42c>
   2c7cc:	e59f1028 	ldr	r1, [pc, #40]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c7d0:	eb002c46 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c7d4:	e3a06000 	mov	r6, #0
   2c7d8:	eaffffb2 	b	2c6a8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2ac>
   2c7dc:	eb002b63 	bl	37570 <CLogger::Get()>
   2c7e0:	e1a02006 	mov	r2, r6
   2c7e4:	e59f3040 	ldr	r3, [pc, #64]	; 2c82c <CUSBBulkOnlyMassStorageDevice::Configure()+0x430>
   2c7e8:	e59f100c 	ldr	r1, [pc, #12]	; 2c7fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x400>
   2c7ec:	eb002c3f 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c7f0:	e3a06000 	mov	r6, #0
   2c7f4:	eaffffab 	b	2c6a8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2ac>
   2c7f8:	0004b2ac 	.word	0x0004b2ac
   2c7fc:	0004b0a4 	.word	0x0004b0a4
   2c800:	00058ed8 	.word	0x00058ed8
   2c804:	0004b2c4 	.word	0x0004b2c4
   2c808:	0004b0ac 	.word	0x0004b0ac
   2c80c:	0004b2cc 	.word	0x0004b2cc
   2c810:	0004b20c 	.word	0x0004b20c
   2c814:	0004b008 	.word	0x0004b008
   2c818:	0004b244 	.word	0x0004b244
   2c81c:	0004b224 	.word	0x0004b224
   2c820:	0004b2e8 	.word	0x0004b2e8
   2c824:	0004b25c 	.word	0x0004b25c
   2c828:	0004b274 	.word	0x0004b274
   2c82c:	0004b290 	.word	0x0004b290

0002c830 <CDWHCIFrameSchedulerNonPeriodic::~CDWHCIFrameSchedulerNonPeriodic()>:
   2c830:	e12fff1e 	bx	lr

0002c834 <CDWHCIFrameSchedulerNonPeriodic::StartSplit()>:
   2c834:	e3a03000 	mov	r3, #0
   2c838:	e5803008 	str	r3, [r0, #8]
   2c83c:	e12fff1e 	bx	lr

0002c840 <CDWHCIFrameSchedulerNonPeriodic::WaitForFrame()>:
   2c840:	e12fff1e 	bx	lr

0002c844 <CDWHCIFrameSchedulerNonPeriodic::IsOddFrame() const>:
   2c844:	e3a00000 	mov	r0, #0
   2c848:	e12fff1e 	bx	lr

0002c84c <CDWHCIFrameSchedulerNonPeriodic::~CDWHCIFrameSchedulerNonPeriodic()>:
   2c84c:	e92d4010 	push	{r4, lr}
   2c850:	e1a04000 	mov	r4, r0
   2c854:	e3a01010 	mov	r1, #16
   2c858:	eb001eb2 	bl	34328 <operator delete(void*, unsigned int)>
   2c85c:	e1a00004 	mov	r0, r4
   2c860:	e8bd8010 	pop	{r4, pc}

0002c864 <CDWHCIFrameSchedulerNonPeriodic::CompleteSplit()>:
   2c864:	e5903008 	ldr	r3, [r0, #8]
   2c868:	e92d4010 	push	{r4, lr}
   2c86c:	e2433001 	sub	r3, r3, #1
   2c870:	e3530004 	cmp	r3, #4
   2c874:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   2c878:	ea00000f 	b	2c8bc <CDWHCIFrameSchedulerNonPeriodic::CompleteSplit()+0x58>
   2c87c:	0002c8a8 	.word	0x0002c8a8
   2c880:	0002c898 	.word	0x0002c898
   2c884:	0002c898 	.word	0x0002c898
   2c888:	0002c890 	.word	0x0002c890
   2c88c:	0002c890 	.word	0x0002c890
   2c890:	e3a00000 	mov	r0, #0
   2c894:	e8bd8010 	pop	{r4, pc}
   2c898:	e59f0034 	ldr	r0, [pc, #52]	; 2c8d4 <CDWHCIFrameSchedulerNonPeriodic::CompleteSplit()+0x70>
   2c89c:	eb0021ed 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   2c8a0:	e3a00001 	mov	r0, #1
   2c8a4:	e8bd8010 	pop	{r4, pc}
   2c8a8:	e3a02002 	mov	r2, #2
   2c8ac:	e3a03003 	mov	r3, #3
   2c8b0:	e1c020f8 	strd	r2, [r0, #8]
   2c8b4:	e3a00001 	mov	r0, #1
   2c8b8:	e8bd8010 	pop	{r4, pc}
   2c8bc:	e3a0204e 	mov	r2, #78	; 0x4e
   2c8c0:	e59f1010 	ldr	r1, [pc, #16]	; 2c8d8 <CDWHCIFrameSchedulerNonPeriodic::CompleteSplit()+0x74>
   2c8c4:	e59f0010 	ldr	r0, [pc, #16]	; 2c8dc <CDWHCIFrameSchedulerNonPeriodic::CompleteSplit()+0x78>
   2c8c8:	eb0029ac 	bl	36f80 <assertion_failed>
   2c8cc:	e3a00000 	mov	r0, #0
   2c8d0:	e8bd8010 	pop	{r4, pc}
   2c8d4:	00000271 	.word	0x00000271
   2c8d8:	0004b320 	.word	0x0004b320
   2c8dc:	0004a8b8 	.word	0x0004a8b8

0002c8e0 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)>:
   2c8e0:	e92d4010 	push	{r4, lr}
   2c8e4:	e5903008 	ldr	r3, [r0, #8]
   2c8e8:	e24dd010 	sub	sp, sp, #16
   2c8ec:	e3530000 	cmp	r3, #0
   2c8f0:	e1a04000 	mov	r4, r0
   2c8f4:	0a000017 	beq	2c958 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x78>
   2c8f8:	e2433002 	sub	r3, r3, #2
   2c8fc:	e3530001 	cmp	r3, #1
   2c900:	9a000005 	bls	2c91c <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x3c>
   2c904:	e3a02083 	mov	r2, #131	; 0x83
   2c908:	e59f10cc 	ldr	r1, [pc, #204]	; 2c9dc <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0xfc>
   2c90c:	e59f00cc 	ldr	r0, [pc, #204]	; 2c9e0 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x100>
   2c910:	e28dd010 	add	sp, sp, #16
   2c914:	e8bd4010 	pop	{r4, lr}
   2c918:	ea002998 	b	36f80 <assertion_failed>
   2c91c:	e3110001 	tst	r1, #1
   2c920:	13a03004 	movne	r3, #4
   2c924:	15803008 	strne	r3, [r0, #8]
   2c928:	1a000008 	bne	2c950 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x70>
   2c92c:	e3110060 	tst	r1, #96	; 0x60
   2c930:	0a000012 	beq	2c980 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0xa0>
   2c934:	e590300c 	ldr	r3, [r0, #12]
   2c938:	e3530000 	cmp	r3, #0
   2c93c:	e2433001 	sub	r3, r3, #1
   2c940:	e580300c 	str	r3, [r0, #12]
   2c944:	1a000014 	bne	2c99c <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0xbc>
   2c948:	e3a03005 	mov	r3, #5
   2c94c:	e5843008 	str	r3, [r4, #8]
   2c950:	e28dd010 	add	sp, sp, #16
   2c954:	e8bd8010 	pop	{r4, pc}
   2c958:	e3110020 	tst	r1, #32
   2c95c:	1a000003 	bne	2c970 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x90>
   2c960:	e3a0205a 	mov	r2, #90	; 0x5a
   2c964:	e59f1070 	ldr	r1, [pc, #112]	; 2c9dc <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0xfc>
   2c968:	e59f0074 	ldr	r0, [pc, #116]	; 2c9e4 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x104>
   2c96c:	eb002983 	bl	36f80 <assertion_failed>
   2c970:	e3a03001 	mov	r3, #1
   2c974:	e5843008 	str	r3, [r4, #8]
   2c978:	e28dd010 	add	sp, sp, #16
   2c97c:	e8bd8010 	pop	{r4, pc}
   2c980:	e3110010 	tst	r1, #16
   2c984:	0a00000a 	beq	2c9b4 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0xd4>
   2c988:	e590300c 	ldr	r3, [r0, #12]
   2c98c:	e3530000 	cmp	r3, #0
   2c990:	e2433001 	sub	r3, r3, #1
   2c994:	e580300c 	str	r3, [r0, #12]
   2c998:	0a000002 	beq	2c9a8 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0xc8>
   2c99c:	e3a03003 	mov	r3, #3
   2c9a0:	e5843008 	str	r3, [r4, #8]
   2c9a4:	eaffffe9 	b	2c950 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x70>
   2c9a8:	e59f0038 	ldr	r0, [pc, #56]	; 2c9e8 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x108>
   2c9ac:	eb0021a9 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   2c9b0:	eaffffe4 	b	2c948 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x68>
   2c9b4:	e58d100c 	str	r1, [sp, #12]
   2c9b8:	eb002aec 	bl	37570 <CLogger::Get()>
   2c9bc:	e59d100c 	ldr	r1, [sp, #12]
   2c9c0:	e3a02001 	mov	r2, #1
   2c9c4:	e58d1000 	str	r1, [sp]
   2c9c8:	e59f301c 	ldr	r3, [pc, #28]	; 2c9ec <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x10c>
   2c9cc:	e59f101c 	ldr	r1, [pc, #28]	; 2c9f0 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x110>
   2c9d0:	eb002bc6 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2c9d4:	e3a0207e 	mov	r2, #126	; 0x7e
   2c9d8:	eaffffca 	b	2c908 <CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)+0x28>
   2c9dc:	0004b320 	.word	0x0004b320
   2c9e0:	0004a8b8 	.word	0x0004a8b8
   2c9e4:	0004b338 	.word	0x0004b338
   2c9e8:	00000271 	.word	0x00000271
   2c9ec:	0004b35c 	.word	0x0004b35c
   2c9f0:	0004b370 	.word	0x0004b370

0002c9f4 <CDWHCIFrameSchedulerNonPeriodic::CDWHCIFrameSchedulerNonPeriodic()>:
   2c9f4:	e59f303c 	ldr	r3, [pc, #60]	; 2ca38 <CDWHCIFrameSchedulerNonPeriodic::CDWHCIFrameSchedulerNonPeriodic()+0x44>
   2c9f8:	e92d4010 	push	{r4, lr}
   2c9fc:	e5803000 	str	r3, [r0]
   2ca00:	e1a04000 	mov	r4, r0
   2ca04:	eb0021cb 	bl	35138 <CTimer::Get()>
   2ca08:	e3a03006 	mov	r3, #6
   2ca0c:	e3500000 	cmp	r0, #0
   2ca10:	e9840009 	stmib	r4, {r0, r3}
   2ca14:	0a000001 	beq	2ca20 <CDWHCIFrameSchedulerNonPeriodic::CDWHCIFrameSchedulerNonPeriodic()+0x2c>
   2ca18:	e1a00004 	mov	r0, r4
   2ca1c:	e8bd8010 	pop	{r4, pc}
   2ca20:	e3a0202a 	mov	r2, #42	; 0x2a
   2ca24:	e59f1010 	ldr	r1, [pc, #16]	; 2ca3c <CDWHCIFrameSchedulerNonPeriodic::CDWHCIFrameSchedulerNonPeriodic()+0x48>
   2ca28:	e59f0010 	ldr	r0, [pc, #16]	; 2ca40 <CDWHCIFrameSchedulerNonPeriodic::CDWHCIFrameSchedulerNonPeriodic()+0x4c>
   2ca2c:	eb002953 	bl	36f80 <assertion_failed>
   2ca30:	e1a00004 	mov	r0, r4
   2ca34:	e8bd8010 	pop	{r4, pc}
   2ca38:	0004b304 	.word	0x0004b304
   2ca3c:	0004b320 	.word	0x0004b320
   2ca40:	0004a110 	.word	0x0004a110

0002ca44 <CDWHCIFrameSchedulerPeriodic::~CDWHCIFrameSchedulerPeriodic()>:
   2ca44:	e12fff1e 	bx	lr

0002ca48 <CDWHCIFrameSchedulerPeriodic::StartSplit()>:
   2ca48:	e3a02000 	mov	r2, #0
   2ca4c:	e3a03008 	mov	r3, #8
   2ca50:	e5802008 	str	r2, [r0, #8]
   2ca54:	e5803010 	str	r3, [r0, #16]
   2ca58:	e12fff1e 	bx	lr

0002ca5c <CDWHCIFrameSchedulerPeriodic::IsOddFrame() const>:
   2ca5c:	e5900010 	ldr	r0, [r0, #16]
   2ca60:	e2000001 	and	r0, r0, #1
   2ca64:	e12fff1e 	bx	lr

0002ca68 <CDWHCIFrameSchedulerPeriodic::~CDWHCIFrameSchedulerPeriodic()>:
   2ca68:	e92d4010 	push	{r4, lr}
   2ca6c:	e1a04000 	mov	r4, r0
   2ca70:	e3a01014 	mov	r1, #20
   2ca74:	eb001e2b 	bl	34328 <operator delete(void*, unsigned int)>
   2ca78:	e1a00004 	mov	r0, r4
   2ca7c:	e8bd8010 	pop	{r4, pc}

0002ca80 <CDWHCIFrameSchedulerPeriodic::WaitForFrame()>:
   2ca80:	e92d4010 	push	{r4, lr}
   2ca84:	e1a04000 	mov	r4, r0
   2ca88:	e24dd010 	sub	sp, sp, #16
   2ca8c:	e28d0004 	add	r0, sp, #4
   2ca90:	e59f1058 	ldr	r1, [pc, #88]	; 2caf0 <CDWHCIFrameSchedulerPeriodic::WaitForFrame()+0x70>
   2ca94:	ebffeffe 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   2ca98:	e5943010 	ldr	r3, [r4, #16]
   2ca9c:	e3530008 	cmp	r3, #8
   2caa0:	0a000009 	beq	2cacc <CDWHCIFrameSchedulerPeriodic::WaitForFrame()+0x4c>
   2caa4:	e28d0004 	add	r0, sp, #4
   2caa8:	ebfff002 	bl	28ab8 <CDWHCIRegister::Read()>
   2caac:	e5943010 	ldr	r3, [r4, #16]
   2cab0:	e2000007 	and	r0, r0, #7
   2cab4:	e1500003 	cmp	r0, r3
   2cab8:	1afffff9 	bne	2caa4 <CDWHCIFrameSchedulerPeriodic::WaitForFrame()+0x24>
   2cabc:	e28d0004 	add	r0, sp, #4
   2cac0:	ebffeffb 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   2cac4:	e28dd010 	add	sp, sp, #16
   2cac8:	e8bd8010 	pop	{r4, pc}
   2cacc:	e28d0004 	add	r0, sp, #4
   2cad0:	ebffeff8 	bl	28ab8 <CDWHCIRegister::Read()>
   2cad4:	e2800001 	add	r0, r0, #1
   2cad8:	e2000007 	and	r0, r0, #7
   2cadc:	e3500006 	cmp	r0, #6
   2cae0:	03a03007 	moveq	r3, #7
   2cae4:	15840010 	strne	r0, [r4, #16]
   2cae8:	05843010 	streq	r3, [r4, #16]
   2caec:	eaffffec 	b	2caa4 <CDWHCIFrameSchedulerPeriodic::WaitForFrame()+0x24>
   2caf0:	20980408 	.word	0x20980408

0002caf4 <CDWHCIFrameSchedulerPeriodic::CompleteSplit()>:
   2caf4:	e5903008 	ldr	r3, [r0, #8]
   2caf8:	e1a02000 	mov	r2, r0
   2cafc:	e2433001 	sub	r3, r3, #1
   2cb00:	e3530004 	cmp	r3, #4
   2cb04:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   2cb08:	ea000018 	b	2cb70 <CDWHCIFrameSchedulerPeriodic::CompleteSplit()+0x7c>
   2cb0c:	0002cb40 	.word	0x0002cb40
   2cb10:	0002cb70 	.word	0x0002cb70
   2cb14:	0002cb28 	.word	0x0002cb28
   2cb18:	0002cb20 	.word	0x0002cb20
   2cb1c:	0002cb20 	.word	0x0002cb20
   2cb20:	e3a00000 	mov	r0, #0
   2cb24:	e12fff1e 	bx	lr
   2cb28:	e5903010 	ldr	r3, [r0, #16]
   2cb2c:	e3a00001 	mov	r0, #1
   2cb30:	e0833000 	add	r3, r3, r0
   2cb34:	e2033007 	and	r3, r3, #7
   2cb38:	e5823010 	str	r3, [r2, #16]
   2cb3c:	e12fff1e 	bx	lr
   2cb40:	e3a01002 	mov	r1, #2
   2cb44:	e5903010 	ldr	r3, [r0, #16]
   2cb48:	e5821008 	str	r1, [r2, #8]
   2cb4c:	e3530005 	cmp	r3, #5
   2cb50:	13a00003 	movne	r0, #3
   2cb54:	01a00001 	moveq	r0, r1
   2cb58:	e0833001 	add	r3, r3, r1
   2cb5c:	e2033007 	and	r3, r3, #7
   2cb60:	e582000c 	str	r0, [r2, #12]
   2cb64:	e5823010 	str	r3, [r2, #16]
   2cb68:	e3a00001 	mov	r0, #1
   2cb6c:	e12fff1e 	bx	lr
   2cb70:	e92d4010 	push	{r4, lr}
   2cb74:	e3a02055 	mov	r2, #85	; 0x55
   2cb78:	e59f100c 	ldr	r1, [pc, #12]	; 2cb8c <CDWHCIFrameSchedulerPeriodic::CompleteSplit()+0x98>
   2cb7c:	e59f000c 	ldr	r0, [pc, #12]	; 2cb90 <CDWHCIFrameSchedulerPeriodic::CompleteSplit()+0x9c>
   2cb80:	eb0028fe 	bl	36f80 <assertion_failed>
   2cb84:	e3a00000 	mov	r0, #0
   2cb88:	e8bd8010 	pop	{r4, pc}
   2cb8c:	0004b39c 	.word	0x0004b39c
   2cb90:	0004a8b8 	.word	0x0004a8b8

0002cb94 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)>:
   2cb94:	e92d4010 	push	{r4, lr}
   2cb98:	e5903008 	ldr	r3, [r0, #8]
   2cb9c:	e24dd010 	sub	sp, sp, #16
   2cba0:	e3530000 	cmp	r3, #0
   2cba4:	e1a04000 	mov	r4, r0
   2cba8:	0a000017 	beq	2cc0c <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x78>
   2cbac:	e2433002 	sub	r3, r3, #2
   2cbb0:	e3530001 	cmp	r3, #1
   2cbb4:	9a000005 	bls	2cbd0 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x3c>
   2cbb8:	e3a02085 	mov	r2, #133	; 0x85
   2cbbc:	e59f10cc 	ldr	r1, [pc, #204]	; 2cc90 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0xfc>
   2cbc0:	e59f00cc 	ldr	r0, [pc, #204]	; 2cc94 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x100>
   2cbc4:	e28dd010 	add	sp, sp, #16
   2cbc8:	e8bd4010 	pop	{r4, lr}
   2cbcc:	ea0028eb 	b	36f80 <assertion_failed>
   2cbd0:	e3110001 	tst	r1, #1
   2cbd4:	13a03004 	movne	r3, #4
   2cbd8:	15803008 	strne	r3, [r0, #8]
   2cbdc:	1a000008 	bne	2cc04 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x70>
   2cbe0:	e3110060 	tst	r1, #96	; 0x60
   2cbe4:	0a000012 	beq	2cc34 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0xa0>
   2cbe8:	e590300c 	ldr	r3, [r0, #12]
   2cbec:	e3530000 	cmp	r3, #0
   2cbf0:	e2433001 	sub	r3, r3, #1
   2cbf4:	e580300c 	str	r3, [r0, #12]
   2cbf8:	13a03003 	movne	r3, #3
   2cbfc:	15803008 	strne	r3, [r0, #8]
   2cc00:	0a00001c 	beq	2cc78 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0xe4>
   2cc04:	e28dd010 	add	sp, sp, #16
   2cc08:	e8bd8010 	pop	{r4, pc}
   2cc0c:	e3110020 	tst	r1, #32
   2cc10:	1a000003 	bne	2cc24 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x90>
   2cc14:	e3a02061 	mov	r2, #97	; 0x61
   2cc18:	e59f1070 	ldr	r1, [pc, #112]	; 2cc90 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0xfc>
   2cc1c:	e59f0074 	ldr	r0, [pc, #116]	; 2cc98 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x104>
   2cc20:	eb0028d6 	bl	36f80 <assertion_failed>
   2cc24:	e3a03001 	mov	r3, #1
   2cc28:	e5843008 	str	r3, [r4, #8]
   2cc2c:	e28dd010 	add	sp, sp, #16
   2cc30:	e8bd8010 	pop	{r4, pc}
   2cc34:	e3110010 	tst	r1, #16
   2cc38:	0a000004 	beq	2cc50 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0xbc>
   2cc3c:	e59f0058 	ldr	r0, [pc, #88]	; 2cc9c <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x108>
   2cc40:	eb002104 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   2cc44:	e3a03005 	mov	r3, #5
   2cc48:	e5843008 	str	r3, [r4, #8]
   2cc4c:	eaffffec 	b	2cc04 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x70>
   2cc50:	e58d100c 	str	r1, [sp, #12]
   2cc54:	eb002a45 	bl	37570 <CLogger::Get()>
   2cc58:	e59d100c 	ldr	r1, [sp, #12]
   2cc5c:	e3a02001 	mov	r2, #1
   2cc60:	e58d1000 	str	r1, [sp]
   2cc64:	e59f3034 	ldr	r3, [pc, #52]	; 2cca0 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x10c>
   2cc68:	e59f1034 	ldr	r1, [pc, #52]	; 2cca4 <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x110>
   2cc6c:	eb002b1f 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2cc70:	e3a02080 	mov	r2, #128	; 0x80
   2cc74:	eaffffd0 	b	2cbbc <CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)+0x28>
   2cc78:	e3a03005 	mov	r3, #5
   2cc7c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
   2cc80:	e5843008 	str	r3, [r4, #8]
   2cc84:	e28dd010 	add	sp, sp, #16
   2cc88:	e8bd4010 	pop	{r4, lr}
   2cc8c:	ea0020f1 	b	35058 <CTimer::SimpleusDelay(unsigned int)>
   2cc90:	0004b39c 	.word	0x0004b39c
   2cc94:	0004a8b8 	.word	0x0004a8b8
   2cc98:	0004b338 	.word	0x0004b338
   2cc9c:	00000271 	.word	0x00000271
   2cca0:	0004b35c 	.word	0x0004b35c
   2cca4:	0004b370 	.word	0x0004b370

0002cca8 <CDWHCIFrameSchedulerPeriodic::CDWHCIFrameSchedulerPeriodic()>:
   2cca8:	e59f3044 	ldr	r3, [pc, #68]	; 2ccf4 <CDWHCIFrameSchedulerPeriodic::CDWHCIFrameSchedulerPeriodic()+0x4c>
   2ccac:	e92d4010 	push	{r4, lr}
   2ccb0:	e5803000 	str	r3, [r0]
   2ccb4:	e1a04000 	mov	r4, r0
   2ccb8:	eb00211e 	bl	35138 <CTimer::Get()>
   2ccbc:	e3a02006 	mov	r2, #6
   2ccc0:	e3a03008 	mov	r3, #8
   2ccc4:	e3500000 	cmp	r0, #0
   2ccc8:	e9840005 	stmib	r4, {r0, r2}
   2cccc:	e5843010 	str	r3, [r4, #16]
   2ccd0:	0a000001 	beq	2ccdc <CDWHCIFrameSchedulerPeriodic::CDWHCIFrameSchedulerPeriodic()+0x34>
   2ccd4:	e1a00004 	mov	r0, r4
   2ccd8:	e8bd8010 	pop	{r4, pc}
   2ccdc:	e3a0202e 	mov	r2, #46	; 0x2e
   2cce0:	e59f1010 	ldr	r1, [pc, #16]	; 2ccf8 <CDWHCIFrameSchedulerPeriodic::CDWHCIFrameSchedulerPeriodic()+0x50>
   2cce4:	e59f0010 	ldr	r0, [pc, #16]	; 2ccfc <CDWHCIFrameSchedulerPeriodic::CDWHCIFrameSchedulerPeriodic()+0x54>
   2cce8:	eb0028a4 	bl	36f80 <assertion_failed>
   2ccec:	e1a00004 	mov	r0, r4
   2ccf0:	e8bd8010 	pop	{r4, pc}
   2ccf4:	0004b380 	.word	0x0004b380
   2ccf8:	0004b39c 	.word	0x0004b39c
   2ccfc:	0004a110 	.word	0x0004a110

0002cd00 <CUSBKeyboardDevice::~CUSBKeyboardDevice()>:
   2cd00:	e3a02000 	mov	r2, #0
   2cd04:	e92d4010 	push	{r4, lr}
   2cd08:	e1a04000 	mov	r4, r0
   2cd0c:	e59f301c 	ldr	r3, [pc, #28]	; 2cd30 <CUSBKeyboardDevice::~CUSBKeyboardDevice()+0x30>
   2cd10:	e5802440 	str	r2, [r0, #1088]	; 0x440
   2cd14:	e5803000 	str	r3, [r0]
   2cd18:	e2800020 	add	r0, r0, #32
   2cd1c:	eb0012da 	bl	3188c <CKeyboardBehaviour::~CKeyboardBehaviour()>
   2cd20:	e1a00004 	mov	r0, r4
   2cd24:	eb000193 	bl	2d378 <CUSBHIDDevice::~CUSBHIDDevice()>
   2cd28:	e1a00004 	mov	r0, r4
   2cd2c:	e8bd8010 	pop	{r4, pc}
   2cd30:	0004b3bc 	.word	0x0004b3bc

0002cd34 <CUSBKeyboardDevice::~CUSBKeyboardDevice()>:
   2cd34:	e3a02000 	mov	r2, #0
   2cd38:	e92d4010 	push	{r4, lr}
   2cd3c:	e1a04000 	mov	r4, r0
   2cd40:	e59f3028 	ldr	r3, [pc, #40]	; 2cd70 <CUSBKeyboardDevice::~CUSBKeyboardDevice()+0x3c>
   2cd44:	e5802440 	str	r2, [r0, #1088]	; 0x440
   2cd48:	e5803000 	str	r3, [r0]
   2cd4c:	e2800020 	add	r0, r0, #32
   2cd50:	eb0012cd 	bl	3188c <CKeyboardBehaviour::~CKeyboardBehaviour()>
   2cd54:	e1a00004 	mov	r0, r4
   2cd58:	eb000186 	bl	2d378 <CUSBHIDDevice::~CUSBHIDDevice()>
   2cd5c:	e1a00004 	mov	r0, r4
   2cd60:	e3a01e45 	mov	r1, #1104	; 0x450
   2cd64:	eb001d6f 	bl	34328 <operator delete(void*, unsigned int)>
   2cd68:	e1a00004 	mov	r0, r4
   2cd6c:	e8bd8010 	pop	{r4, pc}
   2cd70:	0004b3bc 	.word	0x0004b3bc

0002cd74 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)>:
   2cd74:	e3510000 	cmp	r1, #0
   2cd78:	012fff1e 	bxeq	lr
   2cd7c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cd80:	e1a05001 	mov	r5, r1
   2cd84:	e5903440 	ldr	r3, [r0, #1088]	; 0x440
   2cd88:	e24dd00c 	sub	sp, sp, #12
   2cd8c:	e3530000 	cmp	r3, #0
   2cd90:	e4d52002 	ldrb	r2, [r5], #2
   2cd94:	0a000004 	beq	2cdac <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x38>
   2cd98:	e1a01005 	mov	r1, r5
   2cd9c:	e1a00002 	mov	r0, r2
   2cda0:	e28dd00c 	add	sp, sp, #12
   2cda4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cda8:	e12fff13 	bx	r3
   2cdac:	e1a07000 	mov	r7, r0
   2cdb0:	e1a06001 	mov	r6, r1
   2cdb4:	e1a04003 	mov	r4, r3
   2cdb8:	e3a09001 	mov	r9, #1
   2cdbc:	e2808020 	add	r8, r0, #32
   2cdc0:	ea000005 	b	2cddc <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x68>
   2cdc4:	e3530000 	cmp	r3, #0
   2cdc8:	1a00000f 	bne	2ce0c <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x98>
   2cdcc:	e2844001 	add	r4, r4, #1
   2cdd0:	e3540008 	cmp	r4, #8
   2cdd4:	0a000011 	beq	2ce20 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0xac>
   2cdd8:	e5d62000 	ldrb	r2, [r6]
   2cddc:	e1a03419 	lsl	r3, r9, r4
   2cde0:	e5d71444 	ldrb	r1, [r7, #1092]	; 0x444
   2cde4:	e1120003 	tst	r2, r3
   2cde8:	e0033001 	and	r3, r3, r1
   2cdec:	0afffff4 	beq	2cdc4 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x50>
   2cdf0:	e3530000 	cmp	r3, #0
   2cdf4:	1afffff4 	bne	2cdcc <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x58>
   2cdf8:	e2441080 	sub	r1, r4, #128	; 0x80
   2cdfc:	e6ef1071 	uxtb	r1, r1
   2ce00:	e1a00008 	mov	r0, r8
   2ce04:	eb00130e 	bl	31a44 <CKeyboardBehaviour::KeyPressed(unsigned char)>
   2ce08:	eaffffef 	b	2cdcc <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x58>
   2ce0c:	e2441080 	sub	r1, r4, #128	; 0x80
   2ce10:	e6ef1071 	uxtb	r1, r1
   2ce14:	e1a00008 	mov	r0, r8
   2ce18:	eb001318 	bl	31a80 <CKeyboardBehaviour::KeyReleased(unsigned char)>
   2ce1c:	eaffffea 	b	2cdcc <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x58>
   2ce20:	e2878d11 	add	r8, r7, #1088	; 0x440
   2ce24:	e2884006 	add	r4, r8, #6
   2ce28:	e2873020 	add	r3, r7, #32
   2ce2c:	e1a0b004 	mov	fp, r4
   2ce30:	e288900c 	add	r9, r8, #12
   2ce34:	e286a008 	add	sl, r6, #8
   2ce38:	e58d3004 	str	r3, [sp, #4]
   2ce3c:	ea000001 	b	2ce48 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0xd4>
   2ce40:	e159000b 	cmp	r9, fp
   2ce44:	0a00000b 	beq	2ce78 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x104>
   2ce48:	e4db1001 	ldrb	r1, [fp], #1
   2ce4c:	e3510000 	cmp	r1, #0
   2ce50:	11a03005 	movne	r3, r5
   2ce54:	0afffff9 	beq	2ce40 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0xcc>
   2ce58:	e4d30001 	ldrb	r0, [r3], #1
   2ce5c:	e1500001 	cmp	r0, r1
   2ce60:	0afffff6 	beq	2ce40 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0xcc>
   2ce64:	e15a0003 	cmp	sl, r3
   2ce68:	1afffffa 	bne	2ce58 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0xe4>
   2ce6c:	e59d0004 	ldr	r0, [sp, #4]
   2ce70:	eb001302 	bl	31a80 <CKeyboardBehaviour::KeyReleased(unsigned char)>
   2ce74:	eafffff1 	b	2ce40 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0xcc>
   2ce78:	e2877020 	add	r7, r7, #32
   2ce7c:	e2865001 	add	r5, r6, #1
   2ce80:	e286a007 	add	sl, r6, #7
   2ce84:	ea000001 	b	2ce90 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x11c>
   2ce88:	e15a0005 	cmp	sl, r5
   2ce8c:	0a00000b 	beq	2cec0 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x14c>
   2ce90:	e5f51001 	ldrb	r1, [r5, #1]!
   2ce94:	e3510000 	cmp	r1, #0
   2ce98:	11a03004 	movne	r3, r4
   2ce9c:	0afffff9 	beq	2ce88 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x114>
   2cea0:	e4d32001 	ldrb	r2, [r3], #1
   2cea4:	e1520001 	cmp	r2, r1
   2cea8:	0afffff6 	beq	2ce88 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x114>
   2ceac:	e1530009 	cmp	r3, r9
   2ceb0:	1afffffa 	bne	2cea0 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x12c>
   2ceb4:	e1a00007 	mov	r0, r7
   2ceb8:	eb0012e1 	bl	31a44 <CKeyboardBehaviour::KeyPressed(unsigned char)>
   2cebc:	eafffff1 	b	2ce88 <CUSBKeyboardDevice::ReportHandler(unsigned char const*)+0x114>
   2cec0:	e1a01006 	mov	r1, r6
   2cec4:	e3a02008 	mov	r2, #8
   2cec8:	e2880004 	add	r0, r8, #4
   2cecc:	e28dd00c 	add	sp, sp, #12
   2ced0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ced4:	ea0021bf 	b	355d8 <memcpy>

0002ced8 <CUSBKeyboardDevice::CUSBKeyboardDevice(CUSBFunction*)>:
   2ced8:	e92d4010 	push	{r4, lr}
   2cedc:	e1a04000 	mov	r4, r0
   2cee0:	e3a02008 	mov	r2, #8
   2cee4:	eb000110 	bl	2d32c <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)>
   2cee8:	e1a00004 	mov	r0, r4
   2ceec:	e59f302c 	ldr	r3, [pc, #44]	; 2cf20 <CUSBKeyboardDevice::CUSBKeyboardDevice(CUSBFunction*)+0x48>
   2cef0:	e4803020 	str	r3, [r0], #32
   2cef4:	eb001258 	bl	3185c <CKeyboardBehaviour::CKeyboardBehaviour()>
   2cef8:	e3e03000 	mvn	r3, #0
   2cefc:	e3a01000 	mov	r1, #0
   2cf00:	e2840d11 	add	r0, r4, #1088	; 0x440
   2cf04:	e5c4344c 	strb	r3, [r4, #1100]	; 0x44c
   2cf08:	e5841440 	str	r1, [r4, #1088]	; 0x440
   2cf0c:	e3a02008 	mov	r2, #8
   2cf10:	e2800004 	add	r0, r0, #4
   2cf14:	eb002096 	bl	35174 <memset>
   2cf18:	e1a00004 	mov	r0, r4
   2cf1c:	e8bd8010 	pop	{r4, pc}
   2cf20:	0004b3bc 	.word	0x0004b3bc

0002cf24 <CUSBKeyboardDevice::RegisterKeyPressedHandler(void (*)(char const*))>:
   2cf24:	e2800020 	add	r0, r0, #32
   2cf28:	ea001261 	b	318b4 <CKeyboardBehaviour::RegisterKeyPressedHandler(void (*)(char const*))>

0002cf2c <CUSBKeyboardDevice::RegisterSelectConsoleHandler(void (*)(unsigned int))>:
   2cf2c:	e2800020 	add	r0, r0, #32
   2cf30:	ea00126d 	b	318ec <CKeyboardBehaviour::RegisterSelectConsoleHandler(void (*)(unsigned int))>

0002cf34 <CUSBKeyboardDevice::RegisterShutdownHandler(void (*)())>:
   2cf34:	e2800020 	add	r0, r0, #32
   2cf38:	ea001279 	b	31924 <CKeyboardBehaviour::RegisterShutdownHandler(void (*)())>

0002cf3c <CUSBKeyboardDevice::GetLEDStatus() const>:
   2cf3c:	e92d4010 	push	{r4, lr}
   2cf40:	e2800020 	add	r0, r0, #32
   2cf44:	eb001284 	bl	3195c <CKeyboardBehaviour::GetLEDStatus() const>
   2cf48:	e2003001 	and	r3, r0, #1
   2cf4c:	e3100002 	tst	r0, #2
   2cf50:	13833002 	orrne	r3, r3, #2
   2cf54:	e3100004 	tst	r0, #4
   2cf58:	13833004 	orrne	r3, r3, #4
   2cf5c:	e1a00003 	mov	r0, r3
   2cf60:	e8bd8010 	pop	{r4, pc}

0002cf64 <CUSBKeyboardDevice::RegisterKeyStatusHandlerRaw(void (*)(unsigned char, unsigned char const*))>:
   2cf64:	e92d4070 	push	{r4, r5, r6, lr}
   2cf68:	e2515000 	subs	r5, r1, #0
   2cf6c:	e1a04000 	mov	r4, r0
   2cf70:	0a000001 	beq	2cf7c <CUSBKeyboardDevice::RegisterKeyStatusHandlerRaw(void (*)(unsigned char, unsigned char const*))+0x18>
   2cf74:	e5845440 	str	r5, [r4, #1088]	; 0x440
   2cf78:	e8bd8070 	pop	{r4, r5, r6, pc}
   2cf7c:	e3a02075 	mov	r2, #117	; 0x75
   2cf80:	e59f100c 	ldr	r1, [pc, #12]	; 2cf94 <CUSBKeyboardDevice::RegisterKeyStatusHandlerRaw(void (*)(unsigned char, unsigned char const*))+0x30>
   2cf84:	e59f000c 	ldr	r0, [pc, #12]	; 2cf98 <CUSBKeyboardDevice::RegisterKeyStatusHandlerRaw(void (*)(unsigned char, unsigned char const*))+0x34>
   2cf88:	eb0027fc 	bl	36f80 <assertion_failed>
   2cf8c:	e5845440 	str	r5, [r4, #1088]	; 0x440
   2cf90:	e8bd8070 	pop	{r4, r5, r6, pc}
   2cf94:	0004b3e4 	.word	0x0004b3e4
   2cf98:	0004b3f4 	.word	0x0004b3f4

0002cf9c <CUSBKeyboardDevice::SetLEDs(unsigned char)>:
   2cf9c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2cfa0:	e24dd01c 	sub	sp, sp, #28
   2cfa4:	e28d4018 	add	r4, sp, #24
   2cfa8:	e5641004 	strb	r1, [r4, #-4]!
   2cfac:	e1a05000 	mov	r5, r0
   2cfb0:	eb000630 	bl	2e878 <CUSBFunction::GetHost() const>
   2cfb4:	e1a06000 	mov	r6, r0
   2cfb8:	e1a00005 	mov	r0, r5
   2cfbc:	eb00061c 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2cfc0:	e1a07000 	mov	r7, r0
   2cfc4:	e1a00005 	mov	r0, r5
   2cfc8:	eb00069b 	bl	2ea3c <CUSBFunction::GetInterfaceNumber() const>
   2cfcc:	e3a02001 	mov	r2, #1
   2cfd0:	e3a03c02 	mov	r3, #512	; 0x200
   2cfd4:	e6ff0070 	uxth	r0, r0
   2cfd8:	e98d0011 	stmib	sp, {r0, r4}
   2cfdc:	e58d200c 	str	r2, [sp, #12]
   2cfe0:	e58d3000 	str	r3, [sp]
   2cfe4:	e1a01007 	mov	r1, r7
   2cfe8:	e1a00006 	mov	r0, r6
   2cfec:	e3a03009 	mov	r3, #9
   2cff0:	e3a02021 	mov	r2, #33	; 0x21
   2cff4:	ebfff69b 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2cff8:	e1e00000 	mvn	r0, r0
   2cffc:	e1a00fa0 	lsr	r0, r0, #31
   2d000:	e28dd01c 	add	sp, sp, #28
   2d004:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0002d008 <CUSBKeyboardDevice::UpdateLEDs()>:
   2d008:	e5902440 	ldr	r2, [r0, #1088]	; 0x440
   2d00c:	e3520000 	cmp	r2, #0
   2d010:	112fff1e 	bxne	lr
   2d014:	e92d4010 	push	{r4, lr}
   2d018:	e1a04000 	mov	r4, r0
   2d01c:	ebffffc6 	bl	2cf3c <CUSBKeyboardDevice::GetLEDStatus() const>
   2d020:	e5d4344c 	ldrb	r3, [r4, #1100]	; 0x44c
   2d024:	e1530000 	cmp	r3, r0
   2d028:	08bd8010 	popeq	{r4, pc}
   2d02c:	e5c4044c 	strb	r0, [r4, #1100]	; 0x44c
   2d030:	e1a01000 	mov	r1, r0
   2d034:	e1a00004 	mov	r0, r4
   2d038:	ebffffd7 	bl	2cf9c <CUSBKeyboardDevice::SetLEDs(unsigned char)>
   2d03c:	e3500000 	cmp	r0, #0
   2d040:	18bd8010 	popne	{r4, pc}
   2d044:	eb002949 	bl	37570 <CLogger::Get()>
   2d048:	e8bd4010 	pop	{r4, lr}
   2d04c:	e59f3008 	ldr	r3, [pc, #8]	; 2d05c <CUSBKeyboardDevice::UpdateLEDs()+0x54>
   2d050:	e3a02001 	mov	r2, #1
   2d054:	e59f1004 	ldr	r1, [pc, #4]	; 2d060 <CUSBKeyboardDevice::UpdateLEDs()+0x58>
   2d058:	ea002a24 	b	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2d05c:	0004b410 	.word	0x0004b410
   2d060:	0004b3dc 	.word	0x0004b3dc

0002d064 <CUSBKeyboardDevice::FindByte(unsigned char const*, unsigned char, unsigned int)>:
   2d064:	e0802002 	add	r2, r0, r2
   2d068:	ea000002 	b	2d078 <CUSBKeyboardDevice::FindByte(unsigned char const*, unsigned char, unsigned int)+0x14>
   2d06c:	e4d03001 	ldrb	r3, [r0], #1
   2d070:	e1530001 	cmp	r3, r1
   2d074:	0a000003 	beq	2d088 <CUSBKeyboardDevice::FindByte(unsigned char const*, unsigned char, unsigned int)+0x24>
   2d078:	e1500002 	cmp	r0, r2
   2d07c:	1afffffa 	bne	2d06c <CUSBKeyboardDevice::FindByte(unsigned char const*, unsigned char, unsigned int)+0x8>
   2d080:	e3a00000 	mov	r0, #0
   2d084:	e12fff1e 	bx	lr
   2d088:	e3a00001 	mov	r0, #1
   2d08c:	e12fff1e 	bx	lr

0002d090 <CUSBKeyboardDevice::Configure()>:
   2d090:	e92d4030 	push	{r4, r5, lr}
   2d094:	e3a01000 	mov	r1, #0
   2d098:	e24dd014 	sub	sp, sp, #20
   2d09c:	e1a05000 	mov	r5, r0
   2d0a0:	eb000113 	bl	2d4f4 <CUSBHIDDevice::Configure(unsigned int)>
   2d0a4:	e2504000 	subs	r4, r0, #0
   2d0a8:	0a000017 	beq	2d10c <CUSBKeyboardDevice::Configure()+0x7c>
   2d0ac:	e1a0000d 	mov	r0, sp
   2d0b0:	eb002cc7 	bl	383d4 <CString::CString()>
   2d0b4:	e59f3070 	ldr	r3, [pc, #112]	; 2d12c <CUSBKeyboardDevice::Configure()+0x9c>
   2d0b8:	e59f1070 	ldr	r1, [pc, #112]	; 2d130 <CUSBKeyboardDevice::Configure()+0xa0>
   2d0bc:	e5932000 	ldr	r2, [r3]
   2d0c0:	e1a0000d 	mov	r0, sp
   2d0c4:	e282c001 	add	ip, r2, #1
   2d0c8:	e583c000 	str	ip, [r3]
   2d0cc:	eb003048 	bl	391f4 <CString::Format(char const*, ...)>
   2d0d0:	eb0028fa 	bl	374c0 <CDeviceNameService::Get()>
   2d0d4:	e1a04000 	mov	r4, r0
   2d0d8:	e1a0000d 	mov	r0, sp
   2d0dc:	eb002cd2 	bl	3842c <CString::operator char const*() const>
   2d0e0:	e1a01000 	mov	r1, r0
   2d0e4:	e1a00004 	mov	r0, r4
   2d0e8:	e3a04001 	mov	r4, #1
   2d0ec:	e1a02005 	mov	r2, r5
   2d0f0:	e3a03000 	mov	r3, #0
   2d0f4:	eb002880 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   2d0f8:	e1a0000d 	mov	r0, sp
   2d0fc:	eb002c81 	bl	38308 <CString::~CString()>
   2d100:	e1a00004 	mov	r0, r4
   2d104:	e28dd014 	add	sp, sp, #20
   2d108:	e8bd8030 	pop	{r4, r5, pc}
   2d10c:	eb002917 	bl	37570 <CLogger::Get()>
   2d110:	e59f301c 	ldr	r3, [pc, #28]	; 2d134 <CUSBKeyboardDevice::Configure()+0xa4>
   2d114:	e3a02001 	mov	r2, #1
   2d118:	e59f1018 	ldr	r1, [pc, #24]	; 2d138 <CUSBKeyboardDevice::Configure()+0xa8>
   2d11c:	eb0029f3 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2d120:	e1a00004 	mov	r0, r4
   2d124:	e28dd014 	add	sp, sp, #20
   2d128:	e8bd8030 	pop	{r4, r5, pc}
   2d12c:	00058edc 	.word	0x00058edc
   2d130:	0004b444 	.word	0x0004b444
   2d134:	0004b428 	.word	0x0004b428
   2d138:	0004b3dc 	.word	0x0004b3dc

0002d13c <CDWHCIRootPort::CDWHCIRootPort(CDWHCIDevice*)>:
   2d13c:	e3a03000 	mov	r3, #0
   2d140:	e1510003 	cmp	r1, r3
   2d144:	e92d4010 	push	{r4, lr}
   2d148:	e1a04000 	mov	r4, r0
   2d14c:	e880000a 	stm	r0, {r1, r3}
   2d150:	0a000001 	beq	2d15c <CDWHCIRootPort::CDWHCIRootPort(CDWHCIDevice*)+0x20>
   2d154:	e1a00004 	mov	r0, r4
   2d158:	e8bd8010 	pop	{r4, pc}
   2d15c:	e3a0201f 	mov	r2, #31
   2d160:	e59f100c 	ldr	r1, [pc, #12]	; 2d174 <CDWHCIRootPort::CDWHCIRootPort(CDWHCIDevice*)+0x38>
   2d164:	e59f000c 	ldr	r0, [pc, #12]	; 2d178 <CDWHCIRootPort::CDWHCIRootPort(CDWHCIDevice*)+0x3c>
   2d168:	eb002784 	bl	36f80 <assertion_failed>
   2d16c:	e1a00004 	mov	r0, r4
   2d170:	e8bd8010 	pop	{r4, pc}
   2d174:	0004b454 	.word	0x0004b454
   2d178:	0004a808 	.word	0x0004a808

0002d17c <CDWHCIRootPort::~CDWHCIRootPort()>:
   2d17c:	e92d4010 	push	{r4, lr}
   2d180:	e1a04000 	mov	r4, r0
   2d184:	e5900004 	ldr	r0, [r0, #4]
   2d188:	e3500000 	cmp	r0, #0
   2d18c:	0a000002 	beq	2d19c <CDWHCIRootPort::~CDWHCIRootPort()+0x20>
   2d190:	e5903000 	ldr	r3, [r0]
   2d194:	e5933004 	ldr	r3, [r3, #4]
   2d198:	e12fff33 	blx	r3
   2d19c:	e1a00004 	mov	r0, r4
   2d1a0:	e8bd8010 	pop	{r4, pc}

0002d1a4 <CDWHCIRootPort::Initialize()>:
   2d1a4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2d1a8:	e1a04000 	mov	r4, r0
   2d1ac:	e5900000 	ldr	r0, [r0]
   2d1b0:	e24dd00c 	sub	sp, sp, #12
   2d1b4:	e3500000 	cmp	r0, #0
   2d1b8:	0a00004d 	beq	2d2f4 <CDWHCIRootPort::Initialize()+0x150>
   2d1bc:	ebffe565 	bl	26758 <CDWHCIDevice::GetPortSpeed()>
   2d1c0:	e3500003 	cmp	r0, #3
   2d1c4:	e1a06000 	mov	r6, r0
   2d1c8:	0a000041 	beq	2d2d4 <CDWHCIRootPort::Initialize()+0x130>
   2d1cc:	e5943004 	ldr	r3, [r4, #4]
   2d1d0:	e3530000 	cmp	r3, #0
   2d1d4:	0a000003 	beq	2d1e8 <CDWHCIRootPort::Initialize()+0x44>
   2d1d8:	e3a02036 	mov	r2, #54	; 0x36
   2d1dc:	e59f1128 	ldr	r1, [pc, #296]	; 2d30c <CDWHCIRootPort::Initialize()+0x168>
   2d1e0:	e59f0128 	ldr	r0, [pc, #296]	; 2d310 <CDWHCIRootPort::Initialize()+0x16c>
   2d1e4:	eb002765 	bl	36f80 <assertion_failed>
   2d1e8:	e3a0004c 	mov	r0, #76	; 0x4c
   2d1ec:	eb001c49 	bl	34318 <operator new(unsigned int)>
   2d1f0:	e3a05001 	mov	r5, #1
   2d1f4:	e3a03000 	mov	r3, #0
   2d1f8:	e1a07000 	mov	r7, r0
   2d1fc:	e5941000 	ldr	r1, [r4]
   2d200:	e1a02006 	mov	r2, r6
   2d204:	e88d0028 	stm	sp, {r3, r5}
   2d208:	ebfff16e 	bl	297c8 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, int, unsigned char, unsigned char)>
   2d20c:	e5847004 	str	r7, [r4, #4]
   2d210:	e1a00007 	mov	r0, r7
   2d214:	ebfff2e9 	bl	29dc0 <CUSBDevice::Initialize()>
   2d218:	e3500000 	cmp	r0, #0
   2d21c:	e5940004 	ldr	r0, [r4, #4]
   2d220:	1a000008 	bne	2d248 <CDWHCIRootPort::Initialize()+0xa4>
   2d224:	e3500000 	cmp	r0, #0
   2d228:	0a000002 	beq	2d238 <CDWHCIRootPort::Initialize()+0x94>
   2d22c:	e5903000 	ldr	r3, [r0]
   2d230:	e5933004 	ldr	r3, [r3, #4]
   2d234:	e12fff33 	blx	r3
   2d238:	e3a00000 	mov	r0, #0
   2d23c:	e5840004 	str	r0, [r4, #4]
   2d240:	e28dd00c 	add	sp, sp, #12
   2d244:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2d248:	e5903000 	ldr	r3, [r0]
   2d24c:	e593300c 	ldr	r3, [r3, #12]
   2d250:	e12fff33 	blx	r3
   2d254:	e3500000 	cmp	r0, #0
   2d258:	0a000014 	beq	2d2b0 <CDWHCIRootPort::Initialize()+0x10c>
   2d25c:	eb0028c3 	bl	37570 <CLogger::Get()>
   2d260:	e59f30ac 	ldr	r3, [pc, #172]	; 2d314 <CDWHCIRootPort::Initialize()+0x170>
   2d264:	e3a02004 	mov	r2, #4
   2d268:	e59f10a8 	ldr	r1, [pc, #168]	; 2d318 <CDWHCIRootPort::Initialize()+0x174>
   2d26c:	eb00299f 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2d270:	e5940000 	ldr	r0, [r4]
   2d274:	ebffe54c 	bl	267ac <CDWHCIDevice::OvercurrentDetected()>
   2d278:	e3500000 	cmp	r0, #0
   2d27c:	01a00005 	moveq	r0, r5
   2d280:	0affffee 	beq	2d240 <CDWHCIRootPort::Initialize()+0x9c>
   2d284:	eb0028b9 	bl	37570 <CLogger::Get()>
   2d288:	e1a02005 	mov	r2, r5
   2d28c:	e59f3088 	ldr	r3, [pc, #136]	; 2d31c <CDWHCIRootPort::Initialize()+0x178>
   2d290:	e59f1080 	ldr	r1, [pc, #128]	; 2d318 <CDWHCIRootPort::Initialize()+0x174>
   2d294:	eb002995 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2d298:	e5940000 	ldr	r0, [r4]
   2d29c:	ebffe551 	bl	267e8 <CDWHCIDevice::DisableRootPort()>
   2d2a0:	e5940004 	ldr	r0, [r4, #4]
   2d2a4:	e3500000 	cmp	r0, #0
   2d2a8:	1affffdf 	bne	2d22c <CDWHCIRootPort::Initialize()+0x88>
   2d2ac:	eaffffe1 	b	2d238 <CDWHCIRootPort::Initialize()+0x94>
   2d2b0:	eb0028ae 	bl	37570 <CLogger::Get()>
   2d2b4:	e59f3064 	ldr	r3, [pc, #100]	; 2d320 <CDWHCIRootPort::Initialize()+0x17c>
   2d2b8:	e3a02002 	mov	r2, #2
   2d2bc:	e59f1054 	ldr	r1, [pc, #84]	; 2d318 <CDWHCIRootPort::Initialize()+0x174>
   2d2c0:	eb00298a 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2d2c4:	e5940004 	ldr	r0, [r4, #4]
   2d2c8:	e3500000 	cmp	r0, #0
   2d2cc:	1affffd6 	bne	2d22c <CDWHCIRootPort::Initialize()+0x88>
   2d2d0:	eaffffd8 	b	2d238 <CDWHCIRootPort::Initialize()+0x94>
   2d2d4:	eb0028a5 	bl	37570 <CLogger::Get()>
   2d2d8:	e59f3044 	ldr	r3, [pc, #68]	; 2d324 <CDWHCIRootPort::Initialize()+0x180>
   2d2dc:	e3a02001 	mov	r2, #1
   2d2e0:	e59f1030 	ldr	r1, [pc, #48]	; 2d318 <CDWHCIRootPort::Initialize()+0x174>
   2d2e4:	eb002981 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2d2e8:	e3a00000 	mov	r0, #0
   2d2ec:	e28dd00c 	add	sp, sp, #12
   2d2f0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2d2f4:	e59f002c 	ldr	r0, [pc, #44]	; 2d328 <CDWHCIRootPort::Initialize()+0x184>
   2d2f8:	e3a0202c 	mov	r2, #44	; 0x2c
   2d2fc:	e59f1008 	ldr	r1, [pc, #8]	; 2d30c <CDWHCIRootPort::Initialize()+0x168>
   2d300:	eb00271e 	bl	36f80 <assertion_failed>
   2d304:	e5940000 	ldr	r0, [r4]
   2d308:	eaffffab 	b	2d1bc <CDWHCIRootPort::Initialize()+0x18>
   2d30c:	0004b454 	.word	0x0004b454
   2d310:	0004b484 	.word	0x0004b484
   2d314:	0004b4ac 	.word	0x0004b4ac
   2d318:	0004b44c 	.word	0x0004b44c
   2d31c:	0004b4c0 	.word	0x0004b4c0
   2d320:	0004b494 	.word	0x0004b494
   2d324:	0004b468 	.word	0x0004b468
   2d328:	0004a808 	.word	0x0004a808

0002d32c <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)>:
   2d32c:	e92d4070 	push	{r4, r5, r6, lr}
   2d330:	e1a04000 	mov	r4, r0
   2d334:	e1a05002 	mov	r5, r2
   2d338:	eb0004c0 	bl	2e640 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   2d33c:	e3a03000 	mov	r3, #0
   2d340:	e59f202c 	ldr	r2, [pc, #44]	; 2d374 <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)+0x48>
   2d344:	e1550003 	cmp	r5, r3
   2d348:	e5845010 	str	r5, [r4, #16]
   2d34c:	e5842000 	str	r2, [r4]
   2d350:	e5843014 	str	r3, [r4, #20]
   2d354:	e5843018 	str	r3, [r4, #24]
   2d358:	e584301c 	str	r3, [r4, #28]
   2d35c:	0a000002 	beq	2d36c <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)+0x40>
   2d360:	e1a00005 	mov	r0, r5
   2d364:	eb001bec 	bl	3431c <operator new[](unsigned int)>
   2d368:	e584001c 	str	r0, [r4, #28]
   2d36c:	e1a00004 	mov	r0, r4
   2d370:	e8bd8070 	pop	{r4, r5, r6, pc}
   2d374:	0004b4e0 	.word	0x0004b4e0

0002d378 <CUSBHIDDevice::~CUSBHIDDevice()>:
   2d378:	e92d4070 	push	{r4, r5, r6, lr}
   2d37c:	e1a04000 	mov	r4, r0
   2d380:	e590001c 	ldr	r0, [r0, #28]
   2d384:	e59f304c 	ldr	r3, [pc, #76]	; 2d3d8 <CUSBHIDDevice::~CUSBHIDDevice()+0x60>
   2d388:	e3500000 	cmp	r0, #0
   2d38c:	e5843000 	str	r3, [r4]
   2d390:	0a000000 	beq	2d398 <CUSBHIDDevice::~CUSBHIDDevice()+0x20>
   2d394:	eb001be2 	bl	34324 <operator delete[](void*)>
   2d398:	e3a03000 	mov	r3, #0
   2d39c:	e5945014 	ldr	r5, [r4, #20]
   2d3a0:	e584301c 	str	r3, [r4, #28]
   2d3a4:	e1550003 	cmp	r5, r3
   2d3a8:	0a000004 	beq	2d3c0 <CUSBHIDDevice::~CUSBHIDDevice()+0x48>
   2d3ac:	e1a00005 	mov	r0, r5
   2d3b0:	ebfff528 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2d3b4:	e1a00005 	mov	r0, r5
   2d3b8:	e3a01018 	mov	r1, #24
   2d3bc:	eb001bd9 	bl	34328 <operator delete(void*, unsigned int)>
   2d3c0:	e3a03000 	mov	r3, #0
   2d3c4:	e1a00004 	mov	r0, r4
   2d3c8:	e5843014 	str	r3, [r4, #20]
   2d3cc:	eb00044c 	bl	2e504 <CUSBFunction::~CUSBFunction()>
   2d3d0:	e1a00004 	mov	r0, r4
   2d3d4:	e8bd8070 	pop	{r4, r5, r6, pc}
   2d3d8:	0004b4e0 	.word	0x0004b4e0

0002d3dc <CUSBHIDDevice::~CUSBHIDDevice()>:
   2d3dc:	e92d4010 	push	{r4, lr}
   2d3e0:	e1a04000 	mov	r4, r0
   2d3e4:	ebffffe3 	bl	2d378 <CUSBHIDDevice::~CUSBHIDDevice()>
   2d3e8:	e1a00004 	mov	r0, r4
   2d3ec:	e3a01020 	mov	r1, #32
   2d3f0:	eb001bcc 	bl	34328 <operator delete(void*, unsigned int)>
   2d3f4:	e1a00004 	mov	r0, r4
   2d3f8:	e8bd8010 	pop	{r4, pc}

0002d3fc <CUSBHIDDevice::StartRequest()>:
   2d3fc:	e92d4070 	push	{r4, r5, r6, lr}
   2d400:	e5903014 	ldr	r3, [r0, #20]
   2d404:	e24dd008 	sub	sp, sp, #8
   2d408:	e3530000 	cmp	r3, #0
   2d40c:	e1a04000 	mov	r4, r0
   2d410:	0a00002c 	beq	2d4c8 <CUSBHIDDevice::StartRequest()+0xcc>
   2d414:	e594301c 	ldr	r3, [r4, #28]
   2d418:	e3530000 	cmp	r3, #0
   2d41c:	0a000024 	beq	2d4b4 <CUSBHIDDevice::StartRequest()+0xb8>
   2d420:	e5943018 	ldr	r3, [r4, #24]
   2d424:	e3530000 	cmp	r3, #0
   2d428:	0a000003 	beq	2d43c <CUSBHIDDevice::StartRequest()+0x40>
   2d42c:	e3a02077 	mov	r2, #119	; 0x77
   2d430:	e59f10a4 	ldr	r1, [pc, #164]	; 2d4dc <CUSBHIDDevice::StartRequest()+0xe0>
   2d434:	e59f00a4 	ldr	r0, [pc, #164]	; 2d4e0 <CUSBHIDDevice::StartRequest()+0xe4>
   2d438:	eb0026d0 	bl	36f80 <assertion_failed>
   2d43c:	e5943010 	ldr	r3, [r4, #16]
   2d440:	e3530000 	cmp	r3, #0
   2d444:	1a000003 	bne	2d458 <CUSBHIDDevice::StartRequest()+0x5c>
   2d448:	e3a02078 	mov	r2, #120	; 0x78
   2d44c:	e59f1088 	ldr	r1, [pc, #136]	; 2d4dc <CUSBHIDDevice::StartRequest()+0xe0>
   2d450:	e59f008c 	ldr	r0, [pc, #140]	; 2d4e4 <CUSBHIDDevice::StartRequest()+0xe8>
   2d454:	eb0026c9 	bl	36f80 <assertion_failed>
   2d458:	e3a00028 	mov	r0, #40	; 0x28
   2d45c:	eb001bad 	bl	34318 <operator new(unsigned int)>
   2d460:	e3a06000 	mov	r6, #0
   2d464:	e1a05000 	mov	r5, r0
   2d468:	e5943010 	ldr	r3, [r4, #16]
   2d46c:	e594201c 	ldr	r2, [r4, #28]
   2d470:	e5941014 	ldr	r1, [r4, #20]
   2d474:	e58d6000 	str	r6, [sp]
   2d478:	ebfff5f7 	bl	2ac5c <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   2d47c:	e1a03004 	mov	r3, r4
   2d480:	e1a02006 	mov	r2, r6
   2d484:	e1a00005 	mov	r0, r5
   2d488:	e59f1058 	ldr	r1, [pc, #88]	; 2d4e8 <CUSBHIDDevice::StartRequest()+0xec>
   2d48c:	e5845018 	str	r5, [r4, #24]
   2d490:	ebfff666 	bl	2ae30 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   2d494:	e1a00004 	mov	r0, r4
   2d498:	eb0004f6 	bl	2e878 <CUSBFunction::GetHost() const>
   2d49c:	e5903000 	ldr	r3, [r0]
   2d4a0:	e5941018 	ldr	r1, [r4, #24]
   2d4a4:	e593300c 	ldr	r3, [r3, #12]
   2d4a8:	e28dd008 	add	sp, sp, #8
   2d4ac:	e8bd4070 	pop	{r4, r5, r6, lr}
   2d4b0:	e12fff13 	bx	r3
   2d4b4:	e3a02075 	mov	r2, #117	; 0x75
   2d4b8:	e59f101c 	ldr	r1, [pc, #28]	; 2d4dc <CUSBHIDDevice::StartRequest()+0xe0>
   2d4bc:	e59f0028 	ldr	r0, [pc, #40]	; 2d4ec <CUSBHIDDevice::StartRequest()+0xf0>
   2d4c0:	eb0026ae 	bl	36f80 <assertion_failed>
   2d4c4:	eaffffd5 	b	2d420 <CUSBHIDDevice::StartRequest()+0x24>
   2d4c8:	e3a02074 	mov	r2, #116	; 0x74
   2d4cc:	e59f1008 	ldr	r1, [pc, #8]	; 2d4dc <CUSBHIDDevice::StartRequest()+0xe0>
   2d4d0:	e59f0018 	ldr	r0, [pc, #24]	; 2d4f0 <CUSBHIDDevice::StartRequest()+0xf4>
   2d4d4:	eb0026a9 	bl	36f80 <assertion_failed>
   2d4d8:	eaffffcd 	b	2d414 <CUSBHIDDevice::StartRequest()+0x18>
   2d4dc:	0004b508 	.word	0x0004b508
   2d4e0:	0004b54c 	.word	0x0004b54c
   2d4e4:	0004b558 	.word	0x0004b558
   2d4e8:	0002d7f0 	.word	0x0002d7f0
   2d4ec:	0004b534 	.word	0x0004b534
   2d4f0:	0004b51c 	.word	0x0004b51c

0002d4f4 <CUSBHIDDevice::Configure(unsigned int)>:
   2d4f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2d4f8:	e24dd010 	sub	sp, sp, #16
   2d4fc:	e1a06001 	mov	r6, r1
   2d500:	e1a05000 	mov	r5, r0
   2d504:	eb0004aa 	bl	2e7b4 <CUSBFunction::GetNumEndpoints() const>
   2d508:	e3500000 	cmp	r0, #0
   2d50c:	0a000039 	beq	2d5f8 <CUSBHIDDevice::Configure(unsigned int)+0x104>
   2d510:	e3a01005 	mov	r1, #5
   2d514:	e1a00005 	mov	r0, r5
   2d518:	eb000518 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   2d51c:	e2504000 	subs	r4, r0, #0
   2d520:	0a000034 	beq	2d5f8 <CUSBHIDDevice::Configure(unsigned int)+0x104>
   2d524:	e1d430d2 	ldrsb	r3, [r4, #2]
   2d528:	e3530000 	cmp	r3, #0
   2d52c:	aafffff7 	bge	2d510 <CUSBHIDDevice::Configure(unsigned int)+0x1c>
   2d530:	e5d43003 	ldrb	r3, [r4, #3]
   2d534:	e203303f 	and	r3, r3, #63	; 0x3f
   2d538:	e3530003 	cmp	r3, #3
   2d53c:	1afffff3 	bne	2d510 <CUSBHIDDevice::Configure(unsigned int)+0x1c>
   2d540:	e5953014 	ldr	r3, [r5, #20]
   2d544:	e3530000 	cmp	r3, #0
   2d548:	0a000003 	beq	2d55c <CUSBHIDDevice::Configure(unsigned int)+0x68>
   2d54c:	e3a0204d 	mov	r2, #77	; 0x4d
   2d550:	e59f1184 	ldr	r1, [pc, #388]	; 2d6dc <CUSBHIDDevice::Configure(unsigned int)+0x1e8>
   2d554:	e59f0184 	ldr	r0, [pc, #388]	; 2d6e0 <CUSBHIDDevice::Configure(unsigned int)+0x1ec>
   2d558:	eb002688 	bl	36f80 <assertion_failed>
   2d55c:	e1a00005 	mov	r0, r5
   2d560:	eb0004a3 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2d564:	e1a08000 	mov	r8, r0
   2d568:	e3a00018 	mov	r0, #24
   2d56c:	eb001b69 	bl	34318 <operator new(unsigned int)>
   2d570:	e1a07000 	mov	r7, r0
   2d574:	e1a02004 	mov	r2, r4
   2d578:	e1a01008 	mov	r1, r8
   2d57c:	ebfff426 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   2d580:	e5857014 	str	r7, [r5, #20]
   2d584:	e1a00005 	mov	r0, r5
   2d588:	eb0004cb 	bl	2e8bc <CUSBFunction::Configure()>
   2d58c:	e3500000 	cmp	r0, #0
   2d590:	0a00001e 	beq	2d610 <CUSBHIDDevice::Configure(unsigned int)+0x11c>
   2d594:	e1a00005 	mov	r0, r5
   2d598:	eb000537 	bl	2ea7c <CUSBFunction::GetInterfaceSubClass() const>
   2d59c:	e3500001 	cmp	r0, #1
   2d5a0:	e1a04000 	mov	r4, r0
   2d5a4:	0a00002c 	beq	2d65c <CUSBHIDDevice::Configure(unsigned int)+0x168>
   2d5a8:	e5953010 	ldr	r3, [r5, #16]
   2d5ac:	e3530000 	cmp	r3, #0
   2d5b0:	1a00001e 	bne	2d630 <CUSBHIDDevice::Configure(unsigned int)+0x13c>
   2d5b4:	e3560000 	cmp	r6, #0
   2d5b8:	e5856010 	str	r6, [r5, #16]
   2d5bc:	0a000041 	beq	2d6c8 <CUSBHIDDevice::Configure(unsigned int)+0x1d4>
   2d5c0:	e595301c 	ldr	r3, [r5, #28]
   2d5c4:	e3530000 	cmp	r3, #0
   2d5c8:	0a000003 	beq	2d5dc <CUSBHIDDevice::Configure(unsigned int)+0xe8>
   2d5cc:	e3a0206a 	mov	r2, #106	; 0x6a
   2d5d0:	e59f1104 	ldr	r1, [pc, #260]	; 2d6dc <CUSBHIDDevice::Configure(unsigned int)+0x1e8>
   2d5d4:	e59f0108 	ldr	r0, [pc, #264]	; 2d6e4 <CUSBHIDDevice::Configure(unsigned int)+0x1f0>
   2d5d8:	eb002668 	bl	36f80 <assertion_failed>
   2d5dc:	e5950010 	ldr	r0, [r5, #16]
   2d5e0:	eb001b4d 	bl	3431c <operator new[](unsigned int)>
   2d5e4:	e585001c 	str	r0, [r5, #28]
   2d5e8:	e1a00005 	mov	r0, r5
   2d5ec:	e28dd010 	add	sp, sp, #16
   2d5f0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2d5f4:	eaffff80 	b	2d3fc <CUSBHIDDevice::StartRequest()>
   2d5f8:	e1a00005 	mov	r0, r5
   2d5fc:	e59f10e4 	ldr	r1, [pc, #228]	; 2d6e8 <CUSBHIDDevice::Configure(unsigned int)+0x1f4>
   2d600:	eb0004f1 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2d604:	e3a00000 	mov	r0, #0
   2d608:	e28dd010 	add	sp, sp, #16
   2d60c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2d610:	eb0027d6 	bl	37570 <CLogger::Get()>
   2d614:	e59f30d0 	ldr	r3, [pc, #208]	; 2d6ec <CUSBHIDDevice::Configure(unsigned int)+0x1f8>
   2d618:	e3a02001 	mov	r2, #1
   2d61c:	e59f10c4 	ldr	r1, [pc, #196]	; 2d6e8 <CUSBHIDDevice::Configure(unsigned int)+0x1f4>
   2d620:	eb0028b2 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2d624:	e3a00000 	mov	r0, #0
   2d628:	e28dd010 	add	sp, sp, #16
   2d62c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2d630:	e595301c 	ldr	r3, [r5, #28]
   2d634:	e3530000 	cmp	r3, #0
   2d638:	1a000003 	bne	2d64c <CUSBHIDDevice::Configure(unsigned int)+0x158>
   2d63c:	e3a0206d 	mov	r2, #109	; 0x6d
   2d640:	e59f1094 	ldr	r1, [pc, #148]	; 2d6dc <CUSBHIDDevice::Configure(unsigned int)+0x1e8>
   2d644:	e59f00a4 	ldr	r0, [pc, #164]	; 2d6f0 <CUSBHIDDevice::Configure(unsigned int)+0x1fc>
   2d648:	eb00264c 	bl	36f80 <assertion_failed>
   2d64c:	e1a00005 	mov	r0, r5
   2d650:	e28dd010 	add	sp, sp, #16
   2d654:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2d658:	eaffff67 	b	2d3fc <CUSBHIDDevice::StartRequest()>
   2d65c:	e1a00005 	mov	r0, r5
   2d660:	eb000484 	bl	2e878 <CUSBFunction::GetHost() const>
   2d664:	e1a07000 	mov	r7, r0
   2d668:	e1a00005 	mov	r0, r5
   2d66c:	eb000470 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2d670:	e1a08000 	mov	r8, r0
   2d674:	e1a00005 	mov	r0, r5
   2d678:	eb0004ef 	bl	2ea3c <CUSBFunction::GetInterfaceNumber() const>
   2d67c:	e3a03000 	mov	r3, #0
   2d680:	e6ff0070 	uxth	r0, r0
   2d684:	e58d0004 	str	r0, [sp, #4]
   2d688:	e58d300c 	str	r3, [sp, #12]
   2d68c:	e58d3008 	str	r3, [sp, #8]
   2d690:	e58d3000 	str	r3, [sp]
   2d694:	e1a01008 	mov	r1, r8
   2d698:	e1a00007 	mov	r0, r7
   2d69c:	e3a0300b 	mov	r3, #11
   2d6a0:	e3a02021 	mov	r2, #33	; 0x21
   2d6a4:	ebfff4ef 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2d6a8:	e3500000 	cmp	r0, #0
   2d6ac:	aaffffbd 	bge	2d5a8 <CUSBHIDDevice::Configure(unsigned int)+0xb4>
   2d6b0:	eb0027ae 	bl	37570 <CLogger::Get()>
   2d6b4:	e1a02004 	mov	r2, r4
   2d6b8:	e59f3034 	ldr	r3, [pc, #52]	; 2d6f4 <CUSBHIDDevice::Configure(unsigned int)+0x200>
   2d6bc:	e59f1024 	ldr	r1, [pc, #36]	; 2d6e8 <CUSBHIDDevice::Configure(unsigned int)+0x1f4>
   2d6c0:	eb00288a 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2d6c4:	eaffffce 	b	2d604 <CUSBHIDDevice::Configure(unsigned int)+0x110>
   2d6c8:	e3a02068 	mov	r2, #104	; 0x68
   2d6cc:	e59f1008 	ldr	r1, [pc, #8]	; 2d6dc <CUSBHIDDevice::Configure(unsigned int)+0x1e8>
   2d6d0:	e59f0020 	ldr	r0, [pc, #32]	; 2d6f8 <CUSBHIDDevice::Configure(unsigned int)+0x204>
   2d6d4:	eb002629 	bl	36f80 <assertion_failed>
   2d6d8:	eaffffb8 	b	2d5c0 <CUSBHIDDevice::Configure(unsigned int)+0xcc>
   2d6dc:	0004b508 	.word	0x0004b508
   2d6e0:	0004b56c 	.word	0x0004b56c
   2d6e4:	0004b5a0 	.word	0x0004b5a0
   2d6e8:	0004b500 	.word	0x0004b500
   2d6ec:	0004b008 	.word	0x0004b008
   2d6f0:	0004b534 	.word	0x0004b534
   2d6f4:	0004b584 	.word	0x0004b584
   2d6f8:	0004b558 	.word	0x0004b558

0002d6fc <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)>:
   2d6fc:	e92d4070 	push	{r4, r5, r6, lr}
   2d700:	e2515000 	subs	r5, r1, #0
   2d704:	e1a04000 	mov	r4, r0
   2d708:	0a00002e 	beq	2d7c8 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xcc>
   2d70c:	e5943018 	ldr	r3, [r4, #24]
   2d710:	e1530005 	cmp	r3, r5
   2d714:	0a000003 	beq	2d728 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x2c>
   2d718:	e3a02083 	mov	r2, #131	; 0x83
   2d71c:	e59f10b8 	ldr	r1, [pc, #184]	; 2d7dc <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xe0>
   2d720:	e59f00b8 	ldr	r0, [pc, #184]	; 2d7e0 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xe4>
   2d724:	eb002615 	bl	36f80 <assertion_failed>
   2d728:	e1a00005 	mov	r0, r5
   2d72c:	ebfff584 	bl	2ad44 <CUSBRequest::GetStatus() const>
   2d730:	e3500000 	cmp	r0, #0
   2d734:	1a000018 	bne	2d79c <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xa0>
   2d738:	e5943000 	ldr	r3, [r4]
   2d73c:	e3a01000 	mov	r1, #0
   2d740:	e593301c 	ldr	r3, [r3, #28]
   2d744:	e1a00004 	mov	r0, r4
   2d748:	e12fff33 	blx	r3
   2d74c:	e5945018 	ldr	r5, [r4, #24]
   2d750:	e3550000 	cmp	r5, #0
   2d754:	0a000004 	beq	2d76c <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x70>
   2d758:	e1a00005 	mov	r0, r5
   2d75c:	ebfff563 	bl	2acf0 <CUSBRequest::~CUSBRequest()>
   2d760:	e1a00005 	mov	r0, r5
   2d764:	e3a01028 	mov	r1, #40	; 0x28
   2d768:	eb001aee 	bl	34328 <operator delete(void*, unsigned int)>
   2d76c:	e3a03000 	mov	r3, #0
   2d770:	e1a00004 	mov	r0, r4
   2d774:	e5843018 	str	r3, [r4, #24]
   2d778:	ebffff1f 	bl	2d3fc <CUSBHIDDevice::StartRequest()>
   2d77c:	e3500000 	cmp	r0, #0
   2d780:	18bd8070 	popne	{r4, r5, r6, pc}
   2d784:	eb002779 	bl	37570 <CLogger::Get()>
   2d788:	e8bd4070 	pop	{r4, r5, r6, lr}
   2d78c:	e59f3050 	ldr	r3, [pc, #80]	; 2d7e4 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xe8>
   2d790:	e3a02001 	mov	r2, #1
   2d794:	e59f104c 	ldr	r1, [pc, #76]	; 2d7e8 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xec>
   2d798:	ea002854 	b	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2d79c:	e1a00005 	mov	r0, r5
   2d7a0:	ebfff569 	bl	2ad4c <CUSBRequest::GetResultLength() const>
   2d7a4:	e5943010 	ldr	r3, [r4, #16]
   2d7a8:	e1500003 	cmp	r0, r3
   2d7ac:	1affffe1 	bne	2d738 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x3c>
   2d7b0:	e5943000 	ldr	r3, [r4]
   2d7b4:	e594101c 	ldr	r1, [r4, #28]
   2d7b8:	e593301c 	ldr	r3, [r3, #28]
   2d7bc:	e1a00004 	mov	r0, r4
   2d7c0:	e12fff33 	blx	r3
   2d7c4:	eaffffe0 	b	2d74c <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x50>
   2d7c8:	e3a02082 	mov	r2, #130	; 0x82
   2d7cc:	e59f1008 	ldr	r1, [pc, #8]	; 2d7dc <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xe0>
   2d7d0:	e59f0014 	ldr	r0, [pc, #20]	; 2d7ec <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xf0>
   2d7d4:	eb0025e9 	bl	36f80 <assertion_failed>
   2d7d8:	eaffffcb 	b	2d70c <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x10>
   2d7dc:	0004b508 	.word	0x0004b508
   2d7e0:	0004b5b8 	.word	0x0004b5b8
   2d7e4:	0004b5c8 	.word	0x0004b5c8
   2d7e8:	0004b500 	.word	0x0004b500
   2d7ec:	0004a1ac 	.word	0x0004a1ac

0002d7f0 <CUSBHIDDevice::CompletionStub(CUSBRequest*, void*, void*)>:
   2d7f0:	e92d4070 	push	{r4, r5, r6, lr}
   2d7f4:	e2524000 	subs	r4, r2, #0
   2d7f8:	e1a05000 	mov	r5, r0
   2d7fc:	0a000003 	beq	2d810 <CUSBHIDDevice::CompletionStub(CUSBRequest*, void*, void*)+0x20>
   2d800:	e1a01005 	mov	r1, r5
   2d804:	e1a00004 	mov	r0, r4
   2d808:	e8bd4070 	pop	{r4, r5, r6, lr}
   2d80c:	eaffffba 	b	2d6fc <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)>
   2d810:	e59f1018 	ldr	r1, [pc, #24]	; 2d830 <CUSBHIDDevice::CompletionStub(CUSBRequest*, void*, void*)+0x40>
   2d814:	e59f0018 	ldr	r0, [pc, #24]	; 2d834 <CUSBHIDDevice::CompletionStub(CUSBRequest*, void*, void*)+0x44>
   2d818:	e3a0209b 	mov	r2, #155	; 0x9b
   2d81c:	eb0025d7 	bl	36f80 <assertion_failed>
   2d820:	e1a01005 	mov	r1, r5
   2d824:	e1a00004 	mov	r0, r4
   2d828:	e8bd4070 	pop	{r4, r5, r6, lr}
   2d82c:	eaffffb2 	b	2d6fc <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)>
   2d830:	0004b508 	.word	0x0004b508
   2d834:	0004a0c0 	.word	0x0004a0c0

0002d838 <CUSBMouseDevice::~CUSBMouseDevice()>:
   2d838:	e3a02000 	mov	r2, #0
   2d83c:	e92d4010 	push	{r4, lr}
   2d840:	e1a04000 	mov	r4, r0
   2d844:	e59f301c 	ldr	r3, [pc, #28]	; 2d868 <CUSBMouseDevice::~CUSBMouseDevice()+0x30>
   2d848:	e580203c 	str	r2, [r0, #60]	; 0x3c
   2d84c:	e5803000 	str	r3, [r0]
   2d850:	e2800020 	add	r0, r0, #32
   2d854:	eb0011da 	bl	31fc4 <CMouseBehaviour::~CMouseBehaviour()>
   2d858:	e1a00004 	mov	r0, r4
   2d85c:	ebfffec5 	bl	2d378 <CUSBHIDDevice::~CUSBHIDDevice()>
   2d860:	e1a00004 	mov	r0, r4
   2d864:	e8bd8010 	pop	{r4, pc}
   2d868:	0004b5e8 	.word	0x0004b5e8

0002d86c <CUSBMouseDevice::~CUSBMouseDevice()>:
   2d86c:	e3a02000 	mov	r2, #0
   2d870:	e92d4010 	push	{r4, lr}
   2d874:	e1a04000 	mov	r4, r0
   2d878:	e59f3028 	ldr	r3, [pc, #40]	; 2d8a8 <CUSBMouseDevice::~CUSBMouseDevice()+0x3c>
   2d87c:	e580203c 	str	r2, [r0, #60]	; 0x3c
   2d880:	e5803000 	str	r3, [r0]
   2d884:	e2800020 	add	r0, r0, #32
   2d888:	eb0011cd 	bl	31fc4 <CMouseBehaviour::~CMouseBehaviour()>
   2d88c:	e1a00004 	mov	r0, r4
   2d890:	ebfffeb8 	bl	2d378 <CUSBHIDDevice::~CUSBHIDDevice()>
   2d894:	e1a00004 	mov	r0, r4
   2d898:	e3a01040 	mov	r1, #64	; 0x40
   2d89c:	eb001aa1 	bl	34328 <operator delete(void*, unsigned int)>
   2d8a0:	e1a00004 	mov	r0, r4
   2d8a4:	e8bd8010 	pop	{r4, pc}
   2d8a8:	0004b5e8 	.word	0x0004b5e8

0002d8ac <CUSBMouseDevice::ReportHandler(unsigned char const*)>:
   2d8ac:	e92d4070 	push	{r4, r5, r6, lr}
   2d8b0:	e2514000 	subs	r4, r1, #0
   2d8b4:	08bd8070 	popeq	{r4, r5, r6, pc}
   2d8b8:	e1a05000 	mov	r5, r0
   2d8bc:	e5d43000 	ldrb	r3, [r4]
   2d8c0:	e1d420d1 	ldrsb	r2, [r4, #1]
   2d8c4:	e2036001 	and	r6, r3, #1
   2d8c8:	e3130002 	tst	r3, #2
   2d8cc:	13866002 	orrne	r6, r6, #2
   2d8d0:	e3130004 	tst	r3, #4
   2d8d4:	13866004 	orrne	r6, r6, #4
   2d8d8:	e1d430d2 	ldrsb	r3, [r4, #2]
   2d8dc:	e1a01006 	mov	r1, r6
   2d8e0:	e2800020 	add	r0, r0, #32
   2d8e4:	eb001289 	bl	32310 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)>
   2d8e8:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
   2d8ec:	e3530000 	cmp	r3, #0
   2d8f0:	08bd8070 	popeq	{r4, r5, r6, pc}
   2d8f4:	e1a00006 	mov	r0, r6
   2d8f8:	e1d420d2 	ldrsb	r2, [r4, #2]
   2d8fc:	e1d410d1 	ldrsb	r1, [r4, #1]
   2d900:	e8bd4070 	pop	{r4, r5, r6, lr}
   2d904:	e12fff13 	bx	r3

0002d908 <CUSBMouseDevice::CUSBMouseDevice(CUSBFunction*)>:
   2d908:	e92d4010 	push	{r4, lr}
   2d90c:	e1a04000 	mov	r4, r0
   2d910:	e3a02003 	mov	r2, #3
   2d914:	ebfffe84 	bl	2d32c <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)>
   2d918:	e1a00004 	mov	r0, r4
   2d91c:	e59f3014 	ldr	r3, [pc, #20]	; 2d938 <CUSBMouseDevice::CUSBMouseDevice(CUSBFunction*)+0x30>
   2d920:	e4803020 	str	r3, [r0], #32
   2d924:	eb00119d 	bl	31fa0 <CMouseBehaviour::CMouseBehaviour()>
   2d928:	e3a03000 	mov	r3, #0
   2d92c:	e1a00004 	mov	r0, r4
   2d930:	e584303c 	str	r3, [r4, #60]	; 0x3c
   2d934:	e8bd8010 	pop	{r4, pc}
   2d938:	0004b5e8 	.word	0x0004b5e8

0002d93c <CUSBMouseDevice::Setup(unsigned int, unsigned int)>:
   2d93c:	e2800020 	add	r0, r0, #32
   2d940:	ea0011a0 	b	31fc8 <CMouseBehaviour::Setup(unsigned int, unsigned int)>

0002d944 <CUSBMouseDevice::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))>:
   2d944:	e2800020 	add	r0, r0, #32
   2d948:	ea0011f3 	b	3211c <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))>

0002d94c <CUSBMouseDevice::SetCursor(unsigned int, unsigned int)>:
   2d94c:	e2800020 	add	r0, r0, #32
   2d950:	ea001225 	b	321ec <CMouseBehaviour::SetCursor(unsigned int, unsigned int)>

0002d954 <CUSBMouseDevice::ShowCursor(int)>:
   2d954:	e2800020 	add	r0, r0, #32
   2d958:	ea00124e 	b	32298 <CMouseBehaviour::ShowCursor(int)>

0002d95c <CUSBMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int))>:
   2d95c:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
   2d960:	e92d4070 	push	{r4, r5, r6, lr}
   2d964:	e3530000 	cmp	r3, #0
   2d968:	e1a04000 	mov	r4, r0
   2d96c:	e1a05001 	mov	r5, r1
   2d970:	0a000003 	beq	2d984 <CUSBMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int))+0x28>
   2d974:	e3a02051 	mov	r2, #81	; 0x51
   2d978:	e59f1024 	ldr	r1, [pc, #36]	; 2d9a4 <CUSBMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int))+0x48>
   2d97c:	e59f0024 	ldr	r0, [pc, #36]	; 2d9a8 <CUSBMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int))+0x4c>
   2d980:	eb00257e 	bl	36f80 <assertion_failed>
   2d984:	e3550000 	cmp	r5, #0
   2d988:	e584503c 	str	r5, [r4, #60]	; 0x3c
   2d98c:	18bd8070 	popne	{r4, r5, r6, pc}
   2d990:	e3a02053 	mov	r2, #83	; 0x53
   2d994:	e8bd4070 	pop	{r4, r5, r6, lr}
   2d998:	e59f1004 	ldr	r1, [pc, #4]	; 2d9a4 <CUSBMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int))+0x48>
   2d99c:	e59f0008 	ldr	r0, [pc, #8]	; 2d9ac <CUSBMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int))+0x50>
   2d9a0:	ea002576 	b	36f80 <assertion_failed>
   2d9a4:	0004b610 	.word	0x0004b610
   2d9a8:	0004b620 	.word	0x0004b620
   2d9ac:	0004b638 	.word	0x0004b638

0002d9b0 <CUSBMouseDevice::Configure()>:
   2d9b0:	e92d4030 	push	{r4, r5, lr}
   2d9b4:	e3a01000 	mov	r1, #0
   2d9b8:	e24dd014 	sub	sp, sp, #20
   2d9bc:	e1a05000 	mov	r5, r0
   2d9c0:	ebfffecb 	bl	2d4f4 <CUSBHIDDevice::Configure(unsigned int)>
   2d9c4:	e2504000 	subs	r4, r0, #0
   2d9c8:	0a000017 	beq	2da2c <CUSBMouseDevice::Configure()+0x7c>
   2d9cc:	e1a0000d 	mov	r0, sp
   2d9d0:	eb002a7f 	bl	383d4 <CString::CString()>
   2d9d4:	e59f3070 	ldr	r3, [pc, #112]	; 2da4c <CUSBMouseDevice::Configure()+0x9c>
   2d9d8:	e59f1070 	ldr	r1, [pc, #112]	; 2da50 <CUSBMouseDevice::Configure()+0xa0>
   2d9dc:	e5932000 	ldr	r2, [r3]
   2d9e0:	e1a0000d 	mov	r0, sp
   2d9e4:	e282c001 	add	ip, r2, #1
   2d9e8:	e583c000 	str	ip, [r3]
   2d9ec:	eb002e00 	bl	391f4 <CString::Format(char const*, ...)>
   2d9f0:	eb0026b2 	bl	374c0 <CDeviceNameService::Get()>
   2d9f4:	e1a04000 	mov	r4, r0
   2d9f8:	e1a0000d 	mov	r0, sp
   2d9fc:	eb002a8a 	bl	3842c <CString::operator char const*() const>
   2da00:	e1a01000 	mov	r1, r0
   2da04:	e1a00004 	mov	r0, r4
   2da08:	e3a04001 	mov	r4, #1
   2da0c:	e1a02005 	mov	r2, r5
   2da10:	e3a03000 	mov	r3, #0
   2da14:	eb002638 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   2da18:	e1a0000d 	mov	r0, sp
   2da1c:	eb002a39 	bl	38308 <CString::~CString()>
   2da20:	e1a00004 	mov	r0, r4
   2da24:	e28dd014 	add	sp, sp, #20
   2da28:	e8bd8030 	pop	{r4, r5, pc}
   2da2c:	eb0026cf 	bl	37570 <CLogger::Get()>
   2da30:	e59f301c 	ldr	r3, [pc, #28]	; 2da54 <CUSBMouseDevice::Configure()+0xa4>
   2da34:	e3a02001 	mov	r2, #1
   2da38:	e59f1018 	ldr	r1, [pc, #24]	; 2da58 <CUSBMouseDevice::Configure()+0xa8>
   2da3c:	eb0027ab 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2da40:	e1a00004 	mov	r0, r4
   2da44:	e28dd014 	add	sp, sp, #20
   2da48:	e8bd8030 	pop	{r4, r5, pc}
   2da4c:	00058ee0 	.word	0x00058ee0
   2da50:	0004b650 	.word	0x0004b650
   2da54:	0004b428 	.word	0x0004b428
   2da58:	0004b608 	.word	0x0004b608

0002da5c <CUSBGamePadDevice::~CUSBGamePadDevice()>:
   2da5c:	e3a03000 	mov	r3, #0
   2da60:	e92d4010 	push	{r4, lr}
   2da64:	e1a04000 	mov	r4, r0
   2da68:	e5900094 	ldr	r0, [r0, #148]	; 0x94
   2da6c:	e59f2028 	ldr	r2, [pc, #40]	; 2da9c <CUSBGamePadDevice::~CUSBGamePadDevice()+0x40>
   2da70:	e1500003 	cmp	r0, r3
   2da74:	e5842000 	str	r2, [r4]
   2da78:	e5843090 	str	r3, [r4, #144]	; 0x90
   2da7c:	0a000000 	beq	2da84 <CUSBGamePadDevice::~CUSBGamePadDevice()+0x28>
   2da80:	eb001a27 	bl	34324 <operator delete[](void*)>
   2da84:	e3a03000 	mov	r3, #0
   2da88:	e1a00004 	mov	r0, r4
   2da8c:	e5843094 	str	r3, [r4, #148]	; 0x94
   2da90:	ebfffe38 	bl	2d378 <CUSBHIDDevice::~CUSBHIDDevice()>
   2da94:	e1a00004 	mov	r0, r4
   2da98:	e8bd8010 	pop	{r4, pc}
   2da9c:	0004b664 	.word	0x0004b664

0002daa0 <CUSBGamePadDevice::~CUSBGamePadDevice()>:
   2daa0:	e92d4010 	push	{r4, lr}
   2daa4:	e1a04000 	mov	r4, r0
   2daa8:	ebffffeb 	bl	2da5c <CUSBGamePadDevice::~CUSBGamePadDevice()>
   2daac:	e1a00004 	mov	r0, r4
   2dab0:	e3a010a0 	mov	r1, #160	; 0xa0
   2dab4:	eb001a1b 	bl	34328 <operator delete(void*, unsigned int)>
   2dab8:	e1a00004 	mov	r0, r4
   2dabc:	e8bd8010 	pop	{r4, pc}

0002dac0 <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)>:
   2dac0:	e92d4010 	push	{r4, lr}
   2dac4:	e1a04000 	mov	r4, r0
   2dac8:	e3a02000 	mov	r2, #0
   2dacc:	ebfffe16 	bl	2d32c <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)>
   2dad0:	e3a01000 	mov	r1, #0
   2dad4:	e1a03004 	mov	r3, r4
   2dad8:	e59f005c 	ldr	r0, [pc, #92]	; 2db3c <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)+0x7c>
   2dadc:	e1a02001 	mov	r2, r1
   2dae0:	e5841090 	str	r1, [r4, #144]	; 0x90
   2dae4:	e5841094 	str	r1, [r4, #148]	; 0x94
   2dae8:	e5841098 	str	r1, [r4, #152]	; 0x98
   2daec:	e5841020 	str	r1, [r4, #32]
   2daf0:	e5840000 	str	r0, [r4]
   2daf4:	e2841048 	add	r1, r4, #72	; 0x48
   2daf8:	e5832024 	str	r2, [r3, #36]	; 0x24
   2dafc:	e5832028 	str	r2, [r3, #40]	; 0x28
   2db00:	e583202c 	str	r2, [r3, #44]	; 0x2c
   2db04:	e283300c 	add	r3, r3, #12
   2db08:	e1530001 	cmp	r3, r1
   2db0c:	1afffff9 	bne	2daf8 <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)+0x38>
   2db10:	e584206c 	str	r2, [r4, #108]	; 0x6c
   2db14:	e5842070 	str	r2, [r4, #112]	; 0x70
   2db18:	e5842074 	str	r2, [r4, #116]	; 0x74
   2db1c:	e5842078 	str	r2, [r4, #120]	; 0x78
   2db20:	e584207c 	str	r2, [r4, #124]	; 0x7c
   2db24:	e5842080 	str	r2, [r4, #128]	; 0x80
   2db28:	e5842084 	str	r2, [r4, #132]	; 0x84
   2db2c:	e5842088 	str	r2, [r4, #136]	; 0x88
   2db30:	e584208c 	str	r2, [r4, #140]	; 0x8c
   2db34:	e1a00004 	mov	r0, r4
   2db38:	e8bd8010 	pop	{r4, pc}
   2db3c:	0004b664 	.word	0x0004b664

0002db40 <CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))>:
   2db40:	e5903090 	ldr	r3, [r0, #144]	; 0x90
   2db44:	e92d4070 	push	{r4, r5, r6, lr}
   2db48:	e3530000 	cmp	r3, #0
   2db4c:	e1a04000 	mov	r4, r0
   2db50:	e1a05001 	mov	r5, r1
   2db54:	0a000003 	beq	2db68 <CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))+0x28>
   2db58:	e3a020c8 	mov	r2, #200	; 0xc8
   2db5c:	e59f1024 	ldr	r1, [pc, #36]	; 2db88 <CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))+0x48>
   2db60:	e59f0024 	ldr	r0, [pc, #36]	; 2db8c <CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))+0x4c>
   2db64:	eb002505 	bl	36f80 <assertion_failed>
   2db68:	e3550000 	cmp	r5, #0
   2db6c:	e5845090 	str	r5, [r4, #144]	; 0x90
   2db70:	18bd8070 	popne	{r4, r5, r6, pc}
   2db74:	e3a020ca 	mov	r2, #202	; 0xca
   2db78:	e8bd4070 	pop	{r4, r5, r6, lr}
   2db7c:	e59f1004 	ldr	r1, [pc, #4]	; 2db88 <CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))+0x48>
   2db80:	e59f0008 	ldr	r0, [pc, #8]	; 2db90 <CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))+0x50>
   2db84:	ea0024fd 	b	36f80 <assertion_failed>
   2db88:	0004b694 	.word	0x0004b694
   2db8c:	0004b620 	.word	0x0004b620
   2db90:	0004b638 	.word	0x0004b638

0002db94 <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>:
   2db94:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2db98:	e081e002 	add	lr, r1, r2
   2db9c:	e28e9007 	add	r9, lr, #7
   2dba0:	e1a031a9 	lsr	r3, r9, #3
   2dba4:	e1a041a1 	lsr	r4, r1, #3
   2dba8:	e1540003 	cmp	r4, r3
   2dbac:	e24dd00c 	sub	sp, sp, #12
   2dbb0:	23a00000 	movcs	r0, #0
   2dbb4:	2a000030 	bcs	2dc7c <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0xe8>
   2dbb8:	e3a05001 	mov	r5, #1
   2dbbc:	e1a0a000 	mov	sl, r0
   2dbc0:	e3a07000 	mov	r7, #0
   2dbc4:	e2011007 	and	r1, r1, #7
   2dbc8:	e0816002 	add	r6, r1, r2
   2dbcc:	e1a06615 	lsl	r6, r5, r6
   2dbd0:	e6ef6076 	uxtb	r6, r6
   2dbd4:	e1a05115 	lsl	r5, r5, r1
   2dbd8:	e6ef5075 	uxtb	r5, r5
   2dbdc:	e2468001 	sub	r8, r6, #1
   2dbe0:	e24ee001 	sub	lr, lr, #1
   2dbe4:	e0466005 	sub	r6, r6, r5
   2dbe8:	e244c001 	sub	ip, r4, #1
   2dbec:	e2655000 	rsb	r5, r5, #0
   2dbf0:	e24a9001 	sub	r9, sl, #1
   2dbf4:	e6ef8078 	uxtb	r8, r8
   2dbf8:	e1a00007 	mov	r0, r7
   2dbfc:	e1a0e1ae 	lsr	lr, lr, #3
   2dc00:	e58d8004 	str	r8, [sp, #4]
   2dc04:	e6ef6076 	uxtb	r6, r6
   2dc08:	e6ef5075 	uxtb	r5, r5
   2dc0c:	e261b008 	rsb	fp, r1, #8
   2dc10:	e08ac00c 	add	ip, sl, ip
   2dc14:	e0899003 	add	r9, r9, r3
   2dc18:	ea000008 	b	2dc40 <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0xac>
   2dc1c:	e15e0003 	cmp	lr, r3
   2dc20:	059d3004 	ldreq	r3, [sp, #4]
   2dc24:	12877008 	addne	r7, r7, #8
   2dc28:	00088003 	andeq	r8, r8, r3
   2dc2c:	10423007 	subne	r3, r2, r7
   2dc30:	01800008 	orreq	r0, r0, r8
   2dc34:	11800318 	orrne	r0, r0, r8, lsl r3
   2dc38:	e15c0009 	cmp	ip, r9
   2dc3c:	0a00000e 	beq	2dc7c <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0xe8>
   2dc40:	e5fc8001 	ldrb	r8, [ip, #1]!
   2dc44:	e15e0004 	cmp	lr, r4
   2dc48:	00060008 	andeq	r0, r6, r8
   2dc4c:	01a00150 	asreq	r0, r0, r1
   2dc50:	0afffff8 	beq	2dc38 <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0xa4>
   2dc54:	e04c300a 	sub	r3, ip, sl
   2dc58:	e1530004 	cmp	r3, r4
   2dc5c:	1affffee 	bne	2dc1c <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0x88>
   2dc60:	e087700b 	add	r7, r7, fp
   2dc64:	e0050008 	and	r0, r5, r8
   2dc68:	e1a00150 	asr	r0, r0, r1
   2dc6c:	e0423007 	sub	r3, r2, r7
   2dc70:	e15c0009 	cmp	ip, r9
   2dc74:	e1a00310 	lsl	r0, r0, r3
   2dc78:	1afffff0 	bne	2dc40 <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0xac>
   2dc7c:	e28dd00c 	add	sp, sp, #12
   2dc80:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002dc84 <CUSBGamePadDevice::BitGetSigned(void const*, unsigned int, unsigned int)>:
   2dc84:	e92d4010 	push	{r4, lr}
   2dc88:	e1a04002 	mov	r4, r2
   2dc8c:	ebffffc0 	bl	2db94 <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>
   2dc90:	e3a02001 	mov	r2, #1
   2dc94:	e2443001 	sub	r3, r4, #1
   2dc98:	e0103312 	ands	r3, r0, r2, lsl r3
   2dc9c:	11a02412 	lslne	r2, r2, r4
   2dca0:	12622000 	rsbne	r2, r2, #0
   2dca4:	11800002 	orrne	r0, r0, r2
   2dca8:	e8bd8010 	pop	{r4, pc}

0002dcac <CUSBGamePadDevice::DecodeReport(unsigned char const*)>:
   2dcac:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dcb0:	e5905094 	ldr	r5, [r0, #148]	; 0x94
   2dcb4:	e24dd03c 	sub	sp, sp, #60	; 0x3c
   2dcb8:	e3550000 	cmp	r5, #0
   2dcbc:	e1a0b000 	mov	fp, r0
   2dcc0:	e1a08001 	mov	r8, r1
   2dcc4:	0a00009d 	beq	2df40 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x294>
   2dcc8:	e1db49b8 	ldrh	r4, [fp, #152]	; 0x98
   2dccc:	e3540000 	cmp	r4, #0
   2dcd0:	0a0000fa 	beq	2e0c0 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x414>
   2dcd4:	e3a07000 	mov	r7, #0
   2dcd8:	e59f93ec 	ldr	r9, [pc, #1004]	; 2e0cc <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x420>
   2dcdc:	e58db020 	str	fp, [sp, #32]
   2dce0:	e1a06007 	mov	r6, r7
   2dce4:	e58d701c 	str	r7, [sp, #28]
   2dce8:	e58d7018 	str	r7, [sp, #24]
   2dcec:	e58d7004 	str	r7, [sp, #4]
   2dcf0:	e58d7008 	str	r7, [sp, #8]
   2dcf4:	e1a0a007 	mov	sl, r7
   2dcf8:	e58d9014 	str	r9, [sp, #20]
   2dcfc:	e58d9024 	str	r9, [sp, #36]	; 0x24
   2dd00:	e58d900c 	str	r9, [sp, #12]
   2dd04:	e58d9010 	str	r9, [sp, #16]
   2dd08:	e1a0b008 	mov	fp, r8
   2dd0c:	ea00000e 	b	2dd4c <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0xa0>
   2dd10:	e3530034 	cmp	r3, #52	; 0x34
   2dd14:	0a00005c 	beq	2de8c <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x1e0>
   2dd18:	ca00003c 	bgt	2de10 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x164>
   2dd1c:	e3530008 	cmp	r3, #8
   2dd20:	0a000051 	beq	2de6c <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x1c0>
   2dd24:	da000061 	ble	2deb0 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x204>
   2dd28:	e3530014 	cmp	r3, #20
   2dd2c:	058d8024 	streq	r8, [sp, #36]	; 0x24
   2dd30:	0a000003 	beq	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2dd34:	e3530024 	cmp	r3, #36	; 0x24
   2dd38:	e59d200c 	ldr	r2, [sp, #12]
   2dd3c:	01a02008 	moveq	r2, r8
   2dd40:	e58d200c 	str	r2, [sp, #12]
   2dd44:	e3540000 	cmp	r4, #0
   2dd48:	0a000025 	beq	2dde4 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x138>
   2dd4c:	e1d530d0 	ldrsb	r3, [r5]
   2dd50:	e2038003 	and	r8, r3, #3
   2dd54:	e3580001 	cmp	r8, #1
   2dd58:	0a00003e 	beq	2de58 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x1ac>
   2dd5c:	e3580002 	cmp	r8, #2
   2dd60:	0a000035 	beq	2de3c <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x190>
   2dd64:	e3580000 	cmp	r8, #0
   2dd68:	02444001 	subeq	r4, r4, #1
   2dd6c:	06ff4074 	uxtheq	r4, r4
   2dd70:	02855001 	addeq	r5, r5, #1
   2dd74:	0a00000a 	beq	2dda4 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0xf8>
   2dd78:	e1d580d3 	ldrsb	r8, [r5, #3]
   2dd7c:	e1d520d2 	ldrsb	r2, [r5, #2]
   2dd80:	e1d510d1 	ldrsb	r1, [r5, #1]
   2dd84:	e1a08808 	lsl	r8, r8, #16
   2dd88:	e1888402 	orr	r8, r8, r2, lsl #8
   2dd8c:	e1d520d4 	ldrsb	r2, [r5, #4]
   2dd90:	e2444005 	sub	r4, r4, #5
   2dd94:	e1888001 	orr	r8, r8, r1
   2dd98:	e6ff4074 	uxth	r4, r4
   2dd9c:	e1888c02 	orr	r8, r8, r2, lsl #24
   2dda0:	e2855005 	add	r5, r5, #5
   2dda4:	e20330fc 	and	r3, r3, #252	; 0xfc
   2dda8:	e3530084 	cmp	r3, #132	; 0x84
   2ddac:	1affffd7 	bne	2dd10 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x64>
   2ddb0:	e3560000 	cmp	r6, #0
   2ddb4:	1a00000a 	bne	2dde4 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x138>
   2ddb8:	e1a01006 	mov	r1, r6
   2ddbc:	e3a02008 	mov	r2, #8
   2ddc0:	e1a0000b 	mov	r0, fp
   2ddc4:	ebffff72 	bl	2db94 <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>
   2ddc8:	e3500000 	cmp	r0, #0
   2ddcc:	11500008 	cmpne	r0, r8
   2ddd0:	1a00000c 	bne	2de08 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x15c>
   2ddd4:	e3540000 	cmp	r4, #0
   2ddd8:	e1a06008 	mov	r6, r8
   2dddc:	e3a0a008 	mov	sl, #8
   2dde0:	1affffd9 	bne	2dd4c <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0xa0>
   2dde4:	e28a4007 	add	r4, sl, #7
   2dde8:	e1a041a4 	lsr	r4, r4, #3
   2ddec:	e59db020 	ldr	fp, [sp, #32]
   2ddf0:	e6ff4074 	uxth	r4, r4
   2ddf4:	e59d3018 	ldr	r3, [sp, #24]
   2ddf8:	e1cb49ba 	strh	r4, [fp, #154]	; 0x9a
   2ddfc:	e58b3020 	str	r3, [fp, #32]
   2de00:	e59d301c 	ldr	r3, [sp, #28]
   2de04:	e58b306c 	str	r3, [fp, #108]	; 0x6c
   2de08:	e28dd03c 	add	sp, sp, #60	; 0x3c
   2de0c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de10:	e3530074 	cmp	r3, #116	; 0x74
   2de14:	058d8008 	streq	r8, [sp, #8]
   2de18:	0affffc9 	beq	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2de1c:	da00002a 	ble	2decc <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x220>
   2de20:	e3530080 	cmp	r3, #128	; 0x80
   2de24:	0a00001a 	beq	2de94 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x1e8>
   2de28:	e3530094 	cmp	r3, #148	; 0x94
   2de2c:	e59d2004 	ldr	r2, [sp, #4]
   2de30:	01a02008 	moveq	r2, r8
   2de34:	e58d2004 	str	r2, [sp, #4]
   2de38:	eaffffc1 	b	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2de3c:	e5d58001 	ldrb	r8, [r5, #1]
   2de40:	e1d520d2 	ldrsb	r2, [r5, #2]
   2de44:	e2444003 	sub	r4, r4, #3
   2de48:	e6ff4074 	uxth	r4, r4
   2de4c:	e1888402 	orr	r8, r8, r2, lsl #8
   2de50:	e2855003 	add	r5, r5, #3
   2de54:	eaffffd2 	b	2dda4 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0xf8>
   2de58:	e2444002 	sub	r4, r4, #2
   2de5c:	e1d580d1 	ldrsb	r8, [r5, #1]
   2de60:	e6ff4074 	uxth	r4, r4
   2de64:	e2855002 	add	r5, r5, #2
   2de68:	eaffffcd 	b	2dda4 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0xf8>
   2de6c:	e3580036 	cmp	r8, #54	; 0x36
   2de70:	ca00001a 	bgt	2dee0 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x234>
   2de74:	e3580030 	cmp	r8, #48	; 0x30
   2de78:	aa00002d 	bge	2df34 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x288>
   2de7c:	e2488004 	sub	r8, r8, #4
   2de80:	e3580001 	cmp	r8, #1
   2de84:	93a07001 	movls	r7, #1
   2de88:	eaffffad 	b	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2de8c:	e58d8014 	str	r8, [sp, #20]
   2de90:	eaffffab 	b	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2de94:	e2088003 	and	r8, r8, #3
   2de98:	e3580002 	cmp	r8, #2
   2de9c:	e1cd20d4 	ldrd	r2, [sp, #4]
   2dea0:	e0080293 	mul	r8, r3, r2
   2dea4:	0a000012 	beq	2def4 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x248>
   2dea8:	e08aa008 	add	sl, sl, r8
   2deac:	eaffffa4 	b	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2deb0:	e3530004 	cmp	r3, #4
   2deb4:	1affffa2 	bne	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2deb8:	e3580009 	cmp	r8, #9
   2debc:	1affffa0 	bne	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2dec0:	e3570001 	cmp	r7, #1
   2dec4:	03a07002 	moveq	r7, #2
   2dec8:	eaffff9d 	b	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2decc:	e3530044 	cmp	r3, #68	; 0x44
   2ded0:	e59d2010 	ldr	r2, [sp, #16]
   2ded4:	01a02008 	moveq	r2, r8
   2ded8:	e58d2010 	str	r2, [sp, #16]
   2dedc:	eaffff98 	b	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2dee0:	e3580039 	cmp	r8, #57	; 0x39
   2dee4:	1affff96 	bne	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2dee8:	e3570001 	cmp	r7, #1
   2deec:	03a07004 	moveq	r7, #4
   2def0:	eaffff93 	b	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2def4:	e3570003 	cmp	r7, #3
   2def8:	0a000016 	beq	2df58 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x2ac>
   2defc:	e3570004 	cmp	r7, #4
   2df00:	0a000043 	beq	2e014 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x368>
   2df04:	e3570002 	cmp	r7, #2
   2df08:	1affffe6 	bne	2dea8 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x1fc>
   2df0c:	e59d9020 	ldr	r9, [sp, #32]
   2df10:	e59d3004 	ldr	r3, [sp, #4]
   2df14:	e1a02008 	mov	r2, r8
   2df18:	e5893088 	str	r3, [r9, #136]	; 0x88
   2df1c:	e1a0100a 	mov	r1, sl
   2df20:	e1a0000b 	mov	r0, fp
   2df24:	ebffff1a 	bl	2db94 <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>
   2df28:	e3a07001 	mov	r7, #1
   2df2c:	e589008c 	str	r0, [r9, #140]	; 0x8c
   2df30:	eaffffdc 	b	2dea8 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x1fc>
   2df34:	e3570001 	cmp	r7, #1
   2df38:	03a07003 	moveq	r7, #3
   2df3c:	eaffff80 	b	2dd44 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x98>
   2df40:	e3a020ec 	mov	r2, #236	; 0xec
   2df44:	e59f1184 	ldr	r1, [pc, #388]	; 2e0d0 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x424>
   2df48:	e59f0184 	ldr	r0, [pc, #388]	; 2e0d4 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x428>
   2df4c:	eb00240b 	bl	36f80 <assertion_failed>
   2df50:	e59b5094 	ldr	r5, [fp, #148]	; 0x94
   2df54:	eaffff5b 	b	2dcc8 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x1c>
   2df58:	e3520000 	cmp	r2, #0
   2df5c:	0a00004d 	beq	2e098 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x3ec>
   2df60:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   2df64:	e59f0160 	ldr	r0, [pc, #352]	; 2e0cc <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x420>
   2df68:	e1a02003 	mov	r2, r3
   2df6c:	e1530000 	cmp	r3, r0
   2df70:	e59d1014 	ldr	r1, [sp, #20]
   2df74:	e59d300c 	ldr	r3, [sp, #12]
   2df78:	e59dc010 	ldr	ip, [sp, #16]
   2df7c:	01a02001 	moveq	r2, r1
   2df80:	e1530000 	cmp	r3, r0
   2df84:	e1a01003 	mov	r1, r3
   2df88:	01a0100c 	moveq	r1, ip
   2df8c:	e59d0018 	ldr	r0, [sp, #24]
   2df90:	e59dc020 	ldr	ip, [sp, #32]
   2df94:	e0807080 	add	r7, r0, r0, lsl #1
   2df98:	e58d5028 	str	r5, [sp, #40]	; 0x28
   2df9c:	e58d4018 	str	r4, [sp, #24]
   2dfa0:	e58d6030 	str	r6, [sp, #48]	; 0x30
   2dfa4:	e58d8034 	str	r8, [sp, #52]	; 0x34
   2dfa8:	e3a09000 	mov	r9, #0
   2dfac:	e08c7107 	add	r7, ip, r7, lsl #2
   2dfb0:	e1a04002 	mov	r4, r2
   2dfb4:	e58da02c 	str	sl, [sp, #44]	; 0x2c
   2dfb8:	e59d6008 	ldr	r6, [sp, #8]
   2dfbc:	e1a05000 	mov	r5, r0
   2dfc0:	e1a08001 	mov	r8, r1
   2dfc4:	ea000009 	b	2dff0 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x344>
   2dfc8:	ebfffef1 	bl	2db94 <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>
   2dfcc:	e59d3004 	ldr	r3, [sp, #4]
   2dfd0:	e2899001 	add	r9, r9, #1
   2dfd4:	e3590005 	cmp	r9, #5
   2dfd8:	91590003 	cmpls	r9, r3
   2dfdc:	e5870024 	str	r0, [r7, #36]	; 0x24
   2dfe0:	e2855001 	add	r5, r5, #1
   2dfe4:	e287700c 	add	r7, r7, #12
   2dfe8:	e08aa006 	add	sl, sl, r6
   2dfec:	2a00002b 	bcs	2e0a0 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x3f4>
   2dff0:	e3540000 	cmp	r4, #0
   2dff4:	e1a02006 	mov	r2, r6
   2dff8:	e1a0100a 	mov	r1, sl
   2dffc:	e1a0000b 	mov	r0, fp
   2e000:	e5874028 	str	r4, [r7, #40]	; 0x28
   2e004:	e587802c 	str	r8, [r7, #44]	; 0x2c
   2e008:	aaffffee 	bge	2dfc8 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x31c>
   2e00c:	ebffff1c 	bl	2dc84 <CUSBGamePadDevice::BitGetSigned(void const*, unsigned int, unsigned int)>
   2e010:	eaffffed 	b	2dfcc <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x320>
   2e014:	e59d2004 	ldr	r2, [sp, #4]
   2e018:	e3520000 	cmp	r2, #0
   2e01c:	0a00001d 	beq	2e098 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x3ec>
   2e020:	e59d101c 	ldr	r1, [sp, #28]
   2e024:	e59d0020 	ldr	r0, [sp, #32]
   2e028:	e281301c 	add	r3, r1, #28
   2e02c:	e0803103 	add	r3, r0, r3, lsl #2
   2e030:	e1a0900a 	mov	r9, sl
   2e034:	e58d5028 	str	r5, [sp, #40]	; 0x28
   2e038:	e58da02c 	str	sl, [sp, #44]	; 0x2c
   2e03c:	e58d6030 	str	r6, [sp, #48]	; 0x30
   2e040:	e3a07000 	mov	r7, #0
   2e044:	e1a0a002 	mov	sl, r2
   2e048:	e1a06003 	mov	r6, r3
   2e04c:	e1a05001 	mov	r5, r1
   2e050:	e58d401c 	str	r4, [sp, #28]
   2e054:	e59d4008 	ldr	r4, [sp, #8]
   2e058:	e1a01009 	mov	r1, r9
   2e05c:	e2877001 	add	r7, r7, #1
   2e060:	e1a02004 	mov	r2, r4
   2e064:	e1a0000b 	mov	r0, fp
   2e068:	ebfffec9 	bl	2db94 <CUSBGamePadDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>
   2e06c:	e3570005 	cmp	r7, #5
   2e070:	9157000a 	cmpls	r7, sl
   2e074:	e2855001 	add	r5, r5, #1
   2e078:	e0899004 	add	r9, r9, r4
   2e07c:	e4860004 	str	r0, [r6], #4
   2e080:	3afffff4 	bcc	2e058 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x3ac>
   2e084:	e59d401c 	ldr	r4, [sp, #28]
   2e088:	e59da02c 	ldr	sl, [sp, #44]	; 0x2c
   2e08c:	e58d501c 	str	r5, [sp, #28]
   2e090:	e59d6030 	ldr	r6, [sp, #48]	; 0x30
   2e094:	e59d5028 	ldr	r5, [sp, #40]	; 0x28
   2e098:	e3a07001 	mov	r7, #1
   2e09c:	eaffff81 	b	2dea8 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x1fc>
   2e0a0:	e59d4018 	ldr	r4, [sp, #24]
   2e0a4:	e59da02c 	ldr	sl, [sp, #44]	; 0x2c
   2e0a8:	e58d5018 	str	r5, [sp, #24]
   2e0ac:	e59d6030 	ldr	r6, [sp, #48]	; 0x30
   2e0b0:	e59d5028 	ldr	r5, [sp, #40]	; 0x28
   2e0b4:	e59d8034 	ldr	r8, [sp, #52]	; 0x34
   2e0b8:	e3a07001 	mov	r7, #1
   2e0bc:	eaffff79 	b	2dea8 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x1fc>
   2e0c0:	e58d401c 	str	r4, [sp, #28]
   2e0c4:	e58d4018 	str	r4, [sp, #24]
   2e0c8:	eaffff49 	b	2ddf4 <CUSBGamePadDevice::DecodeReport(unsigned char const*)+0x148>
   2e0cc:	f8a432eb 	.word	0xf8a432eb
   2e0d0:	0004b694 	.word	0x0004b694
   2e0d4:	0004b6a4 	.word	0x0004b6a4

0002e0d8 <CUSBGamePadDevice::GetReport()>:
   2e0d8:	e92d48f0 	push	{r4, r5, r6, r7, fp, lr}
   2e0dc:	e28db014 	add	fp, sp, #20
   2e0e0:	e24dd010 	sub	sp, sp, #16
   2e0e4:	e1d039ba 	ldrh	r3, [r0, #154]	; 0x9a
   2e0e8:	e1a04000 	mov	r4, r0
   2e0ec:	e2432001 	sub	r2, r3, #1
   2e0f0:	e352003e 	cmp	r2, #62	; 0x3e
   2e0f4:	8a00001f 	bhi	2e178 <CUSBGamePadDevice::GetReport()+0xa0>
   2e0f8:	e2833007 	add	r3, r3, #7
   2e0fc:	e3c33007 	bic	r3, r3, #7
   2e100:	e04dd003 	sub	sp, sp, r3
   2e104:	e1a00004 	mov	r0, r4
   2e108:	eb0001da 	bl	2e878 <CUSBFunction::GetHost() const>
   2e10c:	e1a06000 	mov	r6, r0
   2e110:	e1a00004 	mov	r0, r4
   2e114:	eb0001c6 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2e118:	e1a07000 	mov	r7, r0
   2e11c:	e1a00004 	mov	r0, r4
   2e120:	eb000245 	bl	2ea3c <CUSBFunction::GetInterfaceNumber() const>
   2e124:	e3a03c01 	mov	r3, #256	; 0x100
   2e128:	e1d429ba 	ldrh	r2, [r4, #154]	; 0x9a
   2e12c:	e6ff0070 	uxth	r0, r0
   2e130:	e28d5010 	add	r5, sp, #16
   2e134:	e58d0004 	str	r0, [sp, #4]
   2e138:	e58d200c 	str	r2, [sp, #12]
   2e13c:	e58d3000 	str	r3, [sp]
   2e140:	e1a01007 	mov	r1, r7
   2e144:	e1a00006 	mov	r0, r6
   2e148:	e58d5008 	str	r5, [sp, #8]
   2e14c:	e3a03001 	mov	r3, #1
   2e150:	e3a020a1 	mov	r2, #161	; 0xa1
   2e154:	ebfff243 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2e158:	e3500000 	cmp	r0, #0
   2e15c:	da00000b 	ble	2e190 <CUSBGamePadDevice::GetReport()+0xb8>
   2e160:	e1a00004 	mov	r0, r4
   2e164:	e1a01005 	mov	r1, r5
   2e168:	ebfffecf 	bl	2dcac <CUSBGamePadDevice::DecodeReport(unsigned char const*)>
   2e16c:	e2840020 	add	r0, r4, #32
   2e170:	e24bd014 	sub	sp, fp, #20
   2e174:	e8bd88f0 	pop	{r4, r5, r6, r7, fp, pc}
   2e178:	e3a020b6 	mov	r2, #182	; 0xb6
   2e17c:	e59f1018 	ldr	r1, [pc, #24]	; 2e19c <CUSBGamePadDevice::GetReport()+0xc4>
   2e180:	e59f0018 	ldr	r0, [pc, #24]	; 2e1a0 <CUSBGamePadDevice::GetReport()+0xc8>
   2e184:	eb00237d 	bl	36f80 <assertion_failed>
   2e188:	e1d439ba 	ldrh	r3, [r4, #154]	; 0x9a
   2e18c:	eaffffd9 	b	2e0f8 <CUSBGamePadDevice::GetReport()+0x20>
   2e190:	e3a00000 	mov	r0, #0
   2e194:	e24bd014 	sub	sp, fp, #20
   2e198:	e8bd88f0 	pop	{r4, r5, r6, r7, fp, pc}
   2e19c:	0004b694 	.word	0x0004b694
   2e1a0:	0004b6c0 	.word	0x0004b6c0

0002e1a4 <CUSBGamePadDevice::ReportHandler(unsigned char const*)>:
   2e1a4:	e3510000 	cmp	r1, #0
   2e1a8:	012fff1e 	bxeq	lr
   2e1ac:	e5902090 	ldr	r2, [r0, #144]	; 0x90
   2e1b0:	e92d4010 	push	{r4, lr}
   2e1b4:	e3520000 	cmp	r2, #0
   2e1b8:	e1a04000 	mov	r4, r0
   2e1bc:	08bd8010 	popeq	{r4, pc}
   2e1c0:	ebfffeb9 	bl	2dcac <CUSBGamePadDevice::DecodeReport(unsigned char const*)>
   2e1c4:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
   2e1c8:	e5943090 	ldr	r3, [r4, #144]	; 0x90
   2e1cc:	e2841020 	add	r1, r4, #32
   2e1d0:	e2400001 	sub	r0, r0, #1
   2e1d4:	e8bd4010 	pop	{r4, lr}
   2e1d8:	e12fff13 	bx	r3

0002e1dc <CUSBGamePadDevice::PS3Configure()>:
   2e1dc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2e1e0:	e24dd014 	sub	sp, sp, #20
   2e1e4:	e1a04000 	mov	r4, r0
   2e1e8:	eb0001a2 	bl	2e878 <CUSBFunction::GetHost() const>
   2e1ec:	e1a06000 	mov	r6, r0
   2e1f0:	e1a00004 	mov	r0, r4
   2e1f4:	eb00018e 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2e1f8:	e1a07000 	mov	r7, r0
   2e1fc:	e1a00004 	mov	r0, r4
   2e200:	eb00020d 	bl	2ea3c <CUSBFunction::GetInterfaceNumber() const>
   2e204:	e3a02004 	mov	r2, #4
   2e208:	e3a03ffd 	mov	r3, #1012	; 0x3f4
   2e20c:	e59f5094 	ldr	r5, [pc, #148]	; 2e2a8 <CUSBGamePadDevice::PS3Configure()+0xcc>
   2e210:	e6ff0070 	uxth	r0, r0
   2e214:	e1a01007 	mov	r1, r7
   2e218:	e58d0004 	str	r0, [sp, #4]
   2e21c:	e58d200c 	str	r2, [sp, #12]
   2e220:	e58d3000 	str	r3, [sp]
   2e224:	e58d5008 	str	r5, [sp, #8]
   2e228:	e1a00006 	mov	r0, r6
   2e22c:	e3a03009 	mov	r3, #9
   2e230:	e3a02021 	mov	r2, #33	; 0x21
   2e234:	ebfff20b 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2e238:	e594209c 	ldr	r2, [r4, #156]	; 0x9c
   2e23c:	e59f3068 	ldr	r3, [pc, #104]	; 2e2ac <CUSBGamePadDevice::PS3Configure()+0xd0>
   2e240:	e1a00004 	mov	r0, r4
   2e244:	e0833002 	add	r3, r3, r2
   2e248:	e5d33028 	ldrb	r3, [r3, #40]	; 0x28
   2e24c:	e2855004 	add	r5, r5, #4
   2e250:	e1a03083 	lsl	r3, r3, #1
   2e254:	e5c53009 	strb	r3, [r5, #9]
   2e258:	eb000186 	bl	2e878 <CUSBFunction::GetHost() const>
   2e25c:	e1a06000 	mov	r6, r0
   2e260:	e1a00004 	mov	r0, r4
   2e264:	eb000172 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2e268:	e1a07000 	mov	r7, r0
   2e26c:	e1a00004 	mov	r0, r4
   2e270:	eb0001f1 	bl	2ea3c <CUSBFunction::GetInterfaceNumber() const>
   2e274:	e3a02030 	mov	r2, #48	; 0x30
   2e278:	e59f3030 	ldr	r3, [pc, #48]	; 2e2b0 <CUSBGamePadDevice::PS3Configure()+0xd4>
   2e27c:	e6ff0070 	uxth	r0, r0
   2e280:	e98d0021 	stmib	sp, {r0, r5}
   2e284:	e58d200c 	str	r2, [sp, #12]
   2e288:	e58d3000 	str	r3, [sp]
   2e28c:	e1a01007 	mov	r1, r7
   2e290:	e1a00006 	mov	r0, r6
   2e294:	e3a03009 	mov	r3, #9
   2e298:	e3a02021 	mov	r2, #33	; 0x21
   2e29c:	ebfff1f1 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2e2a0:	e28dd014 	add	sp, sp, #20
   2e2a4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2e2a8:	00058ee4 	.word	0x00058ee4
   2e2ac:	0004b65c 	.word	0x0004b65c
   2e2b0:	00000201 	.word	0x00000201

0002e2b4 <CUSBGamePadDevice::Configure()>:
   2e2b4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   2e2b8:	e3a01021 	mov	r1, #33	; 0x21
   2e2bc:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   2e2c0:	e1a04000 	mov	r4, r0
   2e2c4:	eb0001ad 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   2e2c8:	e2505000 	subs	r5, r0, #0
   2e2cc:	0a000003 	beq	2e2e0 <CUSBGamePadDevice::Configure()+0x2c>
   2e2d0:	e5d50007 	ldrb	r0, [r5, #7]
   2e2d4:	e5d53008 	ldrb	r3, [r5, #8]
   2e2d8:	e1900403 	orrs	r0, r0, r3, lsl #8
   2e2dc:	1a000006 	bne	2e2fc <CUSBGamePadDevice::Configure()+0x48>
   2e2e0:	e1a00004 	mov	r0, r4
   2e2e4:	e59f11ec 	ldr	r1, [pc, #492]	; 2e4d8 <CUSBGamePadDevice::Configure()+0x224>
   2e2e8:	eb0001b7 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2e2ec:	e3a05000 	mov	r5, #0
   2e2f0:	e1a00005 	mov	r0, r5
   2e2f4:	e28dd02c 	add	sp, sp, #44	; 0x2c
   2e2f8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e2fc:	e1c409b8 	strh	r0, [r4, #152]	; 0x98
   2e300:	eb001805 	bl	3431c <operator new[](unsigned int)>
   2e304:	e5840094 	str	r0, [r4, #148]	; 0x94
   2e308:	e1a00004 	mov	r0, r4
   2e30c:	eb000159 	bl	2e878 <CUSBFunction::GetHost() const>
   2e310:	e1a06000 	mov	r6, r0
   2e314:	e1a00004 	mov	r0, r4
   2e318:	eb000145 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2e31c:	e1a07000 	mov	r7, r0
   2e320:	e1a00004 	mov	r0, r4
   2e324:	e5d55006 	ldrb	r5, [r5, #6]
   2e328:	e5948094 	ldr	r8, [r4, #148]	; 0x94
   2e32c:	e1d499b8 	ldrh	r9, [r4, #152]	; 0x98
   2e330:	eb0001c1 	bl	2ea3c <CUSBFunction::GetInterfaceNumber() const>
   2e334:	e3a03081 	mov	r3, #129	; 0x81
   2e338:	e6ff0070 	uxth	r0, r0
   2e33c:	e58d000c 	str	r0, [sp, #12]
   2e340:	e58d3008 	str	r3, [sp, #8]
   2e344:	e1cd80f0 	strd	r8, [sp]
   2e348:	e3a03000 	mov	r3, #0
   2e34c:	e1a02005 	mov	r2, r5
   2e350:	e1a01007 	mov	r1, r7
   2e354:	e1a00006 	mov	r0, r6
   2e358:	ebfff1f3 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   2e35c:	e1d439b8 	ldrh	r3, [r4, #152]	; 0x98
   2e360:	e1500003 	cmp	r0, r3
   2e364:	0a000008 	beq	2e38c <CUSBGamePadDevice::Configure()+0xd8>
   2e368:	e3a05000 	mov	r5, #0
   2e36c:	eb00247f 	bl	37570 <CLogger::Get()>
   2e370:	e59f3164 	ldr	r3, [pc, #356]	; 2e4dc <CUSBGamePadDevice::Configure()+0x228>
   2e374:	e3a02001 	mov	r2, #1
   2e378:	e59f1158 	ldr	r1, [pc, #344]	; 2e4d8 <CUSBGamePadDevice::Configure()+0x224>
   2e37c:	eb00255b 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2e380:	e1a00005 	mov	r0, r5
   2e384:	e28dd02c 	add	sp, sp, #44	; 0x2c
   2e388:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e38c:	e3a03000 	mov	r3, #0
   2e390:	e28d1010 	add	r1, sp, #16
   2e394:	e1a00004 	mov	r0, r4
   2e398:	e58d3010 	str	r3, [sp, #16]
   2e39c:	e58d3014 	str	r3, [sp, #20]
   2e3a0:	ebfffe41 	bl	2dcac <CUSBGamePadDevice::DecodeReport(unsigned char const*)>
   2e3a4:	e5943020 	ldr	r3, [r4, #32]
   2e3a8:	e3530000 	cmp	r3, #0
   2e3ac:	1a000002 	bne	2e3bc <CUSBGamePadDevice::Configure()+0x108>
   2e3b0:	e594306c 	ldr	r3, [r4, #108]	; 0x6c
   2e3b4:	e3530000 	cmp	r3, #0
   2e3b8:	0a000029 	beq	2e464 <CUSBGamePadDevice::Configure()+0x1b0>
   2e3bc:	e1d419ba 	ldrh	r1, [r4, #154]	; 0x9a
   2e3c0:	e3510000 	cmp	r1, #0
   2e3c4:	0a00003d 	beq	2e4c0 <CUSBGamePadDevice::Configure()+0x20c>
   2e3c8:	e1a00004 	mov	r0, r4
   2e3cc:	ebfffc48 	bl	2d4f4 <CUSBHIDDevice::Configure(unsigned int)>
   2e3d0:	e2505000 	subs	r5, r0, #0
   2e3d4:	0a000033 	beq	2e4a8 <CUSBGamePadDevice::Configure()+0x1f4>
   2e3d8:	e1a00004 	mov	r0, r4
   2e3dc:	eb000104 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2e3e0:	ebffee01 	bl	29bec <CUSBDevice::GetDeviceDescriptor() const>
   2e3e4:	e2505000 	subs	r5, r0, #0
   2e3e8:	0a000029 	beq	2e494 <CUSBGamePadDevice::Configure()+0x1e0>
   2e3ec:	e5d53008 	ldrb	r3, [r5, #8]
   2e3f0:	e5d51009 	ldrb	r1, [r5, #9]
   2e3f4:	e59f20e4 	ldr	r2, [pc, #228]	; 2e4e0 <CUSBGamePadDevice::Configure()+0x22c>
   2e3f8:	e1833401 	orr	r3, r3, r1, lsl #8
   2e3fc:	e1530002 	cmp	r3, r2
   2e400:	0a00001b 	beq	2e474 <CUSBGamePadDevice::Configure()+0x1c0>
   2e404:	e59f20d8 	ldr	r2, [pc, #216]	; 2e4e4 <CUSBGamePadDevice::Configure()+0x230>
   2e408:	e28d0018 	add	r0, sp, #24
   2e40c:	e5923034 	ldr	r3, [r2, #52]	; 0x34
   2e410:	e584309c 	str	r3, [r4, #156]	; 0x9c
   2e414:	e2833001 	add	r3, r3, #1
   2e418:	e5823034 	str	r3, [r2, #52]	; 0x34
   2e41c:	eb0027ec 	bl	383d4 <CString::CString()>
   2e420:	e594209c 	ldr	r2, [r4, #156]	; 0x9c
   2e424:	e59f10bc 	ldr	r1, [pc, #188]	; 2e4e8 <CUSBGamePadDevice::Configure()+0x234>
   2e428:	e28d0018 	add	r0, sp, #24
   2e42c:	eb002b70 	bl	391f4 <CString::Format(char const*, ...)>
   2e430:	eb002422 	bl	374c0 <CDeviceNameService::Get()>
   2e434:	e1a05000 	mov	r5, r0
   2e438:	e28d0018 	add	r0, sp, #24
   2e43c:	eb0027fa 	bl	3842c <CString::operator char const*() const>
   2e440:	e1a02004 	mov	r2, r4
   2e444:	e1a01000 	mov	r1, r0
   2e448:	e3a03000 	mov	r3, #0
   2e44c:	e1a00005 	mov	r0, r5
   2e450:	eb0023a9 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   2e454:	e28d0018 	add	r0, sp, #24
   2e458:	eb0027aa 	bl	38308 <CString::~CString()>
   2e45c:	e3a05001 	mov	r5, #1
   2e460:	eaffffa2 	b	2e2f0 <CUSBGamePadDevice::Configure()+0x3c>
   2e464:	e5945088 	ldr	r5, [r4, #136]	; 0x88
   2e468:	e3550000 	cmp	r5, #0
   2e46c:	1affffd2 	bne	2e3bc <CUSBGamePadDevice::Configure()+0x108>
   2e470:	eaffff9e 	b	2e2f0 <CUSBGamePadDevice::Configure()+0x3c>
   2e474:	e5d5300a 	ldrb	r3, [r5, #10]
   2e478:	e5d5200b 	ldrb	r2, [r5, #11]
   2e47c:	e1833402 	orr	r3, r3, r2, lsl #8
   2e480:	e3530f9a 	cmp	r3, #616	; 0x268
   2e484:	1affffde 	bne	2e404 <CUSBGamePadDevice::Configure()+0x150>
   2e488:	e1a00004 	mov	r0, r4
   2e48c:	ebffff52 	bl	2e1dc <CUSBGamePadDevice::PS3Configure()>
   2e490:	eaffffdb 	b	2e404 <CUSBGamePadDevice::Configure()+0x150>
   2e494:	e3a020a4 	mov	r2, #164	; 0xa4
   2e498:	e59f104c 	ldr	r1, [pc, #76]	; 2e4ec <CUSBGamePadDevice::Configure()+0x238>
   2e49c:	e59f004c 	ldr	r0, [pc, #76]	; 2e4f0 <CUSBGamePadDevice::Configure()+0x23c>
   2e4a0:	eb0022b6 	bl	36f80 <assertion_failed>
   2e4a4:	eaffffd0 	b	2e3ec <CUSBGamePadDevice::Configure()+0x138>
   2e4a8:	eb002430 	bl	37570 <CLogger::Get()>
   2e4ac:	e59f3040 	ldr	r3, [pc, #64]	; 2e4f4 <CUSBGamePadDevice::Configure()+0x240>
   2e4b0:	e3a02001 	mov	r2, #1
   2e4b4:	e59f101c 	ldr	r1, [pc, #28]	; 2e4d8 <CUSBGamePadDevice::Configure()+0x224>
   2e4b8:	eb00250c 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2e4bc:	eaffff8b 	b	2e2f0 <CUSBGamePadDevice::Configure()+0x3c>
   2e4c0:	e59f1024 	ldr	r1, [pc, #36]	; 2e4ec <CUSBGamePadDevice::Configure()+0x238>
   2e4c4:	e3a0209b 	mov	r2, #155	; 0x9b
   2e4c8:	e59f0028 	ldr	r0, [pc, #40]	; 2e4f8 <CUSBGamePadDevice::Configure()+0x244>
   2e4cc:	eb0022ab 	bl	36f80 <assertion_failed>
   2e4d0:	e1d419ba 	ldrh	r1, [r4, #154]	; 0x9a
   2e4d4:	eaffffbb 	b	2e3c8 <CUSBGamePadDevice::Configure()+0x114>
   2e4d8:	0004b68c 	.word	0x0004b68c
   2e4dc:	0004b6ec 	.word	0x0004b6ec
   2e4e0:	0000054c 	.word	0x0000054c
   2e4e4:	00058ee4 	.word	0x00058ee4
   2e4e8:	0004b738 	.word	0x0004b738
   2e4ec:	0004b694 	.word	0x0004b694
   2e4f0:	0004b724 	.word	0x0004b724
   2e4f4:	0004b428 	.word	0x0004b428
   2e4f8:	0004b710 	.word	0x0004b710

0002e4fc <CUSBFunction::Initialize()>:
   2e4fc:	e3a00001 	mov	r0, #1
   2e500:	e12fff1e 	bx	lr

0002e504 <CUSBFunction::~CUSBFunction()>:
   2e504:	e3a03000 	mov	r3, #0
   2e508:	e92d4070 	push	{r4, r5, r6, lr}
   2e50c:	e5905008 	ldr	r5, [r0, #8]
   2e510:	e59f2040 	ldr	r2, [pc, #64]	; 2e558 <CUSBFunction::~CUSBFunction()+0x54>
   2e514:	e1550003 	cmp	r5, r3
   2e518:	e1a04000 	mov	r4, r0
   2e51c:	e5802000 	str	r2, [r0]
   2e520:	e580300c 	str	r3, [r0, #12]
   2e524:	0a000004 	beq	2e53c <CUSBFunction::~CUSBFunction()+0x38>
   2e528:	e1a00005 	mov	r0, r5
   2e52c:	eb0007c4 	bl	30444 <CUSBConfigurationParser::~CUSBConfigurationParser()>
   2e530:	e1a00005 	mov	r0, r5
   2e534:	e3a0101c 	mov	r1, #28
   2e538:	eb00177a 	bl	34328 <operator delete(void*, unsigned int)>
   2e53c:	e3a03000 	mov	r3, #0
   2e540:	e1a00004 	mov	r0, r4
   2e544:	e5843008 	str	r3, [r4, #8]
   2e548:	e5843004 	str	r3, [r4, #4]
   2e54c:	eb001c38 	bl	35634 <CDevice::~CDevice()>
   2e550:	e1a00004 	mov	r0, r4
   2e554:	e8bd8070 	pop	{r4, r5, r6, pc}
   2e558:	0004b748 	.word	0x0004b748

0002e55c <CUSBFunction::~CUSBFunction()>:
   2e55c:	e92d4010 	push	{r4, lr}
   2e560:	e1a04000 	mov	r4, r0
   2e564:	ebffffe6 	bl	2e504 <CUSBFunction::~CUSBFunction()>
   2e568:	e1a00004 	mov	r0, r4
   2e56c:	e3a01010 	mov	r1, #16
   2e570:	eb00176c 	bl	34328 <operator delete(void*, unsigned int)>
   2e574:	e1a00004 	mov	r0, r4
   2e578:	e8bd8010 	pop	{r4, pc}

0002e57c <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)>:
   2e57c:	e92d4070 	push	{r4, r5, r6, lr}
   2e580:	e1a04000 	mov	r4, r0
   2e584:	e1a05001 	mov	r5, r1
   2e588:	e1a06002 	mov	r6, r2
   2e58c:	eb001c34 	bl	35664 <CDevice::CDevice()>
   2e590:	e3a03000 	mov	r3, #0
   2e594:	e59f2090 	ldr	r2, [pc, #144]	; 2e62c <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0xb0>
   2e598:	e1550003 	cmp	r5, r3
   2e59c:	e8840024 	stm	r4, {r2, r5}
   2e5a0:	e5843008 	str	r3, [r4, #8]
   2e5a4:	e584300c 	str	r3, [r4, #12]
   2e5a8:	0a000014 	beq	2e600 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0x84>
   2e5ac:	e3560000 	cmp	r6, #0
   2e5b0:	0a000018 	beq	2e618 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0x9c>
   2e5b4:	e3a0001c 	mov	r0, #28
   2e5b8:	eb001756 	bl	34318 <operator new(unsigned int)>
   2e5bc:	e1a05000 	mov	r5, r0
   2e5c0:	e1a01006 	mov	r1, r6
   2e5c4:	eb000787 	bl	303e8 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)>
   2e5c8:	e5845008 	str	r5, [r4, #8]
   2e5cc:	e1a00005 	mov	r0, r5
   2e5d0:	eb0007d4 	bl	30528 <CUSBConfigurationParser::GetCurrentDescriptor()>
   2e5d4:	e3500000 	cmp	r0, #0
   2e5d8:	e584000c 	str	r0, [r4, #12]
   2e5dc:	0a000001 	beq	2e5e8 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0x6c>
   2e5e0:	e1a00004 	mov	r0, r4
   2e5e4:	e8bd8070 	pop	{r4, r5, r6, pc}
   2e5e8:	e3a02029 	mov	r2, #41	; 0x29
   2e5ec:	e59f103c 	ldr	r1, [pc, #60]	; 2e630 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0xb4>
   2e5f0:	e59f003c 	ldr	r0, [pc, #60]	; 2e634 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0xb8>
   2e5f4:	eb002261 	bl	36f80 <assertion_failed>
   2e5f8:	e1a00004 	mov	r0, r4
   2e5fc:	e8bd8070 	pop	{r4, r5, r6, pc}
   2e600:	e3a02022 	mov	r2, #34	; 0x22
   2e604:	e59f1024 	ldr	r1, [pc, #36]	; 2e630 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0xb4>
   2e608:	e59f0028 	ldr	r0, [pc, #40]	; 2e638 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0xbc>
   2e60c:	eb00225b 	bl	36f80 <assertion_failed>
   2e610:	e3560000 	cmp	r6, #0
   2e614:	1affffe6 	bne	2e5b4 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0x38>
   2e618:	e3a02024 	mov	r2, #36	; 0x24
   2e61c:	e59f100c 	ldr	r1, [pc, #12]	; 2e630 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0xb4>
   2e620:	e59f0014 	ldr	r0, [pc, #20]	; 2e63c <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0xc0>
   2e624:	eb002255 	bl	36f80 <assertion_failed>
   2e628:	eaffffe1 	b	2e5b4 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0x38>
   2e62c:	0004b748 	.word	0x0004b748
   2e630:	0004b76c 	.word	0x0004b76c
   2e634:	0004b790 	.word	0x0004b790
   2e638:	0004a75c 	.word	0x0004a75c
   2e63c:	0004b77c 	.word	0x0004b77c

0002e640 <CUSBFunction::CUSBFunction(CUSBFunction*)>:
   2e640:	e92d4070 	push	{r4, r5, r6, lr}
   2e644:	e1a04000 	mov	r4, r0
   2e648:	e1a05001 	mov	r5, r1
   2e64c:	eb001c04 	bl	35664 <CDevice::CDevice()>
   2e650:	e3a03000 	mov	r3, #0
   2e654:	e59f20c8 	ldr	r2, [pc, #200]	; 2e724 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xe4>
   2e658:	e1550003 	cmp	r5, r3
   2e65c:	e1c420f0 	strd	r2, [r4]
   2e660:	e5843008 	str	r3, [r4, #8]
   2e664:	e584300c 	str	r3, [r4, #12]
   2e668:	0a000019 	beq	2e6d4 <CUSBFunction::CUSBFunction(CUSBFunction*)+0x94>
   2e66c:	e5953004 	ldr	r3, [r5, #4]
   2e670:	e3530000 	cmp	r3, #0
   2e674:	e5843004 	str	r3, [r4, #4]
   2e678:	0a00001d 	beq	2e6f4 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xb4>
   2e67c:	e5953008 	ldr	r3, [r5, #8]
   2e680:	e3530000 	cmp	r3, #0
   2e684:	0a000021 	beq	2e710 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xd0>
   2e688:	e3a0001c 	mov	r0, #28
   2e68c:	eb001721 	bl	34318 <operator new(unsigned int)>
   2e690:	e1a06000 	mov	r6, r0
   2e694:	e5951008 	ldr	r1, [r5, #8]
   2e698:	eb000752 	bl	303e8 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)>
   2e69c:	e5846008 	str	r6, [r4, #8]
   2e6a0:	e1a00006 	mov	r0, r6
   2e6a4:	eb00079f 	bl	30528 <CUSBConfigurationParser::GetCurrentDescriptor()>
   2e6a8:	e3500000 	cmp	r0, #0
   2e6ac:	e584000c 	str	r0, [r4, #12]
   2e6b0:	0a000001 	beq	2e6bc <CUSBFunction::CUSBFunction(CUSBFunction*)+0x7c>
   2e6b4:	e1a00004 	mov	r0, r4
   2e6b8:	e8bd8070 	pop	{r4, r5, r6, pc}
   2e6bc:	e3a0203a 	mov	r2, #58	; 0x3a
   2e6c0:	e59f1060 	ldr	r1, [pc, #96]	; 2e728 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xe8>
   2e6c4:	e59f0060 	ldr	r0, [pc, #96]	; 2e72c <CUSBFunction::CUSBFunction(CUSBFunction*)+0xec>
   2e6c8:	eb00222c 	bl	36f80 <assertion_failed>
   2e6cc:	e1a00004 	mov	r0, r4
   2e6d0:	e8bd8070 	pop	{r4, r5, r6, pc}
   2e6d4:	e3a02031 	mov	r2, #49	; 0x31
   2e6d8:	e59f1048 	ldr	r1, [pc, #72]	; 2e728 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xe8>
   2e6dc:	e59f004c 	ldr	r0, [pc, #76]	; 2e730 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xf0>
   2e6e0:	eb002226 	bl	36f80 <assertion_failed>
   2e6e4:	e5953004 	ldr	r3, [r5, #4]
   2e6e8:	e3530000 	cmp	r3, #0
   2e6ec:	e5843004 	str	r3, [r4, #4]
   2e6f0:	1affffe1 	bne	2e67c <CUSBFunction::CUSBFunction(CUSBFunction*)+0x3c>
   2e6f4:	e3a02033 	mov	r2, #51	; 0x33
   2e6f8:	e59f1028 	ldr	r1, [pc, #40]	; 2e728 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xe8>
   2e6fc:	e59f0030 	ldr	r0, [pc, #48]	; 2e734 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xf4>
   2e700:	eb00221e 	bl	36f80 <assertion_failed>
   2e704:	e5953008 	ldr	r3, [r5, #8]
   2e708:	e3530000 	cmp	r3, #0
   2e70c:	1affffdd 	bne	2e688 <CUSBFunction::CUSBFunction(CUSBFunction*)+0x48>
   2e710:	e3a02035 	mov	r2, #53	; 0x35
   2e714:	e59f100c 	ldr	r1, [pc, #12]	; 2e728 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xe8>
   2e718:	e59f0018 	ldr	r0, [pc, #24]	; 2e738 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xf8>
   2e71c:	eb002217 	bl	36f80 <assertion_failed>
   2e720:	eaffffd8 	b	2e688 <CUSBFunction::CUSBFunction(CUSBFunction*)+0x48>
   2e724:	0004b748 	.word	0x0004b748
   2e728:	0004b76c 	.word	0x0004b76c
   2e72c:	0004b790 	.word	0x0004b790
   2e730:	0004b7a8 	.word	0x0004b7a8
   2e734:	0004a75c 	.word	0x0004a75c
   2e738:	0004b7b8 	.word	0x0004b7b8

0002e73c <CUSBFunction::GetInterfaceName() const>:
   2e73c:	e92d4030 	push	{r4, r5, lr}
   2e740:	e1a05000 	mov	r5, r0
   2e744:	e24dd00c 	sub	sp, sp, #12
   2e748:	e3a00010 	mov	r0, #16
   2e74c:	eb0016f1 	bl	34318 <operator new(unsigned int)>
   2e750:	e59f1054 	ldr	r1, [pc, #84]	; 2e7ac <CUSBFunction::GetInterfaceName() const+0x70>
   2e754:	e1a04000 	mov	r4, r0
   2e758:	eb002723 	bl	383ec <CString::CString(char const*)>
   2e75c:	e595100c 	ldr	r1, [r5, #12]
   2e760:	e3510000 	cmp	r1, #0
   2e764:	0a000004 	beq	2e77c <CUSBFunction::GetInterfaceName() const+0x40>
   2e768:	e5d12005 	ldrb	r2, [r1, #5]
   2e76c:	e2423001 	sub	r3, r2, #1
   2e770:	e6ef3073 	uxtb	r3, r3
   2e774:	e35300fd 	cmp	r3, #253	; 0xfd
   2e778:	9a000002 	bls	2e788 <CUSBFunction::GetInterfaceName() const+0x4c>
   2e77c:	e1a00004 	mov	r0, r4
   2e780:	e28dd00c 	add	sp, sp, #12
   2e784:	e8bd8030 	pop	{r4, r5, pc}
   2e788:	e5d13006 	ldrb	r3, [r1, #6]
   2e78c:	e5d11007 	ldrb	r1, [r1, #7]
   2e790:	e1a00004 	mov	r0, r4
   2e794:	e58d1000 	str	r1, [sp]
   2e798:	e59f1010 	ldr	r1, [pc, #16]	; 2e7b0 <CUSBFunction::GetInterfaceName() const+0x74>
   2e79c:	eb002a94 	bl	391f4 <CString::Format(char const*, ...)>
   2e7a0:	e1a00004 	mov	r0, r4
   2e7a4:	e28dd00c 	add	sp, sp, #12
   2e7a8:	e8bd8030 	pop	{r4, r5, pc}
   2e7ac:	0004a870 	.word	0x0004a870
   2e7b0:	0004b7d8 	.word	0x0004b7d8

0002e7b4 <CUSBFunction::GetNumEndpoints() const>:
   2e7b4:	e590300c 	ldr	r3, [r0, #12]
   2e7b8:	e3530000 	cmp	r3, #0
   2e7bc:	0a000001 	beq	2e7c8 <CUSBFunction::GetNumEndpoints() const+0x14>
   2e7c0:	e5d30004 	ldrb	r0, [r3, #4]
   2e7c4:	e12fff1e 	bx	lr
   2e7c8:	e92d4010 	push	{r4, lr}
   2e7cc:	e1a04000 	mov	r4, r0
   2e7d0:	e3a02073 	mov	r2, #115	; 0x73
   2e7d4:	e59f1010 	ldr	r1, [pc, #16]	; 2e7ec <CUSBFunction::GetNumEndpoints() const+0x38>
   2e7d8:	e59f0010 	ldr	r0, [pc, #16]	; 2e7f0 <CUSBFunction::GetNumEndpoints() const+0x3c>
   2e7dc:	eb0021e7 	bl	36f80 <assertion_failed>
   2e7e0:	e594300c 	ldr	r3, [r4, #12]
   2e7e4:	e5d30004 	ldrb	r0, [r3, #4]
   2e7e8:	e8bd8010 	pop	{r4, pc}
   2e7ec:	0004b76c 	.word	0x0004b76c
   2e7f0:	0004b790 	.word	0x0004b790

0002e7f4 <CUSBFunction::GetDevice() const>:
   2e7f4:	e5903004 	ldr	r3, [r0, #4]
   2e7f8:	e3530000 	cmp	r3, #0
   2e7fc:	0a000001 	beq	2e808 <CUSBFunction::GetDevice() const+0x14>
   2e800:	e1a00003 	mov	r0, r3
   2e804:	e12fff1e 	bx	lr
   2e808:	e92d4010 	push	{r4, lr}
   2e80c:	e1a04000 	mov	r4, r0
   2e810:	e3a02079 	mov	r2, #121	; 0x79
   2e814:	e59f1010 	ldr	r1, [pc, #16]	; 2e82c <CUSBFunction::GetDevice() const+0x38>
   2e818:	e59f0010 	ldr	r0, [pc, #16]	; 2e830 <CUSBFunction::GetDevice() const+0x3c>
   2e81c:	eb0021d7 	bl	36f80 <assertion_failed>
   2e820:	e5943004 	ldr	r3, [r4, #4]
   2e824:	e1a00003 	mov	r0, r3
   2e828:	e8bd8010 	pop	{r4, pc}
   2e82c:	0004b76c 	.word	0x0004b76c
   2e830:	0004a75c 	.word	0x0004a75c

0002e834 <CUSBFunction::GetEndpoint0() const>:
   2e834:	e5903004 	ldr	r3, [r0, #4]
   2e838:	e3530000 	cmp	r3, #0
   2e83c:	0a000001 	beq	2e848 <CUSBFunction::GetEndpoint0() const+0x14>
   2e840:	e1a00003 	mov	r0, r3
   2e844:	eaffecc7 	b	29b68 <CUSBDevice::GetEndpoint0() const>
   2e848:	e92d4010 	push	{r4, lr}
   2e84c:	e1a04000 	mov	r4, r0
   2e850:	e3a0207f 	mov	r2, #127	; 0x7f
   2e854:	e59f0014 	ldr	r0, [pc, #20]	; 2e870 <CUSBFunction::GetEndpoint0() const+0x3c>
   2e858:	e59f1014 	ldr	r1, [pc, #20]	; 2e874 <CUSBFunction::GetEndpoint0() const+0x40>
   2e85c:	eb0021c7 	bl	36f80 <assertion_failed>
   2e860:	e5943004 	ldr	r3, [r4, #4]
   2e864:	e8bd4010 	pop	{r4, lr}
   2e868:	e1a00003 	mov	r0, r3
   2e86c:	eaffecbd 	b	29b68 <CUSBDevice::GetEndpoint0() const>
   2e870:	0004a75c 	.word	0x0004a75c
   2e874:	0004b76c 	.word	0x0004b76c

0002e878 <CUSBFunction::GetHost() const>:
   2e878:	e5903004 	ldr	r3, [r0, #4]
   2e87c:	e3530000 	cmp	r3, #0
   2e880:	0a000001 	beq	2e88c <CUSBFunction::GetHost() const+0x14>
   2e884:	e1a00003 	mov	r0, r3
   2e888:	eaffecc6 	b	29ba8 <CUSBDevice::GetHost() const>
   2e88c:	e92d4010 	push	{r4, lr}
   2e890:	e1a04000 	mov	r4, r0
   2e894:	e3a02085 	mov	r2, #133	; 0x85
   2e898:	e59f0014 	ldr	r0, [pc, #20]	; 2e8b4 <CUSBFunction::GetHost() const+0x3c>
   2e89c:	e59f1014 	ldr	r1, [pc, #20]	; 2e8b8 <CUSBFunction::GetHost() const+0x40>
   2e8a0:	eb0021b6 	bl	36f80 <assertion_failed>
   2e8a4:	e5943004 	ldr	r3, [r4, #4]
   2e8a8:	e8bd4010 	pop	{r4, lr}
   2e8ac:	e1a00003 	mov	r0, r3
   2e8b0:	eaffecbc 	b	29ba8 <CUSBDevice::GetHost() const>
   2e8b4:	0004a75c 	.word	0x0004a75c
   2e8b8:	0004b76c 	.word	0x0004b76c

0002e8bc <CUSBFunction::Configure()>:
   2e8bc:	e92d4070 	push	{r4, r5, r6, lr}
   2e8c0:	e590300c 	ldr	r3, [r0, #12]
   2e8c4:	e24dd010 	sub	sp, sp, #16
   2e8c8:	e3530000 	cmp	r3, #0
   2e8cc:	e1a04000 	mov	r4, r0
   2e8d0:	0a000020 	beq	2e958 <CUSBFunction::Configure()+0x9c>
   2e8d4:	e5d33003 	ldrb	r3, [r3, #3]
   2e8d8:	e3530000 	cmp	r3, #0
   2e8dc:	1a000002 	bne	2e8ec <CUSBFunction::Configure()+0x30>
   2e8e0:	e3a00001 	mov	r0, #1
   2e8e4:	e28dd010 	add	sp, sp, #16
   2e8e8:	e8bd8070 	pop	{r4, r5, r6, pc}
   2e8ec:	e1a00004 	mov	r0, r4
   2e8f0:	ebffffe0 	bl	2e878 <CUSBFunction::GetHost() const>
   2e8f4:	e3a05000 	mov	r5, #0
   2e8f8:	e1a06000 	mov	r6, r0
   2e8fc:	e1a00004 	mov	r0, r4
   2e900:	ebffffcb 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2e904:	e594300c 	ldr	r3, [r4, #12]
   2e908:	e58d500c 	str	r5, [sp, #12]
   2e90c:	e58d5008 	str	r5, [sp, #8]
   2e910:	e5d32002 	ldrb	r2, [r3, #2]
   2e914:	e1a01000 	mov	r1, r0
   2e918:	e58d2004 	str	r2, [sp, #4]
   2e91c:	e5d33003 	ldrb	r3, [r3, #3]
   2e920:	e1a00006 	mov	r0, r6
   2e924:	e58d3000 	str	r3, [sp]
   2e928:	e3a02001 	mov	r2, #1
   2e92c:	e3a0300b 	mov	r3, #11
   2e930:	ebfff04c 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2e934:	e1500005 	cmp	r0, r5
   2e938:	aaffffe8 	bge	2e8e0 <CUSBFunction::Configure()+0x24>
   2e93c:	eb00230b 	bl	37570 <CLogger::Get()>
   2e940:	e59f3028 	ldr	r3, [pc, #40]	; 2e970 <CUSBFunction::Configure()+0xb4>
   2e944:	e3a02001 	mov	r2, #1
   2e948:	e59f1024 	ldr	r1, [pc, #36]	; 2e974 <CUSBFunction::Configure()+0xb8>
   2e94c:	eb0023e7 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2e950:	e1a00005 	mov	r0, r5
   2e954:	eaffffe2 	b	2e8e4 <CUSBFunction::Configure()+0x28>
   2e958:	e3a0204e 	mov	r2, #78	; 0x4e
   2e95c:	e59f1014 	ldr	r1, [pc, #20]	; 2e978 <CUSBFunction::Configure()+0xbc>
   2e960:	e59f0014 	ldr	r0, [pc, #20]	; 2e97c <CUSBFunction::Configure()+0xc0>
   2e964:	eb002185 	bl	36f80 <assertion_failed>
   2e968:	e594300c 	ldr	r3, [r4, #12]
   2e96c:	eaffffd8 	b	2e8d4 <CUSBFunction::Configure()+0x18>
   2e970:	0004b008 	.word	0x0004b008
   2e974:	0004b764 	.word	0x0004b764
   2e978:	0004b76c 	.word	0x0004b76c
   2e97c:	0004b790 	.word	0x0004b790

0002e980 <CUSBFunction::GetDescriptor(unsigned char)>:
   2e980:	e92d4070 	push	{r4, r5, r6, lr}
   2e984:	e1a04000 	mov	r4, r0
   2e988:	e5900008 	ldr	r0, [r0, #8]
   2e98c:	e1a05001 	mov	r5, r1
   2e990:	e3500000 	cmp	r0, #0
   2e994:	0a000002 	beq	2e9a4 <CUSBFunction::GetDescriptor(unsigned char)+0x24>
   2e998:	e1a01005 	mov	r1, r5
   2e99c:	e8bd4070 	pop	{r4, r5, r6, lr}
   2e9a0:	ea0006aa 	b	30450 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   2e9a4:	e59f1018 	ldr	r1, [pc, #24]	; 2e9c4 <CUSBFunction::GetDescriptor(unsigned char)+0x44>
   2e9a8:	e59f0018 	ldr	r0, [pc, #24]	; 2e9c8 <CUSBFunction::GetDescriptor(unsigned char)+0x48>
   2e9ac:	e3a0208b 	mov	r2, #139	; 0x8b
   2e9b0:	eb002172 	bl	36f80 <assertion_failed>
   2e9b4:	e5940008 	ldr	r0, [r4, #8]
   2e9b8:	e1a01005 	mov	r1, r5
   2e9bc:	e8bd4070 	pop	{r4, r5, r6, lr}
   2e9c0:	ea0006a2 	b	30450 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   2e9c4:	0004b76c 	.word	0x0004b76c
   2e9c8:	0004a8d0 	.word	0x0004a8d0

0002e9cc <CUSBFunction::ConfigurationError(char const*) const>:
   2e9cc:	e5903008 	ldr	r3, [r0, #8]
   2e9d0:	e92d4070 	push	{r4, r5, r6, lr}
   2e9d4:	e3530000 	cmp	r3, #0
   2e9d8:	e1a04000 	mov	r4, r0
   2e9dc:	e1a05001 	mov	r5, r1
   2e9e0:	0a00000d 	beq	2ea1c <CUSBFunction::ConfigurationError(char const*) const+0x50>
   2e9e4:	e3550000 	cmp	r5, #0
   2e9e8:	0a000003 	beq	2e9fc <CUSBFunction::ConfigurationError(char const*) const+0x30>
   2e9ec:	e1a01005 	mov	r1, r5
   2e9f0:	e5940008 	ldr	r0, [r4, #8]
   2e9f4:	e8bd4070 	pop	{r4, r5, r6, lr}
   2e9f8:	ea0006e0 	b	30580 <CUSBConfigurationParser::Error(char const*) const>
   2e9fc:	e59f102c 	ldr	r1, [pc, #44]	; 2ea30 <CUSBFunction::ConfigurationError(char const*) const+0x64>
   2ea00:	e59f002c 	ldr	r0, [pc, #44]	; 2ea34 <CUSBFunction::ConfigurationError(char const*) const+0x68>
   2ea04:	e3a02092 	mov	r2, #146	; 0x92
   2ea08:	eb00215c 	bl	36f80 <assertion_failed>
   2ea0c:	e1a01005 	mov	r1, r5
   2ea10:	e5940008 	ldr	r0, [r4, #8]
   2ea14:	e8bd4070 	pop	{r4, r5, r6, lr}
   2ea18:	ea0006d8 	b	30580 <CUSBConfigurationParser::Error(char const*) const>
   2ea1c:	e3a02091 	mov	r2, #145	; 0x91
   2ea20:	e59f1008 	ldr	r1, [pc, #8]	; 2ea30 <CUSBFunction::ConfigurationError(char const*) const+0x64>
   2ea24:	e59f000c 	ldr	r0, [pc, #12]	; 2ea38 <CUSBFunction::ConfigurationError(char const*) const+0x6c>
   2ea28:	eb002154 	bl	36f80 <assertion_failed>
   2ea2c:	eaffffec 	b	2e9e4 <CUSBFunction::ConfigurationError(char const*) const+0x18>
   2ea30:	0004b76c 	.word	0x0004b76c
   2ea34:	0004b7e4 	.word	0x0004b7e4
   2ea38:	0004a8d0 	.word	0x0004a8d0

0002ea3c <CUSBFunction::GetInterfaceNumber() const>:
   2ea3c:	e590300c 	ldr	r3, [r0, #12]
   2ea40:	e3530000 	cmp	r3, #0
   2ea44:	0a000001 	beq	2ea50 <CUSBFunction::GetInterfaceNumber() const+0x14>
   2ea48:	e5d30002 	ldrb	r0, [r3, #2]
   2ea4c:	e12fff1e 	bx	lr
   2ea50:	e92d4010 	push	{r4, lr}
   2ea54:	e1a04000 	mov	r4, r0
   2ea58:	e3a02098 	mov	r2, #152	; 0x98
   2ea5c:	e59f1010 	ldr	r1, [pc, #16]	; 2ea74 <CUSBFunction::GetInterfaceNumber() const+0x38>
   2ea60:	e59f0010 	ldr	r0, [pc, #16]	; 2ea78 <CUSBFunction::GetInterfaceNumber() const+0x3c>
   2ea64:	eb002145 	bl	36f80 <assertion_failed>
   2ea68:	e594300c 	ldr	r3, [r4, #12]
   2ea6c:	e5d30002 	ldrb	r0, [r3, #2]
   2ea70:	e8bd8010 	pop	{r4, pc}
   2ea74:	0004b76c 	.word	0x0004b76c
   2ea78:	0004b790 	.word	0x0004b790

0002ea7c <CUSBFunction::GetInterfaceSubClass() const>:
   2ea7c:	e590300c 	ldr	r3, [r0, #12]
   2ea80:	e3530000 	cmp	r3, #0
   2ea84:	0a000001 	beq	2ea90 <CUSBFunction::GetInterfaceSubClass() const+0x14>
   2ea88:	e5d30006 	ldrb	r0, [r3, #6]
   2ea8c:	e12fff1e 	bx	lr
   2ea90:	e92d4010 	push	{r4, lr}
   2ea94:	e1a04000 	mov	r4, r0
   2ea98:	e3a0209e 	mov	r2, #158	; 0x9e
   2ea9c:	e59f1010 	ldr	r1, [pc, #16]	; 2eab4 <CUSBFunction::GetInterfaceSubClass() const+0x38>
   2eaa0:	e59f0010 	ldr	r0, [pc, #16]	; 2eab8 <CUSBFunction::GetInterfaceSubClass() const+0x3c>
   2eaa4:	eb002135 	bl	36f80 <assertion_failed>
   2eaa8:	e594300c 	ldr	r3, [r4, #12]
   2eaac:	e5d30006 	ldrb	r0, [r3, #6]
   2eab0:	e8bd8010 	pop	{r4, pc}
   2eab4:	0004b76c 	.word	0x0004b76c
   2eab8:	0004b790 	.word	0x0004b790

0002eabc <CUSBFunction::GetInterfaceProtocol() const>:
   2eabc:	e590300c 	ldr	r3, [r0, #12]
   2eac0:	e3530000 	cmp	r3, #0
   2eac4:	0a000001 	beq	2ead0 <CUSBFunction::GetInterfaceProtocol() const+0x14>
   2eac8:	e5d30007 	ldrb	r0, [r3, #7]
   2eacc:	e12fff1e 	bx	lr
   2ead0:	e92d4010 	push	{r4, lr}
   2ead4:	e1a04000 	mov	r4, r0
   2ead8:	e3a020a4 	mov	r2, #164	; 0xa4
   2eadc:	e59f1010 	ldr	r1, [pc, #16]	; 2eaf4 <CUSBFunction::GetInterfaceProtocol() const+0x38>
   2eae0:	e59f0010 	ldr	r0, [pc, #16]	; 2eaf8 <CUSBFunction::GetInterfaceProtocol() const+0x3c>
   2eae4:	eb002125 	bl	36f80 <assertion_failed>
   2eae8:	e594300c 	ldr	r3, [r4, #12]
   2eaec:	e5d30007 	ldrb	r0, [r3, #7]
   2eaf0:	e8bd8010 	pop	{r4, pc}
   2eaf4:	0004b76c 	.word	0x0004b76c
   2eaf8:	0004b790 	.word	0x0004b790

0002eafc <CDWHCIFrameSchedulerNoSplit::~CDWHCIFrameSchedulerNoSplit()>:
   2eafc:	e12fff1e 	bx	lr

0002eb00 <CDWHCIFrameSchedulerNoSplit::IsOddFrame() const>:
   2eb00:	e5900008 	ldr	r0, [r0, #8]
   2eb04:	e2000001 	and	r0, r0, #1
   2eb08:	e12fff1e 	bx	lr

0002eb0c <CDWHCIFrameSchedulerNoSplit::~CDWHCIFrameSchedulerNoSplit()>:
   2eb0c:	e92d4010 	push	{r4, lr}
   2eb10:	e1a04000 	mov	r4, r0
   2eb14:	e3a0100c 	mov	r1, #12
   2eb18:	eb001602 	bl	34328 <operator delete(void*, unsigned int)>
   2eb1c:	e1a00004 	mov	r0, r4
   2eb20:	e8bd8010 	pop	{r4, pc}

0002eb24 <CDWHCIFrameSchedulerNoSplit::StartSplit()>:
   2eb24:	e3a02026 	mov	r2, #38	; 0x26
   2eb28:	e59f1004 	ldr	r1, [pc, #4]	; 2eb34 <CDWHCIFrameSchedulerNoSplit::StartSplit()+0x10>
   2eb2c:	e59f0004 	ldr	r0, [pc, #4]	; 2eb38 <CDWHCIFrameSchedulerNoSplit::StartSplit()+0x14>
   2eb30:	ea002112 	b	36f80 <assertion_failed>
   2eb34:	0004b818 	.word	0x0004b818
   2eb38:	0004a8b8 	.word	0x0004a8b8

0002eb3c <CDWHCIFrameSchedulerNoSplit::CompleteSplit()>:
   2eb3c:	e92d4010 	push	{r4, lr}
   2eb40:	e3a0202b 	mov	r2, #43	; 0x2b
   2eb44:	e59f100c 	ldr	r1, [pc, #12]	; 2eb58 <CDWHCIFrameSchedulerNoSplit::CompleteSplit()+0x1c>
   2eb48:	e59f000c 	ldr	r0, [pc, #12]	; 2eb5c <CDWHCIFrameSchedulerNoSplit::CompleteSplit()+0x20>
   2eb4c:	eb00210b 	bl	36f80 <assertion_failed>
   2eb50:	e3a00000 	mov	r0, #0
   2eb54:	e8bd8010 	pop	{r4, pc}
   2eb58:	0004b818 	.word	0x0004b818
   2eb5c:	0004a8b8 	.word	0x0004a8b8

0002eb60 <CDWHCIFrameSchedulerNoSplit::TransactionComplete(unsigned int)>:
   2eb60:	e3a02031 	mov	r2, #49	; 0x31
   2eb64:	e59f1004 	ldr	r1, [pc, #4]	; 2eb70 <CDWHCIFrameSchedulerNoSplit::TransactionComplete(unsigned int)+0x10>
   2eb68:	e59f0004 	ldr	r0, [pc, #4]	; 2eb74 <CDWHCIFrameSchedulerNoSplit::TransactionComplete(unsigned int)+0x14>
   2eb6c:	ea002103 	b	36f80 <assertion_failed>
   2eb70:	0004b818 	.word	0x0004b818
   2eb74:	0004a8b8 	.word	0x0004a8b8

0002eb78 <CDWHCIFrameSchedulerNoSplit::WaitForFrame()>:
   2eb78:	e92d4030 	push	{r4, r5, lr}
   2eb7c:	e24dd014 	sub	sp, sp, #20
   2eb80:	e1a05000 	mov	r5, r0
   2eb84:	e59f1050 	ldr	r1, [pc, #80]	; 2ebdc <CDWHCIFrameSchedulerNoSplit::WaitForFrame()+0x64>
   2eb88:	e28d0004 	add	r0, sp, #4
   2eb8c:	ebffe7c0 	bl	28a94 <CDWHCIRegister::CDWHCIRegister(unsigned int)>
   2eb90:	e28d0004 	add	r0, sp, #4
   2eb94:	ebffe7c7 	bl	28ab8 <CDWHCIRegister::Read()>
   2eb98:	e59f4040 	ldr	r4, [pc, #64]	; 2ebe0 <CDWHCIFrameSchedulerNoSplit::WaitForFrame()+0x68>
   2eb9c:	e5953004 	ldr	r3, [r5, #4]
   2eba0:	e2800001 	add	r0, r0, #1
   2eba4:	e0000004 	and	r0, r0, r4
   2eba8:	e3530000 	cmp	r3, #0
   2ebac:	e5850008 	str	r0, [r5, #8]
   2ebb0:	1a000005 	bne	2ebcc <CDWHCIFrameSchedulerNoSplit::WaitForFrame()+0x54>
   2ebb4:	e28d0004 	add	r0, sp, #4
   2ebb8:	ebffe7be 	bl	28ab8 <CDWHCIRegister::Read()>
   2ebbc:	e5953008 	ldr	r3, [r5, #8]
   2ebc0:	e0000004 	and	r0, r0, r4
   2ebc4:	e1500003 	cmp	r0, r3
   2ebc8:	1afffff9 	bne	2ebb4 <CDWHCIFrameSchedulerNoSplit::WaitForFrame()+0x3c>
   2ebcc:	e28d0004 	add	r0, sp, #4
   2ebd0:	ebffe7b7 	bl	28ab4 <CDWHCIRegister::~CDWHCIRegister()>
   2ebd4:	e28dd014 	add	sp, sp, #20
   2ebd8:	e8bd8030 	pop	{r4, r5, pc}
   2ebdc:	20980408 	.word	0x20980408
   2ebe0:	00003fff 	.word	0x00003fff

0002ebe4 <CDWHCIFrameSchedulerNoSplit::CDWHCIFrameSchedulerNoSplit(int)>:
   2ebe4:	e3a02901 	mov	r2, #16384	; 0x4000
   2ebe8:	e59fc00c 	ldr	ip, [pc, #12]	; 2ebfc <CDWHCIFrameSchedulerNoSplit::CDWHCIFrameSchedulerNoSplit(int)+0x18>
   2ebec:	e5801004 	str	r1, [r0, #4]
   2ebf0:	e580c000 	str	ip, [r0]
   2ebf4:	e5802008 	str	r2, [r0, #8]
   2ebf8:	e12fff1e 	bx	lr
   2ebfc:	0004b7fc 	.word	0x0004b7fc

0002ec00 <CUSBPrinterDevice::~CUSBPrinterDevice()>:
   2ec00:	e92d4070 	push	{r4, r5, r6, lr}
   2ec04:	e5905018 	ldr	r5, [r0, #24]
   2ec08:	e59f3060 	ldr	r3, [pc, #96]	; 2ec70 <CUSBPrinterDevice::~CUSBPrinterDevice()+0x70>
   2ec0c:	e3550000 	cmp	r5, #0
   2ec10:	e1a04000 	mov	r4, r0
   2ec14:	e5803000 	str	r3, [r0]
   2ec18:	0a000004 	beq	2ec30 <CUSBPrinterDevice::~CUSBPrinterDevice()+0x30>
   2ec1c:	e1a00005 	mov	r0, r5
   2ec20:	ebffef0c 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2ec24:	e1a00005 	mov	r0, r5
   2ec28:	e3a01018 	mov	r1, #24
   2ec2c:	eb0015bd 	bl	34328 <operator delete(void*, unsigned int)>
   2ec30:	e3a03000 	mov	r3, #0
   2ec34:	e5945014 	ldr	r5, [r4, #20]
   2ec38:	e5843018 	str	r3, [r4, #24]
   2ec3c:	e1550003 	cmp	r5, r3
   2ec40:	0a000004 	beq	2ec58 <CUSBPrinterDevice::~CUSBPrinterDevice()+0x58>
   2ec44:	e1a00005 	mov	r0, r5
   2ec48:	ebffef02 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2ec4c:	e1a00005 	mov	r0, r5
   2ec50:	e3a01018 	mov	r1, #24
   2ec54:	eb0015b3 	bl	34328 <operator delete(void*, unsigned int)>
   2ec58:	e3a03000 	mov	r3, #0
   2ec5c:	e1a00004 	mov	r0, r4
   2ec60:	e5843014 	str	r3, [r4, #20]
   2ec64:	ebfffe26 	bl	2e504 <CUSBFunction::~CUSBFunction()>
   2ec68:	e1a00004 	mov	r0, r4
   2ec6c:	e8bd8070 	pop	{r4, r5, r6, pc}
   2ec70:	0004b83c 	.word	0x0004b83c

0002ec74 <CUSBPrinterDevice::~CUSBPrinterDevice()>:
   2ec74:	e92d4010 	push	{r4, lr}
   2ec78:	e1a04000 	mov	r4, r0
   2ec7c:	ebffffdf 	bl	2ec00 <CUSBPrinterDevice::~CUSBPrinterDevice()>
   2ec80:	e1a00004 	mov	r0, r4
   2ec84:	e3a0101c 	mov	r1, #28
   2ec88:	eb0015a6 	bl	34328 <operator delete(void*, unsigned int)>
   2ec8c:	e1a00004 	mov	r0, r4
   2ec90:	e8bd8010 	pop	{r4, pc}

0002ec94 <CUSBPrinterDevice::Write(void const*, unsigned int)>:
   2ec94:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2ec98:	e2517000 	subs	r7, r1, #0
   2ec9c:	e1a05000 	mov	r5, r0
   2eca0:	e1a04002 	mov	r4, r2
   2eca4:	0a00001b 	beq	2ed18 <CUSBPrinterDevice::Write(void const*, unsigned int)+0x84>
   2eca8:	e3540000 	cmp	r4, #0
   2ecac:	0a00000c 	beq	2ece4 <CUSBPrinterDevice::Write(void const*, unsigned int)+0x50>
   2ecb0:	e1a00005 	mov	r0, r5
   2ecb4:	ebfffeef 	bl	2e878 <CUSBFunction::GetHost() const>
   2ecb8:	e2506000 	subs	r6, r0, #0
   2ecbc:	0a000010 	beq	2ed04 <CUSBPrinterDevice::Write(void const*, unsigned int)+0x70>
   2ecc0:	e1a02007 	mov	r2, r7
   2ecc4:	e5951018 	ldr	r1, [r5, #24]
   2ecc8:	e1a00006 	mov	r0, r6
   2eccc:	e1a03004 	mov	r3, r4
   2ecd0:	ebffefc9 	bl	2abfc <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int)>
   2ecd4:	e3500000 	cmp	r0, #0
   2ecd8:	a1a00004 	movge	r0, r4
   2ecdc:	b3e00000 	mvnlt	r0, #0
   2ece0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2ece4:	e3a0207f 	mov	r2, #127	; 0x7f
   2ece8:	e59f103c 	ldr	r1, [pc, #60]	; 2ed2c <CUSBPrinterDevice::Write(void const*, unsigned int)+0x98>
   2ecec:	e59f003c 	ldr	r0, [pc, #60]	; 2ed30 <CUSBPrinterDevice::Write(void const*, unsigned int)+0x9c>
   2ecf0:	eb0020a2 	bl	36f80 <assertion_failed>
   2ecf4:	e1a00005 	mov	r0, r5
   2ecf8:	ebfffede 	bl	2e878 <CUSBFunction::GetHost() const>
   2ecfc:	e2506000 	subs	r6, r0, #0
   2ed00:	1affffee 	bne	2ecc0 <CUSBPrinterDevice::Write(void const*, unsigned int)+0x2c>
   2ed04:	e3a02082 	mov	r2, #130	; 0x82
   2ed08:	e59f101c 	ldr	r1, [pc, #28]	; 2ed2c <CUSBPrinterDevice::Write(void const*, unsigned int)+0x98>
   2ed0c:	e59f0020 	ldr	r0, [pc, #32]	; 2ed34 <CUSBPrinterDevice::Write(void const*, unsigned int)+0xa0>
   2ed10:	eb00209a 	bl	36f80 <assertion_failed>
   2ed14:	eaffffe9 	b	2ecc0 <CUSBPrinterDevice::Write(void const*, unsigned int)+0x2c>
   2ed18:	e3a0207e 	mov	r2, #126	; 0x7e
   2ed1c:	e59f1008 	ldr	r1, [pc, #8]	; 2ed2c <CUSBPrinterDevice::Write(void const*, unsigned int)+0x98>
   2ed20:	e59f0010 	ldr	r0, [pc, #16]	; 2ed38 <CUSBPrinterDevice::Write(void const*, unsigned int)+0xa4>
   2ed24:	eb002095 	bl	36f80 <assertion_failed>
   2ed28:	eaffffde 	b	2eca8 <CUSBPrinterDevice::Write(void const*, unsigned int)+0x14>
   2ed2c:	0004b860 	.word	0x0004b860
   2ed30:	0004b870 	.word	0x0004b870
   2ed34:	0004ae68 	.word	0x0004ae68
   2ed38:	0004b104 	.word	0x0004b104

0002ed3c <CUSBPrinterDevice::CUSBPrinterDevice(CUSBFunction*)>:
   2ed3c:	e92d4010 	push	{r4, lr}
   2ed40:	e1a04000 	mov	r4, r0
   2ed44:	ebfffe3d 	bl	2e640 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   2ed48:	e3a03000 	mov	r3, #0
   2ed4c:	e59f2014 	ldr	r2, [pc, #20]	; 2ed68 <CUSBPrinterDevice::CUSBPrinterDevice(CUSBFunction*)+0x2c>
   2ed50:	e5c43010 	strb	r3, [r4, #16]
   2ed54:	e5842000 	str	r2, [r4]
   2ed58:	e5843014 	str	r3, [r4, #20]
   2ed5c:	e5843018 	str	r3, [r4, #24]
   2ed60:	e1a00004 	mov	r0, r4
   2ed64:	e8bd8010 	pop	{r4, pc}
   2ed68:	0004b83c 	.word	0x0004b83c

0002ed6c <CUSBPrinterDevice::Configure()>:
   2ed6c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2ed70:	e24dd01c 	sub	sp, sp, #28
   2ed74:	e1a04000 	mov	r4, r0
   2ed78:	ebffff4f 	bl	2eabc <CUSBFunction::GetInterfaceProtocol() const>
   2ed7c:	e2403001 	sub	r3, r0, #1
   2ed80:	e3530001 	cmp	r3, #1
   2ed84:	e5c40010 	strb	r0, [r4, #16]
   2ed88:	9a00000a 	bls	2edb8 <CUSBPrinterDevice::Configure()+0x4c>
   2ed8c:	eb0021f7 	bl	37570 <CLogger::Get()>
   2ed90:	e5d42010 	ldrb	r2, [r4, #16]
   2ed94:	e59f31d4 	ldr	r3, [pc, #468]	; 2ef70 <CUSBPrinterDevice::Configure()+0x204>
   2ed98:	e58d2000 	str	r2, [sp]
   2ed9c:	e59f11d0 	ldr	r1, [pc, #464]	; 2ef74 <CUSBPrinterDevice::Configure()+0x208>
   2eda0:	e3a02001 	mov	r2, #1
   2eda4:	eb0022d1 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2eda8:	e3a05000 	mov	r5, #0
   2edac:	e1a00005 	mov	r0, r5
   2edb0:	e28dd01c 	add	sp, sp, #28
   2edb4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2edb8:	e1a00004 	mov	r0, r4
   2edbc:	ebfffe7c 	bl	2e7b4 <CUSBFunction::GetNumEndpoints() const>
   2edc0:	e5d43010 	ldrb	r3, [r4, #16]
   2edc4:	e3530001 	cmp	r3, #1
   2edc8:	03a03001 	moveq	r3, #1
   2edcc:	13a03002 	movne	r3, #2
   2edd0:	e1500003 	cmp	r0, r3
   2edd4:	aa000004 	bge	2edec <CUSBPrinterDevice::Configure()+0x80>
   2edd8:	ea00004c 	b	2ef10 <CUSBPrinterDevice::Configure()+0x1a4>
   2eddc:	e5d53003 	ldrb	r3, [r5, #3]
   2ede0:	e203303f 	and	r3, r3, #63	; 0x3f
   2ede4:	e3530002 	cmp	r3, #2
   2ede8:	0a000029 	beq	2ee94 <CUSBPrinterDevice::Configure()+0x128>
   2edec:	e3a01005 	mov	r1, #5
   2edf0:	e1a00004 	mov	r0, r4
   2edf4:	ebfffee1 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   2edf8:	e2505000 	subs	r5, r0, #0
   2edfc:	1afffff6 	bne	2eddc <CUSBPrinterDevice::Configure()+0x70>
   2ee00:	e5945018 	ldr	r5, [r4, #24]
   2ee04:	e3550000 	cmp	r5, #0
   2ee08:	0a00004d 	beq	2ef44 <CUSBPrinterDevice::Configure()+0x1d8>
   2ee0c:	e5d43010 	ldrb	r3, [r4, #16]
   2ee10:	e1a00004 	mov	r0, r4
   2ee14:	e3530001 	cmp	r3, #1
   2ee18:	0a000002 	beq	2ee28 <CUSBPrinterDevice::Configure()+0xbc>
   2ee1c:	e5945014 	ldr	r5, [r4, #20]
   2ee20:	e3550000 	cmp	r5, #0
   2ee24:	0a00004a 	beq	2ef54 <CUSBPrinterDevice::Configure()+0x1e8>
   2ee28:	ebfffea3 	bl	2e8bc <CUSBFunction::Configure()>
   2ee2c:	e2505000 	subs	r5, r0, #0
   2ee30:	0a00003d 	beq	2ef2c <CUSBPrinterDevice::Configure()+0x1c0>
   2ee34:	e28d0008 	add	r0, sp, #8
   2ee38:	eb002565 	bl	383d4 <CString::CString()>
   2ee3c:	e59f3134 	ldr	r3, [pc, #308]	; 2ef78 <CUSBPrinterDevice::Configure()+0x20c>
   2ee40:	e59f1134 	ldr	r1, [pc, #308]	; 2ef7c <CUSBPrinterDevice::Configure()+0x210>
   2ee44:	e5932000 	ldr	r2, [r3]
   2ee48:	e28d0008 	add	r0, sp, #8
   2ee4c:	e282c001 	add	ip, r2, #1
   2ee50:	e583c000 	str	ip, [r3]
   2ee54:	eb0028e6 	bl	391f4 <CString::Format(char const*, ...)>
   2ee58:	eb002198 	bl	374c0 <CDeviceNameService::Get()>
   2ee5c:	e1a05000 	mov	r5, r0
   2ee60:	e28d0008 	add	r0, sp, #8
   2ee64:	eb002570 	bl	3842c <CString::operator char const*() const>
   2ee68:	e1a01000 	mov	r1, r0
   2ee6c:	e1a00005 	mov	r0, r5
   2ee70:	e3a05001 	mov	r5, #1
   2ee74:	e1a02004 	mov	r2, r4
   2ee78:	e3a03000 	mov	r3, #0
   2ee7c:	eb00211e 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   2ee80:	e28d0008 	add	r0, sp, #8
   2ee84:	eb00251f 	bl	38308 <CString::~CString()>
   2ee88:	e1a00005 	mov	r0, r5
   2ee8c:	e28dd01c 	add	sp, sp, #28
   2ee90:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2ee94:	e1d530d2 	ldrsb	r3, [r5, #2]
   2ee98:	e3530000 	cmp	r3, #0
   2ee9c:	ba00000d 	blt	2eed8 <CUSBPrinterDevice::Configure()+0x16c>
   2eea0:	e5943018 	ldr	r3, [r4, #24]
   2eea4:	e1a00004 	mov	r0, r4
   2eea8:	e3530000 	cmp	r3, #0
   2eeac:	1a00002b 	bne	2ef60 <CUSBPrinterDevice::Configure()+0x1f4>
   2eeb0:	ebfffe4f 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2eeb4:	e1a07000 	mov	r7, r0
   2eeb8:	e3a00018 	mov	r0, #24
   2eebc:	eb001515 	bl	34318 <operator new(unsigned int)>
   2eec0:	e1a06000 	mov	r6, r0
   2eec4:	e1a02005 	mov	r2, r5
   2eec8:	e1a01007 	mov	r1, r7
   2eecc:	ebffedd2 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   2eed0:	e5846018 	str	r6, [r4, #24]
   2eed4:	eaffffc4 	b	2edec <CUSBPrinterDevice::Configure()+0x80>
   2eed8:	e5943014 	ldr	r3, [r4, #20]
   2eedc:	e1a00004 	mov	r0, r4
   2eee0:	e3530000 	cmp	r3, #0
   2eee4:	1a00001d 	bne	2ef60 <CUSBPrinterDevice::Configure()+0x1f4>
   2eee8:	ebfffe41 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2eeec:	e1a07000 	mov	r7, r0
   2eef0:	e3a00018 	mov	r0, #24
   2eef4:	eb001507 	bl	34318 <operator new(unsigned int)>
   2eef8:	e1a06000 	mov	r6, r0
   2eefc:	e1a02005 	mov	r2, r5
   2ef00:	e1a01007 	mov	r1, r7
   2ef04:	ebffedc4 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   2ef08:	e5846014 	str	r6, [r4, #20]
   2ef0c:	eaffffb6 	b	2edec <CUSBPrinterDevice::Configure()+0x80>
   2ef10:	e3a05000 	mov	r5, #0
   2ef14:	e1a00004 	mov	r0, r4
   2ef18:	e59f1054 	ldr	r1, [pc, #84]	; 2ef74 <CUSBPrinterDevice::Configure()+0x208>
   2ef1c:	ebfffeaa 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2ef20:	e1a00005 	mov	r0, r5
   2ef24:	e28dd01c 	add	sp, sp, #28
   2ef28:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2ef2c:	eb00218f 	bl	37570 <CLogger::Get()>
   2ef30:	e59f3048 	ldr	r3, [pc, #72]	; 2ef80 <CUSBPrinterDevice::Configure()+0x214>
   2ef34:	e3a02001 	mov	r2, #1
   2ef38:	e59f1034 	ldr	r1, [pc, #52]	; 2ef74 <CUSBPrinterDevice::Configure()+0x208>
   2ef3c:	eb00226b 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2ef40:	eaffff99 	b	2edac <CUSBPrinterDevice::Configure()+0x40>
   2ef44:	e1a00004 	mov	r0, r4
   2ef48:	e59f1024 	ldr	r1, [pc, #36]	; 2ef74 <CUSBPrinterDevice::Configure()+0x208>
   2ef4c:	ebfffe9e 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2ef50:	eaffff95 	b	2edac <CUSBPrinterDevice::Configure()+0x40>
   2ef54:	e59f1018 	ldr	r1, [pc, #24]	; 2ef74 <CUSBPrinterDevice::Configure()+0x208>
   2ef58:	ebfffe9b 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2ef5c:	eaffff92 	b	2edac <CUSBPrinterDevice::Configure()+0x40>
   2ef60:	e59f100c 	ldr	r1, [pc, #12]	; 2ef74 <CUSBPrinterDevice::Configure()+0x208>
   2ef64:	ebfffe98 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2ef68:	e3a05000 	mov	r5, #0
   2ef6c:	eaffff8e 	b	2edac <CUSBPrinterDevice::Configure()+0x40>
   2ef70:	0004b87c 	.word	0x0004b87c
   2ef74:	0004b858 	.word	0x0004b858
   2ef78:	00058f1c 	.word	0x00058f1c
   2ef7c:	0004b89c 	.word	0x0004b89c
   2ef80:	0004b008 	.word	0x0004b008

0002ef84 <CUSBBluetoothDevice::~CUSBBluetoothDevice()>:
   2ef84:	e3a03000 	mov	r3, #0
   2ef88:	e92d4070 	push	{r4, r5, r6, lr}
   2ef8c:	e1a04000 	mov	r4, r0
   2ef90:	e5900020 	ldr	r0, [r0, #32]
   2ef94:	e59f20a0 	ldr	r2, [pc, #160]	; 2f03c <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0xb8>
   2ef98:	e1500003 	cmp	r0, r3
   2ef9c:	e5842000 	str	r2, [r4]
   2efa0:	e5843024 	str	r3, [r4, #36]	; 0x24
   2efa4:	0a000000 	beq	2efac <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0x28>
   2efa8:	eb0014dd 	bl	34324 <operator delete[](void*)>
   2efac:	e3a03000 	mov	r3, #0
   2efb0:	e5945018 	ldr	r5, [r4, #24]
   2efb4:	e5843020 	str	r3, [r4, #32]
   2efb8:	e1550003 	cmp	r5, r3
   2efbc:	0a000004 	beq	2efd4 <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0x50>
   2efc0:	e1a00005 	mov	r0, r5
   2efc4:	ebffee23 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2efc8:	e1a00005 	mov	r0, r5
   2efcc:	e3a01018 	mov	r1, #24
   2efd0:	eb0014d4 	bl	34328 <operator delete(void*, unsigned int)>
   2efd4:	e3a03000 	mov	r3, #0
   2efd8:	e5945014 	ldr	r5, [r4, #20]
   2efdc:	e5843018 	str	r3, [r4, #24]
   2efe0:	e1550003 	cmp	r5, r3
   2efe4:	0a000004 	beq	2effc <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0x78>
   2efe8:	e1a00005 	mov	r0, r5
   2efec:	ebffee19 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2eff0:	e1a00005 	mov	r0, r5
   2eff4:	e3a01018 	mov	r1, #24
   2eff8:	eb0014ca 	bl	34328 <operator delete(void*, unsigned int)>
   2effc:	e3a03000 	mov	r3, #0
   2f000:	e5945010 	ldr	r5, [r4, #16]
   2f004:	e5843014 	str	r3, [r4, #20]
   2f008:	e1550003 	cmp	r5, r3
   2f00c:	0a000004 	beq	2f024 <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0xa0>
   2f010:	e1a00005 	mov	r0, r5
   2f014:	ebffee0f 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2f018:	e1a00005 	mov	r0, r5
   2f01c:	e3a01018 	mov	r1, #24
   2f020:	eb0014c0 	bl	34328 <operator delete(void*, unsigned int)>
   2f024:	e3a03000 	mov	r3, #0
   2f028:	e1a00004 	mov	r0, r4
   2f02c:	e5843010 	str	r3, [r4, #16]
   2f030:	ebfffd33 	bl	2e504 <CUSBFunction::~CUSBFunction()>
   2f034:	e1a00004 	mov	r0, r4
   2f038:	e8bd8070 	pop	{r4, r5, r6, pc}
   2f03c:	0004b8ac 	.word	0x0004b8ac

0002f040 <CUSBBluetoothDevice::~CUSBBluetoothDevice()>:
   2f040:	e92d4010 	push	{r4, lr}
   2f044:	e1a04000 	mov	r4, r0
   2f048:	ebffffcd 	bl	2ef84 <CUSBBluetoothDevice::~CUSBBluetoothDevice()>
   2f04c:	e1a00004 	mov	r0, r4
   2f050:	e3a01028 	mov	r1, #40	; 0x28
   2f054:	eb0014b3 	bl	34328 <operator delete(void*, unsigned int)>
   2f058:	e1a00004 	mov	r0, r4
   2f05c:	e8bd8010 	pop	{r4, pc}

0002f060 <CUSBBluetoothDevice::CUSBBluetoothDevice(CUSBFunction*)>:
   2f060:	e92d4010 	push	{r4, lr}
   2f064:	e1a04000 	mov	r4, r0
   2f068:	ebfffd74 	bl	2e640 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   2f06c:	e3a03000 	mov	r3, #0
   2f070:	e59f2020 	ldr	r2, [pc, #32]	; 2f098 <CUSBBluetoothDevice::CUSBBluetoothDevice(CUSBFunction*)+0x38>
   2f074:	e5843010 	str	r3, [r4, #16]
   2f078:	e5842000 	str	r2, [r4]
   2f07c:	e5843014 	str	r3, [r4, #20]
   2f080:	e5843018 	str	r3, [r4, #24]
   2f084:	e584301c 	str	r3, [r4, #28]
   2f088:	e5843020 	str	r3, [r4, #32]
   2f08c:	e5843024 	str	r3, [r4, #36]	; 0x24
   2f090:	e1a00004 	mov	r0, r4
   2f094:	e8bd8010 	pop	{r4, pc}
   2f098:	0004b8ac 	.word	0x0004b8ac

0002f09c <CUSBBluetoothDevice::SendHCICommand(void const*, unsigned int)>:
   2f09c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2f0a0:	e24dd014 	sub	sp, sp, #20
   2f0a4:	e1a06001 	mov	r6, r1
   2f0a8:	e1a04002 	mov	r4, r2
   2f0ac:	e1a07000 	mov	r7, r0
   2f0b0:	ebfffdf0 	bl	2e878 <CUSBFunction::GetHost() const>
   2f0b4:	e1a05000 	mov	r5, r0
   2f0b8:	e1a00007 	mov	r0, r7
   2f0bc:	ebfffddc 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   2f0c0:	e3a03000 	mov	r3, #0
   2f0c4:	e6ff4074 	uxth	r4, r4
   2f0c8:	e1a01000 	mov	r1, r0
   2f0cc:	e58d6008 	str	r6, [sp, #8]
   2f0d0:	e58d400c 	str	r4, [sp, #12]
   2f0d4:	e1a00005 	mov	r0, r5
   2f0d8:	e58d3004 	str	r3, [sp, #4]
   2f0dc:	e58d3000 	str	r3, [sp]
   2f0e0:	e3a02020 	mov	r2, #32
   2f0e4:	ebffee5f 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   2f0e8:	e1e00000 	mvn	r0, r0
   2f0ec:	e1a00fa0 	lsr	r0, r0, #31
   2f0f0:	e28dd014 	add	sp, sp, #20
   2f0f4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0002f0f8 <CUSBBluetoothDevice::StartRequest()>:
   2f0f8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2f0fc:	e5903010 	ldr	r3, [r0, #16]
   2f100:	e24dd00c 	sub	sp, sp, #12
   2f104:	e3530000 	cmp	r3, #0
   2f108:	e1a04000 	mov	r4, r0
   2f10c:	0a000023 	beq	2f1a0 <CUSBBluetoothDevice::StartRequest()+0xa8>
   2f110:	e5943020 	ldr	r3, [r4, #32]
   2f114:	e3530000 	cmp	r3, #0
   2f118:	0a000027 	beq	2f1bc <CUSBBluetoothDevice::StartRequest()+0xc4>
   2f11c:	e594301c 	ldr	r3, [r4, #28]
   2f120:	e3530000 	cmp	r3, #0
   2f124:	0a000003 	beq	2f138 <CUSBBluetoothDevice::StartRequest()+0x40>
   2f128:	e3a020a6 	mov	r2, #166	; 0xa6
   2f12c:	e59f109c 	ldr	r1, [pc, #156]	; 2f1d0 <CUSBBluetoothDevice::StartRequest()+0xd8>
   2f130:	e59f009c 	ldr	r0, [pc, #156]	; 2f1d4 <CUSBBluetoothDevice::StartRequest()+0xdc>
   2f134:	eb001f91 	bl	36f80 <assertion_failed>
   2f138:	e5940010 	ldr	r0, [r4, #16]
   2f13c:	ebffedde 	bl	2a8bc <CUSBEndpoint::GetMaxPacketSize() const>
   2f140:	e1a07000 	mov	r7, r0
   2f144:	e3a00028 	mov	r0, #40	; 0x28
   2f148:	eb001472 	bl	34318 <operator new(unsigned int)>
   2f14c:	e3a06000 	mov	r6, #0
   2f150:	e1a05000 	mov	r5, r0
   2f154:	e5942020 	ldr	r2, [r4, #32]
   2f158:	e5941010 	ldr	r1, [r4, #16]
   2f15c:	e1a03007 	mov	r3, r7
   2f160:	e58d6000 	str	r6, [sp]
   2f164:	ebffeebc 	bl	2ac5c <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   2f168:	e1a03004 	mov	r3, r4
   2f16c:	e1a02006 	mov	r2, r6
   2f170:	e1a00005 	mov	r0, r5
   2f174:	e59f105c 	ldr	r1, [pc, #92]	; 2f1d8 <CUSBBluetoothDevice::StartRequest()+0xe0>
   2f178:	e584501c 	str	r5, [r4, #28]
   2f17c:	ebffef2b 	bl	2ae30 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   2f180:	e1a00004 	mov	r0, r4
   2f184:	ebfffdbb 	bl	2e878 <CUSBFunction::GetHost() const>
   2f188:	e5903000 	ldr	r3, [r0]
   2f18c:	e594101c 	ldr	r1, [r4, #28]
   2f190:	e593300c 	ldr	r3, [r3, #12]
   2f194:	e28dd00c 	add	sp, sp, #12
   2f198:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
   2f19c:	e12fff13 	bx	r3
   2f1a0:	e3a020a3 	mov	r2, #163	; 0xa3
   2f1a4:	e59f1024 	ldr	r1, [pc, #36]	; 2f1d0 <CUSBBluetoothDevice::StartRequest()+0xd8>
   2f1a8:	e59f002c 	ldr	r0, [pc, #44]	; 2f1dc <CUSBBluetoothDevice::StartRequest()+0xe4>
   2f1ac:	eb001f73 	bl	36f80 <assertion_failed>
   2f1b0:	e5943020 	ldr	r3, [r4, #32]
   2f1b4:	e3530000 	cmp	r3, #0
   2f1b8:	1affffd7 	bne	2f11c <CUSBBluetoothDevice::StartRequest()+0x24>
   2f1bc:	e3a020a4 	mov	r2, #164	; 0xa4
   2f1c0:	e59f1008 	ldr	r1, [pc, #8]	; 2f1d0 <CUSBBluetoothDevice::StartRequest()+0xd8>
   2f1c4:	e59f0014 	ldr	r0, [pc, #20]	; 2f1e0 <CUSBBluetoothDevice::StartRequest()+0xe8>
   2f1c8:	eb001f6c 	bl	36f80 <assertion_failed>
   2f1cc:	eaffffd2 	b	2f11c <CUSBBluetoothDevice::StartRequest()+0x24>
   2f1d0:	0004b8d0 	.word	0x0004b8d0
   2f1d4:	0004b54c 	.word	0x0004b54c
   2f1d8:	0002f35c 	.word	0x0002f35c
   2f1dc:	0004b8e4 	.word	0x0004b8e4
   2f1e0:	0004b900 	.word	0x0004b900

0002f1e4 <CUSBBluetoothDevice::RegisterHCIEventHandler(void (*)(void const*, unsigned int))>:
   2f1e4:	e3510000 	cmp	r1, #0
   2f1e8:	e92d4010 	push	{r4, lr}
   2f1ec:	e1a04000 	mov	r4, r0
   2f1f0:	e5801024 	str	r1, [r0, #36]	; 0x24
   2f1f4:	0a000002 	beq	2f204 <CUSBBluetoothDevice::RegisterHCIEventHandler(void (*)(void const*, unsigned int))+0x20>
   2f1f8:	e1a00004 	mov	r0, r4
   2f1fc:	e8bd4010 	pop	{r4, lr}
   2f200:	eaffffbc 	b	2f0f8 <CUSBBluetoothDevice::StartRequest()>
   2f204:	e59f0014 	ldr	r0, [pc, #20]	; 2f220 <CUSBBluetoothDevice::RegisterHCIEventHandler(void (*)(void const*, unsigned int))+0x3c>
   2f208:	e3a0209c 	mov	r2, #156	; 0x9c
   2f20c:	e59f1010 	ldr	r1, [pc, #16]	; 2f224 <CUSBBluetoothDevice::RegisterHCIEventHandler(void (*)(void const*, unsigned int))+0x40>
   2f210:	eb001f5a 	bl	36f80 <assertion_failed>
   2f214:	e1a00004 	mov	r0, r4
   2f218:	e8bd4010 	pop	{r4, lr}
   2f21c:	eaffffb5 	b	2f0f8 <CUSBBluetoothDevice::StartRequest()>
   2f220:	0004b914 	.word	0x0004b914
   2f224:	0004b8d0 	.word	0x0004b8d0

0002f228 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)>:
   2f228:	e92d4070 	push	{r4, r5, r6, lr}
   2f22c:	e2515000 	subs	r5, r1, #0
   2f230:	e1a04000 	mov	r4, r0
   2f234:	0a000035 	beq	2f310 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0xe8>
   2f238:	e594301c 	ldr	r3, [r4, #28]
   2f23c:	e1530005 	cmp	r3, r5
   2f240:	0a000003 	beq	2f254 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x2c>
   2f244:	e3a020b3 	mov	r2, #179	; 0xb3
   2f248:	e59f10ec 	ldr	r1, [pc, #236]	; 2f33c <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x114>
   2f24c:	e59f00ec 	ldr	r0, [pc, #236]	; 2f340 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x118>
   2f250:	eb001f4a 	bl	36f80 <assertion_failed>
   2f254:	e5943020 	ldr	r3, [r4, #32]
   2f258:	e3530000 	cmp	r3, #0
   2f25c:	0a000026 	beq	2f2fc <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0xd4>
   2f260:	e1a00005 	mov	r0, r5
   2f264:	ebffeeb6 	bl	2ad44 <CUSBRequest::GetStatus() const>
   2f268:	e3500000 	cmp	r0, #0
   2f26c:	0a00001c 	beq	2f2e4 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0xbc>
   2f270:	e5946024 	ldr	r6, [r4, #36]	; 0x24
   2f274:	e3560000 	cmp	r6, #0
   2f278:	0a000029 	beq	2f324 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0xfc>
   2f27c:	e1a00005 	mov	r0, r5
   2f280:	e5945020 	ldr	r5, [r4, #32]
   2f284:	ebffeeb0 	bl	2ad4c <CUSBRequest::GetResultLength() const>
   2f288:	e1a01000 	mov	r1, r0
   2f28c:	e1a00005 	mov	r0, r5
   2f290:	e12fff36 	blx	r6
   2f294:	e594501c 	ldr	r5, [r4, #28]
   2f298:	e3550000 	cmp	r5, #0
   2f29c:	0a000004 	beq	2f2b4 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x8c>
   2f2a0:	e1a00005 	mov	r0, r5
   2f2a4:	ebffee91 	bl	2acf0 <CUSBRequest::~CUSBRequest()>
   2f2a8:	e1a00005 	mov	r0, r5
   2f2ac:	e3a01028 	mov	r1, #40	; 0x28
   2f2b0:	eb00141c 	bl	34328 <operator delete(void*, unsigned int)>
   2f2b4:	e3a03000 	mov	r3, #0
   2f2b8:	e1a00004 	mov	r0, r4
   2f2bc:	e584301c 	str	r3, [r4, #28]
   2f2c0:	ebffff8c 	bl	2f0f8 <CUSBBluetoothDevice::StartRequest()>
   2f2c4:	e3500000 	cmp	r0, #0
   2f2c8:	18bd8070 	popne	{r4, r5, r6, pc}
   2f2cc:	eb0020a7 	bl	37570 <CLogger::Get()>
   2f2d0:	e8bd4070 	pop	{r4, r5, r6, lr}
   2f2d4:	e59f3068 	ldr	r3, [pc, #104]	; 2f344 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x11c>
   2f2d8:	e3a02001 	mov	r2, #1
   2f2dc:	e59f1064 	ldr	r1, [pc, #100]	; 2f348 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x120>
   2f2e0:	ea002182 	b	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2f2e4:	eb0020a1 	bl	37570 <CLogger::Get()>
   2f2e8:	e59f305c 	ldr	r3, [pc, #92]	; 2f34c <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x124>
   2f2ec:	e3a02002 	mov	r2, #2
   2f2f0:	e59f1050 	ldr	r1, [pc, #80]	; 2f348 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x120>
   2f2f4:	eb00217d 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2f2f8:	eaffffe5 	b	2f294 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x6c>
   2f2fc:	e3a020b4 	mov	r2, #180	; 0xb4
   2f300:	e59f1034 	ldr	r1, [pc, #52]	; 2f33c <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x114>
   2f304:	e59f0044 	ldr	r0, [pc, #68]	; 2f350 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x128>
   2f308:	eb001f1c 	bl	36f80 <assertion_failed>
   2f30c:	eaffffd3 	b	2f260 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x38>
   2f310:	e3a020b2 	mov	r2, #178	; 0xb2
   2f314:	e59f1020 	ldr	r1, [pc, #32]	; 2f33c <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x114>
   2f318:	e59f0034 	ldr	r0, [pc, #52]	; 2f354 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x12c>
   2f31c:	eb001f17 	bl	36f80 <assertion_failed>
   2f320:	eaffffc4 	b	2f238 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x10>
   2f324:	e3a020b8 	mov	r2, #184	; 0xb8
   2f328:	e59f100c 	ldr	r1, [pc, #12]	; 2f33c <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x114>
   2f32c:	e59f0024 	ldr	r0, [pc, #36]	; 2f358 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x130>
   2f330:	eb001f12 	bl	36f80 <assertion_failed>
   2f334:	e5946024 	ldr	r6, [r4, #36]	; 0x24
   2f338:	eaffffcf 	b	2f27c <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x54>
   2f33c:	0004b8d0 	.word	0x0004b8d0
   2f340:	0004b5b8 	.word	0x0004b5b8
   2f344:	0004b5c8 	.word	0x0004b5c8
   2f348:	0004b8c8 	.word	0x0004b8c8
   2f34c:	0004b92c 	.word	0x0004b92c
   2f350:	0004b900 	.word	0x0004b900
   2f354:	0004a1ac 	.word	0x0004a1ac
   2f358:	0004b914 	.word	0x0004b914

0002f35c <CUSBBluetoothDevice::CompletionStub(CUSBRequest*, void*, void*)>:
   2f35c:	e92d4070 	push	{r4, r5, r6, lr}
   2f360:	e2524000 	subs	r4, r2, #0
   2f364:	e1a05000 	mov	r5, r0
   2f368:	0a000003 	beq	2f37c <CUSBBluetoothDevice::CompletionStub(CUSBRequest*, void*, void*)+0x20>
   2f36c:	e1a01005 	mov	r1, r5
   2f370:	e1a00004 	mov	r0, r4
   2f374:	e8bd4070 	pop	{r4, r5, r6, lr}
   2f378:	eaffffaa 	b	2f228 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)>
   2f37c:	e59f1018 	ldr	r1, [pc, #24]	; 2f39c <CUSBBluetoothDevice::CompletionStub(CUSBRequest*, void*, void*)+0x40>
   2f380:	e59f0018 	ldr	r0, [pc, #24]	; 2f3a0 <CUSBBluetoothDevice::CompletionStub(CUSBRequest*, void*, void*)+0x44>
   2f384:	e3a020cc 	mov	r2, #204	; 0xcc
   2f388:	eb001efc 	bl	36f80 <assertion_failed>
   2f38c:	e1a01005 	mov	r1, r5
   2f390:	e1a00004 	mov	r0, r4
   2f394:	e8bd4070 	pop	{r4, r5, r6, lr}
   2f398:	eaffffa2 	b	2f228 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)>
   2f39c:	0004b8d0 	.word	0x0004b8d0
   2f3a0:	0004a0c0 	.word	0x0004a0c0

0002f3a4 <CUSBBluetoothDevice::Configure()>:
   2f3a4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2f3a8:	e24dd014 	sub	sp, sp, #20
   2f3ac:	e1a04000 	mov	r4, r0
   2f3b0:	ebfffda1 	bl	2ea3c <CUSBFunction::GetInterfaceNumber() const>
   2f3b4:	e2506000 	subs	r6, r0, #0
   2f3b8:	1a000041 	bne	2f4c4 <CUSBBluetoothDevice::Configure()+0x120>
   2f3bc:	e1a00004 	mov	r0, r4
   2f3c0:	ebfffcfb 	bl	2e7b4 <CUSBFunction::GetNumEndpoints() const>
   2f3c4:	e3500003 	cmp	r0, #3
   2f3c8:	1a000037 	bne	2f4ac <CUSBBluetoothDevice::Configure()+0x108>
   2f3cc:	e3a01005 	mov	r1, #5
   2f3d0:	e1a00004 	mov	r0, r4
   2f3d4:	ebfffd69 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   2f3d8:	e2505000 	subs	r5, r0, #0
   2f3dc:	0a000048 	beq	2f504 <CUSBBluetoothDevice::Configure()+0x160>
   2f3e0:	e5d52003 	ldrb	r2, [r5, #3]
   2f3e4:	e202203f 	and	r2, r2, #63	; 0x3f
   2f3e8:	e3520002 	cmp	r2, #2
   2f3ec:	0a00000f 	beq	2f430 <CUSBBluetoothDevice::Configure()+0x8c>
   2f3f0:	e3520003 	cmp	r2, #3
   2f3f4:	1afffff4 	bne	2f3cc <CUSBBluetoothDevice::Configure()+0x28>
   2f3f8:	e5943010 	ldr	r3, [r4, #16]
   2f3fc:	e1a00004 	mov	r0, r4
   2f400:	e3530000 	cmp	r3, #0
   2f404:	1a000038 	bne	2f4ec <CUSBBluetoothDevice::Configure()+0x148>
   2f408:	ebfffcf9 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2f40c:	e1a07000 	mov	r7, r0
   2f410:	e3a00018 	mov	r0, #24
   2f414:	eb0013bf 	bl	34318 <operator new(unsigned int)>
   2f418:	e1a06000 	mov	r6, r0
   2f41c:	e1a02005 	mov	r2, r5
   2f420:	e1a01007 	mov	r1, r7
   2f424:	ebffec7c 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   2f428:	e5846010 	str	r6, [r4, #16]
   2f42c:	eaffffe6 	b	2f3cc <CUSBBluetoothDevice::Configure()+0x28>
   2f430:	e1d530d2 	ldrsb	r3, [r5, #2]
   2f434:	e3530000 	cmp	r3, #0
   2f438:	ba00000d 	blt	2f474 <CUSBBluetoothDevice::Configure()+0xd0>
   2f43c:	e5943018 	ldr	r3, [r4, #24]
   2f440:	e1a00004 	mov	r0, r4
   2f444:	e3530000 	cmp	r3, #0
   2f448:	1a000027 	bne	2f4ec <CUSBBluetoothDevice::Configure()+0x148>
   2f44c:	ebfffce8 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2f450:	e1a07000 	mov	r7, r0
   2f454:	e3a00018 	mov	r0, #24
   2f458:	eb0013ae 	bl	34318 <operator new(unsigned int)>
   2f45c:	e1a06000 	mov	r6, r0
   2f460:	e1a02005 	mov	r2, r5
   2f464:	e1a01007 	mov	r1, r7
   2f468:	ebffec6b 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   2f46c:	e5846018 	str	r6, [r4, #24]
   2f470:	eaffffd5 	b	2f3cc <CUSBBluetoothDevice::Configure()+0x28>
   2f474:	e5943014 	ldr	r3, [r4, #20]
   2f478:	e1a00004 	mov	r0, r4
   2f47c:	e3530000 	cmp	r3, #0
   2f480:	1a000019 	bne	2f4ec <CUSBBluetoothDevice::Configure()+0x148>
   2f484:	ebfffcda 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2f488:	e1a07000 	mov	r7, r0
   2f48c:	e3a00018 	mov	r0, #24
   2f490:	eb0013a0 	bl	34318 <operator new(unsigned int)>
   2f494:	e1a06000 	mov	r6, r0
   2f498:	e1a02005 	mov	r2, r5
   2f49c:	e1a01007 	mov	r1, r7
   2f4a0:	ebffec5d 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   2f4a4:	e5846014 	str	r6, [r4, #20]
   2f4a8:	eaffffc7 	b	2f3cc <CUSBBluetoothDevice::Configure()+0x28>
   2f4ac:	e1a00004 	mov	r0, r4
   2f4b0:	e59f1100 	ldr	r1, [pc, #256]	; 2f5b8 <CUSBBluetoothDevice::Configure()+0x214>
   2f4b4:	ebfffd44 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2f4b8:	e1a00006 	mov	r0, r6
   2f4bc:	e28dd014 	add	sp, sp, #20
   2f4c0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2f4c4:	e3a06000 	mov	r6, #0
   2f4c8:	eb002028 	bl	37570 <CLogger::Get()>
   2f4cc:	e59f30e8 	ldr	r3, [pc, #232]	; 2f5bc <CUSBBluetoothDevice::Configure()+0x218>
   2f4d0:	e3a02002 	mov	r2, #2
   2f4d4:	e59f10dc 	ldr	r1, [pc, #220]	; 2f5b8 <CUSBBluetoothDevice::Configure()+0x214>
   2f4d8:	eb002104 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2f4dc:	e1a00006 	mov	r0, r6
   2f4e0:	e28dd014 	add	sp, sp, #20
   2f4e4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2f4e8:	e1a00004 	mov	r0, r4
   2f4ec:	e3a06000 	mov	r6, #0
   2f4f0:	e59f10c0 	ldr	r1, [pc, #192]	; 2f5b8 <CUSBBluetoothDevice::Configure()+0x214>
   2f4f4:	ebfffd34 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2f4f8:	e1a00006 	mov	r0, r6
   2f4fc:	e28dd014 	add	sp, sp, #20
   2f500:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2f504:	e5943014 	ldr	r3, [r4, #20]
   2f508:	e3530000 	cmp	r3, #0
   2f50c:	0afffff5 	beq	2f4e8 <CUSBBluetoothDevice::Configure()+0x144>
   2f510:	e5943018 	ldr	r3, [r4, #24]
   2f514:	e3530000 	cmp	r3, #0
   2f518:	0afffff2 	beq	2f4e8 <CUSBBluetoothDevice::Configure()+0x144>
   2f51c:	e5943010 	ldr	r3, [r4, #16]
   2f520:	e3530000 	cmp	r3, #0
   2f524:	0affffef 	beq	2f4e8 <CUSBBluetoothDevice::Configure()+0x144>
   2f528:	e1a00004 	mov	r0, r4
   2f52c:	ebfffce2 	bl	2e8bc <CUSBFunction::Configure()>
   2f530:	e2506000 	subs	r6, r0, #0
   2f534:	0a000019 	beq	2f5a0 <CUSBBluetoothDevice::Configure()+0x1fc>
   2f538:	e5940010 	ldr	r0, [r4, #16]
   2f53c:	ebffecde 	bl	2a8bc <CUSBEndpoint::GetMaxPacketSize() const>
   2f540:	eb001375 	bl	3431c <operator new[](unsigned int)>
   2f544:	e5840020 	str	r0, [r4, #32]
   2f548:	e1a0000d 	mov	r0, sp
   2f54c:	eb0023a0 	bl	383d4 <CString::CString()>
   2f550:	e59f3068 	ldr	r3, [pc, #104]	; 2f5c0 <CUSBBluetoothDevice::Configure()+0x21c>
   2f554:	e59f1068 	ldr	r1, [pc, #104]	; 2f5c4 <CUSBBluetoothDevice::Configure()+0x220>
   2f558:	e5932000 	ldr	r2, [r3]
   2f55c:	e1a0000d 	mov	r0, sp
   2f560:	e282c001 	add	ip, r2, #1
   2f564:	e583c000 	str	ip, [r3]
   2f568:	eb002721 	bl	391f4 <CString::Format(char const*, ...)>
   2f56c:	eb001fd3 	bl	374c0 <CDeviceNameService::Get()>
   2f570:	e1a06000 	mov	r6, r0
   2f574:	e1a0000d 	mov	r0, sp
   2f578:	eb0023ab 	bl	3842c <CString::operator char const*() const>
   2f57c:	e1a03005 	mov	r3, r5
   2f580:	e1a01000 	mov	r1, r0
   2f584:	e1a02004 	mov	r2, r4
   2f588:	e1a00006 	mov	r0, r6
   2f58c:	eb001f5a 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   2f590:	e1a0000d 	mov	r0, sp
   2f594:	eb00235b 	bl	38308 <CString::~CString()>
   2f598:	e3a06001 	mov	r6, #1
   2f59c:	eaffffc5 	b	2f4b8 <CUSBBluetoothDevice::Configure()+0x114>
   2f5a0:	eb001ff2 	bl	37570 <CLogger::Get()>
   2f5a4:	e59f301c 	ldr	r3, [pc, #28]	; 2f5c8 <CUSBBluetoothDevice::Configure()+0x224>
   2f5a8:	e3a02001 	mov	r2, #1
   2f5ac:	e59f1004 	ldr	r1, [pc, #4]	; 2f5b8 <CUSBBluetoothDevice::Configure()+0x214>
   2f5b0:	eb0020ce 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2f5b4:	eaffffbf 	b	2f4b8 <CUSBBluetoothDevice::Configure()+0x114>
   2f5b8:	0004b8c8 	.word	0x0004b8c8
   2f5bc:	0004b93c 	.word	0x0004b93c
   2f5c0:	00058f20 	.word	0x00058f20
   2f5c4:	0004b960 	.word	0x0004b960
   2f5c8:	0004b008 	.word	0x0004b008

0002f5cc <CUSBMIDIDevice::~CUSBMIDIDevice()>:
   2f5cc:	e92d4070 	push	{r4, r5, r6, lr}
   2f5d0:	e1a04000 	mov	r4, r0
   2f5d4:	e5900020 	ldr	r0, [r0, #32]
   2f5d8:	e59f304c 	ldr	r3, [pc, #76]	; 2f62c <CUSBMIDIDevice::~CUSBMIDIDevice()+0x60>
   2f5dc:	e3500000 	cmp	r0, #0
   2f5e0:	e5843000 	str	r3, [r4]
   2f5e4:	0a000002 	beq	2f5f4 <CUSBMIDIDevice::~CUSBMIDIDevice()+0x28>
   2f5e8:	eb00134d 	bl	34324 <operator delete[](void*)>
   2f5ec:	e3a03000 	mov	r3, #0
   2f5f0:	e5843020 	str	r3, [r4, #32]
   2f5f4:	e5945010 	ldr	r5, [r4, #16]
   2f5f8:	e3550000 	cmp	r5, #0
   2f5fc:	0a000006 	beq	2f61c <CUSBMIDIDevice::~CUSBMIDIDevice()+0x50>
   2f600:	e1a00005 	mov	r0, r5
   2f604:	ebffec93 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2f608:	e1a00005 	mov	r0, r5
   2f60c:	e3a01018 	mov	r1, #24
   2f610:	eb001344 	bl	34328 <operator delete(void*, unsigned int)>
   2f614:	e3a03000 	mov	r3, #0
   2f618:	e5843010 	str	r3, [r4, #16]
   2f61c:	e1a00004 	mov	r0, r4
   2f620:	ebfffbb7 	bl	2e504 <CUSBFunction::~CUSBFunction()>
   2f624:	e1a00004 	mov	r0, r4
   2f628:	e8bd8070 	pop	{r4, r5, r6, pc}
   2f62c:	0004b970 	.word	0x0004b970

0002f630 <CUSBMIDIDevice::~CUSBMIDIDevice()>:
   2f630:	e92d4010 	push	{r4, lr}
   2f634:	e1a04000 	mov	r4, r0
   2f638:	ebffffe3 	bl	2f5cc <CUSBMIDIDevice::~CUSBMIDIDevice()>
   2f63c:	e1a00004 	mov	r0, r4
   2f640:	e3a01028 	mov	r1, #40	; 0x28
   2f644:	eb001337 	bl	34328 <operator delete(void*, unsigned int)>
   2f648:	e1a00004 	mov	r0, r4
   2f64c:	e8bd8010 	pop	{r4, pc}

0002f650 <CUSBMIDIDevice::CUSBMIDIDevice(CUSBFunction*)>:
   2f650:	e92d4010 	push	{r4, lr}
   2f654:	e1a04000 	mov	r4, r0
   2f658:	ebfffbf8 	bl	2e640 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   2f65c:	e3a03000 	mov	r3, #0
   2f660:	e59f201c 	ldr	r2, [pc, #28]	; 2f684 <CUSBMIDIDevice::CUSBMIDIDevice(CUSBFunction*)+0x34>
   2f664:	e5843010 	str	r3, [r4, #16]
   2f668:	e5842000 	str	r2, [r4]
   2f66c:	e5843014 	str	r3, [r4, #20]
   2f670:	e5843018 	str	r3, [r4, #24]
   2f674:	e5843020 	str	r3, [r4, #32]
   2f678:	e5843024 	str	r3, [r4, #36]	; 0x24
   2f67c:	e1a00004 	mov	r0, r4
   2f680:	e8bd8010 	pop	{r4, pc}
   2f684:	0004b970 	.word	0x0004b970

0002f688 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))>:
   2f688:	e5903014 	ldr	r3, [r0, #20]
   2f68c:	e92d4070 	push	{r4, r5, r6, lr}
   2f690:	e3530000 	cmp	r3, #0
   2f694:	e1a04000 	mov	r4, r0
   2f698:	e1a05001 	mov	r5, r1
   2f69c:	0a000003 	beq	2f6b0 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))+0x28>
   2f6a0:	e3a0209a 	mov	r2, #154	; 0x9a
   2f6a4:	e59f1024 	ldr	r1, [pc, #36]	; 2f6d0 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))+0x48>
   2f6a8:	e59f0024 	ldr	r0, [pc, #36]	; 2f6d4 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))+0x4c>
   2f6ac:	eb001e33 	bl	36f80 <assertion_failed>
   2f6b0:	e3550000 	cmp	r5, #0
   2f6b4:	e5845014 	str	r5, [r4, #20]
   2f6b8:	18bd8070 	popne	{r4, r5, r6, pc}
   2f6bc:	e3a0209c 	mov	r2, #156	; 0x9c
   2f6c0:	e8bd4070 	pop	{r4, r5, r6, lr}
   2f6c4:	e59f1004 	ldr	r1, [pc, #4]	; 2f6d0 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))+0x48>
   2f6c8:	e59f0008 	ldr	r0, [pc, #8]	; 2f6d8 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))+0x50>
   2f6cc:	ea001e2b 	b	36f80 <assertion_failed>
   2f6d0:	0004b9d4 	.word	0x0004b9d4
   2f6d4:	0004b9e0 	.word	0x0004b9e0
   2f6d8:	0004b9f8 	.word	0x0004b9f8

0002f6dc <CUSBMIDIDevice::StartRequest()>:
   2f6dc:	e92d4070 	push	{r4, r5, r6, lr}
   2f6e0:	e5903010 	ldr	r3, [r0, #16]
   2f6e4:	e24dd008 	sub	sp, sp, #8
   2f6e8:	e3530000 	cmp	r3, #0
   2f6ec:	e1a04000 	mov	r4, r0
   2f6f0:	0a00002e 	beq	2f7b0 <CUSBMIDIDevice::StartRequest()+0xd4>
   2f6f4:	e5943020 	ldr	r3, [r4, #32]
   2f6f8:	e3530000 	cmp	r3, #0
   2f6fc:	0a000026 	beq	2f79c <CUSBMIDIDevice::StartRequest()+0xc0>
   2f700:	e5943018 	ldr	r3, [r4, #24]
   2f704:	e3530000 	cmp	r3, #0
   2f708:	0a000003 	beq	2f71c <CUSBMIDIDevice::StartRequest()+0x40>
   2f70c:	e3a020a4 	mov	r2, #164	; 0xa4
   2f710:	e59f10ac 	ldr	r1, [pc, #172]	; 2f7c4 <CUSBMIDIDevice::StartRequest()+0xe8>
   2f714:	e59f00ac 	ldr	r0, [pc, #172]	; 2f7c8 <CUSBMIDIDevice::StartRequest()+0xec>
   2f718:	eb001e18 	bl	36f80 <assertion_failed>
   2f71c:	e1d431bc 	ldrh	r3, [r4, #28]
   2f720:	e3530000 	cmp	r3, #0
   2f724:	1a000003 	bne	2f738 <CUSBMIDIDevice::StartRequest()+0x5c>
   2f728:	e3a020a5 	mov	r2, #165	; 0xa5
   2f72c:	e59f1090 	ldr	r1, [pc, #144]	; 2f7c4 <CUSBMIDIDevice::StartRequest()+0xe8>
   2f730:	e59f0094 	ldr	r0, [pc, #148]	; 2f7cc <CUSBMIDIDevice::StartRequest()+0xf0>
   2f734:	eb001e11 	bl	36f80 <assertion_failed>
   2f738:	e3a00028 	mov	r0, #40	; 0x28
   2f73c:	eb0012f5 	bl	34318 <operator new(unsigned int)>
   2f740:	e3a06000 	mov	r6, #0
   2f744:	e1a05000 	mov	r5, r0
   2f748:	e1d431bc 	ldrh	r3, [r4, #28]
   2f74c:	e5942020 	ldr	r2, [r4, #32]
   2f750:	e5941010 	ldr	r1, [r4, #16]
   2f754:	e58d6000 	str	r6, [sp]
   2f758:	ebffed3f 	bl	2ac5c <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   2f75c:	e1a03004 	mov	r3, r4
   2f760:	e1a02006 	mov	r2, r6
   2f764:	e59f1064 	ldr	r1, [pc, #100]	; 2f7d0 <CUSBMIDIDevice::StartRequest()+0xf4>
   2f768:	e1a00005 	mov	r0, r5
   2f76c:	e5845018 	str	r5, [r4, #24]
   2f770:	ebffedae 	bl	2ae30 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   2f774:	e5940018 	ldr	r0, [r4, #24]
   2f778:	ebffedc8 	bl	2aea0 <CUSBRequest::SetCompleteOnNAK()>
   2f77c:	e1a00004 	mov	r0, r4
   2f780:	ebfffc3c 	bl	2e878 <CUSBFunction::GetHost() const>
   2f784:	e5903000 	ldr	r3, [r0]
   2f788:	e5941018 	ldr	r1, [r4, #24]
   2f78c:	e593300c 	ldr	r3, [r3, #12]
   2f790:	e28dd008 	add	sp, sp, #8
   2f794:	e8bd4070 	pop	{r4, r5, r6, lr}
   2f798:	e12fff13 	bx	r3
   2f79c:	e3a020a2 	mov	r2, #162	; 0xa2
   2f7a0:	e59f101c 	ldr	r1, [pc, #28]	; 2f7c4 <CUSBMIDIDevice::StartRequest()+0xe8>
   2f7a4:	e59f0028 	ldr	r0, [pc, #40]	; 2f7d4 <CUSBMIDIDevice::StartRequest()+0xf8>
   2f7a8:	eb001df4 	bl	36f80 <assertion_failed>
   2f7ac:	eaffffd3 	b	2f700 <CUSBMIDIDevice::StartRequest()+0x24>
   2f7b0:	e3a020a1 	mov	r2, #161	; 0xa1
   2f7b4:	e59f1008 	ldr	r1, [pc, #8]	; 2f7c4 <CUSBMIDIDevice::StartRequest()+0xe8>
   2f7b8:	e59f0018 	ldr	r0, [pc, #24]	; 2f7d8 <CUSBMIDIDevice::StartRequest()+0xfc>
   2f7bc:	eb001def 	bl	36f80 <assertion_failed>
   2f7c0:	eaffffcb 	b	2f6f4 <CUSBMIDIDevice::StartRequest()+0x18>
   2f7c4:	0004b9d4 	.word	0x0004b9d4
   2f7c8:	0004b54c 	.word	0x0004b54c
   2f7cc:	0004ba3c 	.word	0x0004ba3c
   2f7d0:	0002f9d0 	.word	0x0002f9d0
   2f7d4:	0004ba24 	.word	0x0004ba24
   2f7d8:	0004ba10 	.word	0x0004ba10

0002f7dc <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)>:
   2f7dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2f7e0:	e2515000 	subs	r5, r1, #0
   2f7e4:	e24dd008 	sub	sp, sp, #8
   2f7e8:	e1a04000 	mov	r4, r0
   2f7ec:	0a000062 	beq	2f97c <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1a0>
   2f7f0:	e5943018 	ldr	r3, [r4, #24]
   2f7f4:	e1530005 	cmp	r3, r5
   2f7f8:	0a000003 	beq	2f80c <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x30>
   2f7fc:	e3a020b2 	mov	r2, #178	; 0xb2
   2f800:	e59f11a8 	ldr	r1, [pc, #424]	; 2f9b0 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1d4>
   2f804:	e59f01a8 	ldr	r0, [pc, #424]	; 2f9b4 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1d8>
   2f808:	eb001ddc 	bl	36f80 <assertion_failed>
   2f80c:	e1a00005 	mov	r0, r5
   2f810:	ebffed4b 	bl	2ad44 <CUSBRequest::GetStatus() const>
   2f814:	e3500000 	cmp	r0, #0
   2f818:	1a000022 	bne	2f8a8 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0xcc>
   2f81c:	e5945018 	ldr	r5, [r4, #24]
   2f820:	e3550000 	cmp	r5, #0
   2f824:	0a000006 	beq	2f844 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x68>
   2f828:	e1a00005 	mov	r0, r5
   2f82c:	ebffed2f 	bl	2acf0 <CUSBRequest::~CUSBRequest()>
   2f830:	e1a00005 	mov	r0, r5
   2f834:	e3a01028 	mov	r1, #40	; 0x28
   2f838:	eb0012ba 	bl	34328 <operator delete(void*, unsigned int)>
   2f83c:	e3a03000 	mov	r3, #0
   2f840:	e5843018 	str	r3, [r4, #24]
   2f844:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   2f848:	e3530000 	cmp	r3, #0
   2f84c:	1a000010 	bne	2f894 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0xb8>
   2f850:	eb001638 	bl	35138 <CTimer::Get()>
   2f854:	e58d4000 	str	r4, [sp]
   2f858:	e3a03000 	mov	r3, #0
   2f85c:	e59f2154 	ldr	r2, [pc, #340]	; 2f9b8 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1dc>
   2f860:	e3a01001 	mov	r1, #1
   2f864:	eb001470 	bl	34a2c <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)>
   2f868:	e3500000 	cmp	r0, #0
   2f86c:	e5840024 	str	r0, [r4, #36]	; 0x24
   2f870:	0a000001 	beq	2f87c <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0xa0>
   2f874:	e28dd008 	add	sp, sp, #8
   2f878:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2f87c:	e3a020da 	mov	r2, #218	; 0xda
   2f880:	e59f1128 	ldr	r1, [pc, #296]	; 2f9b0 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1d4>
   2f884:	e59f0130 	ldr	r0, [pc, #304]	; 2f9bc <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1e0>
   2f888:	e28dd008 	add	sp, sp, #8
   2f88c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2f890:	ea001dba 	b	36f80 <assertion_failed>
   2f894:	e3a020d8 	mov	r2, #216	; 0xd8
   2f898:	e59f1110 	ldr	r1, [pc, #272]	; 2f9b0 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1d4>
   2f89c:	e59f011c 	ldr	r0, [pc, #284]	; 2f9c0 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1e4>
   2f8a0:	eb001db6 	bl	36f80 <assertion_failed>
   2f8a4:	eaffffe9 	b	2f850 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x74>
   2f8a8:	e1a00005 	mov	r0, r5
   2f8ac:	ebffed26 	bl	2ad4c <CUSBRequest::GetResultLength() const>
   2f8b0:	e3100003 	tst	r0, #3
   2f8b4:	1affffd8 	bne	2f81c <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x40>
   2f8b8:	e5946020 	ldr	r6, [r4, #32]
   2f8bc:	e3560000 	cmp	r6, #0
   2f8c0:	0a000034 	beq	2f998 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1bc>
   2f8c4:	e1a00005 	mov	r0, r5
   2f8c8:	ebffed1f 	bl	2ad4c <CUSBRequest::GetResultLength() const>
   2f8cc:	e5945020 	ldr	r5, [r4, #32]
   2f8d0:	e0860000 	add	r0, r6, r0
   2f8d4:	e1500005 	cmp	r0, r5
   2f8d8:	9affffcf 	bls	2f81c <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x40>
   2f8dc:	e1e06005 	mvn	r6, r5
   2f8e0:	e3a08000 	mov	r8, #0
   2f8e4:	e0806006 	add	r6, r0, r6
   2f8e8:	e2853005 	add	r3, r5, #5
   2f8ec:	e3c66003 	bic	r6, r6, #3
   2f8f0:	e59f70cc 	ldr	r7, [pc, #204]	; 2f9c4 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1e8>
   2f8f4:	e0866003 	add	r6, r6, r3
   2f8f8:	e2855001 	add	r5, r5, #1
   2f8fc:	e5550001 	ldrb	r0, [r5, #-1]
   2f900:	e200300f 	and	r3, r0, #15
   2f904:	e3500000 	cmp	r0, #0
   2f908:	e0873103 	add	r3, r7, r3, lsl #2
   2f90c:	e1a00220 	lsr	r0, r0, #4
   2f910:	0a000006 	beq	2f930 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x154>
   2f914:	e5948014 	ldr	r8, [r4, #20]
   2f918:	e3580000 	cmp	r8, #0
   2f91c:	0a00001b 	beq	2f990 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1b4>
   2f920:	e5932024 	ldr	r2, [r3, #36]	; 0x24
   2f924:	e1a01005 	mov	r1, r5
   2f928:	e12fff38 	blx	r8
   2f92c:	e3a08001 	mov	r8, #1
   2f930:	e2855004 	add	r5, r5, #4
   2f934:	e1550006 	cmp	r5, r6
   2f938:	1affffef 	bne	2f8fc <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x120>
   2f93c:	e5945018 	ldr	r5, [r4, #24]
   2f940:	e3550000 	cmp	r5, #0
   2f944:	0a000004 	beq	2f95c <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x180>
   2f948:	e1a00005 	mov	r0, r5
   2f94c:	ebffece7 	bl	2acf0 <CUSBRequest::~CUSBRequest()>
   2f950:	e1a00005 	mov	r0, r5
   2f954:	e3a01028 	mov	r1, #40	; 0x28
   2f958:	eb001272 	bl	34328 <operator delete(void*, unsigned int)>
   2f95c:	e3a03000 	mov	r3, #0
   2f960:	e1580003 	cmp	r8, r3
   2f964:	e5843018 	str	r3, [r4, #24]
   2f968:	0affffb5 	beq	2f844 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x68>
   2f96c:	e1a00004 	mov	r0, r4
   2f970:	e28dd008 	add	sp, sp, #8
   2f974:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2f978:	eaffff57 	b	2f6dc <CUSBMIDIDevice::StartRequest()>
   2f97c:	e3a020b1 	mov	r2, #177	; 0xb1
   2f980:	e59f1028 	ldr	r1, [pc, #40]	; 2f9b0 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1d4>
   2f984:	e59f003c 	ldr	r0, [pc, #60]	; 2f9c8 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1ec>
   2f988:	eb001d7c 	bl	36f80 <assertion_failed>
   2f98c:	eaffff97 	b	2f7f0 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x14>
   2f990:	e3a08001 	mov	r8, #1
   2f994:	eaffffe5 	b	2f930 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x154>
   2f998:	e3a020b9 	mov	r2, #185	; 0xb9
   2f99c:	e59f100c 	ldr	r1, [pc, #12]	; 2f9b0 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1d4>
   2f9a0:	e59f0024 	ldr	r0, [pc, #36]	; 2f9cc <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0x1f0>
   2f9a4:	eb001d75 	bl	36f80 <assertion_failed>
   2f9a8:	e5946020 	ldr	r6, [r4, #32]
   2f9ac:	eaffffc4 	b	2f8c4 <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)+0xe8>
   2f9b0:	0004b9d4 	.word	0x0004b9d4
   2f9b4:	0004b5b8 	.word	0x0004b5b8
   2f9b8:	0002fa58 	.word	0x0002fa58
   2f9bc:	0004ba60 	.word	0x0004ba60
   2f9c0:	0004ba50 	.word	0x0004ba50
   2f9c4:	0004b968 	.word	0x0004b968
   2f9c8:	0004a1ac 	.word	0x0004a1ac
   2f9cc:	0004ba24 	.word	0x0004ba24

0002f9d0 <CUSBMIDIDevice::CompletionStub(CUSBRequest*, void*, void*)>:
   2f9d0:	e92d4070 	push	{r4, r5, r6, lr}
   2f9d4:	e2524000 	subs	r4, r2, #0
   2f9d8:	e1a05000 	mov	r5, r0
   2f9dc:	0a000003 	beq	2f9f0 <CUSBMIDIDevice::CompletionStub(CUSBRequest*, void*, void*)+0x20>
   2f9e0:	e1a01005 	mov	r1, r5
   2f9e4:	e1a00004 	mov	r0, r4
   2f9e8:	e8bd4070 	pop	{r4, r5, r6, lr}
   2f9ec:	eaffff7a 	b	2f7dc <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)>
   2f9f0:	e59f1018 	ldr	r1, [pc, #24]	; 2fa10 <CUSBMIDIDevice::CompletionStub(CUSBRequest*, void*, void*)+0x40>
   2f9f4:	e59f0018 	ldr	r0, [pc, #24]	; 2fa14 <CUSBMIDIDevice::CompletionStub(CUSBRequest*, void*, void*)+0x44>
   2f9f8:	e3a020e1 	mov	r2, #225	; 0xe1
   2f9fc:	eb001d5f 	bl	36f80 <assertion_failed>
   2fa00:	e1a01005 	mov	r1, r5
   2fa04:	e1a00004 	mov	r0, r4
   2fa08:	e8bd4070 	pop	{r4, r5, r6, lr}
   2fa0c:	eaffff72 	b	2f7dc <CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)>
   2fa10:	0004b9d4 	.word	0x0004b9d4
   2fa14:	0004a0c0 	.word	0x0004a0c0

0002fa18 <CUSBMIDIDevice::TimerHandler(unsigned int)>:
   2fa18:	e5903024 	ldr	r3, [r0, #36]	; 0x24
   2fa1c:	e92d4010 	push	{r4, lr}
   2fa20:	e1530001 	cmp	r3, r1
   2fa24:	e1a04000 	mov	r4, r0
   2fa28:	0a000003 	beq	2fa3c <CUSBMIDIDevice::TimerHandler(unsigned int)+0x24>
   2fa2c:	e3a020e8 	mov	r2, #232	; 0xe8
   2fa30:	e59f1018 	ldr	r1, [pc, #24]	; 2fa50 <CUSBMIDIDevice::TimerHandler(unsigned int)+0x38>
   2fa34:	e59f0018 	ldr	r0, [pc, #24]	; 2fa54 <CUSBMIDIDevice::TimerHandler(unsigned int)+0x3c>
   2fa38:	eb001d50 	bl	36f80 <assertion_failed>
   2fa3c:	e3a03000 	mov	r3, #0
   2fa40:	e1a00004 	mov	r0, r4
   2fa44:	e5843024 	str	r3, [r4, #36]	; 0x24
   2fa48:	e8bd4010 	pop	{r4, lr}
   2fa4c:	eaffff22 	b	2f6dc <CUSBMIDIDevice::StartRequest()>
   2fa50:	0004b9d4 	.word	0x0004b9d4
   2fa54:	0004ba70 	.word	0x0004ba70

0002fa58 <CUSBMIDIDevice::TimerStub(unsigned int, void*, void*)>:
   2fa58:	e92d4070 	push	{r4, r5, r6, lr}
   2fa5c:	e2524000 	subs	r4, r2, #0
   2fa60:	e1a05000 	mov	r5, r0
   2fa64:	0a000003 	beq	2fa78 <CUSBMIDIDevice::TimerStub(unsigned int, void*, void*)+0x20>
   2fa68:	e1a01005 	mov	r1, r5
   2fa6c:	e1a00004 	mov	r0, r4
   2fa70:	e8bd4070 	pop	{r4, r5, r6, lr}
   2fa74:	eaffffe7 	b	2fa18 <CUSBMIDIDevice::TimerHandler(unsigned int)>
   2fa78:	e59f1018 	ldr	r1, [pc, #24]	; 2fa98 <CUSBMIDIDevice::TimerStub(unsigned int, void*, void*)+0x40>
   2fa7c:	e59f0018 	ldr	r0, [pc, #24]	; 2fa9c <CUSBMIDIDevice::TimerStub(unsigned int, void*, void*)+0x44>
   2fa80:	e3a020f1 	mov	r2, #241	; 0xf1
   2fa84:	eb001d3d 	bl	36f80 <assertion_failed>
   2fa88:	e1a01005 	mov	r1, r5
   2fa8c:	e1a00004 	mov	r0, r4
   2fa90:	e8bd4070 	pop	{r4, r5, r6, lr}
   2fa94:	eaffffdf 	b	2fa18 <CUSBMIDIDevice::TimerHandler(unsigned int)>
   2fa98:	0004b9d4 	.word	0x0004b9d4
   2fa9c:	0004a0c0 	.word	0x0004a0c0

0002faa0 <CUSBMIDIDevice::Configure()>:
   2faa0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2faa4:	e24dd010 	sub	sp, sp, #16
   2faa8:	e1a05000 	mov	r5, r0
   2faac:	ebfffb40 	bl	2e7b4 <CUSBFunction::GetNumEndpoints() const>
   2fab0:	e2506000 	subs	r6, r0, #0
   2fab4:	e1a00005 	mov	r0, r5
   2fab8:	0a00003e 	beq	2fbb8 <CUSBMIDIDevice::Configure()+0x118>
   2fabc:	ebfffb4c 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2fac0:	ebffe849 	bl	29bec <CUSBDevice::GetDeviceDescriptor() const>
   2fac4:	e2504000 	subs	r4, r0, #0
   2fac8:	0a000072 	beq	2fc98 <CUSBMIDIDevice::Configure()+0x1f8>
   2facc:	e5d43008 	ldrb	r3, [r4, #8]
   2fad0:	e5d41009 	ldrb	r1, [r4, #9]
   2fad4:	e59f21e4 	ldr	r2, [pc, #484]	; 2fcc0 <CUSBMIDIDevice::Configure()+0x220>
   2fad8:	e1833401 	orr	r3, r3, r1, lsl #8
   2fadc:	e1530002 	cmp	r3, r2
   2fae0:	05d4600a 	ldrbeq	r6, [r4, #10]
   2fae4:	05d4200b 	ldrbeq	r2, [r4, #11]
   2fae8:	059f31d4 	ldreq	r3, [pc, #468]	; 2fcc4 <CUSBMIDIDevice::Configure()+0x224>
   2faec:	01866402 	orreq	r6, r6, r2, lsl #8
   2faf0:	00466003 	subeq	r6, r6, r3
   2faf4:	016f6f16 	clzeq	r6, r6
   2faf8:	13a06000 	movne	r6, #0
   2fafc:	e59f81c4 	ldr	r8, [pc, #452]	; 2fcc8 <CUSBMIDIDevice::Configure()+0x228>
   2fb00:	e59f71c4 	ldr	r7, [pc, #452]	; 2fccc <CUSBMIDIDevice::Configure()+0x22c>
   2fb04:	01a062a6 	lsreq	r6, r6, #5
   2fb08:	e3a01005 	mov	r1, #5
   2fb0c:	e1a00005 	mov	r0, r5
   2fb10:	ebfffb9a 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   2fb14:	e2504000 	subs	r4, r0, #0
   2fb18:	0a000035 	beq	2fbf4 <CUSBMIDIDevice::Configure()+0x154>
   2fb1c:	e1d430d2 	ldrsb	r3, [r4, #2]
   2fb20:	e3530000 	cmp	r3, #0
   2fb24:	aafffff7 	bge	2fb08 <CUSBMIDIDevice::Configure()+0x68>
   2fb28:	e5d43003 	ldrb	r3, [r4, #3]
   2fb2c:	e203303f 	and	r3, r3, #63	; 0x3f
   2fb30:	e3530002 	cmp	r3, #2
   2fb34:	1afffff3 	bne	2fb08 <CUSBMIDIDevice::Configure()+0x68>
   2fb38:	e3560000 	cmp	r6, #0
   2fb3c:	0a000022 	beq	2fbcc <CUSBMIDIDevice::Configure()+0x12c>
   2fb40:	e5953010 	ldr	r3, [r5, #16]
   2fb44:	e3530000 	cmp	r3, #0
   2fb48:	1a000057 	bne	2fcac <CUSBMIDIDevice::Configure()+0x20c>
   2fb4c:	e1a00005 	mov	r0, r5
   2fb50:	ebfffb27 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2fb54:	e1a0a000 	mov	sl, r0
   2fb58:	e3a00018 	mov	r0, #24
   2fb5c:	eb0011ed 	bl	34318 <operator new(unsigned int)>
   2fb60:	e1a09000 	mov	r9, r0
   2fb64:	e1a02004 	mov	r2, r4
   2fb68:	e1a0100a 	mov	r1, sl
   2fb6c:	ebffeaaa 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   2fb70:	e5859010 	str	r9, [r5, #16]
   2fb74:	e5d40004 	ldrb	r0, [r4, #4]
   2fb78:	e5d42005 	ldrb	r2, [r4, #5]
   2fb7c:	e5953020 	ldr	r3, [r5, #32]
   2fb80:	e1800402 	orr	r0, r0, r2, lsl #8
   2fb84:	e3c00003 	bic	r0, r0, #3
   2fb88:	e6ff0070 	uxth	r0, r0
   2fb8c:	e3530000 	cmp	r3, #0
   2fb90:	e1c501bc 	strh	r0, [r5, #28]
   2fb94:	0a000004 	beq	2fbac <CUSBMIDIDevice::Configure()+0x10c>
   2fb98:	e1a00007 	mov	r0, r7
   2fb9c:	e3a0207e 	mov	r2, #126	; 0x7e
   2fba0:	e1a01008 	mov	r1, r8
   2fba4:	eb001cf5 	bl	36f80 <assertion_failed>
   2fba8:	e1d501bc 	ldrh	r0, [r5, #28]
   2fbac:	eb0011da 	bl	3431c <operator new[](unsigned int)>
   2fbb0:	e5850020 	str	r0, [r5, #32]
   2fbb4:	eaffffd3 	b	2fb08 <CUSBMIDIDevice::Configure()+0x68>
   2fbb8:	e59f1110 	ldr	r1, [pc, #272]	; 2fcd0 <CUSBMIDIDevice::Configure()+0x230>
   2fbbc:	ebfffb82 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2fbc0:	e1a00006 	mov	r0, r6
   2fbc4:	e28dd010 	add	sp, sp, #16
   2fbc8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2fbcc:	e3a01025 	mov	r1, #37	; 0x25
   2fbd0:	e1a00005 	mov	r0, r5
   2fbd4:	ebfffb69 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   2fbd8:	e3500000 	cmp	r0, #0
   2fbdc:	0affffc9 	beq	2fb08 <CUSBMIDIDevice::Configure()+0x68>
   2fbe0:	e5d43000 	ldrb	r3, [r4]
   2fbe4:	e0843003 	add	r3, r4, r3
   2fbe8:	e1500003 	cmp	r0, r3
   2fbec:	1affffc5 	bne	2fb08 <CUSBMIDIDevice::Configure()+0x68>
   2fbf0:	eaffffd2 	b	2fb40 <CUSBMIDIDevice::Configure()+0xa0>
   2fbf4:	e5956010 	ldr	r6, [r5, #16]
   2fbf8:	e1a00005 	mov	r0, r5
   2fbfc:	e3560000 	cmp	r6, #0
   2fc00:	0affffec 	beq	2fbb8 <CUSBMIDIDevice::Configure()+0x118>
   2fc04:	ebfffb2c 	bl	2e8bc <CUSBFunction::Configure()>
   2fc08:	e2506000 	subs	r6, r0, #0
   2fc0c:	0a000019 	beq	2fc78 <CUSBMIDIDevice::Configure()+0x1d8>
   2fc10:	e1a0000d 	mov	r0, sp
   2fc14:	eb0021ee 	bl	383d4 <CString::CString()>
   2fc18:	e59f30b4 	ldr	r3, [pc, #180]	; 2fcd4 <CUSBMIDIDevice::Configure()+0x234>
   2fc1c:	e59f10b4 	ldr	r1, [pc, #180]	; 2fcd8 <CUSBMIDIDevice::Configure()+0x238>
   2fc20:	e5932000 	ldr	r2, [r3]
   2fc24:	e1a0000d 	mov	r0, sp
   2fc28:	e282c001 	add	ip, r2, #1
   2fc2c:	e583c000 	str	ip, [r3]
   2fc30:	eb00256f 	bl	391f4 <CString::Format(char const*, ...)>
   2fc34:	eb001e21 	bl	374c0 <CDeviceNameService::Get()>
   2fc38:	e1a06000 	mov	r6, r0
   2fc3c:	e1a0000d 	mov	r0, sp
   2fc40:	eb0021f9 	bl	3842c <CString::operator char const*() const>
   2fc44:	e1a03004 	mov	r3, r4
   2fc48:	e1a01000 	mov	r1, r0
   2fc4c:	e1a02005 	mov	r2, r5
   2fc50:	e1a00006 	mov	r0, r6
   2fc54:	eb001da8 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   2fc58:	e1a00005 	mov	r0, r5
   2fc5c:	ebfffe9e 	bl	2f6dc <CUSBMIDIDevice::StartRequest()>
   2fc60:	e1a06000 	mov	r6, r0
   2fc64:	e1a0000d 	mov	r0, sp
   2fc68:	eb0021a6 	bl	38308 <CString::~CString()>
   2fc6c:	e1a00006 	mov	r0, r6
   2fc70:	e28dd010 	add	sp, sp, #16
   2fc74:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2fc78:	eb001e3c 	bl	37570 <CLogger::Get()>
   2fc7c:	e59f3058 	ldr	r3, [pc, #88]	; 2fcdc <CUSBMIDIDevice::Configure()+0x23c>
   2fc80:	e3a02001 	mov	r2, #1
   2fc84:	e59f1044 	ldr	r1, [pc, #68]	; 2fcd0 <CUSBMIDIDevice::Configure()+0x230>
   2fc88:	eb001f18 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   2fc8c:	e1a00006 	mov	r0, r6
   2fc90:	e28dd010 	add	sp, sp, #16
   2fc94:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2fc98:	e3a02052 	mov	r2, #82	; 0x52
   2fc9c:	e59f1024 	ldr	r1, [pc, #36]	; 2fcc8 <CUSBMIDIDevice::Configure()+0x228>
   2fca0:	e59f0038 	ldr	r0, [pc, #56]	; 2fce0 <CUSBMIDIDevice::Configure()+0x240>
   2fca4:	eb001cb5 	bl	36f80 <assertion_failed>
   2fca8:	eaffff87 	b	2facc <CUSBMIDIDevice::Configure()+0x2c>
   2fcac:	e1a00005 	mov	r0, r5
   2fcb0:	e59f1018 	ldr	r1, [pc, #24]	; 2fcd0 <CUSBMIDIDevice::Configure()+0x230>
   2fcb4:	ebfffb44 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   2fcb8:	e3a06000 	mov	r6, #0
   2fcbc:	eaffffbf 	b	2fbc0 <CUSBMIDIDevice::Configure()+0x120>
   2fcc0:	00000582 	.word	0x00000582
   2fcc4:	0000012a 	.word	0x0000012a
   2fcc8:	0004b9d4 	.word	0x0004b9d4
   2fccc:	0004ba84 	.word	0x0004ba84
   2fcd0:	0004b9cc 	.word	0x0004b9cc
   2fcd4:	00058f24 	.word	0x00058f24
   2fcd8:	0004ba9c 	.word	0x0004ba9c
   2fcdc:	0004b008 	.word	0x0004b008
   2fce0:	0004b724 	.word	0x0004b724

0002fce4 <CUSBCDCEthernetDevice::GetMACAddress() const>:
   2fce4:	e2800018 	add	r0, r0, #24
   2fce8:	e12fff1e 	bx	lr

0002fcec <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>:
   2fcec:	e92d4070 	push	{r4, r5, r6, lr}
   2fcf0:	e5905014 	ldr	r5, [r0, #20]
   2fcf4:	e59f3068 	ldr	r3, [pc, #104]	; 2fd64 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()+0x78>
   2fcf8:	e3550000 	cmp	r5, #0
   2fcfc:	e1a04000 	mov	r4, r0
   2fd00:	e5803000 	str	r3, [r0]
   2fd04:	0a000004 	beq	2fd1c <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()+0x30>
   2fd08:	e1a00005 	mov	r0, r5
   2fd0c:	ebffead1 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2fd10:	e1a00005 	mov	r0, r5
   2fd14:	e3a01018 	mov	r1, #24
   2fd18:	eb001182 	bl	34328 <operator delete(void*, unsigned int)>
   2fd1c:	e3a03000 	mov	r3, #0
   2fd20:	e5945010 	ldr	r5, [r4, #16]
   2fd24:	e5843014 	str	r3, [r4, #20]
   2fd28:	e1550003 	cmp	r5, r3
   2fd2c:	0a000004 	beq	2fd44 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()+0x58>
   2fd30:	e1a00005 	mov	r0, r5
   2fd34:	ebffeac7 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   2fd38:	e1a00005 	mov	r0, r5
   2fd3c:	e3a01018 	mov	r1, #24
   2fd40:	eb001178 	bl	34328 <operator delete(void*, unsigned int)>
   2fd44:	e3a03000 	mov	r3, #0
   2fd48:	e2840018 	add	r0, r4, #24
   2fd4c:	e5843010 	str	r3, [r4, #16]
   2fd50:	eb0005df 	bl	314d4 <CMACAddress::~CMACAddress()>
   2fd54:	e1a00004 	mov	r0, r4
   2fd58:	eb000691 	bl	317a4 <CNetDevice::~CNetDevice()>
   2fd5c:	e1a00004 	mov	r0, r4
   2fd60:	e8bd8070 	pop	{r4, r5, r6, pc}
   2fd64:	0004baac 	.word	0x0004baac

0002fd68 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>:
   2fd68:	e92d4010 	push	{r4, lr}
   2fd6c:	e1a04000 	mov	r4, r0
   2fd70:	ebffffdd 	bl	2fcec <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>
   2fd74:	e1a00004 	mov	r0, r4
   2fd78:	e3a01024 	mov	r1, #36	; 0x24
   2fd7c:	eb001169 	bl	34328 <operator delete(void*, unsigned int)>
   2fd80:	e1a00004 	mov	r0, r4
   2fd84:	e8bd8010 	pop	{r4, pc}

0002fd88 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)>:
   2fd88:	e92d4070 	push	{r4, r5, r6, lr}
   2fd8c:	e5903014 	ldr	r3, [r0, #20]
   2fd90:	e1a04000 	mov	r4, r0
   2fd94:	e3530000 	cmp	r3, #0
   2fd98:	e1a05001 	mov	r5, r1
   2fd9c:	e1a06002 	mov	r6, r2
   2fda0:	0a000015 	beq	2fdfc <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x74>
   2fda4:	e3550000 	cmp	r5, #0
   2fda8:	0a00000e 	beq	2fde8 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x60>
   2fdac:	e3560d19 	cmp	r6, #1600	; 0x640
   2fdb0:	9a000003 	bls	2fdc4 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x3c>
   2fdb4:	e3a020ac 	mov	r2, #172	; 0xac
   2fdb8:	e59f1050 	ldr	r1, [pc, #80]	; 2fe10 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x88>
   2fdbc:	e59f0050 	ldr	r0, [pc, #80]	; 2fe14 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x8c>
   2fdc0:	eb001c6e 	bl	36f80 <assertion_failed>
   2fdc4:	e1a00004 	mov	r0, r4
   2fdc8:	ebfffaaa 	bl	2e878 <CUSBFunction::GetHost() const>
   2fdcc:	e1a03006 	mov	r3, r6
   2fdd0:	e1a02005 	mov	r2, r5
   2fdd4:	e5941014 	ldr	r1, [r4, #20]
   2fdd8:	ebffeb87 	bl	2abfc <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int)>
   2fddc:	e1e00000 	mvn	r0, r0
   2fde0:	e1a00fa0 	lsr	r0, r0, #31
   2fde4:	e8bd8070 	pop	{r4, r5, r6, pc}
   2fde8:	e3a020ab 	mov	r2, #171	; 0xab
   2fdec:	e59f101c 	ldr	r1, [pc, #28]	; 2fe10 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x88>
   2fdf0:	e59f0020 	ldr	r0, [pc, #32]	; 2fe18 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x90>
   2fdf4:	eb001c61 	bl	36f80 <assertion_failed>
   2fdf8:	eaffffeb 	b	2fdac <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x24>
   2fdfc:	e3a020aa 	mov	r2, #170	; 0xaa
   2fe00:	e59f1008 	ldr	r1, [pc, #8]	; 2fe10 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x88>
   2fe04:	e59f0010 	ldr	r0, [pc, #16]	; 2fe1c <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x94>
   2fe08:	eb001c5c 	bl	36f80 <assertion_failed>
   2fe0c:	eaffffe4 	b	2fda4 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x1c>
   2fe10:	0004badc 	.word	0x0004badc
   2fe14:	0004bb08 	.word	0x0004bb08
   2fe18:	0004b104 	.word	0x0004b104
   2fe1c:	0004baf0 	.word	0x0004baf0

0002fe20 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)>:
   2fe20:	e92d4070 	push	{r4, r5, r6, lr}
   2fe24:	e5903010 	ldr	r3, [r0, #16]
   2fe28:	e24dd030 	sub	sp, sp, #48	; 0x30
   2fe2c:	e3530000 	cmp	r3, #0
   2fe30:	e1a04000 	mov	r4, r0
   2fe34:	e1a05001 	mov	r5, r1
   2fe38:	e1a06002 	mov	r6, r2
   2fe3c:	0a000021 	beq	2fec8 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xa8>
   2fe40:	e3550000 	cmp	r5, #0
   2fe44:	0a000025 	beq	2fee0 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xc0>
   2fe48:	e3a03000 	mov	r3, #0
   2fe4c:	e5941010 	ldr	r1, [r4, #16]
   2fe50:	e1a02005 	mov	r2, r5
   2fe54:	e58d3000 	str	r3, [sp]
   2fe58:	e28d0008 	add	r0, sp, #8
   2fe5c:	e3a03d19 	mov	r3, #1600	; 0x640
   2fe60:	ebffeb7d 	bl	2ac5c <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   2fe64:	e28d0008 	add	r0, sp, #8
   2fe68:	ebffec0c 	bl	2aea0 <CUSBRequest::SetCompleteOnNAK()>
   2fe6c:	e1a00004 	mov	r0, r4
   2fe70:	ebfffa80 	bl	2e878 <CUSBFunction::GetHost() const>
   2fe74:	e5903000 	ldr	r3, [r0]
   2fe78:	e28d1008 	add	r1, sp, #8
   2fe7c:	e5933008 	ldr	r3, [r3, #8]
   2fe80:	e12fff33 	blx	r3
   2fe84:	e3500000 	cmp	r0, #0
   2fe88:	1a000005 	bne	2fea4 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0x84>
   2fe8c:	e3a04000 	mov	r4, #0
   2fe90:	e28d0008 	add	r0, sp, #8
   2fe94:	ebffeb95 	bl	2acf0 <CUSBRequest::~CUSBRequest()>
   2fe98:	e1a00004 	mov	r0, r4
   2fe9c:	e28dd030 	add	sp, sp, #48	; 0x30
   2fea0:	e8bd8070 	pop	{r4, r5, r6, pc}
   2fea4:	e28d0008 	add	r0, sp, #8
   2fea8:	ebffeba7 	bl	2ad4c <CUSBRequest::GetResultLength() const>
   2feac:	e2505000 	subs	r5, r0, #0
   2feb0:	0afffff5 	beq	2fe8c <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0x6c>
   2feb4:	e3560000 	cmp	r6, #0
   2feb8:	0a00000d 	beq	2fef4 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xd4>
   2febc:	e3a04001 	mov	r4, #1
   2fec0:	e5865000 	str	r5, [r6]
   2fec4:	eafffff1 	b	2fe90 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0x70>
   2fec8:	e3a020b2 	mov	r2, #178	; 0xb2
   2fecc:	e59f1034 	ldr	r1, [pc, #52]	; 2ff08 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xe8>
   2fed0:	e59f0034 	ldr	r0, [pc, #52]	; 2ff0c <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xec>
   2fed4:	eb001c29 	bl	36f80 <assertion_failed>
   2fed8:	e3550000 	cmp	r5, #0
   2fedc:	1affffd9 	bne	2fe48 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0x28>
   2fee0:	e3a020b3 	mov	r2, #179	; 0xb3
   2fee4:	e59f101c 	ldr	r1, [pc, #28]	; 2ff08 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xe8>
   2fee8:	e59f0020 	ldr	r0, [pc, #32]	; 2ff10 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xf0>
   2feec:	eb001c23 	bl	36f80 <assertion_failed>
   2fef0:	eaffffd4 	b	2fe48 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0x28>
   2fef4:	e3a020c3 	mov	r2, #195	; 0xc3
   2fef8:	e59f1008 	ldr	r1, [pc, #8]	; 2ff08 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xe8>
   2fefc:	e59f0010 	ldr	r0, [pc, #16]	; 2ff14 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xf4>
   2ff00:	eb001c1e 	bl	36f80 <assertion_failed>
   2ff04:	eaffffec 	b	2febc <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0x9c>
   2ff08:	0004badc 	.word	0x0004badc
   2ff0c:	0004bb28 	.word	0x0004bb28
   2ff10:	0004b104 	.word	0x0004b104
   2ff14:	0004bb40 	.word	0x0004bb40

0002ff18 <CUSBCDCEthernetDevice::CUSBCDCEthernetDevice(CUSBFunction*)>:
   2ff18:	e92d4010 	push	{r4, lr}
   2ff1c:	e1a04000 	mov	r4, r0
   2ff20:	eb000617 	bl	31784 <CNetDevice::CNetDevice(CUSBFunction*)>
   2ff24:	e3a03000 	mov	r3, #0
   2ff28:	e59f2018 	ldr	r2, [pc, #24]	; 2ff48 <CUSBCDCEthernetDevice::CUSBCDCEthernetDevice(CUSBFunction*)+0x30>
   2ff2c:	e5843010 	str	r3, [r4, #16]
   2ff30:	e5842000 	str	r2, [r4]
   2ff34:	e5843014 	str	r3, [r4, #20]
   2ff38:	e2840018 	add	r0, r4, #24
   2ff3c:	eb000561 	bl	314c8 <CMACAddress::CMACAddress()>
   2ff40:	e1a00004 	mov	r0, r4
   2ff44:	e8bd8010 	pop	{r4, pc}
   2ff48:	0004baac 	.word	0x0004baac

0002ff4c <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)>:
   2ff4c:	e92d4030 	push	{r4, r5, lr}
   2ff50:	e24dd01c 	sub	sp, sp, #28
   2ff54:	e1a04001 	mov	r4, r1
   2ff58:	e1a05000 	mov	r5, r0
   2ff5c:	ebfffa24 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   2ff60:	e1a01000 	mov	r1, r0
   2ff64:	e28d000c 	add	r0, sp, #12
   2ff68:	eb00019f 	bl	305ec <CUSBString::CUSBString(CUSBDevice*)>
   2ff6c:	e3540000 	cmp	r4, #0
   2ff70:	1a000005 	bne	2ff8c <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x40>
   2ff74:	e3a04000 	mov	r4, #0
   2ff78:	e28d000c 	add	r0, sp, #12
   2ff7c:	eb0001eb 	bl	30730 <CUSBString::~CUSBString()>
   2ff80:	e1a00004 	mov	r0, r4
   2ff84:	e28dd01c 	add	sp, sp, #28
   2ff88:	e8bd8030 	pop	{r4, r5, pc}
   2ff8c:	e28d000c 	add	r0, sp, #12
   2ff90:	eb00029b 	bl	30a04 <CUSBString::GetLanguageID()>
   2ff94:	e1a01004 	mov	r1, r4
   2ff98:	e1a02000 	mov	r2, r0
   2ff9c:	e28d000c 	add	r0, sp, #12
   2ffa0:	eb0001f2 	bl	30770 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)>
   2ffa4:	e3500000 	cmp	r0, #0
   2ffa8:	0afffff1 	beq	2ff74 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x28>
   2ffac:	e28d000c 	add	r0, sp, #12
   2ffb0:	eb000291 	bl	309fc <CUSBString::Get() const>
   2ffb4:	e2504000 	subs	r4, r0, #0
   2ffb8:	0a00001e 	beq	30038 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0xec>
   2ffbc:	e2841002 	add	r1, r4, #2
   2ffc0:	e28d0003 	add	r0, sp, #3
   2ffc4:	e284400e 	add	r4, r4, #14
   2ffc8:	e15130d2 	ldrsb	r3, [r1, #-2]
   2ffcc:	e3530039 	cmp	r3, #57	; 0x39
   2ffd0:	e6ef3073 	uxtb	r3, r3
   2ffd4:	c2433007 	subgt	r3, r3, #7
   2ffd8:	c6ef3073 	uxtbgt	r3, r3
   2ffdc:	e2433030 	sub	r3, r3, #48	; 0x30
   2ffe0:	e6ef2073 	uxtb	r2, r3
   2ffe4:	e352000f 	cmp	r2, #15
   2ffe8:	8affffe1 	bhi	2ff74 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x28>
   2ffec:	e15130d1 	ldrsb	r3, [r1, #-1]
   2fff0:	e2811002 	add	r1, r1, #2
   2fff4:	e3530039 	cmp	r3, #57	; 0x39
   2fff8:	e6ef3073 	uxtb	r3, r3
   2fffc:	c2433007 	subgt	r3, r3, #7
   30000:	c6ef3073 	uxtbgt	r3, r3
   30004:	e2433030 	sub	r3, r3, #48	; 0x30
   30008:	e6ef3073 	uxtb	r3, r3
   3000c:	e353000f 	cmp	r3, #15
   30010:	e1833202 	orr	r3, r3, r2, lsl #4
   30014:	8affffd6 	bhi	2ff74 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x28>
   30018:	e1540001 	cmp	r4, r1
   3001c:	e5e03001 	strb	r3, [r0, #1]!
   30020:	1affffe8 	bne	2ffc8 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x7c>
   30024:	e2850018 	add	r0, r5, #24
   30028:	e28d1004 	add	r1, sp, #4
   3002c:	eb00054e 	bl	3156c <CMACAddress::Set(unsigned char const*)>
   30030:	e3a04001 	mov	r4, #1
   30034:	eaffffcf 	b	2ff78 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x2c>
   30038:	e3a020d3 	mov	r2, #211	; 0xd3
   3003c:	e59f1008 	ldr	r1, [pc, #8]	; 3004c <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x100>
   30040:	e59f0008 	ldr	r0, [pc, #8]	; 30050 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x104>
   30044:	eb001bcd 	bl	36f80 <assertion_failed>
   30048:	eaffffdb 	b	2ffbc <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x70>
   3004c:	0004badc 	.word	0x0004badc
   30050:	0004bb54 	.word	0x0004bb54

00030054 <CUSBCDCEthernetDevice::Configure()>:
   30054:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   30058:	e1a05000 	mov	r5, r0
   3005c:	e24dd01c 	sub	sp, sp, #28
   30060:	ea000002 	b	30070 <CUSBCDCEthernetDevice::Configure()+0x1c>
   30064:	e5d43002 	ldrb	r3, [r4, #2]
   30068:	e353000f 	cmp	r3, #15
   3006c:	0a000013 	beq	300c0 <CUSBCDCEthernetDevice::Configure()+0x6c>
   30070:	e3a01024 	mov	r1, #36	; 0x24
   30074:	e1a00005 	mov	r0, r5
   30078:	ebfffa40 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   3007c:	e2504000 	subs	r4, r0, #0
   30080:	1afffff7 	bne	30064 <CUSBCDCEthernetDevice::Configure()+0x10>
   30084:	e1a00005 	mov	r0, r5
   30088:	e59f11ec 	ldr	r1, [pc, #492]	; 3027c <CUSBCDCEthernetDevice::Configure()+0x228>
   3008c:	ebfffa4e 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   30090:	e1a00004 	mov	r0, r4
   30094:	e28dd01c 	add	sp, sp, #28
   30098:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   3009c:	e5d32006 	ldrb	r2, [r3, #6]
   300a0:	e3520000 	cmp	r2, #0
   300a4:	1a000005 	bne	300c0 <CUSBCDCEthernetDevice::Configure()+0x6c>
   300a8:	e5d32007 	ldrb	r2, [r3, #7]
   300ac:	e3520000 	cmp	r2, #0
   300b0:	1a000002 	bne	300c0 <CUSBCDCEthernetDevice::Configure()+0x6c>
   300b4:	e5d33004 	ldrb	r3, [r3, #4]
   300b8:	e3530001 	cmp	r3, #1
   300bc:	8a000008 	bhi	300e4 <CUSBCDCEthernetDevice::Configure()+0x90>
   300c0:	e3a01004 	mov	r1, #4
   300c4:	e1a00005 	mov	r0, r5
   300c8:	ebfffa2c 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   300cc:	e2503000 	subs	r3, r0, #0
   300d0:	0a000035 	beq	301ac <CUSBCDCEthernetDevice::Configure()+0x158>
   300d4:	e5d32005 	ldrb	r2, [r3, #5]
   300d8:	e352000a 	cmp	r2, #10
   300dc:	1afffff7 	bne	300c0 <CUSBCDCEthernetDevice::Configure()+0x6c>
   300e0:	eaffffed 	b	3009c <CUSBCDCEthernetDevice::Configure()+0x48>
   300e4:	e5d41003 	ldrb	r1, [r4, #3]
   300e8:	e1a00005 	mov	r0, r5
   300ec:	ebffff96 	bl	2ff4c <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)>
   300f0:	e2504000 	subs	r4, r0, #0
   300f4:	0a000033 	beq	301c8 <CUSBCDCEthernetDevice::Configure()+0x174>
   300f8:	e28d0008 	add	r0, sp, #8
   300fc:	eb0020b4 	bl	383d4 <CString::CString()>
   30100:	e28d1008 	add	r1, sp, #8
   30104:	e2850018 	add	r0, r5, #24
   30108:	eb000578 	bl	316f0 <CMACAddress::Format(CString*) const>
   3010c:	eb001d17 	bl	37570 <CLogger::Get()>
   30110:	e1a04000 	mov	r4, r0
   30114:	e28d0008 	add	r0, sp, #8
   30118:	eb0020c3 	bl	3842c <CString::operator char const*() const>
   3011c:	e59f315c 	ldr	r3, [pc, #348]	; 30280 <CUSBCDCEthernetDevice::Configure()+0x22c>
   30120:	e58d0000 	str	r0, [sp]
   30124:	e3a02004 	mov	r2, #4
   30128:	e1a00004 	mov	r0, r4
   3012c:	e59f1148 	ldr	r1, [pc, #328]	; 3027c <CUSBCDCEthernetDevice::Configure()+0x228>
   30130:	eb001dee 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   30134:	ea000003 	b	30148 <CUSBCDCEthernetDevice::Configure()+0xf4>
   30138:	e5d43003 	ldrb	r3, [r4, #3]
   3013c:	e203303f 	and	r3, r3, #63	; 0x3f
   30140:	e3530002 	cmp	r3, #2
   30144:	0a000025 	beq	301e0 <CUSBCDCEthernetDevice::Configure()+0x18c>
   30148:	e3a01005 	mov	r1, #5
   3014c:	e1a00005 	mov	r0, r5
   30150:	ebfffa0a 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   30154:	e2504000 	subs	r4, r0, #0
   30158:	1afffff6 	bne	30138 <CUSBCDCEthernetDevice::Configure()+0xe4>
   3015c:	e5953010 	ldr	r3, [r5, #16]
   30160:	e1a00005 	mov	r0, r5
   30164:	e3530000 	cmp	r3, #0
   30168:	0a00002d 	beq	30224 <CUSBCDCEthernetDevice::Configure()+0x1d0>
   3016c:	e5953014 	ldr	r3, [r5, #20]
   30170:	e3530000 	cmp	r3, #0
   30174:	0a00002a 	beq	30224 <CUSBCDCEthernetDevice::Configure()+0x1d0>
   30178:	ebfff9cf 	bl	2e8bc <CUSBFunction::Configure()>
   3017c:	e2504000 	subs	r4, r0, #0
   30180:	1a000039 	bne	3026c <CUSBCDCEthernetDevice::Configure()+0x218>
   30184:	eb001cf9 	bl	37570 <CLogger::Get()>
   30188:	e59f30f4 	ldr	r3, [pc, #244]	; 30284 <CUSBCDCEthernetDevice::Configure()+0x230>
   3018c:	e3a02001 	mov	r2, #1
   30190:	e59f10e4 	ldr	r1, [pc, #228]	; 3027c <CUSBCDCEthernetDevice::Configure()+0x228>
   30194:	eb001dd5 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   30198:	e28d0008 	add	r0, sp, #8
   3019c:	eb002059 	bl	38308 <CString::~CString()>
   301a0:	e1a00004 	mov	r0, r4
   301a4:	e28dd01c 	add	sp, sp, #28
   301a8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   301ac:	e1a04003 	mov	r4, r3
   301b0:	e1a00005 	mov	r0, r5
   301b4:	e59f10c0 	ldr	r1, [pc, #192]	; 3027c <CUSBCDCEthernetDevice::Configure()+0x228>
   301b8:	ebfffa03 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   301bc:	e1a00004 	mov	r0, r4
   301c0:	e28dd01c 	add	sp, sp, #28
   301c4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   301c8:	eb001ce8 	bl	37570 <CLogger::Get()>
   301cc:	e59f30b4 	ldr	r3, [pc, #180]	; 30288 <CUSBCDCEthernetDevice::Configure()+0x234>
   301d0:	e3a02001 	mov	r2, #1
   301d4:	e59f10a0 	ldr	r1, [pc, #160]	; 3027c <CUSBCDCEthernetDevice::Configure()+0x228>
   301d8:	eb001dc4 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   301dc:	eaffffab 	b	30090 <CUSBCDCEthernetDevice::Configure()+0x3c>
   301e0:	e1d430d2 	ldrsb	r3, [r4, #2]
   301e4:	e3530000 	cmp	r3, #0
   301e8:	ba000011 	blt	30234 <CUSBCDCEthernetDevice::Configure()+0x1e0>
   301ec:	e5953014 	ldr	r3, [r5, #20]
   301f0:	e1a00005 	mov	r0, r5
   301f4:	e3530000 	cmp	r3, #0
   301f8:	1a000009 	bne	30224 <CUSBCDCEthernetDevice::Configure()+0x1d0>
   301fc:	ebfff97c 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   30200:	e1a07000 	mov	r7, r0
   30204:	e3a00018 	mov	r0, #24
   30208:	eb001042 	bl	34318 <operator new(unsigned int)>
   3020c:	e1a06000 	mov	r6, r0
   30210:	e1a02004 	mov	r2, r4
   30214:	e1a01007 	mov	r1, r7
   30218:	ebffe8ff 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   3021c:	e5856014 	str	r6, [r5, #20]
   30220:	eaffffc8 	b	30148 <CUSBCDCEthernetDevice::Configure()+0xf4>
   30224:	e59f1050 	ldr	r1, [pc, #80]	; 3027c <CUSBCDCEthernetDevice::Configure()+0x228>
   30228:	ebfff9e7 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   3022c:	e3a04000 	mov	r4, #0
   30230:	eaffffd8 	b	30198 <CUSBCDCEthernetDevice::Configure()+0x144>
   30234:	e5953010 	ldr	r3, [r5, #16]
   30238:	e1a00005 	mov	r0, r5
   3023c:	e3530000 	cmp	r3, #0
   30240:	1afffff7 	bne	30224 <CUSBCDCEthernetDevice::Configure()+0x1d0>
   30244:	ebfff96a 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   30248:	e1a07000 	mov	r7, r0
   3024c:	e3a00018 	mov	r0, #24
   30250:	eb001030 	bl	34318 <operator new(unsigned int)>
   30254:	e1a06000 	mov	r6, r0
   30258:	e1a02004 	mov	r2, r4
   3025c:	e1a01007 	mov	r1, r7
   30260:	ebffe8ed 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   30264:	e5856010 	str	r6, [r5, #16]
   30268:	eaffffb6 	b	30148 <CUSBCDCEthernetDevice::Configure()+0xf4>
   3026c:	e1a00005 	mov	r0, r5
   30270:	eb00055e 	bl	317f0 <CNetDevice::AddNetDevice()>
   30274:	e3a04001 	mov	r4, #1
   30278:	eaffffc6 	b	30198 <CUSBCDCEthernetDevice::Configure()+0x144>
   3027c:	0004bad4 	.word	0x0004bad4
   30280:	0004bb7c 	.word	0x0004bb7c
   30284:	0004b008 	.word	0x0004b008
   30288:	0004bb64 	.word	0x0004bb64

0003028c <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)>:
   3028c:	e3a03000 	mov	r3, #0
   30290:	e92d4070 	push	{r4, r5, r6, lr}
   30294:	e1a05002 	mov	r5, r2
   30298:	e1510003 	cmp	r1, r3
   3029c:	e0812002 	add	r2, r1, r2
   302a0:	e5803008 	str	r3, [r0, #8]
   302a4:	e5803014 	str	r3, [r0, #20]
   302a8:	e1a04000 	mov	r4, r0
   302ac:	e8800022 	stm	r0, {r1, r5}
   302b0:	e5801010 	str	r1, [r0, #16]
   302b4:	e5801018 	str	r1, [r0, #24]
   302b8:	e580200c 	str	r2, [r0, #12]
   302bc:	11a03005 	movne	r3, r5
   302c0:	0a000031 	beq	3038c <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x100>
   302c4:	e2433004 	sub	r3, r3, #4
   302c8:	e3530f7f 	cmp	r3, #508	; 0x1fc
   302cc:	8a000003 	bhi	302e0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x54>
   302d0:	e5943000 	ldr	r3, [r4]
   302d4:	e5d32000 	ldrb	r2, [r3]
   302d8:	e3520009 	cmp	r2, #9
   302dc:	0a000001 	beq	302e8 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x5c>
   302e0:	e1a00004 	mov	r0, r4
   302e4:	e8bd8070 	pop	{r4, r5, r6, pc}
   302e8:	e5d32001 	ldrb	r2, [r3, #1]
   302ec:	e3520002 	cmp	r2, #2
   302f0:	1afffffa 	bne	302e0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x54>
   302f4:	e5d30002 	ldrb	r0, [r3, #2]
   302f8:	e5d32003 	ldrb	r2, [r3, #3]
   302fc:	e1800402 	orr	r0, r0, r2, lsl #8
   30300:	e1550000 	cmp	r5, r0
   30304:	3afffff5 	bcc	302e0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x54>
   30308:	e3a05000 	mov	r5, #0
   3030c:	80830000 	addhi	r0, r3, r0
   30310:	9594000c 	ldrls	r0, [r4, #12]
   30314:	8584000c 	strhi	r0, [r4, #12]
   30318:	e1a0e005 	mov	lr, r5
   3031c:	ea000005 	b	30338 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xac>
   30320:	e3520005 	cmp	r2, #5
   30324:	0a000022 	beq	303b4 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x128>
   30328:	e3520002 	cmp	r2, #2
   3032c:	0a00001c 	beq	303a4 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x118>
   30330:	e1a03001 	mov	r3, r1
   30334:	e1a0e002 	mov	lr, r2
   30338:	e2832002 	add	r2, r3, #2
   3033c:	e1500002 	cmp	r0, r2
   30340:	9a000021 	bls	303cc <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x140>
   30344:	e5d3c000 	ldrb	ip, [r3]
   30348:	e5d32001 	ldrb	r2, [r3, #1]
   3034c:	e083100c 	add	r1, r3, ip
   30350:	e1510000 	cmp	r1, r0
   30354:	8a00000a 	bhi	30384 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf8>
   30358:	e3520004 	cmp	r2, #4
   3035c:	1affffef 	bne	30320 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x94>
   30360:	e35e0000 	cmp	lr, #0
   30364:	0a000006 	beq	30384 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf8>
   30368:	e5d35005 	ldrb	r5, [r3, #5]
   3036c:	e3a0e009 	mov	lr, #9
   30370:	e2455001 	sub	r5, r5, #1
   30374:	e16f5f15 	clz	r5, r5
   30378:	e1a052a5 	lsr	r5, r5, #5
   3037c:	e15c000e 	cmp	ip, lr
   30380:	0affffea 	beq	30330 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xa4>
   30384:	e5843018 	str	r3, [r4, #24]
   30388:	eaffffd4 	b	302e0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x54>
   3038c:	e3a02024 	mov	r2, #36	; 0x24
   30390:	e59f1048 	ldr	r1, [pc, #72]	; 303e0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x154>
   30394:	e59f0048 	ldr	r0, [pc, #72]	; 303e4 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x158>
   30398:	eb001af8 	bl	36f80 <assertion_failed>
   3039c:	e5943004 	ldr	r3, [r4, #4]
   303a0:	eaffffc7 	b	302c4 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x38>
   303a4:	e35e0000 	cmp	lr, #0
   303a8:	1afffff5 	bne	30384 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf8>
   303ac:	e3a0e009 	mov	lr, #9
   303b0:	eafffff1 	b	3037c <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf0>
   303b4:	e31e00fd 	tst	lr, #253	; 0xfd
   303b8:	0afffff1 	beq	30384 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf8>
   303bc:	e3550000 	cmp	r5, #0
   303c0:	03a0e007 	moveq	lr, #7
   303c4:	13a0e009 	movne	lr, #9
   303c8:	eaffffeb 	b	3037c <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf0>
   303cc:	e1530000 	cmp	r3, r0
   303d0:	1affffeb 	bne	30384 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf8>
   303d4:	e3a03001 	mov	r3, #1
   303d8:	e5843008 	str	r3, [r4, #8]
   303dc:	eaffffbf 	b	302e0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x54>
   303e0:	0004bb90 	.word	0x0004bb90
   303e4:	0004bba4 	.word	0x0004bba4

000303e8 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)>:
   303e8:	e92d4070 	push	{r4, r5, r6, lr}
   303ec:	e2515000 	subs	r5, r1, #0
   303f0:	e1a04000 	mov	r4, r0
   303f4:	0a00000b 	beq	30428 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)+0x40>
   303f8:	e1c520d0 	ldrd	r2, [r5]
   303fc:	e595000c 	ldr	r0, [r5, #12]
   30400:	e595c008 	ldr	ip, [r5, #8]
   30404:	e5951010 	ldr	r1, [r5, #16]
   30408:	e5842000 	str	r2, [r4]
   3040c:	e5843004 	str	r3, [r4, #4]
   30410:	e1c521d4 	ldrd	r2, [r5, #20]
   30414:	e1c400fc 	strd	r0, [r4, #12]
   30418:	e584c008 	str	ip, [r4, #8]
   3041c:	e1c421f4 	strd	r2, [r4, #20]
   30420:	e1a00004 	mov	r0, r4
   30424:	e8bd8070 	pop	{r4, r5, r6, pc}
   30428:	e3a02082 	mov	r2, #130	; 0x82
   3042c:	e59f1008 	ldr	r1, [pc, #8]	; 3043c <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)+0x54>
   30430:	e59f0008 	ldr	r0, [pc, #8]	; 30440 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)+0x58>
   30434:	eb001ad1 	bl	36f80 <assertion_failed>
   30438:	eaffffee 	b	303f8 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)+0x10>
   3043c:	0004bb90 	.word	0x0004bb90
   30440:	0004bbb4 	.word	0x0004bbb4

00030444 <CUSBConfigurationParser::~CUSBConfigurationParser()>:
   30444:	e12fff1e 	bx	lr

00030448 <CUSBConfigurationParser::IsValid() const>:
   30448:	e5900008 	ldr	r0, [r0, #8]
   3044c:	e12fff1e 	bx	lr

00030450 <CUSBConfigurationParser::GetDescriptor(unsigned char)>:
   30450:	e5903008 	ldr	r3, [r0, #8]
   30454:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30458:	e3530000 	cmp	r3, #0
   3045c:	e1a06000 	mov	r6, r0
   30460:	e1a07001 	mov	r7, r1
   30464:	0a000021 	beq	304f0 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0xa0>
   30468:	e5964010 	ldr	r4, [r6, #16]
   3046c:	e596300c 	ldr	r3, [r6, #12]
   30470:	e1540003 	cmp	r4, r3
   30474:	2a00001a 	bcs	304e4 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x94>
   30478:	e247a005 	sub	sl, r7, #5
   3047c:	e16faf1a 	clz	sl, sl
   30480:	e59f9094 	ldr	r9, [pc, #148]	; 3051c <CUSBConfigurationParser::GetDescriptor(unsigned char)+0xcc>
   30484:	e1a0a2aa 	lsr	sl, sl, #5
   30488:	e59f8090 	ldr	r8, [pc, #144]	; 30520 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0xd0>
   3048c:	ea00000a 	b	304bc <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x6c>
   30490:	e3550004 	cmp	r5, #4
   30494:	13a03000 	movne	r3, #0
   30498:	020a3001 	andeq	r3, sl, #1
   3049c:	e3530000 	cmp	r3, #0
   304a0:	1a00000f 	bne	304e4 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x94>
   304a4:	e1550007 	cmp	r5, r7
   304a8:	0a000015 	beq	30504 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0xb4>
   304ac:	e596300c 	ldr	r3, [r6, #12]
   304b0:	e5864010 	str	r4, [r6, #16]
   304b4:	e1530004 	cmp	r3, r4
   304b8:	9a000009 	bls	304e4 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x94>
   304bc:	e5d42000 	ldrb	r2, [r4]
   304c0:	e5d45001 	ldrb	r5, [r4, #1]
   304c4:	e0844002 	add	r4, r4, r2
   304c8:	e1530004 	cmp	r3, r4
   304cc:	2affffef 	bcs	30490 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x40>
   304d0:	e3a020a9 	mov	r2, #169	; 0xa9
   304d4:	e1a01009 	mov	r1, r9
   304d8:	e1a00008 	mov	r0, r8
   304dc:	eb001aa7 	bl	36f80 <assertion_failed>
   304e0:	eaffffea 	b	30490 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x40>
   304e4:	e3a00000 	mov	r0, #0
   304e8:	e5860014 	str	r0, [r6, #20]
   304ec:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   304f0:	e3a0209f 	mov	r2, #159	; 0x9f
   304f4:	e59f1020 	ldr	r1, [pc, #32]	; 3051c <CUSBConfigurationParser::GetDescriptor(unsigned char)+0xcc>
   304f8:	e59f0024 	ldr	r0, [pc, #36]	; 30524 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0xd4>
   304fc:	eb001a9f 	bl	36f80 <assertion_failed>
   30500:	eaffffd8 	b	30468 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x18>
   30504:	e5960010 	ldr	r0, [r6, #16]
   30508:	e5864010 	str	r4, [r6, #16]
   3050c:	e3500000 	cmp	r0, #0
   30510:	15860018 	strne	r0, [r6, #24]
   30514:	e5860014 	str	r0, [r6, #20]
   30518:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3051c:	0004bb90 	.word	0x0004bb90
   30520:	0004bbc4 	.word	0x0004bbc4
   30524:	0004a620 	.word	0x0004a620

00030528 <CUSBConfigurationParser::GetCurrentDescriptor()>:
   30528:	e5903008 	ldr	r3, [r0, #8]
   3052c:	e92d4010 	push	{r4, lr}
   30530:	e3530000 	cmp	r3, #0
   30534:	e1a04000 	mov	r4, r0
   30538:	0a000008 	beq	30560 <CUSBConfigurationParser::GetCurrentDescriptor()+0x38>
   3053c:	e5940014 	ldr	r0, [r4, #20]
   30540:	e3500000 	cmp	r0, #0
   30544:	18bd8010 	popne	{r4, pc}
   30548:	e3a020c8 	mov	r2, #200	; 0xc8
   3054c:	e59f1020 	ldr	r1, [pc, #32]	; 30574 <CUSBConfigurationParser::GetCurrentDescriptor()+0x4c>
   30550:	e59f0020 	ldr	r0, [pc, #32]	; 30578 <CUSBConfigurationParser::GetCurrentDescriptor()+0x50>
   30554:	eb001a89 	bl	36f80 <assertion_failed>
   30558:	e5940014 	ldr	r0, [r4, #20]
   3055c:	e8bd8010 	pop	{r4, pc}
   30560:	e3a020c7 	mov	r2, #199	; 0xc7
   30564:	e59f1008 	ldr	r1, [pc, #8]	; 30574 <CUSBConfigurationParser::GetCurrentDescriptor()+0x4c>
   30568:	e59f000c 	ldr	r0, [pc, #12]	; 3057c <CUSBConfigurationParser::GetCurrentDescriptor()+0x54>
   3056c:	eb001a83 	bl	36f80 <assertion_failed>
   30570:	eafffff1 	b	3053c <CUSBConfigurationParser::GetCurrentDescriptor()+0x14>
   30574:	0004bb90 	.word	0x0004bb90
   30578:	0004bbe0 	.word	0x0004bbe0
   3057c:	0004a620 	.word	0x0004a620

00030580 <CUSBConfigurationParser::Error(char const*) const>:
   30580:	e92d4030 	push	{r4, r5, lr}
   30584:	e2515000 	subs	r5, r1, #0
   30588:	e24dd00c 	sub	sp, sp, #12
   3058c:	e1a04000 	mov	r4, r0
   30590:	0a00000d 	beq	305cc <CUSBConfigurationParser::Error(char const*) const+0x4c>
   30594:	eb001bf5 	bl	37570 <CLogger::Get()>
   30598:	e5941000 	ldr	r1, [r4]
   3059c:	e5942018 	ldr	r2, [r4, #24]
   305a0:	e59f3038 	ldr	r3, [pc, #56]	; 305e0 <CUSBConfigurationParser::Error(char const*) const+0x60>
   305a4:	e0422001 	sub	r2, r2, r1
   305a8:	e58d2000 	str	r2, [sp]
   305ac:	e1a01005 	mov	r1, r5
   305b0:	e3a02001 	mov	r2, #1
   305b4:	eb001ccd 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   305b8:	e1c400d0 	ldrd	r0, [r4]
   305bc:	e1a02005 	mov	r2, r5
   305c0:	e28dd00c 	add	sp, sp, #12
   305c4:	e8bd4030 	pop	{r4, r5, lr}
   305c8:	ea001aba 	b	370b8 <debug_hexdump(void const*, unsigned int, char const*)>
   305cc:	e3a020cf 	mov	r2, #207	; 0xcf
   305d0:	e59f100c 	ldr	r1, [pc, #12]	; 305e4 <CUSBConfigurationParser::Error(char const*) const+0x64>
   305d4:	e59f000c 	ldr	r0, [pc, #12]	; 305e8 <CUSBConfigurationParser::Error(char const*) const+0x68>
   305d8:	eb001a68 	bl	36f80 <assertion_failed>
   305dc:	eaffffec 	b	30594 <CUSBConfigurationParser::Error(char const*) const+0x14>
   305e0:	0004bbfc 	.word	0x0004bbfc
   305e4:	0004bb90 	.word	0x0004bb90
   305e8:	0004b7e4 	.word	0x0004b7e4

000305ec <CUSBString::CUSBString(CUSBDevice*)>:
   305ec:	e3a03000 	mov	r3, #0
   305f0:	e92d4070 	push	{r4, r5, r6, lr}
   305f4:	e880000a 	stm	r0, {r1, r3}
   305f8:	e1a04000 	mov	r4, r0
   305fc:	e3a00010 	mov	r0, #16
   30600:	eb000f44 	bl	34318 <operator new(unsigned int)>
   30604:	e1a05000 	mov	r5, r0
   30608:	eb001f71 	bl	383d4 <CString::CString()>
   3060c:	e5943000 	ldr	r3, [r4]
   30610:	e5845008 	str	r5, [r4, #8]
   30614:	e3530000 	cmp	r3, #0
   30618:	0a000001 	beq	30624 <CUSBString::CUSBString(CUSBDevice*)+0x38>
   3061c:	e1a00004 	mov	r0, r4
   30620:	e8bd8070 	pop	{r4, r5, r6, pc}
   30624:	e3a02023 	mov	r2, #35	; 0x23
   30628:	e59f1028 	ldr	r1, [pc, #40]	; 30658 <CUSBString::CUSBString(CUSBDevice*)+0x6c>
   3062c:	e59f0028 	ldr	r0, [pc, #40]	; 3065c <CUSBString::CUSBString(CUSBDevice*)+0x70>
   30630:	eb001a52 	bl	36f80 <assertion_failed>
   30634:	e5943008 	ldr	r3, [r4, #8]
   30638:	e3530000 	cmp	r3, #0
   3063c:	1afffff6 	bne	3061c <CUSBString::CUSBString(CUSBDevice*)+0x30>
   30640:	e3a02024 	mov	r2, #36	; 0x24
   30644:	e59f100c 	ldr	r1, [pc, #12]	; 30658 <CUSBString::CUSBString(CUSBDevice*)+0x6c>
   30648:	e59f0010 	ldr	r0, [pc, #16]	; 30660 <CUSBString::CUSBString(CUSBDevice*)+0x74>
   3064c:	eb001a4b 	bl	36f80 <assertion_failed>
   30650:	e1a00004 	mov	r0, r4
   30654:	e8bd8070 	pop	{r4, r5, r6, pc}
   30658:	0004bc2c 	.word	0x0004bc2c
   3065c:	0004a75c 	.word	0x0004a75c
   30660:	0004bc3c 	.word	0x0004bc3c

00030664 <CUSBString::CUSBString(CUSBString*)>:
   30664:	e3a03000 	mov	r3, #0
   30668:	e92d4070 	push	{r4, r5, r6, lr}
   3066c:	e5803004 	str	r3, [r0, #4]
   30670:	e1a04000 	mov	r4, r0
   30674:	e3a00010 	mov	r0, #16
   30678:	e1a05001 	mov	r5, r1
   3067c:	eb000f25 	bl	34318 <operator new(unsigned int)>
   30680:	e1a06000 	mov	r6, r0
   30684:	eb001f52 	bl	383d4 <CString::CString()>
   30688:	e3550000 	cmp	r5, #0
   3068c:	e5846008 	str	r6, [r4, #8]
   30690:	0a000018 	beq	306f8 <CUSBString::CUSBString(CUSBString*)+0x94>
   30694:	e1c520d0 	ldrd	r2, [r5]
   30698:	e3530000 	cmp	r3, #0
   3069c:	e5842000 	str	r2, [r4]
   306a0:	0a000005 	beq	306bc <CUSBString::CUSBString(CUSBString*)+0x58>
   306a4:	e5d30000 	ldrb	r0, [r3]
   306a8:	eb000f1b 	bl	3431c <operator new[](unsigned int)>
   306ac:	e5840004 	str	r0, [r4, #4]
   306b0:	e5951004 	ldr	r1, [r5, #4]
   306b4:	e5d12000 	ldrb	r2, [r1]
   306b8:	eb0013c6 	bl	355d8 <memcpy>
   306bc:	e5943008 	ldr	r3, [r4, #8]
   306c0:	e3530000 	cmp	r3, #0
   306c4:	0a000010 	beq	3070c <CUSBString::CUSBString(CUSBString*)+0xa8>
   306c8:	e5953008 	ldr	r3, [r5, #8]
   306cc:	e3530000 	cmp	r3, #0
   306d0:	0a000002 	beq	306e0 <CUSBString::CUSBString(CUSBString*)+0x7c>
   306d4:	e5843008 	str	r3, [r4, #8]
   306d8:	e1a00004 	mov	r0, r4
   306dc:	e8bd8070 	pop	{r4, r5, r6, pc}
   306e0:	e3a02036 	mov	r2, #54	; 0x36
   306e4:	e59f1034 	ldr	r1, [pc, #52]	; 30720 <CUSBString::CUSBString(CUSBString*)+0xbc>
   306e8:	e59f0034 	ldr	r0, [pc, #52]	; 30724 <CUSBString::CUSBString(CUSBString*)+0xc0>
   306ec:	eb001a23 	bl	36f80 <assertion_failed>
   306f0:	e5953008 	ldr	r3, [r5, #8]
   306f4:	eafffff6 	b	306d4 <CUSBString::CUSBString(CUSBString*)+0x70>
   306f8:	e3a0202b 	mov	r2, #43	; 0x2b
   306fc:	e59f101c 	ldr	r1, [pc, #28]	; 30720 <CUSBString::CUSBString(CUSBString*)+0xbc>
   30700:	e59f0020 	ldr	r0, [pc, #32]	; 30728 <CUSBString::CUSBString(CUSBString*)+0xc4>
   30704:	eb001a1d 	bl	36f80 <assertion_failed>
   30708:	eaffffe1 	b	30694 <CUSBString::CUSBString(CUSBString*)+0x30>
   3070c:	e3a02035 	mov	r2, #53	; 0x35
   30710:	e59f1008 	ldr	r1, [pc, #8]	; 30720 <CUSBString::CUSBString(CUSBString*)+0xbc>
   30714:	e59f0010 	ldr	r0, [pc, #16]	; 3072c <CUSBString::CUSBString(CUSBString*)+0xc8>
   30718:	eb001a18 	bl	36f80 <assertion_failed>
   3071c:	eaffffe9 	b	306c8 <CUSBString::CUSBString(CUSBString*)+0x64>
   30720:	0004bc2c 	.word	0x0004bc2c
   30724:	0004bc4c 	.word	0x0004bc4c
   30728:	0004ad54 	.word	0x0004ad54
   3072c:	0004bc3c 	.word	0x0004bc3c

00030730 <CUSBString::~CUSBString()>:
   30730:	e92d4010 	push	{r4, lr}
   30734:	e1a04000 	mov	r4, r0
   30738:	e5900008 	ldr	r0, [r0, #8]
   3073c:	e3500000 	cmp	r0, #0
   30740:	0a000002 	beq	30750 <CUSBString::~CUSBString()+0x20>
   30744:	e5903000 	ldr	r3, [r0]
   30748:	e5933004 	ldr	r3, [r3, #4]
   3074c:	e12fff33 	blx	r3
   30750:	e3a03000 	mov	r3, #0
   30754:	e5940004 	ldr	r0, [r4, #4]
   30758:	e5843008 	str	r3, [r4, #8]
   3075c:	e1500003 	cmp	r0, r3
   30760:	0a000000 	beq	30768 <CUSBString::~CUSBString()+0x38>
   30764:	eb000eee 	bl	34324 <operator delete[](void*)>
   30768:	e1a00004 	mov	r0, r4
   3076c:	e8bd8010 	pop	{r4, pc}

00030770 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)>:
   30770:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30774:	e2516000 	subs	r6, r1, #0
   30778:	e28db020 	add	fp, sp, #32
   3077c:	e24dd014 	sub	sp, sp, #20
   30780:	e1a04000 	mov	r4, r0
   30784:	e1a07002 	mov	r7, r2
   30788:	0a000027 	beq	3082c <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xbc>
   3078c:	e5940004 	ldr	r0, [r4, #4]
   30790:	e3500000 	cmp	r0, #0
   30794:	0a000000 	beq	3079c <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x2c>
   30798:	eb000ee1 	bl	34324 <operator delete[](void*)>
   3079c:	e3a00004 	mov	r0, #4
   307a0:	eb000edd 	bl	3431c <operator new[](unsigned int)>
   307a4:	e5943000 	ldr	r3, [r4]
   307a8:	e5840004 	str	r0, [r4, #4]
   307ac:	e3530000 	cmp	r3, #0
   307b0:	0a00004f 	beq	308f4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x184>
   307b4:	e1a00003 	mov	r0, r3
   307b8:	ebffe4fa 	bl	29ba8 <CUSBDevice::GetHost() const>
   307bc:	e1a05000 	mov	r5, r0
   307c0:	e5940000 	ldr	r0, [r4]
   307c4:	ebffe4e7 	bl	29b68 <CUSBDevice::GetEndpoint0() const>
   307c8:	e3a08080 	mov	r8, #128	; 0x80
   307cc:	e3a02004 	mov	r2, #4
   307d0:	e5943004 	ldr	r3, [r4, #4]
   307d4:	e1a01000 	mov	r1, r0
   307d8:	e98d0104 	stmib	sp, {r2, r8}
   307dc:	e58d3000 	str	r3, [sp]
   307e0:	e58d700c 	str	r7, [sp, #12]
   307e4:	e1a00005 	mov	r0, r5
   307e8:	e1a03006 	mov	r3, r6
   307ec:	e3a02003 	mov	r2, #3
   307f0:	ebffe8cd 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   307f4:	e3500000 	cmp	r0, #0
   307f8:	ba000008 	blt	30820 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xb0>
   307fc:	e5940004 	ldr	r0, [r4, #4]
   30800:	e5d05000 	ldrb	r5, [r0]
   30804:	e3550001 	cmp	r5, #1
   30808:	9a000004 	bls	30820 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xb0>
   3080c:	e3150001 	tst	r5, #1
   30810:	1a000002 	bne	30820 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xb0>
   30814:	e5d09001 	ldrb	r9, [r0, #1]
   30818:	e3590003 	cmp	r9, #3
   3081c:	0a000007 	beq	30840 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xd0>
   30820:	e3a00000 	mov	r0, #0
   30824:	e24bd020 	sub	sp, fp, #32
   30828:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3082c:	e3a02047 	mov	r2, #71	; 0x47
   30830:	e59f11ac 	ldr	r1, [pc, #428]	; 309e4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x274>
   30834:	e59f01ac 	ldr	r0, [pc, #428]	; 309e8 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x278>
   30838:	eb0019d0 	bl	36f80 <assertion_failed>
   3083c:	eaffffd2 	b	3078c <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x1c>
   30840:	e3550004 	cmp	r5, #4
   30844:	e1a03005 	mov	r3, r5
   30848:	8a000048 	bhi	30970 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x200>
   3084c:	e3550002 	cmp	r5, #2
   30850:	0a000037 	beq	30934 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x1c4>
   30854:	e2435002 	sub	r5, r3, #2
   30858:	e0855fa5 	add	r5, r5, r5, lsr #31
   3085c:	e1a060c5 	asr	r6, r5, #1
   30860:	e356007e 	cmp	r6, #126	; 0x7e
   30864:	8a000028 	bhi	3090c <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x19c>
   30868:	e2863008 	add	r3, r6, #8
   3086c:	e3c33007 	bic	r3, r3, #7
   30870:	e04dd003 	sub	sp, sp, r3
   30874:	e3560000 	cmp	r6, #0
   30878:	e28d7010 	add	r7, sp, #16
   3087c:	0a00000c 	beq	308b4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x144>
   30880:	e3a02000 	mov	r2, #0
   30884:	e247e001 	sub	lr, r7, #1
   30888:	e080c082 	add	ip, r0, r2, lsl #1
   3088c:	e5dc1003 	ldrb	r1, [ip, #3]
   30890:	e5dc3002 	ldrb	r3, [ip, #2]
   30894:	e2822001 	add	r2, r2, #1
   30898:	e1833401 	orr	r3, r3, r1, lsl #8
   3089c:	e2431020 	sub	r1, r3, #32
   308a0:	e351005e 	cmp	r1, #94	; 0x5e
   308a4:	83a0305f 	movhi	r3, #95	; 0x5f
   308a8:	e1560002 	cmp	r6, r2
   308ac:	e5ee3001 	strb	r3, [lr, #1]!
   308b0:	1afffff4 	bne	30888 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x118>
   308b4:	e3a03000 	mov	r3, #0
   308b8:	e5940008 	ldr	r0, [r4, #8]
   308bc:	e7c730c5 	strb	r3, [r7, r5, asr #1]
   308c0:	e1500003 	cmp	r0, r3
   308c4:	0a000002 	beq	308d4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x164>
   308c8:	e5903000 	ldr	r3, [r0]
   308cc:	e5933004 	ldr	r3, [r3, #4]
   308d0:	e12fff33 	blx	r3
   308d4:	e3a00010 	mov	r0, #16
   308d8:	eb000e8e 	bl	34318 <operator new(unsigned int)>
   308dc:	e1a05000 	mov	r5, r0
   308e0:	e1a01007 	mov	r1, r7
   308e4:	eb001ec0 	bl	383ec <CString::CString(char const*)>
   308e8:	e5845008 	str	r5, [r4, #8]
   308ec:	e3a00001 	mov	r0, #1
   308f0:	eaffffcb 	b	30824 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xb4>
   308f4:	e3a0204d 	mov	r2, #77	; 0x4d
   308f8:	e59f10e4 	ldr	r1, [pc, #228]	; 309e4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x274>
   308fc:	e59f00e8 	ldr	r0, [pc, #232]	; 309ec <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x27c>
   30900:	eb00199e 	bl	36f80 <assertion_failed>
   30904:	e5943000 	ldr	r3, [r4]
   30908:	eaffffa9 	b	307b4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x44>
   3090c:	e59f00dc 	ldr	r0, [pc, #220]	; 309f0 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x280>
   30910:	e3a02079 	mov	r2, #121	; 0x79
   30914:	e59f10c8 	ldr	r1, [pc, #200]	; 309e4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x274>
   30918:	eb001998 	bl	36f80 <assertion_failed>
   3091c:	e2863008 	add	r3, r6, #8
   30920:	e3c33007 	bic	r3, r3, #7
   30924:	e04dd003 	sub	sp, sp, r3
   30928:	e28d7010 	add	r7, sp, #16
   3092c:	e5940004 	ldr	r0, [r4, #4]
   30930:	eaffffd2 	b	30880 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x110>
   30934:	e59f00b8 	ldr	r0, [pc, #184]	; 309f4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x284>
   30938:	e3a02075 	mov	r2, #117	; 0x75
   3093c:	e59f10a0 	ldr	r1, [pc, #160]	; 309e4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x274>
   30940:	eb00198e 	bl	36f80 <assertion_failed>
   30944:	e5940004 	ldr	r0, [r4, #4]
   30948:	e5d03000 	ldrb	r3, [r0]
   3094c:	e3130001 	tst	r3, #1
   30950:	0affffbf 	beq	30854 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xe4>
   30954:	e59f009c 	ldr	r0, [pc, #156]	; 309f8 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x288>
   30958:	e3a02076 	mov	r2, #118	; 0x76
   3095c:	e59f1080 	ldr	r1, [pc, #128]	; 309e4 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x274>
   30960:	eb001986 	bl	36f80 <assertion_failed>
   30964:	e5940004 	ldr	r0, [r4, #4]
   30968:	e5d03000 	ldrb	r3, [r0]
   3096c:	eaffffb8 	b	30854 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xe4>
   30970:	e3a01002 	mov	r1, #2
   30974:	eb000e6b 	bl	34328 <operator delete(void*, unsigned int)>
   30978:	e1a00005 	mov	r0, r5
   3097c:	eb000e66 	bl	3431c <operator new[](unsigned int)>
   30980:	e5840004 	str	r0, [r4, #4]
   30984:	e5940000 	ldr	r0, [r4]
   30988:	ebffe486 	bl	29ba8 <CUSBDevice::GetHost() const>
   3098c:	e1a0a000 	mov	sl, r0
   30990:	e5940000 	ldr	r0, [r4]
   30994:	ebffe473 	bl	29b68 <CUSBDevice::GetEndpoint0() const>
   30998:	e594c004 	ldr	ip, [r4, #4]
   3099c:	e1a01000 	mov	r1, r0
   309a0:	e58d700c 	str	r7, [sp, #12]
   309a4:	e1a0000a 	mov	r0, sl
   309a8:	e98d0120 	stmib	sp, {r5, r8}
   309ac:	e1a03006 	mov	r3, r6
   309b0:	e1a02009 	mov	r2, r9
   309b4:	e58dc000 	str	ip, [sp]
   309b8:	ebffe85b 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   309bc:	e1550000 	cmp	r5, r0
   309c0:	1affff96 	bne	30820 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xb0>
   309c4:	e5940004 	ldr	r0, [r4, #4]
   309c8:	e5d03000 	ldrb	r3, [r0]
   309cc:	e1530005 	cmp	r3, r5
   309d0:	1affff92 	bne	30820 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xb0>
   309d4:	e5d03001 	ldrb	r3, [r0, #1]
   309d8:	e3530003 	cmp	r3, #3
   309dc:	1affff8f 	bne	30820 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xb0>
   309e0:	eaffffd8 	b	30948 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x1d8>
   309e4:	0004bc2c 	.word	0x0004bc2c
   309e8:	0004bc64 	.word	0x0004bc64
   309ec:	0004a75c 	.word	0x0004a75c
   309f0:	0004bcb0 	.word	0x0004bcb0
   309f4:	0004bc70 	.word	0x0004bc70
   309f8:	0004bc8c 	.word	0x0004bc8c

000309fc <CUSBString::Get() const>:
   309fc:	e5900008 	ldr	r0, [r0, #8]
   30a00:	ea001e89 	b	3842c <CString::operator char const*() const>

00030a04 <CUSBString::GetLanguageID()>:
   30a04:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30a08:	e1a06000 	mov	r6, r0
   30a0c:	e24dd010 	sub	sp, sp, #16
   30a10:	e3a00004 	mov	r0, #4
   30a14:	eb000e40 	bl	3431c <operator new[](unsigned int)>
   30a18:	e1a04000 	mov	r4, r0
   30a1c:	e5960000 	ldr	r0, [r6]
   30a20:	e3500000 	cmp	r0, #0
   30a24:	0a00004d 	beq	30b60 <CUSBString::GetLanguageID()+0x15c>
   30a28:	ebffe45e 	bl	29ba8 <CUSBDevice::GetHost() const>
   30a2c:	e1a05000 	mov	r5, r0
   30a30:	e5960000 	ldr	r0, [r6]
   30a34:	ebffe44b 	bl	29b68 <CUSBDevice::GetEndpoint0() const>
   30a38:	e3a07080 	mov	r7, #128	; 0x80
   30a3c:	e3a03000 	mov	r3, #0
   30a40:	e3a02004 	mov	r2, #4
   30a44:	e1a01000 	mov	r1, r0
   30a48:	e98d0084 	stmib	sp, {r2, r7}
   30a4c:	e58d4000 	str	r4, [sp]
   30a50:	e1a00005 	mov	r0, r5
   30a54:	e58d300c 	str	r3, [sp, #12]
   30a58:	e3a02003 	mov	r2, #3
   30a5c:	ebffe832 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   30a60:	e3500000 	cmp	r0, #0
   30a64:	ba000037 	blt	30b48 <CUSBString::GetLanguageID()+0x144>
   30a68:	e5d45000 	ldrb	r5, [r4]
   30a6c:	e3550003 	cmp	r5, #3
   30a70:	9a000034 	bls	30b48 <CUSBString::GetLanguageID()+0x144>
   30a74:	e2159001 	ands	r9, r5, #1
   30a78:	1a000032 	bne	30b48 <CUSBString::GetLanguageID()+0x144>
   30a7c:	e5d48001 	ldrb	r8, [r4, #1]
   30a80:	e3580003 	cmp	r8, #3
   30a84:	1a00002f 	bne	30b48 <CUSBString::GetLanguageID()+0x144>
   30a88:	e3550004 	cmp	r5, #4
   30a8c:	1a000016 	bne	30aec <CUSBString::GetLanguageID()+0xe8>
   30a90:	e3a0c001 	mov	ip, #1
   30a94:	e5d45002 	ldrb	r5, [r4, #2]
   30a98:	e5d43003 	ldrb	r3, [r4, #3]
   30a9c:	e1855403 	orr	r5, r5, r3, lsl #8
   30aa0:	e59f00fc 	ldr	r0, [pc, #252]	; 30ba4 <CUSBString::GetLanguageID()+0x1a0>
   30aa4:	e1550000 	cmp	r5, r0
   30aa8:	0a000026 	beq	30b48 <CUSBString::GetLanguageID()+0x144>
   30aac:	e3a03000 	mov	r3, #0
   30ab0:	ea000004 	b	30ac8 <CUSBString::GetLanguageID()+0xc4>
   30ab4:	e5d12002 	ldrb	r2, [r1, #2]
   30ab8:	e5d11003 	ldrb	r1, [r1, #3]
   30abc:	e1822401 	orr	r2, r2, r1, lsl #8
   30ac0:	e1520000 	cmp	r2, r0
   30ac4:	0a00001f 	beq	30b48 <CUSBString::GetLanguageID()+0x144>
   30ac8:	e2833001 	add	r3, r3, #1
   30acc:	e153000c 	cmp	r3, ip
   30ad0:	e0841083 	add	r1, r4, r3, lsl #1
   30ad4:	1afffff6 	bne	30ab4 <CUSBString::GetLanguageID()+0xb0>
   30ad8:	e1a00004 	mov	r0, r4
   30adc:	eb000e10 	bl	34324 <operator delete[](void*)>
   30ae0:	e1a00005 	mov	r0, r5
   30ae4:	e28dd010 	add	sp, sp, #16
   30ae8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30aec:	e1a00004 	mov	r0, r4
   30af0:	eb000e0b 	bl	34324 <operator delete[](void*)>
   30af4:	e1a00005 	mov	r0, r5
   30af8:	eb000e07 	bl	3431c <operator new[](unsigned int)>
   30afc:	e1a04000 	mov	r4, r0
   30b00:	e5960000 	ldr	r0, [r6]
   30b04:	ebffe427 	bl	29ba8 <CUSBDevice::GetHost() const>
   30b08:	e1a0a000 	mov	sl, r0
   30b0c:	e5960000 	ldr	r0, [r6]
   30b10:	ebffe414 	bl	29b68 <CUSBDevice::GetEndpoint0() const>
   30b14:	e58d4000 	str	r4, [sp]
   30b18:	e1a01000 	mov	r1, r0
   30b1c:	e58d900c 	str	r9, [sp, #12]
   30b20:	e1a0000a 	mov	r0, sl
   30b24:	e98d00a0 	stmib	sp, {r5, r7}
   30b28:	e1a03009 	mov	r3, r9
   30b2c:	e1a02008 	mov	r2, r8
   30b30:	ebffe7fd 	bl	2ab2c <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   30b34:	e1550000 	cmp	r5, r0
   30b38:	1a000002 	bne	30b48 <CUSBString::GetLanguageID()+0x144>
   30b3c:	e5d43000 	ldrb	r3, [r4]
   30b40:	e1530005 	cmp	r3, r5
   30b44:	0a00000b 	beq	30b78 <CUSBString::GetLanguageID()+0x174>
   30b48:	e59f5054 	ldr	r5, [pc, #84]	; 30ba4 <CUSBString::GetLanguageID()+0x1a0>
   30b4c:	e1a00004 	mov	r0, r4
   30b50:	eb000df3 	bl	34324 <operator delete[](void*)>
   30b54:	e1a00005 	mov	r0, r5
   30b58:	e28dd010 	add	sp, sp, #16
   30b5c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30b60:	e59f0040 	ldr	r0, [pc, #64]	; 30ba8 <CUSBString::GetLanguageID()+0x1a4>
   30b64:	e3a0209a 	mov	r2, #154	; 0x9a
   30b68:	e59f103c 	ldr	r1, [pc, #60]	; 30bac <CUSBString::GetLanguageID()+0x1a8>
   30b6c:	eb001903 	bl	36f80 <assertion_failed>
   30b70:	e5960000 	ldr	r0, [r6]
   30b74:	eaffffab 	b	30a28 <CUSBString::GetLanguageID()+0x24>
   30b78:	e5d42001 	ldrb	r2, [r4, #1]
   30b7c:	e3520003 	cmp	r2, #3
   30b80:	1afffff0 	bne	30b48 <CUSBString::GetLanguageID()+0x144>
   30b84:	e243c002 	sub	ip, r3, #2
   30b88:	e08ccfac 	add	ip, ip, ip, lsr #31
   30b8c:	e5d45002 	ldrb	r5, [r4, #2]
   30b90:	e5d43003 	ldrb	r3, [r4, #3]
   30b94:	e1b0c0cc 	asrs	ip, ip, #1
   30b98:	e1855403 	orr	r5, r5, r3, lsl #8
   30b9c:	0affffcd 	beq	30ad8 <CUSBString::GetLanguageID()+0xd4>
   30ba0:	eaffffbe 	b	30aa0 <CUSBString::GetLanguageID()+0x9c>
   30ba4:	00000409 	.word	0x00000409
   30ba8:	0004a75c 	.word	0x0004a75c
   30bac:	0004bc2c 	.word	0x0004bc2c

00030bb0 <CSMSC951xDevice::GetMACAddress() const>:
   30bb0:	e2800018 	add	r0, r0, #24
   30bb4:	e12fff1e 	bx	lr

00030bb8 <CSMSC951xDevice::~CSMSC951xDevice()>:
   30bb8:	e92d4070 	push	{r4, r5, r6, lr}
   30bbc:	e1a04000 	mov	r4, r0
   30bc0:	e59f307c 	ldr	r3, [pc, #124]	; 30c44 <CSMSC951xDevice::~CSMSC951xDevice()+0x8c>
   30bc4:	e5900024 	ldr	r0, [r0, #36]	; 0x24
   30bc8:	e3a01001 	mov	r1, #1
   30bcc:	e5843000 	str	r3, [r4]
   30bd0:	eb000dd4 	bl	34328 <operator delete(void*, unsigned int)>
   30bd4:	e3a03000 	mov	r3, #0
   30bd8:	e5945014 	ldr	r5, [r4, #20]
   30bdc:	e5843024 	str	r3, [r4, #36]	; 0x24
   30be0:	e1550003 	cmp	r5, r3
   30be4:	0a000004 	beq	30bfc <CSMSC951xDevice::~CSMSC951xDevice()+0x44>
   30be8:	e1a00005 	mov	r0, r5
   30bec:	ebffe719 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   30bf0:	e1a00005 	mov	r0, r5
   30bf4:	e3a01018 	mov	r1, #24
   30bf8:	eb000dca 	bl	34328 <operator delete(void*, unsigned int)>
   30bfc:	e3a03000 	mov	r3, #0
   30c00:	e5945010 	ldr	r5, [r4, #16]
   30c04:	e5843014 	str	r3, [r4, #20]
   30c08:	e1550003 	cmp	r5, r3
   30c0c:	0a000004 	beq	30c24 <CSMSC951xDevice::~CSMSC951xDevice()+0x6c>
   30c10:	e1a00005 	mov	r0, r5
   30c14:	ebffe70f 	bl	2a858 <CUSBEndpoint::~CUSBEndpoint()>
   30c18:	e1a00005 	mov	r0, r5
   30c1c:	e3a01018 	mov	r1, #24
   30c20:	eb000dc0 	bl	34328 <operator delete(void*, unsigned int)>
   30c24:	e3a03000 	mov	r3, #0
   30c28:	e2840018 	add	r0, r4, #24
   30c2c:	e5843010 	str	r3, [r4, #16]
   30c30:	eb000227 	bl	314d4 <CMACAddress::~CMACAddress()>
   30c34:	e1a00004 	mov	r0, r4
   30c38:	eb0002d9 	bl	317a4 <CNetDevice::~CNetDevice()>
   30c3c:	e1a00004 	mov	r0, r4
   30c40:	e8bd8070 	pop	{r4, r5, r6, pc}
   30c44:	0004bcd0 	.word	0x0004bcd0

00030c48 <CSMSC951xDevice::~CSMSC951xDevice()>:
   30c48:	e92d4010 	push	{r4, lr}
   30c4c:	e1a04000 	mov	r4, r0
   30c50:	ebffffd8 	bl	30bb8 <CSMSC951xDevice::~CSMSC951xDevice()>
   30c54:	e1a00004 	mov	r0, r4
   30c58:	e3a01028 	mov	r1, #40	; 0x28
   30c5c:	eb000db1 	bl	34328 <operator delete(void*, unsigned int)>
   30c60:	e1a00004 	mov	r0, r4
   30c64:	e8bd8010 	pop	{r4, pc}

00030c68 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)>:
   30c68:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   30c6c:	e5903010 	ldr	r3, [r0, #16]
   30c70:	e24dd034 	sub	sp, sp, #52	; 0x34
   30c74:	e3530000 	cmp	r3, #0
   30c78:	e1a05000 	mov	r5, r0
   30c7c:	e1a06001 	mov	r6, r1
   30c80:	e1a07002 	mov	r7, r2
   30c84:	0a000034 	beq	30d5c <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0xf4>
   30c88:	e3560000 	cmp	r6, #0
   30c8c:	0a000038 	beq	30d74 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x10c>
   30c90:	e3a04000 	mov	r4, #0
   30c94:	e5951010 	ldr	r1, [r5, #16]
   30c98:	e3a03d19 	mov	r3, #1600	; 0x640
   30c9c:	e1a02006 	mov	r2, r6
   30ca0:	e58d4000 	str	r4, [sp]
   30ca4:	e28d0008 	add	r0, sp, #8
   30ca8:	ebffe7eb 	bl	2ac5c <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   30cac:	e1a00005 	mov	r0, r5
   30cb0:	ebfff6f0 	bl	2e878 <CUSBFunction::GetHost() const>
   30cb4:	e5903000 	ldr	r3, [r0]
   30cb8:	e28d1008 	add	r1, sp, #8
   30cbc:	e5933008 	ldr	r3, [r3, #8]
   30cc0:	e12fff33 	blx	r3
   30cc4:	e1500004 	cmp	r0, r4
   30cc8:	1a000005 	bne	30ce4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x7c>
   30ccc:	e3a04000 	mov	r4, #0
   30cd0:	e28d0008 	add	r0, sp, #8
   30cd4:	ebffe805 	bl	2acf0 <CUSBRequest::~CUSBRequest()>
   30cd8:	e1a00004 	mov	r0, r4
   30cdc:	e28dd034 	add	sp, sp, #52	; 0x34
   30ce0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   30ce4:	e28d0008 	add	r0, sp, #8
   30ce8:	ebffe817 	bl	2ad4c <CUSBRequest::GetResultLength() const>
   30cec:	e3500003 	cmp	r0, #3
   30cf0:	9afffff5 	bls	30ccc <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x64>
   30cf4:	e5965000 	ldr	r5, [r6]
   30cf8:	e59f30cc 	ldr	r3, [pc, #204]	; 30dcc <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x164>
   30cfc:	e0033005 	and	r3, r3, r5
   30d00:	e3530000 	cmp	r3, #0
   30d04:	1a00001f 	bne	30d88 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x120>
   30d08:	e59f40c0 	ldr	r4, [pc, #192]	; 30dd0 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x168>
   30d0c:	e2400004 	sub	r0, r0, #4
   30d10:	e0045825 	and	r5, r4, r5, lsr #16
   30d14:	e1500005 	cmp	r0, r5
   30d18:	0a000003 	beq	30d2c <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0xc4>
   30d1c:	e3a02e13 	mov	r2, #304	; 0x130
   30d20:	e59f10ac 	ldr	r1, [pc, #172]	; 30dd4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x16c>
   30d24:	e59f00ac 	ldr	r0, [pc, #172]	; 30dd8 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x170>
   30d28:	eb001894 	bl	36f80 <assertion_failed>
   30d2c:	e3550004 	cmp	r5, #4
   30d30:	9a00001b 	bls	30da4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x13c>
   30d34:	e2455004 	sub	r5, r5, #4
   30d38:	e1a02005 	mov	r2, r5
   30d3c:	e2861004 	add	r1, r6, #4
   30d40:	e1a00006 	mov	r0, r6
   30d44:	eb001223 	bl	355d8 <memcpy>
   30d48:	e3570000 	cmp	r7, #0
   30d4c:	0a000019 	beq	30db8 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x150>
   30d50:	e3a04001 	mov	r4, #1
   30d54:	e5875000 	str	r5, [r7]
   30d58:	eaffffdc 	b	30cd0 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x68>
   30d5c:	e3a02f46 	mov	r2, #280	; 0x118
   30d60:	e59f106c 	ldr	r1, [pc, #108]	; 30dd4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x16c>
   30d64:	e59f0070 	ldr	r0, [pc, #112]	; 30ddc <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x174>
   30d68:	eb001884 	bl	36f80 <assertion_failed>
   30d6c:	e3560000 	cmp	r6, #0
   30d70:	1affffc6 	bne	30c90 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x28>
   30d74:	e59f2064 	ldr	r2, [pc, #100]	; 30de0 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x178>
   30d78:	e59f1054 	ldr	r1, [pc, #84]	; 30dd4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x16c>
   30d7c:	e59f0060 	ldr	r0, [pc, #96]	; 30de4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x17c>
   30d80:	eb00187e 	bl	36f80 <assertion_failed>
   30d84:	eaffffc1 	b	30c90 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x28>
   30d88:	eb0019f8 	bl	37570 <CLogger::Get()>
   30d8c:	e58d5000 	str	r5, [sp]
   30d90:	e59f3050 	ldr	r3, [pc, #80]	; 30de8 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x180>
   30d94:	e3a02002 	mov	r2, #2
   30d98:	e59f104c 	ldr	r1, [pc, #76]	; 30dec <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x184>
   30d9c:	eb001ad3 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   30da0:	eaffffca 	b	30cd0 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x68>
   30da4:	e59f2044 	ldr	r2, [pc, #68]	; 30df0 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x188>
   30da8:	e59f1024 	ldr	r1, [pc, #36]	; 30dd4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x16c>
   30dac:	e59f0040 	ldr	r0, [pc, #64]	; 30df4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x18c>
   30db0:	eb001872 	bl	36f80 <assertion_failed>
   30db4:	eaffffc4 	b	30ccc <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x64>
   30db8:	e3a02f4f 	mov	r2, #316	; 0x13c
   30dbc:	e59f1010 	ldr	r1, [pc, #16]	; 30dd4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x16c>
   30dc0:	e59f0030 	ldr	r0, [pc, #48]	; 30df8 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x190>
   30dc4:	eb00186d 	bl	36f80 <assertion_failed>
   30dc8:	eaffffe0 	b	30d50 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0xe8>
   30dcc:	400090de 	.word	0x400090de
   30dd0:	00003fff 	.word	0x00003fff
   30dd4:	0004bd04 	.word	0x0004bd04
   30dd8:	0004bd2c 	.word	0x0004bd2c
   30ddc:	0004bb28 	.word	0x0004bb28
   30de0:	00000119 	.word	0x00000119
   30de4:	0004b104 	.word	0x0004b104
   30de8:	0004bd14 	.word	0x0004bd14
   30dec:	0004bcf8 	.word	0x0004bcf8
   30df0:	00000131 	.word	0x00000131
   30df4:	0004bd4c 	.word	0x0004bd4c
   30df8:	0004bb40 	.word	0x0004bb40

00030dfc <CSMSC951xDevice::SendFrame(void const*, unsigned int)>:
   30dfc:	e59f30c4 	ldr	r3, [pc, #196]	; 30ec8 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xcc>
   30e00:	e1520003 	cmp	r2, r3
   30e04:	8a00001e 	bhi	30e84 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0x88>
   30e08:	e92d4070 	push	{r4, r5, r6, lr}
   30e0c:	e5903024 	ldr	r3, [r0, #36]	; 0x24
   30e10:	e1a06001 	mov	r6, r1
   30e14:	e3530000 	cmp	r3, #0
   30e18:	e1a04000 	mov	r4, r0
   30e1c:	e1a05002 	mov	r5, r2
   30e20:	0a00001e 	beq	30ea0 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xa4>
   30e24:	e3560000 	cmp	r6, #0
   30e28:	0a000021 	beq	30eb4 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xb8>
   30e2c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   30e30:	e1a02005 	mov	r2, r5
   30e34:	e1a01006 	mov	r1, r6
   30e38:	e2800008 	add	r0, r0, #8
   30e3c:	eb0011e5 	bl	355d8 <memcpy>
   30e40:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   30e44:	e3852a03 	orr	r2, r5, #12288	; 0x3000
   30e48:	e5832000 	str	r2, [r3]
   30e4c:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   30e50:	e5835004 	str	r5, [r3, #4]
   30e54:	e5943014 	ldr	r3, [r4, #20]
   30e58:	e3530000 	cmp	r3, #0
   30e5c:	0a00000a 	beq	30e8c <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0x90>
   30e60:	e1a00004 	mov	r0, r4
   30e64:	ebfff683 	bl	2e878 <CUSBFunction::GetHost() const>
   30e68:	e2853008 	add	r3, r5, #8
   30e6c:	e5942024 	ldr	r2, [r4, #36]	; 0x24
   30e70:	e5941014 	ldr	r1, [r4, #20]
   30e74:	ebffe760 	bl	2abfc <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int)>
   30e78:	e1e00000 	mvn	r0, r0
   30e7c:	e1a00fa0 	lsr	r0, r0, #31
   30e80:	e8bd8070 	pop	{r4, r5, r6, pc}
   30e84:	e3a00000 	mov	r0, #0
   30e88:	e12fff1e 	bx	lr
   30e8c:	e59f2038 	ldr	r2, [pc, #56]	; 30ecc <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xd0>
   30e90:	e59f1038 	ldr	r1, [pc, #56]	; 30ed0 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xd4>
   30e94:	e59f0038 	ldr	r0, [pc, #56]	; 30ed4 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xd8>
   30e98:	eb001838 	bl	36f80 <assertion_failed>
   30e9c:	eaffffef 	b	30e60 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0x64>
   30ea0:	e59f2030 	ldr	r2, [pc, #48]	; 30ed8 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xdc>
   30ea4:	e59f1024 	ldr	r1, [pc, #36]	; 30ed0 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xd4>
   30ea8:	e59f002c 	ldr	r0, [pc, #44]	; 30edc <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xe0>
   30eac:	eb001833 	bl	36f80 <assertion_failed>
   30eb0:	eaffffdb 	b	30e24 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0x28>
   30eb4:	e3a02f43 	mov	r2, #268	; 0x10c
   30eb8:	e59f1010 	ldr	r1, [pc, #16]	; 30ed0 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xd4>
   30ebc:	e59f001c 	ldr	r0, [pc, #28]	; 30ee0 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0xe4>
   30ec0:	eb00182e 	bl	36f80 <assertion_failed>
   30ec4:	eaffffd8 	b	30e2c <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0x30>
   30ec8:	00000637 	.word	0x00000637
   30ecc:	00000112 	.word	0x00000112
   30ed0:	0004bd04 	.word	0x0004bd04
   30ed4:	0004baf0 	.word	0x0004baf0
   30ed8:	0000010b 	.word	0x0000010b
   30edc:	0004bd60 	.word	0x0004bd60
   30ee0:	0004b104 	.word	0x0004b104

00030ee4 <CSMSC951xDevice::CSMSC951xDevice(CUSBFunction*)>:
   30ee4:	e92d4070 	push	{r4, r5, r6, lr}
   30ee8:	e1a04000 	mov	r4, r0
   30eec:	e3a05000 	mov	r5, #0
   30ef0:	eb000223 	bl	31784 <CNetDevice::CNetDevice(CUSBFunction*)>
   30ef4:	e59f3028 	ldr	r3, [pc, #40]	; 30f24 <CSMSC951xDevice::CSMSC951xDevice(CUSBFunction*)+0x40>
   30ef8:	e5845010 	str	r5, [r4, #16]
   30efc:	e5843000 	str	r3, [r4]
   30f00:	e5845014 	str	r5, [r4, #20]
   30f04:	e2840018 	add	r0, r4, #24
   30f08:	eb00016e 	bl	314c8 <CMACAddress::CMACAddress()>
   30f0c:	e5845024 	str	r5, [r4, #36]	; 0x24
   30f10:	e3a00d19 	mov	r0, #1600	; 0x640
   30f14:	eb000d00 	bl	3431c <operator new[](unsigned int)>
   30f18:	e5840024 	str	r0, [r4, #36]	; 0x24
   30f1c:	e1a00004 	mov	r0, r4
   30f20:	e8bd8070 	pop	{r4, r5, r6, pc}
   30f24:	0004bcd0 	.word	0x0004bcd0

00030f28 <CSMSC951xDevice::WriteReg(unsigned int, unsigned int)>:
   30f28:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   30f2c:	e24dd01c 	sub	sp, sp, #28
   30f30:	e28d5018 	add	r5, sp, #24
   30f34:	e5252004 	str	r2, [r5, #-4]!
   30f38:	e1a04001 	mov	r4, r1
   30f3c:	e1a07000 	mov	r7, r0
   30f40:	ebfff64c 	bl	2e878 <CUSBFunction::GetHost() const>
   30f44:	e1a06000 	mov	r6, r0
   30f48:	e1a00007 	mov	r0, r7
   30f4c:	ebfff638 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   30f50:	e3a02004 	mov	r2, #4
   30f54:	e3a03000 	mov	r3, #0
   30f58:	e6ff4074 	uxth	r4, r4
   30f5c:	e1a01000 	mov	r1, r0
   30f60:	e58d200c 	str	r2, [sp, #12]
   30f64:	e58d3000 	str	r3, [sp]
   30f68:	e58d5008 	str	r5, [sp, #8]
   30f6c:	e58d4004 	str	r4, [sp, #4]
   30f70:	e1a00006 	mov	r0, r6
   30f74:	e3a030a0 	mov	r3, #160	; 0xa0
   30f78:	e3a02040 	mov	r2, #64	; 0x40
   30f7c:	ebffe6b9 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   30f80:	e1e00000 	mvn	r0, r0
   30f84:	e1a00fa0 	lsr	r0, r0, #31
   30f88:	e28dd01c 	add	sp, sp, #28
   30f8c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

00030f90 <CSMSC951xDevice::ReadReg(unsigned int, unsigned int*)>:
   30f90:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   30f94:	e24dd014 	sub	sp, sp, #20
   30f98:	e1a06002 	mov	r6, r2
   30f9c:	e1a04001 	mov	r4, r1
   30fa0:	e1a07000 	mov	r7, r0
   30fa4:	ebfff633 	bl	2e878 <CUSBFunction::GetHost() const>
   30fa8:	e1a05000 	mov	r5, r0
   30fac:	e1a00007 	mov	r0, r7
   30fb0:	ebfff61f 	bl	2e834 <CUSBFunction::GetEndpoint0() const>
   30fb4:	e3a0c004 	mov	ip, #4
   30fb8:	e3a03000 	mov	r3, #0
   30fbc:	e6ff4074 	uxth	r4, r4
   30fc0:	e1a01000 	mov	r1, r0
   30fc4:	e58d3000 	str	r3, [sp]
   30fc8:	e58d6008 	str	r6, [sp, #8]
   30fcc:	e58d4004 	str	r4, [sp, #4]
   30fd0:	e1a00005 	mov	r0, r5
   30fd4:	e58dc00c 	str	ip, [sp, #12]
   30fd8:	e3a030a1 	mov	r3, #161	; 0xa1
   30fdc:	e3a020c0 	mov	r2, #192	; 0xc0
   30fe0:	ebffe6a0 	bl	2aa68 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   30fe4:	e2400004 	sub	r0, r0, #4
   30fe8:	e16f0f10 	clz	r0, r0
   30fec:	e1a002a0 	lsr	r0, r0, #5
   30ff0:	e28dd014 	add	sp, sp, #20
   30ff4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

00030ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>:
   30ff8:	e92d4030 	push	{r4, r5, lr}
   30ffc:	e1a04002 	mov	r4, r2
   31000:	e24dd014 	sub	sp, sp, #20
   31004:	e1a05001 	mov	r5, r1
   31008:	e28d200c 	add	r2, sp, #12
   3100c:	e1a01004 	mov	r1, r4
   31010:	ebffffde 	bl	30f90 <CSMSC951xDevice::ReadReg(unsigned int, unsigned int*)>
   31014:	e3500000 	cmp	r0, #0
   31018:	0a000008 	beq	31040 <CSMSC951xDevice::DumpReg(char const*, unsigned int)+0x48>
   3101c:	eb001953 	bl	37570 <CLogger::Get()>
   31020:	e59d300c 	ldr	r3, [sp, #12]
   31024:	e3a02004 	mov	r2, #4
   31028:	e88d0028 	stm	sp, {r3, r5}
   3102c:	e59f102c 	ldr	r1, [pc, #44]	; 31060 <CSMSC951xDevice::DumpReg(char const*, unsigned int)+0x68>
   31030:	e59f302c 	ldr	r3, [pc, #44]	; 31064 <CSMSC951xDevice::DumpReg(char const*, unsigned int)+0x6c>
   31034:	eb001a2d 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   31038:	e28dd014 	add	sp, sp, #20
   3103c:	e8bd8030 	pop	{r4, r5, pc}
   31040:	eb00194a 	bl	37570 <CLogger::Get()>
   31044:	e58d4000 	str	r4, [sp]
   31048:	e59f3018 	ldr	r3, [pc, #24]	; 31068 <CSMSC951xDevice::DumpReg(char const*, unsigned int)+0x70>
   3104c:	e3a02001 	mov	r2, #1
   31050:	e59f1008 	ldr	r1, [pc, #8]	; 31060 <CSMSC951xDevice::DumpReg(char const*, unsigned int)+0x68>
   31054:	eb001a25 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   31058:	e28dd014 	add	sp, sp, #20
   3105c:	e8bd8030 	pop	{r4, r5, pc}
   31060:	0004bcf8 	.word	0x0004bcf8
   31064:	0004bd90 	.word	0x0004bd90
   31068:	0004bd74 	.word	0x0004bd74

0003106c <CSMSC951xDevice::DumpRegs()>:
   3106c:	e92d4010 	push	{r4, lr}
   31070:	e1a04000 	mov	r4, r0
   31074:	e3a02000 	mov	r2, #0
   31078:	e59f1134 	ldr	r1, [pc, #308]	; 311b4 <CSMSC951xDevice::DumpRegs()+0x148>
   3107c:	ebffffdd 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31080:	e1a00004 	mov	r0, r4
   31084:	e3a02008 	mov	r2, #8
   31088:	e59f1128 	ldr	r1, [pc, #296]	; 311b8 <CSMSC951xDevice::DumpRegs()+0x14c>
   3108c:	ebffffd9 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31090:	e1a00004 	mov	r0, r4
   31094:	e3a0200c 	mov	r2, #12
   31098:	e59f111c 	ldr	r1, [pc, #284]	; 311bc <CSMSC951xDevice::DumpRegs()+0x150>
   3109c:	ebffffd5 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   310a0:	e1a00004 	mov	r0, r4
   310a4:	e3a02010 	mov	r2, #16
   310a8:	e59f1110 	ldr	r1, [pc, #272]	; 311c0 <CSMSC951xDevice::DumpRegs()+0x154>
   310ac:	ebffffd1 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   310b0:	e1a00004 	mov	r0, r4
   310b4:	e3a02014 	mov	r2, #20
   310b8:	e59f1104 	ldr	r1, [pc, #260]	; 311c4 <CSMSC951xDevice::DumpRegs()+0x158>
   310bc:	ebffffcd 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   310c0:	e1a00004 	mov	r0, r4
   310c4:	e3a02018 	mov	r2, #24
   310c8:	e59f10f8 	ldr	r1, [pc, #248]	; 311c8 <CSMSC951xDevice::DumpRegs()+0x15c>
   310cc:	ebffffc9 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   310d0:	e1a00004 	mov	r0, r4
   310d4:	e3a02020 	mov	r2, #32
   310d8:	e59f10ec 	ldr	r1, [pc, #236]	; 311cc <CSMSC951xDevice::DumpRegs()+0x160>
   310dc:	ebffffc5 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   310e0:	e1a00004 	mov	r0, r4
   310e4:	e3a02024 	mov	r2, #36	; 0x24
   310e8:	e59f10e0 	ldr	r1, [pc, #224]	; 311d0 <CSMSC951xDevice::DumpRegs()+0x164>
   310ec:	ebffffc1 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   310f0:	e1a00004 	mov	r0, r4
   310f4:	e3a02028 	mov	r2, #40	; 0x28
   310f8:	e59f10d4 	ldr	r1, [pc, #212]	; 311d4 <CSMSC951xDevice::DumpRegs()+0x168>
   310fc:	ebffffbd 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31100:	e1a00004 	mov	r0, r4
   31104:	e3a0202c 	mov	r2, #44	; 0x2c
   31108:	e59f10c8 	ldr	r1, [pc, #200]	; 311d8 <CSMSC951xDevice::DumpRegs()+0x16c>
   3110c:	ebffffb9 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31110:	e1a00004 	mov	r0, r4
   31114:	e3a02038 	mov	r2, #56	; 0x38
   31118:	e59f10bc 	ldr	r1, [pc, #188]	; 311dc <CSMSC951xDevice::DumpRegs()+0x170>
   3111c:	ebffffb5 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31120:	e1a00004 	mov	r0, r4
   31124:	e3a02068 	mov	r2, #104	; 0x68
   31128:	e59f10b0 	ldr	r1, [pc, #176]	; 311e0 <CSMSC951xDevice::DumpRegs()+0x174>
   3112c:	ebffffb1 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31130:	e1a00004 	mov	r0, r4
   31134:	e3a0206c 	mov	r2, #108	; 0x6c
   31138:	e59f10a4 	ldr	r1, [pc, #164]	; 311e4 <CSMSC951xDevice::DumpRegs()+0x178>
   3113c:	ebffffad 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31140:	e1a00004 	mov	r0, r4
   31144:	e3a02c01 	mov	r2, #256	; 0x100
   31148:	e59f1098 	ldr	r1, [pc, #152]	; 311e8 <CSMSC951xDevice::DumpRegs()+0x17c>
   3114c:	ebffffa9 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31150:	e1a00004 	mov	r0, r4
   31154:	e3a02f41 	mov	r2, #260	; 0x104
   31158:	e59f108c 	ldr	r1, [pc, #140]	; 311ec <CSMSC951xDevice::DumpRegs()+0x180>
   3115c:	ebffffa5 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31160:	e1a00004 	mov	r0, r4
   31164:	e3a02f42 	mov	r2, #264	; 0x108
   31168:	e59f1080 	ldr	r1, [pc, #128]	; 311f0 <CSMSC951xDevice::DumpRegs()+0x184>
   3116c:	ebffffa1 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31170:	e1a00004 	mov	r0, r4
   31174:	e3a02f43 	mov	r2, #268	; 0x10c
   31178:	e59f1074 	ldr	r1, [pc, #116]	; 311f4 <CSMSC951xDevice::DumpRegs()+0x188>
   3117c:	ebffff9d 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31180:	e1a00004 	mov	r0, r4
   31184:	e3a02e11 	mov	r2, #272	; 0x110
   31188:	e59f1068 	ldr	r1, [pc, #104]	; 311f8 <CSMSC951xDevice::DumpRegs()+0x18c>
   3118c:	ebffff99 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   31190:	e1a00004 	mov	r0, r4
   31194:	e3a02f47 	mov	r2, #284	; 0x11c
   31198:	e59f105c 	ldr	r1, [pc, #92]	; 311fc <CSMSC951xDevice::DumpRegs()+0x190>
   3119c:	ebffff95 	bl	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   311a0:	e1a00004 	mov	r0, r4
   311a4:	e8bd4010 	pop	{r4, lr}
   311a8:	e3a02f4b 	mov	r2, #300	; 0x12c
   311ac:	e59f104c 	ldr	r1, [pc, #76]	; 31200 <CSMSC951xDevice::DumpRegs()+0x194>
   311b0:	eaffff90 	b	30ff8 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   311b4:	0004bd98 	.word	0x0004bd98
   311b8:	0004bda0 	.word	0x0004bda0
   311bc:	0004bda8 	.word	0x0004bda8
   311c0:	0004bdb0 	.word	0x0004bdb0
   311c4:	0004bdb8 	.word	0x0004bdb8
   311c8:	0004bdc0 	.word	0x0004bdc0
   311cc:	0004bdcc 	.word	0x0004bdcc
   311d0:	0004bdd4 	.word	0x0004bdd4
   311d4:	0004bdd8 	.word	0x0004bdd8
   311d8:	0004bde4 	.word	0x0004bde4
   311dc:	0004bdec 	.word	0x0004bdec
   311e0:	0004bdf8 	.word	0x0004bdf8
   311e4:	0004be04 	.word	0x0004be04
   311e8:	0004be10 	.word	0x0004be10
   311ec:	0004be18 	.word	0x0004be18
   311f0:	0004be20 	.word	0x0004be20
   311f4:	0004be28 	.word	0x0004be28
   311f8:	0004be30 	.word	0x0004be30
   311fc:	0004be38 	.word	0x0004be38
   31200:	0004be40 	.word	0x0004be40

00031204 <CSMSC951xDevice::Configure()>:
   31204:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   31208:	e3a06000 	mov	r6, #0
   3120c:	e24dd040 	sub	sp, sp, #64	; 0x40
   31210:	e1a04000 	mov	r4, r0
   31214:	e28d0014 	add	r0, sp, #20
   31218:	eb000789 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3121c:	e28d0014 	add	r0, sp, #20
   31220:	e58d6000 	str	r6, [sp]
   31224:	e3a03014 	mov	r3, #20
   31228:	e28d202c 	add	r2, sp, #44	; 0x2c
   3122c:	e59f1270 	ldr	r1, [pc, #624]	; 314a4 <CSMSC951xDevice::Configure()+0x2a0>
   31230:	eb0007ca 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   31234:	e2505000 	subs	r5, r0, #0
   31238:	0a00003a 	beq	31328 <CSMSC951xDevice::Configure()+0x124>
   3123c:	e2847018 	add	r7, r4, #24
   31240:	e28d1038 	add	r1, sp, #56	; 0x38
   31244:	e1a00007 	mov	r0, r7
   31248:	eb0000c7 	bl	3156c <CMACAddress::Set(unsigned char const*)>
   3124c:	e28d001c 	add	r0, sp, #28
   31250:	eb001c5f 	bl	383d4 <CString::CString()>
   31254:	e28d101c 	add	r1, sp, #28
   31258:	e1a00007 	mov	r0, r7
   3125c:	eb000123 	bl	316f0 <CMACAddress::Format(CString*) const>
   31260:	eb0018c2 	bl	37570 <CLogger::Get()>
   31264:	e1a05000 	mov	r5, r0
   31268:	e28d001c 	add	r0, sp, #28
   3126c:	eb001c6e 	bl	3842c <CString::operator char const*() const>
   31270:	e59f3230 	ldr	r3, [pc, #560]	; 314a8 <CSMSC951xDevice::Configure()+0x2a4>
   31274:	e58d0000 	str	r0, [sp]
   31278:	e3a02004 	mov	r2, #4
   3127c:	e1a00005 	mov	r0, r5
   31280:	e59f1224 	ldr	r1, [pc, #548]	; 314ac <CSMSC951xDevice::Configure()+0x2a8>
   31284:	eb001999 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   31288:	e1a00004 	mov	r0, r4
   3128c:	ebfff548 	bl	2e7b4 <CUSBFunction::GetNumEndpoints() const>
   31290:	e3500003 	cmp	r0, #3
   31294:	0a00000e 	beq	312d4 <CSMSC951xDevice::Configure()+0xd0>
   31298:	e1a00004 	mov	r0, r4
   3129c:	e59f1208 	ldr	r1, [pc, #520]	; 314ac <CSMSC951xDevice::Configure()+0x2a8>
   312a0:	e1a05006 	mov	r5, r6
   312a4:	ebfff5c8 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   312a8:	e28d001c 	add	r0, sp, #28
   312ac:	eb001c15 	bl	38308 <CString::~CString()>
   312b0:	e28d0014 	add	r0, sp, #20
   312b4:	eb000768 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   312b8:	e1a00005 	mov	r0, r5
   312bc:	e28dd040 	add	sp, sp, #64	; 0x40
   312c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   312c4:	e5d53003 	ldrb	r3, [r5, #3]
   312c8:	e203303f 	and	r3, r3, #63	; 0x3f
   312cc:	e3530002 	cmp	r3, #2
   312d0:	0a00001a 	beq	31340 <CSMSC951xDevice::Configure()+0x13c>
   312d4:	e3a01005 	mov	r1, #5
   312d8:	e1a00004 	mov	r0, r4
   312dc:	ebfff5a7 	bl	2e980 <CUSBFunction::GetDescriptor(unsigned char)>
   312e0:	e2505000 	subs	r5, r0, #0
   312e4:	1afffff6 	bne	312c4 <CSMSC951xDevice::Configure()+0xc0>
   312e8:	e5943010 	ldr	r3, [r4, #16]
   312ec:	e1a00004 	mov	r0, r4
   312f0:	e3530000 	cmp	r3, #0
   312f4:	0a000022 	beq	31384 <CSMSC951xDevice::Configure()+0x180>
   312f8:	e5943014 	ldr	r3, [r4, #20]
   312fc:	e3530000 	cmp	r3, #0
   31300:	0a00001f 	beq	31384 <CSMSC951xDevice::Configure()+0x180>
   31304:	ebfff56c 	bl	2e8bc <CUSBFunction::Configure()>
   31308:	e2505000 	subs	r5, r0, #0
   3130c:	1a00002e 	bne	313cc <CSMSC951xDevice::Configure()+0x1c8>
   31310:	eb001896 	bl	37570 <CLogger::Get()>
   31314:	e59f3194 	ldr	r3, [pc, #404]	; 314b0 <CSMSC951xDevice::Configure()+0x2ac>
   31318:	e3a02001 	mov	r2, #1
   3131c:	e59f1188 	ldr	r1, [pc, #392]	; 314ac <CSMSC951xDevice::Configure()+0x2a8>
   31320:	eb001972 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   31324:	eaffffdf 	b	312a8 <CSMSC951xDevice::Configure()+0xa4>
   31328:	eb001890 	bl	37570 <CLogger::Get()>
   3132c:	e59f3180 	ldr	r3, [pc, #384]	; 314b4 <CSMSC951xDevice::Configure()+0x2b0>
   31330:	e3a02001 	mov	r2, #1
   31334:	e59f1170 	ldr	r1, [pc, #368]	; 314ac <CSMSC951xDevice::Configure()+0x2a8>
   31338:	eb00196c 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   3133c:	eaffffdb 	b	312b0 <CSMSC951xDevice::Configure()+0xac>
   31340:	e1d530d2 	ldrsb	r3, [r5, #2]
   31344:	e3530000 	cmp	r3, #0
   31348:	ba000011 	blt	31394 <CSMSC951xDevice::Configure()+0x190>
   3134c:	e5943014 	ldr	r3, [r4, #20]
   31350:	e1a00004 	mov	r0, r4
   31354:	e3530000 	cmp	r3, #0
   31358:	1a000009 	bne	31384 <CSMSC951xDevice::Configure()+0x180>
   3135c:	ebfff524 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   31360:	e1a08000 	mov	r8, r0
   31364:	e3a00018 	mov	r0, #24
   31368:	eb000bea 	bl	34318 <operator new(unsigned int)>
   3136c:	e1a06000 	mov	r6, r0
   31370:	e1a02005 	mov	r2, r5
   31374:	e1a01008 	mov	r1, r8
   31378:	ebffe4a7 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   3137c:	e5846014 	str	r6, [r4, #20]
   31380:	eaffffd3 	b	312d4 <CSMSC951xDevice::Configure()+0xd0>
   31384:	e59f1120 	ldr	r1, [pc, #288]	; 314ac <CSMSC951xDevice::Configure()+0x2a8>
   31388:	ebfff58f 	bl	2e9cc <CUSBFunction::ConfigurationError(char const*) const>
   3138c:	e3a05000 	mov	r5, #0
   31390:	eaffffc4 	b	312a8 <CSMSC951xDevice::Configure()+0xa4>
   31394:	e5943010 	ldr	r3, [r4, #16]
   31398:	e1a00004 	mov	r0, r4
   3139c:	e3530000 	cmp	r3, #0
   313a0:	1afffff7 	bne	31384 <CSMSC951xDevice::Configure()+0x180>
   313a4:	ebfff512 	bl	2e7f4 <CUSBFunction::GetDevice() const>
   313a8:	e1a08000 	mov	r8, r0
   313ac:	e3a00018 	mov	r0, #24
   313b0:	eb000bd8 	bl	34318 <operator new(unsigned int)>
   313b4:	e1a06000 	mov	r6, r0
   313b8:	e1a02005 	mov	r2, r5
   313bc:	e1a01008 	mov	r1, r8
   313c0:	ebffe495 	bl	2a61c <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   313c4:	e5846010 	str	r6, [r4, #16]
   313c8:	eaffffc1 	b	312d4 <CSMSC951xDevice::Configure()+0xd0>
   313cc:	e1a00007 	mov	r0, r7
   313d0:	e28d100c 	add	r1, sp, #12
   313d4:	eb000091 	bl	31620 <CMACAddress::CopyTo(unsigned char*) const>
   313d8:	e5dd2011 	ldrb	r2, [sp, #17]
   313dc:	e5dd3010 	ldrb	r3, [sp, #16]
   313e0:	e3a01f41 	mov	r1, #260	; 0x104
   313e4:	e1832402 	orr	r2, r3, r2, lsl #8
   313e8:	e1a00004 	mov	r0, r4
   313ec:	e59d500c 	ldr	r5, [sp, #12]
   313f0:	ebfffecc 	bl	30f28 <CSMSC951xDevice::WriteReg(unsigned int, unsigned int)>
   313f4:	e3500000 	cmp	r0, #0
   313f8:	0a000018 	beq	31460 <CSMSC951xDevice::Configure()+0x25c>
   313fc:	e1a02005 	mov	r2, r5
   31400:	e3a01f42 	mov	r1, #264	; 0x108
   31404:	e1a00004 	mov	r0, r4
   31408:	ebfffec6 	bl	30f28 <CSMSC951xDevice::WriteReg(unsigned int, unsigned int)>
   3140c:	e3500000 	cmp	r0, #0
   31410:	0a000012 	beq	31460 <CSMSC951xDevice::Configure()+0x25c>
   31414:	e59f209c 	ldr	r2, [pc, #156]	; 314b8 <CSMSC951xDevice::Configure()+0x2b4>
   31418:	e3a01024 	mov	r1, #36	; 0x24
   3141c:	e1a00004 	mov	r0, r4
   31420:	ebfffec0 	bl	30f28 <CSMSC951xDevice::WriteReg(unsigned int, unsigned int)>
   31424:	e3500000 	cmp	r0, #0
   31428:	0a000005 	beq	31444 <CSMSC951xDevice::Configure()+0x240>
   3142c:	e59f2088 	ldr	r2, [pc, #136]	; 314bc <CSMSC951xDevice::Configure()+0x2b8>
   31430:	e3a01c01 	mov	r1, #256	; 0x100
   31434:	e1a00004 	mov	r0, r4
   31438:	ebfffeba 	bl	30f28 <CSMSC951xDevice::WriteReg(unsigned int, unsigned int)>
   3143c:	e3500000 	cmp	r0, #0
   31440:	1a00000d 	bne	3147c <CSMSC951xDevice::Configure()+0x278>
   31444:	eb001849 	bl	37570 <CLogger::Get()>
   31448:	e59f3070 	ldr	r3, [pc, #112]	; 314c0 <CSMSC951xDevice::Configure()+0x2bc>
   3144c:	e3a02001 	mov	r2, #1
   31450:	e59f1054 	ldr	r1, [pc, #84]	; 314ac <CSMSC951xDevice::Configure()+0x2a8>
   31454:	eb001925 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   31458:	e3a05000 	mov	r5, #0
   3145c:	eaffff91 	b	312a8 <CSMSC951xDevice::Configure()+0xa4>
   31460:	eb001842 	bl	37570 <CLogger::Get()>
   31464:	e59f3058 	ldr	r3, [pc, #88]	; 314c4 <CSMSC951xDevice::Configure()+0x2c0>
   31468:	e3a02001 	mov	r2, #1
   3146c:	e59f1038 	ldr	r1, [pc, #56]	; 314ac <CSMSC951xDevice::Configure()+0x2a8>
   31470:	eb00191e 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   31474:	e3a05000 	mov	r5, #0
   31478:	eaffff8a 	b	312a8 <CSMSC951xDevice::Configure()+0xa4>
   3147c:	e3a02004 	mov	r2, #4
   31480:	e3a01010 	mov	r1, #16
   31484:	e1a00004 	mov	r0, r4
   31488:	ebfffea6 	bl	30f28 <CSMSC951xDevice::WriteReg(unsigned int, unsigned int)>
   3148c:	e3500000 	cmp	r0, #0
   31490:	0affffeb 	beq	31444 <CSMSC951xDevice::Configure()+0x240>
   31494:	e1a00004 	mov	r0, r4
   31498:	eb0000d4 	bl	317f0 <CNetDevice::AddNetDevice()>
   3149c:	e3a05001 	mov	r5, #1
   314a0:	eaffff80 	b	312a8 <CSMSC951xDevice::Configure()+0xa4>
   314a4:	00010003 	.word	0x00010003
   314a8:	0004bb7c 	.word	0x0004bb7c
   314ac:	0004bcf8 	.word	0x0004bcf8
   314b0:	0004b008 	.word	0x0004b008
   314b4:	0004bb64 	.word	0x0004bb64
   314b8:	01110000 	.word	0x01110000
   314bc:	0080000c 	.word	0x0080000c
   314c0:	0004be60 	.word	0x0004be60
   314c4:	0004be48 	.word	0x0004be48

000314c8 <CMACAddress::CMACAddress()>:
   314c8:	e3a02000 	mov	r2, #0
   314cc:	e5802000 	str	r2, [r0]
   314d0:	e12fff1e 	bx	lr

000314d4 <CMACAddress::~CMACAddress()>:
   314d4:	e12fff1e 	bx	lr

000314d8 <CMACAddress::operator==(CMACAddress const&) const>:
   314d8:	e92d4070 	push	{r4, r5, r6, lr}
   314dc:	e5903000 	ldr	r3, [r0]
   314e0:	e1a04000 	mov	r4, r0
   314e4:	e3530000 	cmp	r3, #0
   314e8:	e1a05001 	mov	r5, r1
   314ec:	0a00000a 	beq	3151c <CMACAddress::operator==(CMACAddress const&) const+0x44>
   314f0:	e5953000 	ldr	r3, [r5]
   314f4:	e2844004 	add	r4, r4, #4
   314f8:	e3530000 	cmp	r3, #0
   314fc:	0a00000e 	beq	3153c <CMACAddress::operator==(CMACAddress const&) const+0x64>
   31500:	e2851004 	add	r1, r5, #4
   31504:	e1a00004 	mov	r0, r4
   31508:	e3a02006 	mov	r2, #6
   3150c:	eb000f21 	bl	35198 <memcmp>
   31510:	e16f0f10 	clz	r0, r0
   31514:	e1a002a0 	lsr	r0, r0, #5
   31518:	e8bd8070 	pop	{r4, r5, r6, pc}
   3151c:	e3a02029 	mov	r2, #41	; 0x29
   31520:	e59f1028 	ldr	r1, [pc, #40]	; 31550 <CMACAddress::operator==(CMACAddress const&) const+0x78>
   31524:	e59f0028 	ldr	r0, [pc, #40]	; 31554 <CMACAddress::operator==(CMACAddress const&) const+0x7c>
   31528:	eb001694 	bl	36f80 <assertion_failed>
   3152c:	e5953000 	ldr	r3, [r5]
   31530:	e2844004 	add	r4, r4, #4
   31534:	e3530000 	cmp	r3, #0
   31538:	1afffff0 	bne	31500 <CMACAddress::operator==(CMACAddress const&) const+0x28>
   3153c:	e3a02041 	mov	r2, #65	; 0x41
   31540:	e59f1008 	ldr	r1, [pc, #8]	; 31550 <CMACAddress::operator==(CMACAddress const&) const+0x78>
   31544:	e59f0008 	ldr	r0, [pc, #8]	; 31554 <CMACAddress::operator==(CMACAddress const&) const+0x7c>
   31548:	eb00168c 	bl	36f80 <assertion_failed>
   3154c:	eaffffeb 	b	31500 <CMACAddress::operator==(CMACAddress const&) const+0x28>
   31550:	0004be74 	.word	0x0004be74
   31554:	0004a620 	.word	0x0004a620

00031558 <CMACAddress::operator!=(CMACAddress const&) const>:
   31558:	e92d4010 	push	{r4, lr}
   3155c:	ebffffdd 	bl	314d8 <CMACAddress::operator==(CMACAddress const&) const>
   31560:	e16f0f10 	clz	r0, r0
   31564:	e1a002a0 	lsr	r0, r0, #5
   31568:	e8bd8010 	pop	{r4, pc}

0003156c <CMACAddress::Set(unsigned char const*)>:
   3156c:	e92d4070 	push	{r4, r5, r6, lr}
   31570:	e2515000 	subs	r5, r1, #0
   31574:	e1a04000 	mov	r4, r0
   31578:	0a000006 	beq	31598 <CMACAddress::Set(unsigned char const*)+0x2c>
   3157c:	e1a01005 	mov	r1, r5
   31580:	e3a02006 	mov	r2, #6
   31584:	e2840004 	add	r0, r4, #4
   31588:	eb001012 	bl	355d8 <memcpy>
   3158c:	e3a03001 	mov	r3, #1
   31590:	e5843000 	str	r3, [r4]
   31594:	e8bd8070 	pop	{r4, r5, r6, pc}
   31598:	e3a02034 	mov	r2, #52	; 0x34
   3159c:	e59f1008 	ldr	r1, [pc, #8]	; 315ac <CMACAddress::Set(unsigned char const*)+0x40>
   315a0:	e59f0008 	ldr	r0, [pc, #8]	; 315b0 <CMACAddress::Set(unsigned char const*)+0x44>
   315a4:	eb001675 	bl	36f80 <assertion_failed>
   315a8:	eafffff3 	b	3157c <CMACAddress::Set(unsigned char const*)+0x10>
   315ac:	0004be74 	.word	0x0004be74
   315b0:	0004be84 	.word	0x0004be84

000315b4 <CMACAddress::CMACAddress(unsigned char const*)>:
   315b4:	e92d4010 	push	{r4, lr}
   315b8:	e1a04000 	mov	r4, r0
   315bc:	ebffffea 	bl	3156c <CMACAddress::Set(unsigned char const*)>
   315c0:	e1a00004 	mov	r0, r4
   315c4:	e8bd8010 	pop	{r4, pc}

000315c8 <CMACAddress::SetBroadcast()>:
   315c8:	e92d4010 	push	{r4, lr}
   315cc:	e3a02006 	mov	r2, #6
   315d0:	e1a04000 	mov	r4, r0
   315d4:	e3a010ff 	mov	r1, #255	; 0xff
   315d8:	e2800004 	add	r0, r0, #4
   315dc:	eb000ee4 	bl	35174 <memset>
   315e0:	e3a03001 	mov	r3, #1
   315e4:	e5843000 	str	r3, [r4]
   315e8:	e8bd8010 	pop	{r4, pc}

000315ec <CMACAddress::Get() const>:
   315ec:	e92d4010 	push	{r4, lr}
   315f0:	e5903000 	ldr	r3, [r0]
   315f4:	e1a04000 	mov	r4, r0
   315f8:	e3530000 	cmp	r3, #0
   315fc:	1a000003 	bne	31610 <CMACAddress::Get() const+0x24>
   31600:	e3a02041 	mov	r2, #65	; 0x41
   31604:	e59f100c 	ldr	r1, [pc, #12]	; 31618 <CMACAddress::Get() const+0x2c>
   31608:	e59f000c 	ldr	r0, [pc, #12]	; 3161c <CMACAddress::Get() const+0x30>
   3160c:	eb00165b 	bl	36f80 <assertion_failed>
   31610:	e2840004 	add	r0, r4, #4
   31614:	e8bd8010 	pop	{r4, pc}
   31618:	0004be74 	.word	0x0004be74
   3161c:	0004a620 	.word	0x0004a620

00031620 <CMACAddress::CopyTo(unsigned char*) const>:
   31620:	e92d4070 	push	{r4, r5, r6, lr}
   31624:	e5903000 	ldr	r3, [r0]
   31628:	e1a05000 	mov	r5, r0
   3162c:	e3530000 	cmp	r3, #0
   31630:	e1a04001 	mov	r4, r1
   31634:	0a000006 	beq	31654 <CMACAddress::CopyTo(unsigned char*) const+0x34>
   31638:	e3540000 	cmp	r4, #0
   3163c:	0a00000a 	beq	3166c <CMACAddress::CopyTo(unsigned char*) const+0x4c>
   31640:	e2851004 	add	r1, r5, #4
   31644:	e1a00004 	mov	r0, r4
   31648:	e8bd4070 	pop	{r4, r5, r6, lr}
   3164c:	e3a02006 	mov	r2, #6
   31650:	ea000fe0 	b	355d8 <memcpy>
   31654:	e3a02047 	mov	r2, #71	; 0x47
   31658:	e59f1020 	ldr	r1, [pc, #32]	; 31680 <CMACAddress::CopyTo(unsigned char*) const+0x60>
   3165c:	e59f0020 	ldr	r0, [pc, #32]	; 31684 <CMACAddress::CopyTo(unsigned char*) const+0x64>
   31660:	eb001646 	bl	36f80 <assertion_failed>
   31664:	e3540000 	cmp	r4, #0
   31668:	1afffff4 	bne	31640 <CMACAddress::CopyTo(unsigned char*) const+0x20>
   3166c:	e3a02048 	mov	r2, #72	; 0x48
   31670:	e59f1008 	ldr	r1, [pc, #8]	; 31680 <CMACAddress::CopyTo(unsigned char*) const+0x60>
   31674:	e59f000c 	ldr	r0, [pc, #12]	; 31688 <CMACAddress::CopyTo(unsigned char*) const+0x68>
   31678:	eb001640 	bl	36f80 <assertion_failed>
   3167c:	eaffffef 	b	31640 <CMACAddress::CopyTo(unsigned char*) const+0x20>
   31680:	0004be74 	.word	0x0004be74
   31684:	0004a620 	.word	0x0004a620
   31688:	0004b104 	.word	0x0004b104

0003168c <CMACAddress::IsBroadcast() const>:
   3168c:	e92d4010 	push	{r4, lr}
   31690:	e5903000 	ldr	r3, [r0]
   31694:	e1a04000 	mov	r4, r0
   31698:	e3530000 	cmp	r3, #0
   3169c:	0a000008 	beq	316c4 <CMACAddress::IsBroadcast() const+0x38>
   316a0:	e2843004 	add	r3, r4, #4
   316a4:	e284000a 	add	r0, r4, #10
   316a8:	e4d32001 	ldrb	r2, [r3], #1
   316ac:	e35200ff 	cmp	r2, #255	; 0xff
   316b0:	1a000008 	bne	316d8 <CMACAddress::IsBroadcast() const+0x4c>
   316b4:	e1530000 	cmp	r3, r0
   316b8:	1afffffa 	bne	316a8 <CMACAddress::IsBroadcast() const+0x1c>
   316bc:	e3a00001 	mov	r0, #1
   316c0:	e8bd8010 	pop	{r4, pc}
   316c4:	e3a0204e 	mov	r2, #78	; 0x4e
   316c8:	e59f1010 	ldr	r1, [pc, #16]	; 316e0 <CMACAddress::IsBroadcast() const+0x54>
   316cc:	e59f0010 	ldr	r0, [pc, #16]	; 316e4 <CMACAddress::IsBroadcast() const+0x58>
   316d0:	eb00162a 	bl	36f80 <assertion_failed>
   316d4:	eafffff1 	b	316a0 <CMACAddress::IsBroadcast() const+0x14>
   316d8:	e3a00000 	mov	r0, #0
   316dc:	e8bd8010 	pop	{r4, pc}
   316e0:	0004be74 	.word	0x0004be74
   316e4:	0004a620 	.word	0x0004a620

000316e8 <CMACAddress::GetSize() const>:
   316e8:	e3a00006 	mov	r0, #6
   316ec:	e12fff1e 	bx	lr

000316f0 <CMACAddress::Format(CString*) const>:
   316f0:	e92d4030 	push	{r4, r5, lr}
   316f4:	e5903000 	ldr	r3, [r0]
   316f8:	e24dd014 	sub	sp, sp, #20
   316fc:	e3530000 	cmp	r3, #0
   31700:	e1a04000 	mov	r4, r0
   31704:	e1a05001 	mov	r5, r1
   31708:	0a00000e 	beq	31748 <CMACAddress::Format(CString*) const+0x58>
   3170c:	e3550000 	cmp	r5, #0
   31710:	0a000012 	beq	31760 <CMACAddress::Format(CString*) const+0x70>
   31714:	e5d41009 	ldrb	r1, [r4, #9]
   31718:	e5d43005 	ldrb	r3, [r4, #5]
   3171c:	e5d42004 	ldrb	r2, [r4, #4]
   31720:	e5d4e008 	ldrb	lr, [r4, #8]
   31724:	e58d100c 	str	r1, [sp, #12]
   31728:	e5d41006 	ldrb	r1, [r4, #6]
   3172c:	e5d4c007 	ldrb	ip, [r4, #7]
   31730:	e1a00005 	mov	r0, r5
   31734:	e88d5002 	stm	sp, {r1, ip, lr}
   31738:	e59f1034 	ldr	r1, [pc, #52]	; 31774 <CMACAddress::Format(CString*) const+0x84>
   3173c:	eb001eac 	bl	391f4 <CString::Format(char const*, ...)>
   31740:	e28dd014 	add	sp, sp, #20
   31744:	e8bd8030 	pop	{r4, r5, pc}
   31748:	e3a02062 	mov	r2, #98	; 0x62
   3174c:	e59f1024 	ldr	r1, [pc, #36]	; 31778 <CMACAddress::Format(CString*) const+0x88>
   31750:	e59f0024 	ldr	r0, [pc, #36]	; 3177c <CMACAddress::Format(CString*) const+0x8c>
   31754:	eb001609 	bl	36f80 <assertion_failed>
   31758:	e3550000 	cmp	r5, #0
   3175c:	1affffec 	bne	31714 <CMACAddress::Format(CString*) const+0x24>
   31760:	e3a02063 	mov	r2, #99	; 0x63
   31764:	e59f100c 	ldr	r1, [pc, #12]	; 31778 <CMACAddress::Format(CString*) const+0x88>
   31768:	e59f0010 	ldr	r0, [pc, #16]	; 31780 <CMACAddress::Format(CString*) const+0x90>
   3176c:	eb001603 	bl	36f80 <assertion_failed>
   31770:	eaffffe7 	b	31714 <CMACAddress::Format(CString*) const+0x24>
   31774:	0004bea4 	.word	0x0004bea4
   31778:	0004be74 	.word	0x0004be74
   3177c:	0004a620 	.word	0x0004a620
   31780:	0004be94 	.word	0x0004be94

00031784 <CNetDevice::CNetDevice(CUSBFunction*)>:
   31784:	e92d4010 	push	{r4, lr}
   31788:	e1a04000 	mov	r4, r0
   3178c:	ebfff3ab 	bl	2e640 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   31790:	e59f3008 	ldr	r3, [pc, #8]	; 317a0 <CNetDevice::CNetDevice(CUSBFunction*)+0x1c>
   31794:	e1a00004 	mov	r0, r4
   31798:	e5843000 	str	r3, [r4]
   3179c:	e8bd8010 	pop	{r4, pc}
   317a0:	0004becc 	.word	0x0004becc

000317a4 <CNetDevice::~CNetDevice()>:
   317a4:	e92d4010 	push	{r4, lr}
   317a8:	e1a04000 	mov	r4, r0
   317ac:	e59f300c 	ldr	r3, [pc, #12]	; 317c0 <CNetDevice::~CNetDevice()+0x1c>
   317b0:	e5803000 	str	r3, [r0]
   317b4:	ebfff352 	bl	2e504 <CUSBFunction::~CUSBFunction()>
   317b8:	e1a00004 	mov	r0, r4
   317bc:	e8bd8010 	pop	{r4, pc}
   317c0:	0004becc 	.word	0x0004becc

000317c4 <CNetDevice::~CNetDevice()>:
   317c4:	e92d4010 	push	{r4, lr}
   317c8:	e1a04000 	mov	r4, r0
   317cc:	e59f3018 	ldr	r3, [pc, #24]	; 317ec <CNetDevice::~CNetDevice()+0x28>
   317d0:	e5803000 	str	r3, [r0]
   317d4:	ebfff34a 	bl	2e504 <CUSBFunction::~CUSBFunction()>
   317d8:	e1a00004 	mov	r0, r4
   317dc:	e3a01010 	mov	r1, #16
   317e0:	eb000ad0 	bl	34328 <operator delete(void*, unsigned int)>
   317e4:	e1a00004 	mov	r0, r4
   317e8:	e8bd8010 	pop	{r4, pc}
   317ec:	0004becc 	.word	0x0004becc

000317f0 <CNetDevice::AddNetDevice()>:
   317f0:	e92d4030 	push	{r4, r5, lr}
   317f4:	e24dd014 	sub	sp, sp, #20
   317f8:	e1a05000 	mov	r5, r0
   317fc:	e1a0000d 	mov	r0, sp
   31800:	eb001af3 	bl	383d4 <CString::CString()>
   31804:	e59f3048 	ldr	r3, [pc, #72]	; 31854 <CNetDevice::AddNetDevice()+0x64>
   31808:	e59f1048 	ldr	r1, [pc, #72]	; 31858 <CNetDevice::AddNetDevice()+0x68>
   3180c:	e5932000 	ldr	r2, [r3]
   31810:	e1a0000d 	mov	r0, sp
   31814:	e282c001 	add	ip, r2, #1
   31818:	e583c000 	str	ip, [r3]
   3181c:	eb001e74 	bl	391f4 <CString::Format(char const*, ...)>
   31820:	eb001726 	bl	374c0 <CDeviceNameService::Get()>
   31824:	e1a04000 	mov	r4, r0
   31828:	e1a0000d 	mov	r0, sp
   3182c:	eb001afe 	bl	3842c <CString::operator char const*() const>
   31830:	e1a02005 	mov	r2, r5
   31834:	e1a01000 	mov	r1, r0
   31838:	e3a03000 	mov	r3, #0
   3183c:	e1a00004 	mov	r0, r4
   31840:	eb0016ad 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   31844:	e1a0000d 	mov	r0, sp
   31848:	eb001aae 	bl	38308 <CString::~CString()>
   3184c:	e28dd014 	add	sp, sp, #20
   31850:	e8bd8030 	pop	{r4, r5, pc}
   31854:	0017af20 	.word	0x0017af20
   31858:	0004bef4 	.word	0x0004bef4

0003185c <CKeyboardBehaviour::CKeyboardBehaviour()>:
   3185c:	e92d4010 	push	{r4, lr}
   31860:	e3a03000 	mov	r3, #0
   31864:	e1a04000 	mov	r4, r0
   31868:	e2800014 	add	r0, r0, #20
   3186c:	e5843000 	str	r3, [r4]
   31870:	e5843004 	str	r3, [r4, #4]
   31874:	e5843008 	str	r3, [r4, #8]
   31878:	e1c430bc 	strh	r3, [r4, #12]
   3187c:	e5843010 	str	r3, [r4, #16]
   31880:	eb00019e 	bl	31f00 <CKeyMap::CKeyMap()>
   31884:	e1a00004 	mov	r0, r4
   31888:	e8bd8010 	pop	{r4, pc}

0003188c <CKeyboardBehaviour::~CKeyboardBehaviour()>:
   3188c:	e92d4010 	push	{r4, lr}
   31890:	e3a03000 	mov	r3, #0
   31894:	e1a04000 	mov	r4, r0
   31898:	e2800014 	add	r0, r0, #20
   3189c:	e5843000 	str	r3, [r4]
   318a0:	e5843004 	str	r3, [r4, #4]
   318a4:	e5843008 	str	r3, [r4, #8]
   318a8:	eb0000c4 	bl	31bc0 <CKeyMap::~CKeyMap()>
   318ac:	e1a00004 	mov	r0, r4
   318b0:	e8bd8010 	pop	{r4, pc}

000318b4 <CKeyboardBehaviour::RegisterKeyPressedHandler(void (*)(char const*))>:
   318b4:	e92d4070 	push	{r4, r5, r6, lr}
   318b8:	e2515000 	subs	r5, r1, #0
   318bc:	e1a04000 	mov	r4, r0
   318c0:	0a000001 	beq	318cc <CKeyboardBehaviour::RegisterKeyPressedHandler(void (*)(char const*))+0x18>
   318c4:	e5845000 	str	r5, [r4]
   318c8:	e8bd8070 	pop	{r4, r5, r6, pc}
   318cc:	e3a02030 	mov	r2, #48	; 0x30
   318d0:	e59f100c 	ldr	r1, [pc, #12]	; 318e4 <CKeyboardBehaviour::RegisterKeyPressedHandler(void (*)(char const*))+0x30>
   318d4:	e59f000c 	ldr	r0, [pc, #12]	; 318e8 <CKeyboardBehaviour::RegisterKeyPressedHandler(void (*)(char const*))+0x34>
   318d8:	eb0015a8 	bl	36f80 <assertion_failed>
   318dc:	e5845000 	str	r5, [r4]
   318e0:	e8bd8070 	pop	{r4, r5, r6, pc}
   318e4:	0004befc 	.word	0x0004befc
   318e8:	0004bf14 	.word	0x0004bf14

000318ec <CKeyboardBehaviour::RegisterSelectConsoleHandler(void (*)(unsigned int))>:
   318ec:	e92d4070 	push	{r4, r5, r6, lr}
   318f0:	e2515000 	subs	r5, r1, #0
   318f4:	e1a04000 	mov	r4, r0
   318f8:	0a000001 	beq	31904 <CKeyboardBehaviour::RegisterSelectConsoleHandler(void (*)(unsigned int))+0x18>
   318fc:	e5845004 	str	r5, [r4, #4]
   31900:	e8bd8070 	pop	{r4, r5, r6, pc}
   31904:	e3a02036 	mov	r2, #54	; 0x36
   31908:	e59f100c 	ldr	r1, [pc, #12]	; 3191c <CKeyboardBehaviour::RegisterSelectConsoleHandler(void (*)(unsigned int))+0x30>
   3190c:	e59f000c 	ldr	r0, [pc, #12]	; 31920 <CKeyboardBehaviour::RegisterSelectConsoleHandler(void (*)(unsigned int))+0x34>
   31910:	eb00159a 	bl	36f80 <assertion_failed>
   31914:	e5845004 	str	r5, [r4, #4]
   31918:	e8bd8070 	pop	{r4, r5, r6, pc}
   3191c:	0004befc 	.word	0x0004befc
   31920:	0004bf2c 	.word	0x0004bf2c

00031924 <CKeyboardBehaviour::RegisterShutdownHandler(void (*)())>:
   31924:	e92d4070 	push	{r4, r5, r6, lr}
   31928:	e2515000 	subs	r5, r1, #0
   3192c:	e1a04000 	mov	r4, r0
   31930:	0a000001 	beq	3193c <CKeyboardBehaviour::RegisterShutdownHandler(void (*)())+0x18>
   31934:	e5845008 	str	r5, [r4, #8]
   31938:	e8bd8070 	pop	{r4, r5, r6, pc}
   3193c:	e3a0203c 	mov	r2, #60	; 0x3c
   31940:	e59f100c 	ldr	r1, [pc, #12]	; 31954 <CKeyboardBehaviour::RegisterShutdownHandler(void (*)())+0x30>
   31944:	e59f000c 	ldr	r0, [pc, #12]	; 31958 <CKeyboardBehaviour::RegisterShutdownHandler(void (*)())+0x34>
   31948:	eb00158c 	bl	36f80 <assertion_failed>
   3194c:	e5845008 	str	r5, [r4, #8]
   31950:	e8bd8070 	pop	{r4, r5, r6, pc}
   31954:	0004befc 	.word	0x0004befc
   31958:	0004bf48 	.word	0x0004bf48

0003195c <CKeyboardBehaviour::GetLEDStatus() const>:
   3195c:	e2800014 	add	r0, r0, #20
   31960:	ea000134 	b	31e38 <CKeyMap::GetLEDStatus() const>

00031964 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)>:
   31964:	e92d4070 	push	{r4, r5, r6, lr}
   31968:	e5d0600c 	ldrb	r6, [r0, #12]
   3196c:	e2805014 	add	r5, r0, #20
   31970:	e24dd008 	sub	sp, sp, #8
   31974:	e1a04000 	mov	r4, r0
   31978:	e1a02006 	mov	r2, r6
   3197c:	e1a00005 	mov	r0, r5
   31980:	eb0000b3 	bl	31c54 <CKeyMap::Translate(unsigned char, unsigned char)>
   31984:	e2403e13 	sub	r3, r0, #304	; 0x130
   31988:	e2433003 	sub	r3, r3, #3
   3198c:	e353000f 	cmp	r3, #15
   31990:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   31994:	ea00000f 	b	319d8 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x74>
   31998:	00031a04 	.word	0x00031a04
   3199c:	00031a04 	.word	0x00031a04
   319a0:	00031a04 	.word	0x00031a04
   319a4:	00031a24 	.word	0x00031a24
   319a8:	00031a24 	.word	0x00031a24
   319ac:	00031a24 	.word	0x00031a24
   319b0:	00031a24 	.word	0x00031a24
   319b4:	00031a24 	.word	0x00031a24
   319b8:	00031a24 	.word	0x00031a24
   319bc:	00031a24 	.word	0x00031a24
   319c0:	00031a24 	.word	0x00031a24
   319c4:	00031a24 	.word	0x00031a24
   319c8:	00031a24 	.word	0x00031a24
   319cc:	00031a24 	.word	0x00031a24
   319d0:	00031a24 	.word	0x00031a24
   319d4:	00031a0c 	.word	0x00031a0c
   319d8:	e1a01000 	mov	r1, r0
   319dc:	e1a02006 	mov	r2, r6
   319e0:	e1a00005 	mov	r0, r5
   319e4:	e28d3004 	add	r3, sp, #4
   319e8:	eb0000e2 	bl	31d78 <CKeyMap::GetString(unsigned short, unsigned char, char*) const>
   319ec:	e3500000 	cmp	r0, #0
   319f0:	0a000003 	beq	31a04 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0xa0>
   319f4:	e5943000 	ldr	r3, [r4]
   319f8:	e3530000 	cmp	r3, #0
   319fc:	0a000000 	beq	31a04 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0xa0>
   31a00:	e12fff33 	blx	r3
   31a04:	e28dd008 	add	sp, sp, #8
   31a08:	e8bd8070 	pop	{r4, r5, r6, pc}
   31a0c:	e5943008 	ldr	r3, [r4, #8]
   31a10:	e3530000 	cmp	r3, #0
   31a14:	0afffffa 	beq	31a04 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0xa0>
   31a18:	e12fff33 	blx	r3
   31a1c:	e28dd008 	add	sp, sp, #8
   31a20:	e8bd8070 	pop	{r4, r5, r6, pc}
   31a24:	e5943004 	ldr	r3, [r4, #4]
   31a28:	e3530000 	cmp	r3, #0
   31a2c:	0afffff4 	beq	31a04 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0xa0>
   31a30:	e2400f4d 	sub	r0, r0, #308	; 0x134
   31a34:	e2400002 	sub	r0, r0, #2
   31a38:	e12fff33 	blx	r3
   31a3c:	e28dd008 	add	sp, sp, #8
   31a40:	e8bd8070 	pop	{r4, r5, r6, pc}

00031a44 <CKeyboardBehaviour::KeyPressed(unsigned char)>:
   31a44:	e241c080 	sub	ip, r1, #128	; 0x80
   31a48:	e6ef307c 	uxtb	r3, ip
   31a4c:	e3530007 	cmp	r3, #7
   31a50:	e1a03000 	mov	r3, r0
   31a54:	8a000004 	bhi	31a6c <CKeyboardBehaviour::KeyPressed(unsigned char)+0x28>
   31a58:	e3a01001 	mov	r1, #1
   31a5c:	e5d0200c 	ldrb	r2, [r0, #12]
   31a60:	e182cc11 	orr	ip, r2, r1, lsl ip
   31a64:	e5c0c00c 	strb	ip, [r0, #12]
   31a68:	e12fff1e 	bx	lr
   31a6c:	e5d0c00d 	ldrb	ip, [r0, #13]
   31a70:	e15c0001 	cmp	ip, r1
   31a74:	012fff1e 	bxeq	lr
   31a78:	e5c3100d 	strb	r1, [r3, #13]
   31a7c:	eaffffb8 	b	31964 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)>

00031a80 <CKeyboardBehaviour::KeyReleased(unsigned char)>:
   31a80:	e2413080 	sub	r3, r1, #128	; 0x80
   31a84:	e6ef2073 	uxtb	r2, r3
   31a88:	e3520007 	cmp	r2, #7
   31a8c:	8a000004 	bhi	31aa4 <CKeyboardBehaviour::KeyReleased(unsigned char)+0x24>
   31a90:	e3a01001 	mov	r1, #1
   31a94:	e5d0200c 	ldrb	r2, [r0, #12]
   31a98:	e1c23311 	bic	r3, r2, r1, lsl r3
   31a9c:	e5c0300c 	strb	r3, [r0, #12]
   31aa0:	e12fff1e 	bx	lr
   31aa4:	e5d0300d 	ldrb	r3, [r0, #13]
   31aa8:	e1530001 	cmp	r3, r1
   31aac:	112fff1e 	bxne	lr
   31ab0:	e5903010 	ldr	r3, [r0, #16]
   31ab4:	e92d4010 	push	{r4, lr}
   31ab8:	e3530000 	cmp	r3, #0
   31abc:	e1a04000 	mov	r4, r0
   31ac0:	1a000002 	bne	31ad0 <CKeyboardBehaviour::KeyReleased(unsigned char)+0x50>
   31ac4:	e3a03000 	mov	r3, #0
   31ac8:	e5c4300d 	strb	r3, [r4, #13]
   31acc:	e8bd8010 	pop	{r4, pc}
   31ad0:	eb000d98 	bl	35138 <CTimer::Get()>
   31ad4:	e5941010 	ldr	r1, [r4, #16]
   31ad8:	eb000c28 	bl	34b80 <CTimer::CancelKernelTimer(unsigned int)>
   31adc:	e3a03000 	mov	r3, #0
   31ae0:	e5843010 	str	r3, [r4, #16]
   31ae4:	eafffff6 	b	31ac4 <CKeyboardBehaviour::KeyReleased(unsigned char)+0x44>

00031ae8 <CKeyboardBehaviour::TimerHandler(unsigned int)>:
   31ae8:	e92d4010 	push	{r4, lr}
   31aec:	e5903010 	ldr	r3, [r0, #16]
   31af0:	e24dd008 	sub	sp, sp, #8
   31af4:	e1530001 	cmp	r3, r1
   31af8:	e1a04000 	mov	r4, r0
   31afc:	0a000003 	beq	31b10 <CKeyboardBehaviour::TimerHandler(unsigned int)+0x28>
   31b00:	e3a020b1 	mov	r2, #177	; 0xb1
   31b04:	e59f105c 	ldr	r1, [pc, #92]	; 31b68 <CKeyboardBehaviour::TimerHandler(unsigned int)+0x80>
   31b08:	e59f005c 	ldr	r0, [pc, #92]	; 31b6c <CKeyboardBehaviour::TimerHandler(unsigned int)+0x84>
   31b0c:	eb00151b 	bl	36f80 <assertion_failed>
   31b10:	e5d4100d 	ldrb	r1, [r4, #13]
   31b14:	e3510000 	cmp	r1, #0
   31b18:	1a000001 	bne	31b24 <CKeyboardBehaviour::TimerHandler(unsigned int)+0x3c>
   31b1c:	e28dd008 	add	sp, sp, #8
   31b20:	e8bd8010 	pop	{r4, pc}
   31b24:	e1a00004 	mov	r0, r4
   31b28:	ebffff8d 	bl	31964 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)>
   31b2c:	eb000d81 	bl	35138 <CTimer::Get()>
   31b30:	e58d4000 	str	r4, [sp]
   31b34:	e3a03000 	mov	r3, #0
   31b38:	e59f2030 	ldr	r2, [pc, #48]	; 31b70 <CKeyboardBehaviour::TimerHandler(unsigned int)+0x88>
   31b3c:	e3a01008 	mov	r1, #8
   31b40:	eb000bb9 	bl	34a2c <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)>
   31b44:	e3500000 	cmp	r0, #0
   31b48:	e5840010 	str	r0, [r4, #16]
   31b4c:	1afffff2 	bne	31b1c <CKeyboardBehaviour::TimerHandler(unsigned int)+0x34>
   31b50:	e3a020b8 	mov	r2, #184	; 0xb8
   31b54:	e59f100c 	ldr	r1, [pc, #12]	; 31b68 <CKeyboardBehaviour::TimerHandler(unsigned int)+0x80>
   31b58:	e59f0014 	ldr	r0, [pc, #20]	; 31b74 <CKeyboardBehaviour::TimerHandler(unsigned int)+0x8c>
   31b5c:	e28dd008 	add	sp, sp, #8
   31b60:	e8bd4010 	pop	{r4, lr}
   31b64:	ea001505 	b	36f80 <assertion_failed>
   31b68:	0004befc 	.word	0x0004befc
   31b6c:	0004bf60 	.word	0x0004bf60
   31b70:	00031b78 	.word	0x00031b78
   31b74:	0004ba60 	.word	0x0004ba60

00031b78 <CKeyboardBehaviour::TimerStub(unsigned int, void*, void*)>:
   31b78:	e92d4070 	push	{r4, r5, r6, lr}
   31b7c:	e2524000 	subs	r4, r2, #0
   31b80:	e1a05000 	mov	r5, r0
   31b84:	0a000003 	beq	31b98 <CKeyboardBehaviour::TimerStub(unsigned int, void*, void*)+0x20>
   31b88:	e1a01005 	mov	r1, r5
   31b8c:	e1a00004 	mov	r0, r4
   31b90:	e8bd4070 	pop	{r4, r5, r6, lr}
   31b94:	eaffffd3 	b	31ae8 <CKeyboardBehaviour::TimerHandler(unsigned int)>
   31b98:	e59f1018 	ldr	r1, [pc, #24]	; 31bb8 <CKeyboardBehaviour::TimerStub(unsigned int, void*, void*)+0x40>
   31b9c:	e59f0018 	ldr	r0, [pc, #24]	; 31bbc <CKeyboardBehaviour::TimerStub(unsigned int, void*, void*)+0x44>
   31ba0:	e3a020bf 	mov	r2, #191	; 0xbf
   31ba4:	eb0014f5 	bl	36f80 <assertion_failed>
   31ba8:	e1a01005 	mov	r1, r5
   31bac:	e1a00004 	mov	r0, r4
   31bb0:	e8bd4070 	pop	{r4, r5, r6, lr}
   31bb4:	eaffffcb 	b	31ae8 <CKeyboardBehaviour::TimerHandler(unsigned int)>
   31bb8:	0004befc 	.word	0x0004befc
   31bbc:	0004a0c0 	.word	0x0004a0c0

00031bc0 <CKeyMap::~CKeyMap()>:
   31bc0:	e12fff1e 	bx	lr

00031bc4 <CKeyMap::ClearTable(unsigned char)>:
   31bc4:	e3510003 	cmp	r1, #3
   31bc8:	8a000009 	bhi	31bf4 <CKeyMap::ClearTable(unsigned char)+0x30>
   31bcc:	e3a0c000 	mov	ip, #0
   31bd0:	e1a01081 	lsl	r1, r1, #1
   31bd4:	e2802b01 	add	r2, r0, #1024	; 0x400
   31bd8:	e0803001 	add	r3, r0, r1
   31bdc:	e0822001 	add	r2, r2, r1
   31be0:	e0c3c0b8 	strh	ip, [r3], #8
   31be4:	e1530002 	cmp	r3, r2
   31be8:	1afffffc 	bne	31be0 <CKeyMap::ClearTable(unsigned char)+0x1c>
   31bec:	e3a00001 	mov	r0, #1
   31bf0:	e12fff1e 	bx	lr
   31bf4:	e3a00000 	mov	r0, #0
   31bf8:	e12fff1e 	bx	lr

00031bfc <CKeyMap::SetEntry(unsigned char, unsigned char, unsigned short)>:
   31bfc:	e6afc072 	sxtb	ip, r2
   31c00:	e35c0000 	cmp	ip, #0
   31c04:	c3a0c000 	movgt	ip, #0
   31c08:	d3a0c001 	movle	ip, #1
   31c0c:	e3510003 	cmp	r1, #3
   31c10:	838cc001 	orrhi	ip, ip, #1
   31c14:	e35c0000 	cmp	ip, #0
   31c18:	1a00000a 	bne	31c48 <CKeyMap::SetEntry(unsigned char, unsigned char, unsigned short)+0x4c>
   31c1c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   31c20:	e59fe028 	ldr	lr, [pc, #40]	; 31c50 <CKeyMap::SetEntry(unsigned char, unsigned char, unsigned short)+0x54>
   31c24:	e153000e 	cmp	r3, lr
   31c28:	8a000004 	bhi	31c40 <CKeyMap::SetEntry(unsigned char, unsigned char, unsigned short)+0x44>
   31c2c:	e0811102 	add	r1, r1, r2, lsl #2
   31c30:	e1a01081 	lsl	r1, r1, #1
   31c34:	e18030b1 	strh	r3, [r0, r1]
   31c38:	e3a00001 	mov	r0, #1
   31c3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   31c40:	e1a0000c 	mov	r0, ip
   31c44:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   31c48:	e3a00000 	mov	r0, #0
   31c4c:	e12fff1e 	bx	lr
   31c50:	00000132 	.word	0x00000132

00031c54 <CKeyMap::Translate(unsigned char, unsigned char)>:
   31c54:	e6af3071 	sxtb	r3, r1
   31c58:	e3530000 	cmp	r3, #0
   31c5c:	da000026 	ble	31cfc <CKeyMap::Translate(unsigned char, unsigned char)+0xa8>
   31c60:	e1a03181 	lsl	r3, r1, #3
   31c64:	e19030b3 	ldrh	r3, [r0, r3]
   31c68:	e3530f42 	cmp	r3, #264	; 0x108
   31c6c:	0a000025 	beq	31d08 <CKeyMap::Translate(unsigned char, unsigned char)+0xb4>
   31c70:	e243cf43 	sub	ip, r3, #268	; 0x10c
   31c74:	e24cc003 	sub	ip, ip, #3
   31c78:	e35c000b 	cmp	ip, #11
   31c7c:	8a000003 	bhi	31c90 <CKeyMap::Translate(unsigned char, unsigned char)+0x3c>
   31c80:	e3120004 	tst	r2, #4
   31c84:	12833027 	addne	r3, r3, #39	; 0x27
   31c88:	16ff3073 	uxthne	r3, r3
   31c8c:	1a00001b 	bne	31d00 <CKeyMap::Translate(unsigned char, unsigned char)+0xac>
   31c90:	e312008c 	tst	r2, #140	; 0x8c
   31c94:	1a000018 	bne	31cfc <CKeyMap::Translate(unsigned char, unsigned char)+0xa8>
   31c98:	e2413053 	sub	r3, r1, #83	; 0x53
   31c9c:	e3530010 	cmp	r3, #16
   31ca0:	9a00001e 	bls	31d20 <CKeyMap::Translate(unsigned char, unsigned char)+0xcc>
   31ca4:	e3120040 	tst	r2, #64	; 0x40
   31ca8:	e2022022 	and	r2, r2, #34	; 0x22
   31cac:	0a00002b 	beq	31d60 <CKeyMap::Translate(unsigned char, unsigned char)+0x10c>
   31cb0:	e3520000 	cmp	r2, #0
   31cb4:	03a02002 	moveq	r2, #2
   31cb8:	13a02003 	movne	r2, #3
   31cbc:	e0821101 	add	r1, r2, r1, lsl #2
   31cc0:	e1a01081 	lsl	r1, r1, #1
   31cc4:	e19030b1 	ldrh	r3, [r0, r1]
   31cc8:	e59f209c 	ldr	r2, [pc, #156]	; 31d6c <CKeyMap::Translate(unsigned char, unsigned char)+0x118>
   31ccc:	e1530002 	cmp	r3, r2
   31cd0:	0a00001c 	beq	31d48 <CKeyMap::Translate(unsigned char, unsigned char)+0xf4>
   31cd4:	e3530e12 	cmp	r3, #288	; 0x120
   31cd8:	0a000014 	beq	31d30 <CKeyMap::Translate(unsigned char, unsigned char)+0xdc>
   31cdc:	e3530f47 	cmp	r3, #284	; 0x11c
   31ce0:	1a000006 	bne	31d00 <CKeyMap::Translate(unsigned char, unsigned char)+0xac>
   31ce4:	e5902400 	ldr	r2, [r0, #1024]	; 0x400
   31ce8:	e2833017 	add	r3, r3, #23
   31cec:	e16f2f12 	clz	r2, r2
   31cf0:	e1a022a2 	lsr	r2, r2, #5
   31cf4:	e5802400 	str	r2, [r0, #1024]	; 0x400
   31cf8:	ea000000 	b	31d00 <CKeyMap::Translate(unsigned char, unsigned char)+0xac>
   31cfc:	e3a03000 	mov	r3, #0
   31d00:	e1a00003 	mov	r0, r3
   31d04:	e12fff1e 	bx	lr
   31d08:	e3120011 	tst	r2, #17
   31d0c:	0affffdf 	beq	31c90 <CKeyMap::Translate(unsigned char, unsigned char)+0x3c>
   31d10:	e3120004 	tst	r2, #4
   31d14:	0affffdd 	beq	31c90 <CKeyMap::Translate(unsigned char, unsigned char)+0x3c>
   31d18:	e59f3050 	ldr	r3, [pc, #80]	; 31d70 <CKeyMap::Translate(unsigned char, unsigned char)+0x11c>
   31d1c:	eafffff7 	b	31d00 <CKeyMap::Translate(unsigned char, unsigned char)+0xac>
   31d20:	e5902404 	ldr	r2, [r0, #1028]	; 0x404
   31d24:	e2922000 	adds	r2, r2, #0
   31d28:	13a02001 	movne	r2, #1
   31d2c:	eaffffe2 	b	31cbc <CKeyMap::Translate(unsigned char, unsigned char)+0x68>
   31d30:	e5902404 	ldr	r2, [r0, #1028]	; 0x404
   31d34:	e3a03f4d 	mov	r3, #308	; 0x134
   31d38:	e16f2f12 	clz	r2, r2
   31d3c:	e1a022a2 	lsr	r2, r2, #5
   31d40:	e5802404 	str	r2, [r0, #1028]	; 0x404
   31d44:	eaffffed 	b	31d00 <CKeyMap::Translate(unsigned char, unsigned char)+0xac>
   31d48:	e5902408 	ldr	r2, [r0, #1032]	; 0x408
   31d4c:	e59f3020 	ldr	r3, [pc, #32]	; 31d74 <CKeyMap::Translate(unsigned char, unsigned char)+0x120>
   31d50:	e16f2f12 	clz	r2, r2
   31d54:	e1a022a2 	lsr	r2, r2, #5
   31d58:	e5802408 	str	r2, [r0, #1032]	; 0x408
   31d5c:	eaffffe7 	b	31d00 <CKeyMap::Translate(unsigned char, unsigned char)+0xac>
   31d60:	e2922000 	adds	r2, r2, #0
   31d64:	13a02001 	movne	r2, #1
   31d68:	eaffffd3 	b	31cbc <CKeyMap::Translate(unsigned char, unsigned char)+0x68>
   31d6c:	0000011e 	.word	0x0000011e
   31d70:	00000142 	.word	0x00000142
   31d74:	00000135 	.word	0x00000135

00031d78 <CKeyMap::GetString(unsigned short, unsigned char, char*) const>:
   31d78:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   31d7c:	e241c021 	sub	ip, r1, #33	; 0x21
   31d80:	e59fe0a8 	ldr	lr, [pc, #168]	; 31e30 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0xb8>
   31d84:	e6ffc07c 	uxth	ip, ip
   31d88:	e15c000e 	cmp	ip, lr
   31d8c:	8a000025 	bhi	31e28 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0xb0>
   31d90:	e241cc01 	sub	ip, r1, #256	; 0x100
   31d94:	e6ffe07c 	uxth	lr, ip
   31d98:	e35e0032 	cmp	lr, #50	; 0x32
   31d9c:	9a00000c 	bls	31dd4 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x5c>
   31da0:	e3120011 	tst	r2, #17
   31da4:	e6af2071 	sxtb	r2, r1
   31da8:	0a00000c 	beq	31de0 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x68>
   31dac:	e6ef1071 	uxtb	r1, r1
   31db0:	e2412061 	sub	r2, r1, #97	; 0x61
   31db4:	e3520019 	cmp	r2, #25
   31db8:	8a00001a 	bhi	31e28 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0xb0>
   31dbc:	e3a02000 	mov	r2, #0
   31dc0:	e2411060 	sub	r1, r1, #96	; 0x60
   31dc4:	e5c31000 	strb	r1, [r3]
   31dc8:	e5c32001 	strb	r2, [r3, #1]
   31dcc:	e1a00003 	mov	r0, r3
   31dd0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   31dd4:	e59f3058 	ldr	r3, [pc, #88]	; 31e34 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0xbc>
   31dd8:	e793010c 	ldr	r0, [r3, ip, lsl #2]
   31ddc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   31de0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
   31de4:	e3500000 	cmp	r0, #0
   31de8:	0a000009 	beq	31e14 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x9c>
   31dec:	e6ef1071 	uxtb	r1, r1
   31df0:	e2410041 	sub	r0, r1, #65	; 0x41
   31df4:	e3500019 	cmp	r0, #25
   31df8:	92811020 	addls	r1, r1, #32
   31dfc:	96af2071 	sxtbls	r2, r1
   31e00:	9a000003 	bls	31e14 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x9c>
   31e04:	e2410061 	sub	r0, r1, #97	; 0x61
   31e08:	e3500019 	cmp	r0, #25
   31e0c:	92411020 	subls	r1, r1, #32
   31e10:	96af2071 	sxtbls	r2, r1
   31e14:	e3a01000 	mov	r1, #0
   31e18:	e5c32000 	strb	r2, [r3]
   31e1c:	e5c31001 	strb	r1, [r3, #1]
   31e20:	e1a00003 	mov	r0, r3
   31e24:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   31e28:	e3a00000 	mov	r0, #0
   31e2c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   31e30:	00000111 	.word	0x00000111
   31e34:	00058f28 	.word	0x00058f28

00031e38 <CKeyMap::GetLEDStatus() const>:
   31e38:	e5903400 	ldr	r3, [r0, #1024]	; 0x400
   31e3c:	e5902404 	ldr	r2, [r0, #1028]	; 0x404
   31e40:	e3530000 	cmp	r3, #0
   31e44:	13a03002 	movne	r3, #2
   31e48:	03a03000 	moveq	r3, #0
   31e4c:	e3520000 	cmp	r2, #0
   31e50:	e5902408 	ldr	r2, [r0, #1032]	; 0x408
   31e54:	13833001 	orrne	r3, r3, #1
   31e58:	e3520000 	cmp	r2, #0
   31e5c:	13833004 	orrne	r3, r3, #4
   31e60:	e1a00003 	mov	r0, r3
   31e64:	e12fff1e 	bx	lr

00031e68 <CKeyMap::LookupDefaultMap(char const*)>:
   31e68:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31e6c:	e59f4078 	ldr	r4, [pc, #120]	; 31eec <CKeyMap::LookupDefaultMap(char const*)+0x84>
   31e70:	e59430cc 	ldr	r3, [r4, #204]	; 0xcc
   31e74:	e3530000 	cmp	r3, #0
   31e78:	0a000016 	beq	31ed8 <CKeyMap::LookupDefaultMap(char const*)+0x70>
   31e7c:	e1a05000 	mov	r5, r0
   31e80:	e3a06000 	mov	r6, #0
   31e84:	e59f9064 	ldr	r9, [pc, #100]	; 31ef0 <CKeyMap::LookupDefaultMap(char const*)+0x88>
   31e88:	e59f8064 	ldr	r8, [pc, #100]	; 31ef4 <CKeyMap::LookupDefaultMap(char const*)+0x8c>
   31e8c:	e59f7064 	ldr	r7, [pc, #100]	; 31ef8 <CKeyMap::LookupDefaultMap(char const*)+0x90>
   31e90:	e28440cc 	add	r4, r4, #204	; 0xcc
   31e94:	ea000008 	b	31ebc <CKeyMap::LookupDefaultMap(char const*)+0x54>
   31e98:	e1a01005 	mov	r1, r5
   31e9c:	e4940004 	ldr	r0, [r4], #4
   31ea0:	eb000cdd 	bl	3521c <strcmp>
   31ea4:	e3500000 	cmp	r0, #0
   31ea8:	0a00000c 	beq	31ee0 <CKeyMap::LookupDefaultMap(char const*)+0x78>
   31eac:	e5943000 	ldr	r3, [r4]
   31eb0:	e2866001 	add	r6, r6, #1
   31eb4:	e3530000 	cmp	r3, #0
   31eb8:	0a000006 	beq	31ed8 <CKeyMap::LookupDefaultMap(char const*)+0x70>
   31ebc:	e3550000 	cmp	r5, #0
   31ec0:	1afffff4 	bne	31e98 <CKeyMap::LookupDefaultMap(char const*)+0x30>
   31ec4:	e1a02009 	mov	r2, r9
   31ec8:	e1a01008 	mov	r1, r8
   31ecc:	e1a00007 	mov	r0, r7
   31ed0:	eb00142a 	bl	36f80 <assertion_failed>
   31ed4:	eaffffef 	b	31e98 <CKeyMap::LookupDefaultMap(char const*)+0x30>
   31ed8:	e3a00000 	mov	r0, #0
   31edc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31ee0:	e59f0014 	ldr	r0, [pc, #20]	; 31efc <CKeyMap::LookupDefaultMap(char const*)+0x94>
   31ee4:	e0800506 	add	r0, r0, r6, lsl #10
   31ee8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31eec:	00058f28 	.word	0x00058f28
   31ef0:	0000013f 	.word	0x0000013f
   31ef4:	0004d774 	.word	0x0004d774
   31ef8:	0004d780 	.word	0x0004d780
   31efc:	0004bf74 	.word	0x0004bf74

00031f00 <CKeyMap::CKeyMap()>:
   31f00:	e3a03000 	mov	r3, #0
   31f04:	e3a02001 	mov	r2, #1
   31f08:	e92d4070 	push	{r4, r5, r6, lr}
   31f0c:	e5802404 	str	r2, [r0, #1028]	; 0x404
   31f10:	e5803400 	str	r3, [r0, #1024]	; 0x400
   31f14:	e5803408 	str	r3, [r0, #1032]	; 0x408
   31f18:	e1a04000 	mov	r4, r0
   31f1c:	eb000e03 	bl	35730 <CKernelOptions::Get()>
   31f20:	eb000dfa 	bl	35710 <CKernelOptions::GetKeyMap() const>
   31f24:	e2505000 	subs	r5, r0, #0
   31f28:	0a000012 	beq	31f78 <CKeyMap::CKeyMap()+0x78>
   31f2c:	e1a00005 	mov	r0, r5
   31f30:	ebffffcc 	bl	31e68 <CKeyMap::LookupDefaultMap(char const*)>
   31f34:	e2501000 	subs	r1, r0, #0
   31f38:	0a000004 	beq	31f50 <CKeyMap::CKeyMap()+0x50>
   31f3c:	e3a02b01 	mov	r2, #1024	; 0x400
   31f40:	e1a00004 	mov	r0, r4
   31f44:	eb000da3 	bl	355d8 <memcpy>
   31f48:	e1a00004 	mov	r0, r4
   31f4c:	e8bd8070 	pop	{r4, r5, r6, pc}
   31f50:	e59f0034 	ldr	r0, [pc, #52]	; 31f8c <CKeyMap::CKeyMap()+0x8c>
   31f54:	ebffffc3 	bl	31e68 <CKeyMap::LookupDefaultMap(char const*)>
   31f58:	e2501000 	subs	r1, r0, #0
   31f5c:	1afffff6 	bne	31f3c <CKeyMap::CKeyMap()+0x3c>
   31f60:	e59f1028 	ldr	r1, [pc, #40]	; 31f90 <CKeyMap::CKeyMap()+0x90>
   31f64:	e3a02080 	mov	r2, #128	; 0x80
   31f68:	e59f0024 	ldr	r0, [pc, #36]	; 31f94 <CKeyMap::CKeyMap()+0x94>
   31f6c:	eb001403 	bl	36f80 <assertion_failed>
   31f70:	e59f1020 	ldr	r1, [pc, #32]	; 31f98 <CKeyMap::CKeyMap()+0x98>
   31f74:	eafffff0 	b	31f3c <CKeyMap::CKeyMap()+0x3c>
   31f78:	e3a0207a 	mov	r2, #122	; 0x7a
   31f7c:	e59f100c 	ldr	r1, [pc, #12]	; 31f90 <CKeyMap::CKeyMap()+0x90>
   31f80:	e59f0014 	ldr	r0, [pc, #20]	; 31f9c <CKeyMap::CKeyMap()+0x9c>
   31f84:	eb0013fd 	bl	36f80 <assertion_failed>
   31f88:	eaffffe7 	b	31f2c <CKeyMap::CKeyMap()+0x2c>
   31f8c:	0004d790 	.word	0x0004d790
   31f90:	0004d774 	.word	0x0004d774
   31f94:	0004d794 	.word	0x0004d794
   31f98:	0004bf74 	.word	0x0004bf74
   31f9c:	0004d780 	.word	0x0004d780

00031fa0 <CMouseBehaviour::CMouseBehaviour()>:
   31fa0:	e3a02000 	mov	r2, #0
   31fa4:	e5802000 	str	r2, [r0]
   31fa8:	e5802004 	str	r2, [r0, #4]
   31fac:	e5802008 	str	r2, [r0, #8]
   31fb0:	e580200c 	str	r2, [r0, #12]
   31fb4:	e5802010 	str	r2, [r0, #16]
   31fb8:	e5802014 	str	r2, [r0, #20]
   31fbc:	e5802018 	str	r2, [r0, #24]
   31fc0:	e12fff1e 	bx	lr

00031fc4 <CMouseBehaviour::~CMouseBehaviour()>:
   31fc4:	e12fff1e 	bx	lr

00031fc8 <CMouseBehaviour::Setup(unsigned int, unsigned int)>:
   31fc8:	e92d4070 	push	{r4, r5, r6, lr}
   31fcc:	e5903000 	ldr	r3, [r0]
   31fd0:	e24dd038 	sub	sp, sp, #56	; 0x38
   31fd4:	e3530000 	cmp	r3, #0
   31fd8:	e1a04000 	mov	r4, r0
   31fdc:	e1a06001 	mov	r6, r1
   31fe0:	e1a05002 	mov	r5, r2
   31fe4:	1a00002a 	bne	32094 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0xcc>
   31fe8:	e3560000 	cmp	r6, #0
   31fec:	e5846000 	str	r6, [r4]
   31ff0:	0a00002e 	beq	320b0 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0xe8>
   31ff4:	e5943004 	ldr	r3, [r4, #4]
   31ff8:	e3530000 	cmp	r3, #0
   31ffc:	1a000032 	bne	320cc <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x104>
   32000:	e3550000 	cmp	r5, #0
   32004:	e5845004 	str	r5, [r4, #4]
   32008:	0a000036 	beq	320e8 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x120>
   3200c:	e5943000 	ldr	r3, [r4]
   32010:	e2855001 	add	r5, r5, #1
   32014:	e2833001 	add	r3, r3, #1
   32018:	e1a030a3 	lsr	r3, r3, #1
   3201c:	e1a050a5 	lsr	r5, r5, #1
   32020:	e584500c 	str	r5, [r4, #12]
   32024:	e5843008 	str	r3, [r4, #8]
   32028:	e28d000c 	add	r0, sp, #12
   3202c:	eb000404 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   32030:	e3a01000 	mov	r1, #0
   32034:	e3a02010 	mov	r2, #16
   32038:	e3a03018 	mov	r3, #24
   3203c:	e59fc0bc 	ldr	ip, [pc, #188]	; 32100 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x138>
   32040:	e58d3000 	str	r3, [sp]
   32044:	e58d2020 	str	r2, [sp, #32]
   32048:	e3a03024 	mov	r3, #36	; 0x24
   3204c:	e58d2024 	str	r2, [sp, #36]	; 0x24
   32050:	e58d1028 	str	r1, [sp, #40]	; 0x28
   32054:	e28d2014 	add	r2, sp, #20
   32058:	e58d1030 	str	r1, [sp, #48]	; 0x30
   3205c:	e58d1034 	str	r1, [sp, #52]	; 0x34
   32060:	e28d000c 	add	r0, sp, #12
   32064:	e59f1098 	ldr	r1, [pc, #152]	; 32104 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x13c>
   32068:	e58dc02c 	str	ip, [sp, #44]	; 0x2c
   3206c:	eb00043b 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   32070:	e2504000 	subs	r4, r0, #0
   32074:	159d4020 	ldrne	r4, [sp, #32]
   32078:	e28d000c 	add	r0, sp, #12
   3207c:	116f4f14 	clzne	r4, r4
   32080:	11a042a4 	lsrne	r4, r4, #5
   32084:	eb0003f4 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   32088:	e1a00004 	mov	r0, r4
   3208c:	e28dd038 	add	sp, sp, #56	; 0x38
   32090:	e8bd8070 	pop	{r4, r5, r6, pc}
   32094:	e3a0204b 	mov	r2, #75	; 0x4b
   32098:	e59f1068 	ldr	r1, [pc, #104]	; 32108 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x140>
   3209c:	e59f0068 	ldr	r0, [pc, #104]	; 3210c <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x144>
   320a0:	eb0013b6 	bl	36f80 <assertion_failed>
   320a4:	e3560000 	cmp	r6, #0
   320a8:	e5846000 	str	r6, [r4]
   320ac:	1affffd0 	bne	31ff4 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x2c>
   320b0:	e3a0204d 	mov	r2, #77	; 0x4d
   320b4:	e59f104c 	ldr	r1, [pc, #76]	; 32108 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x140>
   320b8:	e59f0050 	ldr	r0, [pc, #80]	; 32110 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x148>
   320bc:	eb0013af 	bl	36f80 <assertion_failed>
   320c0:	e5943004 	ldr	r3, [r4, #4]
   320c4:	e3530000 	cmp	r3, #0
   320c8:	0affffcc 	beq	32000 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x38>
   320cc:	e3a0204f 	mov	r2, #79	; 0x4f
   320d0:	e59f1030 	ldr	r1, [pc, #48]	; 32108 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x140>
   320d4:	e59f0038 	ldr	r0, [pc, #56]	; 32114 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x14c>
   320d8:	eb0013a8 	bl	36f80 <assertion_failed>
   320dc:	e3550000 	cmp	r5, #0
   320e0:	e5845004 	str	r5, [r4, #4]
   320e4:	1affffc8 	bne	3200c <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x44>
   320e8:	e3a02051 	mov	r2, #81	; 0x51
   320ec:	e59f1014 	ldr	r1, [pc, #20]	; 32108 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x140>
   320f0:	e59f0020 	ldr	r0, [pc, #32]	; 32118 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x150>
   320f4:	eb0013a1 	bl	36f80 <assertion_failed>
   320f8:	e5945004 	ldr	r5, [r4, #4]
   320fc:	eaffffc2 	b	3200c <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x44>
   32100:	4004d860 	.word	0x4004d860
   32104:	00008010 	.word	0x00008010
   32108:	0004dc60 	.word	0x0004dc60
   3210c:	0004dc74 	.word	0x0004dc74
   32110:	0004dc88 	.word	0x0004dc88
   32114:	0004dc9c 	.word	0x0004dc9c
   32118:	0004dcb4 	.word	0x0004dcb4

0003211c <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))>:
   3211c:	e5903018 	ldr	r3, [r0, #24]
   32120:	e92d4070 	push	{r4, r5, r6, lr}
   32124:	e3530000 	cmp	r3, #0
   32128:	e1a04000 	mov	r4, r0
   3212c:	e1a05001 	mov	r5, r1
   32130:	0a000003 	beq	32144 <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))+0x28>
   32134:	e3a0206d 	mov	r2, #109	; 0x6d
   32138:	e59f1024 	ldr	r1, [pc, #36]	; 32164 <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))+0x48>
   3213c:	e59f0024 	ldr	r0, [pc, #36]	; 32168 <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))+0x4c>
   32140:	eb00138e 	bl	36f80 <assertion_failed>
   32144:	e3550000 	cmp	r5, #0
   32148:	e5845018 	str	r5, [r4, #24]
   3214c:	18bd8070 	popne	{r4, r5, r6, pc}
   32150:	e3a0206f 	mov	r2, #111	; 0x6f
   32154:	e8bd4070 	pop	{r4, r5, r6, lr}
   32158:	e59f1004 	ldr	r1, [pc, #4]	; 32164 <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))+0x48>
   3215c:	e59f0008 	ldr	r0, [pc, #8]	; 3216c <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))+0x50>
   32160:	ea001386 	b	36f80 <assertion_failed>
   32164:	0004dc60 	.word	0x0004dc60
   32168:	0004dcc8 	.word	0x0004dcc8
   3216c:	0004b914 	.word	0x0004b914

00032170 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, int)>:
   32170:	e92d4070 	push	{r4, r5, r6, lr}
   32174:	e1a04002 	mov	r4, r2
   32178:	e24dd030 	sub	sp, sp, #48	; 0x30
   3217c:	e1a06000 	mov	r6, r0
   32180:	e28d000c 	add	r0, sp, #12
   32184:	e1a05001 	mov	r5, r1
   32188:	eb0003ad 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3218c:	e2944000 	adds	r4, r4, #0
   32190:	e3a03010 	mov	r3, #16
   32194:	e3a0c001 	mov	ip, #1
   32198:	13a04001 	movne	r4, #1
   3219c:	e58d3000 	str	r3, [sp]
   321a0:	e28d2014 	add	r2, sp, #20
   321a4:	e3a0301c 	mov	r3, #28
   321a8:	e59f1038 	ldr	r1, [pc, #56]	; 321e8 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, int)+0x78>
   321ac:	e28d000c 	add	r0, sp, #12
   321b0:	e58d4020 	str	r4, [sp, #32]
   321b4:	e58dc02c 	str	ip, [sp, #44]	; 0x2c
   321b8:	e58d6024 	str	r6, [sp, #36]	; 0x24
   321bc:	e58d5028 	str	r5, [sp, #40]	; 0x28
   321c0:	eb0003e6 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   321c4:	e2504000 	subs	r4, r0, #0
   321c8:	159d4020 	ldrne	r4, [sp, #32]
   321cc:	e28d000c 	add	r0, sp, #12
   321d0:	116f4f14 	clzne	r4, r4
   321d4:	11a042a4 	lsrne	r4, r4, #5
   321d8:	eb00039f 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   321dc:	e1a00004 	mov	r0, r4
   321e0:	e28dd030 	add	sp, sp, #48	; 0x30
   321e4:	e8bd8070 	pop	{r4, r5, r6, pc}
   321e8:	00008011 	.word	0x00008011

000321ec <CMouseBehaviour::SetCursor(unsigned int, unsigned int)>:
   321ec:	e5903000 	ldr	r3, [r0]
   321f0:	e92d4070 	push	{r4, r5, r6, lr}
   321f4:	e3530000 	cmp	r3, #0
   321f8:	e1a04000 	mov	r4, r0
   321fc:	e1a05001 	mov	r5, r1
   32200:	e1a06002 	mov	r6, r2
   32204:	0a000016 	beq	32264 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x78>
   32208:	e5943004 	ldr	r3, [r4, #4]
   3220c:	e3530000 	cmp	r3, #0
   32210:	0a00000e 	beq	32250 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x64>
   32214:	e5943000 	ldr	r3, [r4]
   32218:	e1530005 	cmp	r3, r5
   3221c:	9a000009 	bls	32248 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x5c>
   32220:	e5943004 	ldr	r3, [r4, #4]
   32224:	e1530006 	cmp	r3, r6
   32228:	9a000006 	bls	32248 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x5c>
   3222c:	e5943010 	ldr	r3, [r4, #16]
   32230:	e5845008 	str	r5, [r4, #8]
   32234:	e3530000 	cmp	r3, #0
   32238:	e584600c 	str	r6, [r4, #12]
   3223c:	1a00000d 	bne	32278 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x8c>
   32240:	e3a00001 	mov	r0, #1
   32244:	e8bd8070 	pop	{r4, r5, r6, pc}
   32248:	e3a00000 	mov	r0, #0
   3224c:	e8bd8070 	pop	{r4, r5, r6, pc}
   32250:	e3a02075 	mov	r2, #117	; 0x75
   32254:	e59f1030 	ldr	r1, [pc, #48]	; 3228c <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0xa0>
   32258:	e59f0030 	ldr	r0, [pc, #48]	; 32290 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0xa4>
   3225c:	eb001347 	bl	36f80 <assertion_failed>
   32260:	eaffffeb 	b	32214 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x28>
   32264:	e3a02074 	mov	r2, #116	; 0x74
   32268:	e59f101c 	ldr	r1, [pc, #28]	; 3228c <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0xa0>
   3226c:	e59f0020 	ldr	r0, [pc, #32]	; 32294 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0xa8>
   32270:	eb001342 	bl	36f80 <assertion_failed>
   32274:	eaffffe3 	b	32208 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x1c>
   32278:	e1a01006 	mov	r1, r6
   3227c:	e1a00005 	mov	r0, r5
   32280:	e8bd4070 	pop	{r4, r5, r6, lr}
   32284:	e3a02001 	mov	r2, #1
   32288:	eaffffb8 	b	32170 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, int)>
   3228c:	0004dc60 	.word	0x0004dc60
   32290:	0004dcb4 	.word	0x0004dcb4
   32294:	0004dc88 	.word	0x0004dc88

00032298 <CMouseBehaviour::ShowCursor(int)>:
   32298:	e5902008 	ldr	r2, [r0, #8]
   3229c:	e5903000 	ldr	r3, [r0]
   322a0:	e92d4070 	push	{r4, r5, r6, lr}
   322a4:	e1520003 	cmp	r2, r3
   322a8:	e5905010 	ldr	r5, [r0, #16]
   322ac:	e1a04000 	mov	r4, r0
   322b0:	e5801010 	str	r1, [r0, #16]
   322b4:	2a00000d 	bcs	322f0 <CMouseBehaviour::ShowCursor(int)+0x58>
   322b8:	e594100c 	ldr	r1, [r4, #12]
   322bc:	e5943004 	ldr	r3, [r4, #4]
   322c0:	e1510003 	cmp	r1, r3
   322c4:	3a000004 	bcc	322dc <CMouseBehaviour::ShowCursor(int)+0x44>
   322c8:	e59f1034 	ldr	r1, [pc, #52]	; 32304 <CMouseBehaviour::ShowCursor(int)+0x6c>
   322cc:	e3a0208d 	mov	r2, #141	; 0x8d
   322d0:	e59f0030 	ldr	r0, [pc, #48]	; 32308 <CMouseBehaviour::ShowCursor(int)+0x70>
   322d4:	eb001329 	bl	36f80 <assertion_failed>
   322d8:	e594100c 	ldr	r1, [r4, #12]
   322dc:	e5942010 	ldr	r2, [r4, #16]
   322e0:	e5940008 	ldr	r0, [r4, #8]
   322e4:	ebffffa1 	bl	32170 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, int)>
   322e8:	e1a00005 	mov	r0, r5
   322ec:	e8bd8070 	pop	{r4, r5, r6, pc}
   322f0:	e3a0208c 	mov	r2, #140	; 0x8c
   322f4:	e59f1008 	ldr	r1, [pc, #8]	; 32304 <CMouseBehaviour::ShowCursor(int)+0x6c>
   322f8:	e59f000c 	ldr	r0, [pc, #12]	; 3230c <CMouseBehaviour::ShowCursor(int)+0x74>
   322fc:	eb00131f 	bl	36f80 <assertion_failed>
   32300:	eaffffec 	b	322b8 <CMouseBehaviour::ShowCursor(int)+0x20>
   32304:	0004dc60 	.word	0x0004dc60
   32308:	0004dcfc 	.word	0x0004dcfc
   3230c:	0004dce0 	.word	0x0004dce0

00032310 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)>:
   32310:	e590c000 	ldr	ip, [r0]
   32314:	e35c0000 	cmp	ip, #0
   32318:	012fff1e 	bxeq	lr
   3231c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32320:	e590e004 	ldr	lr, [r0, #4]
   32324:	e35e0000 	cmp	lr, #0
   32328:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3232c:	e1a04000 	mov	r4, r0
   32330:	e59f8158 	ldr	r8, [pc, #344]	; 32490 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x180>
   32334:	e0822182 	add	r2, r2, r2, lsl #3
   32338:	e1a02082 	lsl	r2, r2, #1
   3233c:	e0cba892 	smull	sl, fp, r2, r8
   32340:	e0833183 	add	r3, r3, r3, lsl #3
   32344:	e1a06083 	lsl	r6, r3, #1
   32348:	e0c98896 	smull	r8, r9, r6, r8
   3234c:	e1a00fc2 	asr	r0, r2, #31
   32350:	e5947008 	ldr	r7, [r4, #8]
   32354:	e060014b 	rsb	r0, r0, fp, asr #2
   32358:	e0800007 	add	r0, r0, r7
   3235c:	e1a06fc6 	asr	r6, r6, #31
   32360:	e594200c 	ldr	r2, [r4, #12]
   32364:	e0666149 	rsb	r6, r6, r9, asr #2
   32368:	e15c0000 	cmp	ip, r0
   3236c:	e1a05001 	mov	r5, r1
   32370:	e0823006 	add	r3, r2, r6
   32374:	9a000035 	bls	32450 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x140>
   32378:	e15e0003 	cmp	lr, r3
   3237c:	e584300c 	str	r3, [r4, #12]
   32380:	e5840008 	str	r0, [r4, #8]
   32384:	8a00003c 	bhi	3247c <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x16c>
   32388:	e1500007 	cmp	r0, r7
   3238c:	e584200c 	str	r2, [r4, #12]
   32390:	0a000009 	beq	323bc <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0xac>
   32394:	e5943010 	ldr	r3, [r4, #16]
   32398:	e3530000 	cmp	r3, #0
   3239c:	1a000032 	bne	3246c <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x15c>
   323a0:	e5946018 	ldr	r6, [r4, #24]
   323a4:	e3560000 	cmp	r6, #0
   323a8:	0a000026 	beq	32448 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x138>
   323ac:	e1c420d8 	ldrd	r2, [r4, #8]
   323b0:	e1a01005 	mov	r1, r5
   323b4:	e3a00000 	mov	r0, #0
   323b8:	e12fff36 	blx	r6
   323bc:	e5943014 	ldr	r3, [r4, #20]
   323c0:	e1530005 	cmp	r3, r5
   323c4:	0a00001f 	beq	32448 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x138>
   323c8:	e5942018 	ldr	r2, [r4, #24]
   323cc:	e3520000 	cmp	r2, #0
   323d0:	0a00001c 	beq	32448 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x138>
   323d4:	e3a06000 	mov	r6, #0
   323d8:	e3a07001 	mov	r7, #1
   323dc:	e1a01617 	lsl	r1, r7, r6
   323e0:	e1110003 	tst	r1, r3
   323e4:	e0053001 	and	r3, r5, r1
   323e8:	0a00000d 	beq	32424 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x114>
   323ec:	e3530000 	cmp	r3, #0
   323f0:	1a000003 	bne	32404 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0xf4>
   323f4:	e1c420d8 	ldrd	r2, [r4, #8]
   323f8:	e5948018 	ldr	r8, [r4, #24]
   323fc:	e3a00002 	mov	r0, #2
   32400:	e12fff38 	blx	r8
   32404:	e2866001 	add	r6, r6, #1
   32408:	e3560003 	cmp	r6, #3
   3240c:	0a00000d 	beq	32448 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x138>
   32410:	e5943014 	ldr	r3, [r4, #20]
   32414:	e1a01617 	lsl	r1, r7, r6
   32418:	e1110003 	tst	r1, r3
   3241c:	e0053001 	and	r3, r5, r1
   32420:	1afffff1 	bne	323ec <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0xdc>
   32424:	e3530000 	cmp	r3, #0
   32428:	0afffff5 	beq	32404 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0xf4>
   3242c:	e1c420d8 	ldrd	r2, [r4, #8]
   32430:	e5948018 	ldr	r8, [r4, #24]
   32434:	e3a00001 	mov	r0, #1
   32438:	e2866001 	add	r6, r6, #1
   3243c:	e12fff38 	blx	r8
   32440:	e3560003 	cmp	r6, #3
   32444:	1afffff1 	bne	32410 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x100>
   32448:	e5845014 	str	r5, [r4, #20]
   3244c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32450:	e15e0003 	cmp	lr, r3
   32454:	e584300c 	str	r3, [r4, #12]
   32458:	9a00000a 	bls	32488 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x178>
   3245c:	e1520003 	cmp	r2, r3
   32460:	11a00007 	movne	r0, r7
   32464:	1affffca 	bne	32394 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x84>
   32468:	eaffffd3 	b	323bc <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0xac>
   3246c:	e3a02001 	mov	r2, #1
   32470:	e594100c 	ldr	r1, [r4, #12]
   32474:	ebffff3d 	bl	32170 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, int)>
   32478:	eaffffc8 	b	323a0 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x90>
   3247c:	e1500007 	cmp	r0, r7
   32480:	1affffc3 	bne	32394 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x84>
   32484:	eafffff4 	b	3245c <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0x14c>
   32488:	e584200c 	str	r2, [r4, #12]
   3248c:	eaffffca 	b	323bc <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)+0xac>
   32490:	66666667 	.word	0x66666667

00032494 <CTouchScreenDevice::~CTouchScreenDevice()>:
   32494:	e3a03000 	mov	r3, #0
   32498:	e92d4010 	push	{r4, lr}
   3249c:	e1a04000 	mov	r4, r0
   324a0:	e59f2010 	ldr	r2, [pc, #16]	; 324b8 <CTouchScreenDevice::~CTouchScreenDevice()+0x24>
   324a4:	e5803008 	str	r3, [r0, #8]
   324a8:	e1c020f0 	strd	r2, [r0]
   324ac:	eb000c60 	bl	35634 <CDevice::~CDevice()>
   324b0:	e1a00004 	mov	r0, r4
   324b4:	e8bd8010 	pop	{r4, pc}
   324b8:	0004dd20 	.word	0x0004dd20

000324bc <CTouchScreenDevice::~CTouchScreenDevice()>:
   324bc:	e3a03000 	mov	r3, #0
   324c0:	e92d4010 	push	{r4, lr}
   324c4:	e1a04000 	mov	r4, r0
   324c8:	e59f201c 	ldr	r2, [pc, #28]	; 324ec <CTouchScreenDevice::~CTouchScreenDevice()+0x30>
   324cc:	e5803008 	str	r3, [r0, #8]
   324d0:	e1c020f0 	strd	r2, [r0]
   324d4:	eb000c56 	bl	35634 <CDevice::~CDevice()>
   324d8:	e1a00004 	mov	r0, r4
   324dc:	e3a01060 	mov	r1, #96	; 0x60
   324e0:	eb000790 	bl	34328 <operator delete(void*, unsigned int)>
   324e4:	e1a00004 	mov	r0, r4
   324e8:	e8bd8010 	pop	{r4, pc}
   324ec:	0004dd20 	.word	0x0004dd20

000324f0 <CTouchScreenDevice::CTouchScreenDevice()>:
   324f0:	e92d4010 	push	{r4, lr}
   324f4:	e1a04000 	mov	r4, r0
   324f8:	eb000c59 	bl	35664 <CDevice::CDevice()>
   324fc:	e3a03000 	mov	r3, #0
   32500:	e59f2010 	ldr	r2, [pc, #16]	; 32518 <CTouchScreenDevice::CTouchScreenDevice()+0x28>
   32504:	e5843008 	str	r3, [r4, #8]
   32508:	e1c420f0 	strd	r2, [r4]
   3250c:	e584300c 	str	r3, [r4, #12]
   32510:	e1a00004 	mov	r0, r4
   32514:	e8bd8010 	pop	{r4, pc}
   32518:	0004dd20 	.word	0x0004dd20

0003251c <CTouchScreenDevice::Initialize()>:
   3251c:	e92d4030 	push	{r4, r5, lr}
   32520:	e5903004 	ldr	r3, [r0, #4]
   32524:	e24dd024 	sub	sp, sp, #36	; 0x24
   32528:	e3530000 	cmp	r3, #0
   3252c:	e1a05000 	mov	r5, r0
   32530:	0a000003 	beq	32544 <CTouchScreenDevice::Initialize()+0x28>
   32534:	e3a02039 	mov	r2, #57	; 0x39
   32538:	e59f10d0 	ldr	r1, [pc, #208]	; 32610 <CTouchScreenDevice::Initialize()+0xf4>
   3253c:	e59f00d0 	ldr	r0, [pc, #208]	; 32614 <CTouchScreenDevice::Initialize()+0xf8>
   32540:	eb00128e 	bl	36f80 <assertion_failed>
   32544:	e28d0008 	add	r0, sp, #8
   32548:	eb0002bd 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3254c:	e3a03000 	mov	r3, #0
   32550:	e58d3000 	str	r3, [sp]
   32554:	e3a03010 	mov	r3, #16
   32558:	e28d0008 	add	r0, sp, #8
   3255c:	e08d2003 	add	r2, sp, r3
   32560:	e59f10b0 	ldr	r1, [pc, #176]	; 32618 <CTouchScreenDevice::Initialize()+0xfc>
   32564:	eb0002fd 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   32568:	e2504000 	subs	r4, r0, #0
   3256c:	0a00001b 	beq	325e0 <CTouchScreenDevice::Initialize()+0xc4>
   32570:	e59d401c 	ldr	r4, [sp, #28]
   32574:	e3540000 	cmp	r4, #0
   32578:	0a000012 	beq	325c8 <CTouchScreenDevice::Initialize()+0xac>
   3257c:	e3c44103 	bic	r4, r4, #-1073741824	; 0xc0000000
   32580:	e3540000 	cmp	r4, #0
   32584:	e1a03004 	mov	r3, r4
   32588:	e58d401c 	str	r4, [sp, #28]
   3258c:	e5854004 	str	r4, [r5, #4]
   32590:	0a000018 	beq	325f8 <CTouchScreenDevice::Initialize()+0xdc>
   32594:	e3a02063 	mov	r2, #99	; 0x63
   32598:	e5c32002 	strb	r2, [r3, #2]
   3259c:	eb0013c7 	bl	374c0 <CDeviceNameService::Get()>
   325a0:	e1a02005 	mov	r2, r5
   325a4:	e3a03000 	mov	r3, #0
   325a8:	e59f106c 	ldr	r1, [pc, #108]	; 3261c <CTouchScreenDevice::Initialize()+0x100>
   325ac:	eb001352 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   325b0:	e3a04001 	mov	r4, #1
   325b4:	e28d0008 	add	r0, sp, #8
   325b8:	eb0002a7 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   325bc:	e1a00004 	mov	r0, r4
   325c0:	e28dd024 	add	sp, sp, #36	; 0x24
   325c4:	e8bd8030 	pop	{r4, r5, pc}
   325c8:	eb0013e8 	bl	37570 <CLogger::Get()>
   325cc:	e59f304c 	ldr	r3, [pc, #76]	; 32620 <CTouchScreenDevice::Initialize()+0x104>
   325d0:	e3a02001 	mov	r2, #1
   325d4:	e59f1048 	ldr	r1, [pc, #72]	; 32624 <CTouchScreenDevice::Initialize()+0x108>
   325d8:	eb0014c4 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   325dc:	eafffff4 	b	325b4 <CTouchScreenDevice::Initialize()+0x98>
   325e0:	eb0013e2 	bl	37570 <CLogger::Get()>
   325e4:	e59f303c 	ldr	r3, [pc, #60]	; 32628 <CTouchScreenDevice::Initialize()+0x10c>
   325e8:	e3a02001 	mov	r2, #1
   325ec:	e59f1030 	ldr	r1, [pc, #48]	; 32624 <CTouchScreenDevice::Initialize()+0x108>
   325f0:	eb0014be 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   325f4:	eaffffee 	b	325b4 <CTouchScreenDevice::Initialize()+0x98>
   325f8:	e3a0204d 	mov	r2, #77	; 0x4d
   325fc:	e59f100c 	ldr	r1, [pc, #12]	; 32610 <CTouchScreenDevice::Initialize()+0xf4>
   32600:	e59f0024 	ldr	r0, [pc, #36]	; 3262c <CTouchScreenDevice::Initialize()+0x110>
   32604:	eb00125d 	bl	36f80 <assertion_failed>
   32608:	e5953004 	ldr	r3, [r5, #4]
   3260c:	eaffffe0 	b	32594 <CTouchScreenDevice::Initialize()+0x78>
   32610:	0004dd3c 	.word	0x0004dd3c
   32614:	0004dd4c 	.word	0x0004dd4c
   32618:	0004000f 	.word	0x0004000f
   3261c:	0004a084 	.word	0x0004a084
   32620:	0004dd7c 	.word	0x0004dd7c
   32624:	0004dd34 	.word	0x0004dd34
   32628:	0004dd64 	.word	0x0004dd64
   3262c:	0004dd98 	.word	0x0004dd98

00032630 <CTouchScreenDevice::Update()>:
   32630:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32634:	e5901004 	ldr	r1, [r0, #4]
   32638:	e24dd04c 	sub	sp, sp, #76	; 0x4c
   3263c:	e3510000 	cmp	r1, #0
   32640:	e1a07000 	mov	r7, r0
   32644:	0a000071 	beq	32810 <CTouchScreenDevice::Update()+0x1e0>
   32648:	e3a0203f 	mov	r2, #63	; 0x3f
   3264c:	e28d0008 	add	r0, sp, #8
   32650:	eb000be0 	bl	355d8 <memcpy>
   32654:	e3a02063 	mov	r2, #99	; 0x63
   32658:	e5973004 	ldr	r3, [r7, #4]
   3265c:	e5c32002 	strb	r2, [r3, #2]
   32660:	e5dd800a 	ldrb	r8, [sp, #10]
   32664:	e1580002 	cmp	r8, r2
   32668:	0a000016 	beq	326c8 <CTouchScreenDevice::Update()+0x98>
   3266c:	e3580000 	cmp	r8, #0
   32670:	1a000016 	bne	326d0 <CTouchScreenDevice::Update()+0xa0>
   32674:	e597500c 	ldr	r5, [r7, #12]
   32678:	e3550000 	cmp	r5, #0
   3267c:	0a000011 	beq	326c8 <CTouchScreenDevice::Update()+0x98>
   32680:	e3a04000 	mov	r4, #0
   32684:	e3a09001 	mov	r9, #1
   32688:	e1a03419 	lsl	r3, r9, r4
   3268c:	e1130005 	tst	r3, r5
   32690:	0a000008 	beq	326b8 <CTouchScreenDevice::Update()+0x88>
   32694:	e5976008 	ldr	r6, [r7, #8]
   32698:	e1c88003 	bic	r8, r8, r3
   3269c:	e3560000 	cmp	r6, #0
   326a0:	0a000004 	beq	326b8 <CTouchScreenDevice::Update()+0x88>
   326a4:	e3a03000 	mov	r3, #0
   326a8:	e1a01004 	mov	r1, r4
   326ac:	e1a02003 	mov	r2, r3
   326b0:	e3a00001 	mov	r0, #1
   326b4:	e12fff36 	blx	r6
   326b8:	e2844001 	add	r4, r4, #1
   326bc:	e354000a 	cmp	r4, #10
   326c0:	1afffff0 	bne	32688 <CTouchScreenDevice::Update()+0x58>
   326c4:	e587800c 	str	r8, [r7, #12]
   326c8:	e28dd04c 	add	sp, sp, #76	; 0x4c
   326cc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   326d0:	e358000a 	cmp	r8, #10
   326d4:	8a000043 	bhi	327e8 <CTouchScreenDevice::Update()+0x1b8>
   326d8:	e3a09000 	mov	r9, #0
   326dc:	e28d6008 	add	r6, sp, #8
   326e0:	e1a08009 	mov	r8, r9
   326e4:	e59fb13c 	ldr	fp, [pc, #316]	; 32828 <CTouchScreenDevice::Update()+0x1f8>
   326e8:	ea00000c 	b	32720 <CTouchScreenDevice::Update()+0xf0>
   326ec:	e58c4010 	str	r4, [ip, #16]
   326f0:	e58c3038 	str	r3, [ip, #56]	; 0x38
   326f4:	e597a008 	ldr	sl, [r7, #8]
   326f8:	e35a0000 	cmp	sl, #0
   326fc:	0a000002 	beq	3270c <CTouchScreenDevice::Update()+0xdc>
   32700:	e1a02004 	mov	r2, r4
   32704:	e1a01005 	mov	r1, r5
   32708:	e12fff3a 	blx	sl
   3270c:	e5dd300a 	ldrb	r3, [sp, #10]
   32710:	e2899001 	add	r9, r9, #1
   32714:	e1530009 	cmp	r3, r9
   32718:	e2866006 	add	r6, r6, #6
   3271c:	9a00002c 	bls	327d4 <CTouchScreenDevice::Update()+0x1a4>
   32720:	e5d65005 	ldrb	r5, [r6, #5]
   32724:	e5d64003 	ldrb	r4, [r6, #3]
   32728:	e1a03405 	lsl	r3, r5, #8
   3272c:	e1a04404 	lsl	r4, r4, #8
   32730:	e5d61004 	ldrb	r1, [r6, #4]
   32734:	e1a05225 	lsr	r5, r5, #4
   32738:	e5d62006 	ldrb	r2, [r6, #6]
   3273c:	e2044c0f 	and	r4, r4, #3840	; 0xf00
   32740:	e2033c0f 	and	r3, r3, #3840	; 0xf00
   32744:	e3550009 	cmp	r5, #9
   32748:	e1844001 	orr	r4, r4, r1
   3274c:	e1833002 	orr	r3, r3, r2
   32750:	8a000014 	bhi	327a8 <CTouchScreenDevice::Update()+0x178>
   32754:	e3a02001 	mov	r2, #1
   32758:	e597000c 	ldr	r0, [r7, #12]
   3275c:	e1a02512 	lsl	r2, r2, r5
   32760:	e087c105 	add	ip, r7, r5, lsl #2
   32764:	e0120000 	ands	r0, r2, r0
   32768:	e1a0100c 	mov	r1, ip
   3276c:	e1888002 	orr	r8, r8, r2
   32770:	0affffdd 	beq	326ec <CTouchScreenDevice::Update()+0xbc>
   32774:	e59c2010 	ldr	r2, [ip, #16]
   32778:	e1520004 	cmp	r2, r4
   3277c:	0a000010 	beq	327c4 <CTouchScreenDevice::Update()+0x194>
   32780:	e5814010 	str	r4, [r1, #16]
   32784:	e5813038 	str	r3, [r1, #56]	; 0x38
   32788:	e597a008 	ldr	sl, [r7, #8]
   3278c:	e35a0000 	cmp	sl, #0
   32790:	0affffdd 	beq	3270c <CTouchScreenDevice::Update()+0xdc>
   32794:	e1a02004 	mov	r2, r4
   32798:	e1a01005 	mov	r1, r5
   3279c:	e3a00002 	mov	r0, #2
   327a0:	e12fff3a 	blx	sl
   327a4:	eaffffd8 	b	3270c <CTouchScreenDevice::Update()+0xdc>
   327a8:	e3a0206d 	mov	r2, #109	; 0x6d
   327ac:	e1a0100b 	mov	r1, fp
   327b0:	e59f0074 	ldr	r0, [pc, #116]	; 3282c <CTouchScreenDevice::Update()+0x1fc>
   327b4:	e58d3004 	str	r3, [sp, #4]
   327b8:	eb0011f0 	bl	36f80 <assertion_failed>
   327bc:	e59d3004 	ldr	r3, [sp, #4]
   327c0:	eaffffe3 	b	32754 <CTouchScreenDevice::Update()+0x124>
   327c4:	e59c2038 	ldr	r2, [ip, #56]	; 0x38
   327c8:	e1520003 	cmp	r2, r3
   327cc:	1affffeb 	bne	32780 <CTouchScreenDevice::Update()+0x150>
   327d0:	eaffffcd 	b	3270c <CTouchScreenDevice::Update()+0xdc>
   327d4:	e1e03008 	mvn	r3, r8
   327d8:	e597500c 	ldr	r5, [r7, #12]
   327dc:	e0155003 	ands	r5, r5, r3
   327e0:	1affffa6 	bne	32680 <CTouchScreenDevice::Update()+0x50>
   327e4:	eaffffb6 	b	326c4 <CTouchScreenDevice::Update()+0x94>
   327e8:	e3a02066 	mov	r2, #102	; 0x66
   327ec:	e59f1034 	ldr	r1, [pc, #52]	; 32828 <CTouchScreenDevice::Update()+0x1f8>
   327f0:	e59f0038 	ldr	r0, [pc, #56]	; 32830 <CTouchScreenDevice::Update()+0x200>
   327f4:	eb0011e1 	bl	36f80 <assertion_failed>
   327f8:	e5dd800a 	ldrb	r8, [sp, #10]
   327fc:	e3580000 	cmp	r8, #0
   32800:	0597500c 	ldreq	r5, [r7, #12]
   32804:	03e03000 	mvneq	r3, #0
   32808:	1affffb2 	bne	326d8 <CTouchScreenDevice::Update()+0xa8>
   3280c:	eafffff2 	b	327dc <CTouchScreenDevice::Update()+0x1ac>
   32810:	e59f1010 	ldr	r1, [pc, #16]	; 32828 <CTouchScreenDevice::Update()+0x1f8>
   32814:	e3a02058 	mov	r2, #88	; 0x58
   32818:	e59f0014 	ldr	r0, [pc, #20]	; 32834 <CTouchScreenDevice::Update()+0x204>
   3281c:	eb0011d7 	bl	36f80 <assertion_failed>
   32820:	e5971004 	ldr	r1, [r7, #4]
   32824:	eaffff87 	b	32648 <CTouchScreenDevice::Update()+0x18>
   32828:	0004dd3c 	.word	0x0004dd3c
   3282c:	0004dddc 	.word	0x0004dddc
   32830:	0004ddb0 	.word	0x0004ddb0
   32834:	0004dd98 	.word	0x0004dd98

00032838 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))>:
   32838:	e5903008 	ldr	r3, [r0, #8]
   3283c:	e92d4070 	push	{r4, r5, r6, lr}
   32840:	e3530000 	cmp	r3, #0
   32844:	e1a04000 	mov	r4, r0
   32848:	e1a05001 	mov	r5, r1
   3284c:	0a000003 	beq	32860 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))+0x28>
   32850:	e3a0209e 	mov	r2, #158	; 0x9e
   32854:	e59f1024 	ldr	r1, [pc, #36]	; 32880 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))+0x48>
   32858:	e59f0024 	ldr	r0, [pc, #36]	; 32884 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))+0x4c>
   3285c:	eb0011c7 	bl	36f80 <assertion_failed>
   32860:	e3550000 	cmp	r5, #0
   32864:	e5845008 	str	r5, [r4, #8]
   32868:	18bd8070 	popne	{r4, r5, r6, pc}
   3286c:	e3a020a0 	mov	r2, #160	; 0xa0
   32870:	e8bd4070 	pop	{r4, r5, r6, lr}
   32874:	e59f1004 	ldr	r1, [pc, #4]	; 32880 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))+0x48>
   32878:	e59f0008 	ldr	r0, [pc, #8]	; 32888 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))+0x50>
   3287c:	ea0011bf 	b	36f80 <assertion_failed>
   32880:	0004dd3c 	.word	0x0004dd3c
   32884:	0004dcc8 	.word	0x0004dcc8
   32888:	0004b914 	.word	0x0004b914

0003288c <CPartitionManager::CPartitionManager(CDevice*, char const*)>:
   3288c:	e92d4010 	push	{r4, lr}
   32890:	e1a04000 	mov	r4, r0
   32894:	e4801004 	str	r1, [r0], #4
   32898:	e1a01002 	mov	r1, r2
   3289c:	eb0016d2 	bl	383ec <CString::CString(char const*)>
   328a0:	e3a03000 	mov	r3, #0
   328a4:	e1a00004 	mov	r0, r4
   328a8:	e5843014 	str	r3, [r4, #20]
   328ac:	e5843018 	str	r3, [r4, #24]
   328b0:	e584301c 	str	r3, [r4, #28]
   328b4:	e5843020 	str	r3, [r4, #32]
   328b8:	e8bd8010 	pop	{r4, pc}

000328bc <CPartitionManager::~CPartitionManager()>:
   328bc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   328c0:	e1a06000 	mov	r6, r0
   328c4:	e3a05000 	mov	r5, #0
   328c8:	e2804014 	add	r4, r0, #20
   328cc:	e2807024 	add	r7, r0, #36	; 0x24
   328d0:	e4940004 	ldr	r0, [r4], #4
   328d4:	e3500000 	cmp	r0, #0
   328d8:	0a000002 	beq	328e8 <CPartitionManager::~CPartitionManager()+0x2c>
   328dc:	e5903000 	ldr	r3, [r0]
   328e0:	e5933004 	ldr	r3, [r3, #4]
   328e4:	e12fff33 	blx	r3
   328e8:	e1540007 	cmp	r4, r7
   328ec:	e5045004 	str	r5, [r4, #-4]
   328f0:	1afffff6 	bne	328d0 <CPartitionManager::~CPartitionManager()+0x14>
   328f4:	e1a00006 	mov	r0, r6
   328f8:	e4805004 	str	r5, [r0], #4
   328fc:	eb001681 	bl	38308 <CString::~CString()>
   32900:	e1a00006 	mov	r0, r6
   32904:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00032908 <CPartitionManager::Initialize()>:
   32908:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3290c:	e1a05000 	mov	r5, r0
   32910:	e5900000 	ldr	r0, [r0]
   32914:	e3a03000 	mov	r3, #0
   32918:	e5901000 	ldr	r1, [r0]
   3291c:	e24ddf85 	sub	sp, sp, #532	; 0x214
   32920:	e3a02000 	mov	r2, #0
   32924:	e5911010 	ldr	r1, [r1, #16]
   32928:	e12fff31 	blx	r1
   3292c:	e1903001 	orrs	r3, r0, r1
   32930:	1a000007 	bne	32954 <CPartitionManager::Initialize()+0x4c>
   32934:	e5950000 	ldr	r0, [r5]
   32938:	e28d1010 	add	r1, sp, #16
   3293c:	e5903000 	ldr	r3, [r0]
   32940:	e3a02c02 	mov	r2, #512	; 0x200
   32944:	e5933008 	ldr	r3, [r3, #8]
   32948:	e12fff33 	blx	r3
   3294c:	e3500c02 	cmp	r0, #512	; 0x200
   32950:	0a000007 	beq	32974 <CPartitionManager::Initialize()+0x6c>
   32954:	eb001305 	bl	37570 <CLogger::Get()>
   32958:	e59f31b4 	ldr	r3, [pc, #436]	; 32b14 <CPartitionManager::Initialize()+0x20c>
   3295c:	e3a02001 	mov	r2, #1
   32960:	e59f11b0 	ldr	r1, [pc, #432]	; 32b18 <CPartitionManager::Initialize()+0x210>
   32964:	eb0013e1 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   32968:	e3a00000 	mov	r0, #0
   3296c:	e28ddf85 	add	sp, sp, #532	; 0x214
   32970:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32974:	e28d3f83 	add	r3, sp, #524	; 0x20c
   32978:	e2833002 	add	r3, r3, #2
   3297c:	e1d320b0 	ldrh	r2, [r3]
   32980:	e59f3194 	ldr	r3, [pc, #404]	; 32b1c <CPartitionManager::Initialize()+0x214>
   32984:	e1520003 	cmp	r2, r3
   32988:	1a000021 	bne	32a14 <CPartitionManager::Initialize()+0x10c>
   3298c:	e3a04000 	mov	r4, #0
   32990:	e1a06004 	mov	r6, r4
   32994:	e59f9184 	ldr	r9, [pc, #388]	; 32b20 <CPartitionManager::Initialize()+0x218>
   32998:	e28d3010 	add	r3, sp, #16
   3299c:	e0833204 	add	r3, r3, r4, lsl #4
   329a0:	e5d321c2 	ldrb	r2, [r3, #450]	; 0x1c2
   329a4:	e284701c 	add	r7, r4, #28
   329a8:	e2423005 	sub	r3, r2, #5
   329ac:	e16f3f13 	clz	r3, r3
   329b0:	e3520000 	cmp	r2, #0
   329b4:	e1a032a3 	lsr	r3, r3, #5
   329b8:	03a03001 	moveq	r3, #1
   329bc:	e352000f 	cmp	r2, #15
   329c0:	03833001 	orreq	r3, r3, #1
   329c4:	e35200ef 	cmp	r2, #239	; 0xef
   329c8:	03833001 	orreq	r3, r3, #1
   329cc:	e28d2e21 	add	r2, sp, #528	; 0x210
   329d0:	e0822207 	add	r2, r2, r7, lsl #4
   329d4:	e3530000 	cmp	r3, #0
   329d8:	e2421f7e 	sub	r1, r2, #504	; 0x1f8
   329dc:	0a000014 	beq	32a34 <CPartitionManager::Initialize()+0x12c>
   329e0:	e2844001 	add	r4, r4, #1
   329e4:	e3540004 	cmp	r4, #4
   329e8:	1affffea 	bne	32998 <CPartitionManager::Initialize()+0x90>
   329ec:	e3560000 	cmp	r6, #0
   329f0:	13a00001 	movne	r0, #1
   329f4:	1affffdc 	bne	3296c <CPartitionManager::Initialize()+0x64>
   329f8:	eb0012dc 	bl	37570 <CLogger::Get()>
   329fc:	e59f3120 	ldr	r3, [pc, #288]	; 32b24 <CPartitionManager::Initialize()+0x21c>
   32a00:	e3a02002 	mov	r2, #2
   32a04:	e59f110c 	ldr	r1, [pc, #268]	; 32b18 <CPartitionManager::Initialize()+0x210>
   32a08:	eb0013b8 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   32a0c:	e3a00001 	mov	r0, #1
   32a10:	eaffffd5 	b	3296c <CPartitionManager::Initialize()+0x64>
   32a14:	eb0012d5 	bl	37570 <CLogger::Get()>
   32a18:	e59f3108 	ldr	r3, [pc, #264]	; 32b28 <CPartitionManager::Initialize()+0x220>
   32a1c:	e3a02002 	mov	r2, #2
   32a20:	e59f10f0 	ldr	r1, [pc, #240]	; 32b18 <CPartitionManager::Initialize()+0x210>
   32a24:	eb0013b1 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   32a28:	e3a00001 	mov	r0, #1
   32a2c:	e28ddf85 	add	sp, sp, #532	; 0x214
   32a30:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32a34:	e15130b2 	ldrh	r3, [r1, #-2]
   32a38:	e1d110b0 	ldrh	r1, [r1]
   32a3c:	e2422f7d 	sub	r2, r2, #500	; 0x1f4
   32a40:	e1933801 	orrs	r3, r3, r1, lsl #16
   32a44:	e0858104 	add	r8, r5, r4, lsl #2
   32a48:	0affffe4 	beq	329e0 <CPartitionManager::Initialize()+0xd8>
   32a4c:	e15230b2 	ldrh	r3, [r2, #-2]
   32a50:	e1d220b0 	ldrh	r2, [r2]
   32a54:	e1933802 	orrs	r3, r3, r2, lsl #16
   32a58:	0affffe0 	beq	329e0 <CPartitionManager::Initialize()+0xd8>
   32a5c:	e5983014 	ldr	r3, [r8, #20]
   32a60:	e1a0a005 	mov	sl, r5
   32a64:	e3530000 	cmp	r3, #0
   32a68:	e2866001 	add	r6, r6, #1
   32a6c:	0a000003 	beq	32a80 <CPartitionManager::Initialize()+0x178>
   32a70:	e3a02070 	mov	r2, #112	; 0x70
   32a74:	e59f10b0 	ldr	r1, [pc, #176]	; 32b2c <CPartitionManager::Initialize()+0x224>
   32a78:	e59f00b0 	ldr	r0, [pc, #176]	; 32b30 <CPartitionManager::Initialize()+0x228>
   32a7c:	eb00113f 	bl	36f80 <assertion_failed>
   32a80:	e3a00020 	mov	r0, #32
   32a84:	eb000623 	bl	34318 <operator new(unsigned int)>
   32a88:	e1a0b000 	mov	fp, r0
   32a8c:	e28d3e21 	add	r3, sp, #528	; 0x210
   32a90:	e0837207 	add	r7, r3, r7, lsl #4
   32a94:	e2472f7d 	sub	r2, r7, #500	; 0x1f4
   32a98:	e2477f7e 	sub	r7, r7, #504	; 0x1f8
   32a9c:	e1d2c0b0 	ldrh	ip, [r2]
   32aa0:	e1d710b0 	ldrh	r1, [r7]
   32aa4:	e15230b2 	ldrh	r3, [r2, #-2]
   32aa8:	e15720b2 	ldrh	r2, [r7, #-2]
   32aac:	e183380c 	orr	r3, r3, ip, lsl #16
   32ab0:	e1822801 	orr	r2, r2, r1, lsl #16
   32ab4:	e49a1004 	ldr	r1, [sl], #4
   32ab8:	eb0000c1 	bl	32dc4 <CPartition::CPartition(CDevice*, unsigned int, unsigned int)>
   32abc:	e588b014 	str	fp, [r8, #20]
   32ac0:	e1a0000d 	mov	r0, sp
   32ac4:	eb001642 	bl	383d4 <CString::CString()>
   32ac8:	e1a0000a 	mov	r0, sl
   32acc:	eb001656 	bl	3842c <CString::operator char const*() const>
   32ad0:	e1a03006 	mov	r3, r6
   32ad4:	e1a02000 	mov	r2, r0
   32ad8:	e1a01009 	mov	r1, r9
   32adc:	e1a0000d 	mov	r0, sp
   32ae0:	eb0019c3 	bl	391f4 <CString::Format(char const*, ...)>
   32ae4:	eb001275 	bl	374c0 <CDeviceNameService::Get()>
   32ae8:	e1a07000 	mov	r7, r0
   32aec:	e1a0000d 	mov	r0, sp
   32af0:	eb00164d 	bl	3842c <CString::operator char const*() const>
   32af4:	e5982014 	ldr	r2, [r8, #20]
   32af8:	e1a01000 	mov	r1, r0
   32afc:	e3a03001 	mov	r3, #1
   32b00:	e1a00007 	mov	r0, r7
   32b04:	eb0011fc 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   32b08:	e1a0000d 	mov	r0, sp
   32b0c:	eb0015fd 	bl	38308 <CString::~CString()>
   32b10:	eaffffb2 	b	329e0 <CPartitionManager::Initialize()+0xd8>
   32b14:	0004de08 	.word	0x0004de08
   32b18:	0004de00 	.word	0x0004de00
   32b1c:	0000aa55 	.word	0x0000aa55
   32b20:	0004de5c 	.word	0x0004de5c
   32b24:	0004de64 	.word	0x0004de64
   32b28:	0004de18 	.word	0x0004de18
   32b2c:	0004de2c 	.word	0x0004de2c
   32b30:	0004de44 	.word	0x0004de44

00032b34 <CPartition::Read(void*, unsigned int)>:
   32b34:	e5903018 	ldr	r3, [r0, #24]
   32b38:	e3530000 	cmp	r3, #0
   32b3c:	1a000023 	bne	32bd0 <CPartition::Read(void*, unsigned int)+0x9c>
   32b40:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   32b44:	e1c061d0 	ldrd	r6, [r0, #16]
   32b48:	e3a05000 	mov	r5, #0
   32b4c:	e59f4084 	ldr	r4, [pc, #132]	; 32bd8 <CPartition::Read(void*, unsigned int)+0xa4>
   32b50:	e0948002 	adds	r8, r4, r2
   32b54:	e2a59000 	adc	r9, r5, #0
   32b58:	e0984006 	adds	r4, r8, r6
   32b5c:	e0a95007 	adc	r5, r9, r7
   32b60:	e3a09000 	mov	r9, #0
   32b64:	e590800c 	ldr	r8, [r0, #12]
   32b68:	e1a064a4 	lsr	r6, r4, #9
   32b6c:	e1a074a5 	lsr	r7, r5, #9
   32b70:	e1866b85 	orr	r6, r6, r5, lsl #23
   32b74:	e1590007 	cmp	r9, r7
   32b78:	01580006 	cmpeq	r8, r6
   32b7c:	3a000011 	bcc	32bc8 <CPartition::Read(void*, unsigned int)+0x94>
   32b80:	e1a04000 	mov	r4, r0
   32b84:	e5900004 	ldr	r0, [r0, #4]
   32b88:	e1a05002 	mov	r5, r2
   32b8c:	e3500000 	cmp	r0, #0
   32b90:	e1a06001 	mov	r6, r1
   32b94:	0a000005 	beq	32bb0 <CPartition::Read(void*, unsigned int)+0x7c>
   32b98:	e5903000 	ldr	r3, [r0]
   32b9c:	e1a02005 	mov	r2, r5
   32ba0:	e1a01006 	mov	r1, r6
   32ba4:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   32ba8:	e5933008 	ldr	r3, [r3, #8]
   32bac:	e12fff13 	bx	r3
   32bb0:	e59f0024 	ldr	r0, [pc, #36]	; 32bdc <CPartition::Read(void*, unsigned int)+0xa8>
   32bb4:	e3a02035 	mov	r2, #53	; 0x35
   32bb8:	e59f1020 	ldr	r1, [pc, #32]	; 32be0 <CPartition::Read(void*, unsigned int)+0xac>
   32bbc:	eb0010ef 	bl	36f80 <assertion_failed>
   32bc0:	e5940004 	ldr	r0, [r4, #4]
   32bc4:	eafffff3 	b	32b98 <CPartition::Read(void*, unsigned int)+0x64>
   32bc8:	e3e00000 	mvn	r0, #0
   32bcc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32bd0:	e3e00000 	mvn	r0, #0
   32bd4:	e12fff1e 	bx	lr
   32bd8:	000001ff 	.word	0x000001ff
   32bdc:	0004a75c 	.word	0x0004a75c
   32be0:	0004dea4 	.word	0x0004dea4

00032be4 <CPartition::Write(void const*, unsigned int)>:
   32be4:	e5903018 	ldr	r3, [r0, #24]
   32be8:	e3530000 	cmp	r3, #0
   32bec:	1a000023 	bne	32c80 <CPartition::Write(void const*, unsigned int)+0x9c>
   32bf0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   32bf4:	e1c061d0 	ldrd	r6, [r0, #16]
   32bf8:	e3a05000 	mov	r5, #0
   32bfc:	e59f4084 	ldr	r4, [pc, #132]	; 32c88 <CPartition::Write(void const*, unsigned int)+0xa4>
   32c00:	e0948002 	adds	r8, r4, r2
   32c04:	e2a59000 	adc	r9, r5, #0
   32c08:	e0984006 	adds	r4, r8, r6
   32c0c:	e0a95007 	adc	r5, r9, r7
   32c10:	e3a09000 	mov	r9, #0
   32c14:	e590800c 	ldr	r8, [r0, #12]
   32c18:	e1a064a4 	lsr	r6, r4, #9
   32c1c:	e1a074a5 	lsr	r7, r5, #9
   32c20:	e1866b85 	orr	r6, r6, r5, lsl #23
   32c24:	e1590007 	cmp	r9, r7
   32c28:	01580006 	cmpeq	r8, r6
   32c2c:	3a000011 	bcc	32c78 <CPartition::Write(void const*, unsigned int)+0x94>
   32c30:	e1a04000 	mov	r4, r0
   32c34:	e5900004 	ldr	r0, [r0, #4]
   32c38:	e1a05002 	mov	r5, r2
   32c3c:	e3500000 	cmp	r0, #0
   32c40:	e1a06001 	mov	r6, r1
   32c44:	0a000005 	beq	32c60 <CPartition::Write(void const*, unsigned int)+0x7c>
   32c48:	e5903000 	ldr	r3, [r0]
   32c4c:	e1a02005 	mov	r2, r5
   32c50:	e1a01006 	mov	r1, r6
   32c54:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   32c58:	e593300c 	ldr	r3, [r3, #12]
   32c5c:	e12fff13 	bx	r3
   32c60:	e59f0024 	ldr	r0, [pc, #36]	; 32c8c <CPartition::Write(void const*, unsigned int)+0xa8>
   32c64:	e3a02047 	mov	r2, #71	; 0x47
   32c68:	e59f1020 	ldr	r1, [pc, #32]	; 32c90 <CPartition::Write(void const*, unsigned int)+0xac>
   32c6c:	eb0010c3 	bl	36f80 <assertion_failed>
   32c70:	e5940004 	ldr	r0, [r4, #4]
   32c74:	eafffff3 	b	32c48 <CPartition::Write(void const*, unsigned int)+0x64>
   32c78:	e3e00000 	mvn	r0, #0
   32c7c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32c80:	e3e00000 	mvn	r0, #0
   32c84:	e12fff1e 	bx	lr
   32c88:	000001ff 	.word	0x000001ff
   32c8c:	0004a75c 	.word	0x0004a75c
   32c90:	0004dea4 	.word	0x0004dea4

00032c94 <CPartition::~CPartition()>:
   32c94:	e3a02000 	mov	r2, #0
   32c98:	e92d4010 	push	{r4, lr}
   32c9c:	e1a04000 	mov	r4, r0
   32ca0:	e59f3010 	ldr	r3, [pc, #16]	; 32cb8 <CPartition::~CPartition()+0x24>
   32ca4:	e5802004 	str	r2, [r0, #4]
   32ca8:	e5803000 	str	r3, [r0]
   32cac:	eb000a60 	bl	35634 <CDevice::~CDevice()>
   32cb0:	e1a00004 	mov	r0, r4
   32cb4:	e8bd8010 	pop	{r4, pc}
   32cb8:	0004de90 	.word	0x0004de90

00032cbc <CPartition::~CPartition()>:
   32cbc:	e3a02000 	mov	r2, #0
   32cc0:	e92d4010 	push	{r4, lr}
   32cc4:	e1a04000 	mov	r4, r0
   32cc8:	e59f301c 	ldr	r3, [pc, #28]	; 32cec <CPartition::~CPartition()+0x30>
   32ccc:	e5802004 	str	r2, [r0, #4]
   32cd0:	e5803000 	str	r3, [r0]
   32cd4:	eb000a56 	bl	35634 <CDevice::~CDevice()>
   32cd8:	e1a00004 	mov	r0, r4
   32cdc:	e3a01020 	mov	r1, #32
   32ce0:	eb000590 	bl	34328 <operator delete(void*, unsigned int)>
   32ce4:	e1a00004 	mov	r0, r4
   32ce8:	e8bd8010 	pop	{r4, pc}
   32cec:	0004de90 	.word	0x0004de90

00032cf0 <CPartition::Seek(unsigned long long)>:
   32cf0:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32cf4:	e3a05000 	mov	r5, #0
   32cf8:	e3a01001 	mov	r1, #1
   32cfc:	e59f40b4 	ldr	r4, [pc, #180]	; 32db8 <CPartition::Seek(unsigned long long)+0xc8>
   32d00:	e0057003 	and	r7, r5, r3
   32d04:	e0046002 	and	r6, r4, r2
   32d08:	e196c007 	orrs	ip, r6, r7
   32d0c:	e5801018 	str	r1, [r0, #24]
   32d10:	1a00001f 	bne	32d94 <CPartition::Seek(unsigned long long)+0xa4>
   32d14:	e3a07000 	mov	r7, #0
   32d18:	e590600c 	ldr	r6, [r0, #12]
   32d1c:	e1a044a2 	lsr	r4, r2, #9
   32d20:	e1a054a3 	lsr	r5, r3, #9
   32d24:	e1844b83 	orr	r4, r4, r3, lsl #23
   32d28:	e1550007 	cmp	r5, r7
   32d2c:	01540006 	cmpeq	r4, r6
   32d30:	2a000017 	bcs	32d94 <CPartition::Seek(unsigned long long)+0xa4>
   32d34:	e1a09003 	mov	r9, r3
   32d38:	e1a06000 	mov	r6, r0
   32d3c:	e9900009 	ldmib	r0, {r0, r3}
   32d40:	e1a0a483 	lsl	sl, r3, #9
   32d44:	e09a4002 	adds	r4, sl, r2
   32d48:	e1a0bba3 	lsr	fp, r3, #23
   32d4c:	e0ab5009 	adc	r5, fp, r9
   32d50:	e3500000 	cmp	r0, #0
   32d54:	e1a08002 	mov	r8, r2
   32d58:	0a000010 	beq	32da0 <CPartition::Seek(unsigned long long)+0xb0>
   32d5c:	e5903000 	ldr	r3, [r0]
   32d60:	e1a02004 	mov	r2, r4
   32d64:	e5931010 	ldr	r1, [r3, #16]
   32d68:	e1a03005 	mov	r3, r5
   32d6c:	e12fff31 	blx	r1
   32d70:	e1550001 	cmp	r5, r1
   32d74:	01540000 	cmpeq	r4, r0
   32d78:	1a000005 	bne	32d94 <CPartition::Seek(unsigned long long)+0xa4>
   32d7c:	e3a03000 	mov	r3, #0
   32d80:	e1a00008 	mov	r0, r8
   32d84:	e1a01009 	mov	r1, r9
   32d88:	e1c681f0 	strd	r8, [r6, #16]
   32d8c:	e5863018 	str	r3, [r6, #24]
   32d90:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32d94:	e3e00000 	mvn	r0, #0
   32d98:	e1a01000 	mov	r1, r0
   32d9c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32da0:	e59f0014 	ldr	r0, [pc, #20]	; 32dbc <CPartition::Seek(unsigned long long)+0xcc>
   32da4:	e3a02059 	mov	r2, #89	; 0x59
   32da8:	e59f1010 	ldr	r1, [pc, #16]	; 32dc0 <CPartition::Seek(unsigned long long)+0xd0>
   32dac:	eb001073 	bl	36f80 <assertion_failed>
   32db0:	e5960004 	ldr	r0, [r6, #4]
   32db4:	eaffffe8 	b	32d5c <CPartition::Seek(unsigned long long)+0x6c>
   32db8:	000001ff 	.word	0x000001ff
   32dbc:	0004a75c 	.word	0x0004a75c
   32dc0:	0004dea4 	.word	0x0004dea4

00032dc4 <CPartition::CPartition(CDevice*, unsigned int, unsigned int)>:
   32dc4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   32dc8:	e1a05001 	mov	r5, r1
   32dcc:	e1a04000 	mov	r4, r0
   32dd0:	e1a09002 	mov	r9, r2
   32dd4:	e1a08003 	mov	r8, r3
   32dd8:	e3a06000 	mov	r6, #0
   32ddc:	eb000a20 	bl	35664 <CDevice::CDevice()>
   32de0:	e3a07000 	mov	r7, #0
   32de4:	e3a01001 	mov	r1, #1
   32de8:	e59f2038 	ldr	r2, [pc, #56]	; 32e28 <CPartition::CPartition(CDevice*, unsigned int, unsigned int)+0x64>
   32dec:	e3550000 	cmp	r5, #0
   32df0:	e9840220 	stmib	r4, {r5, r9}
   32df4:	e584800c 	str	r8, [r4, #12]
   32df8:	e5842000 	str	r2, [r4]
   32dfc:	e1c461f0 	strd	r6, [r4, #16]
   32e00:	e5841018 	str	r1, [r4, #24]
   32e04:	0a000001 	beq	32e10 <CPartition::CPartition(CDevice*, unsigned int, unsigned int)+0x4c>
   32e08:	e1a00004 	mov	r0, r4
   32e0c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32e10:	e3a0201f 	mov	r2, #31
   32e14:	e59f1010 	ldr	r1, [pc, #16]	; 32e2c <CPartition::CPartition(CDevice*, unsigned int, unsigned int)+0x68>
   32e18:	e59f0010 	ldr	r0, [pc, #16]	; 32e30 <CPartition::CPartition(CDevice*, unsigned int, unsigned int)+0x6c>
   32e1c:	eb001057 	bl	36f80 <assertion_failed>
   32e20:	e1a00004 	mov	r0, r4
   32e24:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32e28:	0004de90 	.word	0x0004de90
   32e2c:	0004dea4 	.word	0x0004dea4
   32e30:	0004a75c 	.word	0x0004a75c

00032e34 <CActLED::~CActLED()>:
   32e34:	e3a02000 	mov	r2, #0
   32e38:	e59f3004 	ldr	r3, [pc, #4]	; 32e44 <CActLED::~CActLED()+0x10>
   32e3c:	e5832000 	str	r2, [r3]
   32e40:	e12fff1e 	bx	lr
   32e44:	0017af24 	.word	0x0017af24

00032e48 <CActLED::On()>:
   32e48:	e5903000 	ldr	r3, [r0]
   32e4c:	e3530000 	cmp	r3, #0
   32e50:	0a000004 	beq	32e68 <CActLED::On()+0x20>
   32e54:	e5901008 	ldr	r1, [r0, #8]
   32e58:	e1a00003 	mov	r0, r3
   32e5c:	e2911000 	adds	r1, r1, #0
   32e60:	13a01001 	movne	r1, #1
   32e64:	ea0000ef 	b	33228 <CGPIOPin::Write(unsigned int)>
   32e68:	e5903004 	ldr	r3, [r0, #4]
   32e6c:	e3530000 	cmp	r3, #0
   32e70:	012fff1e 	bxeq	lr
   32e74:	e5901008 	ldr	r1, [r0, #8]
   32e78:	e1a00003 	mov	r0, r3
   32e7c:	e2911000 	adds	r1, r1, #0
   32e80:	13a01001 	movne	r1, #1
   32e84:	ea001ee2 	b	3aa14 <CVirtualGPIOPin::Write(unsigned int)>

00032e88 <CActLED::Off()>:
   32e88:	e5903000 	ldr	r3, [r0]
   32e8c:	e3530000 	cmp	r3, #0
   32e90:	1a000007 	bne	32eb4 <CActLED::Off()+0x2c>
   32e94:	e5903004 	ldr	r3, [r0, #4]
   32e98:	e3530000 	cmp	r3, #0
   32e9c:	012fff1e 	bxeq	lr
   32ea0:	e5901008 	ldr	r1, [r0, #8]
   32ea4:	e1a00003 	mov	r0, r3
   32ea8:	e16f1f11 	clz	r1, r1
   32eac:	e1a012a1 	lsr	r1, r1, #5
   32eb0:	ea001ed7 	b	3aa14 <CVirtualGPIOPin::Write(unsigned int)>
   32eb4:	e5901008 	ldr	r1, [r0, #8]
   32eb8:	e1a00003 	mov	r0, r3
   32ebc:	e16f1f11 	clz	r1, r1
   32ec0:	e1a012a1 	lsr	r1, r1, #5
   32ec4:	ea0000d7 	b	33228 <CGPIOPin::Write(unsigned int)>

00032ec8 <CActLED::CActLED()>:
   32ec8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   32ecc:	e3a05000 	mov	r5, #0
   32ed0:	e1a04000 	mov	r4, r0
   32ed4:	e24dd024 	sub	sp, sp, #36	; 0x24
   32ed8:	e59f3100 	ldr	r3, [pc, #256]	; 32fe0 <CActLED::CActLED()+0x118>
   32edc:	e5805000 	str	r5, [r0]
   32ee0:	e5805004 	str	r5, [r0, #4]
   32ee4:	e28d0008 	add	r0, sp, #8
   32ee8:	e5834000 	str	r4, [r3]
   32eec:	eb000054 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   32ef0:	e3a03010 	mov	r3, #16
   32ef4:	e58d5000 	str	r5, [sp]
   32ef8:	e28d0008 	add	r0, sp, #8
   32efc:	e08d2003 	add	r2, sp, r3
   32f00:	e59f10dc 	ldr	r1, [pc, #220]	; 32fe4 <CActLED::CActLED()+0x11c>
   32f04:	eb000095 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   32f08:	e1500005 	cmp	r0, r5
   32f0c:	0a000016 	beq	32f6c <CActLED::CActLED()+0xa4>
   32f10:	e59d301c 	ldr	r3, [sp, #28]
   32f14:	e3130502 	tst	r3, #8388608	; 0x800000
   32f18:	0a000018 	beq	32f80 <CActLED::CActLED()+0xb8>
   32f1c:	e1a03223 	lsr	r3, r3, #4
   32f20:	e6ef3073 	uxtb	r3, r3
   32f24:	e3530001 	cmp	r3, #1
   32f28:	9a000021 	bls	32fb4 <CActLED::CActLED()+0xec>
   32f2c:	e353000c 	cmp	r3, #12
   32f30:	13530009 	cmpne	r3, #9
   32f34:	03a06001 	moveq	r6, #1
   32f38:	13a06000 	movne	r6, #0
   32f3c:	e3530008 	cmp	r3, #8
   32f40:	e2266001 	eor	r6, r6, #1
   32f44:	1a000011 	bne	32f90 <CActLED::CActLED()+0xc8>
   32f48:	e3a00010 	mov	r0, #16
   32f4c:	eb0004f1 	bl	34318 <operator new(unsigned int)>
   32f50:	e1a07000 	mov	r7, r0
   32f54:	e1a01005 	mov	r1, r5
   32f58:	eb001e72 	bl	3a928 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)>
   32f5c:	e5847004 	str	r7, [r4, #4]
   32f60:	e5846008 	str	r6, [r4, #8]
   32f64:	e1a00004 	mov	r0, r4
   32f68:	ebffffc6 	bl	32e88 <CActLED::Off()>
   32f6c:	e28d0008 	add	r0, sp, #8
   32f70:	eb000039 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   32f74:	e1a00004 	mov	r0, r4
   32f78:	e28dd024 	add	sp, sp, #36	; 0x24
   32f7c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   32f80:	e6ff3073 	uxth	r3, r3
   32f84:	e353000f 	cmp	r3, #15
   32f88:	83a06001 	movhi	r6, #1
   32f8c:	9a000008 	bls	32fb4 <CActLED::CActLED()+0xec>
   32f90:	e3a00028 	mov	r0, #40	; 0x28
   32f94:	eb0004df 	bl	34318 <operator new(unsigned int)>
   32f98:	e1a05000 	mov	r5, r0
   32f9c:	e3a03000 	mov	r3, #0
   32fa0:	e3a02001 	mov	r2, #1
   32fa4:	e3a0102f 	mov	r1, #47	; 0x2f
   32fa8:	eb000337 	bl	33c8c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>
   32fac:	e5845000 	str	r5, [r4]
   32fb0:	eaffffea 	b	32f60 <CActLED::CActLED()+0x98>
   32fb4:	e3a00028 	mov	r0, #40	; 0x28
   32fb8:	eb0004d6 	bl	34318 <operator new(unsigned int)>
   32fbc:	e3a03000 	mov	r3, #0
   32fc0:	e3a02001 	mov	r2, #1
   32fc4:	e3a01010 	mov	r1, #16
   32fc8:	e1a05000 	mov	r5, r0
   32fcc:	eb00032e 	bl	33c8c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>
   32fd0:	e3a03000 	mov	r3, #0
   32fd4:	e5845000 	str	r5, [r4]
   32fd8:	e5843008 	str	r3, [r4, #8]
   32fdc:	eaffffe0 	b	32f64 <CActLED::CActLED()+0x9c>
   32fe0:	0017af24 	.word	0x0017af24
   32fe4:	00010002 	.word	0x00010002

00032fe8 <CActLED::Blink(unsigned int, unsigned int, unsigned int)>:
   32fe8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   32fec:	e2516000 	subs	r6, r1, #0
   32ff0:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   32ff4:	e1a08003 	mov	r8, r3
   32ff8:	e1a07002 	mov	r7, r2
   32ffc:	e1a05000 	mov	r5, r0
   33000:	e3a04001 	mov	r4, #1
   33004:	e1a00005 	mov	r0, r5
   33008:	ebffff8e 	bl	32e48 <CActLED::On()>
   3300c:	e1a00007 	mov	r0, r7
   33010:	eb000809 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   33014:	e1a00005 	mov	r0, r5
   33018:	ebffff9a 	bl	32e88 <CActLED::Off()>
   3301c:	e2844001 	add	r4, r4, #1
   33020:	e1a00008 	mov	r0, r8
   33024:	eb000804 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   33028:	e1560004 	cmp	r6, r4
   3302c:	2afffff4 	bcs	33004 <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0x1c>
   33030:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00033034 <CActLED::Get()>:
   33034:	e59f3004 	ldr	r3, [pc, #4]	; 33040 <CActLED::Get()+0xc>
   33038:	e5930000 	ldr	r0, [r3]
   3303c:	e12fff1e 	bx	lr
   33040:	0017af24 	.word	0x0017af24

00033044 <CBcmPropertyTags::CBcmPropertyTags()>:
   33044:	e92d4010 	push	{r4, lr}
   33048:	e1a04000 	mov	r4, r0
   3304c:	e3a01008 	mov	r1, #8
   33050:	eb002220 	bl	3b8d8 <CBcmMailBox::CBcmMailBox(unsigned int)>
   33054:	e1a00004 	mov	r0, r4
   33058:	e8bd8010 	pop	{r4, pc}

0003305c <CBcmPropertyTags::~CBcmPropertyTags()>:
   3305c:	e92d4010 	push	{r4, lr}
   33060:	e1a04000 	mov	r4, r0
   33064:	eb00221e 	bl	3b8e4 <CBcmMailBox::~CBcmMailBox()>
   33068:	e1a00004 	mov	r0, r4
   3306c:	e8bd8010 	pop	{r4, pc}

00033070 <CBcmPropertyTags::GetTags(void*, unsigned int)>:
   33070:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33074:	e2519000 	subs	r9, r1, #0
   33078:	e1a0a000 	mov	sl, r0
   3307c:	e1a04002 	mov	r4, r2
   33080:	0a00002b 	beq	33134 <CBcmPropertyTags::GetTags(void*, unsigned int)+0xc4>
   33084:	e354000f 	cmp	r4, #15
   33088:	9a000024 	bls	33120 <CBcmPropertyTags::GetTags(void*, unsigned int)+0xb0>
   3308c:	e284800c 	add	r8, r4, #12
   33090:	e3180003 	tst	r8, #3
   33094:	1a00001c 	bne	3310c <CBcmPropertyTags::GetTags(void*, unsigned int)+0x9c>
   33098:	e3a06501 	mov	r6, #4194304	; 0x400000
   3309c:	e3a05000 	mov	r5, #0
   330a0:	e59f70a0 	ldr	r7, [pc, #160]	; 33148 <CBcmPropertyTags::GetTags(void*, unsigned int)+0xd8>
   330a4:	e5868000 	str	r8, [r6]
   330a8:	e5865004 	str	r5, [r6, #4]
   330ac:	e1a00007 	mov	r0, r7
   330b0:	e1a02004 	mov	r2, r4
   330b4:	e1a01009 	mov	r1, r9
   330b8:	eb000946 	bl	355d8 <memcpy>
   330bc:	e7875004 	str	r5, [r7, r4]
   330c0:	ee075f9a 	mcr	15, 0, r5, cr7, cr10, {4}
   330c4:	e59f8080 	ldr	r8, [pc, #128]	; 3314c <CBcmPropertyTags::GetTags(void*, unsigned int)+0xdc>
   330c8:	e1a0000a 	mov	r0, sl
   330cc:	e1a01008 	mov	r1, r8
   330d0:	eb002232 	bl	3b9a0 <CBcmMailBox::WriteRead(unsigned int)>
   330d4:	e1500008 	cmp	r0, r8
   330d8:	0a000001 	beq	330e4 <CBcmPropertyTags::GetTags(void*, unsigned int)+0x74>
   330dc:	e3a00000 	mov	r0, #0
   330e0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   330e4:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   330e8:	e5963004 	ldr	r3, [r6, #4]
   330ec:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
   330f0:	1afffff9 	bne	330dc <CBcmPropertyTags::GetTags(void*, unsigned int)+0x6c>
   330f4:	e1a02004 	mov	r2, r4
   330f8:	e1a01007 	mov	r1, r7
   330fc:	e1a00009 	mov	r0, r9
   33100:	eb000934 	bl	355d8 <memcpy>
   33104:	e3a00001 	mov	r0, #1
   33108:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3310c:	e3a02051 	mov	r2, #81	; 0x51
   33110:	e59f1038 	ldr	r1, [pc, #56]	; 33150 <CBcmPropertyTags::GetTags(void*, unsigned int)+0xe0>
   33114:	e59f0038 	ldr	r0, [pc, #56]	; 33154 <CBcmPropertyTags::GetTags(void*, unsigned int)+0xe4>
   33118:	eb000f98 	bl	36f80 <assertion_failed>
   3311c:	eaffffdd 	b	33098 <CBcmPropertyTags::GetTags(void*, unsigned int)+0x28>
   33120:	e3a0204f 	mov	r2, #79	; 0x4f
   33124:	e59f1024 	ldr	r1, [pc, #36]	; 33150 <CBcmPropertyTags::GetTags(void*, unsigned int)+0xe0>
   33128:	e59f0028 	ldr	r0, [pc, #40]	; 33158 <CBcmPropertyTags::GetTags(void*, unsigned int)+0xe8>
   3312c:	eb000f93 	bl	36f80 <assertion_failed>
   33130:	eaffffd5 	b	3308c <CBcmPropertyTags::GetTags(void*, unsigned int)+0x1c>
   33134:	e3a0204e 	mov	r2, #78	; 0x4e
   33138:	e59f1010 	ldr	r1, [pc, #16]	; 33150 <CBcmPropertyTags::GetTags(void*, unsigned int)+0xe0>
   3313c:	e59f0018 	ldr	r0, [pc, #24]	; 3315c <CBcmPropertyTags::GetTags(void*, unsigned int)+0xec>
   33140:	eb000f8e 	bl	36f80 <assertion_failed>
   33144:	eaffffce 	b	33084 <CBcmPropertyTags::GetTags(void*, unsigned int)+0x14>
   33148:	00400008 	.word	0x00400008
   3314c:	40400000 	.word	0x40400000
   33150:	0004deb4 	.word	0x0004deb4
   33154:	0004df00 	.word	0x0004df00
   33158:	0004ded4 	.word	0x0004ded4
   3315c:	0004dec8 	.word	0x0004dec8

00033160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>:
   33160:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   33164:	e2524000 	subs	r4, r2, #0
   33168:	e1a07000 	mov	r7, r0
   3316c:	e1a08001 	mov	r8, r1
   33170:	e1a05003 	mov	r5, r3
   33174:	e59d6018 	ldr	r6, [sp, #24]
   33178:	0a00001b 	beq	331ec <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0x8c>
   3317c:	e355000f 	cmp	r5, #15
   33180:	9a000014 	bls	331d8 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0x78>
   33184:	e245300c 	sub	r3, r5, #12
   33188:	e3c66102 	bic	r6, r6, #-2147483648	; 0x80000000
   3318c:	e5846008 	str	r6, [r4, #8]
   33190:	e5848000 	str	r8, [r4]
   33194:	e1a00007 	mov	r0, r7
   33198:	e5843004 	str	r3, [r4, #4]
   3319c:	e1a02005 	mov	r2, r5
   331a0:	e1a01004 	mov	r1, r4
   331a4:	ebffffb1 	bl	33070 <CBcmPropertyTags::GetTags(void*, unsigned int)>
   331a8:	e3500000 	cmp	r0, #0
   331ac:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   331b0:	e5940008 	ldr	r0, [r4, #8]
   331b4:	e3500000 	cmp	r0, #0
   331b8:	ba000001 	blt	331c4 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0x64>
   331bc:	e3a00000 	mov	r0, #0
   331c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   331c4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
   331c8:	e5840008 	str	r0, [r4, #8]
   331cc:	e2900000 	adds	r0, r0, #0
   331d0:	13a00001 	movne	r0, #1
   331d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   331d8:	e3a02032 	mov	r2, #50	; 0x32
   331dc:	e59f101c 	ldr	r1, [pc, #28]	; 33200 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0xa0>
   331e0:	e59f001c 	ldr	r0, [pc, #28]	; 33204 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0xa4>
   331e4:	eb000f65 	bl	36f80 <assertion_failed>
   331e8:	eaffffe5 	b	33184 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0x24>
   331ec:	e3a02031 	mov	r2, #49	; 0x31
   331f0:	e59f1008 	ldr	r1, [pc, #8]	; 33200 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0xa0>
   331f4:	e59f000c 	ldr	r0, [pc, #12]	; 33208 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0xa8>
   331f8:	eb000f60 	bl	36f80 <assertion_failed>
   331fc:	eaffffde 	b	3317c <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0x1c>
   33200:	0004deb4 	.word	0x0004deb4
   33204:	0004df24 	.word	0x0004df24
   33208:	0004df18 	.word	0x0004df18

0003320c <CGPIOPin::~CGPIOPin()>:
   3320c:	e12fff1e 	bx	lr

00033210 <CGPIOPin::~CGPIOPin()>:
   33210:	e92d4010 	push	{r4, lr}
   33214:	e1a04000 	mov	r4, r0
   33218:	e3a01028 	mov	r1, #40	; 0x28
   3321c:	eb000441 	bl	34328 <operator delete(void*, unsigned int)>
   33220:	e1a00004 	mov	r0, r4
   33224:	e8bd8010 	pop	{r4, pc}

00033228 <CGPIOPin::Write(unsigned int)>:
   33228:	e5d03010 	ldrb	r3, [r0, #16]
   3322c:	e92d4070 	push	{r4, r5, r6, lr}
   33230:	e3530003 	cmp	r3, #3
   33234:	e1a04000 	mov	r4, r0
   33238:	e1a05001 	mov	r5, r1
   3323c:	8a000016 	bhi	3329c <CGPIOPin::Write(unsigned int)+0x74>
   33240:	e3a03000 	mov	r3, #0
   33244:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   33248:	e3550001 	cmp	r5, #1
   3324c:	8a00000b 	bhi	33280 <CGPIOPin::Write(unsigned int)+0x58>
   33250:	e59f3058 	ldr	r3, [pc, #88]	; 332b0 <CGPIOPin::Write(unsigned int)+0x88>
   33254:	e59f2058 	ldr	r2, [pc, #88]	; 332b4 <CGPIOPin::Write(unsigned int)+0x8c>
   33258:	e3550000 	cmp	r5, #0
   3325c:	e5845014 	str	r5, [r4, #20]
   33260:	11a05003 	movne	r5, r3
   33264:	01a05002 	moveq	r5, r2
   33268:	e594100c 	ldr	r1, [r4, #12]
   3326c:	e5942008 	ldr	r2, [r4, #8]
   33270:	e3a03000 	mov	r3, #0
   33274:	e7851002 	str	r1, [r5, r2]
   33278:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3327c:	e8bd8070 	pop	{r4, r5, r6, pc}
   33280:	e3a02084 	mov	r2, #132	; 0x84
   33284:	e59f102c 	ldr	r1, [pc, #44]	; 332b8 <CGPIOPin::Write(unsigned int)+0x90>
   33288:	e59f002c 	ldr	r0, [pc, #44]	; 332bc <CGPIOPin::Write(unsigned int)+0x94>
   3328c:	eb000f3b 	bl	36f80 <assertion_failed>
   33290:	e5845014 	str	r5, [r4, #20]
   33294:	e59f5014 	ldr	r5, [pc, #20]	; 332b0 <CGPIOPin::Write(unsigned int)+0x88>
   33298:	eafffff2 	b	33268 <CGPIOPin::Write(unsigned int)+0x40>
   3329c:	e3a02080 	mov	r2, #128	; 0x80
   332a0:	e59f1010 	ldr	r1, [pc, #16]	; 332b8 <CGPIOPin::Write(unsigned int)+0x90>
   332a4:	e59f0014 	ldr	r0, [pc, #20]	; 332c0 <CGPIOPin::Write(unsigned int)+0x98>
   332a8:	eb000f34 	bl	36f80 <assertion_failed>
   332ac:	eaffffe3 	b	33240 <CGPIOPin::Write(unsigned int)+0x18>
   332b0:	2020001c 	.word	0x2020001c
   332b4:	20200028 	.word	0x20200028
   332b8:	0004df74 	.word	0x0004df74
   332bc:	0004dfa4 	.word	0x0004dfa4
   332c0:	0004df80 	.word	0x0004df80

000332c4 <CGPIOPin::Read() const>:
   332c4:	e5d03010 	ldrb	r3, [r0, #16]
   332c8:	e92d4010 	push	{r4, lr}
   332cc:	e2432002 	sub	r2, r3, #2
   332d0:	e3530000 	cmp	r3, #0
   332d4:	13520001 	cmpne	r2, #1
   332d8:	e1a04000 	mov	r4, r0
   332dc:	8a00000a 	bhi	3330c <CGPIOPin::Read() const+0x48>
   332e0:	e3a03000 	mov	r3, #0
   332e4:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   332e8:	e59f1030 	ldr	r1, [pc, #48]	; 33320 <CGPIOPin::Read() const+0x5c>
   332ec:	e5940008 	ldr	r0, [r4, #8]
   332f0:	e594200c 	ldr	r2, [r4, #12]
   332f4:	e7901001 	ldr	r1, [r0, r1]
   332f8:	e1110002 	tst	r1, r2
   332fc:	13a00001 	movne	r0, #1
   33300:	01a00003 	moveq	r0, r3
   33304:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   33308:	e8bd8010 	pop	{r4, pc}
   3330c:	e3a02092 	mov	r2, #146	; 0x92
   33310:	e59f100c 	ldr	r1, [pc, #12]	; 33324 <CGPIOPin::Read() const+0x60>
   33314:	e59f000c 	ldr	r0, [pc, #12]	; 33328 <CGPIOPin::Read() const+0x64>
   33318:	eb000f18 	bl	36f80 <assertion_failed>
   3331c:	eaffffef 	b	332e0 <CGPIOPin::Read() const+0x1c>
   33320:	20200034 	.word	0x20200034
   33324:	0004df74 	.word	0x0004df74
   33328:	0004dfc4 	.word	0x0004dfc4

0003332c <CGPIOPin::Invert()>:
   3332c:	e5d03010 	ldrb	r3, [r0, #16]
   33330:	e92d4010 	push	{r4, lr}
   33334:	e3530001 	cmp	r3, #1
   33338:	e1a04000 	mov	r4, r0
   3333c:	0a000003 	beq	33350 <CGPIOPin::Invert()+0x24>
   33340:	e3a0209f 	mov	r2, #159	; 0x9f
   33344:	e59f1018 	ldr	r1, [pc, #24]	; 33364 <CGPIOPin::Invert()+0x38>
   33348:	e59f0018 	ldr	r0, [pc, #24]	; 33368 <CGPIOPin::Invert()+0x3c>
   3334c:	eb000f0b 	bl	36f80 <assertion_failed>
   33350:	e5941014 	ldr	r1, [r4, #20]
   33354:	e1a00004 	mov	r0, r4
   33358:	e8bd4010 	pop	{r4, lr}
   3335c:	e2211001 	eor	r1, r1, #1
   33360:	eaffffb0 	b	33228 <CGPIOPin::Write(unsigned int)>
   33364:	0004df74 	.word	0x0004df74
   33368:	0004e020 	.word	0x0004e020

0003336c <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)>:
   3336c:	e5d03010 	ldrb	r3, [r0, #16]
   33370:	e92d4070 	push	{r4, r5, r6, lr}
   33374:	e1a05001 	mov	r5, r1
   33378:	e2431002 	sub	r1, r3, #2
   3337c:	e3530000 	cmp	r3, #0
   33380:	13510001 	cmpne	r1, #1
   33384:	e1a04000 	mov	r4, r0
   33388:	e1a06002 	mov	r6, r2
   3338c:	8a00001e 	bhi	3340c <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xa0>
   33390:	e5d43024 	ldrb	r3, [r4, #36]	; 0x24
   33394:	e3530006 	cmp	r3, #6
   33398:	0a000003 	beq	333ac <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0x40>
   3339c:	e3a020aa 	mov	r2, #170	; 0xaa
   333a0:	e59f10ac 	ldr	r1, [pc, #172]	; 33454 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xe8>
   333a4:	e59f00ac 	ldr	r0, [pc, #172]	; 33458 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xec>
   333a8:	eb000ef4 	bl	36f80 <assertion_failed>
   333ac:	e5d43025 	ldrb	r3, [r4, #37]	; 0x25
   333b0:	e3530006 	cmp	r3, #6
   333b4:	0a000003 	beq	333c8 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0x5c>
   333b8:	e3a020ab 	mov	r2, #171	; 0xab
   333bc:	e59f1090 	ldr	r1, [pc, #144]	; 33454 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xe8>
   333c0:	e59f0094 	ldr	r0, [pc, #148]	; 3345c <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xf0>
   333c4:	eb000eed 	bl	36f80 <assertion_failed>
   333c8:	e3550000 	cmp	r5, #0
   333cc:	0a00001b 	beq	33440 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xd4>
   333d0:	e594301c 	ldr	r3, [r4, #28]
   333d4:	e3530000 	cmp	r3, #0
   333d8:	0a000003 	beq	333ec <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0x80>
   333dc:	e3a020ae 	mov	r2, #174	; 0xae
   333e0:	e59f106c 	ldr	r1, [pc, #108]	; 33454 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xe8>
   333e4:	e59f0074 	ldr	r0, [pc, #116]	; 33460 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xf4>
   333e8:	eb000ee4 	bl	36f80 <assertion_failed>
   333ec:	e5940018 	ldr	r0, [r4, #24]
   333f0:	e584501c 	str	r5, [r4, #28]
   333f4:	e3500000 	cmp	r0, #0
   333f8:	e5846020 	str	r6, [r4, #32]
   333fc:	0a000007 	beq	33420 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xb4>
   33400:	e1a01004 	mov	r1, r4
   33404:	e8bd4070 	pop	{r4, r5, r6, lr}
   33408:	ea001a0f 	b	39c4c <CGPIOManager::ConnectInterrupt(CGPIOPin*)>
   3340c:	e3a020a8 	mov	r2, #168	; 0xa8
   33410:	e59f103c 	ldr	r1, [pc, #60]	; 33454 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xe8>
   33414:	e59f0048 	ldr	r0, [pc, #72]	; 33464 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xf8>
   33418:	eb000ed8 	bl	36f80 <assertion_failed>
   3341c:	eaffffdb 	b	33390 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0x24>
   33420:	e59f102c 	ldr	r1, [pc, #44]	; 33454 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xe8>
   33424:	e59f003c 	ldr	r0, [pc, #60]	; 33468 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xfc>
   33428:	e3a020b3 	mov	r2, #179	; 0xb3
   3342c:	eb000ed3 	bl	36f80 <assertion_failed>
   33430:	e5940018 	ldr	r0, [r4, #24]
   33434:	e1a01004 	mov	r1, r4
   33438:	e8bd4070 	pop	{r4, r5, r6, lr}
   3343c:	ea001a02 	b	39c4c <CGPIOManager::ConnectInterrupt(CGPIOPin*)>
   33440:	e3a020ad 	mov	r2, #173	; 0xad
   33444:	e59f1008 	ldr	r1, [pc, #8]	; 33454 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0xe8>
   33448:	e59f001c 	ldr	r0, [pc, #28]	; 3346c <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0x100>
   3344c:	eb000ecb 	bl	36f80 <assertion_failed>
   33450:	eaffffde 	b	333d0 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*)+0x64>
   33454:	0004df74 	.word	0x0004df74
   33458:	0004e03c 	.word	0x0004e03c
   3345c:	0004e060 	.word	0x0004e060
   33460:	0004e088 	.word	0x0004e088
   33464:	0004dfc4 	.word	0x0004dfc4
   33468:	0004e098 	.word	0x0004e098
   3346c:	0004f6a4 	.word	0x0004f6a4

00033470 <CGPIOPin::DisconnectInterrupt()>:
   33470:	e5d03010 	ldrb	r3, [r0, #16]
   33474:	e92d4010 	push	{r4, lr}
   33478:	e2432002 	sub	r2, r3, #2
   3347c:	e3530000 	cmp	r3, #0
   33480:	13520001 	cmpne	r2, #1
   33484:	e1a04000 	mov	r4, r0
   33488:	8a000018 	bhi	334f0 <CGPIOPin::DisconnectInterrupt()+0x80>
   3348c:	e5d43024 	ldrb	r3, [r4, #36]	; 0x24
   33490:	e3530006 	cmp	r3, #6
   33494:	0a000003 	beq	334a8 <CGPIOPin::DisconnectInterrupt()+0x38>
   33498:	e3a020bd 	mov	r2, #189	; 0xbd
   3349c:	e59f1094 	ldr	r1, [pc, #148]	; 33538 <CGPIOPin::DisconnectInterrupt()+0xc8>
   334a0:	e59f0094 	ldr	r0, [pc, #148]	; 3353c <CGPIOPin::DisconnectInterrupt()+0xcc>
   334a4:	eb000eb5 	bl	36f80 <assertion_failed>
   334a8:	e5d43025 	ldrb	r3, [r4, #37]	; 0x25
   334ac:	e3530006 	cmp	r3, #6
   334b0:	0a000003 	beq	334c4 <CGPIOPin::DisconnectInterrupt()+0x54>
   334b4:	e3a020be 	mov	r2, #190	; 0xbe
   334b8:	e59f1078 	ldr	r1, [pc, #120]	; 33538 <CGPIOPin::DisconnectInterrupt()+0xc8>
   334bc:	e59f007c 	ldr	r0, [pc, #124]	; 33540 <CGPIOPin::DisconnectInterrupt()+0xd0>
   334c0:	eb000eae 	bl	36f80 <assertion_failed>
   334c4:	e594301c 	ldr	r3, [r4, #28]
   334c8:	e3530000 	cmp	r3, #0
   334cc:	0a000014 	beq	33524 <CGPIOPin::DisconnectInterrupt()+0xb4>
   334d0:	e3a03000 	mov	r3, #0
   334d4:	e5940018 	ldr	r0, [r4, #24]
   334d8:	e584301c 	str	r3, [r4, #28]
   334dc:	e1500003 	cmp	r0, r3
   334e0:	0a000007 	beq	33504 <CGPIOPin::DisconnectInterrupt()+0x94>
   334e4:	e1a01004 	mov	r1, r4
   334e8:	e8bd4010 	pop	{r4, lr}
   334ec:	ea001a02 	b	39cfc <CGPIOManager::DisconnectInterrupt(CGPIOPin*)>
   334f0:	e3a020bb 	mov	r2, #187	; 0xbb
   334f4:	e59f103c 	ldr	r1, [pc, #60]	; 33538 <CGPIOPin::DisconnectInterrupt()+0xc8>
   334f8:	e59f0044 	ldr	r0, [pc, #68]	; 33544 <CGPIOPin::DisconnectInterrupt()+0xd4>
   334fc:	eb000e9f 	bl	36f80 <assertion_failed>
   33500:	eaffffe1 	b	3348c <CGPIOPin::DisconnectInterrupt()+0x1c>
   33504:	e59f102c 	ldr	r1, [pc, #44]	; 33538 <CGPIOPin::DisconnectInterrupt()+0xc8>
   33508:	e59f0038 	ldr	r0, [pc, #56]	; 33548 <CGPIOPin::DisconnectInterrupt()+0xd8>
   3350c:	e3a020c3 	mov	r2, #195	; 0xc3
   33510:	eb000e9a 	bl	36f80 <assertion_failed>
   33514:	e5940018 	ldr	r0, [r4, #24]
   33518:	e1a01004 	mov	r1, r4
   3351c:	e8bd4010 	pop	{r4, lr}
   33520:	ea0019f5 	b	39cfc <CGPIOManager::DisconnectInterrupt(CGPIOPin*)>
   33524:	e3a020c0 	mov	r2, #192	; 0xc0
   33528:	e59f1008 	ldr	r1, [pc, #8]	; 33538 <CGPIOPin::DisconnectInterrupt()+0xc8>
   3352c:	e59f0018 	ldr	r0, [pc, #24]	; 3354c <CGPIOPin::DisconnectInterrupt()+0xdc>
   33530:	eb000e92 	bl	36f80 <assertion_failed>
   33534:	eaffffe5 	b	334d0 <CGPIOPin::DisconnectInterrupt()+0x60>
   33538:	0004df74 	.word	0x0004df74
   3353c:	0004e03c 	.word	0x0004e03c
   33540:	0004e060 	.word	0x0004e060
   33544:	0004dfc4 	.word	0x0004dfc4
   33548:	0004e098 	.word	0x0004e098
   3354c:	0004e0a8 	.word	0x0004e0a8

00033550 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)>:
   33550:	e5d03010 	ldrb	r3, [r0, #16]
   33554:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   33558:	e2432002 	sub	r2, r3, #2
   3355c:	e3530000 	cmp	r3, #0
   33560:	13520001 	cmpne	r2, #1
   33564:	e1a04000 	mov	r4, r0
   33568:	e1a05001 	mov	r5, r1
   3356c:	8a00002f 	bhi	33630 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xe0>
   33570:	e594301c 	ldr	r3, [r4, #28]
   33574:	e3530000 	cmp	r3, #0
   33578:	0a000033 	beq	3364c <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xfc>
   3357c:	e5d43024 	ldrb	r3, [r4, #36]	; 0x24
   33580:	e3530006 	cmp	r3, #6
   33584:	0a000003 	beq	33598 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x48>
   33588:	e3a020ce 	mov	r2, #206	; 0xce
   3358c:	e59f10cc 	ldr	r1, [pc, #204]	; 33660 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x110>
   33590:	e59f00cc 	ldr	r0, [pc, #204]	; 33664 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x114>
   33594:	eb000e79 	bl	36f80 <assertion_failed>
   33598:	e3550005 	cmp	r5, #5
   3359c:	8a000017 	bhi	33600 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xb0>
   335a0:	e5d43025 	ldrb	r3, [r4, #37]	; 0x25
   335a4:	e1530005 	cmp	r3, r5
   335a8:	0a00001b 	beq	3361c <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xcc>
   335ac:	e59f70b4 	ldr	r7, [pc, #180]	; 33668 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x118>
   335b0:	e5942008 	ldr	r2, [r4, #8]
   335b4:	e5970000 	ldr	r0, [r7]
   335b8:	e59f60ac 	ldr	r6, [pc, #172]	; 3366c <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x11c>
   335bc:	e0853085 	add	r3, r5, r5, lsl #1
   335c0:	e3500000 	cmp	r0, #0
   335c4:	e5c45024 	strb	r5, [r4, #36]	; 0x24
   335c8:	e0826006 	add	r6, r2, r6
   335cc:	e1a05103 	lsl	r5, r3, #2
   335d0:	1a000008 	bne	335f8 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xa8>
   335d4:	e594200c 	ldr	r2, [r4, #12]
   335d8:	e7963005 	ldr	r3, [r6, r5]
   335dc:	e1833002 	orr	r3, r3, r2
   335e0:	e7863005 	str	r3, [r6, r5]
   335e4:	e5973000 	ldr	r3, [r7]
   335e8:	e3530000 	cmp	r3, #0
   335ec:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   335f0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   335f4:	ea00037f 	b	343f8 <LeaveCritical>
   335f8:	eb000352 	bl	34348 <EnterCritical>
   335fc:	eafffff4 	b	335d4 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x84>
   33600:	e3a020cf 	mov	r2, #207	; 0xcf
   33604:	e59f1054 	ldr	r1, [pc, #84]	; 33660 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x110>
   33608:	e59f0060 	ldr	r0, [pc, #96]	; 33670 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x120>
   3360c:	eb000e5b 	bl	36f80 <assertion_failed>
   33610:	e5d43025 	ldrb	r3, [r4, #37]	; 0x25
   33614:	e1530005 	cmp	r3, r5
   33618:	1affffe3 	bne	335ac <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x5c>
   3361c:	e3a020d0 	mov	r2, #208	; 0xd0
   33620:	e59f1038 	ldr	r1, [pc, #56]	; 33660 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x110>
   33624:	e59f0048 	ldr	r0, [pc, #72]	; 33674 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x124>
   33628:	eb000e54 	bl	36f80 <assertion_failed>
   3362c:	eaffffde 	b	335ac <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x5c>
   33630:	e3a020cb 	mov	r2, #203	; 0xcb
   33634:	e59f1024 	ldr	r1, [pc, #36]	; 33660 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x110>
   33638:	e59f0038 	ldr	r0, [pc, #56]	; 33678 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x128>
   3363c:	eb000e4f 	bl	36f80 <assertion_failed>
   33640:	e594301c 	ldr	r3, [r4, #28]
   33644:	e3530000 	cmp	r3, #0
   33648:	1affffcb 	bne	3357c <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x2c>
   3364c:	e3a020cc 	mov	r2, #204	; 0xcc
   33650:	e59f1008 	ldr	r1, [pc, #8]	; 33660 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x110>
   33654:	e59f0020 	ldr	r0, [pc, #32]	; 3367c <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x12c>
   33658:	eb000e48 	bl	36f80 <assertion_failed>
   3365c:	eaffffc6 	b	3357c <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x2c>
   33660:	0004df74 	.word	0x0004df74
   33664:	0004e03c 	.word	0x0004e03c
   33668:	0017af28 	.word	0x0017af28
   3366c:	2020004c 	.word	0x2020004c
   33670:	0004e0b8 	.word	0x0004e0b8
   33674:	0004e0dc 	.word	0x0004e0dc
   33678:	0004dfc4 	.word	0x0004dfc4
   3367c:	0004e0a8 	.word	0x0004e0a8

00033680 <CGPIOPin::DisableInterrupt()>:
   33680:	e5d03010 	ldrb	r3, [r0, #16]
   33684:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   33688:	e2432002 	sub	r2, r3, #2
   3368c:	e3530000 	cmp	r3, #0
   33690:	13520001 	cmpne	r2, #1
   33694:	e1a05000 	mov	r5, r0
   33698:	8a00001e 	bhi	33718 <CGPIOPin::DisableInterrupt()+0x98>
   3369c:	e5d53024 	ldrb	r3, [r5, #36]	; 0x24
   336a0:	e3530005 	cmp	r3, #5
   336a4:	8a000015 	bhi	33700 <CGPIOPin::DisableInterrupt()+0x80>
   336a8:	e59f707c 	ldr	r7, [pc, #124]	; 3372c <CGPIOPin::DisableInterrupt()+0xac>
   336ac:	e5952008 	ldr	r2, [r5, #8]
   336b0:	e5970000 	ldr	r0, [r7]
   336b4:	e59f6074 	ldr	r6, [pc, #116]	; 33730 <CGPIOPin::DisableInterrupt()+0xb0>
   336b8:	e0833083 	add	r3, r3, r3, lsl #1
   336bc:	e3500000 	cmp	r0, #0
   336c0:	e1a04103 	lsl	r4, r3, #2
   336c4:	e0826006 	add	r6, r2, r6
   336c8:	1a00000a 	bne	336f8 <CGPIOPin::DisableInterrupt()+0x78>
   336cc:	e7963004 	ldr	r3, [r6, r4]
   336d0:	e595200c 	ldr	r2, [r5, #12]
   336d4:	e1c33002 	bic	r3, r3, r2
   336d8:	e7863004 	str	r3, [r6, r4]
   336dc:	e5973000 	ldr	r3, [r7]
   336e0:	e3530000 	cmp	r3, #0
   336e4:	0a000000 	beq	336ec <CGPIOPin::DisableInterrupt()+0x6c>
   336e8:	eb000342 	bl	343f8 <LeaveCritical>
   336ec:	e3a03006 	mov	r3, #6
   336f0:	e5c53024 	strb	r3, [r5, #36]	; 0x24
   336f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   336f8:	eb000312 	bl	34348 <EnterCritical>
   336fc:	eafffff2 	b	336cc <CGPIOPin::DisableInterrupt()+0x4c>
   33700:	e3a020e3 	mov	r2, #227	; 0xe3
   33704:	e59f1028 	ldr	r1, [pc, #40]	; 33734 <CGPIOPin::DisableInterrupt()+0xb4>
   33708:	e59f0028 	ldr	r0, [pc, #40]	; 33738 <CGPIOPin::DisableInterrupt()+0xb8>
   3370c:	eb000e1b 	bl	36f80 <assertion_failed>
   33710:	e5d53024 	ldrb	r3, [r5, #36]	; 0x24
   33714:	eaffffe3 	b	336a8 <CGPIOPin::DisableInterrupt()+0x28>
   33718:	e3a020e1 	mov	r2, #225	; 0xe1
   3371c:	e59f1010 	ldr	r1, [pc, #16]	; 33734 <CGPIOPin::DisableInterrupt()+0xb4>
   33720:	e59f0014 	ldr	r0, [pc, #20]	; 3373c <CGPIOPin::DisableInterrupt()+0xbc>
   33724:	eb000e15 	bl	36f80 <assertion_failed>
   33728:	eaffffdb 	b	3369c <CGPIOPin::DisableInterrupt()+0x1c>
   3372c:	0017af28 	.word	0x0017af28
   33730:	2020004c 	.word	0x2020004c
   33734:	0004df74 	.word	0x0004df74
   33738:	0004e0f8 	.word	0x0004e0f8
   3373c:	0004dfc4 	.word	0x0004dfc4

00033740 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)>:
   33740:	e5d03010 	ldrb	r3, [r0, #16]
   33744:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   33748:	e2432002 	sub	r2, r3, #2
   3374c:	e3530000 	cmp	r3, #0
   33750:	13520001 	cmpne	r2, #1
   33754:	e1a04000 	mov	r4, r0
   33758:	e1a05001 	mov	r5, r1
   3375c:	8a00002f 	bhi	33820 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xe0>
   33760:	e594301c 	ldr	r3, [r4, #28]
   33764:	e3530000 	cmp	r3, #0
   33768:	0a000033 	beq	3383c <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xfc>
   3376c:	e5d43025 	ldrb	r3, [r4, #37]	; 0x25
   33770:	e3530006 	cmp	r3, #6
   33774:	0a000003 	beq	33788 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x48>
   33778:	e3a020f7 	mov	r2, #247	; 0xf7
   3377c:	e59f10cc 	ldr	r1, [pc, #204]	; 33850 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x110>
   33780:	e59f00cc 	ldr	r0, [pc, #204]	; 33854 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x114>
   33784:	eb000dfd 	bl	36f80 <assertion_failed>
   33788:	e3550005 	cmp	r5, #5
   3378c:	8a000017 	bhi	337f0 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xb0>
   33790:	e5d43024 	ldrb	r3, [r4, #36]	; 0x24
   33794:	e1530005 	cmp	r3, r5
   33798:	0a00001b 	beq	3380c <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xcc>
   3379c:	e59f70b4 	ldr	r7, [pc, #180]	; 33858 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x118>
   337a0:	e5942008 	ldr	r2, [r4, #8]
   337a4:	e5970000 	ldr	r0, [r7]
   337a8:	e59f60ac 	ldr	r6, [pc, #172]	; 3385c <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x11c>
   337ac:	e0853085 	add	r3, r5, r5, lsl #1
   337b0:	e3500000 	cmp	r0, #0
   337b4:	e5c45025 	strb	r5, [r4, #37]	; 0x25
   337b8:	e0826006 	add	r6, r2, r6
   337bc:	e1a05103 	lsl	r5, r3, #2
   337c0:	1a000008 	bne	337e8 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xa8>
   337c4:	e594200c 	ldr	r2, [r4, #12]
   337c8:	e7963005 	ldr	r3, [r6, r5]
   337cc:	e1833002 	orr	r3, r3, r2
   337d0:	e7863005 	str	r3, [r6, r5]
   337d4:	e5973000 	ldr	r3, [r7]
   337d8:	e3530000 	cmp	r3, #0
   337dc:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   337e0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   337e4:	ea000303 	b	343f8 <LeaveCritical>
   337e8:	eb0002d6 	bl	34348 <EnterCritical>
   337ec:	eafffff4 	b	337c4 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x84>
   337f0:	e3a020f8 	mov	r2, #248	; 0xf8
   337f4:	e59f1054 	ldr	r1, [pc, #84]	; 33850 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x110>
   337f8:	e59f0060 	ldr	r0, [pc, #96]	; 33860 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x120>
   337fc:	eb000ddf 	bl	36f80 <assertion_failed>
   33800:	e5d43024 	ldrb	r3, [r4, #36]	; 0x24
   33804:	e1530005 	cmp	r3, r5
   33808:	1affffe3 	bne	3379c <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x5c>
   3380c:	e3a020f9 	mov	r2, #249	; 0xf9
   33810:	e59f1038 	ldr	r1, [pc, #56]	; 33850 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x110>
   33814:	e59f0048 	ldr	r0, [pc, #72]	; 33864 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x124>
   33818:	eb000dd8 	bl	36f80 <assertion_failed>
   3381c:	eaffffde 	b	3379c <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x5c>
   33820:	e3a020f4 	mov	r2, #244	; 0xf4
   33824:	e59f1024 	ldr	r1, [pc, #36]	; 33850 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x110>
   33828:	e59f0038 	ldr	r0, [pc, #56]	; 33868 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x128>
   3382c:	eb000dd3 	bl	36f80 <assertion_failed>
   33830:	e594301c 	ldr	r3, [r4, #28]
   33834:	e3530000 	cmp	r3, #0
   33838:	1affffcb 	bne	3376c <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x2c>
   3383c:	e3a020f5 	mov	r2, #245	; 0xf5
   33840:	e59f1008 	ldr	r1, [pc, #8]	; 33850 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x110>
   33844:	e59f0020 	ldr	r0, [pc, #32]	; 3386c <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x12c>
   33848:	eb000dcc 	bl	36f80 <assertion_failed>
   3384c:	eaffffc6 	b	3376c <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x2c>
   33850:	0004df74 	.word	0x0004df74
   33854:	0004e060 	.word	0x0004e060
   33858:	0017af28 	.word	0x0017af28
   3385c:	2020004c 	.word	0x2020004c
   33860:	0004e0b8 	.word	0x0004e0b8
   33864:	0004e11c 	.word	0x0004e11c
   33868:	0004dfc4 	.word	0x0004dfc4
   3386c:	0004e0a8 	.word	0x0004e0a8

00033870 <CGPIOPin::DisableInterrupt2()>:
   33870:	e5d03010 	ldrb	r3, [r0, #16]
   33874:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   33878:	e2432002 	sub	r2, r3, #2
   3387c:	e3530000 	cmp	r3, #0
   33880:	13520001 	cmpne	r2, #1
   33884:	e1a05000 	mov	r5, r0
   33888:	8a00001e 	bhi	33908 <CGPIOPin::DisableInterrupt2()+0x98>
   3388c:	e5d53025 	ldrb	r3, [r5, #37]	; 0x25
   33890:	e3530005 	cmp	r3, #5
   33894:	8a000015 	bhi	338f0 <CGPIOPin::DisableInterrupt2()+0x80>
   33898:	e59f707c 	ldr	r7, [pc, #124]	; 3391c <CGPIOPin::DisableInterrupt2()+0xac>
   3389c:	e5952008 	ldr	r2, [r5, #8]
   338a0:	e5970000 	ldr	r0, [r7]
   338a4:	e59f6074 	ldr	r6, [pc, #116]	; 33920 <CGPIOPin::DisableInterrupt2()+0xb0>
   338a8:	e0833083 	add	r3, r3, r3, lsl #1
   338ac:	e3500000 	cmp	r0, #0
   338b0:	e1a04103 	lsl	r4, r3, #2
   338b4:	e0826006 	add	r6, r2, r6
   338b8:	1a00000a 	bne	338e8 <CGPIOPin::DisableInterrupt2()+0x78>
   338bc:	e7963004 	ldr	r3, [r6, r4]
   338c0:	e595200c 	ldr	r2, [r5, #12]
   338c4:	e1c33002 	bic	r3, r3, r2
   338c8:	e7863004 	str	r3, [r6, r4]
   338cc:	e5973000 	ldr	r3, [r7]
   338d0:	e3530000 	cmp	r3, #0
   338d4:	0a000000 	beq	338dc <CGPIOPin::DisableInterrupt2()+0x6c>
   338d8:	eb0002c6 	bl	343f8 <LeaveCritical>
   338dc:	e3a03006 	mov	r3, #6
   338e0:	e5c53025 	strb	r3, [r5, #37]	; 0x25
   338e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   338e8:	eb000296 	bl	34348 <EnterCritical>
   338ec:	eafffff2 	b	338bc <CGPIOPin::DisableInterrupt2()+0x4c>
   338f0:	e3a02f43 	mov	r2, #268	; 0x10c
   338f4:	e59f1028 	ldr	r1, [pc, #40]	; 33924 <CGPIOPin::DisableInterrupt2()+0xb4>
   338f8:	e59f0028 	ldr	r0, [pc, #40]	; 33928 <CGPIOPin::DisableInterrupt2()+0xb8>
   338fc:	eb000d9f 	bl	36f80 <assertion_failed>
   33900:	e5d53025 	ldrb	r3, [r5, #37]	; 0x25
   33904:	eaffffe3 	b	33898 <CGPIOPin::DisableInterrupt2()+0x28>
   33908:	e59f201c 	ldr	r2, [pc, #28]	; 3392c <CGPIOPin::DisableInterrupt2()+0xbc>
   3390c:	e59f1010 	ldr	r1, [pc, #16]	; 33924 <CGPIOPin::DisableInterrupt2()+0xb4>
   33910:	e59f0018 	ldr	r0, [pc, #24]	; 33930 <CGPIOPin::DisableInterrupt2()+0xc0>
   33914:	eb000d99 	bl	36f80 <assertion_failed>
   33918:	eaffffdb 	b	3388c <CGPIOPin::DisableInterrupt2()+0x1c>
   3391c:	0017af28 	.word	0x0017af28
   33920:	2020004c 	.word	0x2020004c
   33924:	0004df74 	.word	0x0004df74
   33928:	0004e138 	.word	0x0004e138
   3392c:	0000010a 	.word	0x0000010a
   33930:	0004dfc4 	.word	0x0004dfc4

00033934 <CGPIOPin::ReadAll()>:
   33934:	e59f3004 	ldr	r3, [pc, #4]	; 33940 <CGPIOPin::ReadAll()+0xc>
   33938:	e5930034 	ldr	r0, [r3, #52]	; 0x34
   3393c:	e12fff1e 	bx	lr
   33940:	20200000 	.word	0x20200000

00033944 <CGPIOPin::SetPullUpMode(unsigned int)>:
   33944:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33948:	e1a08000 	mov	r8, r0
   3394c:	e59f4078 	ldr	r4, [pc, #120]	; 339cc <CGPIOPin::SetPullUpMode(unsigned int)+0x88>
   33950:	e1a09001 	mov	r9, r1
   33954:	e5940000 	ldr	r0, [r4]
   33958:	e5986008 	ldr	r6, [r8, #8]
   3395c:	e3500000 	cmp	r0, #0
   33960:	e59f5068 	ldr	r5, [pc, #104]	; 339d0 <CGPIOPin::SetPullUpMode(unsigned int)+0x8c>
   33964:	1a000016 	bne	339c4 <CGPIOPin::SetPullUpMode(unsigned int)+0x80>
   33968:	e3590002 	cmp	r9, #2
   3396c:	8a00000f 	bhi	339b0 <CGPIOPin::SetPullUpMode(unsigned int)+0x6c>
   33970:	e59f705c 	ldr	r7, [pc, #92]	; 339d4 <CGPIOPin::SetPullUpMode(unsigned int)+0x90>
   33974:	e3a00005 	mov	r0, #5
   33978:	e5879094 	str	r9, [r7, #148]	; 0x94
   3397c:	eb0005b5 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   33980:	e598300c 	ldr	r3, [r8, #12]
   33984:	e3a00005 	mov	r0, #5
   33988:	e7863005 	str	r3, [r6, r5]
   3398c:	eb0005b1 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   33990:	e3a03000 	mov	r3, #0
   33994:	e5873094 	str	r3, [r7, #148]	; 0x94
   33998:	e7863005 	str	r3, [r6, r5]
   3399c:	e5943000 	ldr	r3, [r4]
   339a0:	e3530000 	cmp	r3, #0
   339a4:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   339a8:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   339ac:	ea000291 	b	343f8 <LeaveCritical>
   339b0:	e59f2020 	ldr	r2, [pc, #32]	; 339d8 <CGPIOPin::SetPullUpMode(unsigned int)+0x94>
   339b4:	e59f1020 	ldr	r1, [pc, #32]	; 339dc <CGPIOPin::SetPullUpMode(unsigned int)+0x98>
   339b8:	e59f0020 	ldr	r0, [pc, #32]	; 339e0 <CGPIOPin::SetPullUpMode(unsigned int)+0x9c>
   339bc:	eb000d6f 	bl	36f80 <assertion_failed>
   339c0:	eaffffea 	b	33970 <CGPIOPin::SetPullUpMode(unsigned int)+0x2c>
   339c4:	eb00025f 	bl	34348 <EnterCritical>
   339c8:	eaffffe6 	b	33968 <CGPIOPin::SetPullUpMode(unsigned int)+0x24>
   339cc:	0017af28 	.word	0x0017af28
   339d0:	20200098 	.word	0x20200098
   339d4:	20200000 	.word	0x20200000
   339d8:	00000125 	.word	0x00000125
   339dc:	0004df74 	.word	0x0004df74
   339e0:	0004e15c 	.word	0x0004e15c

000339e4 <CGPIOPin::SetAlternateFunction(unsigned int)>:
   339e4:	e5903004 	ldr	r3, [r0, #4]
   339e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   339ec:	e3530035 	cmp	r3, #53	; 0x35
   339f0:	e1a06001 	mov	r6, r1
   339f4:	8a000021 	bhi	33a80 <CGPIOPin::SetAlternateFunction(unsigned int)+0x9c>
   339f8:	e59f009c 	ldr	r0, [pc, #156]	; 33a9c <CGPIOPin::SetAlternateFunction(unsigned int)+0xb8>
   339fc:	e3560005 	cmp	r6, #5
   33a00:	e0810093 	umull	r0, r1, r3, r0
   33a04:	e1a041a1 	lsr	r4, r1, #3
   33a08:	e2842302 	add	r2, r4, #134217728	; 0x8000000
   33a0c:	e0844104 	add	r4, r4, r4, lsl #2
   33a10:	e2822702 	add	r2, r2, #524288	; 0x80000
   33a14:	e0434084 	sub	r4, r3, r4, lsl #1
   33a18:	e1a05102 	lsl	r5, r2, #2
   33a1c:	e0844084 	add	r4, r4, r4, lsl #1
   33a20:	8a000011 	bhi	33a6c <CGPIOPin::SetAlternateFunction(unsigned int)+0x88>
   33a24:	e59f7074 	ldr	r7, [pc, #116]	; 33aa0 <CGPIOPin::SetAlternateFunction(unsigned int)+0xbc>
   33a28:	e5970000 	ldr	r0, [r7]
   33a2c:	e3500000 	cmp	r0, #0
   33a30:	1a00000b 	bne	33a64 <CGPIOPin::SetAlternateFunction(unsigned int)+0x80>
   33a34:	e3a01007 	mov	r1, #7
   33a38:	e59f2064 	ldr	r2, [pc, #100]	; 33aa4 <CGPIOPin::SetAlternateFunction(unsigned int)+0xc0>
   33a3c:	e5953000 	ldr	r3, [r5]
   33a40:	e7922106 	ldr	r2, [r2, r6, lsl #2]
   33a44:	e1c33411 	bic	r3, r3, r1, lsl r4
   33a48:	e1834412 	orr	r4, r3, r2, lsl r4
   33a4c:	e5854000 	str	r4, [r5]
   33a50:	e5973000 	ldr	r3, [r7]
   33a54:	e3530000 	cmp	r3, #0
   33a58:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   33a5c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   33a60:	ea000264 	b	343f8 <LeaveCritical>
   33a64:	eb000237 	bl	34348 <EnterCritical>
   33a68:	eafffff1 	b	33a34 <CGPIOPin::SetAlternateFunction(unsigned int)+0x50>
   33a6c:	e59f2034 	ldr	r2, [pc, #52]	; 33aa8 <CGPIOPin::SetAlternateFunction(unsigned int)+0xc4>
   33a70:	e59f1034 	ldr	r1, [pc, #52]	; 33aac <CGPIOPin::SetAlternateFunction(unsigned int)+0xc8>
   33a74:	e59f0034 	ldr	r0, [pc, #52]	; 33ab0 <CGPIOPin::SetAlternateFunction(unsigned int)+0xcc>
   33a78:	eb000d40 	bl	36f80 <assertion_failed>
   33a7c:	eaffffe8 	b	33a24 <CGPIOPin::SetAlternateFunction(unsigned int)+0x40>
   33a80:	e1a04000 	mov	r4, r0
   33a84:	e59f2028 	ldr	r2, [pc, #40]	; 33ab4 <CGPIOPin::SetAlternateFunction(unsigned int)+0xd0>
   33a88:	e59f101c 	ldr	r1, [pc, #28]	; 33aac <CGPIOPin::SetAlternateFunction(unsigned int)+0xc8>
   33a8c:	e59f0024 	ldr	r0, [pc, #36]	; 33ab8 <CGPIOPin::SetAlternateFunction(unsigned int)+0xd4>
   33a90:	eb000d3a 	bl	36f80 <assertion_failed>
   33a94:	e5943004 	ldr	r3, [r4, #4]
   33a98:	eaffffd6 	b	339f8 <CGPIOPin::SetAlternateFunction(unsigned int)+0x14>
   33a9c:	cccccccd 	.word	0xcccccccd
   33aa0:	0017af28 	.word	0x0017af28
   33aa4:	0004df4c 	.word	0x0004df4c
   33aa8:	00000136 	.word	0x00000136
   33aac:	0004df74 	.word	0x0004df74
   33ab0:	0004e17c 	.word	0x0004e17c
   33ab4:	00000132 	.word	0x00000132
   33ab8:	0004e168 	.word	0x0004e168

00033abc <CGPIOPin::SetMode(TGPIOMode, int)>:
   33abc:	e3510009 	cmp	r1, #9
   33ac0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   33ac4:	e1a05001 	mov	r5, r1
   33ac8:	e1a04000 	mov	r4, r0
   33acc:	e1a06002 	mov	r6, r2
   33ad0:	8a000041 	bhi	33bdc <CGPIOPin::SetMode(TGPIOMode, int)+0x120>
   33ad4:	e5c45010 	strb	r5, [r4, #16]
   33ad8:	e3a02000 	mov	r2, #0
   33adc:	ee072f9a 	mcr	15, 0, r2, cr7, cr10, {4}
   33ae0:	e5d43010 	ldrb	r3, [r4, #16]
   33ae4:	e2431004 	sub	r1, r3, #4
   33ae8:	e6ef0071 	uxtb	r0, r1
   33aec:	e3500005 	cmp	r0, #5
   33af0:	8a000006 	bhi	33b10 <CGPIOPin::SetMode(TGPIOMode, int)+0x54>
   33af4:	e1560002 	cmp	r6, r2
   33af8:	1a00003c 	bne	33bf0 <CGPIOPin::SetMode(TGPIOMode, int)+0x134>
   33afc:	e1a00004 	mov	r0, r4
   33b00:	ebffffb7 	bl	339e4 <CGPIOPin::SetAlternateFunction(unsigned int)>
   33b04:	e3a03000 	mov	r3, #0
   33b08:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   33b0c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   33b10:	e2433001 	sub	r3, r3, #1
   33b14:	e16f3f13 	clz	r3, r3
   33b18:	e3560000 	cmp	r6, #0
   33b1c:	e1a032a3 	lsr	r3, r3, #5
   33b20:	03a03000 	moveq	r3, #0
   33b24:	e3530000 	cmp	r3, #0
   33b28:	1a00004e 	bne	33c68 <CGPIOPin::SetMode(TGPIOMode, int)+0x1ac>
   33b2c:	e5943004 	ldr	r3, [r4, #4]
   33b30:	e3530035 	cmp	r3, #53	; 0x35
   33b34:	8a000033 	bhi	33c08 <CGPIOPin::SetMode(TGPIOMode, int)+0x14c>
   33b38:	e59f0138 	ldr	r0, [pc, #312]	; 33c78 <CGPIOPin::SetMode(TGPIOMode, int)+0x1bc>
   33b3c:	e59f7138 	ldr	r7, [pc, #312]	; 33c7c <CGPIOPin::SetMode(TGPIOMode, int)+0x1c0>
   33b40:	e0810093 	umull	r0, r1, r3, r0
   33b44:	e5970000 	ldr	r0, [r7]
   33b48:	e1a051a1 	lsr	r5, r1, #3
   33b4c:	e2852302 	add	r2, r5, #134217728	; 0x8000000
   33b50:	e0855105 	add	r5, r5, r5, lsl #2
   33b54:	e2822702 	add	r2, r2, #524288	; 0x80000
   33b58:	e0435085 	sub	r5, r3, r5, lsl #1
   33b5c:	e3500000 	cmp	r0, #0
   33b60:	e1a08102 	lsl	r8, r2, #2
   33b64:	e0855085 	add	r5, r5, r5, lsl #1
   33b68:	1a00002c 	bne	33c20 <CGPIOPin::SetMode(TGPIOMode, int)+0x164>
   33b6c:	e5d42010 	ldrb	r2, [r4, #16]
   33b70:	e3a01007 	mov	r1, #7
   33b74:	e2422001 	sub	r2, r2, #1
   33b78:	e16f2f12 	clz	r2, r2
   33b7c:	e5983000 	ldr	r3, [r8]
   33b80:	e1a022a2 	lsr	r2, r2, #5
   33b84:	e1c33511 	bic	r3, r3, r1, lsl r5
   33b88:	e1835512 	orr	r5, r3, r2, lsl r5
   33b8c:	e5885000 	str	r5, [r8]
   33b90:	e5973000 	ldr	r3, [r7]
   33b94:	e3530000 	cmp	r3, #0
   33b98:	1a000022 	bne	33c28 <CGPIOPin::SetMode(TGPIOMode, int)+0x16c>
   33b9c:	e3560000 	cmp	r6, #0
   33ba0:	0a00000a 	beq	33bd0 <CGPIOPin::SetMode(TGPIOMode, int)+0x114>
   33ba4:	e5d43010 	ldrb	r3, [r4, #16]
   33ba8:	e3530003 	cmp	r3, #3
   33bac:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   33bb0:	ea000006 	b	33bd0 <CGPIOPin::SetMode(TGPIOMode, int)+0x114>
   33bb4:	00033c58 	.word	0x00033c58
   33bb8:	00033c48 	.word	0x00033c48
   33bbc:	00033c38 	.word	0x00033c38
   33bc0:	00033bc4 	.word	0x00033bc4
   33bc4:	e1a00004 	mov	r0, r4
   33bc8:	e3a01001 	mov	r1, #1
   33bcc:	ebffff5c 	bl	33944 <CGPIOPin::SetPullUpMode(unsigned int)>
   33bd0:	e3a03000 	mov	r3, #0
   33bd4:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   33bd8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   33bdc:	e3a0203d 	mov	r2, #61	; 0x3d
   33be0:	e59f1098 	ldr	r1, [pc, #152]	; 33c80 <CGPIOPin::SetMode(TGPIOMode, int)+0x1c4>
   33be4:	e59f0098 	ldr	r0, [pc, #152]	; 33c84 <CGPIOPin::SetMode(TGPIOMode, int)+0x1c8>
   33be8:	eb000ce4 	bl	36f80 <assertion_failed>
   33bec:	eaffffb8 	b	33ad4 <CGPIOPin::SetMode(TGPIOMode, int)+0x18>
   33bf0:	e1a01002 	mov	r1, r2
   33bf4:	e1a00004 	mov	r0, r4
   33bf8:	ebffff51 	bl	33944 <CGPIOPin::SetPullUpMode(unsigned int)>
   33bfc:	e5d43010 	ldrb	r3, [r4, #16]
   33c00:	e2431004 	sub	r1, r3, #4
   33c04:	eaffffbc 	b	33afc <CGPIOPin::SetMode(TGPIOMode, int)+0x40>
   33c08:	e3a02056 	mov	r2, #86	; 0x56
   33c0c:	e59f106c 	ldr	r1, [pc, #108]	; 33c80 <CGPIOPin::SetMode(TGPIOMode, int)+0x1c4>
   33c10:	e59f0070 	ldr	r0, [pc, #112]	; 33c88 <CGPIOPin::SetMode(TGPIOMode, int)+0x1cc>
   33c14:	eb000cd9 	bl	36f80 <assertion_failed>
   33c18:	e5943004 	ldr	r3, [r4, #4]
   33c1c:	eaffffc5 	b	33b38 <CGPIOPin::SetMode(TGPIOMode, int)+0x7c>
   33c20:	eb0001c8 	bl	34348 <EnterCritical>
   33c24:	eaffffd0 	b	33b6c <CGPIOPin::SetMode(TGPIOMode, int)+0xb0>
   33c28:	eb0001f2 	bl	343f8 <LeaveCritical>
   33c2c:	e3560000 	cmp	r6, #0
   33c30:	0affffe6 	beq	33bd0 <CGPIOPin::SetMode(TGPIOMode, int)+0x114>
   33c34:	eaffffda 	b	33ba4 <CGPIOPin::SetMode(TGPIOMode, int)+0xe8>
   33c38:	e1a00004 	mov	r0, r4
   33c3c:	e3a01002 	mov	r1, #2
   33c40:	ebffff3f 	bl	33944 <CGPIOPin::SetPullUpMode(unsigned int)>
   33c44:	eaffffe1 	b	33bd0 <CGPIOPin::SetMode(TGPIOMode, int)+0x114>
   33c48:	e1a00004 	mov	r0, r4
   33c4c:	e3a01000 	mov	r1, #0
   33c50:	ebfffd74 	bl	33228 <CGPIOPin::Write(unsigned int)>
   33c54:	eaffffdd 	b	33bd0 <CGPIOPin::SetMode(TGPIOMode, int)+0x114>
   33c58:	e1a00004 	mov	r0, r4
   33c5c:	e3a01000 	mov	r1, #0
   33c60:	ebffff37 	bl	33944 <CGPIOPin::SetPullUpMode(unsigned int)>
   33c64:	eaffffd9 	b	33bd0 <CGPIOPin::SetMode(TGPIOMode, int)+0x114>
   33c68:	e1a01002 	mov	r1, r2
   33c6c:	e1a00004 	mov	r0, r4
   33c70:	ebffff33 	bl	33944 <CGPIOPin::SetPullUpMode(unsigned int)>
   33c74:	eaffffac 	b	33b2c <CGPIOPin::SetMode(TGPIOMode, int)+0x70>
   33c78:	cccccccd 	.word	0xcccccccd
   33c7c:	0017af28 	.word	0x0017af28
   33c80:	0004df74 	.word	0x0004df74
   33c84:	0004e18c 	.word	0x0004e18c
   33c88:	0004e168 	.word	0x0004e168

00033c8c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>:
   33c8c:	e92d4070 	push	{r4, r5, r6, lr}
   33c90:	e1a04000 	mov	r4, r0
   33c94:	e1a05001 	mov	r5, r1
   33c98:	e3a0c00a 	mov	ip, #10
   33c9c:	e3a01006 	mov	r1, #6
   33ca0:	e3a00000 	mov	r0, #0
   33ca4:	e5843018 	str	r3, [r4, #24]
   33ca8:	e59f3084 	ldr	r3, [pc, #132]	; 33d34 <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)+0xa8>
   33cac:	e3550035 	cmp	r5, #53	; 0x35
   33cb0:	e5845004 	str	r5, [r4, #4]
   33cb4:	e1a06002 	mov	r6, r2
   33cb8:	e5843000 	str	r3, [r4]
   33cbc:	e5c4c010 	strb	ip, [r4, #16]
   33cc0:	e584001c 	str	r0, [r4, #28]
   33cc4:	e5c41024 	strb	r1, [r4, #36]	; 0x24
   33cc8:	e5c41025 	strb	r1, [r4, #37]	; 0x25
   33ccc:	8a00000b 	bhi	33d00 <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)+0x74>
   33cd0:	e3a02001 	mov	r2, #1
   33cd4:	e205301f 	and	r3, r5, #31
   33cd8:	e1a052a5 	lsr	r5, r5, #5
   33cdc:	e1a03312 	lsl	r3, r2, r3
   33ce0:	e1a05105 	lsl	r5, r5, #2
   33ce4:	e1a00004 	mov	r0, r4
   33ce8:	e1a01006 	mov	r1, r6
   33cec:	e584300c 	str	r3, [r4, #12]
   33cf0:	e5845008 	str	r5, [r4, #8]
   33cf4:	ebffff70 	bl	33abc <CGPIOPin::SetMode(TGPIOMode, int)>
   33cf8:	e1a00004 	mov	r0, r4
   33cfc:	e8bd8070 	pop	{r4, r5, r6, pc}
   33d00:	eb001c4d 	bl	3ae3c <CMachineInfo::Get()>
   33d04:	e6ef1075 	uxtb	r1, r5
   33d08:	eb001c1f 	bl	3ad8c <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const>
   33d0c:	e3500035 	cmp	r0, #53	; 0x35
   33d10:	e1a05000 	mov	r5, r0
   33d14:	e5840004 	str	r0, [r4, #4]
   33d18:	9affffec 	bls	33cd0 <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)+0x44>
   33d1c:	e3a0202b 	mov	r2, #43	; 0x2b
   33d20:	e59f1010 	ldr	r1, [pc, #16]	; 33d38 <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)+0xac>
   33d24:	e59f0010 	ldr	r0, [pc, #16]	; 33d3c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)+0xb0>
   33d28:	eb000c94 	bl	36f80 <assertion_failed>
   33d2c:	e5945004 	ldr	r5, [r4, #4]
   33d30:	eaffffe6 	b	33cd0 <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)+0x44>
   33d34:	0004df6c 	.word	0x0004df6c
   33d38:	0004df74 	.word	0x0004df74
   33d3c:	0004e168 	.word	0x0004e168

00033d40 <CGPIOPin::InterruptHandler()>:
   33d40:	e5d03010 	ldrb	r3, [r0, #16]
   33d44:	e92d4010 	push	{r4, lr}
   33d48:	e2432002 	sub	r2, r3, #2
   33d4c:	e3530000 	cmp	r3, #0
   33d50:	13520001 	cmpne	r2, #1
   33d54:	e1a04000 	mov	r4, r0
   33d58:	8a00000b 	bhi	33d8c <CGPIOPin::InterruptHandler()+0x4c>
   33d5c:	e5d43024 	ldrb	r3, [r4, #36]	; 0x24
   33d60:	e3530005 	cmp	r3, #5
   33d64:	9a000002 	bls	33d74 <CGPIOPin::InterruptHandler()+0x34>
   33d68:	e5d43025 	ldrb	r3, [r4, #37]	; 0x25
   33d6c:	e3530005 	cmp	r3, #5
   33d70:	8a00000a 	bhi	33da0 <CGPIOPin::InterruptHandler()+0x60>
   33d74:	e594301c 	ldr	r3, [r4, #28]
   33d78:	e3530000 	cmp	r3, #0
   33d7c:	0a00000e 	beq	33dbc <CGPIOPin::InterruptHandler()+0x7c>
   33d80:	e5940020 	ldr	r0, [r4, #32]
   33d84:	e8bd4010 	pop	{r4, lr}
   33d88:	e12fff13 	bx	r3
   33d8c:	e59f2048 	ldr	r2, [pc, #72]	; 33ddc <CGPIOPin::InterruptHandler()+0x9c>
   33d90:	e59f1048 	ldr	r1, [pc, #72]	; 33de0 <CGPIOPin::InterruptHandler()+0xa0>
   33d94:	e59f0048 	ldr	r0, [pc, #72]	; 33de4 <CGPIOPin::InterruptHandler()+0xa4>
   33d98:	eb000c78 	bl	36f80 <assertion_failed>
   33d9c:	eaffffee 	b	33d5c <CGPIOPin::InterruptHandler()+0x1c>
   33da0:	e59f2040 	ldr	r2, [pc, #64]	; 33de8 <CGPIOPin::InterruptHandler()+0xa8>
   33da4:	e59f1034 	ldr	r1, [pc, #52]	; 33de0 <CGPIOPin::InterruptHandler()+0xa0>
   33da8:	e59f003c 	ldr	r0, [pc, #60]	; 33dec <CGPIOPin::InterruptHandler()+0xac>
   33dac:	eb000c73 	bl	36f80 <assertion_failed>
   33db0:	e594301c 	ldr	r3, [r4, #28]
   33db4:	e3530000 	cmp	r3, #0
   33db8:	1afffff0 	bne	33d80 <CGPIOPin::InterruptHandler()+0x40>
   33dbc:	e59f002c 	ldr	r0, [pc, #44]	; 33df0 <CGPIOPin::InterruptHandler()+0xb0>
   33dc0:	e59f202c 	ldr	r2, [pc, #44]	; 33df4 <CGPIOPin::InterruptHandler()+0xb4>
   33dc4:	e59f1014 	ldr	r1, [pc, #20]	; 33de0 <CGPIOPin::InterruptHandler()+0xa0>
   33dc8:	eb000c6c 	bl	36f80 <assertion_failed>
   33dcc:	e594301c 	ldr	r3, [r4, #28]
   33dd0:	e5940020 	ldr	r0, [r4, #32]
   33dd4:	e8bd4010 	pop	{r4, lr}
   33dd8:	e12fff13 	bx	r3
   33ddc:	00000145 	.word	0x00000145
   33de0:	0004df74 	.word	0x0004df74
   33de4:	0004dfc4 	.word	0x0004dfc4
   33de8:	00000147 	.word	0x00000147
   33dec:	0004e1a4 	.word	0x0004e1a4
   33df0:	0004e0a8 	.word	0x0004e0a8
   33df4:	00000149 	.word	0x00000149

00033df8 <CGPIOPin::DisableAllInterrupts(unsigned int)>:
   33df8:	e3500035 	cmp	r0, #53	; 0x35
   33dfc:	e92d4070 	push	{r4, r5, r6, lr}
   33e00:	e1a05000 	mov	r5, r0
   33e04:	8a00001d 	bhi	33e80 <CGPIOPin::DisableAllInterrupts(unsigned int)+0x88>
   33e08:	e3a02001 	mov	r2, #1
   33e0c:	e59f6080 	ldr	r6, [pc, #128]	; 33e94 <CGPIOPin::DisableAllInterrupts(unsigned int)+0x9c>
   33e10:	e59f4080 	ldr	r4, [pc, #128]	; 33e98 <CGPIOPin::DisableAllInterrupts(unsigned int)+0xa0>
   33e14:	e5960000 	ldr	r0, [r6]
   33e18:	e08442a5 	add	r4, r4, r5, lsr #5
   33e1c:	e3500000 	cmp	r0, #0
   33e20:	e205501f 	and	r5, r5, #31
   33e24:	e1a04104 	lsl	r4, r4, #2
   33e28:	e1a05512 	lsl	r5, r2, r5
   33e2c:	1a00000e 	bne	33e6c <CGPIOPin::DisableAllInterrupts(unsigned int)+0x74>
   33e30:	e59f3064 	ldr	r3, [pc, #100]	; 33e9c <CGPIOPin::DisableAllInterrupts(unsigned int)+0xa4>
   33e34:	e1540003 	cmp	r4, r3
   33e38:	88bd8070 	pophi	{r4, r5, r6, pc}
   33e3c:	e1e02005 	mvn	r2, r5
   33e40:	e59f1054 	ldr	r1, [pc, #84]	; 33e9c <CGPIOPin::DisableAllInterrupts(unsigned int)+0xa4>
   33e44:	e5943000 	ldr	r3, [r4]
   33e48:	e0033002 	and	r3, r3, r2
   33e4c:	e484300c 	str	r3, [r4], #12
   33e50:	e1540001 	cmp	r4, r1
   33e54:	9afffffa 	bls	33e44 <CGPIOPin::DisableAllInterrupts(unsigned int)+0x4c>
   33e58:	e5963000 	ldr	r3, [r6]
   33e5c:	e3530000 	cmp	r3, #0
   33e60:	08bd8070 	popeq	{r4, r5, r6, pc}
   33e64:	e8bd4070 	pop	{r4, r5, r6, lr}
   33e68:	ea000162 	b	343f8 <LeaveCritical>
   33e6c:	eb000135 	bl	34348 <EnterCritical>
   33e70:	e59f3024 	ldr	r3, [pc, #36]	; 33e9c <CGPIOPin::DisableAllInterrupts(unsigned int)+0xa4>
   33e74:	e1540003 	cmp	r4, r3
   33e78:	9affffef 	bls	33e3c <CGPIOPin::DisableAllInterrupts(unsigned int)+0x44>
   33e7c:	eafffff5 	b	33e58 <CGPIOPin::DisableAllInterrupts(unsigned int)+0x60>
   33e80:	e59f2018 	ldr	r2, [pc, #24]	; 33ea0 <CGPIOPin::DisableAllInterrupts(unsigned int)+0xa8>
   33e84:	e59f1018 	ldr	r1, [pc, #24]	; 33ea4 <CGPIOPin::DisableAllInterrupts(unsigned int)+0xac>
   33e88:	e59f0018 	ldr	r0, [pc, #24]	; 33ea8 <CGPIOPin::DisableAllInterrupts(unsigned int)+0xb0>
   33e8c:	eb000c3b 	bl	36f80 <assertion_failed>
   33e90:	eaffffdc 	b	33e08 <CGPIOPin::DisableAllInterrupts(unsigned int)+0x10>
   33e94:	0017af28 	.word	0x0017af28
   33e98:	08080013 	.word	0x08080013
   33e9c:	2020008b 	.word	0x2020008b
   33ea0:	0000014f 	.word	0x0000014f
   33ea4:	0004df74 	.word	0x0004df74
   33ea8:	0004e1f0 	.word	0x0004e1f0

00033eac <_GLOBAL__sub_I__ZN8CGPIOPin10s_SpinLockE>:
   33eac:	e3a02001 	mov	r2, #1
   33eb0:	e59f3004 	ldr	r3, [pc, #4]	; 33ebc <_GLOBAL__sub_I__ZN8CGPIOPin10s_SpinLockE+0x10>
   33eb4:	e5832000 	str	r2, [r3]
   33eb8:	e12fff1e 	bx	lr
   33ebc:	0017af28 	.word	0x0017af28

00033ec0 <__aeabi_uidiv>:
   33ec0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   33ec4:	e3a02000 	mov	r2, #0
   33ec8:	eb001ede 	bl	3ba48 <__Divide>
   33ecc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00033ed0 <__aeabi_uidivmod>:
   33ed0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   33ed4:	e24dd00c 	sub	sp, sp, #12
   33ed8:	e28d2004 	add	r2, sp, #4
   33edc:	eb001ed9 	bl	3ba48 <__Divide>
   33ee0:	e59d1004 	ldr	r1, [sp, #4]
   33ee4:	e28dd00c 	add	sp, sp, #12
   33ee8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00033eec <__aeabi_idiv>:
   33eec:	ea001f09 	b	3bb18 <__DivideInteger>

00033ef0 <__aeabi_idivmod>:
   33ef0:	e92d5003 	push	{r0, r1, ip, lr}
   33ef4:	ebfffffc 	bl	33eec <__aeabi_idiv>
   33ef8:	e8bd5006 	pop	{r1, r2, ip, lr}
   33efc:	e0030290 	mul	r3, r0, r2
   33f00:	e0411003 	sub	r1, r1, r3
   33f04:	e1a0f00e 	mov	pc, lr

00033f08 <_lock_mutex_mmu>:
   33f08:	e3a01001 	mov	r1, #1
   33f0c:	e1902f9f 	ldrex	r2, [r0]
   33f10:	e1520001 	cmp	r2, r1
   33f14:	0a000003 	beq	33f28 <_lock_mutex_mmu+0x20>
   33f18:	11802f91 	strexne	r2, r1, [r0]
   33f1c:	13520001 	cmpne	r2, #1
   33f20:	0afffff9 	beq	33f0c <_lock_mutex_mmu+0x4>
   33f24:	e12fff1e 	bx	lr
   33f28:	e320f000 	nop	{0}
   33f2c:	eafffff6 	b	33f0c <_lock_mutex_mmu+0x4>

00033f30 <_unlock_mutex_mmu>:
   33f30:	e3a01000 	mov	r1, #0
   33f34:	e5801000 	str	r1, [r0]
   33f38:	e12fff1e 	bx	lr

00033f3c <_lock_mutex_swp>:
   33f3c:	e3a02001 	mov	r2, #1
   33f40:	e1001092 	swp	r1, r2, [r0]
   33f44:	e1510002 	cmp	r1, r2
   33f48:	0afffffb 	beq	33f3c <_lock_mutex_swp>
   33f4c:	e12fff1e 	bx	lr

00033f50 <_lock_mutex_simple>:
   33f50:	e3a01000 	mov	r1, #0
   33f54:	e3a03001 	mov	r3, #1
   33f58:	e5902000 	ldr	r2, [r0]
   33f5c:	e1520003 	cmp	r2, r3
   33f60:	0afffffa 	beq	33f50 <_lock_mutex_simple>
   33f64:	e5801000 	str	r1, [r0]
   33f68:	e12fff1e 	bx	lr

00033f6c <_unlock_mutex_simple>:
   33f6c:	e3a01000 	mov	r1, #0
   33f70:	e5801000 	str	r1, [r0]
   33f74:	e12fff1e 	bx	lr

00033f78 <CMemorySystem::~CMemorySystem()>:
   33f78:	e5903000 	ldr	r3, [r0]
   33f7c:	e92d4070 	push	{r4, r5, r6, lr}
   33f80:	e3530000 	cmp	r3, #0
   33f84:	e1a04000 	mov	r4, r0
   33f88:	0a000005 	beq	33fa4 <CMemorySystem::~CMemorySystem()+0x2c>
   33f8c:	ee112f10 	mrc	15, 0, r2, cr1, cr0, {0}
   33f90:	e59f305c 	ldr	r3, [pc, #92]	; 33ff4 <CMemorySystem::~CMemorySystem()+0x7c>
   33f94:	e0033002 	and	r3, r3, r2
   33f98:	ee013f10 	mcr	15, 0, r3, cr1, cr0, {0}
   33f9c:	e3a03000 	mov	r3, #0
   33fa0:	ee083f17 	mcr	15, 0, r3, cr8, cr7, {0}
   33fa4:	e594500c 	ldr	r5, [r4, #12]
   33fa8:	e3550000 	cmp	r5, #0
   33fac:	0a000004 	beq	33fc4 <CMemorySystem::~CMemorySystem()+0x4c>
   33fb0:	e1a00005 	mov	r0, r5
   33fb4:	eb00075d 	bl	35d30 <CPageTable::~CPageTable()>
   33fb8:	e1a00005 	mov	r0, r5
   33fbc:	e3a01008 	mov	r1, #8
   33fc0:	eb0000d8 	bl	34328 <operator delete(void*, unsigned int)>
   33fc4:	e3a03000 	mov	r3, #0
   33fc8:	e5945008 	ldr	r5, [r4, #8]
   33fcc:	e584300c 	str	r3, [r4, #12]
   33fd0:	e1550003 	cmp	r5, r3
   33fd4:	0a000004 	beq	33fec <CMemorySystem::~CMemorySystem()+0x74>
   33fd8:	e1a00005 	mov	r0, r5
   33fdc:	eb000753 	bl	35d30 <CPageTable::~CPageTable()>
   33fe0:	e1a00005 	mov	r0, r5
   33fe4:	e3a01008 	mov	r1, #8
   33fe8:	eb0000ce 	bl	34328 <operator delete(void*, unsigned int)>
   33fec:	e1a00004 	mov	r0, r4
   33ff0:	e8bd8070 	pop	{r4, r5, r6, pc}
   33ff4:	ff7fe7fa 	.word	0xff7fe7fa

00033ff8 <CMemorySystem::GetMemSize() const>:
   33ff8:	e5900004 	ldr	r0, [r0, #4]
   33ffc:	e12fff1e 	bx	lr

00034000 <CMemorySystem::SetPageTable0(CPageTable*, unsigned int)>:
   34000:	e5903000 	ldr	r3, [r0]
   34004:	e92d4070 	push	{r4, r5, r6, lr}
   34008:	e3530000 	cmp	r3, #0
   3400c:	e1a04000 	mov	r4, r0
   34010:	e1a05001 	mov	r5, r1
   34014:	e1a06002 	mov	r6, r2
   34018:	0a00000c 	beq	34050 <CMemorySystem::SetPageTable0(CPageTable*, unsigned int)+0x50>
   3401c:	e3550000 	cmp	r5, #0
   34020:	05945008 	ldreq	r5, [r4, #8]
   34024:	ee1d4f30 	mrc	15, 0, r4, cr13, cr0, {1}
   34028:	e1a00005 	mov	r0, r5
   3402c:	eb000748 	bl	35d54 <CPageTable::GetBaseAddress() const>
   34030:	ee020f10 	mcr	15, 0, r0, cr2, cr0, {0}
   34034:	e3a03000 	mov	r3, #0
   34038:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3403c:	ee0d6f30 	mcr	15, 0, r6, cr13, cr0, {1}
   34040:	ee073f95 	mcr	15, 0, r3, cr7, cr5, {4}
   34044:	e6ef4074 	uxtb	r4, r4
   34048:	ee084f57 	mcr	15, 0, r4, cr8, cr7, {2}
   3404c:	e8bd8070 	pop	{r4, r5, r6, pc}
   34050:	e3a02083 	mov	r2, #131	; 0x83
   34054:	e59f1008 	ldr	r1, [pc, #8]	; 34064 <CMemorySystem::SetPageTable0(CPageTable*, unsigned int)+0x64>
   34058:	e59f0008 	ldr	r0, [pc, #8]	; 34068 <CMemorySystem::SetPageTable0(CPageTable*, unsigned int)+0x68>
   3405c:	eb000bc7 	bl	36f80 <assertion_failed>
   34060:	eaffffed 	b	3401c <CMemorySystem::SetPageTable0(CPageTable*, unsigned int)+0x1c>
   34064:	0004e204 	.word	0x0004e204
   34068:	0004e210 	.word	0x0004e210

0003406c <CMemorySystem::SetPageTable0(unsigned int, unsigned int)>:
   3406c:	e5903000 	ldr	r3, [r0]
   34070:	e92d4070 	push	{r4, r5, r6, lr}
   34074:	e3530000 	cmp	r3, #0
   34078:	e1a05001 	mov	r5, r1
   3407c:	e1a04002 	mov	r4, r2
   34080:	1a000003 	bne	34094 <CMemorySystem::SetPageTable0(unsigned int, unsigned int)+0x28>
   34084:	e3a02099 	mov	r2, #153	; 0x99
   34088:	e59f1028 	ldr	r1, [pc, #40]	; 340b8 <CMemorySystem::SetPageTable0(unsigned int, unsigned int)+0x4c>
   3408c:	e59f0028 	ldr	r0, [pc, #40]	; 340bc <CMemorySystem::SetPageTable0(unsigned int, unsigned int)+0x50>
   34090:	eb000bba 	bl	36f80 <assertion_failed>
   34094:	ee1d3f30 	mrc	15, 0, r3, cr13, cr0, {1}
   34098:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
   3409c:	e3a02000 	mov	r2, #0
   340a0:	ee072f9a 	mcr	15, 0, r2, cr7, cr10, {4}
   340a4:	ee0d4f30 	mcr	15, 0, r4, cr13, cr0, {1}
   340a8:	ee072f95 	mcr	15, 0, r2, cr7, cr5, {4}
   340ac:	e6ef3073 	uxtb	r3, r3
   340b0:	ee083f57 	mcr	15, 0, r3, cr8, cr7, {2}
   340b4:	e8bd8070 	pop	{r4, r5, r6, pc}
   340b8:	0004e204 	.word	0x0004e204
   340bc:	0004e210 	.word	0x0004e210

000340c0 <CMemorySystem::GetTTBR0() const>:
   340c0:	e5903000 	ldr	r3, [r0]
   340c4:	e3530000 	cmp	r3, #0
   340c8:	0a000001 	beq	340d4 <CMemorySystem::GetTTBR0() const+0x14>
   340cc:	ee120f10 	mrc	15, 0, r0, cr2, cr0, {0}
   340d0:	e12fff1e 	bx	lr
   340d4:	e92d4010 	push	{r4, lr}
   340d8:	e3a020aa 	mov	r2, #170	; 0xaa
   340dc:	e59f100c 	ldr	r1, [pc, #12]	; 340f0 <CMemorySystem::GetTTBR0() const+0x30>
   340e0:	e59f000c 	ldr	r0, [pc, #12]	; 340f4 <CMemorySystem::GetTTBR0() const+0x34>
   340e4:	eb000ba5 	bl	36f80 <assertion_failed>
   340e8:	ee120f10 	mrc	15, 0, r0, cr2, cr0, {0}
   340ec:	e8bd8010 	pop	{r4, pc}
   340f0:	0004e204 	.word	0x0004e204
   340f4:	0004e210 	.word	0x0004e210

000340f8 <CMemorySystem::GetContextID() const>:
   340f8:	e5903000 	ldr	r3, [r0]
   340fc:	e3530000 	cmp	r3, #0
   34100:	0a000001 	beq	3410c <CMemorySystem::GetContextID() const+0x14>
   34104:	ee1d0f30 	mrc	15, 0, r0, cr13, cr0, {1}
   34108:	e12fff1e 	bx	lr
   3410c:	e92d4010 	push	{r4, lr}
   34110:	e3a020b4 	mov	r2, #180	; 0xb4
   34114:	e59f100c 	ldr	r1, [pc, #12]	; 34128 <CMemorySystem::GetContextID() const+0x30>
   34118:	e59f000c 	ldr	r0, [pc, #12]	; 3412c <CMemorySystem::GetContextID() const+0x34>
   3411c:	eb000b97 	bl	36f80 <assertion_failed>
   34120:	ee1d0f30 	mrc	15, 0, r0, cr13, cr0, {1}
   34124:	e8bd8010 	pop	{r4, pc}
   34128:	0004e204 	.word	0x0004e204
   3412c:	0004e210 	.word	0x0004e210

00034130 <CMemorySystem::EnableMMU()>:
   34130:	e5903000 	ldr	r3, [r0]
   34134:	e92d4010 	push	{r4, lr}
   34138:	e3530000 	cmp	r3, #0
   3413c:	e1a04000 	mov	r4, r0
   34140:	0a000021 	beq	341cc <CMemorySystem::EnableMMU()+0x9c>
   34144:	ee113f30 	mrc	15, 0, r3, cr1, cr0, {1}
   34148:	e3833040 	orr	r3, r3, #64	; 0x40
   3414c:	ee013f30 	mcr	15, 0, r3, cr1, cr0, {1}
   34150:	ee103f70 	mrc	15, 0, r3, cr0, cr0, {3}
   34154:	e3130001 	tst	r3, #1
   34158:	1a000020 	bne	341e0 <CMemorySystem::EnableMMU()+0xb0>
   3415c:	e3a03003 	mov	r3, #3
   34160:	ee023f50 	mcr	15, 0, r3, cr2, cr0, {2}
   34164:	e5940008 	ldr	r0, [r4, #8]
   34168:	e3500000 	cmp	r0, #0
   3416c:	0a000026 	beq	3420c <CMemorySystem::EnableMMU()+0xdc>
   34170:	eb0006f7 	bl	35d54 <CPageTable::GetBaseAddress() const>
   34174:	ee020f10 	mcr	15, 0, r0, cr2, cr0, {0}
   34178:	e594000c 	ldr	r0, [r4, #12]
   3417c:	e3500000 	cmp	r0, #0
   34180:	0a00001b 	beq	341f4 <CMemorySystem::EnableMMU()+0xc4>
   34184:	eb0006f2 	bl	35d54 <CPageTable::GetBaseAddress() const>
   34188:	ee020f30 	mcr	15, 0, r0, cr2, cr0, {1}
   3418c:	e3a03005 	mov	r3, #5
   34190:	ee033f10 	mcr	15, 0, r3, cr3, cr0, {0}
   34194:	e3a03000 	mov	r3, #0
   34198:	ee073f16 	mcr	15, 0, r3, cr7, cr6, {0}
   3419c:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   341a0:	ee073f15 	mcr	15, 0, r3, cr7, cr5, {0}
   341a4:	ee073fd5 	mcr	15, 0, r3, cr7, cr5, {6}
   341a8:	ee083f17 	mcr	15, 0, r3, cr8, cr7, {0}
   341ac:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   341b0:	ee073f95 	mcr	15, 0, r3, cr7, cr5, {4}
   341b4:	ee113f10 	mrc	15, 0, r3, cr1, cr0, {0}
   341b8:	e59f2064 	ldr	r2, [pc, #100]	; 34224 <CMemorySystem::EnableMMU()+0xf4>
   341bc:	e3c33002 	bic	r3, r3, #2
   341c0:	e1832002 	orr	r2, r3, r2
   341c4:	ee012f10 	mcr	15, 0, r2, cr1, cr0, {0}
   341c8:	e8bd8010 	pop	{r4, pc}
   341cc:	e3a020c0 	mov	r2, #192	; 0xc0
   341d0:	e59f1050 	ldr	r1, [pc, #80]	; 34228 <CMemorySystem::EnableMMU()+0xf8>
   341d4:	e59f0050 	ldr	r0, [pc, #80]	; 3422c <CMemorySystem::EnableMMU()+0xfc>
   341d8:	eb000b68 	bl	36f80 <assertion_failed>
   341dc:	eaffffd8 	b	34144 <CMemorySystem::EnableMMU()+0x14>
   341e0:	e3a020cd 	mov	r2, #205	; 0xcd
   341e4:	e59f103c 	ldr	r1, [pc, #60]	; 34228 <CMemorySystem::EnableMMU()+0xf8>
   341e8:	e59f0040 	ldr	r0, [pc, #64]	; 34230 <CMemorySystem::EnableMMU()+0x100>
   341ec:	eb000b63 	bl	36f80 <assertion_failed>
   341f0:	eaffffd9 	b	3415c <CMemorySystem::EnableMMU()+0x2c>
   341f4:	e59f0038 	ldr	r0, [pc, #56]	; 34234 <CMemorySystem::EnableMMU()+0x104>
   341f8:	e3a020d7 	mov	r2, #215	; 0xd7
   341fc:	e59f1024 	ldr	r1, [pc, #36]	; 34228 <CMemorySystem::EnableMMU()+0xf8>
   34200:	eb000b5e 	bl	36f80 <assertion_failed>
   34204:	e594000c 	ldr	r0, [r4, #12]
   34208:	eaffffdd 	b	34184 <CMemorySystem::EnableMMU()+0x54>
   3420c:	e59f0024 	ldr	r0, [pc, #36]	; 34238 <CMemorySystem::EnableMMU()+0x108>
   34210:	e3a020d3 	mov	r2, #211	; 0xd3
   34214:	e59f100c 	ldr	r1, [pc, #12]	; 34228 <CMemorySystem::EnableMMU()+0xf8>
   34218:	eb000b58 	bl	36f80 <assertion_failed>
   3421c:	e5940008 	ldr	r0, [r4, #8]
   34220:	eaffffd2 	b	34170 <CMemorySystem::EnableMMU()+0x40>
   34224:	00c01805 	.word	0x00c01805
   34228:	0004e204 	.word	0x0004e204
   3422c:	0004e210 	.word	0x0004e210
   34230:	0004e220 	.word	0x0004e220
   34234:	0004e268 	.word	0x0004e268
   34238:	0004e24c 	.word	0x0004e24c

0003423c <CMemorySystem::CMemorySystem(int)>:
   3423c:	e92d4030 	push	{r4, r5, lr}
   34240:	e3a05000 	mov	r5, #0
   34244:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   34248:	e8800022 	stm	r0, {r1, r5}
   3424c:	e5805008 	str	r5, [r0, #8]
   34250:	e580500c 	str	r5, [r0, #12]
   34254:	e1a04000 	mov	r4, r0
   34258:	e28d000c 	add	r0, sp, #12
   3425c:	ebfffb78 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   34260:	e3a03014 	mov	r3, #20
   34264:	e58d5000 	str	r5, [sp]
   34268:	e28d000c 	add	r0, sp, #12
   3426c:	e08d2003 	add	r2, sp, r3
   34270:	e59f1094 	ldr	r1, [pc, #148]	; 3430c <CMemorySystem::CMemorySystem(int)+0xd0>
   34274:	ebfffbb9 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   34278:	e3500000 	cmp	r0, #0
   3427c:	1a000018 	bne	342e4 <CMemorySystem::CMemorySystem(int)+0xa8>
   34280:	e3a01303 	mov	r1, #201326592	; 0xc000000
   34284:	e1cd02f0 	strd	r0, [sp, #32]
   34288:	e5841004 	str	r1, [r4, #4]
   3428c:	eb001c68 	bl	3b434 <mem_init>
   34290:	e5943000 	ldr	r3, [r4]
   34294:	e3530000 	cmp	r3, #0
   34298:	0a00000c 	beq	342d0 <CMemorySystem::CMemorySystem(int)+0x94>
   3429c:	e3a00008 	mov	r0, #8
   342a0:	eb00001c 	bl	34318 <operator new(unsigned int)>
   342a4:	e1a05000 	mov	r5, r0
   342a8:	e5941004 	ldr	r1, [r4, #4]
   342ac:	eb000655 	bl	35c08 <CPageTable::CPageTable(unsigned int)>
   342b0:	e5845008 	str	r5, [r4, #8]
   342b4:	e3a00008 	mov	r0, #8
   342b8:	eb000016 	bl	34318 <operator new(unsigned int)>
   342bc:	e1a05000 	mov	r5, r0
   342c0:	eb000625 	bl	35b5c <CPageTable::CPageTable()>
   342c4:	e584500c 	str	r5, [r4, #12]
   342c8:	e1a00004 	mov	r0, r4
   342cc:	ebffff97 	bl	34130 <CMemorySystem::EnableMMU()>
   342d0:	e28d000c 	add	r0, sp, #12
   342d4:	ebfffb60 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   342d8:	e1a00004 	mov	r0, r4
   342dc:	e28dd02c 	add	sp, sp, #44	; 0x2c
   342e0:	e8bd8030 	pop	{r4, r5, pc}
   342e4:	e59d0020 	ldr	r0, [sp, #32]
   342e8:	e3500000 	cmp	r0, #0
   342ec:	059d1024 	ldreq	r1, [sp, #36]	; 0x24
   342f0:	0affffe4 	beq	34288 <CMemorySystem::CMemorySystem(int)+0x4c>
   342f4:	e59f1014 	ldr	r1, [pc, #20]	; 34310 <CMemorySystem::CMemorySystem(int)+0xd4>
   342f8:	e59f0014 	ldr	r0, [pc, #20]	; 34314 <CMemorySystem::CMemorySystem(int)+0xd8>
   342fc:	e3a02042 	mov	r2, #66	; 0x42
   34300:	eb000b1e 	bl	36f80 <assertion_failed>
   34304:	e1cd02d0 	ldrd	r0, [sp, #32]
   34308:	eaffffde 	b	34288 <CMemorySystem::CMemorySystem(int)+0x4c>
   3430c:	00010005 	.word	0x00010005
   34310:	0004e204 	.word	0x0004e204
   34314:	0004e27c 	.word	0x0004e27c

00034318 <operator new(unsigned int)>:
   34318:	ea001c5e 	b	3b498 <malloc>

0003431c <operator new[](unsigned int)>:
   3431c:	ea001c5d 	b	3b498 <malloc>

00034320 <operator delete(void*)>:
   34320:	ea001cce 	b	3b660 <free>

00034324 <operator delete[](void*)>:
   34324:	ea001ccd 	b	3b660 <free>

00034328 <operator delete(void*, unsigned int)>:
   34328:	ea001ccc 	b	3b660 <free>

0003432c <operator delete[](void*, unsigned int)>:
   3432c:	ea001ccb 	b	3b660 <free>

00034330 <__cxa_pure_virtual>:
   34330:	e3a02018 	mov	r2, #24
   34334:	e59f1004 	ldr	r1, [pc, #4]	; 34340 <__cxa_pure_virtual+0x10>
   34338:	e59f0004 	ldr	r0, [pc, #4]	; 34344 <__cxa_pure_virtual+0x14>
   3433c:	ea000b0f 	b	36f80 <assertion_failed>
   34340:	0004e298 	.word	0x0004e298
   34344:	0004a8b8 	.word	0x0004a8b8

00034348 <EnterCritical>:
   34348:	e2403001 	sub	r3, r0, #1
   3434c:	e3530001 	cmp	r3, #1
   34350:	e92d4070 	push	{r4, r5, r6, lr}
   34354:	e1a04000 	mov	r4, r0
   34358:	9a000003 	bls	3436c <EnterCritical+0x24>
   3435c:	e3a0204f 	mov	r2, #79	; 0x4f
   34360:	e59f107c 	ldr	r1, [pc, #124]	; 343e4 <EnterCritical+0x9c>
   34364:	e59f007c 	ldr	r0, [pc, #124]	; 343e8 <EnterCritical+0xa0>
   34368:	eb000b04 	bl	36f80 <assertion_failed>
   3436c:	e10f5000 	mrs	r5, CPSR
   34370:	e3540002 	cmp	r4, #2
   34374:	0a000001 	beq	34380 <EnterCritical+0x38>
   34378:	e3150040 	tst	r5, #64	; 0x40
   3437c:	1a000013 	bne	343d0 <EnterCritical+0x88>
   34380:	f10c0080 	cpsid	i
   34384:	e3540002 	cmp	r4, #2
   34388:	1a000000 	bne	34390 <EnterCritical+0x48>
   3438c:	f10c0040 	cpsid	f
   34390:	e59f4054 	ldr	r4, [pc, #84]	; 343ec <EnterCritical+0xa4>
   34394:	e5943000 	ldr	r3, [r4]
   34398:	e3530013 	cmp	r3, #19
   3439c:	9a000003 	bls	343b0 <EnterCritical+0x68>
   343a0:	e3a0205d 	mov	r2, #93	; 0x5d
   343a4:	e59f1038 	ldr	r1, [pc, #56]	; 343e4 <EnterCritical+0x9c>
   343a8:	e59f0040 	ldr	r0, [pc, #64]	; 343f0 <EnterCritical+0xa8>
   343ac:	eb000af3 	bl	36f80 <assertion_failed>
   343b0:	e5943000 	ldr	r3, [r4]
   343b4:	e3a02000 	mov	r2, #0
   343b8:	e2831001 	add	r1, r3, #1
   343bc:	e0843103 	add	r3, r4, r3, lsl #2
   343c0:	e5841000 	str	r1, [r4]
   343c4:	e5835004 	str	r5, [r3, #4]
   343c8:	ee072fba 	mcr	15, 0, r2, cr7, cr10, {5}
   343cc:	e8bd8070 	pop	{r4, r5, r6, pc}
   343d0:	e3a02055 	mov	r2, #85	; 0x55
   343d4:	e59f1008 	ldr	r1, [pc, #8]	; 343e4 <EnterCritical+0x9c>
   343d8:	e59f0014 	ldr	r0, [pc, #20]	; 343f4 <EnterCritical+0xac>
   343dc:	eb000ae7 	bl	36f80 <assertion_failed>
   343e0:	eaffffe6 	b	34380 <EnterCritical+0x38>
   343e4:	0004e2a8 	.word	0x0004e2a8
   343e8:	0004e2b8 	.word	0x0004e2b8
   343ec:	0017af2c 	.word	0x0017af2c
   343f0:	0004e320 	.word	0x0004e320
   343f4:	0004e2f0 	.word	0x0004e2f0

000343f8 <LeaveCritical>:
   343f8:	e92d4010 	push	{r4, lr}
   343fc:	e3a03000 	mov	r3, #0
   34400:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   34404:	e59f4034 	ldr	r4, [pc, #52]	; 34440 <LeaveCritical+0x48>
   34408:	e5943000 	ldr	r3, [r4]
   3440c:	e3530000 	cmp	r3, #0
   34410:	1a000003 	bne	34424 <LeaveCritical+0x2c>
   34414:	e3a02067 	mov	r2, #103	; 0x67
   34418:	e59f1024 	ldr	r1, [pc, #36]	; 34444 <LeaveCritical+0x4c>
   3441c:	e59f0024 	ldr	r0, [pc, #36]	; 34448 <LeaveCritical+0x50>
   34420:	eb000ad6 	bl	36f80 <assertion_failed>
   34424:	e5943000 	ldr	r3, [r4]
   34428:	e2433001 	sub	r3, r3, #1
   3442c:	e5843000 	str	r3, [r4]
   34430:	e0844103 	add	r4, r4, r3, lsl #2
   34434:	e5943004 	ldr	r3, [r4, #4]
   34438:	e121f003 	msr	CPSR_c, r3
   3443c:	e8bd8010 	pop	{r4, pc}
   34440:	0017af2c 	.word	0x0017af2c
   34444:	0004e2a8 	.word	0x0004e2a8
   34448:	0004e348 	.word	0x0004e348

0003444c <CleanAndInvalidateDataCacheRange>:
   3444c:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
   34450:	e2813020 	add	r3, r1, #32
   34454:	e353001f 	cmp	r3, #31
   34458:	9a000007 	bls	3447c <CleanAndInvalidateDataCacheRange+0x30>
   3445c:	e2800020 	add	r0, r0, #32
   34460:	e3c1101f 	bic	r1, r1, #31
   34464:	e0801001 	add	r1, r0, r1
   34468:	ea000000 	b	34470 <CleanAndInvalidateDataCacheRange+0x24>
   3446c:	e2800020 	add	r0, r0, #32
   34470:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
   34474:	e1510000 	cmp	r1, r0
   34478:	1afffffb 	bne	3446c <CleanAndInvalidateDataCacheRange+0x20>
   3447c:	e3a03000 	mov	r3, #0
   34480:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   34484:	e12fff1e 	bx	lr

00034488 <SyncDataAndInstructionCache>:
   34488:	e3a03000 	mov	r3, #0
   3448c:	ee073f1a 	mcr	15, 0, r3, cr7, cr10, {0}
   34490:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   34494:	ee073f15 	mcr	15, 0, r3, cr7, cr5, {0}
   34498:	ee073fd5 	mcr	15, 0, r3, cr7, cr5, {6}
   3449c:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   344a0:	ee073f95 	mcr	15, 0, r3, cr7, cr5, {4}
   344a4:	e12fff1e 	bx	lr

000344a8 <__aeabi_atexit>:
   344a8:	e12fff1e 	bx	lr

000344ac <halt>:
   344ac:	f10c0080 	cpsid	i
   344b0:	f10c0040 	cpsid	f
   344b4:	eafffffe 	b	344b4 <halt+0x8>

000344b8 <reboot>:
   344b8:	e3a03000 	mov	r3, #0
   344bc:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   344c0:	e59f3010 	ldr	r3, [pc, #16]	; 344d8 <reboot+0x20>
   344c4:	e59f1010 	ldr	r1, [pc, #16]	; 344dc <reboot+0x24>
   344c8:	e59f2010 	ldr	r2, [pc, #16]	; 344e0 <reboot+0x28>
   344cc:	e5831024 	str	r1, [r3, #36]	; 0x24
   344d0:	e583201c 	str	r2, [r3, #28]
   344d4:	eafffffe 	b	344d4 <reboot+0x1c>
   344d8:	20100000 	.word	0x20100000
   344dc:	5a000001 	.word	0x5a000001
   344e0:	5a000020 	.word	0x5a000020

000344e4 <sysinit>:
   344e4:	e92d4030 	push	{r4, r5, lr}
   344e8:	e24dd01c 	sub	sp, sp, #28
   344ec:	f1080040 	cpsie	f
   344f0:	ee113f50 	mrc	15, 0, r3, cr1, cr0, {2}
   344f4:	e383360f 	orr	r3, r3, #15728640	; 0xf00000
   344f8:	ee013f50 	mcr	15, 0, r3, cr1, cr0, {2}
   344fc:	e3a02000 	mov	r2, #0
   34500:	ee072f95 	mcr	15, 0, r2, cr7, cr5, {4}
   34504:	e3a03101 	mov	r3, #1073741824	; 0x40000000
   34508:	eee83a10 	vmsr	fpexc, r3
   3450c:	eee12a10 	vmsr	fpscr, r2
   34510:	e59f3064 	ldr	r3, [pc, #100]	; 3457c <sysinit+0x98>
   34514:	e59f1064 	ldr	r1, [pc, #100]	; 34580 <sysinit+0x9c>
   34518:	e1530001 	cmp	r3, r1
   3451c:	2a000002 	bcs	3452c <sysinit+0x48>
   34520:	e4c32001 	strb	r2, [r3], #1
   34524:	e1530001 	cmp	r3, r1
   34528:	1afffffc 	bne	34520 <sysinit+0x3c>
   3452c:	e1a0000d 	mov	r0, sp
   34530:	eb00194e 	bl	3aa70 <CMachineInfo::CMachineInfo()>
   34534:	e59f4048 	ldr	r4, [pc, #72]	; 34584 <sysinit+0xa0>
   34538:	e59f3048 	ldr	r3, [pc, #72]	; 34588 <sysinit+0xa4>
   3453c:	e1540003 	cmp	r4, r3
   34540:	2a000008 	bcs	34568 <sysinit+0x84>
   34544:	e1e05004 	mvn	r5, r4
   34548:	e0855003 	add	r5, r5, r3
   3454c:	e3c55003 	bic	r5, r5, #3
   34550:	e0855004 	add	r5, r5, r4
   34554:	e2444004 	sub	r4, r4, #4
   34558:	e5b43004 	ldr	r3, [r4, #4]!
   3455c:	e12fff33 	blx	r3
   34560:	e1540005 	cmp	r4, r5
   34564:	1afffffb 	bne	34558 <sysinit+0x74>
   34568:	ebff4ebd 	bl	8064 <main>
   3456c:	e3500001 	cmp	r0, #1
   34570:	0a000000 	beq	34578 <sysinit+0x94>
   34574:	ebffffcc 	bl	344ac <halt>
   34578:	ebffffce 	bl	344b8 <reboot>
   3457c:	00059100 	.word	0x00059100
   34580:	0017afcc 	.word	0x0017afcc
   34584:	0004ffb0 	.word	0x0004ffb0
   34588:	0004ffc4 	.word	0x0004ffc4

0003458c <CTimer::SimpleusDelay(unsigned int) [clone .part.0]>:
   3458c:	e2800001 	add	r0, r0, #1
   34590:	e3a03000 	mov	r3, #0
   34594:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   34598:	e59f3020 	ldr	r3, [pc, #32]	; 345c0 <CTimer::SimpleusDelay(unsigned int) [clone .part.0]+0x34>
   3459c:	e1a01003 	mov	r1, r3
   345a0:	e5932004 	ldr	r2, [r3, #4]
   345a4:	e5913004 	ldr	r3, [r1, #4]
   345a8:	e0433002 	sub	r3, r3, r2
   345ac:	e1500003 	cmp	r0, r3
   345b0:	8afffffb 	bhi	345a4 <CTimer::SimpleusDelay(unsigned int) [clone .part.0]+0x18>
   345b4:	e3a03000 	mov	r3, #0
   345b8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   345bc:	e12fff1e 	bx	lr
   345c0:	20003000 	.word	0x20003000

000345c4 <CTimer::CTimer(CInterruptSystem*)>:
   345c4:	e92d4070 	push	{r4, r5, r6, lr}
   345c8:	e3a03000 	mov	r3, #0
   345cc:	e3a06001 	mov	r6, #1
   345d0:	e1a04000 	mov	r4, r0
   345d4:	e59f5054 	ldr	r5, [pc, #84]	; 34630 <CTimer::CTimer(CInterruptSystem*)+0x6c>
   345d8:	e5803004 	str	r3, [r0, #4]
   345dc:	e5801000 	str	r1, [r0]
   345e0:	e5803008 	str	r3, [r0, #8]
   345e4:	e5803014 	str	r3, [r0, #20]
   345e8:	e580300c 	str	r3, [r0, #12]
   345ec:	e5806010 	str	r6, [r0, #16]
   345f0:	e2800018 	add	r0, r0, #24
   345f4:	eb001a5c 	bl	3af6c <CPtrList::CPtrList()>
   345f8:	e5951000 	ldr	r1, [r5]
   345fc:	e59f2030 	ldr	r2, [pc, #48]	; 34634 <CTimer::CTimer(CInterruptSystem*)+0x70>
   34600:	e59f3030 	ldr	r3, [pc, #48]	; 34638 <CTimer::CTimer(CInterruptSystem*)+0x74>
   34604:	e3510000 	cmp	r1, #0
   34608:	e584601c 	str	r6, [r4, #28]
   3460c:	e1c422f0 	strd	r2, [r4, #32]
   34610:	0a000003 	beq	34624 <CTimer::CTimer(CInterruptSystem*)+0x60>
   34614:	e3a0203b 	mov	r2, #59	; 0x3b
   34618:	e59f101c 	ldr	r1, [pc, #28]	; 3463c <CTimer::CTimer(CInterruptSystem*)+0x78>
   3461c:	e59f001c 	ldr	r0, [pc, #28]	; 34640 <CTimer::CTimer(CInterruptSystem*)+0x7c>
   34620:	eb000a56 	bl	36f80 <assertion_failed>
   34624:	e5854000 	str	r4, [r5]
   34628:	e1a00004 	mov	r0, r4
   3462c:	e8bd8070 	pop	{r4, r5, r6, pc}
   34630:	0017af84 	.word	0x0017af84
   34634:	00055730 	.word	0x00055730
   34638:	0000015e 	.word	0x0000015e
   3463c:	0004e398 	.word	0x0004e398
   34640:	0004a05c 	.word	0x0004a05c

00034644 <CTimer::~CTimer()>:
   34644:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34648:	e1a09000 	mov	r9, r0
   3464c:	e5900000 	ldr	r0, [r0]
   34650:	e3500000 	cmp	r0, #0
   34654:	0a000028 	beq	346fc <CTimer::~CTimer()+0xb8>
   34658:	e3a01003 	mov	r1, #3
   3465c:	eb001473 	bl	39830 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   34660:	e59f80ac 	ldr	r8, [pc, #172]	; 34714 <CTimer::~CTimer()+0xd0>
   34664:	e59fb0ac 	ldr	fp, [pc, #172]	; 34718 <CTimer::~CTimer()+0xd4>
   34668:	e59f70ac 	ldr	r7, [pc, #172]	; 3471c <CTimer::~CTimer()+0xd8>
   3466c:	e59fa0ac 	ldr	sl, [pc, #172]	; 34720 <CTimer::~CTimer()+0xdc>
   34670:	e2894018 	add	r4, r9, #24
   34674:	ea000011 	b	346c0 <CTimer::~CTimer()+0x7c>
   34678:	e1a01005 	mov	r1, r5
   3467c:	e1a00004 	mov	r0, r4
   34680:	eb001a61 	bl	3b00c <CPtrList::GetPtr(TPtrListElement*)>
   34684:	e2506000 	subs	r6, r0, #0
   34688:	0a000016 	beq	346e8 <CTimer::~CTimer()+0xa4>
   3468c:	e5963000 	ldr	r3, [r6]
   34690:	e1530007 	cmp	r3, r7
   34694:	0a000003 	beq	346a8 <CTimer::~CTimer()+0x64>
   34698:	e3a02049 	mov	r2, #73	; 0x49
   3469c:	e1a01008 	mov	r1, r8
   346a0:	e1a0000a 	mov	r0, sl
   346a4:	eb000a35 	bl	36f80 <assertion_failed>
   346a8:	e1a01005 	mov	r1, r5
   346ac:	e1a00004 	mov	r0, r4
   346b0:	eb001aec 	bl	3b268 <CPtrList::Remove(TPtrListElement*)>
   346b4:	e1a00006 	mov	r0, r6
   346b8:	e3a01014 	mov	r1, #20
   346bc:	ebffff19 	bl	34328 <operator delete(void*, unsigned int)>
   346c0:	e1a00004 	mov	r0, r4
   346c4:	eb001a38 	bl	3afac <CPtrList::GetFirst()>
   346c8:	e2505000 	subs	r5, r0, #0
   346cc:	1affffe9 	bne	34678 <CTimer::~CTimer()+0x34>
   346d0:	e59f304c 	ldr	r3, [pc, #76]	; 34724 <CTimer::~CTimer()+0xe0>
   346d4:	e1a00004 	mov	r0, r4
   346d8:	e5835000 	str	r5, [r3]
   346dc:	eb001a25 	bl	3af78 <CPtrList::~CPtrList()>
   346e0:	e1a00009 	mov	r0, r9
   346e4:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   346e8:	e3a02048 	mov	r2, #72	; 0x48
   346ec:	e1a01008 	mov	r1, r8
   346f0:	e1a0000b 	mov	r0, fp
   346f4:	eb000a21 	bl	36f80 <assertion_failed>
   346f8:	eaffffe3 	b	3468c <CTimer::~CTimer()+0x48>
   346fc:	e59f0024 	ldr	r0, [pc, #36]	; 34728 <CTimer::~CTimer()+0xe4>
   34700:	e3a02041 	mov	r2, #65	; 0x41
   34704:	e59f1008 	ldr	r1, [pc, #8]	; 34714 <CTimer::~CTimer()+0xd0>
   34708:	eb000a1c 	bl	36f80 <assertion_failed>
   3470c:	e5990000 	ldr	r0, [r9]
   34710:	eaffffd0 	b	34658 <CTimer::~CTimer()+0x14>
   34714:	0004e398 	.word	0x0004e398
   34718:	0004e3a4 	.word	0x0004e3a4
   3471c:	4b544d43 	.word	0x4b544d43
   34720:	0004e3b0 	.word	0x0004e3b0
   34724:	0017af84 	.word	0x0017af84
   34728:	0004a0f8 	.word	0x0004a0f8

0003472c <CTimer::SetTimeZone(int)>:
   3472c:	e59f2018 	ldr	r2, [pc, #24]	; 3474c <CTimer::SetTimeZone(int)+0x20>
   34730:	e2813e59 	add	r3, r1, #1424	; 0x590
   34734:	e283300f 	add	r3, r3, #15
   34738:	e1530002 	cmp	r3, r2
   3473c:	95801014 	strls	r1, [r0, #20]
   34740:	93a00001 	movls	r0, #1
   34744:	83a00000 	movhi	r0, #0
   34748:	e12fff1e 	bx	lr
   3474c:	00000b3e 	.word	0x00000b3e

00034750 <CTimer::GetTimeZone() const>:
   34750:	e5900014 	ldr	r0, [r0, #20]
   34754:	e12fff1e 	bx	lr

00034758 <CTimer::SetTime(unsigned int, int)>:
   34758:	e3520000 	cmp	r2, #0
   3475c:	e92d4070 	push	{r4, r5, r6, lr}
   34760:	e1a04000 	mov	r4, r0
   34764:	e1a05001 	mov	r5, r1
   34768:	1a000004 	bne	34780 <CTimer::SetTime(unsigned int, int)+0x28>
   3476c:	e5903014 	ldr	r3, [r0, #20]
   34770:	e0633203 	rsb	r3, r3, r3, lsl #4
   34774:	e1b03103 	lsls	r3, r3, #2
   34778:	4a00000e 	bmi	347b8 <CTimer::SetTime(unsigned int, int)+0x60>
   3477c:	e0855003 	add	r5, r5, r3
   34780:	e5940010 	ldr	r0, [r4, #16]
   34784:	e3500000 	cmp	r0, #0
   34788:	1a000002 	bne	34798 <CTimer::SetTime(unsigned int, int)+0x40>
   3478c:	e3a00001 	mov	r0, #1
   34790:	e584500c 	str	r5, [r4, #12]
   34794:	e8bd8070 	pop	{r4, r5, r6, pc}
   34798:	ebfffeea 	bl	34348 <EnterCritical>
   3479c:	e5943010 	ldr	r3, [r4, #16]
   347a0:	e584500c 	str	r5, [r4, #12]
   347a4:	e3530000 	cmp	r3, #0
   347a8:	0a000007 	beq	347cc <CTimer::SetTime(unsigned int, int)+0x74>
   347ac:	ebffff11 	bl	343f8 <LeaveCritical>
   347b0:	e3a00001 	mov	r0, #1
   347b4:	e8bd8070 	pop	{r4, r5, r6, pc}
   347b8:	e2631000 	rsb	r1, r3, #0
   347bc:	e1510005 	cmp	r1, r5
   347c0:	daffffed 	ble	3477c <CTimer::SetTime(unsigned int, int)+0x24>
   347c4:	e1a00002 	mov	r0, r2
   347c8:	e8bd8070 	pop	{r4, r5, r6, pc}
   347cc:	e3a00001 	mov	r0, #1
   347d0:	e8bd8070 	pop	{r4, r5, r6, pc}

000347d4 <CTimer::GetClockTicks()>:
   347d4:	e3a03000 	mov	r3, #0
   347d8:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   347dc:	e59f2008 	ldr	r2, [pc, #8]	; 347ec <CTimer::GetClockTicks()+0x18>
   347e0:	e5920004 	ldr	r0, [r2, #4]
   347e4:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   347e8:	e12fff1e 	bx	lr
   347ec:	20003000 	.word	0x20003000

000347f0 <CTimer::GetTicks() const>:
   347f0:	e5900004 	ldr	r0, [r0, #4]
   347f4:	e12fff1e 	bx	lr

000347f8 <CTimer::GetUptime() const>:
   347f8:	e5900008 	ldr	r0, [r0, #8]
   347fc:	e12fff1e 	bx	lr

00034800 <CTimer::GetTime() const>:
   34800:	e590000c 	ldr	r0, [r0, #12]
   34804:	e12fff1e 	bx	lr

00034808 <CTimer::GetUniversalTime() const>:
   34808:	e5903014 	ldr	r3, [r0, #20]
   3480c:	e590000c 	ldr	r0, [r0, #12]
   34810:	e0633203 	rsb	r3, r3, r3, lsl #4
   34814:	e1a03103 	lsl	r3, r3, #2
   34818:	e1500003 	cmp	r0, r3
   3481c:	a0400003 	subge	r0, r0, r3
   34820:	b3a00000 	movlt	r0, #0
   34824:	e12fff1e 	bx	lr

00034828 <CTimer::GetTimeString()>:
   34828:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3482c:	e1a05000 	mov	r5, r0
   34830:	e5900010 	ldr	r0, [r0, #16]
   34834:	e24dd01c 	sub	sp, sp, #28
   34838:	e3500000 	cmp	r0, #0
   3483c:	1a000065 	bne	349d8 <CTimer::GetTimeString()+0x1b0>
   34840:	e595400c 	ldr	r4, [r5, #12]
   34844:	e595b004 	ldr	fp, [r5, #4]
   34848:	e194900b 	orrs	r9, r4, fp
   3484c:	0a00004d 	beq	34988 <CTimer::GetTimeString()+0x160>
   34850:	e59f61a0 	ldr	r6, [pc, #416]	; 349f8 <CTimer::GetTimeString()+0x1d0>
   34854:	e59f01a0 	ldr	r0, [pc, #416]	; 349fc <CTimer::GetTimeString()+0x1d4>
   34858:	e0832694 	umull	r2, r3, r4, r6
   3485c:	e1a072a3 	lsr	r7, r3, #5
   34860:	e1a0c007 	mov	ip, r7
   34864:	e59f2194 	ldr	r2, [pc, #404]	; 34a00 <CTimer::GetTimeString()+0x1d8>
   34868:	e0876697 	umull	r6, r7, r7, r6
   3486c:	e0810094 	umull	r0, r1, r4, r0
   34870:	e0832294 	umull	r2, r3, r4, r2
   34874:	e1a062a7 	lsr	r6, r7, #5
   34878:	e0666206 	rsb	r6, r6, r6, lsl #4
   3487c:	e06c720c 	rsb	r7, ip, ip, lsl #4
   34880:	e0447107 	sub	r7, r4, r7, lsl #2
   34884:	e04c6106 	sub	r6, ip, r6, lsl #2
   34888:	e59f5174 	ldr	r5, [pc, #372]	; 34a04 <CTimer::GetTimeString()+0x1dc>
   3488c:	e59fe174 	ldr	lr, [pc, #372]	; 34a08 <CTimer::GetTimeString()+0x1e0>
   34890:	e59fc174 	ldr	ip, [pc, #372]	; 34a0c <CTimer::GetTimeString()+0x1e4>
   34894:	e1a0a5a1 	lsr	sl, r1, #11
   34898:	e59f8170 	ldr	r8, [pc, #368]	; 34a10 <CTimer::GetTimeString()+0x1e8>
   3489c:	e1a04823 	lsr	r4, r3, #16
   348a0:	ea000009 	b	348cc <CTimer::GetTimeString()+0xa4>
   348a4:	e1550203 	cmp	r5, r3, lsl #4
   348a8:	03a03001 	moveq	r3, #1
   348ac:	13a03000 	movne	r3, #0
   348b0:	e3530000 	cmp	r3, #0
   348b4:	01a0100c 	moveq	r1, ip
   348b8:	11a01008 	movne	r1, r8
   348bc:	e1540001 	cmp	r4, r1
   348c0:	3a00000e 	bcc	34900 <CTimer::GetTimeString()+0xd8>
   348c4:	e0444001 	sub	r4, r4, r1
   348c8:	e2855001 	add	r5, r5, #1
   348cc:	e0810e95 	umull	r0, r1, r5, lr
   348d0:	e1a032a1 	lsr	r3, r1, #5
   348d4:	e1a003a1 	lsr	r0, r1, #7
   348d8:	e0831103 	add	r1, r3, r3, lsl #2
   348dc:	e0811101 	add	r1, r1, r1, lsl #2
   348e0:	e0803100 	add	r3, r0, r0, lsl #2
   348e4:	e1550101 	cmp	r5, r1, lsl #2
   348e8:	e0833103 	add	r3, r3, r3, lsl #2
   348ec:	0affffec 	beq	348a4 <CTimer::GetTimeString()+0x7c>
   348f0:	e3150003 	tst	r5, #3
   348f4:	03a03001 	moveq	r3, #1
   348f8:	13a03000 	movne	r3, #0
   348fc:	eaffffeb 	b	348b0 <CTimer::GetTimeString()+0x88>
   34900:	e1a02003 	mov	r2, r3
   34904:	e59f0108 	ldr	r0, [pc, #264]	; 34a14 <CTimer::GetTimeString()+0x1ec>
   34908:	e3a03000 	mov	r3, #0
   3490c:	ea000001 	b	34918 <CTimer::GetTimeString()+0xf0>
   34910:	e0444001 	sub	r4, r4, r1
   34914:	e2833001 	add	r3, r3, #1
   34918:	e3530001 	cmp	r3, #1
   3491c:	13a01000 	movne	r1, #0
   34920:	02021001 	andeq	r1, r2, #1
   34924:	e3510000 	cmp	r1, #0
   34928:	13a0101d 	movne	r1, #29
   3492c:	07901103 	ldreq	r1, [r0, r3, lsl #2]
   34930:	e1540001 	cmp	r4, r1
   34934:	2afffff5 	bcs	34910 <CTimer::GetTimeString()+0xe8>
   34938:	e3a00010 	mov	r0, #16
   3493c:	e58d3014 	str	r3, [sp, #20]
   34940:	ebfffe74 	bl	34318 <operator new(unsigned int)>
   34944:	e59f80bc 	ldr	r8, [pc, #188]	; 34a08 <CTimer::GetTimeString()+0x1e0>
   34948:	e089889b 	umull	r8, r9, fp, r8
   3494c:	e1a082a9 	lsr	r8, r9, #5
   34950:	e1a09000 	mov	r9, r0
   34954:	eb000e9e 	bl	383d4 <CString::CString()>
   34958:	e59f20b8 	ldr	r2, [pc, #184]	; 34a18 <CTimer::GetTimeString()+0x1f0>
   3495c:	e0888108 	add	r8, r8, r8, lsl #2
   34960:	e0888108 	add	r8, r8, r8, lsl #2
   34964:	e1550002 	cmp	r5, r2
   34968:	e04b8108 	sub	r8, fp, r8, lsl #2
   3496c:	8a000008 	bhi	34994 <CTimer::GetTimeString()+0x16c>
   34970:	e88d0180 	stm	sp, {r7, r8}
   34974:	e1a03006 	mov	r3, r6
   34978:	e1a0200a 	mov	r2, sl
   3497c:	e59f1098 	ldr	r1, [pc, #152]	; 34a1c <CTimer::GetTimeString()+0x1f4>
   34980:	e1a00009 	mov	r0, r9
   34984:	eb00121a 	bl	391f4 <CString::Format(char const*, ...)>
   34988:	e1a00009 	mov	r0, r9
   3498c:	e28dd01c 	add	sp, sp, #28
   34990:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34994:	e59f0084 	ldr	r0, [pc, #132]	; 34a20 <CTimer::GetTimeString()+0x1f8>
   34998:	e59d3014 	ldr	r3, [sp, #20]
   3499c:	e081009a 	umull	r0, r1, sl, r0
   349a0:	e1a02221 	lsr	r2, r1, #4
   349a4:	e59fc078 	ldr	ip, [pc, #120]	; 34a24 <CTimer::GetTimeString()+0x1fc>
   349a8:	e0821082 	add	r1, r2, r2, lsl #1
   349ac:	e04aa181 	sub	sl, sl, r1, lsl #3
   349b0:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
   349b4:	e1a00009 	mov	r0, r9
   349b8:	e98d01c0 	stmib	sp, {r6, r7, r8}
   349bc:	e2843001 	add	r3, r4, #1
   349c0:	e58da000 	str	sl, [sp]
   349c4:	e59f105c 	ldr	r1, [pc, #92]	; 34a28 <CTimer::GetTimeString()+0x200>
   349c8:	eb001209 	bl	391f4 <CString::Format(char const*, ...)>
   349cc:	e1a00009 	mov	r0, r9
   349d0:	e28dd01c 	add	sp, sp, #28
   349d4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   349d8:	ebfffe5a 	bl	34348 <EnterCritical>
   349dc:	e5953010 	ldr	r3, [r5, #16]
   349e0:	e595400c 	ldr	r4, [r5, #12]
   349e4:	e3530000 	cmp	r3, #0
   349e8:	e595b004 	ldr	fp, [r5, #4]
   349ec:	0affff95 	beq	34848 <CTimer::GetTimeString()+0x20>
   349f0:	ebfffe80 	bl	343f8 <LeaveCritical>
   349f4:	eaffff93 	b	34848 <CTimer::GetTimeString()+0x20>
   349f8:	88888889 	.word	0x88888889
   349fc:	91a2b3c5 	.word	0x91a2b3c5
   34a00:	c22e4507 	.word	0xc22e4507
   34a04:	000007b2 	.word	0x000007b2
   34a08:	51eb851f 	.word	0x51eb851f
   34a0c:	0000016d 	.word	0x0000016d
   34a10:	0000016e 	.word	0x0000016e
   34a14:	0004e360 	.word	0x0004e360
   34a18:	000007b7 	.word	0x000007b7
   34a1c:	0004e3f4 	.word	0x0004e3f4
   34a20:	aaaaaaab 	.word	0xaaaaaaab
   34a24:	00059010 	.word	0x00059010
   34a28:	0004e3d8 	.word	0x0004e3d8

00034a2c <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)>:
   34a2c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34a30:	e1a0a000 	mov	sl, r0
   34a34:	e1a04002 	mov	r4, r2
   34a38:	e3a00014 	mov	r0, #20
   34a3c:	e1a06001 	mov	r6, r1
   34a40:	e1a08003 	mov	r8, r3
   34a44:	e59d5028 	ldr	r5, [sp, #40]	; 0x28
   34a48:	ebfffe32 	bl	34318 <operator new(unsigned int)>
   34a4c:	e59a1004 	ldr	r1, [sl, #4]
   34a50:	e3540000 	cmp	r4, #0
   34a54:	e1a07000 	mov	r7, r0
   34a58:	e0816006 	add	r6, r1, r6
   34a5c:	0a00003a 	beq	34b4c <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x120>
   34a60:	e59a001c 	ldr	r0, [sl, #28]
   34a64:	e59f20f4 	ldr	r2, [pc, #244]	; 34b60 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x134>
   34a68:	e3500000 	cmp	r0, #0
   34a6c:	e5874004 	str	r4, [r7, #4]
   34a70:	e5876008 	str	r6, [r7, #8]
   34a74:	e587800c 	str	r8, [r7, #12]
   34a78:	e5875010 	str	r5, [r7, #16]
   34a7c:	e5872000 	str	r2, [r7]
   34a80:	1a00002f 	bne	34b44 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x118>
   34a84:	e28a5018 	add	r5, sl, #24
   34a88:	e1a00005 	mov	r0, r5
   34a8c:	eb001946 	bl	3afac <CPtrList::GetFirst()>
   34a90:	e2504000 	subs	r4, r0, #0
   34a94:	0a000025 	beq	34b30 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x104>
   34a98:	e59f90c4 	ldr	r9, [pc, #196]	; 34b64 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x138>
   34a9c:	e59f80bc 	ldr	r8, [pc, #188]	; 34b60 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x134>
   34aa0:	ea000010 	b	34ae8 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0xbc>
   34aa4:	e59b3000 	ldr	r3, [fp]
   34aa8:	e1530008 	cmp	r3, r8
   34aac:	0a000003 	beq	34ac0 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x94>
   34ab0:	e59f20b0 	ldr	r2, [pc, #176]	; 34b68 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x13c>
   34ab4:	e1a01009 	mov	r1, r9
   34ab8:	e59f00ac 	ldr	r0, [pc, #172]	; 34b6c <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x140>
   34abc:	eb00092f 	bl	36f80 <assertion_failed>
   34ac0:	e59b3008 	ldr	r3, [fp, #8]
   34ac4:	e1a01004 	mov	r1, r4
   34ac8:	e0433006 	sub	r3, r3, r6
   34acc:	e3530000 	cmp	r3, #0
   34ad0:	e1a00005 	mov	r0, r5
   34ad4:	ca00000d 	bgt	34b10 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0xe4>
   34ad8:	eb001935 	bl	3afb4 <CPtrList::GetNext(TPtrListElement*)>
   34adc:	e3500000 	cmp	r0, #0
   34ae0:	0a000012 	beq	34b30 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x104>
   34ae4:	e1a04000 	mov	r4, r0
   34ae8:	e1a01004 	mov	r1, r4
   34aec:	e1a00005 	mov	r0, r5
   34af0:	eb001945 	bl	3b00c <CPtrList::GetPtr(TPtrListElement*)>
   34af4:	e250b000 	subs	fp, r0, #0
   34af8:	1affffe9 	bne	34aa4 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x78>
   34afc:	e59f206c 	ldr	r2, [pc, #108]	; 34b70 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x144>
   34b00:	e1a01009 	mov	r1, r9
   34b04:	e59f0068 	ldr	r0, [pc, #104]	; 34b74 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x148>
   34b08:	eb00091c 	bl	36f80 <assertion_failed>
   34b0c:	eaffffe4 	b	34aa4 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x78>
   34b10:	e1a02007 	mov	r2, r7
   34b14:	eb001952 	bl	3b064 <CPtrList::InsertBefore(TPtrListElement*, void*)>
   34b18:	e59a301c 	ldr	r3, [sl, #28]
   34b1c:	e3530000 	cmp	r3, #0
   34b20:	0a000000 	beq	34b28 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0xfc>
   34b24:	ebfffe33 	bl	343f8 <LeaveCritical>
   34b28:	e1a00007 	mov	r0, r7
   34b2c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34b30:	e1a01004 	mov	r1, r4
   34b34:	e1a00005 	mov	r0, r5
   34b38:	e1a02007 	mov	r2, r7
   34b3c:	eb00198a 	bl	3b16c <CPtrList::InsertAfter(TPtrListElement*, void*)>
   34b40:	eafffff4 	b	34b18 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0xec>
   34b44:	ebfffdff 	bl	34348 <EnterCritical>
   34b48:	eaffffcd 	b	34a84 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x58>
   34b4c:	e59f2024 	ldr	r2, [pc, #36]	; 34b78 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x14c>
   34b50:	e59f100c 	ldr	r1, [pc, #12]	; 34b64 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x138>
   34b54:	e59f0020 	ldr	r0, [pc, #32]	; 34b7c <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x150>
   34b58:	eb000908 	bl	36f80 <assertion_failed>
   34b5c:	eaffffbf 	b	34a60 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)+0x34>
   34b60:	4b544d43 	.word	0x4b544d43
   34b64:	0004e398 	.word	0x0004e398
   34b68:	00000116 	.word	0x00000116
   34b6c:	0004e418 	.word	0x0004e418
   34b70:	00000115 	.word	0x00000115
   34b74:	0004e408 	.word	0x0004e408
   34b78:	00000105 	.word	0x00000105
   34b7c:	0004f6a4 	.word	0x0004f6a4

00034b80 <CTimer::CancelKernelTimer(unsigned int)>:
   34b80:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   34b84:	e2514000 	subs	r4, r1, #0
   34b88:	e1a05000 	mov	r5, r0
   34b8c:	0a000020 	beq	34c14 <CTimer::CancelKernelTimer(unsigned int)+0x94>
   34b90:	e595001c 	ldr	r0, [r5, #28]
   34b94:	e3500000 	cmp	r0, #0
   34b98:	1a00001b 	bne	34c0c <CTimer::CancelKernelTimer(unsigned int)+0x8c>
   34b9c:	e2856018 	add	r6, r5, #24
   34ba0:	e1a00006 	mov	r0, r6
   34ba4:	e1a01004 	mov	r1, r4
   34ba8:	eb001a03 	bl	3b3bc <CPtrList::Find(void*)>
   34bac:	e2507000 	subs	r7, r0, #0
   34bb0:	0a00000b 	beq	34be4 <CTimer::CancelKernelTimer(unsigned int)+0x64>
   34bb4:	e59f306c 	ldr	r3, [pc, #108]	; 34c28 <CTimer::CancelKernelTimer(unsigned int)+0xa8>
   34bb8:	e5942000 	ldr	r2, [r4]
   34bbc:	e1520003 	cmp	r2, r3
   34bc0:	1a00000c 	bne	34bf8 <CTimer::CancelKernelTimer(unsigned int)+0x78>
   34bc4:	e1a01007 	mov	r1, r7
   34bc8:	e1a00006 	mov	r0, r6
   34bcc:	eb0019a5 	bl	3b268 <CPtrList::Remove(TPtrListElement*)>
   34bd0:	e3a03000 	mov	r3, #0
   34bd4:	e1a00004 	mov	r0, r4
   34bd8:	e5843000 	str	r3, [r4]
   34bdc:	e3a01014 	mov	r1, #20
   34be0:	ebfffdd0 	bl	34328 <operator delete(void*, unsigned int)>
   34be4:	e595301c 	ldr	r3, [r5, #28]
   34be8:	e3530000 	cmp	r3, #0
   34bec:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   34bf0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   34bf4:	eafffdff 	b	343f8 <LeaveCritical>
   34bf8:	e59f202c 	ldr	r2, [pc, #44]	; 34c2c <CTimer::CancelKernelTimer(unsigned int)+0xac>
   34bfc:	e59f102c 	ldr	r1, [pc, #44]	; 34c30 <CTimer::CancelKernelTimer(unsigned int)+0xb0>
   34c00:	e59f002c 	ldr	r0, [pc, #44]	; 34c34 <CTimer::CancelKernelTimer(unsigned int)+0xb4>
   34c04:	eb0008dd 	bl	36f80 <assertion_failed>
   34c08:	eaffffed 	b	34bc4 <CTimer::CancelKernelTimer(unsigned int)+0x44>
   34c0c:	ebfffdcd 	bl	34348 <EnterCritical>
   34c10:	eaffffe1 	b	34b9c <CTimer::CancelKernelTimer(unsigned int)+0x1c>
   34c14:	e59f201c 	ldr	r2, [pc, #28]	; 34c38 <CTimer::CancelKernelTimer(unsigned int)+0xb8>
   34c18:	e59f1010 	ldr	r1, [pc, #16]	; 34c30 <CTimer::CancelKernelTimer(unsigned int)+0xb0>
   34c1c:	e59f0018 	ldr	r0, [pc, #24]	; 34c3c <CTimer::CancelKernelTimer(unsigned int)+0xbc>
   34c20:	eb0008d6 	bl	36f80 <assertion_failed>
   34c24:	eaffffd9 	b	34b90 <CTimer::CancelKernelTimer(unsigned int)+0x10>
   34c28:	4b544d43 	.word	0x4b544d43
   34c2c:	00000139 	.word	0x00000139
   34c30:	0004e398 	.word	0x0004e398
   34c34:	0004e3b0 	.word	0x0004e3b0
   34c38:	00000132 	.word	0x00000132
   34c3c:	0004e3a4 	.word	0x0004e3a4

00034c40 <CTimer::PollKernelTimers()>:
   34c40:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34c44:	e1a05000 	mov	r5, r0
   34c48:	e590001c 	ldr	r0, [r0, #28]
   34c4c:	e3500000 	cmp	r0, #0
   34c50:	1a00004a 	bne	34d80 <CTimer::PollKernelTimers()+0x140>
   34c54:	e2856018 	add	r6, r5, #24
   34c58:	e1a00006 	mov	r0, r6
   34c5c:	eb0018d2 	bl	3afac <CPtrList::GetFirst()>
   34c60:	e2504000 	subs	r4, r0, #0
   34c64:	0a00003b 	beq	34d58 <CTimer::PollKernelTimers()+0x118>
   34c68:	e59f9118 	ldr	r9, [pc, #280]	; 34d88 <CTimer::PollKernelTimers()+0x148>
   34c6c:	e59f8118 	ldr	r8, [pc, #280]	; 34d8c <CTimer::PollKernelTimers()+0x14c>
   34c70:	e59fa118 	ldr	sl, [pc, #280]	; 34d90 <CTimer::PollKernelTimers()+0x150>
   34c74:	ea000010 	b	34cbc <CTimer::PollKernelTimers()+0x7c>
   34c78:	e5974004 	ldr	r4, [r7, #4]
   34c7c:	e3540000 	cmp	r4, #0
   34c80:	0a00002c 	beq	34d38 <CTimer::PollKernelTimers()+0xf8>
   34c84:	e5972010 	ldr	r2, [r7, #16]
   34c88:	e597100c 	ldr	r1, [r7, #12]
   34c8c:	e1a00007 	mov	r0, r7
   34c90:	e12fff34 	blx	r4
   34c94:	e3a03000 	mov	r3, #0
   34c98:	e1a00007 	mov	r0, r7
   34c9c:	e5873000 	str	r3, [r7]
   34ca0:	e3a01014 	mov	r1, #20
   34ca4:	ebfffd9f 	bl	34328 <operator delete(void*, unsigned int)>
   34ca8:	e595001c 	ldr	r0, [r5, #28]
   34cac:	e3500000 	cmp	r0, #0
   34cb0:	1a000025 	bne	34d4c <CTimer::PollKernelTimers()+0x10c>
   34cb4:	e25b4000 	subs	r4, fp, #0
   34cb8:	0a000026 	beq	34d58 <CTimer::PollKernelTimers()+0x118>
   34cbc:	e1a01004 	mov	r1, r4
   34cc0:	e1a00006 	mov	r0, r6
   34cc4:	eb0018d0 	bl	3b00c <CPtrList::GetPtr(TPtrListElement*)>
   34cc8:	e2507000 	subs	r7, r0, #0
   34ccc:	0a000026 	beq	34d6c <CTimer::PollKernelTimers()+0x12c>
   34cd0:	e5973000 	ldr	r3, [r7]
   34cd4:	e1530008 	cmp	r3, r8
   34cd8:	0a000003 	beq	34cec <CTimer::PollKernelTimers()+0xac>
   34cdc:	e59f20b0 	ldr	r2, [pc, #176]	; 34d94 <CTimer::PollKernelTimers()+0x154>
   34ce0:	e1a01009 	mov	r1, r9
   34ce4:	e1a0000a 	mov	r0, sl
   34ce8:	eb0008a4 	bl	36f80 <assertion_failed>
   34cec:	e5952004 	ldr	r2, [r5, #4]
   34cf0:	e5973008 	ldr	r3, [r7, #8]
   34cf4:	e0433002 	sub	r3, r3, r2
   34cf8:	e3530000 	cmp	r3, #0
   34cfc:	ca000015 	bgt	34d58 <CTimer::PollKernelTimers()+0x118>
   34d00:	e1a01004 	mov	r1, r4
   34d04:	e1a00006 	mov	r0, r6
   34d08:	eb0018a9 	bl	3afb4 <CPtrList::GetNext(TPtrListElement*)>
   34d0c:	e1a01004 	mov	r1, r4
   34d10:	e1a0b000 	mov	fp, r0
   34d14:	e1a00006 	mov	r0, r6
   34d18:	eb001952 	bl	3b268 <CPtrList::Remove(TPtrListElement*)>
   34d1c:	e595301c 	ldr	r3, [r5, #28]
   34d20:	e3530000 	cmp	r3, #0
   34d24:	0affffd3 	beq	34c78 <CTimer::PollKernelTimers()+0x38>
   34d28:	ebfffdb2 	bl	343f8 <LeaveCritical>
   34d2c:	e5974004 	ldr	r4, [r7, #4]
   34d30:	e3540000 	cmp	r4, #0
   34d34:	1affffd2 	bne	34c84 <CTimer::PollKernelTimers()+0x44>
   34d38:	e59f2058 	ldr	r2, [pc, #88]	; 34d98 <CTimer::PollKernelTimers()+0x158>
   34d3c:	e1a01009 	mov	r1, r9
   34d40:	e59f0054 	ldr	r0, [pc, #84]	; 34d9c <CTimer::PollKernelTimers()+0x15c>
   34d44:	eb00088d 	bl	36f80 <assertion_failed>
   34d48:	eaffffcd 	b	34c84 <CTimer::PollKernelTimers()+0x44>
   34d4c:	ebfffd7d 	bl	34348 <EnterCritical>
   34d50:	e25b4000 	subs	r4, fp, #0
   34d54:	1affffd8 	bne	34cbc <CTimer::PollKernelTimers()+0x7c>
   34d58:	e595301c 	ldr	r3, [r5, #28]
   34d5c:	e3530000 	cmp	r3, #0
   34d60:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34d64:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34d68:	eafffda2 	b	343f8 <LeaveCritical>
   34d6c:	e59f202c 	ldr	r2, [pc, #44]	; 34da0 <CTimer::PollKernelTimers()+0x160>
   34d70:	e1a01009 	mov	r1, r9
   34d74:	e59f0028 	ldr	r0, [pc, #40]	; 34da4 <CTimer::PollKernelTimers()+0x164>
   34d78:	eb000880 	bl	36f80 <assertion_failed>
   34d7c:	eaffffd3 	b	34cd0 <CTimer::PollKernelTimers()+0x90>
   34d80:	ebfffd70 	bl	34348 <EnterCritical>
   34d84:	eaffffb2 	b	34c54 <CTimer::PollKernelTimers()+0x14>
   34d88:	0004e398 	.word	0x0004e398
   34d8c:	4b544d43 	.word	0x4b544d43
   34d90:	0004e3b0 	.word	0x0004e3b0
   34d94:	0000014f 	.word	0x0000014f
   34d98:	0000015d 	.word	0x0000015d
   34d9c:	0004f6a4 	.word	0x0004f6a4
   34da0:	0000014e 	.word	0x0000014e
   34da4:	0004e3a4 	.word	0x0004e3a4

00034da8 <CTimer::InterruptHandler()>:
   34da8:	e92d4010 	push	{r4, lr}
   34dac:	e3a03000 	mov	r3, #0
   34db0:	e1a04000 	mov	r4, r0
   34db4:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   34db8:	e59f30f4 	ldr	r3, [pc, #244]	; 34eb4 <CTimer::InterruptHandler()+0x10c>
   34dbc:	e5933000 	ldr	r3, [r3]
   34dc0:	e3130008 	tst	r3, #8
   34dc4:	0a000035 	beq	34ea0 <CTimer::InterruptHandler()+0xf8>
   34dc8:	e59f20e4 	ldr	r2, [pc, #228]	; 34eb4 <CTimer::InterruptHandler()+0x10c>
   34dcc:	e5923018 	ldr	r3, [r2, #24]
   34dd0:	e2833c27 	add	r3, r3, #9984	; 0x2700
   34dd4:	e2833010 	add	r3, r3, #16
   34dd8:	e5823018 	str	r3, [r2, #24]
   34ddc:	e5921004 	ldr	r1, [r2, #4]
   34de0:	e1530001 	cmp	r3, r1
   34de4:	e3a01008 	mov	r1, #8
   34de8:	35923004 	ldrcc	r3, [r2, #4]
   34dec:	32833c27 	addcc	r3, r3, #9984	; 0x2700
   34df0:	32833010 	addcc	r3, r3, #16
   34df4:	35823018 	strcc	r3, [r2, #24]
   34df8:	e59f20b4 	ldr	r2, [pc, #180]	; 34eb4 <CTimer::InterruptHandler()+0x10c>
   34dfc:	e3a03000 	mov	r3, #0
   34e00:	e5821000 	str	r1, [r2]
   34e04:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   34e08:	e5940010 	ldr	r0, [r4, #16]
   34e0c:	e1500003 	cmp	r0, r3
   34e10:	1a000015 	bne	34e6c <CTimer::InterruptHandler()+0xc4>
   34e14:	e5942004 	ldr	r2, [r4, #4]
   34e18:	e59f0098 	ldr	r0, [pc, #152]	; 34eb8 <CTimer::InterruptHandler()+0x110>
   34e1c:	e2822001 	add	r2, r2, #1
   34e20:	e0810092 	umull	r0, r1, r2, r0
   34e24:	e1a032a1 	lsr	r3, r1, #5
   34e28:	e0833103 	add	r3, r3, r3, lsl #2
   34e2c:	e0833103 	add	r3, r3, r3, lsl #2
   34e30:	e0523103 	subs	r3, r2, r3, lsl #2
   34e34:	e5842004 	str	r2, [r4, #4]
   34e38:	1a000008 	bne	34e60 <CTimer::InterruptHandler()+0xb8>
   34e3c:	e5942008 	ldr	r2, [r4, #8]
   34e40:	e2822001 	add	r2, r2, #1
   34e44:	e5842008 	str	r2, [r4, #8]
   34e48:	e594200c 	ldr	r2, [r4, #12]
   34e4c:	e2822001 	add	r2, r2, #1
   34e50:	e584200c 	str	r2, [r4, #12]
   34e54:	e3530000 	cmp	r3, #0
   34e58:	0a000000 	beq	34e60 <CTimer::InterruptHandler()+0xb8>
   34e5c:	ebfffd65 	bl	343f8 <LeaveCritical>
   34e60:	e1a00004 	mov	r0, r4
   34e64:	e8bd4010 	pop	{r4, lr}
   34e68:	eaffff74 	b	34c40 <CTimer::PollKernelTimers()>
   34e6c:	ebfffd35 	bl	34348 <EnterCritical>
   34e70:	e5942004 	ldr	r2, [r4, #4]
   34e74:	e59f003c 	ldr	r0, [pc, #60]	; 34eb8 <CTimer::InterruptHandler()+0x110>
   34e78:	e2822001 	add	r2, r2, #1
   34e7c:	e0810092 	umull	r0, r1, r2, r0
   34e80:	e1a032a1 	lsr	r3, r1, #5
   34e84:	e0833103 	add	r3, r3, r3, lsl #2
   34e88:	e0833103 	add	r3, r3, r3, lsl #2
   34e8c:	e1520103 	cmp	r2, r3, lsl #2
   34e90:	e5842004 	str	r2, [r4, #4]
   34e94:	e5943010 	ldr	r3, [r4, #16]
   34e98:	1affffed 	bne	34e54 <CTimer::InterruptHandler()+0xac>
   34e9c:	eaffffe6 	b	34e3c <CTimer::InterruptHandler()+0x94>
   34ea0:	e59f2014 	ldr	r2, [pc, #20]	; 34ebc <CTimer::InterruptHandler()+0x114>
   34ea4:	e59f1014 	ldr	r1, [pc, #20]	; 34ec0 <CTimer::InterruptHandler()+0x118>
   34ea8:	e59f0014 	ldr	r0, [pc, #20]	; 34ec4 <CTimer::InterruptHandler()+0x11c>
   34eac:	eb000833 	bl	36f80 <assertion_failed>
   34eb0:	eaffffc4 	b	34dc8 <CTimer::InterruptHandler()+0x20>
   34eb4:	20003000 	.word	0x20003000
   34eb8:	51eb851f 	.word	0x51eb851f
   34ebc:	0000016f 	.word	0x0000016f
   34ec0:	0004e398 	.word	0x0004e398
   34ec4:	0004e440 	.word	0x0004e440

00034ec8 <CTimer::InterruptHandler(void*)>:
   34ec8:	e92d4010 	push	{r4, lr}
   34ecc:	e2504000 	subs	r4, r0, #0
   34ed0:	0a000002 	beq	34ee0 <CTimer::InterruptHandler(void*)+0x18>
   34ed4:	e1a00004 	mov	r0, r4
   34ed8:	e8bd4010 	pop	{r4, lr}
   34edc:	eaffffb1 	b	34da8 <CTimer::InterruptHandler()>
   34ee0:	e59f0014 	ldr	r0, [pc, #20]	; 34efc <CTimer::InterruptHandler(void*)+0x34>
   34ee4:	e59f2014 	ldr	r2, [pc, #20]	; 34f00 <CTimer::InterruptHandler(void*)+0x38>
   34ee8:	e59f1014 	ldr	r1, [pc, #20]	; 34f04 <CTimer::InterruptHandler(void*)+0x3c>
   34eec:	eb000823 	bl	36f80 <assertion_failed>
   34ef0:	e1a00004 	mov	r0, r4
   34ef4:	e8bd4010 	pop	{r4, lr}
   34ef8:	eaffffaa 	b	34da8 <CTimer::InterruptHandler()>
   34efc:	0004a0c0 	.word	0x0004a0c0
   34f00:	00000191 	.word	0x00000191
   34f04:	0004e398 	.word	0x0004e398

00034f08 <CTimer::TuneMsDelay()>:
   34f08:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   34f0c:	e1a04000 	mov	r4, r0
   34f10:	e5900020 	ldr	r0, [r0, #32]
   34f14:	e24dd00c 	sub	sp, sp, #12
   34f18:	e0603280 	rsb	r3, r0, r0, lsl #5
   34f1c:	e0800103 	add	r0, r0, r3, lsl #2
   34f20:	e1a00180 	lsl	r0, r0, #3
   34f24:	e5945004 	ldr	r5, [r4, #4]
   34f28:	eb0010be 	bl	39228 <DelayLoop>
   34f2c:	e5941004 	ldr	r1, [r4, #4]
   34f30:	e59f0068 	ldr	r0, [pc, #104]	; 34fa0 <CTimer::TuneMsDelay()+0x98>
   34f34:	e0411005 	sub	r1, r1, r5
   34f38:	ebfffbe0 	bl	33ec0 <__aeabi_uidiv>
   34f3c:	e1a05000 	mov	r5, r0
   34f40:	e5942020 	ldr	r2, [r4, #32]
   34f44:	e59f6058 	ldr	r6, [pc, #88]	; 34fa4 <CTimer::TuneMsDelay()+0x9c>
   34f48:	e0020092 	mul	r2, r2, r0
   34f4c:	e0832692 	umull	r2, r3, r2, r6
   34f50:	e1a012a3 	lsr	r1, r3, #5
   34f54:	e59f304c 	ldr	r3, [pc, #76]	; 34fa8 <CTimer::TuneMsDelay()+0xa0>
   34f58:	e2812f7d 	add	r2, r1, #500	; 0x1f4
   34f5c:	e0832392 	umull	r2, r3, r2, r3
   34f60:	e0876695 	umull	r6, r7, r5, r6
   34f64:	e1a03323 	lsr	r3, r3, #6
   34f68:	e5841020 	str	r1, [r4, #32]
   34f6c:	e5843024 	str	r3, [r4, #36]	; 0x24
   34f70:	eb00097e 	bl	37570 <CLogger::Get()>
   34f74:	e1a022a7 	lsr	r2, r7, #5
   34f78:	e0823102 	add	r3, r2, r2, lsl #2
   34f7c:	e0833103 	add	r3, r3, r3, lsl #2
   34f80:	e0455103 	sub	r5, r5, r3, lsl #2
   34f84:	e88d0024 	stm	sp, {r2, r5}
   34f88:	e59f301c 	ldr	r3, [pc, #28]	; 34fac <CTimer::TuneMsDelay()+0xa4>
   34f8c:	e3a02003 	mov	r2, #3
   34f90:	e59f1018 	ldr	r1, [pc, #24]	; 34fb0 <CTimer::TuneMsDelay()+0xa8>
   34f94:	eb000a55 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   34f98:	e28dd00c 	add	sp, sp, #12
   34f9c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   34fa0:	00002710 	.word	0x00002710
   34fa4:	51eb851f 	.word	0x51eb851f
   34fa8:	10624dd3 	.word	0x10624dd3
   34fac:	0004e464 	.word	0x0004e464
   34fb0:	0004e390 	.word	0x0004e390

00034fb4 <CTimer::Initialize()>:
   34fb4:	e92d4070 	push	{r4, r5, r6, lr}
   34fb8:	e1a04000 	mov	r4, r0
   34fbc:	e5900000 	ldr	r0, [r0]
   34fc0:	e3500000 	cmp	r0, #0
   34fc4:	0a000011 	beq	35010 <CTimer::Initialize()+0x5c>
   34fc8:	e1a03004 	mov	r3, r4
   34fcc:	e59f2054 	ldr	r2, [pc, #84]	; 35028 <CTimer::Initialize()+0x74>
   34fd0:	e3a01003 	mov	r1, #3
   34fd4:	eb0011da 	bl	39744 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   34fd8:	e3a05000 	mov	r5, #0
   34fdc:	ee075f9a 	mcr	15, 0, r5, cr7, cr10, {4}
   34fe0:	e59f2044 	ldr	r2, [pc, #68]	; 3502c <CTimer::Initialize()+0x78>
   34fe4:	e59f3044 	ldr	r3, [pc, #68]	; 35030 <CTimer::Initialize()+0x7c>
   34fe8:	e1a00004 	mov	r0, r4
   34fec:	e5823004 	str	r3, [r2, #4]
   34ff0:	e5923004 	ldr	r3, [r2, #4]
   34ff4:	e2833c27 	add	r3, r3, #9984	; 0x2700
   34ff8:	e2833010 	add	r3, r3, #16
   34ffc:	e5823018 	str	r3, [r2, #24]
   35000:	ebffffc0 	bl	34f08 <CTimer::TuneMsDelay()>
   35004:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   35008:	e3a00001 	mov	r0, #1
   3500c:	e8bd8070 	pop	{r4, r5, r6, pc}
   35010:	e59f001c 	ldr	r0, [pc, #28]	; 35034 <CTimer::Initialize()+0x80>
   35014:	e3a02055 	mov	r2, #85	; 0x55
   35018:	e59f1018 	ldr	r1, [pc, #24]	; 35038 <CTimer::Initialize()+0x84>
   3501c:	eb0007d7 	bl	36f80 <assertion_failed>
   35020:	e5940000 	ldr	r0, [r4]
   35024:	eaffffe7 	b	34fc8 <CTimer::Initialize()+0x14>
   35028:	00034ec8 	.word	0x00034ec8
   3502c:	20003000 	.word	0x20003000
   35030:	fe363c80 	.word	0xfe363c80
   35034:	0004a0f8 	.word	0x0004a0f8
   35038:	0004e398 	.word	0x0004e398

0003503c <CTimer::SimpleMsDelay(unsigned int)>:
   3503c:	e3500000 	cmp	r0, #0
   35040:	012fff1e 	bxeq	lr
   35044:	e0603280 	rsb	r3, r0, r0, lsl #5
   35048:	e0800103 	add	r0, r0, r3, lsl #2
   3504c:	e1b00180 	lsls	r0, r0, #3
   35050:	012fff1e 	bxeq	lr
   35054:	eafffd4c 	b	3458c <CTimer::SimpleusDelay(unsigned int) [clone .part.0]>

00035058 <CTimer::SimpleusDelay(unsigned int)>:
   35058:	e3500000 	cmp	r0, #0
   3505c:	012fff1e 	bxeq	lr
   35060:	eafffd49 	b	3458c <CTimer::SimpleusDelay(unsigned int) [clone .part.0]>

00035064 <CTimer::IsLeapYear(unsigned int)>:
   35064:	e92d0030 	push	{r4, r5}
   35068:	e59f4048 	ldr	r4, [pc, #72]	; 350b8 <CTimer::IsLeapYear(unsigned int)+0x54>
   3506c:	e0854490 	umull	r4, r5, r0, r4
   35070:	e1a032a5 	lsr	r3, r5, #5
   35074:	e0833103 	add	r3, r3, r3, lsl #2
   35078:	e0833103 	add	r3, r3, r3, lsl #2
   3507c:	e1500103 	cmp	r0, r3, lsl #2
   35080:	0a000004 	beq	35098 <CTimer::IsLeapYear(unsigned int)+0x34>
   35084:	e8bd0030 	pop	{r4, r5}
   35088:	e3100003 	tst	r0, #3
   3508c:	03a00001 	moveq	r0, #1
   35090:	13a00000 	movne	r0, #0
   35094:	e12fff1e 	bx	lr
   35098:	e1a033a5 	lsr	r3, r5, #7
   3509c:	e0833103 	add	r3, r3, r3, lsl #2
   350a0:	e0833103 	add	r3, r3, r3, lsl #2
   350a4:	e1500203 	cmp	r0, r3, lsl #4
   350a8:	03a00001 	moveq	r0, #1
   350ac:	e8bd0030 	pop	{r4, r5}
   350b0:	13a00000 	movne	r0, #0
   350b4:	e12fff1e 	bx	lr
   350b8:	51eb851f 	.word	0x51eb851f

000350bc <CTimer::GetDaysOfMonth(unsigned int, unsigned int)>:
   350bc:	e3500001 	cmp	r0, #1
   350c0:	0a000002 	beq	350d0 <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0x14>
   350c4:	e59f3064 	ldr	r3, [pc, #100]	; 35130 <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0x74>
   350c8:	e7930100 	ldr	r0, [r3, r0, lsl #2]
   350cc:	e12fff1e 	bx	lr
   350d0:	e92d0030 	push	{r4, r5}
   350d4:	e59f4058 	ldr	r4, [pc, #88]	; 35134 <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0x78>
   350d8:	e0854491 	umull	r4, r5, r1, r4
   350dc:	e1a032a5 	lsr	r3, r5, #5
   350e0:	e0833103 	add	r3, r3, r3, lsl #2
   350e4:	e0833103 	add	r3, r3, r3, lsl #2
   350e8:	e1510103 	cmp	r1, r3, lsl #2
   350ec:	0a000008 	beq	35114 <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0x58>
   350f0:	e3110003 	tst	r1, #3
   350f4:	03a03001 	moveq	r3, #1
   350f8:	13a03000 	movne	r3, #0
   350fc:	e8bd0030 	pop	{r4, r5}
   35100:	e3530000 	cmp	r3, #0
   35104:	059f3024 	ldreq	r3, [pc, #36]	; 35130 <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0x74>
   35108:	13a0001d 	movne	r0, #29
   3510c:	07930100 	ldreq	r0, [r3, r0, lsl #2]
   35110:	e12fff1e 	bx	lr
   35114:	e1a033a5 	lsr	r3, r5, #7
   35118:	e0833103 	add	r3, r3, r3, lsl #2
   3511c:	e0833103 	add	r3, r3, r3, lsl #2
   35120:	e1510203 	cmp	r1, r3, lsl #4
   35124:	03a03001 	moveq	r3, #1
   35128:	13a03000 	movne	r3, #0
   3512c:	eafffff2 	b	350fc <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0x40>
   35130:	0004e360 	.word	0x0004e360
   35134:	51eb851f 	.word	0x51eb851f

00035138 <CTimer::Get()>:
   35138:	e92d4010 	push	{r4, lr}
   3513c:	e59f4020 	ldr	r4, [pc, #32]	; 35164 <CTimer::Get()+0x2c>
   35140:	e5940000 	ldr	r0, [r4]
   35144:	e3500000 	cmp	r0, #0
   35148:	18bd8010 	popne	{r4, pc}
   3514c:	e59f2014 	ldr	r2, [pc, #20]	; 35168 <CTimer::Get()+0x30>
   35150:	e59f1014 	ldr	r1, [pc, #20]	; 3516c <CTimer::Get()+0x34>
   35154:	e59f0014 	ldr	r0, [pc, #20]	; 35170 <CTimer::Get()+0x38>
   35158:	eb000788 	bl	36f80 <assertion_failed>
   3515c:	e5940000 	ldr	r0, [r4]
   35160:	e8bd8010 	pop	{r4, pc}
   35164:	0017af84 	.word	0x0017af84
   35168:	000001d6 	.word	0x000001d6
   3516c:	0004e398 	.word	0x0004e398
   35170:	0004a034 	.word	0x0004a034

00035174 <memset>:
   35174:	e3520000 	cmp	r2, #0
   35178:	012fff1e 	bxeq	lr
   3517c:	e1a03000 	mov	r3, r0
   35180:	e6af1071 	sxtb	r1, r1
   35184:	e0802002 	add	r2, r0, r2
   35188:	e4c31001 	strb	r1, [r3], #1
   3518c:	e1530002 	cmp	r3, r2
   35190:	1afffffc 	bne	35188 <memset+0x14>
   35194:	e12fff1e 	bx	lr

00035198 <memcmp>:
   35198:	e3520000 	cmp	r2, #0
   3519c:	e242c001 	sub	ip, r2, #1
   351a0:	0a00000d 	beq	351dc <memcmp+0x44>
   351a4:	e5d02000 	ldrb	r2, [r0]
   351a8:	e5d13000 	ldrb	r3, [r1]
   351ac:	e1520003 	cmp	r2, r3
   351b0:	8a00000b 	bhi	351e4 <memcmp+0x4c>
   351b4:	3a00000c 	bcc	351ec <memcmp+0x54>
   351b8:	e081c00c 	add	ip, r1, ip
   351bc:	ea000004 	b	351d4 <memcmp+0x3c>
   351c0:	e5f02001 	ldrb	r2, [r0, #1]!
   351c4:	e5f13001 	ldrb	r3, [r1, #1]!
   351c8:	e1520003 	cmp	r2, r3
   351cc:	8a000004 	bhi	351e4 <memcmp+0x4c>
   351d0:	3a000005 	bcc	351ec <memcmp+0x54>
   351d4:	e151000c 	cmp	r1, ip
   351d8:	1afffff8 	bne	351c0 <memcmp+0x28>
   351dc:	e3a00000 	mov	r0, #0
   351e0:	e12fff1e 	bx	lr
   351e4:	e3a00001 	mov	r0, #1
   351e8:	e12fff1e 	bx	lr
   351ec:	e3e00000 	mvn	r0, #0
   351f0:	e12fff1e 	bx	lr

000351f4 <strlen>:
   351f4:	e1d010d0 	ldrsb	r1, [r0]
   351f8:	e2803001 	add	r3, r0, #1
   351fc:	e3510000 	cmp	r1, #0
   35200:	0a000003 	beq	35214 <strlen+0x20>
   35204:	e0431000 	sub	r1, r3, r0
   35208:	e0d320d1 	ldrsb	r2, [r3], #1
   3520c:	e3520000 	cmp	r2, #0
   35210:	1afffffb 	bne	35204 <strlen+0x10>
   35214:	e1a00001 	mov	r0, r1
   35218:	e12fff1e 	bx	lr

0003521c <strcmp>:
   3521c:	e1d030d0 	ldrsb	r3, [r0]
   35220:	e1d120d0 	ldrsb	r2, [r1]
   35224:	e3530000 	cmp	r3, #0
   35228:	0a00000e 	beq	35268 <strcmp+0x4c>
   3522c:	e3520000 	cmp	r2, #0
   35230:	0a00000c 	beq	35268 <strcmp+0x4c>
   35234:	e1520003 	cmp	r2, r3
   35238:	ba00000f 	blt	3527c <strcmp+0x60>
   3523c:	da000005 	ble	35258 <strcmp+0x3c>
   35240:	ea00000f 	b	35284 <strcmp+0x68>
   35244:	e3520000 	cmp	r2, #0
   35248:	0a000006 	beq	35268 <strcmp+0x4c>
   3524c:	e1530002 	cmp	r3, r2
   35250:	ca000009 	bgt	3527c <strcmp+0x60>
   35254:	ba00000a 	blt	35284 <strcmp+0x68>
   35258:	e1f030d1 	ldrsb	r3, [r0, #1]!
   3525c:	e1f120d1 	ldrsb	r2, [r1, #1]!
   35260:	e3530000 	cmp	r3, #0
   35264:	1afffff6 	bne	35244 <strcmp+0x28>
   35268:	e1530002 	cmp	r3, r2
   3526c:	ca000002 	bgt	3527c <strcmp+0x60>
   35270:	b3e00000 	mvnlt	r0, #0
   35274:	a3a00000 	movge	r0, #0
   35278:	e12fff1e 	bx	lr
   3527c:	e3a00001 	mov	r0, #1
   35280:	e12fff1e 	bx	lr
   35284:	e3e00000 	mvn	r0, #0
   35288:	e12fff1e 	bx	lr

0003528c <strcpy>:
   3528c:	e1d130d0 	ldrsb	r3, [r1]
   35290:	e1a02000 	mov	r2, r0
   35294:	e3530000 	cmp	r3, #0
   35298:	0a000003 	beq	352ac <strcpy+0x20>
   3529c:	e4c23001 	strb	r3, [r2], #1
   352a0:	e1f130d1 	ldrsb	r3, [r1, #1]!
   352a4:	e3530000 	cmp	r3, #0
   352a8:	1afffffb 	bne	3529c <strcpy+0x10>
   352ac:	e3a03000 	mov	r3, #0
   352b0:	e5c23000 	strb	r3, [r2]
   352b4:	e12fff1e 	bx	lr

000352b8 <strncpy>:
   352b8:	e3520000 	cmp	r2, #0
   352bc:	012fff1e 	bxeq	lr
   352c0:	e1d1c0d0 	ldrsb	ip, [r1]
   352c4:	e35c0000 	cmp	ip, #0
   352c8:	0a00000a 	beq	352f8 <strncpy+0x40>
   352cc:	e1a03000 	mov	r3, r0
   352d0:	e0802002 	add	r2, r0, r2
   352d4:	e4c3c001 	strb	ip, [r3], #1
   352d8:	e1530002 	cmp	r3, r2
   352dc:	012fff1e 	bxeq	lr
   352e0:	e1f1c0d1 	ldrsb	ip, [r1, #1]!
   352e4:	e35c0000 	cmp	ip, #0
   352e8:	1afffff9 	bne	352d4 <strncpy+0x1c>
   352ec:	e3a02000 	mov	r2, #0
   352f0:	e5c32000 	strb	r2, [r3]
   352f4:	e12fff1e 	bx	lr
   352f8:	e1a03000 	mov	r3, r0
   352fc:	eafffffa 	b	352ec <strncpy+0x34>

00035300 <strcat>:
   35300:	e1d030d0 	ldrsb	r3, [r0]
   35304:	e3530000 	cmp	r3, #0
   35308:	e1a03000 	mov	r3, r0
   3530c:	0a000002 	beq	3531c <strcat+0x1c>
   35310:	e1f320d1 	ldrsb	r2, [r3, #1]!
   35314:	e3520000 	cmp	r2, #0
   35318:	1afffffc 	bne	35310 <strcat+0x10>
   3531c:	e1d120d0 	ldrsb	r2, [r1]
   35320:	e3520000 	cmp	r2, #0
   35324:	0a000003 	beq	35338 <strcat+0x38>
   35328:	e4c32001 	strb	r2, [r3], #1
   3532c:	e1f120d1 	ldrsb	r2, [r1, #1]!
   35330:	e3520000 	cmp	r2, #0
   35334:	1afffffb 	bne	35328 <strcat+0x28>
   35338:	e3a02000 	mov	r2, #0
   3533c:	e5c32000 	strb	r2, [r3]
   35340:	e12fff1e 	bx	lr

00035344 <strchr>:
   35344:	e1d020d0 	ldrsb	r2, [r0]
   35348:	e3520000 	cmp	r2, #0
   3534c:	0a000009 	beq	35378 <strchr+0x34>
   35350:	e1510002 	cmp	r1, r2
   35354:	1a000002 	bne	35364 <strchr+0x20>
   35358:	e12fff1e 	bx	lr
   3535c:	e1530001 	cmp	r3, r1
   35360:	012fff1e 	bxeq	lr
   35364:	e1f030d1 	ldrsb	r3, [r0, #1]!
   35368:	e3530000 	cmp	r3, #0
   3536c:	1afffffa 	bne	3535c <strchr+0x18>
   35370:	e1a00003 	mov	r0, r3
   35374:	e12fff1e 	bx	lr
   35378:	e1a00002 	mov	r0, r2
   3537c:	e12fff1e 	bx	lr

00035380 <strtok_r>:
   35380:	e3500000 	cmp	r0, #0
   35384:	0a000029 	beq	35430 <strtok_r+0xb0>
   35388:	e1d0c0d0 	ldrsb	ip, [r0]
   3538c:	e35c0000 	cmp	ip, #0
   35390:	0a00002d 	beq	3544c <strtok_r+0xcc>
   35394:	e92d4030 	push	{r4, r5, lr}
   35398:	e1d140d0 	ldrsb	r4, [r1]
   3539c:	e3540000 	cmp	r4, #0
   353a0:	0a000008 	beq	353c8 <strtok_r+0x48>
   353a4:	e15c0004 	cmp	ip, r4
   353a8:	0a000019 	beq	35414 <strtok_r+0x94>
   353ac:	e1a0e001 	mov	lr, r1
   353b0:	ea000001 	b	353bc <strtok_r+0x3c>
   353b4:	e15c0003 	cmp	ip, r3
   353b8:	0a000015 	beq	35414 <strtok_r+0x94>
   353bc:	e1fe30d1 	ldrsb	r3, [lr, #1]!
   353c0:	e3530000 	cmp	r3, #0
   353c4:	1afffffa 	bne	353b4 <strtok_r+0x34>
   353c8:	e35c0000 	cmp	ip, #0
   353cc:	0a00001b 	beq	35440 <strtok_r+0xc0>
   353d0:	e1a05000 	mov	r5, r0
   353d4:	e3540000 	cmp	r4, #0
   353d8:	0a000008 	beq	35400 <strtok_r+0x80>
   353dc:	e15c0004 	cmp	ip, r4
   353e0:	0a00000d 	beq	3541c <strtok_r+0x9c>
   353e4:	e1a0e001 	mov	lr, r1
   353e8:	ea000001 	b	353f4 <strtok_r+0x74>
   353ec:	e153000c 	cmp	r3, ip
   353f0:	0a000009 	beq	3541c <strtok_r+0x9c>
   353f4:	e1fe30d1 	ldrsb	r3, [lr, #1]!
   353f8:	e3530000 	cmp	r3, #0
   353fc:	1afffffa 	bne	353ec <strtok_r+0x6c>
   35400:	e1f5c0d1 	ldrsb	ip, [r5, #1]!
   35404:	e35c0000 	cmp	ip, #0
   35408:	1afffff1 	bne	353d4 <strtok_r+0x54>
   3540c:	e5825000 	str	r5, [r2]
   35410:	e8bd8030 	pop	{r4, r5, pc}
   35414:	e1f0c0d1 	ldrsb	ip, [r0, #1]!
   35418:	eaffffdf 	b	3539c <strtok_r+0x1c>
   3541c:	e3a03000 	mov	r3, #0
   35420:	e2855001 	add	r5, r5, #1
   35424:	e5453001 	strb	r3, [r5, #-1]
   35428:	e5825000 	str	r5, [r2]
   3542c:	e8bd8030 	pop	{r4, r5, pc}
   35430:	e5920000 	ldr	r0, [r2]
   35434:	e3500000 	cmp	r0, #0
   35438:	1affffd2 	bne	35388 <strtok_r+0x8>
   3543c:	e12fff1e 	bx	lr
   35440:	e3a00000 	mov	r0, #0
   35444:	e5820000 	str	r0, [r2]
   35448:	e8bd8030 	pop	{r4, r5, pc}
   3544c:	e3a00000 	mov	r0, #0
   35450:	e5820000 	str	r0, [r2]
   35454:	e12fff1e 	bx	lr

00035458 <strtoul>:
   35458:	e3510000 	cmp	r1, #0
   3545c:	e2423002 	sub	r3, r2, #2
   35460:	e92d4070 	push	{r4, r5, r6, lr}
   35464:	15810000 	strne	r0, [r1]
   35468:	e3520000 	cmp	r2, #0
   3546c:	13530022 	cmpne	r3, #34	; 0x22
   35470:	e3c2e010 	bic	lr, r2, #16
   35474:	8a000032 	bhi	35544 <strtoul+0xec>
   35478:	e1d030d0 	ldrsb	r3, [r0]
   3547c:	e1a04000 	mov	r4, r0
   35480:	e243c009 	sub	ip, r3, #9
   35484:	e3530020 	cmp	r3, #32
   35488:	e2800001 	add	r0, r0, #1
   3548c:	e6efc07c 	uxtb	ip, ip
   35490:	0afffff8 	beq	35478 <strtoul+0x20>
   35494:	e35c0004 	cmp	ip, #4
   35498:	9afffff6 	bls	35478 <strtoul+0x20>
   3549c:	e353002b 	cmp	r3, #43	; 0x2b
   354a0:	0a000029 	beq	3554c <strtoul+0xf4>
   354a4:	e353002d 	cmp	r3, #45	; 0x2d
   354a8:	01d430d1 	ldrsbeq	r3, [r4, #1]
   354ac:	03a06001 	moveq	r6, #1
   354b0:	01a04000 	moveq	r4, r0
   354b4:	13a06000 	movne	r6, #0
   354b8:	e3530030 	cmp	r3, #48	; 0x30
   354bc:	0a000027 	beq	35560 <strtoul+0x108>
   354c0:	e3520000 	cmp	r2, #0
   354c4:	03a0200a 	moveq	r2, #10
   354c8:	e353002f 	cmp	r3, #47	; 0x2f
   354cc:	e1a0c003 	mov	ip, r3
   354d0:	da00003a 	ble	355c0 <strtoul+0x168>
   354d4:	e3a05001 	mov	r5, #1
   354d8:	e3a0e000 	mov	lr, #0
   354dc:	ea000008 	b	35504 <strtoul+0xac>
   354e0:	e020c29e 	mla	r0, lr, r2, ip
   354e4:	e150000e 	cmp	r0, lr
   354e8:	3a000027 	bcc	3558c <strtoul+0x134>
   354ec:	e1f4c0d1 	ldrsb	ip, [r4, #1]!
   354f0:	e3a05000 	mov	r5, #0
   354f4:	e35c002f 	cmp	ip, #47	; 0x2f
   354f8:	e1a0300c 	mov	r3, ip
   354fc:	da000027 	ble	355a0 <strtoul+0x148>
   35500:	e1a0e000 	mov	lr, r0
   35504:	e2433061 	sub	r3, r3, #97	; 0x61
   35508:	e3530019 	cmp	r3, #25
   3550c:	924cc020 	subls	ip, ip, #32
   35510:	e35c0040 	cmp	ip, #64	; 0x40
   35514:	c24cc007 	subgt	ip, ip, #7
   35518:	e24cc030 	sub	ip, ip, #48	; 0x30
   3551c:	e15c0002 	cmp	ip, r2
   35520:	baffffee 	blt	354e0 <strtoul+0x88>
   35524:	e1a0000e 	mov	r0, lr
   35528:	e2253001 	eor	r3, r5, #1
   3552c:	e3510000 	cmp	r1, #0
   35530:	e0033006 	and	r3, r3, r6
   35534:	15814000 	strne	r4, [r1]
   35538:	e3530000 	cmp	r3, #0
   3553c:	12600000 	rsbne	r0, r0, #0
   35540:	e8bd8070 	pop	{r4, r5, r6, pc}
   35544:	e3a00000 	mov	r0, #0
   35548:	e8bd8070 	pop	{r4, r5, r6, pc}
   3554c:	e1d430d1 	ldrsb	r3, [r4, #1]
   35550:	e3a06000 	mov	r6, #0
   35554:	e3530030 	cmp	r3, #48	; 0x30
   35558:	e1a04000 	mov	r4, r0
   3555c:	1affffd7 	bne	354c0 <strtoul+0x68>
   35560:	e1d430d1 	ldrsb	r3, [r4, #1]
   35564:	e284c001 	add	ip, r4, #1
   35568:	e3c30020 	bic	r0, r3, #32
   3556c:	e3500058 	cmp	r0, #88	; 0x58
   35570:	1a00000c 	bne	355a8 <strtoul+0x150>
   35574:	e35e0000 	cmp	lr, #0
   35578:	1afffff1 	bne	35544 <strtoul+0xec>
   3557c:	e1d430d2 	ldrsb	r3, [r4, #2]
   35580:	e3a02010 	mov	r2, #16
   35584:	e2844002 	add	r4, r4, #2
   35588:	eaffffce 	b	354c8 <strtoul+0x70>
   3558c:	e3510000 	cmp	r1, #0
   35590:	0a000008 	beq	355b8 <strtoul+0x160>
   35594:	e5814000 	str	r4, [r1]
   35598:	e3e00000 	mvn	r0, #0
   3559c:	e8bd8070 	pop	{r4, r5, r6, pc}
   355a0:	e3a03001 	mov	r3, #1
   355a4:	eaffffe0 	b	3552c <strtoul+0xd4>
   355a8:	e3520000 	cmp	r2, #0
   355ac:	e1a0400c 	mov	r4, ip
   355b0:	03a02008 	moveq	r2, #8
   355b4:	eaffffc3 	b	354c8 <strtoul+0x70>
   355b8:	e3e00000 	mvn	r0, #0
   355bc:	e8bd8070 	pop	{r4, r5, r6, pc}
   355c0:	e3510000 	cmp	r1, #0
   355c4:	0affffde 	beq	35544 <strtoul+0xec>
   355c8:	e3a00000 	mov	r0, #0
   355cc:	e5814000 	str	r4, [r1]
   355d0:	e8bd8070 	pop	{r4, r5, r6, pc}

000355d4 <char2int>:
   355d4:	e12fff1e 	bx	lr

000355d8 <memcpy>:
   355d8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
   355dc:	e352007f 	cmp	r2, #127	; 0x7f
   355e0:	9a00000b 	bls	35614 <memcpy+0x3c>
   355e4:	e3110003 	tst	r1, #3
   355e8:	1a000009 	bne	35614 <memcpy+0x3c>
   355ec:	e3100003 	tst	r0, #3
   355f0:	1a000007 	bne	35614 <memcpy+0x3c>
   355f4:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
   355f8:	e8b107f8 	ldm	r1!, {r3, r4, r5, r6, r7, r8, r9, sl}
   355fc:	e2422020 	sub	r2, r2, #32
   35600:	e8a007f8 	stmia	r0!, {r3, r4, r5, r6, r7, r8, r9, sl}
   35604:	f5d1f040 	pld	[r1, #64]	; 0x40
   35608:	e352001f 	cmp	r2, #31
   3560c:	8afffff9 	bhi	355f8 <memcpy+0x20>
   35610:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
   35614:	e3520000 	cmp	r2, #0
   35618:	0a000003 	beq	3562c <memcpy+0x54>
   3561c:	e4d13001 	ldrb	r3, [r1], #1
   35620:	e2522001 	subs	r2, r2, #1
   35624:	e4c03001 	strb	r3, [r0], #1
   35628:	1afffffb 	bne	3561c <memcpy+0x44>
   3562c:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
   35630:	e12fff1e 	bx	lr

00035634 <CDevice::~CDevice()>:
   35634:	e12fff1e 	bx	lr

00035638 <CDevice::Read(void*, unsigned int)>:
   35638:	e3e00000 	mvn	r0, #0
   3563c:	e12fff1e 	bx	lr

00035640 <CDevice::Seek(unsigned long long)>:
   35640:	e3e00000 	mvn	r0, #0
   35644:	e3e01000 	mvn	r1, #0
   35648:	e12fff1e 	bx	lr

0003564c <CDevice::~CDevice()>:
   3564c:	e92d4010 	push	{r4, lr}
   35650:	e1a04000 	mov	r4, r0
   35654:	e3a01004 	mov	r1, #4
   35658:	ebfffb32 	bl	34328 <operator delete(void*, unsigned int)>
   3565c:	e1a00004 	mov	r0, r4
   35660:	e8bd8010 	pop	{r4, pc}

00035664 <CDevice::CDevice()>:
   35664:	e59f3004 	ldr	r3, [pc, #4]	; 35670 <CDevice::CDevice()+0xc>
   35668:	e5803000 	str	r3, [r0]
   3566c:	e12fff1e 	bx	lr
   35670:	0004e4b4 	.word	0x0004e4b4

00035674 <CKernelOptions::GetDecimal(char*) [clone .part.0]>:
   35674:	e3a01000 	mov	r1, #0
   35678:	ea00000a 	b	356a8 <CKernelOptions::GetDecimal(char*) [clone .part.0]+0x34>
   3567c:	e3520009 	cmp	r2, #9
   35680:	8a000011 	bhi	356cc <CKernelOptions::GetDecimal(char*) [clone .part.0]+0x58>
   35684:	e3730001 	cmn	r3, #1
   35688:	13a02000 	movne	r2, #0
   3568c:	03a02001 	moveq	r2, #1
   35690:	e1510003 	cmp	r1, r3
   35694:	91a01002 	movls	r1, r2
   35698:	83821001 	orrhi	r1, r2, #1
   3569c:	e3510000 	cmp	r1, #0
   356a0:	1a000009 	bne	356cc <CKernelOptions::GetDecimal(char*) [clone .part.0]+0x58>
   356a4:	e1a01003 	mov	r1, r3
   356a8:	e0d0c0d1 	ldrsb	ip, [r0], #1
   356ac:	e0813101 	add	r3, r1, r1, lsl #2
   356b0:	e24c2030 	sub	r2, ip, #48	; 0x30
   356b4:	e35c0000 	cmp	ip, #0
   356b8:	e0823083 	add	r3, r2, r3, lsl #1
   356bc:	e6ef2072 	uxtb	r2, r2
   356c0:	1affffed 	bne	3567c <CKernelOptions::GetDecimal(char*) [clone .part.0]+0x8>
   356c4:	e1a00001 	mov	r0, r1
   356c8:	e12fff1e 	bx	lr
   356cc:	e3e01000 	mvn	r1, #0
   356d0:	e1a00001 	mov	r0, r1
   356d4:	e12fff1e 	bx	lr

000356d8 <CKernelOptions::~CKernelOptions()>:
   356d8:	e3a02000 	mov	r2, #0
   356dc:	e59f3004 	ldr	r3, [pc, #4]	; 356e8 <CKernelOptions::~CKernelOptions()+0x10>
   356e0:	e5832000 	str	r2, [r3]
   356e4:	e12fff1e 	bx	lr
   356e8:	0017af88 	.word	0x0017af88

000356ec <CKernelOptions::GetWidth() const>:
   356ec:	e5900810 	ldr	r0, [r0, #2064]	; 0x810
   356f0:	e12fff1e 	bx	lr

000356f4 <CKernelOptions::GetHeight() const>:
   356f4:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
   356f8:	e12fff1e 	bx	lr

000356fc <CKernelOptions::GetLogDevice() const>:
   356fc:	e2800e81 	add	r0, r0, #2064	; 0x810
   35700:	e2800008 	add	r0, r0, #8
   35704:	e12fff1e 	bx	lr

00035708 <CKernelOptions::GetLogLevel() const>:
   35708:	e590082c 	ldr	r0, [r0, #2092]	; 0x82c
   3570c:	e12fff1e 	bx	lr

00035710 <CKernelOptions::GetKeyMap() const>:
   35710:	e2800e83 	add	r0, r0, #2096	; 0x830
   35714:	e12fff1e 	bx	lr

00035718 <CKernelOptions::GetUSBPowerDelay() const>:
   35718:	e5900834 	ldr	r0, [r0, #2100]	; 0x834
   3571c:	e12fff1e 	bx	lr

00035720 <CKernelOptions::GetCPUSpeed() const>:
   35720:	e5d00838 	ldrb	r0, [r0, #2104]	; 0x838
   35724:	e12fff1e 	bx	lr

00035728 <CKernelOptions::GetSoCMaxTemp() const>:
   35728:	e590083c 	ldr	r0, [r0, #2108]	; 0x83c
   3572c:	e12fff1e 	bx	lr

00035730 <CKernelOptions::Get()>:
   35730:	e59f3004 	ldr	r3, [pc, #4]	; 3573c <CKernelOptions::Get()+0xc>
   35734:	e5930000 	ldr	r0, [r3]
   35738:	e12fff1e 	bx	lr
   3573c:	0017af88 	.word	0x0017af88

00035740 <CKernelOptions::GetToken()>:
   35740:	e590380c 	ldr	r3, [r0, #2060]	; 0x80c
   35744:	e1d320d0 	ldrsb	r2, [r3]
   35748:	e3520000 	cmp	r2, #0
   3574c:	1a000005 	bne	35768 <CKernelOptions::GetToken()+0x28>
   35750:	ea000016 	b	357b0 <CKernelOptions::GetToken()+0x70>
   35754:	e2833001 	add	r3, r3, #1
   35758:	e580380c 	str	r3, [r0, #2060]	; 0x80c
   3575c:	e1d320d0 	ldrsb	r2, [r3]
   35760:	e3520000 	cmp	r2, #0
   35764:	0a000011 	beq	357b0 <CKernelOptions::GetToken()+0x70>
   35768:	e3520020 	cmp	r2, #32
   3576c:	0afffff8 	beq	35754 <CKernelOptions::GetToken()+0x14>
   35770:	e1a02003 	mov	r2, r3
   35774:	ea000000 	b	3577c <CKernelOptions::GetToken()+0x3c>
   35778:	e1a02001 	mov	r2, r1
   3577c:	e2821001 	add	r1, r2, #1
   35780:	e580180c 	str	r1, [r0, #2060]	; 0x80c
   35784:	e1d2c0d1 	ldrsb	ip, [r2, #1]
   35788:	e35c0000 	cmp	ip, #0
   3578c:	0a000008 	beq	357b4 <CKernelOptions::GetToken()+0x74>
   35790:	e35c0020 	cmp	ip, #32
   35794:	1afffff7 	bne	35778 <CKernelOptions::GetToken()+0x38>
   35798:	e3a0c000 	mov	ip, #0
   3579c:	e2822002 	add	r2, r2, #2
   357a0:	e580280c 	str	r2, [r0, #2060]	; 0x80c
   357a4:	e5c1c000 	strb	ip, [r1]
   357a8:	e1a00003 	mov	r0, r3
   357ac:	e12fff1e 	bx	lr
   357b0:	e3a03000 	mov	r3, #0
   357b4:	e1a00003 	mov	r0, r3
   357b8:	e12fff1e 	bx	lr

000357bc <CKernelOptions::CKernelOptions()>:
   357bc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   357c0:	e3a02004 	mov	r2, #4
   357c4:	e1a04000 	mov	r4, r0
   357c8:	e3a05000 	mov	r5, #0
   357cc:	e3a0303c 	mov	r3, #60	; 0x3c
   357d0:	e2806e81 	add	r6, r0, #2064	; 0x810
   357d4:	e2866008 	add	r6, r6, #8
   357d8:	e580282c 	str	r2, [r0, #2092]	; 0x82c
   357dc:	e580383c 	str	r3, [r0, #2108]	; 0x83c
   357e0:	e24dd014 	sub	sp, sp, #20
   357e4:	e59f12d8 	ldr	r1, [pc, #728]	; 35ac4 <CKernelOptions::CKernelOptions()+0x308>
   357e8:	e1a00006 	mov	r0, r6
   357ec:	e5845810 	str	r5, [r4, #2064]	; 0x810
   357f0:	e5845814 	str	r5, [r4, #2068]	; 0x814
   357f4:	e5845834 	str	r5, [r4, #2100]	; 0x834
   357f8:	e5c45838 	strb	r5, [r4, #2104]	; 0x838
   357fc:	e2849e83 	add	r9, r4, #2096	; 0x830
   35800:	ebfffea1 	bl	3528c <strcpy>
   35804:	e59f12bc 	ldr	r1, [pc, #700]	; 35ac8 <CKernelOptions::CKernelOptions()+0x30c>
   35808:	e1a00009 	mov	r0, r9
   3580c:	ebfffe9e 	bl	3528c <strcpy>
   35810:	e59f32b4 	ldr	r3, [pc, #692]	; 35acc <CKernelOptions::CKernelOptions()+0x310>
   35814:	e28d0008 	add	r0, sp, #8
   35818:	e5834000 	str	r4, [r3]
   3581c:	ebfff608 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   35820:	e58d5000 	str	r5, [sp]
   35824:	e1a02004 	mov	r2, r4
   35828:	e28d0008 	add	r0, sp, #8
   3582c:	e59f329c 	ldr	r3, [pc, #668]	; 35ad0 <CKernelOptions::CKernelOptions()+0x314>
   35830:	e59f129c 	ldr	r1, [pc, #668]	; 35ad4 <CKernelOptions::CKernelOptions()+0x318>
   35834:	ebfff649 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   35838:	e1500005 	cmp	r0, r5
   3583c:	0a000037 	beq	35920 <CKernelOptions::CKernelOptions()+0x164>
   35840:	e5943008 	ldr	r3, [r4, #8]
   35844:	e3530b02 	cmp	r3, #2048	; 0x800
   35848:	2a000034 	bcs	35920 <CKernelOptions::CKernelOptions()+0x164>
   3584c:	e0843003 	add	r3, r4, r3
   35850:	e284200c 	add	r2, r4, #12
   35854:	e59f827c 	ldr	r8, [pc, #636]	; 35ad8 <CKernelOptions::CKernelOptions()+0x31c>
   35858:	e59fa27c 	ldr	sl, [pc, #636]	; 35adc <CKernelOptions::CKernelOptions()+0x320>
   3585c:	e5c3500c 	strb	r5, [r3, #12]
   35860:	e584280c 	str	r2, [r4, #2060]	; 0x80c
   35864:	e1a00004 	mov	r0, r4
   35868:	ebffffb4 	bl	35740 <CKernelOptions::GetToken()>
   3586c:	e2507000 	subs	r7, r0, #0
   35870:	0a00002a 	beq	35920 <CKernelOptions::CKernelOptions()+0x164>
   35874:	e1d730d0 	ldrsb	r3, [r7]
   35878:	e3530000 	cmp	r3, #0
   3587c:	0a000008 	beq	358a4 <CKernelOptions::CKernelOptions()+0xe8>
   35880:	e353003d 	cmp	r3, #61	; 0x3d
   35884:	e1a05007 	mov	r5, r7
   35888:	1a000002 	bne	35898 <CKernelOptions::CKernelOptions()+0xdc>
   3588c:	ea000028 	b	35934 <CKernelOptions::CKernelOptions()+0x178>
   35890:	e353003d 	cmp	r3, #61	; 0x3d
   35894:	0a000026 	beq	35934 <CKernelOptions::CKernelOptions()+0x178>
   35898:	e1f530d1 	ldrsb	r3, [r5, #1]!
   3589c:	e3530000 	cmp	r3, #0
   358a0:	1afffffa 	bne	35890 <CKernelOptions::CKernelOptions()+0xd4>
   358a4:	e1a01008 	mov	r1, r8
   358a8:	e1a00007 	mov	r0, r7
   358ac:	ebfffe5a 	bl	3521c <strcmp>
   358b0:	e3500000 	cmp	r0, #0
   358b4:	0affffea 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   358b8:	e1a0100a 	mov	r1, sl
   358bc:	e1a00007 	mov	r0, r7
   358c0:	ebfffe55 	bl	3521c <strcmp>
   358c4:	e3500000 	cmp	r0, #0
   358c8:	13a0b000 	movne	fp, #0
   358cc:	0affffe4 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   358d0:	e59f1208 	ldr	r1, [pc, #520]	; 35ae0 <CKernelOptions::CKernelOptions()+0x324>
   358d4:	e1a00007 	mov	r0, r7
   358d8:	ebfffe4f 	bl	3521c <strcmp>
   358dc:	e2505000 	subs	r5, r0, #0
   358e0:	0a000037 	beq	359c4 <CKernelOptions::CKernelOptions()+0x208>
   358e4:	e59f11f8 	ldr	r1, [pc, #504]	; 35ae4 <CKernelOptions::CKernelOptions()+0x328>
   358e8:	e1a00007 	mov	r0, r7
   358ec:	ebfffe4a 	bl	3521c <strcmp>
   358f0:	e3500000 	cmp	r0, #0
   358f4:	1a000038 	bne	359dc <CKernelOptions::CKernelOptions()+0x220>
   358f8:	e35b0000 	cmp	fp, #0
   358fc:	0affffd8 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35900:	e1db30d0 	ldrsb	r3, [fp]
   35904:	e3530000 	cmp	r3, #0
   35908:	0affffd5 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   3590c:	e1a0000b 	mov	r0, fp
   35910:	ebffff57 	bl	35674 <CKernelOptions::GetDecimal(char*) [clone .part.0]>
   35914:	e3500004 	cmp	r0, #4
   35918:	9584082c 	strls	r0, [r4, #2092]	; 0x82c
   3591c:	eaffffd0 	b	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35920:	e28d0008 	add	r0, sp, #8
   35924:	ebfff5cc 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   35928:	e1a00004 	mov	r0, r4
   3592c:	e28dd014 	add	sp, sp, #20
   35930:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35934:	e3a03000 	mov	r3, #0
   35938:	e1a01008 	mov	r1, r8
   3593c:	e5c53000 	strb	r3, [r5]
   35940:	e1a00007 	mov	r0, r7
   35944:	ebfffe34 	bl	3521c <strcmp>
   35948:	e3500000 	cmp	r0, #0
   3594c:	e285b001 	add	fp, r5, #1
   35950:	1a00000b 	bne	35984 <CKernelOptions::CKernelOptions()+0x1c8>
   35954:	e35b0000 	cmp	fp, #0
   35958:	0affffc1 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   3595c:	e1d530d1 	ldrsb	r3, [r5, #1]
   35960:	e3530000 	cmp	r3, #0
   35964:	0affffbe 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35968:	e1a0000b 	mov	r0, fp
   3596c:	ebffff40 	bl	35674 <CKernelOptions::GetDecimal(char*) [clone .part.0]>
   35970:	e59f3170 	ldr	r3, [pc, #368]	; 35ae8 <CKernelOptions::CKernelOptions()+0x32c>
   35974:	e2402d0a 	sub	r2, r0, #640	; 0x280
   35978:	e1520003 	cmp	r2, r3
   3597c:	95840810 	strls	r0, [r4, #2064]	; 0x810
   35980:	eaffffb7 	b	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35984:	e1a0100a 	mov	r1, sl
   35988:	e1a00007 	mov	r0, r7
   3598c:	ebfffe22 	bl	3521c <strcmp>
   35990:	e3500000 	cmp	r0, #0
   35994:	1affffcd 	bne	358d0 <CKernelOptions::CKernelOptions()+0x114>
   35998:	e35b0000 	cmp	fp, #0
   3599c:	0affffb0 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   359a0:	e1d530d1 	ldrsb	r3, [r5, #1]
   359a4:	e3530000 	cmp	r3, #0
   359a8:	0affffad 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   359ac:	e1a0000b 	mov	r0, fp
   359b0:	ebffff2f 	bl	35674 <CKernelOptions::GetDecimal(char*) [clone .part.0]>
   359b4:	e2403e1e 	sub	r3, r0, #480	; 0x1e0
   359b8:	e3530f96 	cmp	r3, #600	; 0x258
   359bc:	95840814 	strls	r0, [r4, #2068]	; 0x814
   359c0:	eaffffa7 	b	35864 <CKernelOptions::CKernelOptions()+0xa8>
   359c4:	e1a0100b 	mov	r1, fp
   359c8:	e3a02013 	mov	r2, #19
   359cc:	e1a00006 	mov	r0, r6
   359d0:	ebfffe38 	bl	352b8 <strncpy>
   359d4:	e5c4582b 	strb	r5, [r4, #2091]	; 0x82b
   359d8:	eaffffa1 	b	35864 <CKernelOptions::CKernelOptions()+0xa8>
   359dc:	e59f1108 	ldr	r1, [pc, #264]	; 35aec <CKernelOptions::CKernelOptions()+0x330>
   359e0:	e1a00007 	mov	r0, r7
   359e4:	ebfffe0c 	bl	3521c <strcmp>
   359e8:	e2505000 	subs	r5, r0, #0
   359ec:	1a000005 	bne	35a08 <CKernelOptions::CKernelOptions()+0x24c>
   359f0:	e1a0100b 	mov	r1, fp
   359f4:	e3a02002 	mov	r2, #2
   359f8:	e1a00009 	mov	r0, r9
   359fc:	ebfffe2d 	bl	352b8 <strncpy>
   35a00:	e5c45832 	strb	r5, [r4, #2098]	; 0x832
   35a04:	eaffff96 	b	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35a08:	e59f10e0 	ldr	r1, [pc, #224]	; 35af0 <CKernelOptions::CKernelOptions()+0x334>
   35a0c:	e1a00007 	mov	r0, r7
   35a10:	ebfffe01 	bl	3521c <strcmp>
   35a14:	e3500000 	cmp	r0, #0
   35a18:	1a00000b 	bne	35a4c <CKernelOptions::CKernelOptions()+0x290>
   35a1c:	e35b0000 	cmp	fp, #0
   35a20:	0affff8f 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35a24:	e1db30d0 	ldrsb	r3, [fp]
   35a28:	e3530000 	cmp	r3, #0
   35a2c:	0affff8c 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35a30:	e1a0000b 	mov	r0, fp
   35a34:	ebffff0e 	bl	35674 <CKernelOptions::GetDecimal(char*) [clone .part.0]>
   35a38:	e59f30b4 	ldr	r3, [pc, #180]	; 35af4 <CKernelOptions::CKernelOptions()+0x338>
   35a3c:	e24020c8 	sub	r2, r0, #200	; 0xc8
   35a40:	e1520003 	cmp	r2, r3
   35a44:	95840834 	strls	r0, [r4, #2100]	; 0x834
   35a48:	eaffff85 	b	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35a4c:	e59f10a4 	ldr	r1, [pc, #164]	; 35af8 <CKernelOptions::CKernelOptions()+0x33c>
   35a50:	e1a00007 	mov	r0, r7
   35a54:	ebfffdf0 	bl	3521c <strcmp>
   35a58:	e3500000 	cmp	r0, #0
   35a5c:	1a000006 	bne	35a7c <CKernelOptions::CKernelOptions()+0x2c0>
   35a60:	e1a0000b 	mov	r0, fp
   35a64:	e59f1090 	ldr	r1, [pc, #144]	; 35afc <CKernelOptions::CKernelOptions()+0x340>
   35a68:	ebfffdeb 	bl	3521c <strcmp>
   35a6c:	e3500000 	cmp	r0, #0
   35a70:	03a03001 	moveq	r3, #1
   35a74:	05c43838 	strbeq	r3, [r4, #2104]	; 0x838
   35a78:	eaffff79 	b	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35a7c:	e1a00007 	mov	r0, r7
   35a80:	e59f1078 	ldr	r1, [pc, #120]	; 35b00 <CKernelOptions::CKernelOptions()+0x344>
   35a84:	ebfffde4 	bl	3521c <strcmp>
   35a88:	e16f3f1b 	clz	r3, fp
   35a8c:	e3500000 	cmp	r0, #0
   35a90:	e1a032a3 	lsr	r3, r3, #5
   35a94:	13a03001 	movne	r3, #1
   35a98:	e3530000 	cmp	r3, #0
   35a9c:	1affff70 	bne	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35aa0:	e1db30d0 	ldrsb	r3, [fp]
   35aa4:	e3530000 	cmp	r3, #0
   35aa8:	0affff6d 	beq	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35aac:	e1a0000b 	mov	r0, fp
   35ab0:	ebfffeef 	bl	35674 <CKernelOptions::GetDecimal(char*) [clone .part.0]>
   35ab4:	e2403028 	sub	r3, r0, #40	; 0x28
   35ab8:	e3530026 	cmp	r3, #38	; 0x26
   35abc:	9584083c 	strls	r0, [r4, #2108]	; 0x83c
   35ac0:	eaffff67 	b	35864 <CKernelOptions::CKernelOptions()+0xa8>
   35ac4:	0004e4c8 	.word	0x0004e4c8
   35ac8:	0004d790 	.word	0x0004d790
   35acc:	0017af88 	.word	0x0017af88
   35ad0:	0000080c 	.word	0x0000080c
   35ad4:	00050001 	.word	0x00050001
   35ad8:	0004e520 	.word	0x0004e520
   35adc:	0004e4d0 	.word	0x0004e4d0
   35ae0:	0004e4d8 	.word	0x0004e4d8
   35ae4:	0004e4e0 	.word	0x0004e4e0
   35ae8:	0000053c 	.word	0x0000053c
   35aec:	0004e4ec 	.word	0x0004e4ec
   35af0:	0004e4f4 	.word	0x0004e4f4
   35af4:	00001e78 	.word	0x00001e78
   35af8:	0004e504 	.word	0x0004e504
   35afc:	0004e50c 	.word	0x0004e50c
   35b00:	0004e514 	.word	0x0004e514

00035b04 <CKernelOptions::GetOptionValue(char*)>:
   35b04:	e1d030d0 	ldrsb	r3, [r0]
   35b08:	e3530000 	cmp	r3, #0
   35b0c:	1a000003 	bne	35b20 <CKernelOptions::GetOptionValue(char*)+0x1c>
   35b10:	ea000007 	b	35b34 <CKernelOptions::GetOptionValue(char*)+0x30>
   35b14:	e1f030d1 	ldrsb	r3, [r0, #1]!
   35b18:	e3530000 	cmp	r3, #0
   35b1c:	0a000004 	beq	35b34 <CKernelOptions::GetOptionValue(char*)+0x30>
   35b20:	e353003d 	cmp	r3, #61	; 0x3d
   35b24:	1afffffa 	bne	35b14 <CKernelOptions::GetOptionValue(char*)+0x10>
   35b28:	e3a02000 	mov	r2, #0
   35b2c:	e2803001 	add	r3, r0, #1
   35b30:	e5c02000 	strb	r2, [r0]
   35b34:	e1a00003 	mov	r0, r3
   35b38:	e12fff1e 	bx	lr

00035b3c <CKernelOptions::GetDecimal(char*)>:
   35b3c:	e2503000 	subs	r3, r0, #0
   35b40:	0a000003 	beq	35b54 <CKernelOptions::GetDecimal(char*)+0x18>
   35b44:	e1d330d0 	ldrsb	r3, [r3]
   35b48:	e3530000 	cmp	r3, #0
   35b4c:	0a000000 	beq	35b54 <CKernelOptions::GetDecimal(char*)+0x18>
   35b50:	eafffec7 	b	35674 <CKernelOptions::GetDecimal(char*) [clone .part.0]>
   35b54:	e3e00000 	mvn	r0, #0
   35b58:	e12fff1e 	bx	lr

00035b5c <CPageTable::CPageTable()>:
   35b5c:	e3a01000 	mov	r1, #0
   35b60:	e3a02709 	mov	r2, #2359296	; 0x240000
   35b64:	e1a0c001 	mov	ip, r1
   35b68:	e1a03002 	mov	r3, r2
   35b6c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   35b70:	e59f6084 	ldr	r6, [pc, #132]	; 35bfc <CPageTable::CPageTable()+0xa0>
   35b74:	e59f5084 	ldr	r5, [pc, #132]	; 35c00 <CPageTable::CPageTable()+0xa4>
   35b78:	e59f4084 	ldr	r4, [pc, #132]	; 35c04 <CPageTable::CPageTable()+0xa8>
   35b7c:	e5801000 	str	r1, [r0]
   35b80:	e5802004 	str	r2, [r0, #4]
   35b84:	e3a0e004 	mov	lr, #4
   35b88:	e5d32002 	ldrb	r2, [r3, #2]
   35b8c:	e5d31000 	ldrb	r1, [r3]
   35b90:	e3822001 	orr	r2, r2, #1
   35b94:	e20220f1 	and	r2, r2, #241	; 0xf1
   35b98:	e20110e0 	and	r1, r1, #224	; 0xe0
   35b9c:	e5c32002 	strb	r2, [r3, #2]
   35ba0:	e3811006 	orr	r1, r1, #6
   35ba4:	e5c31000 	strb	r1, [r3]
   35ba8:	e1d320b2 	ldrh	r2, [r3, #2]
   35bac:	e1d370b0 	ldrh	r7, [r3]
   35bb0:	e1c21005 	bic	r1, r2, r5
   35bb4:	e00c2006 	and	r2, ip, r6
   35bb8:	e1812e12 	orr	r2, r1, r2, lsl lr
   35bbc:	e3c71e1e 	bic	r1, r7, #480	; 0x1e0
   35bc0:	e15c0004 	cmp	ip, r4
   35bc4:	e1c310b0 	strh	r1, [r3]
   35bc8:	e1c320b2 	strh	r2, [r3, #2]
   35bcc:	85d32000 	ldrbhi	r2, [r3]
   35bd0:	e28cc001 	add	ip, ip, #1
   35bd4:	83822010 	orrhi	r2, r2, #16
   35bd8:	85c32000 	strbhi	r2, [r3]
   35bdc:	e35c0a01 	cmp	ip, #4096	; 0x1000
   35be0:	e5c3e001 	strb	lr, [r3, #1]
   35be4:	e2833004 	add	r3, r3, #4
   35be8:	1affffe5 	bne	35b84 <CPageTable::CPageTable()+0x28>
   35bec:	e3a03000 	mov	r3, #0
   35bf0:	ee073f1a 	mcr	15, 0, r3, cr7, cr10, {0}
   35bf4:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   35bf8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   35bfc:	00000fff 	.word	0x00000fff
   35c00:	0000fff0 	.word	0x0000fff0
   35c04:	000001ff 	.word	0x000001ff

00035c08 <CPageTable::CPageTable(unsigned int)>:
   35c08:	e3a03001 	mov	r3, #1
   35c0c:	e92d4070 	push	{r4, r5, r6, lr}
   35c10:	e5803000 	str	r3, [r0]
   35c14:	e1a05000 	mov	r5, r0
   35c18:	e1a04001 	mov	r4, r1
   35c1c:	eb0016d6 	bl	3b77c <palloc>
   35c20:	e3500000 	cmp	r0, #0
   35c24:	e5850004 	str	r0, [r5, #4]
   35c28:	0a000036 	beq	35d08 <CPageTable::CPageTable(unsigned int)+0x100>
   35c2c:	e1a03a00 	lsl	r3, r0, #20
   35c30:	e1a03a23 	lsr	r3, r3, #20
   35c34:	e3530000 	cmp	r3, #0
   35c38:	1a00002c 	bne	35cf0 <CPageTable::CPageTable(unsigned int)+0xe8>
   35c3c:	e3a03000 	mov	r3, #0
   35c40:	e59f60d8 	ldr	r6, [pc, #216]	; 35d20 <CPageTable::CPageTable(unsigned int)+0x118>
   35c44:	ea000009 	b	35c70 <CPageTable::CPageTable(unsigned int)+0x68>
   35c48:	e6ef1072 	uxtb	r1, r2
   35c4c:	e5d02002 	ldrb	r2, [r0, #2]
   35c50:	e3c11008 	bic	r1, r1, #8
   35c54:	e3822001 	orr	r2, r2, #1
   35c58:	e5c01000 	strb	r1, [r0]
   35c5c:	e5c02002 	strb	r2, [r0, #2]
   35c60:	e2833601 	add	r3, r3, #1048576	; 0x100000
   35c64:	e3530202 	cmp	r3, #536870912	; 0x20000000
   35c68:	e2800004 	add	r0, r0, #4
   35c6c:	0a00001a 	beq	35cdc <CPageTable::CPageTable(unsigned int)+0xd4>
   35c70:	e3a0e00e 	mov	lr, #14
   35c74:	e3a0c004 	mov	ip, #4
   35c78:	e1a02823 	lsr	r2, r3, #16
   35c7c:	e20220f0 	and	r2, r2, #240	; 0xf0
   35c80:	e1a01c23 	lsr	r1, r3, #24
   35c84:	e1530006 	cmp	r3, r6
   35c88:	e5c02002 	strb	r2, [r0, #2]
   35c8c:	e5c0e000 	strb	lr, [r0]
   35c90:	e5c0c001 	strb	ip, [r0, #1]
   35c94:	e5c01003 	strb	r1, [r0, #3]
   35c98:	3afffff0 	bcc	35c60 <CPageTable::CPageTable(unsigned int)+0x58>
   35c9c:	e6ef207e 	uxtb	r2, lr
   35ca0:	e3822010 	orr	r2, r2, #16
   35ca4:	e1530004 	cmp	r3, r4
   35ca8:	e5c02000 	strb	r2, [r0]
   35cac:	2affffe5 	bcs	35c48 <CPageTable::CPageTable(unsigned int)+0x40>
   35cb0:	e3530501 	cmp	r3, #4194304	; 0x400000
   35cb4:	1affffe9 	bne	35c60 <CPageTable::CPageTable(unsigned int)+0x58>
   35cb8:	e5d02000 	ldrb	r2, [r0]
   35cbc:	e5d03002 	ldrb	r3, [r0, #2]
   35cc0:	e20220f3 	and	r2, r2, #243	; 0xf3
   35cc4:	e3833001 	orr	r3, r3, #1
   35cc8:	e5c03002 	strb	r3, [r0, #2]
   35ccc:	e5c02000 	strb	r2, [r0]
   35cd0:	e3a03605 	mov	r3, #5242880	; 0x500000
   35cd4:	e2800004 	add	r0, r0, #4
   35cd8:	eaffffe4 	b	35c70 <CPageTable::CPageTable(unsigned int)+0x68>
   35cdc:	e3a03000 	mov	r3, #0
   35ce0:	ee073f1a 	mcr	15, 0, r3, cr7, cr10, {0}
   35ce4:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   35ce8:	e1a00005 	mov	r0, r5
   35cec:	e8bd8070 	pop	{r4, r5, r6, pc}
   35cf0:	e59f002c 	ldr	r0, [pc, #44]	; 35d24 <CPageTable::CPageTable(unsigned int)+0x11c>
   35cf4:	e3a02051 	mov	r2, #81	; 0x51
   35cf8:	e59f1028 	ldr	r1, [pc, #40]	; 35d28 <CPageTable::CPageTable(unsigned int)+0x120>
   35cfc:	eb00049f 	bl	36f80 <assertion_failed>
   35d00:	e5950004 	ldr	r0, [r5, #4]
   35d04:	eaffffcc 	b	35c3c <CPageTable::CPageTable(unsigned int)+0x34>
   35d08:	e59f001c 	ldr	r0, [pc, #28]	; 35d2c <CPageTable::CPageTable(unsigned int)+0x124>
   35d0c:	e3a02050 	mov	r2, #80	; 0x50
   35d10:	e59f1010 	ldr	r1, [pc, #16]	; 35d28 <CPageTable::CPageTable(unsigned int)+0x120>
   35d14:	eb000499 	bl	36f80 <assertion_failed>
   35d18:	e5950004 	ldr	r0, [r5, #4]
   35d1c:	eaffffc2 	b	35c2c <CPageTable::CPageTable(unsigned int)+0x24>
   35d20:	0003c0f8 	.word	0x0003c0f8
   35d24:	0004e548 	.word	0x0004e548
   35d28:	0004e528 	.word	0x0004e528
   35d2c:	0004e538 	.word	0x0004e538

00035d30 <CPageTable::~CPageTable()>:
   35d30:	e5903000 	ldr	r3, [r0]
   35d34:	e92d4010 	push	{r4, lr}
   35d38:	e3530000 	cmp	r3, #0
   35d3c:	e1a04000 	mov	r4, r0
   35d40:	0a000001 	beq	35d4c <CPageTable::~CPageTable()+0x1c>
   35d44:	e5900004 	ldr	r0, [r0, #4]
   35d48:	eb0016c4 	bl	3b860 <pfree>
   35d4c:	e1a00004 	mov	r0, r4
   35d50:	e8bd8010 	pop	{r4, pc}

00035d54 <CPageTable::GetBaseAddress() const>:
   35d54:	e5900004 	ldr	r0, [r0, #4]
   35d58:	e3800001 	orr	r0, r0, #1
   35d5c:	e12fff1e 	bx	lr

00035d60 <CScreenDevice::~CScreenDevice()>:
   35d60:	e590200c 	ldr	r2, [r0, #12]
   35d64:	e59f3068 	ldr	r3, [pc, #104]	; 35dd4 <CScreenDevice::~CScreenDevice()+0x74>
   35d68:	e3520000 	cmp	r2, #0
   35d6c:	e92d4070 	push	{r4, r5, r6, lr}
   35d70:	e1a04000 	mov	r4, r0
   35d74:	e5803000 	str	r3, [r0]
   35d78:	0a000003 	beq	35d8c <CScreenDevice::~CScreenDevice()+0x2c>
   35d7c:	e5900018 	ldr	r0, [r0, #24]
   35d80:	e3500000 	cmp	r0, #0
   35d84:	0a000000 	beq	35d8c <CScreenDevice::~CScreenDevice()+0x2c>
   35d88:	ebfff965 	bl	34324 <operator delete[](void*)>
   35d8c:	e3a03000 	mov	r3, #0
   35d90:	e5945010 	ldr	r5, [r4, #16]
   35d94:	e5843018 	str	r3, [r4, #24]
   35d98:	e1550003 	cmp	r5, r3
   35d9c:	0a000004 	beq	35db4 <CScreenDevice::~CScreenDevice()+0x54>
   35da0:	e1a00005 	mov	r0, r5
   35da4:	eb0017dd 	bl	3bd20 <CBcmFrameBuffer::~CBcmFrameBuffer()>
   35da8:	e1a00005 	mov	r0, r5
   35dac:	e3a01024 	mov	r1, #36	; 0x24
   35db0:	ebfff95c 	bl	34328 <operator delete(void*, unsigned int)>
   35db4:	e3a03000 	mov	r3, #0
   35db8:	e2840014 	add	r0, r4, #20
   35dbc:	e5843010 	str	r3, [r4, #16]
   35dc0:	eb000495 	bl	3701c <CCharGenerator::~CCharGenerator()>
   35dc4:	e1a00004 	mov	r0, r4
   35dc8:	ebfffe19 	bl	35634 <CDevice::~CDevice()>
   35dcc:	e1a00004 	mov	r0, r4
   35dd0:	e8bd8070 	pop	{r4, r5, r6, pc}
   35dd4:	0004e570 	.word	0x0004e570

00035dd8 <CScreenDevice::~CScreenDevice()>:
   35dd8:	e92d4010 	push	{r4, lr}
   35ddc:	e1a04000 	mov	r4, r0
   35de0:	ebffffde 	bl	35d60 <CScreenDevice::~CScreenDevice()>
   35de4:	e1a00004 	mov	r0, r4
   35de8:	e3a01060 	mov	r1, #96	; 0x60
   35dec:	ebfff94d 	bl	34328 <operator delete(void*, unsigned int)>
   35df0:	e1a00004 	mov	r0, r4
   35df4:	e8bd8010 	pop	{r4, pc}

00035df8 <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned char) [clone .part.2]>:
   35df8:	e590c028 	ldr	ip, [r0, #40]	; 0x28
   35dfc:	e15c0002 	cmp	ip, r2
   35e00:	8590c020 	ldrhi	ip, [r0, #32]
   35e04:	85900018 	ldrhi	r0, [r0, #24]
   35e08:	8022029c 	mlahi	r2, ip, r2, r0
   35e0c:	87c23001 	strbhi	r3, [r2, r1]
   35e10:	e12fff1e 	bx	lr

00035e14 <CScreenDevice::InvertCursor() [clone .part.6]>:
   35e14:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   35e18:	e2806014 	add	r6, r0, #20
   35e1c:	e1a04000 	mov	r4, r0
   35e20:	e1a00006 	mov	r0, r6
   35e24:	eb000481 	bl	37030 <CCharGenerator::GetUnderline() const>
   35e28:	e1a07000 	mov	r7, r0
   35e2c:	e1a00006 	mov	r0, r6
   35e30:	eb00047c 	bl	37028 <CCharGenerator::GetCharHeight() const>
   35e34:	e1500007 	cmp	r0, r7
   35e38:	98bd81f0 	popls	{r4, r5, r6, r7, r8, pc}
   35e3c:	e3a05000 	mov	r5, #0
   35e40:	ea000013 	b	35e94 <CScreenDevice::InvertCursor() [clone .part.6]+0x80>
   35e44:	e594103c 	ldr	r1, [r4, #60]	; 0x3c
   35e48:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   35e4c:	e0851001 	add	r1, r5, r1
   35e50:	e1510003 	cmp	r1, r3
   35e54:	2a00000d 	bcs	35e90 <CScreenDevice::InvertCursor() [clone .part.6]+0x7c>
   35e58:	e5942040 	ldr	r2, [r4, #64]	; 0x40
   35e5c:	e5943028 	ldr	r3, [r4, #40]	; 0x28
   35e60:	e0872002 	add	r2, r7, r2
   35e64:	e1520003 	cmp	r2, r3
   35e68:	2a000005 	bcs	35e84 <CScreenDevice::InvertCursor() [clone .part.6]+0x70>
   35e6c:	e5943020 	ldr	r3, [r4, #32]
   35e70:	e5940018 	ldr	r0, [r4, #24]
   35e74:	e0230293 	mla	r3, r3, r2, r0
   35e78:	e7d33001 	ldrb	r3, [r3, r1]
   35e7c:	e3530000 	cmp	r3, #0
   35e80:	1a000009 	bne	35eac <CScreenDevice::InvertCursor() [clone .part.6]+0x98>
   35e84:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
   35e88:	e1a00004 	mov	r0, r4
   35e8c:	ebffffd9 	bl	35df8 <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned char) [clone .part.2]>
   35e90:	e2855001 	add	r5, r5, #1
   35e94:	e1a00006 	mov	r0, r6
   35e98:	eb000460 	bl	37020 <CCharGenerator::GetCharWidth() const>
   35e9c:	e1500005 	cmp	r0, r5
   35ea0:	8affffe7 	bhi	35e44 <CScreenDevice::InvertCursor() [clone .part.6]+0x30>
   35ea4:	e2877001 	add	r7, r7, #1
   35ea8:	eaffffdf 	b	35e2c <CScreenDevice::InvertCursor() [clone .part.6]+0x18>
   35eac:	e3a03000 	mov	r3, #0
   35eb0:	e1a00004 	mov	r0, r4
   35eb4:	ebffffcf 	bl	35df8 <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned char) [clone .part.2]>
   35eb8:	eafffff4 	b	35e90 <CScreenDevice::InvertCursor() [clone .part.6]+0x7c>

00035ebc <CScreenDevice::CScreenDevice(unsigned int, unsigned int, int)>:
   35ebc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   35ec0:	e1a04000 	mov	r4, r0
   35ec4:	e3a05000 	mov	r5, #0
   35ec8:	e1a06003 	mov	r6, r3
   35ecc:	e1a08001 	mov	r8, r1
   35ed0:	e1a07002 	mov	r7, r2
   35ed4:	ebfffde2 	bl	35664 <CDevice::CDevice()>
   35ed8:	e59f004c 	ldr	r0, [pc, #76]	; 35f2c <CScreenDevice::CScreenDevice(unsigned int, unsigned int, int)+0x70>
   35edc:	e5848004 	str	r8, [r4, #4]
   35ee0:	e5840000 	str	r0, [r4]
   35ee4:	e5847008 	str	r7, [r4, #8]
   35ee8:	e584600c 	str	r6, [r4, #12]
   35eec:	e5845010 	str	r5, [r4, #16]
   35ef0:	e2840014 	add	r0, r4, #20
   35ef4:	eb000445 	bl	37010 <CCharGenerator::CCharGenerator()>
   35ef8:	e3a03001 	mov	r3, #1
   35efc:	e5845018 	str	r5, [r4, #24]
   35f00:	e5845030 	str	r5, [r4, #48]	; 0x30
   35f04:	e5845034 	str	r5, [r4, #52]	; 0x34
   35f08:	e584503c 	str	r5, [r4, #60]	; 0x3c
   35f0c:	e5845040 	str	r5, [r4, #64]	; 0x40
   35f10:	e584504c 	str	r5, [r4, #76]	; 0x4c
   35f14:	e5845058 	str	r5, [r4, #88]	; 0x58
   35f18:	e5843044 	str	r3, [r4, #68]	; 0x44
   35f1c:	e5c43048 	strb	r3, [r4, #72]	; 0x48
   35f20:	e584305c 	str	r3, [r4, #92]	; 0x5c
   35f24:	e1a00004 	mov	r0, r4
   35f28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   35f2c:	0004e570 	.word	0x0004e570

00035f30 <CScreenDevice::GetWidth() const>:
   35f30:	e5900024 	ldr	r0, [r0, #36]	; 0x24
   35f34:	e12fff1e 	bx	lr

00035f38 <CScreenDevice::GetDepth() const>:
   35f38:	e3a00001 	mov	r0, #1
   35f3c:	e12fff1e 	bx	lr

00035f40 <CScreenDevice::GetHeight() const>:
   35f40:	e5900028 	ldr	r0, [r0, #40]	; 0x28
   35f44:	e12fff1e 	bx	lr

00035f48 <CScreenDevice::GetBuffer() const>:
   35f48:	e5900018 	ldr	r0, [r0, #24]
   35f4c:	e12fff1e 	bx	lr

00035f50 <CScreenDevice::SetPalette(unsigned char, unsigned short)>:
   35f50:	e5900010 	ldr	r0, [r0, #16]
   35f54:	ea001778 	b	3bd3c <CBcmFrameBuffer::SetPalette(unsigned char, unsigned short)>

00035f58 <CScreenDevice::SetPalette(unsigned char, unsigned int)>:
   35f58:	e5900010 	ldr	r0, [r0, #16]
   35f5c:	ea001785 	b	3bd78 <CBcmFrameBuffer::SetPalette32(unsigned char, unsigned int)>

00035f60 <CScreenDevice::UpdatePalette()>:
   35f60:	e5900010 	ldr	r0, [r0, #16]
   35f64:	ea0017c9 	b	3be90 <CBcmFrameBuffer::UpdatePalette()>

00035f68 <CScreenDevice::GetColumns() const>:
   35f68:	e92d4010 	push	{r4, lr}
   35f6c:	e2800014 	add	r0, r0, #20
   35f70:	e5904010 	ldr	r4, [r0, #16]
   35f74:	eb000429 	bl	37020 <CCharGenerator::GetCharWidth() const>
   35f78:	e1a01000 	mov	r1, r0
   35f7c:	e1a00004 	mov	r0, r4
   35f80:	ebfff7ce 	bl	33ec0 <__aeabi_uidiv>
   35f84:	e8bd8010 	pop	{r4, pc}

00035f88 <CScreenDevice::GetRows() const>:
   35f88:	e92d4010 	push	{r4, lr}
   35f8c:	e2800014 	add	r0, r0, #20
   35f90:	e5904018 	ldr	r4, [r0, #24]
   35f94:	eb000423 	bl	37028 <CCharGenerator::GetCharHeight() const>
   35f98:	e1a01000 	mov	r1, r0
   35f9c:	e1a00004 	mov	r0, r4
   35fa0:	ebfff7c6 	bl	33ec0 <__aeabi_uidiv>
   35fa4:	e8bd8010 	pop	{r4, pc}

00035fa8 <CScreenDevice::GetStatus()>:
   35fa8:	e92d4010 	push	{r4, lr}
   35fac:	e591c01c 	ldr	ip, [r1, #28]
   35fb0:	e591e018 	ldr	lr, [r1, #24]
   35fb4:	e5912030 	ldr	r2, [r1, #48]	; 0x30
   35fb8:	e580e000 	str	lr, [r0]
   35fbc:	e580c004 	str	ip, [r0, #4]
   35fc0:	e591e034 	ldr	lr, [r1, #52]	; 0x34
   35fc4:	e591c038 	ldr	ip, [r1, #56]	; 0x38
   35fc8:	e5802008 	str	r2, [r0, #8]
   35fcc:	e591203c 	ldr	r2, [r1, #60]	; 0x3c
   35fd0:	e580e00c 	str	lr, [r0, #12]
   35fd4:	e580c010 	str	ip, [r0, #16]
   35fd8:	e591e040 	ldr	lr, [r1, #64]	; 0x40
   35fdc:	e591c044 	ldr	ip, [r1, #68]	; 0x44
   35fe0:	e5802014 	str	r2, [r0, #20]
   35fe4:	e5d12048 	ldrb	r2, [r1, #72]	; 0x48
   35fe8:	e580e018 	str	lr, [r0, #24]
   35fec:	e591404c 	ldr	r4, [r1, #76]	; 0x4c
   35ff0:	e580c01c 	str	ip, [r0, #28]
   35ff4:	e591e050 	ldr	lr, [r1, #80]	; 0x50
   35ff8:	e5c02020 	strb	r2, [r0, #32]
   35ffc:	e591c054 	ldr	ip, [r1, #84]	; 0x54
   36000:	e5912058 	ldr	r2, [r1, #88]	; 0x58
   36004:	e5804024 	str	r4, [r0, #36]	; 0x24
   36008:	e580e028 	str	lr, [r0, #40]	; 0x28
   3600c:	e580c02c 	str	ip, [r0, #44]	; 0x2c
   36010:	e5802030 	str	r2, [r0, #48]	; 0x30
   36014:	e8bd8010 	pop	{r4, pc}

00036018 <CScreenDevice::SetXY(int, int)>:
   36018:	e580103c 	str	r1, [r0, #60]	; 0x3c
   3601c:	e5802040 	str	r2, [r0, #64]	; 0x40
   36020:	e12fff1e 	bx	lr

00036024 <CScreenDevice::SetStatus(TScreenStatus)>:
   36024:	e24dd010 	sub	sp, sp, #16
   36028:	e92d4010 	push	{r4, lr}
   3602c:	e28dc00c 	add	ip, sp, #12
   36030:	e88c000e 	stm	ip, {r1, r2, r3}
   36034:	e590201c 	ldr	r2, [r0, #28]
   36038:	e59d3010 	ldr	r3, [sp, #16]
   3603c:	e1520003 	cmp	r2, r3
   36040:	0a000003 	beq	36054 <CScreenDevice::SetStatus(TScreenStatus)+0x30>
   36044:	e3a00000 	mov	r0, #0
   36048:	e8bd4010 	pop	{r4, lr}
   3604c:	e28dd010 	add	sp, sp, #16
   36050:	e12fff1e 	bx	lr
   36054:	e5901020 	ldr	r1, [r0, #32]
   36058:	e5903024 	ldr	r3, [r0, #36]	; 0x24
   3605c:	e1510003 	cmp	r1, r3
   36060:	1afffff7 	bne	36044 <CScreenDevice::SetStatus(TScreenStatus)+0x20>
   36064:	e1a04000 	mov	r4, r0
   36068:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
   3606c:	e3500000 	cmp	r0, #0
   36070:	1a000021 	bne	360fc <CScreenDevice::SetStatus(TScreenStatus)+0xd8>
   36074:	e5943058 	ldr	r3, [r4, #88]	; 0x58
   36078:	e3530000 	cmp	r3, #0
   3607c:	1afffff0 	bne	36044 <CScreenDevice::SetStatus(TScreenStatus)+0x20>
   36080:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
   36084:	e3530000 	cmp	r3, #0
   36088:	1affffed 	bne	36044 <CScreenDevice::SetStatus(TScreenStatus)+0x20>
   3608c:	e59d100c 	ldr	r1, [sp, #12]
   36090:	e5940018 	ldr	r0, [r4, #24]
   36094:	ebfffd4f 	bl	355d8 <memcpy>
   36098:	e1cd01d8 	ldrd	r0, [sp, #24]
   3609c:	e594305c 	ldr	r3, [r4, #92]	; 0x5c
   360a0:	e59dc014 	ldr	ip, [sp, #20]
   360a4:	e59d2020 	ldr	r2, [sp, #32]
   360a8:	e3530000 	cmp	r3, #0
   360ac:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   360b0:	e584c030 	str	ip, [r4, #48]	; 0x30
   360b4:	e5840034 	str	r0, [r4, #52]	; 0x34
   360b8:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
   360bc:	e5dd002c 	ldrb	r0, [sp, #44]	; 0x2c
   360c0:	e5841038 	str	r1, [r4, #56]	; 0x38
   360c4:	e584203c 	str	r2, [r4, #60]	; 0x3c
   360c8:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
   360cc:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
   360d0:	e5843040 	str	r3, [r4, #64]	; 0x40
   360d4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
   360d8:	e584c044 	str	ip, [r4, #68]	; 0x44
   360dc:	e5c40048 	strb	r0, [r4, #72]	; 0x48
   360e0:	e584104c 	str	r1, [r4, #76]	; 0x4c
   360e4:	e1c425f0 	strd	r2, [r4, #80]	; 0x50
   360e8:	1a000010 	bne	36130 <CScreenDevice::SetStatus(TScreenStatus)+0x10c>
   360ec:	e3a03000 	mov	r3, #0
   360f0:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   360f4:	e3a00001 	mov	r0, #1
   360f8:	eaffffd2 	b	36048 <CScreenDevice::SetStatus(TScreenStatus)+0x24>
   360fc:	ebfff891 	bl	34348 <EnterCritical>
   36100:	e5943058 	ldr	r3, [r4, #88]	; 0x58
   36104:	e3530000 	cmp	r3, #0
   36108:	1a000003 	bne	3611c <CScreenDevice::SetStatus(TScreenStatus)+0xf8>
   3610c:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
   36110:	e3530000 	cmp	r3, #0
   36114:	0594201c 	ldreq	r2, [r4, #28]
   36118:	0affffdb 	beq	3608c <CScreenDevice::SetStatus(TScreenStatus)+0x68>
   3611c:	e594305c 	ldr	r3, [r4, #92]	; 0x5c
   36120:	e3530000 	cmp	r3, #0
   36124:	0affffc6 	beq	36044 <CScreenDevice::SetStatus(TScreenStatus)+0x20>
   36128:	ebfff8b2 	bl	343f8 <LeaveCritical>
   3612c:	eaffffc4 	b	36044 <CScreenDevice::SetStatus(TScreenStatus)+0x20>
   36130:	ebfff8b0 	bl	343f8 <LeaveCritical>
   36134:	eaffffec 	b	360ec <CScreenDevice::SetStatus(TScreenStatus)+0xc8>

00036138 <CScreenDevice::CarriageReturn()>:
   36138:	e3a03000 	mov	r3, #0
   3613c:	e580303c 	str	r3, [r0, #60]	; 0x3c
   36140:	e12fff1e 	bx	lr

00036144 <CScreenDevice::CursorHome()>:
   36144:	e3a02000 	mov	r2, #0
   36148:	e5903034 	ldr	r3, [r0, #52]	; 0x34
   3614c:	e1c023fc 	strd	r2, [r0, #60]	; 0x3c
   36150:	e12fff1e 	bx	lr

00036154 <CScreenDevice::CursorLeft()>:
   36154:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
   36158:	e92d4070 	push	{r4, r5, r6, lr}
   3615c:	e3530000 	cmp	r3, #0
   36160:	e1a04000 	mov	r4, r0
   36164:	1a00000f 	bne	361a8 <CScreenDevice::CursorLeft()+0x54>
   36168:	e5902040 	ldr	r2, [r0, #64]	; 0x40
   3616c:	e5903034 	ldr	r3, [r0, #52]	; 0x34
   36170:	e1520003 	cmp	r2, r3
   36174:	98bd8070 	popls	{r4, r5, r6, pc}
   36178:	e2806014 	add	r6, r0, #20
   3617c:	e1a00006 	mov	r0, r6
   36180:	e5945024 	ldr	r5, [r4, #36]	; 0x24
   36184:	eb0003a5 	bl	37020 <CCharGenerator::GetCharWidth() const>
   36188:	e0450000 	sub	r0, r5, r0
   3618c:	e584003c 	str	r0, [r4, #60]	; 0x3c
   36190:	e1a00006 	mov	r0, r6
   36194:	eb0003a3 	bl	37028 <CCharGenerator::GetCharHeight() const>
   36198:	e5943040 	ldr	r3, [r4, #64]	; 0x40
   3619c:	e0430000 	sub	r0, r3, r0
   361a0:	e5840040 	str	r0, [r4, #64]	; 0x40
   361a4:	e8bd8070 	pop	{r4, r5, r6, pc}
   361a8:	e2800014 	add	r0, r0, #20
   361ac:	eb00039b 	bl	37020 <CCharGenerator::GetCharWidth() const>
   361b0:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
   361b4:	e0430000 	sub	r0, r3, r0
   361b8:	e584003c 	str	r0, [r4, #60]	; 0x3c
   361bc:	e8bd8070 	pop	{r4, r5, r6, pc}

000361c0 <CScreenDevice::CursorMove(unsigned int, unsigned int)>:
   361c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   361c4:	e2806014 	add	r6, r0, #20
   361c8:	e1a04002 	mov	r4, r2
   361cc:	e1a05000 	mov	r5, r0
   361d0:	e1a00006 	mov	r0, r6
   361d4:	e1a07001 	mov	r7, r1
   361d8:	eb000390 	bl	37020 <CCharGenerator::GetCharWidth() const>
   361dc:	e2444001 	sub	r4, r4, #1
   361e0:	e0040490 	mul	r4, r0, r4
   361e4:	e1a00006 	mov	r0, r6
   361e8:	eb00038e 	bl	37028 <CCharGenerator::GetCharHeight() const>
   361ec:	e5953024 	ldr	r3, [r5, #36]	; 0x24
   361f0:	e1530004 	cmp	r3, r4
   361f4:	98bd81f0 	popls	{r4, r5, r6, r7, r8, pc}
   361f8:	e2477001 	sub	r7, r7, #1
   361fc:	e0000790 	mul	r0, r0, r7
   36200:	e5953034 	ldr	r3, [r5, #52]	; 0x34
   36204:	e1530000 	cmp	r3, r0
   36208:	88bd81f0 	pophi	{r4, r5, r6, r7, r8, pc}
   3620c:	e5953038 	ldr	r3, [r5, #56]	; 0x38
   36210:	e1530000 	cmp	r3, r0
   36214:	8585403c 	strhi	r4, [r5, #60]	; 0x3c
   36218:	85850040 	strhi	r0, [r5, #64]	; 0x40
   3621c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00036220 <CScreenDevice::CursorUp()>:
   36220:	e5902040 	ldr	r2, [r0, #64]	; 0x40
   36224:	e5903034 	ldr	r3, [r0, #52]	; 0x34
   36228:	e1520003 	cmp	r2, r3
   3622c:	912fff1e 	bxls	lr
   36230:	e92d4010 	push	{r4, lr}
   36234:	e1a04000 	mov	r4, r0
   36238:	e2800014 	add	r0, r0, #20
   3623c:	eb000379 	bl	37028 <CCharGenerator::GetCharHeight() const>
   36240:	e5943040 	ldr	r3, [r4, #64]	; 0x40
   36244:	e0430000 	sub	r0, r3, r0
   36248:	e5840040 	str	r0, [r4, #64]	; 0x40
   3624c:	e8bd8010 	pop	{r4, pc}

00036250 <CScreenDevice::DeleteChars(unsigned int)>:
   36250:	e12fff1e 	bx	lr

00036254 <CScreenDevice::DeleteLines(unsigned int)>:
   36254:	e12fff1e 	bx	lr

00036258 <CScreenDevice::InsertLines(unsigned int)>:
   36258:	e12fff1e 	bx	lr

0003625c <CScreenDevice::InsertMode(int)>:
   3625c:	e580104c 	str	r1, [r0, #76]	; 0x4c
   36260:	e12fff1e 	bx	lr

00036264 <CScreenDevice::ReverseScroll()>:
   36264:	e12fff1e 	bx	lr

00036268 <CScreenDevice::SetCursorMode(int)>:
   36268:	e5801044 	str	r1, [r0, #68]	; 0x44
   3626c:	e12fff1e 	bx	lr

00036270 <CScreenDevice::SetScrollRegion(unsigned int, unsigned int)>:
   36270:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   36274:	e2807014 	add	r7, r0, #20
   36278:	e1a05000 	mov	r5, r0
   3627c:	e1a04001 	mov	r4, r1
   36280:	e1a00007 	mov	r0, r7
   36284:	e1a06002 	mov	r6, r2
   36288:	eb000366 	bl	37028 <CCharGenerator::GetCharHeight() const>
   3628c:	e2444001 	sub	r4, r4, #1
   36290:	e0040490 	mul	r4, r0, r4
   36294:	e1a00007 	mov	r0, r7
   36298:	eb000362 	bl	37028 <CCharGenerator::GetCharHeight() const>
   3629c:	e0000096 	mul	r0, r6, r0
   362a0:	e595202c 	ldr	r2, [r5, #44]	; 0x2c
   362a4:	e1520004 	cmp	r2, r4
   362a8:	93a03000 	movls	r3, #0
   362ac:	83a03001 	movhi	r3, #1
   362b0:	e3500000 	cmp	r0, #0
   362b4:	03a03000 	moveq	r3, #0
   362b8:	e1520000 	cmp	r2, r0
   362bc:	33a03000 	movcc	r3, #0
   362c0:	22033001 	andcs	r3, r3, #1
   362c4:	e1540000 	cmp	r4, r0
   362c8:	23a03000 	movcs	r3, #0
   362cc:	32033001 	andcc	r3, r3, #1
   362d0:	e3530000 	cmp	r3, #0
   362d4:	e3a03000 	mov	r3, #0
   362d8:	05954034 	ldreq	r4, [r5, #52]	; 0x34
   362dc:	15854034 	strne	r4, [r5, #52]	; 0x34
   362e0:	15850038 	strne	r0, [r5, #56]	; 0x38
   362e4:	e5854040 	str	r4, [r5, #64]	; 0x40
   362e8:	e585303c 	str	r3, [r5, #60]	; 0x3c
   362ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000362f0 <CScreenDevice::SetStandoutMode(unsigned int)>:
   362f0:	e351001b 	cmp	r1, #27
   362f4:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
   362f8:	ea00001d 	b	36374 <CScreenDevice::SetStandoutMode(unsigned int)+0x84>
   362fc:	00036384 	.word	0x00036384
   36300:	00036378 	.word	0x00036378
   36304:	0003636c 	.word	0x0003636c
   36308:	00036374 	.word	0x00036374
   3630c:	00036374 	.word	0x00036374
   36310:	00036374 	.word	0x00036374
   36314:	00036374 	.word	0x00036374
   36318:	00036374 	.word	0x00036374
   3631c:	00036374 	.word	0x00036374
   36320:	00036374 	.word	0x00036374
   36324:	00036374 	.word	0x00036374
   36328:	00036374 	.word	0x00036374
   3632c:	00036374 	.word	0x00036374
   36330:	00036374 	.word	0x00036374
   36334:	00036374 	.word	0x00036374
   36338:	00036374 	.word	0x00036374
   3633c:	00036374 	.word	0x00036374
   36340:	00036374 	.word	0x00036374
   36344:	00036374 	.word	0x00036374
   36348:	00036374 	.word	0x00036374
   3634c:	00036374 	.word	0x00036374
   36350:	00036374 	.word	0x00036374
   36354:	00036374 	.word	0x00036374
   36358:	00036374 	.word	0x00036374
   3635c:	00036374 	.word	0x00036374
   36360:	00036374 	.word	0x00036374
   36364:	00036374 	.word	0x00036374
   36368:	00036384 	.word	0x00036384
   3636c:	e3a03003 	mov	r3, #3
   36370:	e5c03048 	strb	r3, [r0, #72]	; 0x48
   36374:	e12fff1e 	bx	lr
   36378:	e3a03002 	mov	r3, #2
   3637c:	e5c03048 	strb	r3, [r0, #72]	; 0x48
   36380:	e12fff1e 	bx	lr
   36384:	e3a03001 	mov	r3, #1
   36388:	e5c03048 	strb	r3, [r0, #72]	; 0x48
   3638c:	e12fff1e 	bx	lr

00036390 <CScreenDevice::Scroll()>:
   36390:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   36394:	e1a05000 	mov	r5, r0
   36398:	e2800014 	add	r0, r0, #20
   3639c:	eb000321 	bl	37028 <CCharGenerator::GetCharHeight() const>
   363a0:	e5953034 	ldr	r3, [r5, #52]	; 0x34
   363a4:	e5954038 	ldr	r4, [r5, #56]	; 0x38
   363a8:	e5952020 	ldr	r2, [r5, #32]
   363ac:	e0444003 	sub	r4, r4, r3
   363b0:	e0444000 	sub	r4, r4, r0
   363b4:	e0040492 	mul	r4, r2, r4
   363b8:	e5956018 	ldr	r6, [r5, #24]
   363bc:	e3540000 	cmp	r4, #0
   363c0:	e1a07000 	mov	r7, r0
   363c4:	e0286392 	mla	r8, r2, r3, r6
   363c8:	1a000007 	bne	363ec <CScreenDevice::Scroll()+0x5c>
   363cc:	e0020792 	mul	r2, r2, r7
   363d0:	e1b02122 	lsrs	r2, r2, #2
   363d4:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   363d8:	e1a00008 	mov	r0, r8
   363dc:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   363e0:	e1a02102 	lsl	r2, r2, #2
   363e4:	e3a01000 	mov	r1, #0
   363e8:	eafffb61 	b	35174 <memset>
   363ec:	e0833000 	add	r3, r3, r0
   363f0:	e0266392 	mla	r6, r2, r3, r6
   363f4:	e3c4900f 	bic	r9, r4, #15
   363f8:	e1a01006 	mov	r1, r6
   363fc:	e1a02009 	mov	r2, r9
   36400:	e1a00008 	mov	r0, r8
   36404:	ebfffc73 	bl	355d8 <memcpy>
   36408:	e204200f 	and	r2, r4, #15
   3640c:	e0880009 	add	r0, r8, r9
   36410:	e0861009 	add	r1, r6, r9
   36414:	e3c44003 	bic	r4, r4, #3
   36418:	ebfffc6e 	bl	355d8 <memcpy>
   3641c:	e0888004 	add	r8, r8, r4
   36420:	e5952020 	ldr	r2, [r5, #32]
   36424:	eaffffe8 	b	363cc <CScreenDevice::Scroll()+0x3c>

00036428 <CScreenDevice::CursorDown()>:
   36428:	e92d4070 	push	{r4, r5, r6, lr}
   3642c:	e1a04000 	mov	r4, r0
   36430:	e2805014 	add	r5, r0, #20
   36434:	e1a00005 	mov	r0, r5
   36438:	eb0002fa 	bl	37028 <CCharGenerator::GetCharHeight() const>
   3643c:	e5943040 	ldr	r3, [r4, #64]	; 0x40
   36440:	e5942038 	ldr	r2, [r4, #56]	; 0x38
   36444:	e0800003 	add	r0, r0, r3
   36448:	e1500002 	cmp	r0, r2
   3644c:	e5840040 	str	r0, [r4, #64]	; 0x40
   36450:	38bd8070 	popcc	{r4, r5, r6, pc}
   36454:	e1a00004 	mov	r0, r4
   36458:	ebffffcc 	bl	36390 <CScreenDevice::Scroll()>
   3645c:	e1a00005 	mov	r0, r5
   36460:	eb0002f0 	bl	37028 <CCharGenerator::GetCharHeight() const>
   36464:	e5943040 	ldr	r3, [r4, #64]	; 0x40
   36468:	e0430000 	sub	r0, r3, r0
   3646c:	e5840040 	str	r0, [r4, #64]	; 0x40
   36470:	e8bd8070 	pop	{r4, r5, r6, pc}

00036474 <CScreenDevice::NewLine()>:
   36474:	e3a02000 	mov	r2, #0
   36478:	e580203c 	str	r2, [r0, #60]	; 0x3c
   3647c:	eaffffe9 	b	36428 <CScreenDevice::CursorDown()>

00036480 <CScreenDevice::CursorRight()>:
   36480:	e92d4010 	push	{r4, lr}
   36484:	e1a04000 	mov	r4, r0
   36488:	e2800014 	add	r0, r0, #20
   3648c:	eb0002e3 	bl	37020 <CCharGenerator::GetCharWidth() const>
   36490:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
   36494:	e5942024 	ldr	r2, [r4, #36]	; 0x24
   36498:	e0800003 	add	r0, r0, r3
   3649c:	e1500002 	cmp	r0, r2
   364a0:	e584003c 	str	r0, [r4, #60]	; 0x3c
   364a4:	38bd8010 	popcc	{r4, pc}
   364a8:	e3a03000 	mov	r3, #0
   364ac:	e1a00004 	mov	r0, r4
   364b0:	e584303c 	str	r3, [r4, #60]	; 0x3c
   364b4:	e8bd4010 	pop	{r4, lr}
   364b8:	eaffffda 	b	36428 <CScreenDevice::CursorDown()>

000364bc <CScreenDevice::Tabulator()>:
   364bc:	e92d4070 	push	{r4, r5, r6, lr}
   364c0:	e1a05000 	mov	r5, r0
   364c4:	e2800014 	add	r0, r0, #20
   364c8:	eb0002d4 	bl	37020 <CCharGenerator::GetCharWidth() const>
   364cc:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
   364d0:	e1a04180 	lsl	r4, r0, #3
   364d4:	e0840003 	add	r0, r4, r3
   364d8:	e1a01004 	mov	r1, r4
   364dc:	ebfff677 	bl	33ec0 <__aeabi_uidiv>
   364e0:	e0000094 	mul	r0, r4, r0
   364e4:	e5953024 	ldr	r3, [r5, #36]	; 0x24
   364e8:	e585003c 	str	r0, [r5, #60]	; 0x3c
   364ec:	e1500003 	cmp	r0, r3
   364f0:	38bd8070 	popcc	{r4, r5, r6, pc}
   364f4:	e3a03000 	mov	r3, #0
   364f8:	e1a00005 	mov	r0, r5
   364fc:	e585303c 	str	r3, [r5, #60]	; 0x3c
   36500:	e8bd4070 	pop	{r4, r5, r6, lr}
   36504:	eaffffc7 	b	36428 <CScreenDevice::CursorDown()>

00036508 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)>:
   36508:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3650c:	e2806014 	add	r6, r0, #20
   36510:	e24dd00c 	sub	sp, sp, #12
   36514:	e1a08000 	mov	r8, r0
   36518:	e1a00006 	mov	r0, r6
   3651c:	e1a0b001 	mov	fp, r1
   36520:	e1a09002 	mov	r9, r2
   36524:	e58d3004 	str	r3, [sp, #4]
   36528:	e3a07000 	mov	r7, #0
   3652c:	e5dda030 	ldrb	sl, [sp, #48]	; 0x30
   36530:	eb0002bc 	bl	37028 <CCharGenerator::GetCharHeight() const>
   36534:	e1500007 	cmp	r0, r7
   36538:	9a00001f 	bls	365bc <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)+0xb4>
   3653c:	e3a04000 	mov	r4, #0
   36540:	ea000000 	b	36548 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)+0x40>
   36544:	e2844001 	add	r4, r4, #1
   36548:	e1a00006 	mov	r0, r6
   3654c:	eb0002b3 	bl	37020 <CCharGenerator::GetCharWidth() const>
   36550:	e1500004 	cmp	r0, r4
   36554:	e0845009 	add	r5, r4, r9
   36558:	9a00000f 	bls	3659c <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)+0x94>
   3655c:	e1a03007 	mov	r3, r7
   36560:	e1a02004 	mov	r2, r4
   36564:	e1a0100b 	mov	r1, fp
   36568:	e1a00006 	mov	r0, r6
   3656c:	eb0002b1 	bl	37038 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const>
   36570:	e5982024 	ldr	r2, [r8, #36]	; 0x24
   36574:	e3500000 	cmp	r0, #0
   36578:	11a0300a 	movne	r3, sl
   3657c:	03a03000 	moveq	r3, #0
   36580:	e1550002 	cmp	r5, r2
   36584:	2affffee 	bcs	36544 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)+0x3c>
   36588:	e1a01005 	mov	r1, r5
   3658c:	e59d2004 	ldr	r2, [sp, #4]
   36590:	e1a00008 	mov	r0, r8
   36594:	ebfffe17 	bl	35df8 <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned char) [clone .part.2]>
   36598:	eaffffe9 	b	36544 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)+0x3c>
   3659c:	e59d3004 	ldr	r3, [sp, #4]
   365a0:	e1a00006 	mov	r0, r6
   365a4:	e2833001 	add	r3, r3, #1
   365a8:	e58d3004 	str	r3, [sp, #4]
   365ac:	eb00029d 	bl	37028 <CCharGenerator::GetCharHeight() const>
   365b0:	e2877001 	add	r7, r7, #1
   365b4:	e1500007 	cmp	r0, r7
   365b8:	8affffdf 	bhi	3653c <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)+0x34>
   365bc:	e28dd00c 	add	sp, sp, #12
   365c0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000365c4 <CScreenDevice::DisplayChar(char)>:
   365c4:	e6ef3071 	uxtb	r3, r1
   365c8:	e353001f 	cmp	r3, #31
   365cc:	912fff1e 	bxls	lr
   365d0:	e92d4010 	push	{r4, lr}
   365d4:	e1c023dc 	ldrd	r2, [r0, #60]	; 0x3c
   365d8:	e1a04000 	mov	r4, r0
   365dc:	e5d0c048 	ldrb	ip, [r0, #72]	; 0x48
   365e0:	e24dd008 	sub	sp, sp, #8
   365e4:	e58dc000 	str	ip, [sp]
   365e8:	ebffffc6 	bl	36508 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)>
   365ec:	e1a00004 	mov	r0, r4
   365f0:	e28dd008 	add	sp, sp, #8
   365f4:	e8bd4010 	pop	{r4, lr}
   365f8:	eaffffa0 	b	36480 <CScreenDevice::CursorRight()>

000365fc <CScreenDevice::EraseChar(unsigned int, unsigned int)>:
   365fc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   36600:	e1a06000 	mov	r6, r0
   36604:	e1a07001 	mov	r7, r1
   36608:	e1a08002 	mov	r8, r2
   3660c:	e3a09000 	mov	r9, #0
   36610:	e2805014 	add	r5, r0, #20
   36614:	e1a00005 	mov	r0, r5
   36618:	eb000282 	bl	37028 <CCharGenerator::GetCharHeight() const>
   3661c:	e1500009 	cmp	r0, r9
   36620:	98bd87f0 	popls	{r4, r5, r6, r7, r8, r9, sl, pc}
   36624:	e3a04000 	mov	r4, #0
   36628:	e1a00005 	mov	r0, r5
   3662c:	eb00027b 	bl	37020 <CCharGenerator::GetCharWidth() const>
   36630:	e1500004 	cmp	r0, r4
   36634:	e0841007 	add	r1, r4, r7
   36638:	9a000008 	bls	36660 <CScreenDevice::EraseChar(unsigned int, unsigned int)+0x64>
   3663c:	e5963024 	ldr	r3, [r6, #36]	; 0x24
   36640:	e2844001 	add	r4, r4, #1
   36644:	e1510003 	cmp	r1, r3
   36648:	2afffff6 	bcs	36628 <CScreenDevice::EraseChar(unsigned int, unsigned int)+0x2c>
   3664c:	e3a03000 	mov	r3, #0
   36650:	e1a02008 	mov	r2, r8
   36654:	e1a00006 	mov	r0, r6
   36658:	ebfffde6 	bl	35df8 <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned char) [clone .part.2]>
   3665c:	eafffff1 	b	36628 <CScreenDevice::EraseChar(unsigned int, unsigned int)+0x2c>
   36660:	e2899001 	add	r9, r9, #1
   36664:	e2888001 	add	r8, r8, #1
   36668:	eaffffe9 	b	36614 <CScreenDevice::EraseChar(unsigned int, unsigned int)+0x18>

0003666c <CScreenDevice::ClearLineEnd()>:
   3666c:	e92d4070 	push	{r4, r5, r6, lr}
   36670:	e5903024 	ldr	r3, [r0, #36]	; 0x24
   36674:	e590403c 	ldr	r4, [r0, #60]	; 0x3c
   36678:	e1540003 	cmp	r4, r3
   3667c:	28bd8070 	popcs	{r4, r5, r6, pc}
   36680:	e1a05000 	mov	r5, r0
   36684:	e2806014 	add	r6, r0, #20
   36688:	e1a01004 	mov	r1, r4
   3668c:	e5952040 	ldr	r2, [r5, #64]	; 0x40
   36690:	e1a00005 	mov	r0, r5
   36694:	ebffffd8 	bl	365fc <CScreenDevice::EraseChar(unsigned int, unsigned int)>
   36698:	e1a00006 	mov	r0, r6
   3669c:	eb00025f 	bl	37020 <CCharGenerator::GetCharWidth() const>
   366a0:	e5953024 	ldr	r3, [r5, #36]	; 0x24
   366a4:	e0844000 	add	r4, r4, r0
   366a8:	e1530004 	cmp	r3, r4
   366ac:	8afffff5 	bhi	36688 <CScreenDevice::ClearLineEnd()+0x1c>
   366b0:	e8bd8070 	pop	{r4, r5, r6, pc}

000366b4 <CScreenDevice::EraseChars(unsigned int) [clone .part.4]>:
   366b4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   366b8:	e1a05000 	mov	r5, r0
   366bc:	e2807014 	add	r7, r0, #20
   366c0:	e1a00007 	mov	r0, r7
   366c4:	e1a06001 	mov	r6, r1
   366c8:	e595403c 	ldr	r4, [r5, #60]	; 0x3c
   366cc:	eb000253 	bl	37020 <CCharGenerator::GetCharWidth() const>
   366d0:	e0204096 	mla	r0, r6, r0, r4
   366d4:	e5956024 	ldr	r6, [r5, #36]	; 0x24
   366d8:	e595403c 	ldr	r4, [r5, #60]	; 0x3c
   366dc:	e1500006 	cmp	r0, r6
   366e0:	31a06000 	movcc	r6, r0
   366e4:	e1540006 	cmp	r4, r6
   366e8:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
   366ec:	e1a01004 	mov	r1, r4
   366f0:	e5952040 	ldr	r2, [r5, #64]	; 0x40
   366f4:	e1a00005 	mov	r0, r5
   366f8:	ebffffbf 	bl	365fc <CScreenDevice::EraseChar(unsigned int, unsigned int)>
   366fc:	e1a00007 	mov	r0, r7
   36700:	eb000246 	bl	37020 <CCharGenerator::GetCharWidth() const>
   36704:	e0844000 	add	r4, r4, r0
   36708:	e1540006 	cmp	r4, r6
   3670c:	3afffff6 	bcc	366ec <CScreenDevice::EraseChars(unsigned int) [clone .part.4]+0x38>
   36710:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00036714 <CScreenDevice::EraseChars(unsigned int)>:
   36714:	e3510000 	cmp	r1, #0
   36718:	012fff1e 	bxeq	lr
   3671c:	eaffffe4 	b	366b4 <CScreenDevice::EraseChars(unsigned int) [clone .part.4]>

00036720 <CScreenDevice::ClearDisplayEnd()>:
   36720:	e92d4070 	push	{r4, r5, r6, lr}
   36724:	e5903024 	ldr	r3, [r0, #36]	; 0x24
   36728:	e590503c 	ldr	r5, [r0, #60]	; 0x3c
   3672c:	e1a04000 	mov	r4, r0
   36730:	e1550003 	cmp	r5, r3
   36734:	e2806014 	add	r6, r0, #20
   36738:	2a000009 	bcs	36764 <CScreenDevice::ClearDisplayEnd()+0x44>
   3673c:	e1a01005 	mov	r1, r5
   36740:	e5942040 	ldr	r2, [r4, #64]	; 0x40
   36744:	e1a00004 	mov	r0, r4
   36748:	ebffffab 	bl	365fc <CScreenDevice::EraseChar(unsigned int, unsigned int)>
   3674c:	e1a00006 	mov	r0, r6
   36750:	eb000232 	bl	37020 <CCharGenerator::GetCharWidth() const>
   36754:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   36758:	e0855000 	add	r5, r5, r0
   3675c:	e1530005 	cmp	r3, r5
   36760:	8afffff5 	bhi	3673c <CScreenDevice::ClearDisplayEnd()+0x1c>
   36764:	e1a00006 	mov	r0, r6
   36768:	e5945040 	ldr	r5, [r4, #64]	; 0x40
   3676c:	eb00022d 	bl	37028 <CCharGenerator::GetCharHeight() const>
   36770:	e5943020 	ldr	r3, [r4, #32]
   36774:	e0850000 	add	r0, r5, r0
   36778:	e0000093 	mul	r0, r3, r0
   3677c:	e594201c 	ldr	r2, [r4, #28]
   36780:	e5943018 	ldr	r3, [r4, #24]
   36784:	e0522000 	subs	r2, r2, r0
   36788:	08bd8070 	popeq	{r4, r5, r6, pc}
   3678c:	e0830000 	add	r0, r3, r0
   36790:	e3a01000 	mov	r1, #0
   36794:	e8bd4070 	pop	{r4, r5, r6, lr}
   36798:	eafffa75 	b	35174 <memset>

0003679c <CScreenDevice::Write(char)>:
   3679c:	e92d4010 	push	{r4, lr}
   367a0:	e5903030 	ldr	r3, [r0, #48]	; 0x30
   367a4:	e24dd008 	sub	sp, sp, #8
   367a8:	e1a04000 	mov	r4, r0
   367ac:	e3530007 	cmp	r3, #7
   367b0:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   367b4:	ea000010 	b	367fc <CScreenDevice::Write(char)+0x60>
   367b8:	00036848 	.word	0x00036848
   367bc:	000368a8 	.word	0x000368a8
   367c0:	000368bc 	.word	0x000368bc
   367c4:	00036914 	.word	0x00036914
   367c8:	000369f0 	.word	0x000369f0
   367cc:	00036a10 	.word	0x00036a10
   367d0:	00036a30 	.word	0x00036a30
   367d4:	0003680c 	.word	0x0003680c
   367d8:	e5902040 	ldr	r2, [r0, #64]	; 0x40
   367dc:	e5903034 	ldr	r3, [r0, #52]	; 0x34
   367e0:	e1520003 	cmp	r2, r3
   367e4:	9a000004 	bls	367fc <CScreenDevice::Write(char)+0x60>
   367e8:	e2800014 	add	r0, r0, #20
   367ec:	eb00020d 	bl	37028 <CCharGenerator::GetCharHeight() const>
   367f0:	e5943040 	ldr	r3, [r4, #64]	; 0x40
   367f4:	e0433000 	sub	r3, r3, r0
   367f8:	e5843040 	str	r3, [r4, #64]	; 0x40
   367fc:	e3a03000 	mov	r3, #0
   36800:	e5843030 	str	r3, [r4, #48]	; 0x30
   36804:	e28dd008 	add	sp, sp, #8
   36808:	e8bd8010 	pop	{r4, pc}
   3680c:	e3510068 	cmp	r1, #104	; 0x68
   36810:	0a000095 	beq	36a6c <CScreenDevice::Write(char)+0x2d0>
   36814:	e351006c 	cmp	r1, #108	; 0x6c
   36818:	0a000093 	beq	36a6c <CScreenDevice::Write(char)+0x2d0>
   3681c:	e2411030 	sub	r1, r1, #48	; 0x30
   36820:	e6ef3071 	uxtb	r3, r1
   36824:	e3530009 	cmp	r3, #9
   36828:	8afffff3 	bhi	367fc <CScreenDevice::Write(char)+0x60>
   3682c:	e5943050 	ldr	r3, [r4, #80]	; 0x50
   36830:	e0833103 	add	r3, r3, r3, lsl #2
   36834:	e0811083 	add	r1, r1, r3, lsl #1
   36838:	e3510063 	cmp	r1, #99	; 0x63
   3683c:	e5841050 	str	r1, [r4, #80]	; 0x50
   36840:	8affffed 	bhi	367fc <CScreenDevice::Write(char)+0x60>
   36844:	eaffffee 	b	36804 <CScreenDevice::Write(char)+0x68>
   36848:	e2413008 	sub	r3, r1, #8
   3684c:	e3530013 	cmp	r3, #19
   36850:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   36854:	ea0000e8 	b	36bfc <CScreenDevice::Write(char)+0x460>
   36858:	00036ad0 	.word	0x00036ad0
   3685c:	00036ac4 	.word	0x00036ac4
   36860:	00036ab0 	.word	0x00036ab0
   36864:	00036bfc 	.word	0x00036bfc
   36868:	00036bfc 	.word	0x00036bfc
   3686c:	00036aa4 	.word	0x00036aa4
   36870:	00036bfc 	.word	0x00036bfc
   36874:	00036bfc 	.word	0x00036bfc
   36878:	00036bfc 	.word	0x00036bfc
   3687c:	00036bfc 	.word	0x00036bfc
   36880:	00036bfc 	.word	0x00036bfc
   36884:	00036bfc 	.word	0x00036bfc
   36888:	00036bfc 	.word	0x00036bfc
   3688c:	00036bfc 	.word	0x00036bfc
   36890:	00036bfc 	.word	0x00036bfc
   36894:	00036bfc 	.word	0x00036bfc
   36898:	00036bfc 	.word	0x00036bfc
   3689c:	00036bfc 	.word	0x00036bfc
   368a0:	00036bfc 	.word	0x00036bfc
   368a4:	00036a98 	.word	0x00036a98
   368a8:	e351005b 	cmp	r1, #91	; 0x5b
   368ac:	03a03002 	moveq	r3, #2
   368b0:	05803030 	streq	r3, [r0, #48]	; 0x30
   368b4:	0affffd2 	beq	36804 <CScreenDevice::Write(char)+0x68>
   368b8:	eaffffcf 	b	367fc <CScreenDevice::Write(char)+0x60>
   368bc:	e241303f 	sub	r3, r1, #63	; 0x3f
   368c0:	e3530011 	cmp	r3, #17
   368c4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   368c8:	ea0000d7 	b	36c2c <CScreenDevice::Write(char)+0x490>
   368cc:	00036bb8 	.word	0x00036bb8
   368d0:	00036c2c 	.word	0x00036c2c
   368d4:	000367d8 	.word	0x000367d8
   368d8:	00036bec 	.word	0x00036bec
   368dc:	00036bdc 	.word	0x00036bdc
   368e0:	00036c2c 	.word	0x00036c2c
   368e4:	00036c2c 	.word	0x00036c2c
   368e8:	00036c2c 	.word	0x00036c2c
   368ec:	00036c2c 	.word	0x00036c2c
   368f0:	00036bc4 	.word	0x00036bc4
   368f4:	00036c2c 	.word	0x00036c2c
   368f8:	00036ba8 	.word	0x00036ba8
   368fc:	00036b98 	.word	0x00036b98
   36900:	000367fc 	.word	0x000367fc
   36904:	000367fc 	.word	0x000367fc
   36908:	00036c2c 	.word	0x00036c2c
   3690c:	00036c2c 	.word	0x00036c2c
   36910:	000367fc 	.word	0x000367fc
   36914:	e241303b 	sub	r3, r1, #59	; 0x3b
   36918:	e3530032 	cmp	r3, #50	; 0x32
   3691c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   36920:	eaffffbd 	b	3681c <CScreenDevice::Write(char)+0x80>
   36924:	00036b8c 	.word	0x00036b8c
   36928:	0003681c 	.word	0x0003681c
   3692c:	0003681c 	.word	0x0003681c
   36930:	0003681c 	.word	0x0003681c
   36934:	0003681c 	.word	0x0003681c
   36938:	0003681c 	.word	0x0003681c
   3693c:	0003681c 	.word	0x0003681c
   36940:	0003681c 	.word	0x0003681c
   36944:	0003681c 	.word	0x0003681c
   36948:	0003681c 	.word	0x0003681c
   3694c:	0003681c 	.word	0x0003681c
   36950:	0003681c 	.word	0x0003681c
   36954:	0003681c 	.word	0x0003681c
   36958:	0003681c 	.word	0x0003681c
   3695c:	0003681c 	.word	0x0003681c
   36960:	0003681c 	.word	0x0003681c
   36964:	0003681c 	.word	0x0003681c
   36968:	000367fc 	.word	0x000367fc
   3696c:	000367fc 	.word	0x000367fc
   36970:	0003681c 	.word	0x0003681c
   36974:	0003681c 	.word	0x0003681c
   36978:	000367fc 	.word	0x000367fc
   3697c:	0003681c 	.word	0x0003681c
   36980:	0003681c 	.word	0x0003681c
   36984:	0003681c 	.word	0x0003681c
   36988:	0003681c 	.word	0x0003681c
   3698c:	0003681c 	.word	0x0003681c
   36990:	0003681c 	.word	0x0003681c
   36994:	0003681c 	.word	0x0003681c
   36998:	00036adc 	.word	0x00036adc
   3699c:	0003681c 	.word	0x0003681c
   369a0:	0003681c 	.word	0x0003681c
   369a4:	0003681c 	.word	0x0003681c
   369a8:	0003681c 	.word	0x0003681c
   369ac:	0003681c 	.word	0x0003681c
   369b0:	0003681c 	.word	0x0003681c
   369b4:	0003681c 	.word	0x0003681c
   369b8:	0003681c 	.word	0x0003681c
   369bc:	0003681c 	.word	0x0003681c
   369c0:	0003681c 	.word	0x0003681c
   369c4:	0003681c 	.word	0x0003681c
   369c8:	0003681c 	.word	0x0003681c
   369cc:	0003681c 	.word	0x0003681c
   369d0:	0003681c 	.word	0x0003681c
   369d4:	0003681c 	.word	0x0003681c
   369d8:	00036af0 	.word	0x00036af0
   369dc:	0003681c 	.word	0x0003681c
   369e0:	0003681c 	.word	0x0003681c
   369e4:	0003681c 	.word	0x0003681c
   369e8:	00036af0 	.word	0x00036af0
   369ec:	00036b0c 	.word	0x00036b0c
   369f0:	e2411030 	sub	r1, r1, #48	; 0x30
   369f4:	e6ef3071 	uxtb	r3, r1
   369f8:	e3530009 	cmp	r3, #9
   369fc:	8affff7e 	bhi	367fc <CScreenDevice::Write(char)+0x60>
   36a00:	e3a03007 	mov	r3, #7
   36a04:	e5801050 	str	r1, [r0, #80]	; 0x50
   36a08:	e5803030 	str	r3, [r0, #48]	; 0x30
   36a0c:	eaffff7c 	b	36804 <CScreenDevice::Write(char)+0x68>
   36a10:	e2411030 	sub	r1, r1, #48	; 0x30
   36a14:	e6ef3071 	uxtb	r3, r1
   36a18:	e3530009 	cmp	r3, #9
   36a1c:	8affff76 	bhi	367fc <CScreenDevice::Write(char)+0x60>
   36a20:	e3a03006 	mov	r3, #6
   36a24:	e5801054 	str	r1, [r0, #84]	; 0x54
   36a28:	e5803030 	str	r3, [r0, #48]	; 0x30
   36a2c:	eaffff74 	b	36804 <CScreenDevice::Write(char)+0x68>
   36a30:	e3510048 	cmp	r1, #72	; 0x48
   36a34:	0a00008d 	beq	36c70 <CScreenDevice::Write(char)+0x4d4>
   36a38:	e3510072 	cmp	r1, #114	; 0x72
   36a3c:	0a000011 	beq	36a88 <CScreenDevice::Write(char)+0x2ec>
   36a40:	e2411030 	sub	r1, r1, #48	; 0x30
   36a44:	e6ef3071 	uxtb	r3, r1
   36a48:	e3530009 	cmp	r3, #9
   36a4c:	8affff6a 	bhi	367fc <CScreenDevice::Write(char)+0x60>
   36a50:	e5903054 	ldr	r3, [r0, #84]	; 0x54
   36a54:	e0833103 	add	r3, r3, r3, lsl #2
   36a58:	e0811083 	add	r1, r1, r3, lsl #1
   36a5c:	e35100c7 	cmp	r1, #199	; 0xc7
   36a60:	e5801054 	str	r1, [r0, #84]	; 0x54
   36a64:	8affff64 	bhi	367fc <CScreenDevice::Write(char)+0x60>
   36a68:	eaffff65 	b	36804 <CScreenDevice::Write(char)+0x68>
   36a6c:	e5943050 	ldr	r3, [r4, #80]	; 0x50
   36a70:	e3530019 	cmp	r3, #25
   36a74:	02411068 	subeq	r1, r1, #104	; 0x68
   36a78:	016f1f11 	clzeq	r1, r1
   36a7c:	01a012a1 	lsreq	r1, r1, #5
   36a80:	05841044 	streq	r1, [r4, #68]	; 0x44
   36a84:	eaffff5c 	b	367fc <CScreenDevice::Write(char)+0x60>
   36a88:	e5902054 	ldr	r2, [r0, #84]	; 0x54
   36a8c:	e5901050 	ldr	r1, [r0, #80]	; 0x50
   36a90:	ebfffdf6 	bl	36270 <CScreenDevice::SetScrollRegion(unsigned int, unsigned int)>
   36a94:	eaffff58 	b	367fc <CScreenDevice::Write(char)+0x60>
   36a98:	e3a03001 	mov	r3, #1
   36a9c:	e5803030 	str	r3, [r0, #48]	; 0x30
   36aa0:	eaffff57 	b	36804 <CScreenDevice::Write(char)+0x68>
   36aa4:	e3a03000 	mov	r3, #0
   36aa8:	e580303c 	str	r3, [r0, #60]	; 0x3c
   36aac:	eaffff54 	b	36804 <CScreenDevice::Write(char)+0x68>
   36ab0:	e3a03000 	mov	r3, #0
   36ab4:	e580303c 	str	r3, [r0, #60]	; 0x3c
   36ab8:	e28dd008 	add	sp, sp, #8
   36abc:	e8bd4010 	pop	{r4, lr}
   36ac0:	eafffe58 	b	36428 <CScreenDevice::CursorDown()>
   36ac4:	e28dd008 	add	sp, sp, #8
   36ac8:	e8bd4010 	pop	{r4, lr}
   36acc:	eafffe7a 	b	364bc <CScreenDevice::Tabulator()>
   36ad0:	e28dd008 	add	sp, sp, #8
   36ad4:	e8bd4010 	pop	{r4, lr}
   36ad8:	eafffd9d 	b	36154 <CScreenDevice::CursorLeft()>
   36adc:	e5901050 	ldr	r1, [r0, #80]	; 0x50
   36ae0:	e3510000 	cmp	r1, #0
   36ae4:	0affff44 	beq	367fc <CScreenDevice::Write(char)+0x60>
   36ae8:	ebfffef1 	bl	366b4 <CScreenDevice::EraseChars(unsigned int) [clone .part.4]>
   36aec:	eaffff42 	b	367fc <CScreenDevice::Write(char)+0x60>
   36af0:	e5903050 	ldr	r3, [r0, #80]	; 0x50
   36af4:	e3530004 	cmp	r3, #4
   36af8:	02411068 	subeq	r1, r1, #104	; 0x68
   36afc:	016f1f11 	clzeq	r1, r1
   36b00:	01a012a1 	lsreq	r1, r1, #5
   36b04:	0580104c 	streq	r1, [r0, #76]	; 0x4c
   36b08:	eaffff3b 	b	367fc <CScreenDevice::Write(char)+0x60>
   36b0c:	e5903050 	ldr	r3, [r0, #80]	; 0x50
   36b10:	e353001b 	cmp	r3, #27
   36b14:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   36b18:	eaffff37 	b	367fc <CScreenDevice::Write(char)+0x60>
   36b1c:	00036c64 	.word	0x00036c64
   36b20:	00036c58 	.word	0x00036c58
   36b24:	00036c4c 	.word	0x00036c4c
   36b28:	000367fc 	.word	0x000367fc
   36b2c:	000367fc 	.word	0x000367fc
   36b30:	000367fc 	.word	0x000367fc
   36b34:	000367fc 	.word	0x000367fc
   36b38:	000367fc 	.word	0x000367fc
   36b3c:	000367fc 	.word	0x000367fc
   36b40:	000367fc 	.word	0x000367fc
   36b44:	000367fc 	.word	0x000367fc
   36b48:	000367fc 	.word	0x000367fc
   36b4c:	000367fc 	.word	0x000367fc
   36b50:	000367fc 	.word	0x000367fc
   36b54:	000367fc 	.word	0x000367fc
   36b58:	000367fc 	.word	0x000367fc
   36b5c:	000367fc 	.word	0x000367fc
   36b60:	000367fc 	.word	0x000367fc
   36b64:	000367fc 	.word	0x000367fc
   36b68:	000367fc 	.word	0x000367fc
   36b6c:	000367fc 	.word	0x000367fc
   36b70:	000367fc 	.word	0x000367fc
   36b74:	000367fc 	.word	0x000367fc
   36b78:	000367fc 	.word	0x000367fc
   36b7c:	000367fc 	.word	0x000367fc
   36b80:	000367fc 	.word	0x000367fc
   36b84:	000367fc 	.word	0x000367fc
   36b88:	00036c64 	.word	0x00036c64
   36b8c:	e3a03005 	mov	r3, #5
   36b90:	e5803030 	str	r3, [r0, #48]	; 0x30
   36b94:	eaffff1a 	b	36804 <CScreenDevice::Write(char)+0x68>
   36b98:	ebfffeb3 	bl	3666c <CScreenDevice::ClearLineEnd()>
   36b9c:	e3a03000 	mov	r3, #0
   36ba0:	e5843030 	str	r3, [r4, #48]	; 0x30
   36ba4:	eaffff16 	b	36804 <CScreenDevice::Write(char)+0x68>
   36ba8:	ebfffedc 	bl	36720 <CScreenDevice::ClearDisplayEnd()>
   36bac:	e3a03000 	mov	r3, #0
   36bb0:	e5843030 	str	r3, [r4, #48]	; 0x30
   36bb4:	eaffff12 	b	36804 <CScreenDevice::Write(char)+0x68>
   36bb8:	e3a03004 	mov	r3, #4
   36bbc:	e5803030 	str	r3, [r0, #48]	; 0x30
   36bc0:	eaffff0f 	b	36804 <CScreenDevice::Write(char)+0x68>
   36bc4:	e3a03000 	mov	r3, #0
   36bc8:	e5902034 	ldr	r2, [r0, #52]	; 0x34
   36bcc:	e580303c 	str	r3, [r0, #60]	; 0x3c
   36bd0:	e5803030 	str	r3, [r0, #48]	; 0x30
   36bd4:	e5802040 	str	r2, [r0, #64]	; 0x40
   36bd8:	eaffff09 	b	36804 <CScreenDevice::Write(char)+0x68>
   36bdc:	ebfffe27 	bl	36480 <CScreenDevice::CursorRight()>
   36be0:	e3a03000 	mov	r3, #0
   36be4:	e5843030 	str	r3, [r4, #48]	; 0x30
   36be8:	eaffff05 	b	36804 <CScreenDevice::Write(char)+0x68>
   36bec:	ebfffe0d 	bl	36428 <CScreenDevice::CursorDown()>
   36bf0:	e3a03000 	mov	r3, #0
   36bf4:	e5843030 	str	r3, [r4, #48]	; 0x30
   36bf8:	eaffff01 	b	36804 <CScreenDevice::Write(char)+0x68>
   36bfc:	e6ef3071 	uxtb	r3, r1
   36c00:	e353001f 	cmp	r3, #31
   36c04:	9afffefe 	bls	36804 <CScreenDevice::Write(char)+0x68>
   36c08:	e1c023dc 	ldrd	r2, [r0, #60]	; 0x3c
   36c0c:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   36c10:	e58d0000 	str	r0, [sp]
   36c14:	e1a00004 	mov	r0, r4
   36c18:	ebfffe3a 	bl	36508 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)>
   36c1c:	e1a00004 	mov	r0, r4
   36c20:	e28dd008 	add	sp, sp, #8
   36c24:	e8bd4010 	pop	{r4, lr}
   36c28:	eafffe14 	b	36480 <CScreenDevice::CursorRight()>
   36c2c:	e2411030 	sub	r1, r1, #48	; 0x30
   36c30:	e6ef3071 	uxtb	r3, r1
   36c34:	e3530009 	cmp	r3, #9
   36c38:	8afffeef 	bhi	367fc <CScreenDevice::Write(char)+0x60>
   36c3c:	e3a03003 	mov	r3, #3
   36c40:	e5801050 	str	r1, [r0, #80]	; 0x50
   36c44:	e5803030 	str	r3, [r0, #48]	; 0x30
   36c48:	eafffeed 	b	36804 <CScreenDevice::Write(char)+0x68>
   36c4c:	e3a03003 	mov	r3, #3
   36c50:	e5c03048 	strb	r3, [r0, #72]	; 0x48
   36c54:	eafffee8 	b	367fc <CScreenDevice::Write(char)+0x60>
   36c58:	e3a03002 	mov	r3, #2
   36c5c:	e5c03048 	strb	r3, [r0, #72]	; 0x48
   36c60:	eafffee5 	b	367fc <CScreenDevice::Write(char)+0x60>
   36c64:	e3a03001 	mov	r3, #1
   36c68:	e5c03048 	strb	r3, [r0, #72]	; 0x48
   36c6c:	eafffee2 	b	367fc <CScreenDevice::Write(char)+0x60>
   36c70:	e5902054 	ldr	r2, [r0, #84]	; 0x54
   36c74:	e5901050 	ldr	r1, [r0, #80]	; 0x50
   36c78:	ebfffd50 	bl	361c0 <CScreenDevice::CursorMove(unsigned int, unsigned int)>
   36c7c:	e3a03000 	mov	r3, #0
   36c80:	e5843030 	str	r3, [r4, #48]	; 0x30
   36c84:	eafffede 	b	36804 <CScreenDevice::Write(char)+0x68>

00036c88 <CScreenDevice::Write(void const*, unsigned int)>:
   36c88:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   36c8c:	e1a05000 	mov	r5, r0
   36c90:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
   36c94:	e1a04001 	mov	r4, r1
   36c98:	e3500000 	cmp	r0, #0
   36c9c:	e1a07002 	mov	r7, r2
   36ca0:	1a000021 	bne	36d2c <CScreenDevice::Write(void const*, unsigned int)+0xa4>
   36ca4:	e3a03001 	mov	r3, #1
   36ca8:	e5956044 	ldr	r6, [r5, #68]	; 0x44
   36cac:	e5853058 	str	r3, [r5, #88]	; 0x58
   36cb0:	e3560000 	cmp	r6, #0
   36cb4:	1a000017 	bne	36d18 <CScreenDevice::Write(void const*, unsigned int)+0x90>
   36cb8:	e3570000 	cmp	r7, #0
   36cbc:	0a00000b 	beq	36cf0 <CScreenDevice::Write(void const*, unsigned int)+0x68>
   36cc0:	e0846007 	add	r6, r4, r7
   36cc4:	e0d410d1 	ldrsb	r1, [r4], #1
   36cc8:	e1a00005 	mov	r0, r5
   36ccc:	ebfffeb2 	bl	3679c <CScreenDevice::Write(char)>
   36cd0:	e1540006 	cmp	r4, r6
   36cd4:	1afffffa 	bne	36cc4 <CScreenDevice::Write(void const*, unsigned int)+0x3c>
   36cd8:	e5953044 	ldr	r3, [r5, #68]	; 0x44
   36cdc:	e1a06007 	mov	r6, r7
   36ce0:	e3530000 	cmp	r3, #0
   36ce4:	0a000001 	beq	36cf0 <CScreenDevice::Write(void const*, unsigned int)+0x68>
   36ce8:	e1a00005 	mov	r0, r5
   36cec:	ebfffc48 	bl	35e14 <CScreenDevice::InvertCursor() [clone .part.6]>
   36cf0:	e3a02000 	mov	r2, #0
   36cf4:	e595305c 	ldr	r3, [r5, #92]	; 0x5c
   36cf8:	e5852058 	str	r2, [r5, #88]	; 0x58
   36cfc:	e1530002 	cmp	r3, r2
   36d00:	0a000000 	beq	36d08 <CScreenDevice::Write(void const*, unsigned int)+0x80>
   36d04:	ebfff5bb 	bl	343f8 <LeaveCritical>
   36d08:	e3a03000 	mov	r3, #0
   36d0c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   36d10:	e1a00006 	mov	r0, r6
   36d14:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   36d18:	e1a00005 	mov	r0, r5
   36d1c:	ebfffc3c 	bl	35e14 <CScreenDevice::InvertCursor() [clone .part.6]>
   36d20:	e3570000 	cmp	r7, #0
   36d24:	1affffe5 	bne	36cc0 <CScreenDevice::Write(void const*, unsigned int)+0x38>
   36d28:	eaffffea 	b	36cd8 <CScreenDevice::Write(void const*, unsigned int)+0x50>
   36d2c:	ebfff585 	bl	34348 <EnterCritical>
   36d30:	eaffffdb 	b	36ca4 <CScreenDevice::Write(void const*, unsigned int)+0x1c>

00036d34 <CScreenDevice::Initialize()>:
   36d34:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   36d38:	e590500c 	ldr	r5, [r0, #12]
   36d3c:	e24dd00c 	sub	sp, sp, #12
   36d40:	e3550000 	cmp	r5, #0
   36d44:	e1a04000 	mov	r4, r0
   36d48:	1a00001b 	bne	36dbc <CScreenDevice::Initialize()+0x88>
   36d4c:	e3a00024 	mov	r0, #36	; 0x24
   36d50:	ebfff570 	bl	34318 <operator new(unsigned int)>
   36d54:	e9940006 	ldmib	r4, {r1, r2}
   36d58:	e1a06000 	mov	r6, r0
   36d5c:	e3a03008 	mov	r3, #8
   36d60:	e58d5004 	str	r5, [sp, #4]
   36d64:	e58d5000 	str	r5, [sp]
   36d68:	eb0013a0 	bl	3bbf0 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)>
   36d6c:	e1a00006 	mov	r0, r6
   36d70:	e59f214c 	ldr	r2, [pc, #332]	; 36ec4 <CScreenDevice::Initialize()+0x190>
   36d74:	e3a01001 	mov	r1, #1
   36d78:	e5846010 	str	r6, [r4, #16]
   36d7c:	eb0013ee 	bl	3bd3c <CBcmFrameBuffer::SetPalette(unsigned char, unsigned short)>
   36d80:	e3a02b3e 	mov	r2, #63488	; 0xf800
   36d84:	e3a01002 	mov	r1, #2
   36d88:	e5940010 	ldr	r0, [r4, #16]
   36d8c:	eb0013ea 	bl	3bd3c <CBcmFrameBuffer::SetPalette(unsigned char, unsigned short)>
   36d90:	e3a0201f 	mov	r2, #31
   36d94:	e3a01003 	mov	r1, #3
   36d98:	e5940010 	ldr	r0, [r4, #16]
   36d9c:	eb0013e6 	bl	3bd3c <CBcmFrameBuffer::SetPalette(unsigned char, unsigned short)>
   36da0:	e5940010 	ldr	r0, [r4, #16]
   36da4:	eb0013f9 	bl	3bd90 <CBcmFrameBuffer::Initialize()>
   36da8:	e3500000 	cmp	r0, #0
   36dac:	1a000029 	bne	36e58 <CScreenDevice::Initialize()+0x124>
   36db0:	e1a00005 	mov	r0, r5
   36db4:	e28dd00c 	add	sp, sp, #12
   36db8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   36dbc:	e5903004 	ldr	r3, [r0, #4]
   36dc0:	e5902008 	ldr	r2, [r0, #8]
   36dc4:	e5803024 	str	r3, [r0, #36]	; 0x24
   36dc8:	e0000392 	mul	r0, r2, r3
   36dcc:	e5843020 	str	r3, [r4, #32]
   36dd0:	e584001c 	str	r0, [r4, #28]
   36dd4:	e5842028 	str	r2, [r4, #40]	; 0x28
   36dd8:	ebfff54f 	bl	3431c <operator new[](unsigned int)>
   36ddc:	e5947028 	ldr	r7, [r4, #40]	; 0x28
   36de0:	e5840018 	str	r0, [r4, #24]
   36de4:	e2846014 	add	r6, r4, #20
   36de8:	e1a00006 	mov	r0, r6
   36dec:	eb00008d 	bl	37028 <CCharGenerator::GetCharHeight() const>
   36df0:	e1a01000 	mov	r1, r0
   36df4:	e1a00007 	mov	r0, r7
   36df8:	ebfff430 	bl	33ec0 <__aeabi_uidiv>
   36dfc:	e1a05000 	mov	r5, r0
   36e00:	e1a00006 	mov	r0, r6
   36e04:	eb000087 	bl	37028 <CCharGenerator::GetCharHeight() const>
   36e08:	e3a02000 	mov	r2, #0
   36e0c:	e0000590 	mul	r0, r0, r5
   36e10:	e5943034 	ldr	r3, [r4, #52]	; 0x34
   36e14:	e584002c 	str	r0, [r4, #44]	; 0x2c
   36e18:	e5840038 	str	r0, [r4, #56]	; 0x38
   36e1c:	e1c423fc 	strd	r2, [r4, #60]	; 0x3c
   36e20:	e1a00004 	mov	r0, r4
   36e24:	ebfffe3d 	bl	36720 <CScreenDevice::ClearDisplayEnd()>
   36e28:	e5943044 	ldr	r3, [r4, #68]	; 0x44
   36e2c:	e3530000 	cmp	r3, #0
   36e30:	1a000020 	bne	36eb8 <CScreenDevice::Initialize()+0x184>
   36e34:	e3a05001 	mov	r5, #1
   36e38:	eb0001a0 	bl	374c0 <CDeviceNameService::Get()>
   36e3c:	e1a02004 	mov	r2, r4
   36e40:	e3a03000 	mov	r3, #0
   36e44:	e59f107c 	ldr	r1, [pc, #124]	; 36ec8 <CScreenDevice::Initialize()+0x194>
   36e48:	eb00012b 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   36e4c:	e1a00005 	mov	r0, r5
   36e50:	e28dd00c 	add	sp, sp, #12
   36e54:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   36e58:	e5940010 	ldr	r0, [r4, #16]
   36e5c:	eb001405 	bl	3be78 <CBcmFrameBuffer::GetDepth() const>
   36e60:	e3500008 	cmp	r0, #8
   36e64:	1affffd1 	bne	36db0 <CScreenDevice::Initialize()+0x7c>
   36e68:	e5940010 	ldr	r0, [r4, #16]
   36e6c:	eb001403 	bl	3be80 <CBcmFrameBuffer::GetBuffer() const>
   36e70:	e5840018 	str	r0, [r4, #24]
   36e74:	e5940010 	ldr	r0, [r4, #16]
   36e78:	eb001402 	bl	3be88 <CBcmFrameBuffer::GetSize() const>
   36e7c:	e584001c 	str	r0, [r4, #28]
   36e80:	e5940010 	ldr	r0, [r4, #16]
   36e84:	eb0013f9 	bl	3be70 <CBcmFrameBuffer::GetPitch() const>
   36e88:	e5840020 	str	r0, [r4, #32]
   36e8c:	e5940010 	ldr	r0, [r4, #16]
   36e90:	eb0013ee 	bl	3be50 <CBcmFrameBuffer::GetWidth() const>
   36e94:	e5840024 	str	r0, [r4, #36]	; 0x24
   36e98:	e5940010 	ldr	r0, [r4, #16]
   36e9c:	eb0013ed 	bl	3be58 <CBcmFrameBuffer::GetHeight() const>
   36ea0:	e5943020 	ldr	r3, [r4, #32]
   36ea4:	e1a07000 	mov	r7, r0
   36ea8:	e3130003 	tst	r3, #3
   36eac:	e5840028 	str	r0, [r4, #40]	; 0x28
   36eb0:	0affffcb 	beq	36de4 <CScreenDevice::Initialize()+0xb0>
   36eb4:	eaffffbd 	b	36db0 <CScreenDevice::Initialize()+0x7c>
   36eb8:	e1a00004 	mov	r0, r4
   36ebc:	ebfffbd4 	bl	35e14 <CScreenDevice::InvertCursor() [clone .part.6]>
   36ec0:	eaffffdb 	b	36e34 <CScreenDevice::Initialize()+0x100>
   36ec4:	0000ffdf 	.word	0x0000ffdf
   36ec8:	0004e4c8 	.word	0x0004e4c8

00036ecc <CScreenDevice::InvertCursor()>:
   36ecc:	e5903044 	ldr	r3, [r0, #68]	; 0x44
   36ed0:	e3530000 	cmp	r3, #0
   36ed4:	012fff1e 	bxeq	lr
   36ed8:	eafffbcd 	b	35e14 <CScreenDevice::InvertCursor() [clone .part.6]>

00036edc <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned char)>:
   36edc:	e590c024 	ldr	ip, [r0, #36]	; 0x24
   36ee0:	e15c0001 	cmp	ip, r1
   36ee4:	912fff1e 	bxls	lr
   36ee8:	eafffbc2 	b	35df8 <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned char) [clone .part.2]>

00036eec <CScreenDevice::GetPixel(unsigned int, unsigned int)>:
   36eec:	e5903024 	ldr	r3, [r0, #36]	; 0x24
   36ef0:	e1530001 	cmp	r3, r1
   36ef4:	9a000007 	bls	36f18 <CScreenDevice::GetPixel(unsigned int, unsigned int)+0x2c>
   36ef8:	e5903028 	ldr	r3, [r0, #40]	; 0x28
   36efc:	e1530002 	cmp	r3, r2
   36f00:	9a000004 	bls	36f18 <CScreenDevice::GetPixel(unsigned int, unsigned int)+0x2c>
   36f04:	e590c020 	ldr	ip, [r0, #32]
   36f08:	e5903018 	ldr	r3, [r0, #24]
   36f0c:	e022329c 	mla	r2, ip, r2, r3
   36f10:	e7d20001 	ldrb	r0, [r2, r1]
   36f14:	e12fff1e 	bx	lr
   36f18:	e3a00000 	mov	r0, #0
   36f1c:	e12fff1e 	bx	lr

00036f20 <CScreenDevice::Rotor(unsigned int, unsigned int)>:
   36f20:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   36f24:	e1a05000 	mov	r5, r0
   36f28:	e1a04001 	mov	r4, r1
   36f2c:	e24dd00c 	sub	sp, sp, #12
   36f30:	e2800014 	add	r0, r0, #20
   36f34:	e1a06002 	mov	r6, r2
   36f38:	e5957024 	ldr	r7, [r5, #36]	; 0x24
   36f3c:	eb000037 	bl	37020 <CCharGenerator::GetCharWidth() const>
   36f40:	e3a0c002 	mov	ip, #2
   36f44:	e2044003 	and	r4, r4, #3
   36f48:	e2844001 	add	r4, r4, #1
   36f4c:	e0040490 	mul	r4, r0, r4
   36f50:	e59f3024 	ldr	r3, [pc, #36]	; 36f7c <CScreenDevice::Rotor(unsigned int, unsigned int)+0x5c>
   36f54:	e2066003 	and	r6, r6, #3
   36f58:	e0833006 	add	r3, r3, r6
   36f5c:	e1d311dc 	ldrsb	r1, [r3, #28]
   36f60:	e0472004 	sub	r2, r7, r4
   36f64:	e1a00005 	mov	r0, r5
   36f68:	e58dc000 	str	ip, [sp]
   36f6c:	e3a03000 	mov	r3, #0
   36f70:	ebfffd64 	bl	36508 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned char)>
   36f74:	e28dd00c 	add	sp, sp, #12
   36f78:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   36f7c:	0004e568 	.word	0x0004e568

00036f80 <assertion_failed>:
   36f80:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   36f84:	e1a05000 	mov	r5, r0
   36f88:	e24dd01c 	sub	sp, sp, #28
   36f8c:	e1a06001 	mov	r6, r1
   36f90:	e1a07002 	mov	r7, r2
   36f94:	e1a0400d 	mov	r4, sp
   36f98:	eb000a7a 	bl	39988 <CInterruptSystem::DisableFIQ()>
   36f9c:	f1080040 	cpsie	f
   36fa0:	e28d0008 	add	r0, sp, #8
   36fa4:	eb00050a 	bl	383d4 <CString::CString()>
   36fa8:	e1a03007 	mov	r3, r7
   36fac:	e1a02006 	mov	r2, r6
   36fb0:	e28d0008 	add	r0, sp, #8
   36fb4:	e59f104c 	ldr	r1, [pc, #76]	; 37008 <assertion_failed+0x88>
   36fb8:	eb00088d 	bl	391f4 <CString::Format(char const*, ...)>
   36fbc:	e28d0008 	add	r0, sp, #8
   36fc0:	eb000519 	bl	3842c <CString::operator char const*() const>
   36fc4:	e1a01000 	mov	r1, r0
   36fc8:	e1a00004 	mov	r0, r4
   36fcc:	eb00007a 	bl	371bc <debug_stacktrace(unsigned int const*, char const*)>
   36fd0:	eb000166 	bl	37570 <CLogger::Get()>
   36fd4:	e1a04000 	mov	r4, r0
   36fd8:	e28d0008 	add	r0, sp, #8
   36fdc:	eb000512 	bl	3842c <CString::operator char const*() const>
   36fe0:	e59f3024 	ldr	r3, [pc, #36]	; 3700c <assertion_failed+0x8c>
   36fe4:	e1a01000 	mov	r1, r0
   36fe8:	e3a02000 	mov	r2, #0
   36fec:	e1a00004 	mov	r0, r4
   36ff0:	e58d5000 	str	r5, [sp]
   36ff4:	eb00023d 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   36ff8:	e28d0008 	add	r0, sp, #8
   36ffc:	eb0004c1 	bl	38308 <CString::~CString()>
   37000:	e28dd01c 	add	sp, sp, #28
   37004:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   37008:	0004e58c 	.word	0x0004e58c
   3700c:	0004e594 	.word	0x0004e594

00037010 <CCharGenerator::CCharGenerator()>:
   37010:	e3a03008 	mov	r3, #8
   37014:	e5803000 	str	r3, [r0]
   37018:	e12fff1e 	bx	lr

0003701c <CCharGenerator::~CCharGenerator()>:
   3701c:	e12fff1e 	bx	lr

00037020 <CCharGenerator::GetCharWidth() const>:
   37020:	e5900000 	ldr	r0, [r0]
   37024:	e12fff1e 	bx	lr

00037028 <CCharGenerator::GetCharHeight() const>:
   37028:	e3a00013 	mov	r0, #19
   3702c:	e12fff1e 	bx	lr

00037030 <CCharGenerator::GetUnderline() const>:
   37030:	e3a00010 	mov	r0, #16
   37034:	e12fff1e 	bx	lr

00037038 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const>:
   37038:	e6ef1071 	uxtb	r1, r1
   3703c:	e92d4070 	push	{r4, r5, r6, lr}
   37040:	e2414021 	sub	r4, r1, #33	; 0x21
   37044:	e35400de 	cmp	r4, #222	; 0xde
   37048:	8a00000e 	bhi	37088 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x50>
   3704c:	e1a06003 	mov	r6, r3
   37050:	e5903000 	ldr	r3, [r0]
   37054:	e1a05002 	mov	r5, r2
   37058:	e1530002 	cmp	r3, r2
   3705c:	9a00000b 	bls	37090 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x58>
   37060:	e356000f 	cmp	r6, #15
   37064:	8a000007 	bhi	37088 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x50>
   37068:	e3a02080 	mov	r2, #128	; 0x80
   3706c:	e59f1038 	ldr	r1, [pc, #56]	; 370ac <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x74>
   37070:	e0814204 	add	r4, r1, r4, lsl #4
   37074:	e7d43006 	ldrb	r3, [r4, r6]
   37078:	e0133552 	ands	r3, r3, r2, asr r5
   3707c:	13a00001 	movne	r0, #1
   37080:	03a00000 	moveq	r0, #0
   37084:	e8bd8070 	pop	{r4, r5, r6, pc}
   37088:	e3a00000 	mov	r0, #0
   3708c:	e8bd8070 	pop	{r4, r5, r6, pc}
   37090:	e3a0204e 	mov	r2, #78	; 0x4e
   37094:	e59f1014 	ldr	r1, [pc, #20]	; 370b0 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x78>
   37098:	e59f0014 	ldr	r0, [pc, #20]	; 370b4 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x7c>
   3709c:	ebffffb7 	bl	36f80 <assertion_failed>
   370a0:	e356000f 	cmp	r6, #15
   370a4:	9affffef 	bls	37068 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x30>
   370a8:	eafffff6 	b	37088 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x50>
   370ac:	0004e5ac 	.word	0x0004e5ac
   370b0:	0004f39c 	.word	0x0004f39c
   370b4:	0004f3b0 	.word	0x0004f3b0

000370b8 <debug_hexdump(void const*, unsigned int, char const*)>:
   370b8:	e3520000 	cmp	r2, #0
   370bc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   370c0:	e1a05001 	mov	r5, r1
   370c4:	e59f80e4 	ldr	r8, [pc, #228]	; 371b0 <debug_hexdump(void const*, unsigned int, char const*)+0xf8>
   370c8:	e1a04000 	mov	r4, r0
   370cc:	11a08002 	movne	r8, r2
   370d0:	e24dd048 	sub	sp, sp, #72	; 0x48
   370d4:	eb000125 	bl	37570 <CLogger::Get()>
   370d8:	e58d4004 	str	r4, [sp, #4]
   370dc:	e58d5000 	str	r5, [sp]
   370e0:	e1a01008 	mov	r1, r8
   370e4:	e59f30c8 	ldr	r3, [pc, #200]	; 371b4 <debug_hexdump(void const*, unsigned int, char const*)+0xfc>
   370e8:	e3a02004 	mov	r2, #4
   370ec:	eb0001ff 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   370f0:	e3550000 	cmp	r5, #0
   370f4:	0a00002b 	beq	371a8 <debug_hexdump(void const*, unsigned int, char const*)+0xf0>
   370f8:	e59f90b8 	ldr	r9, [pc, #184]	; 371b8 <debug_hexdump(void const*, unsigned int, char const*)+0x100>
   370fc:	ea000001 	b	37108 <debug_hexdump(void const*, unsigned int, char const*)+0x50>
   37100:	e2555010 	subs	r5, r5, #16
   37104:	0a000027 	beq	371a8 <debug_hexdump(void const*, unsigned int, char const*)+0xf0>
   37108:	eb000118 	bl	37570 <CLogger::Get()>
   3710c:	e5d4c00f 	ldrb	ip, [r4, #15]
   37110:	e5d4300e 	ldrb	r3, [r4, #14]
   37114:	e5d4200d 	ldrb	r2, [r4, #13]
   37118:	e5d4100c 	ldrb	r1, [r4, #12]
   3711c:	e5d4a00b 	ldrb	sl, [r4, #11]
   37120:	e5d4700a 	ldrb	r7, [r4, #10]
   37124:	e5d46009 	ldrb	r6, [r4, #9]
   37128:	e5d4e008 	ldrb	lr, [r4, #8]
   3712c:	e58dc040 	str	ip, [sp, #64]	; 0x40
   37130:	e5d4c007 	ldrb	ip, [r4, #7]
   37134:	e58d303c 	str	r3, [sp, #60]	; 0x3c
   37138:	e5d43006 	ldrb	r3, [r4, #6]
   3713c:	e58d2038 	str	r2, [sp, #56]	; 0x38
   37140:	e5d42005 	ldrb	r2, [r4, #5]
   37144:	e58d1034 	str	r1, [sp, #52]	; 0x34
   37148:	e5d41004 	ldrb	r1, [r4, #4]
   3714c:	e58da030 	str	sl, [sp, #48]	; 0x30
   37150:	e5d4a003 	ldrb	sl, [r4, #3]
   37154:	e58d702c 	str	r7, [sp, #44]	; 0x2c
   37158:	e5d47002 	ldrb	r7, [r4, #2]
   3715c:	e58d6028 	str	r6, [sp, #40]	; 0x28
   37160:	e5d46001 	ldrb	r6, [r4, #1]
   37164:	e58de024 	str	lr, [sp, #36]	; 0x24
   37168:	e5d4e000 	ldrb	lr, [r4]
   3716c:	e58dc020 	str	ip, [sp, #32]
   37170:	e58d301c 	str	r3, [sp, #28]
   37174:	e6ffc074 	uxth	ip, r4
   37178:	e58d2018 	str	r2, [sp, #24]
   3717c:	e58d1014 	str	r1, [sp, #20]
   37180:	e1a03009 	mov	r3, r9
   37184:	e3a02004 	mov	r2, #4
   37188:	e1a01008 	mov	r1, r8
   3718c:	e58da010 	str	sl, [sp, #16]
   37190:	e1cd60f8 	strd	r6, [sp, #8]
   37194:	e88d5000 	stm	sp, {ip, lr}
   37198:	eb0001d4 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   3719c:	e355000f 	cmp	r5, #15
   371a0:	e2844010 	add	r4, r4, #16
   371a4:	8affffd5 	bhi	37100 <debug_hexdump(void const*, unsigned int, char const*)+0x48>
   371a8:	e28dd048 	add	sp, sp, #72	; 0x48
   371ac:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   371b0:	0004f3c8 	.word	0x0004f3c8
   371b4:	0004f3d0 	.word	0x0004f3d0
   371b8:	0004f3f4 	.word	0x0004f3f4

000371bc <debug_stacktrace(unsigned int const*, char const*)>:
   371bc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   371c0:	e3a04000 	mov	r4, #0
   371c4:	e1510004 	cmp	r1, r4
   371c8:	e59f806c 	ldr	r8, [pc, #108]	; 3723c <debug_stacktrace(unsigned int const*, char const*)+0x80>
   371cc:	e24dd00c 	sub	sp, sp, #12
   371d0:	11a08001 	movne	r8, r1
   371d4:	e59f6064 	ldr	r6, [pc, #100]	; 37240 <debug_stacktrace(unsigned int const*, char const*)+0x84>
   371d8:	e59f7064 	ldr	r7, [pc, #100]	; 37244 <debug_stacktrace(unsigned int const*, char const*)+0x88>
   371dc:	e59f9064 	ldr	r9, [pc, #100]	; 37248 <debug_stacktrace(unsigned int const*, char const*)+0x8c>
   371e0:	e2405004 	sub	r5, r0, #4
   371e4:	ea000002 	b	371f4 <debug_stacktrace(unsigned int const*, char const*)+0x38>
   371e8:	e2844001 	add	r4, r4, #1
   371ec:	e3540040 	cmp	r4, #64	; 0x40
   371f0:	0a00000f 	beq	37234 <debug_stacktrace(unsigned int const*, char const*)+0x78>
   371f4:	e5b53004 	ldr	r3, [r5, #4]!
   371f8:	e1530006 	cmp	r3, r6
   371fc:	9afffff9 	bls	371e8 <debug_stacktrace(unsigned int const*, char const*)+0x2c>
   37200:	e1530007 	cmp	r3, r7
   37204:	2afffff7 	bcs	371e8 <debug_stacktrace(unsigned int const*, char const*)+0x2c>
   37208:	eb0000d8 	bl	37570 <CLogger::Get()>
   3720c:	e5952000 	ldr	r2, [r5]
   37210:	e1a03009 	mov	r3, r9
   37214:	e58d2004 	str	r2, [sp, #4]
   37218:	e58d4000 	str	r4, [sp]
   3721c:	e3a02004 	mov	r2, #4
   37220:	e1a01008 	mov	r1, r8
   37224:	e2844001 	add	r4, r4, #1
   37228:	eb0001b0 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   3722c:	e3540040 	cmp	r4, #64	; 0x40
   37230:	1affffef 	bne	371f4 <debug_stacktrace(unsigned int const*, char const*)+0x38>
   37234:	e28dd00c 	add	sp, sp, #12
   37238:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   3723c:	0004f3c8 	.word	0x0004f3c8
   37240:	00007fff 	.word	0x00007fff
   37244:	0003c0f8 	.word	0x0003c0f8
   37248:	0004f44c 	.word	0x0004f44c

0003724c <CDeviceNameService::CDeviceNameService()>:
   3724c:	e3a03000 	mov	r3, #0
   37250:	e92d4070 	push	{r4, r5, r6, lr}
   37254:	e59f5030 	ldr	r5, [pc, #48]	; 3728c <CDeviceNameService::CDeviceNameService()+0x40>
   37258:	e1a04000 	mov	r4, r0
   3725c:	e5952000 	ldr	r2, [r5]
   37260:	e5803000 	str	r3, [r0]
   37264:	e1520003 	cmp	r2, r3
   37268:	e5803004 	str	r3, [r0, #4]
   3726c:	0a000003 	beq	37280 <CDeviceNameService::CDeviceNameService()+0x34>
   37270:	e3a0201e 	mov	r2, #30
   37274:	e59f1014 	ldr	r1, [pc, #20]	; 37290 <CDeviceNameService::CDeviceNameService()+0x44>
   37278:	e59f0014 	ldr	r0, [pc, #20]	; 37294 <CDeviceNameService::CDeviceNameService()+0x48>
   3727c:	ebffff3f 	bl	36f80 <assertion_failed>
   37280:	e5854000 	str	r4, [r5]
   37284:	e1a00004 	mov	r0, r4
   37288:	e8bd8070 	pop	{r4, r5, r6, pc}
   3728c:	0017af8c 	.word	0x0017af8c
   37290:	0004f460 	.word	0x0004f460
   37294:	0004f478 	.word	0x0004f478

00037298 <CDeviceNameService::~CDeviceNameService()>:
   37298:	e5903000 	ldr	r3, [r0]
   3729c:	e92d4070 	push	{r4, r5, r6, lr}
   372a0:	e3530000 	cmp	r3, #0
   372a4:	e1a05000 	mov	r5, r0
   372a8:	0a00000d 	beq	372e4 <CDeviceNameService::~CDeviceNameService()+0x4c>
   372ac:	e3a06000 	mov	r6, #0
   372b0:	e5930004 	ldr	r0, [r3, #4]
   372b4:	e5934000 	ldr	r4, [r3]
   372b8:	e3500000 	cmp	r0, #0
   372bc:	0a000000 	beq	372c4 <CDeviceNameService::~CDeviceNameService()+0x2c>
   372c0:	ebfff417 	bl	34324 <operator delete[](void*)>
   372c4:	e5950000 	ldr	r0, [r5]
   372c8:	e3a01010 	mov	r1, #16
   372cc:	e5806004 	str	r6, [r0, #4]
   372d0:	e5806008 	str	r6, [r0, #8]
   372d4:	ebfff413 	bl	34328 <operator delete(void*, unsigned int)>
   372d8:	e2543000 	subs	r3, r4, #0
   372dc:	e5854000 	str	r4, [r5]
   372e0:	1afffff2 	bne	372b0 <CDeviceNameService::~CDeviceNameService()+0x18>
   372e4:	e3a02000 	mov	r2, #0
   372e8:	e59f3008 	ldr	r3, [pc, #8]	; 372f8 <CDeviceNameService::~CDeviceNameService()+0x60>
   372ec:	e1a00005 	mov	r0, r5
   372f0:	e5832000 	str	r2, [r3]
   372f4:	e8bd8070 	pop	{r4, r5, r6, pc}
   372f8:	0017af8c 	.word	0x0017af8c

000372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>:
   372fc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   37300:	e1a05000 	mov	r5, r0
   37304:	e5900004 	ldr	r0, [r0, #4]
   37308:	e1a06001 	mov	r6, r1
   3730c:	e3500000 	cmp	r0, #0
   37310:	e1a07002 	mov	r7, r2
   37314:	e1a08003 	mov	r8, r3
   37318:	1a000017 	bne	3737c <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0x80>
   3731c:	e3a00010 	mov	r0, #16
   37320:	ebfff3fc 	bl	34318 <operator new(unsigned int)>
   37324:	e3560000 	cmp	r6, #0
   37328:	e1a04000 	mov	r4, r0
   3732c:	0a000019 	beq	37398 <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0x9c>
   37330:	e1a00006 	mov	r0, r6
   37334:	ebfff7ae 	bl	351f4 <strlen>
   37338:	e2800001 	add	r0, r0, #1
   3733c:	ebfff3f6 	bl	3431c <operator new[](unsigned int)>
   37340:	e1a01006 	mov	r1, r6
   37344:	e5840004 	str	r0, [r4, #4]
   37348:	ebfff7cf 	bl	3528c <strcpy>
   3734c:	e3570000 	cmp	r7, #0
   37350:	0a00000b 	beq	37384 <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0x88>
   37354:	e5952004 	ldr	r2, [r5, #4]
   37358:	e5953000 	ldr	r3, [r5]
   3735c:	e3520000 	cmp	r2, #0
   37360:	e5847008 	str	r7, [r4, #8]
   37364:	e584800c 	str	r8, [r4, #12]
   37368:	e5843000 	str	r3, [r4]
   3736c:	e5854000 	str	r4, [r5]
   37370:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   37374:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   37378:	eafff41e 	b	343f8 <LeaveCritical>
   3737c:	ebfff3f1 	bl	34348 <EnterCritical>
   37380:	eaffffe5 	b	3731c <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0x20>
   37384:	e3a0203f 	mov	r2, #63	; 0x3f
   37388:	e59f101c 	ldr	r1, [pc, #28]	; 373ac <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0xb0>
   3738c:	e59f001c 	ldr	r0, [pc, #28]	; 373b0 <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0xb4>
   37390:	ebfffefa 	bl	36f80 <assertion_failed>
   37394:	eaffffee 	b	37354 <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0x58>
   37398:	e3a0203a 	mov	r2, #58	; 0x3a
   3739c:	e59f1008 	ldr	r1, [pc, #8]	; 373ac <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0xb0>
   373a0:	e59f000c 	ldr	r0, [pc, #12]	; 373b4 <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0xb8>
   373a4:	ebfffef5 	bl	36f80 <assertion_failed>
   373a8:	eaffffe0 	b	37330 <CDeviceNameService::AddDevice(char const*, CDevice*, int)+0x34>
   373ac:	0004f460 	.word	0x0004f460
   373b0:	0004f484 	.word	0x0004f484
   373b4:	0004a878 	.word	0x0004a878

000373b8 <CDeviceNameService::GetDevice(char const*, int)>:
   373b8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   373bc:	e2515000 	subs	r5, r1, #0
   373c0:	e1a07000 	mov	r7, r0
   373c4:	e1a06002 	mov	r6, r2
   373c8:	0a000031 	beq	37494 <CDeviceNameService::GetDevice(char const*, int)+0xdc>
   373cc:	e5970004 	ldr	r0, [r7, #4]
   373d0:	e3500000 	cmp	r0, #0
   373d4:	1a000018 	bne	3743c <CDeviceNameService::GetDevice(char const*, int)+0x84>
   373d8:	e5974000 	ldr	r4, [r7]
   373dc:	e3540000 	cmp	r4, #0
   373e0:	0a00001d 	beq	3745c <CDeviceNameService::GetDevice(char const*, int)+0xa4>
   373e4:	e59f90c4 	ldr	r9, [pc, #196]	; 374b0 <CDeviceNameService::GetDevice(char const*, int)+0xf8>
   373e8:	e59f80c4 	ldr	r8, [pc, #196]	; 374b4 <CDeviceNameService::GetDevice(char const*, int)+0xfc>
   373ec:	ea000009 	b	37418 <CDeviceNameService::GetDevice(char const*, int)+0x60>
   373f0:	e1a00005 	mov	r0, r5
   373f4:	ebfff788 	bl	3521c <strcmp>
   373f8:	e3500000 	cmp	r0, #0
   373fc:	1a000002 	bne	3740c <CDeviceNameService::GetDevice(char const*, int)+0x54>
   37400:	e594300c 	ldr	r3, [r4, #12]
   37404:	e1530006 	cmp	r3, r6
   37408:	0a000016 	beq	37468 <CDeviceNameService::GetDevice(char const*, int)+0xb0>
   3740c:	e5944000 	ldr	r4, [r4]
   37410:	e3540000 	cmp	r4, #0
   37414:	0a00000c 	beq	3744c <CDeviceNameService::GetDevice(char const*, int)+0x94>
   37418:	e5941004 	ldr	r1, [r4, #4]
   3741c:	e3510000 	cmp	r1, #0
   37420:	1afffff2 	bne	373f0 <CDeviceNameService::GetDevice(char const*, int)+0x38>
   37424:	e1a01009 	mov	r1, r9
   37428:	e3a02053 	mov	r2, #83	; 0x53
   3742c:	e1a00008 	mov	r0, r8
   37430:	ebfffed2 	bl	36f80 <assertion_failed>
   37434:	e5941004 	ldr	r1, [r4, #4]
   37438:	eaffffec 	b	373f0 <CDeviceNameService::GetDevice(char const*, int)+0x38>
   3743c:	ebfff3c1 	bl	34348 <EnterCritical>
   37440:	e5974000 	ldr	r4, [r7]
   37444:	e3540000 	cmp	r4, #0
   37448:	1affffe5 	bne	373e4 <CDeviceNameService::GetDevice(char const*, int)+0x2c>
   3744c:	e5973004 	ldr	r3, [r7, #4]
   37450:	e3530000 	cmp	r3, #0
   37454:	0a000000 	beq	3745c <CDeviceNameService::GetDevice(char const*, int)+0xa4>
   37458:	ebfff3e6 	bl	343f8 <LeaveCritical>
   3745c:	e3a04000 	mov	r4, #0
   37460:	e1a00004 	mov	r0, r4
   37464:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   37468:	e5973004 	ldr	r3, [r7, #4]
   3746c:	e5944008 	ldr	r4, [r4, #8]
   37470:	e3530000 	cmp	r3, #0
   37474:	1a00000b 	bne	374a8 <CDeviceNameService::GetDevice(char const*, int)+0xf0>
   37478:	e3540000 	cmp	r4, #0
   3747c:	1afffff7 	bne	37460 <CDeviceNameService::GetDevice(char const*, int)+0xa8>
   37480:	e3a0205b 	mov	r2, #91	; 0x5b
   37484:	e59f1024 	ldr	r1, [pc, #36]	; 374b0 <CDeviceNameService::GetDevice(char const*, int)+0xf8>
   37488:	e59f0028 	ldr	r0, [pc, #40]	; 374b8 <CDeviceNameService::GetDevice(char const*, int)+0x100>
   3748c:	ebfffebb 	bl	36f80 <assertion_failed>
   37490:	eafffff2 	b	37460 <CDeviceNameService::GetDevice(char const*, int)+0xa8>
   37494:	e3a0204c 	mov	r2, #76	; 0x4c
   37498:	e59f1010 	ldr	r1, [pc, #16]	; 374b0 <CDeviceNameService::GetDevice(char const*, int)+0xf8>
   3749c:	e59f0018 	ldr	r0, [pc, #24]	; 374bc <CDeviceNameService::GetDevice(char const*, int)+0x104>
   374a0:	ebfffeb6 	bl	36f80 <assertion_failed>
   374a4:	eaffffc8 	b	373cc <CDeviceNameService::GetDevice(char const*, int)+0x14>
   374a8:	ebfff3d2 	bl	343f8 <LeaveCritical>
   374ac:	eafffff1 	b	37478 <CDeviceNameService::GetDevice(char const*, int)+0xc0>
   374b0:	0004f460 	.word	0x0004f460
   374b4:	0004f494 	.word	0x0004f494
   374b8:	0004f4a8 	.word	0x0004f4a8
   374bc:	0004a878 	.word	0x0004a878

000374c0 <CDeviceNameService::Get()>:
   374c0:	e92d4010 	push	{r4, lr}
   374c4:	e59f4020 	ldr	r4, [pc, #32]	; 374ec <CDeviceNameService::Get()+0x2c>
   374c8:	e5940000 	ldr	r0, [r4]
   374cc:	e3500000 	cmp	r0, #0
   374d0:	18bd8010 	popne	{r4, pc}
   374d4:	e3a02069 	mov	r2, #105	; 0x69
   374d8:	e59f1010 	ldr	r1, [pc, #16]	; 374f0 <CDeviceNameService::Get()+0x30>
   374dc:	e59f0010 	ldr	r0, [pc, #16]	; 374f4 <CDeviceNameService::Get()+0x34>
   374e0:	ebfffea6 	bl	36f80 <assertion_failed>
   374e4:	e5940000 	ldr	r0, [r4]
   374e8:	e8bd8010 	pop	{r4, pc}
   374ec:	0017af8c 	.word	0x0017af8c
   374f0:	0004f460 	.word	0x0004f460
   374f4:	0004f4b8 	.word	0x0004f4b8

000374f8 <CLogger::CLogger(unsigned int, CTimer*)>:
   374f8:	e92d4010 	push	{r4, lr}
   374fc:	e3a03000 	mov	r3, #0
   37500:	e1a04000 	mov	r4, r0
   37504:	e3a00001 	mov	r0, #1
   37508:	e5843008 	str	r3, [r4, #8]
   3750c:	e5840018 	str	r0, [r4, #24]
   37510:	e584300c 	str	r3, [r4, #12]
   37514:	e5843010 	str	r3, [r4, #16]
   37518:	e5843014 	str	r3, [r4, #20]
   3751c:	e8840006 	stm	r4, {r1, r2}
   37520:	e3a00901 	mov	r0, #16384	; 0x4000
   37524:	ebfff37c 	bl	3431c <operator new[](unsigned int)>
   37528:	e59f300c 	ldr	r3, [pc, #12]	; 3753c <CLogger::CLogger(unsigned int, CTimer*)+0x44>
   3752c:	e584000c 	str	r0, [r4, #12]
   37530:	e5834000 	str	r4, [r3]
   37534:	e1a00004 	mov	r0, r4
   37538:	e8bd8010 	pop	{r4, pc}
   3753c:	0017af90 	.word	0x0017af90

00037540 <CLogger::~CLogger()>:
   37540:	e3a02000 	mov	r2, #0
   37544:	e92d4010 	push	{r4, lr}
   37548:	e1a04000 	mov	r4, r0
   3754c:	e590000c 	ldr	r0, [r0, #12]
   37550:	e59f3014 	ldr	r3, [pc, #20]	; 3756c <CLogger::~CLogger()+0x2c>
   37554:	e1500002 	cmp	r0, r2
   37558:	e5832000 	str	r2, [r3]
   3755c:	0a000000 	beq	37564 <CLogger::~CLogger()+0x24>
   37560:	ebfff36f 	bl	34324 <operator delete[](void*)>
   37564:	e1a00004 	mov	r0, r4
   37568:	e8bd8010 	pop	{r4, pc}
   3756c:	0017af90 	.word	0x0017af90

00037570 <CLogger::Get()>:
   37570:	e59f3004 	ldr	r3, [pc, #4]	; 3757c <CLogger::Get()+0xc>
   37574:	e5930000 	ldr	r0, [r3]
   37578:	e12fff1e 	bx	lr
   3757c:	0017af90 	.word	0x0017af90

00037580 <CLogger::Write(char const*)>:
   37580:	e92d4070 	push	{r4, r5, r6, lr}
   37584:	e1a04000 	mov	r4, r0
   37588:	e1a00001 	mov	r0, r1
   3758c:	e1a05001 	mov	r5, r1
   37590:	ebfff717 	bl	351f4 <strlen>
   37594:	e1a06000 	mov	r6, r0
   37598:	e5940008 	ldr	r0, [r4, #8]
   3759c:	e1a02006 	mov	r2, r6
   375a0:	e5903000 	ldr	r3, [r0]
   375a4:	e1a01005 	mov	r1, r5
   375a8:	e593300c 	ldr	r3, [r3, #12]
   375ac:	e12fff33 	blx	r3
   375b0:	e5940018 	ldr	r0, [r4, #24]
   375b4:	e3500000 	cmp	r0, #0
   375b8:	1a000018 	bne	37620 <CLogger::Write(char const*)+0xa0>
   375bc:	e59fe064 	ldr	lr, [pc, #100]	; 37628 <CLogger::Write(char const*)+0xa8>
   375c0:	e0850006 	add	r0, r5, r6
   375c4:	e1500005 	cmp	r0, r5
   375c8:	0a00000f 	beq	3760c <CLogger::Write(char const*)+0x8c>
   375cc:	e0d510d1 	ldrsb	r1, [r5], #1
   375d0:	e351000d 	cmp	r1, #13
   375d4:	0afffffa 	beq	375c4 <CLogger::Write(char const*)+0x44>
   375d8:	e5942010 	ldr	r2, [r4, #16]
   375dc:	e594c00c 	ldr	ip, [r4, #12]
   375e0:	e7cc1002 	strb	r1, [ip, r2]
   375e4:	e5943010 	ldr	r3, [r4, #16]
   375e8:	e5942014 	ldr	r2, [r4, #20]
   375ec:	e2833001 	add	r3, r3, #1
   375f0:	e003300e 	and	r3, r3, lr
   375f4:	e1530002 	cmp	r3, r2
   375f8:	e5843010 	str	r3, [r4, #16]
   375fc:	1afffff0 	bne	375c4 <CLogger::Write(char const*)+0x44>
   37600:	e2433001 	sub	r3, r3, #1
   37604:	e003300e 	and	r3, r3, lr
   37608:	e5843010 	str	r3, [r4, #16]
   3760c:	e5943018 	ldr	r3, [r4, #24]
   37610:	e3530000 	cmp	r3, #0
   37614:	08bd8070 	popeq	{r4, r5, r6, pc}
   37618:	e8bd4070 	pop	{r4, r5, r6, lr}
   3761c:	eafff375 	b	343f8 <LeaveCritical>
   37620:	ebfff348 	bl	34348 <EnterCritical>
   37624:	eaffffe4 	b	375bc <CLogger::Write(char const*)+0x3c>
   37628:	00003fff 	.word	0x00003fff

0003762c <CLogger::Read(void*, unsigned int)>:
   3762c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   37630:	e1a04000 	mov	r4, r0
   37634:	e5900018 	ldr	r0, [r0, #24]
   37638:	e1a05001 	mov	r5, r1
   3763c:	e3500000 	cmp	r0, #0
   37640:	e1a06002 	mov	r6, r2
   37644:	1a00001b 	bne	376b8 <CLogger::Read(void*, unsigned int)+0x8c>
   37648:	e1c421d0 	ldrd	r2, [r4, #16]
   3764c:	e1520003 	cmp	r2, r3
   37650:	0a000020 	beq	376d8 <CLogger::Read(void*, unsigned int)+0xac>
   37654:	e1a07006 	mov	r7, r6
   37658:	e3a0c000 	mov	ip, #0
   3765c:	e59f2094 	ldr	r2, [pc, #148]	; 376f8 <CLogger::Read(void*, unsigned int)+0xcc>
   37660:	ea00000a 	b	37690 <CLogger::Read(void*, unsigned int)+0x64>
   37664:	e594100c 	ldr	r1, [r4, #12]
   37668:	e28cc001 	add	ip, ip, #1
   3766c:	e19130d3 	ldrsb	r3, [r1, r3]
   37670:	e4c53001 	strb	r3, [r5], #1
   37674:	e5943014 	ldr	r3, [r4, #20]
   37678:	e5941010 	ldr	r1, [r4, #16]
   3767c:	e2833001 	add	r3, r3, #1
   37680:	e0033002 	and	r3, r3, r2
   37684:	e1530001 	cmp	r3, r1
   37688:	e5843014 	str	r3, [r4, #20]
   3768c:	0a000014 	beq	376e4 <CLogger::Read(void*, unsigned int)+0xb8>
   37690:	e15c0006 	cmp	ip, r6
   37694:	1afffff2 	bne	37664 <CLogger::Read(void*, unsigned int)+0x38>
   37698:	e5943018 	ldr	r3, [r4, #24]
   3769c:	e3530000 	cmp	r3, #0
   376a0:	1a000001 	bne	376ac <CLogger::Read(void*, unsigned int)+0x80>
   376a4:	e1a00007 	mov	r0, r7
   376a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   376ac:	ebfff351 	bl	343f8 <LeaveCritical>
   376b0:	e1a00007 	mov	r0, r7
   376b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   376b8:	ebfff322 	bl	34348 <EnterCritical>
   376bc:	e1c421d0 	ldrd	r2, [r4, #16]
   376c0:	e1520003 	cmp	r2, r3
   376c4:	1affffe2 	bne	37654 <CLogger::Read(void*, unsigned int)+0x28>
   376c8:	e5943018 	ldr	r3, [r4, #24]
   376cc:	e3530000 	cmp	r3, #0
   376d0:	0a000000 	beq	376d8 <CLogger::Read(void*, unsigned int)+0xac>
   376d4:	ebfff347 	bl	343f8 <LeaveCritical>
   376d8:	e3e07000 	mvn	r7, #0
   376dc:	e1a00007 	mov	r0, r7
   376e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   376e4:	e5943018 	ldr	r3, [r4, #24]
   376e8:	e1a0700c 	mov	r7, ip
   376ec:	e3530000 	cmp	r3, #0
   376f0:	0affffeb 	beq	376a4 <CLogger::Read(void*, unsigned int)+0x78>
   376f4:	eaffffec 	b	376ac <CLogger::Read(void*, unsigned int)+0x80>
   376f8:	00003fff 	.word	0x00003fff

000376fc <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)>:
   376fc:	e590c000 	ldr	ip, [r0]
   37700:	e152000c 	cmp	r2, ip
   37704:	812fff1e 	bxhi	lr
   37708:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   3770c:	e1a05002 	mov	r5, r2
   37710:	e24dd020 	sub	sp, sp, #32
   37714:	e1a04000 	mov	r4, r0
   37718:	e1a0000d 	mov	r0, sp
   3771c:	e1a07003 	mov	r7, r3
   37720:	e1a06001 	mov	r6, r1
   37724:	eb00032a 	bl	383d4 <CString::CString()>
   37728:	e3550000 	cmp	r5, #0
   3772c:	0a000022 	beq	377bc <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0xc0>
   37730:	e5940004 	ldr	r0, [r4, #4]
   37734:	e3500000 	cmp	r0, #0
   37738:	1a000025 	bne	377d4 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0xd8>
   3773c:	e1a01006 	mov	r1, r6
   37740:	e1a0000d 	mov	r0, sp
   37744:	eb000353 	bl	38498 <CString::Append(char const*)>
   37748:	e28d6010 	add	r6, sp, #16
   3774c:	e59f1188 	ldr	r1, [pc, #392]	; 378dc <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x1e0>
   37750:	e1a0000d 	mov	r0, sp
   37754:	eb00034f 	bl	38498 <CString::Append(char const*)>
   37758:	e1a00006 	mov	r0, r6
   3775c:	eb00031c 	bl	383d4 <CString::CString()>
   37760:	e1a01007 	mov	r1, r7
   37764:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
   37768:	e1a00006 	mov	r0, r6
   3776c:	eb000477 	bl	38950 <CString::FormatV(char const*, std::__va_list)>
   37770:	e1a00006 	mov	r0, r6
   37774:	eb00032c 	bl	3842c <CString::operator char const*() const>
   37778:	e1a01000 	mov	r1, r0
   3777c:	e1a0000d 	mov	r0, sp
   37780:	eb000344 	bl	38498 <CString::Append(char const*)>
   37784:	e59f1154 	ldr	r1, [pc, #340]	; 378e0 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x1e4>
   37788:	e1a0000d 	mov	r0, sp
   3778c:	eb000341 	bl	38498 <CString::Append(char const*)>
   37790:	e1a0000d 	mov	r0, sp
   37794:	eb000324 	bl	3842c <CString::operator char const*() const>
   37798:	e1a01000 	mov	r1, r0
   3779c:	e1a00004 	mov	r0, r4
   377a0:	ebffff76 	bl	37580 <CLogger::Write(char const*)>
   377a4:	e1a00006 	mov	r0, r6
   377a8:	eb0002d6 	bl	38308 <CString::~CString()>
   377ac:	e1a0000d 	mov	r0, sp
   377b0:	eb0002d4 	bl	38308 <CString::~CString()>
   377b4:	e28dd020 	add	sp, sp, #32
   377b8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   377bc:	e59f1120 	ldr	r1, [pc, #288]	; 378e4 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x1e8>
   377c0:	e1a0000d 	mov	r0, sp
   377c4:	eb00031e 	bl	38444 <CString::operator=(char const*)>
   377c8:	e5940004 	ldr	r0, [r4, #4]
   377cc:	e3500000 	cmp	r0, #0
   377d0:	0a00002e 	beq	37890 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x194>
   377d4:	ebfff413 	bl	34828 <CTimer::GetTimeString()>
   377d8:	e2508000 	subs	r8, r0, #0
   377dc:	0a00000a 	beq	3780c <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x110>
   377e0:	eb000311 	bl	3842c <CString::operator char const*() const>
   377e4:	e1a01000 	mov	r1, r0
   377e8:	e1a0000d 	mov	r0, sp
   377ec:	eb000329 	bl	38498 <CString::Append(char const*)>
   377f0:	e1a0000d 	mov	r0, sp
   377f4:	e59f10ec 	ldr	r1, [pc, #236]	; 378e8 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x1ec>
   377f8:	eb000326 	bl	38498 <CString::Append(char const*)>
   377fc:	e5983000 	ldr	r3, [r8]
   37800:	e1a00008 	mov	r0, r8
   37804:	e5933004 	ldr	r3, [r3, #4]
   37808:	e12fff33 	blx	r3
   3780c:	e1a01006 	mov	r1, r6
   37810:	e1a0000d 	mov	r0, sp
   37814:	eb00031f 	bl	38498 <CString::Append(char const*)>
   37818:	e28d6010 	add	r6, sp, #16
   3781c:	e59f10b8 	ldr	r1, [pc, #184]	; 378dc <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x1e0>
   37820:	e1a0000d 	mov	r0, sp
   37824:	eb00031b 	bl	38498 <CString::Append(char const*)>
   37828:	e1a00006 	mov	r0, r6
   3782c:	eb0002e8 	bl	383d4 <CString::CString()>
   37830:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
   37834:	e1a01007 	mov	r1, r7
   37838:	e1a00006 	mov	r0, r6
   3783c:	eb000443 	bl	38950 <CString::FormatV(char const*, std::__va_list)>
   37840:	e1a00006 	mov	r0, r6
   37844:	eb0002f8 	bl	3842c <CString::operator char const*() const>
   37848:	e1a01000 	mov	r1, r0
   3784c:	e1a0000d 	mov	r0, sp
   37850:	eb000310 	bl	38498 <CString::Append(char const*)>
   37854:	e3550000 	cmp	r5, #0
   37858:	1affffc9 	bne	37784 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x88>
   3785c:	e1a0000d 	mov	r0, sp
   37860:	e59f1084 	ldr	r1, [pc, #132]	; 378ec <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x1f0>
   37864:	eb00030b 	bl	38498 <CString::Append(char const*)>
   37868:	e59f1070 	ldr	r1, [pc, #112]	; 378e0 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x1e4>
   3786c:	e1a0000d 	mov	r0, sp
   37870:	eb000308 	bl	38498 <CString::Append(char const*)>
   37874:	e1a0000d 	mov	r0, sp
   37878:	eb0002eb 	bl	3842c <CString::operator char const*() const>
   3787c:	e1a01000 	mov	r1, r0
   37880:	e1a00004 	mov	r0, r4
   37884:	ebffff3d 	bl	37580 <CLogger::Write(char const*)>
   37888:	ebfff307 	bl	344ac <halt>
   3788c:	eaffffc4 	b	377a4 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0xa8>
   37890:	e1a01006 	mov	r1, r6
   37894:	e1a0000d 	mov	r0, sp
   37898:	eb0002fe 	bl	38498 <CString::Append(char const*)>
   3789c:	e28d6010 	add	r6, sp, #16
   378a0:	e59f1034 	ldr	r1, [pc, #52]	; 378dc <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x1e0>
   378a4:	e1a0000d 	mov	r0, sp
   378a8:	eb0002fa 	bl	38498 <CString::Append(char const*)>
   378ac:	e1a00006 	mov	r0, r6
   378b0:	eb0002c7 	bl	383d4 <CString::CString()>
   378b4:	e1a01007 	mov	r1, r7
   378b8:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
   378bc:	e1a00006 	mov	r0, r6
   378c0:	eb000422 	bl	38950 <CString::FormatV(char const*, std::__va_list)>
   378c4:	e1a00006 	mov	r0, r6
   378c8:	eb0002d7 	bl	3842c <CString::operator char const*() const>
   378cc:	e1a01000 	mov	r1, r0
   378d0:	e1a0000d 	mov	r0, sp
   378d4:	eb0002ef 	bl	38498 <CString::Append(char const*)>
   378d8:	eaffffdf 	b	3785c <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x160>
   378dc:	0004f4cc 	.word	0x0004f4cc
   378e0:	0004d7cc 	.word	0x0004d7cc
   378e4:	0004f4c4 	.word	0x0004f4c4
   378e8:	0004d7bc 	.word	0x0004d7bc
   378ec:	0004f4d0 	.word	0x0004f4d0

000378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>:
   378f0:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
   378f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   378f8:	e24dd010 	sub	sp, sp, #16
   378fc:	e28dc018 	add	ip, sp, #24
   37900:	e58dc000 	str	ip, [sp]
   37904:	e59d3014 	ldr	r3, [sp, #20]
   37908:	e58dc00c 	str	ip, [sp, #12]
   3790c:	ebffff7a 	bl	376fc <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)>
   37910:	e28dd010 	add	sp, sp, #16
   37914:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   37918:	e28dd004 	add	sp, sp, #4
   3791c:	e12fff1e 	bx	lr

00037920 <CLogger::Initialize(CDevice*)>:
   37920:	e92d4010 	push	{r4, lr}
   37924:	e5801008 	str	r1, [r0, #8]
   37928:	e24dd008 	sub	sp, sp, #8
   3792c:	e1a04000 	mov	r4, r0
   37930:	eb000d41 	bl	3ae3c <CMachineInfo::Get()>
   37934:	eb000ccc 	bl	3ac6c <CMachineInfo::GetMachineName() const>
   37938:	e59f301c 	ldr	r3, [pc, #28]	; 3795c <CLogger::Initialize(CDevice*)+0x3c>
   3793c:	e58d0000 	str	r0, [sp]
   37940:	e3a02003 	mov	r2, #3
   37944:	e1a00004 	mov	r0, r4
   37948:	e59f1010 	ldr	r1, [pc, #16]	; 37960 <CLogger::Initialize(CDevice*)+0x40>
   3794c:	ebffffe7 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   37950:	e3a00001 	mov	r0, #1
   37954:	e28dd008 	add	sp, sp, #8
   37958:	e8bd8010 	pop	{r4, pc}
   3795c:	0004f4d8 	.word	0x0004f4d8
   37960:	0004f4f4 	.word	0x0004f4f4

00037964 <CSerialDevice::Read(void*, unsigned int)>:
   37964:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   37968:	e2516000 	subs	r6, r1, #0
   3796c:	e1a04000 	mov	r4, r0
   37970:	e1a05002 	mov	r5, r2
   37974:	0a000059 	beq	37ae0 <CSerialDevice::Read(void*, unsigned int)+0x17c>
   37978:	e59430a4 	ldr	r3, [r4, #164]	; 0xa4
   3797c:	e3530000 	cmp	r3, #0
   37980:	0a000033 	beq	37a54 <CSerialDevice::Read(void*, unsigned int)+0xf0>
   37984:	e2847a01 	add	r7, r4, #4096	; 0x1000
   37988:	e59700c8 	ldr	r0, [r7, #200]	; 0xc8
   3798c:	e3500000 	cmp	r0, #0
   37990:	1a00002a 	bne	37a40 <CSerialDevice::Read(void*, unsigned int)+0xdc>
   37994:	e59438b8 	ldr	r3, [r4, #2232]	; 0x8b8
   37998:	e3530000 	cmp	r3, #0
   3799c:	ba00001f 	blt	37a20 <CSerialDevice::Read(void*, unsigned int)+0xbc>
   379a0:	e3550000 	cmp	r5, #0
   379a4:	0a000020 	beq	37a2c <CSerialDevice::Read(void*, unsigned int)+0xc8>
   379a8:	e59438b0 	ldr	r3, [r4, #2224]	; 0x8b0
   379ac:	e59428b4 	ldr	r2, [r4, #2228]	; 0x8b4
   379b0:	e1520003 	cmp	r2, r3
   379b4:	0a000054 	beq	37b0c <CSerialDevice::Read(void*, unsigned int)+0x1a8>
   379b8:	e0862005 	add	r2, r6, r5
   379bc:	e1a01006 	mov	r1, r6
   379c0:	e59fc154 	ldr	ip, [pc, #340]	; 37b1c <CSerialDevice::Read(void*, unsigned int)+0x1b8>
   379c4:	ea000003 	b	379d8 <CSerialDevice::Read(void*, unsigned int)+0x74>
   379c8:	e59408b0 	ldr	r0, [r4, #2224]	; 0x8b0
   379cc:	e59438b4 	ldr	r3, [r4, #2228]	; 0x8b4
   379d0:	e1500003 	cmp	r0, r3
   379d4:	0a000014 	beq	37a2c <CSerialDevice::Read(void*, unsigned int)+0xc8>
   379d8:	e59438b4 	ldr	r3, [r4, #2228]	; 0x8b4
   379dc:	e2830001 	add	r0, r3, #1
   379e0:	e58408b4 	str	r0, [r4, #2228]	; 0x8b4
   379e4:	e0843003 	add	r3, r4, r3
   379e8:	e5d330b0 	ldrb	r3, [r3, #176]	; 0xb0
   379ec:	e4c13001 	strb	r3, [r1], #1
   379f0:	e59438b4 	ldr	r3, [r4, #2228]	; 0x8b4
   379f4:	e1510002 	cmp	r1, r2
   379f8:	e003300c 	and	r3, r3, ip
   379fc:	e58438b4 	str	r3, [r4, #2228]	; 0x8b4
   37a00:	e0415006 	sub	r5, r1, r6
   37a04:	1affffef 	bne	379c8 <CSerialDevice::Read(void*, unsigned int)+0x64>
   37a08:	e59730c8 	ldr	r3, [r7, #200]	; 0xc8
   37a0c:	e3530000 	cmp	r3, #0
   37a10:	0a000008 	beq	37a38 <CSerialDevice::Read(void*, unsigned int)+0xd4>
   37a14:	ebfff277 	bl	343f8 <LeaveCritical>
   37a18:	e1a00005 	mov	r0, r5
   37a1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   37a20:	e3a03000 	mov	r3, #0
   37a24:	e59458b8 	ldr	r5, [r4, #2232]	; 0x8b8
   37a28:	e58438b8 	str	r3, [r4, #2232]	; 0x8b8
   37a2c:	e59730c8 	ldr	r3, [r7, #200]	; 0xc8
   37a30:	e3530000 	cmp	r3, #0
   37a34:	1afffff6 	bne	37a14 <CSerialDevice::Read(void*, unsigned int)+0xb0>
   37a38:	e1a00005 	mov	r0, r5
   37a3c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   37a40:	ebfff240 	bl	34348 <EnterCritical>
   37a44:	e59438b8 	ldr	r3, [r4, #2232]	; 0x8b8
   37a48:	e3530000 	cmp	r3, #0
   37a4c:	aaffffd3 	bge	379a0 <CSerialDevice::Read(void*, unsigned int)+0x3c>
   37a50:	eafffff2 	b	37a20 <CSerialDevice::Read(void*, unsigned int)+0xbc>
   37a54:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   37a58:	e3550000 	cmp	r5, #0
   37a5c:	0a00001b 	beq	37ad0 <CSerialDevice::Read(void*, unsigned int)+0x16c>
   37a60:	e59f00b8 	ldr	r0, [pc, #184]	; 37b20 <CSerialDevice::Read(void*, unsigned int)+0x1bc>
   37a64:	e5902018 	ldr	r2, [r0, #24]
   37a68:	e3120010 	tst	r2, #16
   37a6c:	1a000028 	bne	37b14 <CSerialDevice::Read(void*, unsigned int)+0x1b0>
   37a70:	e5903000 	ldr	r3, [r0]
   37a74:	e3130b01 	tst	r3, #1024	; 0x400
   37a78:	1a00001d 	bne	37af4 <CSerialDevice::Read(void*, unsigned int)+0x190>
   37a7c:	e3130b02 	tst	r3, #2048	; 0x800
   37a80:	1a00001d 	bne	37afc <CSerialDevice::Read(void*, unsigned int)+0x198>
   37a84:	e3130c01 	tst	r3, #256	; 0x100
   37a88:	00862005 	addeq	r2, r6, r5
   37a8c:	01a01006 	moveq	r1, r6
   37a90:	0a00000a 	beq	37ac0 <CSerialDevice::Read(void*, unsigned int)+0x15c>
   37a94:	ea00001a 	b	37b04 <CSerialDevice::Read(void*, unsigned int)+0x1a0>
   37a98:	e5903018 	ldr	r3, [r0, #24]
   37a9c:	e3130010 	tst	r3, #16
   37aa0:	1a00000a 	bne	37ad0 <CSerialDevice::Read(void*, unsigned int)+0x16c>
   37aa4:	e5903000 	ldr	r3, [r0]
   37aa8:	e3130b01 	tst	r3, #1024	; 0x400
   37aac:	1a000010 	bne	37af4 <CSerialDevice::Read(void*, unsigned int)+0x190>
   37ab0:	e3130b02 	tst	r3, #2048	; 0x800
   37ab4:	1a000010 	bne	37afc <CSerialDevice::Read(void*, unsigned int)+0x198>
   37ab8:	e3130c01 	tst	r3, #256	; 0x100
   37abc:	1a000010 	bne	37b04 <CSerialDevice::Read(void*, unsigned int)+0x1a0>
   37ac0:	e4c13001 	strb	r3, [r1], #1
   37ac4:	e1510002 	cmp	r1, r2
   37ac8:	e0415006 	sub	r5, r1, r6
   37acc:	1afffff1 	bne	37a98 <CSerialDevice::Read(void*, unsigned int)+0x134>
   37ad0:	e3a03000 	mov	r3, #0
   37ad4:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   37ad8:	e1a00005 	mov	r0, r5
   37adc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   37ae0:	e3a02c01 	mov	r2, #256	; 0x100
   37ae4:	e59f1038 	ldr	r1, [pc, #56]	; 37b24 <CSerialDevice::Read(void*, unsigned int)+0x1c0>
   37ae8:	e59f0038 	ldr	r0, [pc, #56]	; 37b28 <CSerialDevice::Read(void*, unsigned int)+0x1c4>
   37aec:	ebfffd23 	bl	36f80 <assertion_failed>
   37af0:	eaffffa0 	b	37978 <CSerialDevice::Read(void*, unsigned int)+0x14>
   37af4:	e3e05000 	mvn	r5, #0
   37af8:	eafffff4 	b	37ad0 <CSerialDevice::Read(void*, unsigned int)+0x16c>
   37afc:	e3e05001 	mvn	r5, #1
   37b00:	eafffff2 	b	37ad0 <CSerialDevice::Read(void*, unsigned int)+0x16c>
   37b04:	e3e05002 	mvn	r5, #2
   37b08:	eafffff0 	b	37ad0 <CSerialDevice::Read(void*, unsigned int)+0x16c>
   37b0c:	e3a05000 	mov	r5, #0
   37b10:	eaffffc5 	b	37a2c <CSerialDevice::Read(void*, unsigned int)+0xc8>
   37b14:	e1a05003 	mov	r5, r3
   37b18:	eaffffec 	b	37ad0 <CSerialDevice::Read(void*, unsigned int)+0x16c>
   37b1c:	000007ff 	.word	0x000007ff
   37b20:	20201000 	.word	0x20201000
   37b24:	0004f518 	.word	0x0004f518
   37b28:	0004f524 	.word	0x0004f524

00037b2c <CSerialDevice::CSerialDevice(CInterruptSystem*, int)>:
   37b2c:	e92d4070 	push	{r4, r5, r6, lr}
   37b30:	e1a04000 	mov	r4, r0
   37b34:	e1a05002 	mov	r5, r2
   37b38:	e1a06001 	mov	r6, r1
   37b3c:	ebfff6c8 	bl	35664 <CDevice::CDevice()>
   37b40:	e1a00004 	mov	r0, r4
   37b44:	e3a03000 	mov	r3, #0
   37b48:	e59f1094 	ldr	r1, [pc, #148]	; 37be4 <CSerialDevice::CSerialDevice(CInterruptSystem*, int)+0xb8>
   37b4c:	e1a02003 	mov	r2, r3
   37b50:	e4801004 	str	r1, [r0], #4
   37b54:	e3a01020 	mov	r1, #32
   37b58:	ebfff04b 	bl	33c8c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>
   37b5c:	e3a03000 	mov	r3, #0
   37b60:	e284002c 	add	r0, r4, #44	; 0x2c
   37b64:	e1a02003 	mov	r2, r3
   37b68:	e3a01021 	mov	r1, #33	; 0x21
   37b6c:	ebfff046 	bl	33c8c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>
   37b70:	e2840054 	add	r0, r4, #84	; 0x54
   37b74:	e3a03000 	mov	r3, #0
   37b78:	e3a02004 	mov	r2, #4
   37b7c:	e3a0100e 	mov	r1, #14
   37b80:	ebfff041 	bl	33c8c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>
   37b84:	e284007c 	add	r0, r4, #124	; 0x7c
   37b88:	e3a03000 	mov	r3, #0
   37b8c:	e3a02004 	mov	r2, #4
   37b90:	e3a0100f 	mov	r1, #15
   37b94:	ebfff03c 	bl	33c8c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>
   37b98:	e3550000 	cmp	r5, #0
   37b9c:	e3a03000 	mov	r3, #0
   37ba0:	e3a01001 	mov	r1, #1
   37ba4:	13a0c002 	movne	ip, #2
   37ba8:	03a0c001 	moveq	ip, #1
   37bac:	e2842a01 	add	r2, r4, #4096	; 0x1000
   37bb0:	e58438b0 	str	r3, [r4, #2224]	; 0x8b0
   37bb4:	e58460a4 	str	r6, [r4, #164]	; 0xa4
   37bb8:	e58438b4 	str	r3, [r4, #2228]	; 0x8b4
   37bbc:	e58450a8 	str	r5, [r4, #168]	; 0xa8
   37bc0:	e58430ac 	str	r3, [r4, #172]	; 0xac
   37bc4:	e58438b8 	str	r3, [r4, #2232]	; 0x8b8
   37bc8:	e1a00004 	mov	r0, r4
   37bcc:	e58230bc 	str	r3, [r2, #188]	; 0xbc
   37bd0:	e582c0c8 	str	ip, [r2, #200]	; 0xc8
   37bd4:	e58210c4 	str	r1, [r2, #196]	; 0xc4
   37bd8:	e58230c0 	str	r3, [r2, #192]	; 0xc0
   37bdc:	e58210cc 	str	r1, [r2, #204]	; 0xcc
   37be0:	e8bd8070 	pop	{r4, r5, r6, pc}
   37be4:	0004f504 	.word	0x0004f504

00037be8 <CSerialDevice::Initialize(unsigned int)>:
   37be8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   37bec:	e1a08001 	mov	r8, r1
   37bf0:	e1a04000 	mov	r4, r0
   37bf4:	eb000c90 	bl	3ae3c <CMachineInfo::Get()>
   37bf8:	e3a01002 	mov	r1, #2
   37bfc:	eb000c30 	bl	3acc4 <CMachineInfo::GetClockRate(unsigned int) const>
   37c00:	e2505000 	subs	r5, r0, #0
   37c04:	e2487f4b 	sub	r7, r8, #300	; 0x12c
   37c08:	e1a06208 	lsl	r6, r8, #4
   37c0c:	0a000045 	beq	37d28 <CSerialDevice::Initialize(unsigned int)+0x140>
   37c10:	e59f3158 	ldr	r3, [pc, #344]	; 37d70 <CSerialDevice::Initialize(unsigned int)+0x188>
   37c14:	e1570003 	cmp	r7, r3
   37c18:	8a00003d 	bhi	37d14 <CSerialDevice::Initialize(unsigned int)+0x12c>
   37c1c:	e1a01006 	mov	r1, r6
   37c20:	e1a00005 	mov	r0, r5
   37c24:	ebfff0a5 	bl	33ec0 <__aeabi_uidiv>
   37c28:	e59f3144 	ldr	r3, [pc, #324]	; 37d74 <CSerialDevice::Initialize(unsigned int)+0x18c>
   37c2c:	e2402001 	sub	r2, r0, #1
   37c30:	e1520003 	cmp	r2, r3
   37c34:	e1a07000 	mov	r7, r0
   37c38:	8a000042 	bhi	37d48 <CSerialDevice::Initialize(unsigned int)+0x160>
   37c3c:	e1a00005 	mov	r0, r5
   37c40:	e1a01006 	mov	r1, r6
   37c44:	ebfff0a1 	bl	33ed0 <__aeabi_uidivmod>
   37c48:	e1a00181 	lsl	r0, r1, #3
   37c4c:	e1a01008 	mov	r1, r8
   37c50:	ebfff09a 	bl	33ec0 <__aeabi_uidiv>
   37c54:	e2005001 	and	r5, r0, #1
   37c58:	e08550a0 	add	r5, r5, r0, lsr #1
   37c5c:	e355003f 	cmp	r5, #63	; 0x3f
   37c60:	8a00003d 	bhi	37d5c <CSerialDevice::Initialize(unsigned int)+0x174>
   37c64:	e59400a4 	ldr	r0, [r4, #164]	; 0xa4
   37c68:	e3500000 	cmp	r0, #0
   37c6c:	0a000008 	beq	37c94 <CSerialDevice::Initialize(unsigned int)+0xac>
   37c70:	e59430a8 	ldr	r3, [r4, #168]	; 0xa8
   37c74:	e59f20fc 	ldr	r2, [pc, #252]	; 37d78 <CSerialDevice::Initialize(unsigned int)+0x190>
   37c78:	e3530000 	cmp	r3, #0
   37c7c:	e3a01039 	mov	r1, #57	; 0x39
   37c80:	e1a03004 	mov	r3, r4
   37c84:	0a000020 	beq	37d0c <CSerialDevice::Initialize(unsigned int)+0x124>
   37c88:	eb00071a 	bl	398f8 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)>
   37c8c:	e3a03001 	mov	r3, #1
   37c90:	e58430ac 	str	r3, [r4, #172]	; 0xac
   37c94:	e3a02000 	mov	r2, #0
   37c98:	ee072f9a 	mcr	15, 0, r2, cr7, cr10, {4}
   37c9c:	e59f30d8 	ldr	r3, [pc, #216]	; 37d7c <CSerialDevice::Initialize(unsigned int)+0x194>
   37ca0:	e59f10d8 	ldr	r1, [pc, #216]	; 37d80 <CSerialDevice::Initialize(unsigned int)+0x198>
   37ca4:	e5832038 	str	r2, [r3, #56]	; 0x38
   37ca8:	e5831044 	str	r1, [r3, #68]	; 0x44
   37cac:	e5837024 	str	r7, [r3, #36]	; 0x24
   37cb0:	e5835028 	str	r5, [r3, #40]	; 0x28
   37cb4:	e59420a4 	ldr	r2, [r4, #164]	; 0xa4
   37cb8:	e3a05000 	mov	r5, #0
   37cbc:	e3520000 	cmp	r2, #0
   37cc0:	13a02e45 	movne	r2, #1104	; 0x450
   37cc4:	03a02060 	moveq	r2, #96	; 0x60
   37cc8:	13a00009 	movne	r0, #9
   37ccc:	13a01070 	movne	r1, #112	; 0x70
   37cd0:	15830034 	strne	r0, [r3, #52]	; 0x34
   37cd4:	0583202c 	streq	r2, [r3, #44]	; 0x2c
   37cd8:	1583102c 	strne	r1, [r3, #44]	; 0x2c
   37cdc:	15832038 	strne	r2, [r3, #56]	; 0x38
   37ce0:	e59f3094 	ldr	r3, [pc, #148]	; 37d7c <CSerialDevice::Initialize(unsigned int)+0x194>
   37ce4:	e59f2098 	ldr	r2, [pc, #152]	; 37d84 <CSerialDevice::Initialize(unsigned int)+0x19c>
   37ce8:	e5832030 	str	r2, [r3, #48]	; 0x30
   37cec:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   37cf0:	ebfffdf2 	bl	374c0 <CDeviceNameService::Get()>
   37cf4:	e1a03005 	mov	r3, r5
   37cf8:	e1a02004 	mov	r2, r4
   37cfc:	e59f1084 	ldr	r1, [pc, #132]	; 37d88 <CSerialDevice::Initialize(unsigned int)+0x1a0>
   37d00:	ebfffd7d 	bl	372fc <CDeviceNameService::AddDevice(char const*, CDevice*, int)>
   37d04:	e3a00001 	mov	r0, #1
   37d08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   37d0c:	eb00068c 	bl	39744 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   37d10:	eaffffdd 	b	37c8c <CSerialDevice::Initialize(unsigned int)+0xa4>
   37d14:	e3a0208b 	mov	r2, #139	; 0x8b
   37d18:	e59f106c 	ldr	r1, [pc, #108]	; 37d8c <CSerialDevice::Initialize(unsigned int)+0x1a4>
   37d1c:	e59f006c 	ldr	r0, [pc, #108]	; 37d90 <CSerialDevice::Initialize(unsigned int)+0x1a8>
   37d20:	ebfffc96 	bl	36f80 <assertion_failed>
   37d24:	eaffffbc 	b	37c1c <CSerialDevice::Initialize(unsigned int)+0x34>
   37d28:	e3a02089 	mov	r2, #137	; 0x89
   37d2c:	e59f1058 	ldr	r1, [pc, #88]	; 37d8c <CSerialDevice::Initialize(unsigned int)+0x1a4>
   37d30:	e59f005c 	ldr	r0, [pc, #92]	; 37d94 <CSerialDevice::Initialize(unsigned int)+0x1ac>
   37d34:	ebfffc91 	bl	36f80 <assertion_failed>
   37d38:	e59f3030 	ldr	r3, [pc, #48]	; 37d70 <CSerialDevice::Initialize(unsigned int)+0x188>
   37d3c:	e1570003 	cmp	r7, r3
   37d40:	91a07005 	movls	r7, r5
   37d44:	8afffff2 	bhi	37d14 <CSerialDevice::Initialize(unsigned int)+0x12c>
   37d48:	e3a0208e 	mov	r2, #142	; 0x8e
   37d4c:	e59f1038 	ldr	r1, [pc, #56]	; 37d8c <CSerialDevice::Initialize(unsigned int)+0x1a4>
   37d50:	e59f0040 	ldr	r0, [pc, #64]	; 37d98 <CSerialDevice::Initialize(unsigned int)+0x1b0>
   37d54:	ebfffc89 	bl	36f80 <assertion_failed>
   37d58:	eaffffb7 	b	37c3c <CSerialDevice::Initialize(unsigned int)+0x54>
   37d5c:	e3a02091 	mov	r2, #145	; 0x91
   37d60:	e59f1024 	ldr	r1, [pc, #36]	; 37d8c <CSerialDevice::Initialize(unsigned int)+0x1a4>
   37d64:	e59f0030 	ldr	r0, [pc, #48]	; 37d9c <CSerialDevice::Initialize(unsigned int)+0x1b4>
   37d68:	ebfffc84 	bl	36f80 <assertion_failed>
   37d6c:	eaffffbc 	b	37c64 <CSerialDevice::Initialize(unsigned int)+0x7c>
   37d70:	003d07d4 	.word	0x003d07d4
   37d74:	0000fffe 	.word	0x0000fffe
   37d78:	000381e8 	.word	0x000381e8
   37d7c:	20201000 	.word	0x20201000
   37d80:	000007ff 	.word	0x000007ff
   37d84:	00000301 	.word	0x00000301
   37d88:	0004f5a4 	.word	0x0004f5a4
   37d8c:	0004f518 	.word	0x0004f518
   37d90:	0004f540 	.word	0x0004f540
   37d94:	0004f530 	.word	0x0004f530
   37d98:	0004f56c 	.word	0x0004f56c
   37d9c:	0004f590 	.word	0x0004f590

00037da0 <CSerialDevice::GetOptions() const>:
   37da0:	e2800a01 	add	r0, r0, #4096	; 0x1000
   37da4:	e59000c4 	ldr	r0, [r0, #196]	; 0xc4
   37da8:	e12fff1e 	bx	lr

00037dac <CSerialDevice::SetOptions(unsigned int)>:
   37dac:	e2800a01 	add	r0, r0, #4096	; 0x1000
   37db0:	e58010c4 	str	r1, [r0, #196]	; 0xc4
   37db4:	e12fff1e 	bx	lr

00037db8 <CSerialDevice::Write(unsigned char)>:
   37db8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   37dbc:	e59030a4 	ldr	r3, [r0, #164]	; 0xa4
   37dc0:	e3530000 	cmp	r3, #0
   37dc4:	0a000027 	beq	37e68 <CSerialDevice::Write(unsigned char)+0xb0>
   37dc8:	e2805a01 	add	r5, r0, #4096	; 0x1000
   37dcc:	e59520c8 	ldr	r2, [r5, #200]	; 0xc8
   37dd0:	e1a06001 	mov	r6, r1
   37dd4:	e3520000 	cmp	r2, #0
   37dd8:	e1a04000 	mov	r4, r0
   37ddc:	1a000015 	bne	37e38 <CSerialDevice::Write(unsigned char)+0x80>
   37de0:	e59530bc 	ldr	r3, [r5, #188]	; 0xbc
   37de4:	e59510c0 	ldr	r1, [r5, #192]	; 0xc0
   37de8:	e2833001 	add	r3, r3, #1
   37dec:	e1a03a83 	lsl	r3, r3, #21
   37df0:	e1a03aa3 	lsr	r3, r3, #21
   37df4:	e1530001 	cmp	r3, r1
   37df8:	0a000024 	beq	37e90 <CSerialDevice::Write(unsigned char)+0xd8>
   37dfc:	e3a07001 	mov	r7, #1
   37e00:	e59530bc 	ldr	r3, [r5, #188]	; 0xbc
   37e04:	e0840003 	add	r0, r4, r3
   37e08:	e0833007 	add	r3, r3, r7
   37e0c:	e58530bc 	str	r3, [r5, #188]	; 0xbc
   37e10:	e5c068bc 	strb	r6, [r0, #2236]	; 0x8bc
   37e14:	e59530bc 	ldr	r3, [r5, #188]	; 0xbc
   37e18:	e1a03a83 	lsl	r3, r3, #21
   37e1c:	e1a03aa3 	lsr	r3, r3, #21
   37e20:	e58530bc 	str	r3, [r5, #188]	; 0xbc
   37e24:	e3520000 	cmp	r2, #0
   37e28:	0a000000 	beq	37e30 <CSerialDevice::Write(unsigned char)+0x78>
   37e2c:	ebfff171 	bl	343f8 <LeaveCritical>
   37e30:	e1a00007 	mov	r0, r7
   37e34:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   37e38:	e1a00002 	mov	r0, r2
   37e3c:	ebfff141 	bl	34348 <EnterCritical>
   37e40:	e59530bc 	ldr	r3, [r5, #188]	; 0xbc
   37e44:	e59520c0 	ldr	r2, [r5, #192]	; 0xc0
   37e48:	e2833001 	add	r3, r3, #1
   37e4c:	e1a03a83 	lsl	r3, r3, #21
   37e50:	e1a03aa3 	lsr	r3, r3, #21
   37e54:	e1530002 	cmp	r3, r2
   37e58:	03a07000 	moveq	r7, #0
   37e5c:	e59520c8 	ldr	r2, [r5, #200]	; 0xc8
   37e60:	1affffe5 	bne	37dfc <CSerialDevice::Write(unsigned char)+0x44>
   37e64:	eaffffee 	b	37e24 <CSerialDevice::Write(unsigned char)+0x6c>
   37e68:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   37e6c:	e59f2028 	ldr	r2, [pc, #40]	; 37e9c <CSerialDevice::Write(unsigned char)+0xe4>
   37e70:	e5923018 	ldr	r3, [r2, #24]
   37e74:	e2133020 	ands	r3, r3, #32
   37e78:	1afffffc 	bne	37e70 <CSerialDevice::Write(unsigned char)+0xb8>
   37e7c:	e5821000 	str	r1, [r2]
   37e80:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   37e84:	e3a07001 	mov	r7, #1
   37e88:	e1a00007 	mov	r0, r7
   37e8c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   37e90:	e1a07002 	mov	r7, r2
   37e94:	e1a00007 	mov	r0, r7
   37e98:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   37e9c:	20201000 	.word	0x20201000

00037ea0 <CSerialDevice::Write(void const*, unsigned int)>:
   37ea0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   37ea4:	e2806a01 	add	r6, r0, #4096	; 0x1000
   37ea8:	e1a07000 	mov	r7, r0
   37eac:	e59600cc 	ldr	r0, [r6, #204]	; 0xcc
   37eb0:	e1a04001 	mov	r4, r1
   37eb4:	e3500000 	cmp	r0, #0
   37eb8:	e1a08002 	mov	r8, r2
   37ebc:	1a000052 	bne	3800c <CSerialDevice::Write(void const*, unsigned int)+0x16c>
   37ec0:	e3540000 	cmp	r4, #0
   37ec4:	0a000053 	beq	38018 <CSerialDevice::Write(void const*, unsigned int)+0x178>
   37ec8:	e3580000 	cmp	r8, #0
   37ecc:	0a00005b 	beq	38040 <CSerialDevice::Write(void const*, unsigned int)+0x1a0>
   37ed0:	e3a05000 	mov	r5, #0
   37ed4:	e2444001 	sub	r4, r4, #1
   37ed8:	ea000002 	b	37ee8 <CSerialDevice::Write(void const*, unsigned int)+0x48>
   37edc:	e2855001 	add	r5, r5, #1
   37ee0:	e1550008 	cmp	r5, r8
   37ee4:	0a00000f 	beq	37f28 <CSerialDevice::Write(void const*, unsigned int)+0x88>
   37ee8:	e5f41001 	ldrb	r1, [r4, #1]!
   37eec:	e1a00007 	mov	r0, r7
   37ef0:	ebffffb0 	bl	37db8 <CSerialDevice::Write(unsigned char)>
   37ef4:	e3500000 	cmp	r0, #0
   37ef8:	0a00000a 	beq	37f28 <CSerialDevice::Write(void const*, unsigned int)+0x88>
   37efc:	e5d43000 	ldrb	r3, [r4]
   37f00:	e353000a 	cmp	r3, #10
   37f04:	1afffff4 	bne	37edc <CSerialDevice::Write(void const*, unsigned int)+0x3c>
   37f08:	e59630c4 	ldr	r3, [r6, #196]	; 0xc4
   37f0c:	e3130001 	tst	r3, #1
   37f10:	0afffff1 	beq	37edc <CSerialDevice::Write(void const*, unsigned int)+0x3c>
   37f14:	e3a0100d 	mov	r1, #13
   37f18:	e1a00007 	mov	r0, r7
   37f1c:	ebffffa5 	bl	37db8 <CSerialDevice::Write(unsigned char)>
   37f20:	e3500000 	cmp	r0, #0
   37f24:	1affffec 	bne	37edc <CSerialDevice::Write(void const*, unsigned int)+0x3c>
   37f28:	e59630cc 	ldr	r3, [r6, #204]	; 0xcc
   37f2c:	e3530000 	cmp	r3, #0
   37f30:	1a000033 	bne	38004 <CSerialDevice::Write(void const*, unsigned int)+0x164>
   37f34:	e59730a4 	ldr	r3, [r7, #164]	; 0xa4
   37f38:	e3530000 	cmp	r3, #0
   37f3c:	0a000028 	beq	37fe4 <CSerialDevice::Write(void const*, unsigned int)+0x144>
   37f40:	e59600c8 	ldr	r0, [r6, #200]	; 0xc8
   37f44:	e3500000 	cmp	r0, #0
   37f48:	1a000027 	bne	37fec <CSerialDevice::Write(void const*, unsigned int)+0x14c>
   37f4c:	e59630bc 	ldr	r3, [r6, #188]	; 0xbc
   37f50:	e59620c0 	ldr	r2, [r6, #192]	; 0xc0
   37f54:	e1520003 	cmp	r2, r3
   37f58:	0a000021 	beq	37fe4 <CSerialDevice::Write(void const*, unsigned int)+0x144>
   37f5c:	e3a03000 	mov	r3, #0
   37f60:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   37f64:	e59630bc 	ldr	r3, [r6, #188]	; 0xbc
   37f68:	e59620c0 	ldr	r2, [r6, #192]	; 0xc0
   37f6c:	e1520003 	cmp	r2, r3
   37f70:	0a000015 	beq	37fcc <CSerialDevice::Write(void const*, unsigned int)+0x12c>
   37f74:	e59f20cc 	ldr	r2, [pc, #204]	; 38048 <CSerialDevice::Write(void const*, unsigned int)+0x1a8>
   37f78:	e5923018 	ldr	r3, [r2, #24]
   37f7c:	e3130020 	tst	r3, #32
   37f80:	1a000029 	bne	3802c <CSerialDevice::Write(void const*, unsigned int)+0x18c>
   37f84:	e59f00c0 	ldr	r0, [pc, #192]	; 3804c <CSerialDevice::Write(void const*, unsigned int)+0x1ac>
   37f88:	ea000002 	b	37f98 <CSerialDevice::Write(void const*, unsigned int)+0xf8>
   37f8c:	e5923018 	ldr	r3, [r2, #24]
   37f90:	e3130020 	tst	r3, #32
   37f94:	1a000024 	bne	3802c <CSerialDevice::Write(void const*, unsigned int)+0x18c>
   37f98:	e59630c0 	ldr	r3, [r6, #192]	; 0xc0
   37f9c:	e2831001 	add	r1, r3, #1
   37fa0:	e58610c0 	str	r1, [r6, #192]	; 0xc0
   37fa4:	e0873003 	add	r3, r7, r3
   37fa8:	e5d338bc 	ldrb	r3, [r3, #2236]	; 0x8bc
   37fac:	e5823000 	str	r3, [r2]
   37fb0:	e59630c0 	ldr	r3, [r6, #192]	; 0xc0
   37fb4:	e0033000 	and	r3, r3, r0
   37fb8:	e58630c0 	str	r3, [r6, #192]	; 0xc0
   37fbc:	e59610bc 	ldr	r1, [r6, #188]	; 0xbc
   37fc0:	e59630c0 	ldr	r3, [r6, #192]	; 0xc0
   37fc4:	e1510003 	cmp	r1, r3
   37fc8:	1affffef 	bne	37f8c <CSerialDevice::Write(void const*, unsigned int)+0xec>
   37fcc:	e3a03000 	mov	r3, #0
   37fd0:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   37fd4:	e59630c8 	ldr	r3, [r6, #200]	; 0xc8
   37fd8:	e3530000 	cmp	r3, #0
   37fdc:	0a000000 	beq	37fe4 <CSerialDevice::Write(void const*, unsigned int)+0x144>
   37fe0:	ebfff104 	bl	343f8 <LeaveCritical>
   37fe4:	e1a00005 	mov	r0, r5
   37fe8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   37fec:	ebfff0d5 	bl	34348 <EnterCritical>
   37ff0:	e59620bc 	ldr	r2, [r6, #188]	; 0xbc
   37ff4:	e59630c0 	ldr	r3, [r6, #192]	; 0xc0
   37ff8:	e1520003 	cmp	r2, r3
   37ffc:	1affffd6 	bne	37f5c <CSerialDevice::Write(void const*, unsigned int)+0xbc>
   38000:	eafffff3 	b	37fd4 <CSerialDevice::Write(void const*, unsigned int)+0x134>
   38004:	ebfff0fb 	bl	343f8 <LeaveCritical>
   38008:	eaffffc9 	b	37f34 <CSerialDevice::Write(void const*, unsigned int)+0x94>
   3800c:	ebfff0cd 	bl	34348 <EnterCritical>
   38010:	e3540000 	cmp	r4, #0
   38014:	1affffab 	bne	37ec8 <CSerialDevice::Write(void const*, unsigned int)+0x28>
   38018:	e3a020c2 	mov	r2, #194	; 0xc2
   3801c:	e59f102c 	ldr	r1, [pc, #44]	; 38050 <CSerialDevice::Write(void const*, unsigned int)+0x1b0>
   38020:	e59f002c 	ldr	r0, [pc, #44]	; 38054 <CSerialDevice::Write(void const*, unsigned int)+0x1b4>
   38024:	ebfffbd5 	bl	36f80 <assertion_failed>
   38028:	eaffffa6 	b	37ec8 <CSerialDevice::Write(void const*, unsigned int)+0x28>
   3802c:	e59f2014 	ldr	r2, [pc, #20]	; 38048 <CSerialDevice::Write(void const*, unsigned int)+0x1a8>
   38030:	e5923038 	ldr	r3, [r2, #56]	; 0x38
   38034:	e3833020 	orr	r3, r3, #32
   38038:	e5823038 	str	r3, [r2, #56]	; 0x38
   3803c:	eaffffe2 	b	37fcc <CSerialDevice::Write(void const*, unsigned int)+0x12c>
   38040:	e1a05008 	mov	r5, r8
   38044:	eaffffb7 	b	37f28 <CSerialDevice::Write(void const*, unsigned int)+0x88>
   38048:	20201000 	.word	0x20201000
   3804c:	000007ff 	.word	0x000007ff
   38050:	0004f518 	.word	0x0004f518
   38054:	0004f524 	.word	0x0004f524

00038058 <CSerialDevice::InterruptHandler()>:
   38058:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   3805c:	e2805a01 	add	r5, r0, #4096	; 0x1000
   38060:	e1a04000 	mov	r4, r0
   38064:	e59500c8 	ldr	r0, [r5, #200]	; 0xc8
   38068:	e3500000 	cmp	r0, #0
   3806c:	1a000059 	bne	381d8 <CSerialDevice::InterruptHandler()+0x180>
   38070:	e3a03000 	mov	r3, #0
   38074:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   38078:	e59f3160 	ldr	r3, [pc, #352]	; 381e0 <CSerialDevice::InterruptHandler()+0x188>
   3807c:	e3e06002 	mvn	r6, #2
   38080:	e1a01003 	mov	r1, r3
   38084:	e3e0c001 	mvn	ip, #1
   38088:	e3e0e000 	mvn	lr, #0
   3808c:	e5932040 	ldr	r2, [r3, #64]	; 0x40
   38090:	e59f014c 	ldr	r0, [pc, #332]	; 381e4 <CSerialDevice::InterruptHandler()+0x18c>
   38094:	e5832044 	str	r2, [r3, #68]	; 0x44
   38098:	e5913018 	ldr	r3, [r1, #24]
   3809c:	e3130010 	tst	r3, #16
   380a0:	1a000016 	bne	38100 <CSerialDevice::InterruptHandler()+0xa8>
   380a4:	e5912000 	ldr	r2, [r1]
   380a8:	e3120b01 	tst	r2, #1024	; 0x400
   380ac:	0a000034 	beq	38184 <CSerialDevice::InterruptHandler()+0x12c>
   380b0:	e59438b8 	ldr	r3, [r4, #2232]	; 0x8b8
   380b4:	e3530000 	cmp	r3, #0
   380b8:	0584e8b8 	streq	lr, [r4, #2232]	; 0x8b8
   380bc:	e59438b0 	ldr	r3, [r4, #2224]	; 0x8b0
   380c0:	e59478b4 	ldr	r7, [r4, #2228]	; 0x8b4
   380c4:	e2833001 	add	r3, r3, #1
   380c8:	e0033000 	and	r3, r3, r0
   380cc:	e1530007 	cmp	r3, r7
   380d0:	0a000031 	beq	3819c <CSerialDevice::InterruptHandler()+0x144>
   380d4:	e59438b0 	ldr	r3, [r4, #2224]	; 0x8b0
   380d8:	e2837001 	add	r7, r3, #1
   380dc:	e0843003 	add	r3, r4, r3
   380e0:	e58478b0 	str	r7, [r4, #2224]	; 0x8b0
   380e4:	e5c320b0 	strb	r2, [r3, #176]	; 0xb0
   380e8:	e59438b0 	ldr	r3, [r4, #2224]	; 0x8b0
   380ec:	e0033000 	and	r3, r3, r0
   380f0:	e58438b0 	str	r3, [r4, #2224]	; 0x8b0
   380f4:	e5913018 	ldr	r3, [r1, #24]
   380f8:	e3130010 	tst	r3, #16
   380fc:	0affffe8 	beq	380a4 <CSerialDevice::InterruptHandler()+0x4c>
   38100:	e5913018 	ldr	r3, [r1, #24]
   38104:	e3130020 	tst	r3, #32
   38108:	1a000016 	bne	38168 <CSerialDevice::InterruptHandler()+0x110>
   3810c:	e59530bc 	ldr	r3, [r5, #188]	; 0xbc
   38110:	e59520c0 	ldr	r2, [r5, #192]	; 0xc0
   38114:	e1520003 	cmp	r2, r3
   38118:	0a000029 	beq	381c4 <CSerialDevice::InterruptHandler()+0x16c>
   3811c:	e59f20bc 	ldr	r2, [pc, #188]	; 381e0 <CSerialDevice::InterruptHandler()+0x188>
   38120:	e59f00bc 	ldr	r0, [pc, #188]	; 381e4 <CSerialDevice::InterruptHandler()+0x18c>
   38124:	ea000003 	b	38138 <CSerialDevice::InterruptHandler()+0xe0>
   38128:	e59510bc 	ldr	r1, [r5, #188]	; 0xbc
   3812c:	e59530c0 	ldr	r3, [r5, #192]	; 0xc0
   38130:	e1510003 	cmp	r1, r3
   38134:	0a000022 	beq	381c4 <CSerialDevice::InterruptHandler()+0x16c>
   38138:	e59530c0 	ldr	r3, [r5, #192]	; 0xc0
   3813c:	e2831001 	add	r1, r3, #1
   38140:	e58510c0 	str	r1, [r5, #192]	; 0xc0
   38144:	e0843003 	add	r3, r4, r3
   38148:	e5d338bc 	ldrb	r3, [r3, #2236]	; 0x8bc
   3814c:	e5823000 	str	r3, [r2]
   38150:	e59530c0 	ldr	r3, [r5, #192]	; 0xc0
   38154:	e0033000 	and	r3, r3, r0
   38158:	e58530c0 	str	r3, [r5, #192]	; 0xc0
   3815c:	e5923018 	ldr	r3, [r2, #24]
   38160:	e3130020 	tst	r3, #32
   38164:	0affffef 	beq	38128 <CSerialDevice::InterruptHandler()+0xd0>
   38168:	e3a03000 	mov	r3, #0
   3816c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   38170:	e59530c8 	ldr	r3, [r5, #200]	; 0xc8
   38174:	e3530000 	cmp	r3, #0
   38178:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   3817c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   38180:	eafff09c 	b	343f8 <LeaveCritical>
   38184:	e3120b02 	tst	r2, #2048	; 0x800
   38188:	0a000007 	beq	381ac <CSerialDevice::InterruptHandler()+0x154>
   3818c:	e59438b8 	ldr	r3, [r4, #2232]	; 0x8b8
   38190:	e3530000 	cmp	r3, #0
   38194:	0584c8b8 	streq	ip, [r4, #2232]	; 0x8b8
   38198:	eaffffc7 	b	380bc <CSerialDevice::InterruptHandler()+0x64>
   3819c:	e59438b8 	ldr	r3, [r4, #2232]	; 0x8b8
   381a0:	e3530000 	cmp	r3, #0
   381a4:	0584c8b8 	streq	ip, [r4, #2232]	; 0x8b8
   381a8:	eaffffba 	b	38098 <CSerialDevice::InterruptHandler()+0x40>
   381ac:	e3120c01 	tst	r2, #256	; 0x100
   381b0:	0affffc1 	beq	380bc <CSerialDevice::InterruptHandler()+0x64>
   381b4:	e59438b8 	ldr	r3, [r4, #2232]	; 0x8b8
   381b8:	e3530000 	cmp	r3, #0
   381bc:	058468b8 	streq	r6, [r4, #2232]	; 0x8b8
   381c0:	eaffffbd 	b	380bc <CSerialDevice::InterruptHandler()+0x64>
   381c4:	e59f2014 	ldr	r2, [pc, #20]	; 381e0 <CSerialDevice::InterruptHandler()+0x188>
   381c8:	e5923038 	ldr	r3, [r2, #56]	; 0x38
   381cc:	e3c33020 	bic	r3, r3, #32
   381d0:	e5823038 	str	r3, [r2, #56]	; 0x38
   381d4:	eaffffe3 	b	38168 <CSerialDevice::InterruptHandler()+0x110>
   381d8:	ebfff05a 	bl	34348 <EnterCritical>
   381dc:	eaffffa3 	b	38070 <CSerialDevice::InterruptHandler()+0x18>
   381e0:	20201000 	.word	0x20201000
   381e4:	000007ff 	.word	0x000007ff

000381e8 <CSerialDevice::InterruptStub(void*)>:
   381e8:	e92d4010 	push	{r4, lr}
   381ec:	e2504000 	subs	r4, r0, #0
   381f0:	0a000002 	beq	38200 <CSerialDevice::InterruptStub(void*)+0x18>
   381f4:	e1a00004 	mov	r0, r4
   381f8:	e8bd4010 	pop	{r4, lr}
   381fc:	eaffff95 	b	38058 <CSerialDevice::InterruptHandler()>
   38200:	e59f0014 	ldr	r0, [pc, #20]	; 3821c <CSerialDevice::InterruptStub(void*)+0x34>
   38204:	e59f2014 	ldr	r2, [pc, #20]	; 38220 <CSerialDevice::InterruptStub(void*)+0x38>
   38208:	e59f1014 	ldr	r1, [pc, #20]	; 38224 <CSerialDevice::InterruptStub(void*)+0x3c>
   3820c:	ebfffb5b 	bl	36f80 <assertion_failed>
   38210:	e1a00004 	mov	r0, r4
   38214:	e8bd4010 	pop	{r4, lr}
   38218:	eaffff8e 	b	38058 <CSerialDevice::InterruptHandler()>
   3821c:	0004a0c0 	.word	0x0004a0c0
   38220:	000001c1 	.word	0x000001c1
   38224:	0004f518 	.word	0x0004f518

00038228 <CSerialDevice::~CSerialDevice()>:
   38228:	e59f20a4 	ldr	r2, [pc, #164]	; 382d4 <CSerialDevice::~CSerialDevice()+0xac>
   3822c:	e92d4010 	push	{r4, lr}
   38230:	e3a03000 	mov	r3, #0
   38234:	e1a04000 	mov	r4, r0
   38238:	e5802000 	str	r2, [r0]
   3823c:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   38240:	e59f2090 	ldr	r2, [pc, #144]	; 382d8 <CSerialDevice::~CSerialDevice()+0xb0>
   38244:	e5823038 	str	r3, [r2, #56]	; 0x38
   38248:	e5823030 	str	r3, [r2, #48]	; 0x30
   3824c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   38250:	e59030ac 	ldr	r3, [r0, #172]	; 0xac
   38254:	e3530000 	cmp	r3, #0
   38258:	0a000006 	beq	38278 <CSerialDevice::~CSerialDevice()+0x50>
   3825c:	e59000a4 	ldr	r0, [r0, #164]	; 0xa4
   38260:	e3500000 	cmp	r0, #0
   38264:	0a000014 	beq	382bc <CSerialDevice::~CSerialDevice()+0x94>
   38268:	e59430a8 	ldr	r3, [r4, #168]	; 0xa8
   3826c:	e3530000 	cmp	r3, #0
   38270:	0a00000e 	beq	382b0 <CSerialDevice::~CSerialDevice()+0x88>
   38274:	eb0004fd 	bl	39670 <CInterruptSystem::DisconnectFIQ()>
   38278:	e3a03000 	mov	r3, #0
   3827c:	e284007c 	add	r0, r4, #124	; 0x7c
   38280:	e58430a4 	str	r3, [r4, #164]	; 0xa4
   38284:	ebffebe0 	bl	3320c <CGPIOPin::~CGPIOPin()>
   38288:	e2840054 	add	r0, r4, #84	; 0x54
   3828c:	ebffebde 	bl	3320c <CGPIOPin::~CGPIOPin()>
   38290:	e284002c 	add	r0, r4, #44	; 0x2c
   38294:	ebffebdc 	bl	3320c <CGPIOPin::~CGPIOPin()>
   38298:	e2840004 	add	r0, r4, #4
   3829c:	ebffebda 	bl	3320c <CGPIOPin::~CGPIOPin()>
   382a0:	e1a00004 	mov	r0, r4
   382a4:	ebfff4e2 	bl	35634 <CDevice::~CDevice()>
   382a8:	e1a00004 	mov	r0, r4
   382ac:	e8bd8010 	pop	{r4, pc}
   382b0:	e3a01039 	mov	r1, #57	; 0x39
   382b4:	eb00055d 	bl	39830 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   382b8:	eaffffee 	b	38278 <CSerialDevice::~CSerialDevice()+0x50>
   382bc:	e59f0018 	ldr	r0, [pc, #24]	; 382dc <CSerialDevice::~CSerialDevice()+0xb4>
   382c0:	e3a02078 	mov	r2, #120	; 0x78
   382c4:	e59f1014 	ldr	r1, [pc, #20]	; 382e0 <CSerialDevice::~CSerialDevice()+0xb8>
   382c8:	ebfffb2c 	bl	36f80 <assertion_failed>
   382cc:	e59400a4 	ldr	r0, [r4, #164]	; 0xa4
   382d0:	eaffffe4 	b	38268 <CSerialDevice::~CSerialDevice()+0x40>
   382d4:	0004f504 	.word	0x0004f504
   382d8:	20201000 	.word	0x20201000
   382dc:	0004a0f8 	.word	0x0004a0f8
   382e0:	0004f518 	.word	0x0004f518

000382e4 <CSerialDevice::~CSerialDevice()>:
   382e4:	e92d4010 	push	{r4, lr}
   382e8:	e1a04000 	mov	r4, r0
   382ec:	ebffffcd 	bl	38228 <CSerialDevice::~CSerialDevice()>
   382f0:	e1a00004 	mov	r0, r4
   382f4:	e59f1008 	ldr	r1, [pc, #8]	; 38304 <CSerialDevice::~CSerialDevice()+0x20>
   382f8:	ebfff00a 	bl	34328 <operator delete(void*, unsigned int)>
   382fc:	e1a00004 	mov	r0, r4
   38300:	e8bd8010 	pop	{r4, pc}
   38304:	000010d0 	.word	0x000010d0

00038308 <CString::~CString()>:
   38308:	e92d4010 	push	{r4, lr}
   3830c:	e1a04000 	mov	r4, r0
   38310:	e5900004 	ldr	r0, [r0, #4]
   38314:	e59f3014 	ldr	r3, [pc, #20]	; 38330 <CString::~CString()+0x28>
   38318:	e3500000 	cmp	r0, #0
   3831c:	e5843000 	str	r3, [r4]
   38320:	0a000000 	beq	38328 <CString::~CString()+0x20>
   38324:	ebffeffe 	bl	34324 <operator delete[](void*)>
   38328:	e1a00004 	mov	r0, r4
   3832c:	e8bd8010 	pop	{r4, pc}
   38330:	0004f5b4 	.word	0x0004f5b4

00038334 <CString::~CString()>:
   38334:	e92d4010 	push	{r4, lr}
   38338:	e1a04000 	mov	r4, r0
   3833c:	e5900004 	ldr	r0, [r0, #4]
   38340:	e59f3020 	ldr	r3, [pc, #32]	; 38368 <CString::~CString()+0x34>
   38344:	e3500000 	cmp	r0, #0
   38348:	e5843000 	str	r3, [r4]
   3834c:	0a000000 	beq	38354 <CString::~CString()+0x20>
   38350:	ebffeff3 	bl	34324 <operator delete[](void*)>
   38354:	e1a00004 	mov	r0, r4
   38358:	e3a01010 	mov	r1, #16
   3835c:	ebffeff1 	bl	34328 <operator delete(void*, unsigned int)>
   38360:	e1a00004 	mov	r0, r4
   38364:	e8bd8010 	pop	{r4, pc}
   38368:	0004f5b4 	.word	0x0004f5b4

0003836c <CString::ReserveSpace(unsigned int) [clone .part.0]>:
   3836c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   38370:	e990002c 	ldmib	r0, {r2, r3, r5}
   38374:	e0455002 	sub	r5, r5, r2
   38378:	e0851001 	add	r1, r5, r1
   3837c:	e2812001 	add	r2, r1, #1
   38380:	e1520003 	cmp	r2, r3
   38384:	98bd81f0 	popls	{r4, r5, r6, r7, r8, pc}
   38388:	e1a04000 	mov	r4, r0
   3838c:	e2816041 	add	r6, r1, #65	; 0x41
   38390:	e1a00006 	mov	r0, r6
   38394:	ebffefe0 	bl	3431c <operator new[](unsigned int)>
   38398:	e3a02000 	mov	r2, #0
   3839c:	e594300c 	ldr	r3, [r4, #12]
   383a0:	e1a07000 	mov	r7, r0
   383a4:	e5c32000 	strb	r2, [r3]
   383a8:	e5941004 	ldr	r1, [r4, #4]
   383ac:	ebfff3b6 	bl	3528c <strcpy>
   383b0:	e5940004 	ldr	r0, [r4, #4]
   383b4:	e3500000 	cmp	r0, #0
   383b8:	0a000000 	beq	383c0 <CString::ReserveSpace(unsigned int) [clone .part.0]+0x54>
   383bc:	ebffefd8 	bl	34324 <operator delete[](void*)>
   383c0:	e0875005 	add	r5, r7, r5
   383c4:	e584500c 	str	r5, [r4, #12]
   383c8:	e5847004 	str	r7, [r4, #4]
   383cc:	e5846008 	str	r6, [r4, #8]
   383d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000383d4 <CString::CString()>:
   383d4:	e3a02000 	mov	r2, #0
   383d8:	e59f1008 	ldr	r1, [pc, #8]	; 383e8 <CString::CString()+0x14>
   383dc:	e5802008 	str	r2, [r0, #8]
   383e0:	e8800006 	stm	r0, {r1, r2}
   383e4:	e12fff1e 	bx	lr
   383e8:	0004f5b4 	.word	0x0004f5b4

000383ec <CString::CString(char const*)>:
   383ec:	e92d4070 	push	{r4, r5, r6, lr}
   383f0:	e1a04000 	mov	r4, r0
   383f4:	e59f302c 	ldr	r3, [pc, #44]	; 38428 <CString::CString(char const*)+0x3c>
   383f8:	e1a00001 	mov	r0, r1
   383fc:	e5843000 	str	r3, [r4]
   38400:	e1a05001 	mov	r5, r1
   38404:	ebfff37a 	bl	351f4 <strlen>
   38408:	e2800001 	add	r0, r0, #1
   3840c:	e5840008 	str	r0, [r4, #8]
   38410:	ebffefc1 	bl	3431c <operator new[](unsigned int)>
   38414:	e1a01005 	mov	r1, r5
   38418:	e5840004 	str	r0, [r4, #4]
   3841c:	ebfff39a 	bl	3528c <strcpy>
   38420:	e1a00004 	mov	r0, r4
   38424:	e8bd8070 	pop	{r4, r5, r6, pc}
   38428:	0004f5b4 	.word	0x0004f5b4

0003842c <CString::operator char const*() const>:
   3842c:	e5900004 	ldr	r0, [r0, #4]
   38430:	e59f3008 	ldr	r3, [pc, #8]	; 38440 <CString::operator char const*() const+0x14>
   38434:	e3500000 	cmp	r0, #0
   38438:	01a00003 	moveq	r0, r3
   3843c:	e12fff1e 	bx	lr
   38440:	0003d9b8 	.word	0x0003d9b8

00038444 <CString::operator=(char const*)>:
   38444:	e92d4070 	push	{r4, r5, r6, lr}
   38448:	e1a04000 	mov	r4, r0
   3844c:	e5900004 	ldr	r0, [r0, #4]
   38450:	e1a05001 	mov	r5, r1
   38454:	e3500000 	cmp	r0, #0
   38458:	0a000000 	beq	38460 <CString::operator=(char const*)+0x1c>
   3845c:	ebffefb0 	bl	34324 <operator delete[](void*)>
   38460:	e1a00005 	mov	r0, r5
   38464:	ebfff362 	bl	351f4 <strlen>
   38468:	e2800001 	add	r0, r0, #1
   3846c:	e5840008 	str	r0, [r4, #8]
   38470:	ebffefa9 	bl	3431c <operator new[](unsigned int)>
   38474:	e1a01005 	mov	r1, r5
   38478:	e5840004 	str	r0, [r4, #4]
   3847c:	ebfff382 	bl	3528c <strcpy>
   38480:	e5940004 	ldr	r0, [r4, #4]
   38484:	e8bd8070 	pop	{r4, r5, r6, pc}

00038488 <CString::GetLength() const>:
   38488:	e5900004 	ldr	r0, [r0, #4]
   3848c:	e3500000 	cmp	r0, #0
   38490:	012fff1e 	bxeq	lr
   38494:	eafff356 	b	351f4 <strlen>

00038498 <CString::Append(char const*)>:
   38498:	e92d4070 	push	{r4, r5, r6, lr}
   3849c:	e3a03001 	mov	r3, #1
   384a0:	e1a04000 	mov	r4, r0
   384a4:	e5900004 	ldr	r0, [r0, #4]
   384a8:	e1a06001 	mov	r6, r1
   384ac:	e3500000 	cmp	r0, #0
   384b0:	e5843008 	str	r3, [r4, #8]
   384b4:	0a000003 	beq	384c8 <CString::Append(char const*)+0x30>
   384b8:	ebfff34d 	bl	351f4 <strlen>
   384bc:	e5943008 	ldr	r3, [r4, #8]
   384c0:	e0830000 	add	r0, r3, r0
   384c4:	e5840008 	str	r0, [r4, #8]
   384c8:	e1a00006 	mov	r0, r6
   384cc:	ebfff348 	bl	351f4 <strlen>
   384d0:	e5943008 	ldr	r3, [r4, #8]
   384d4:	e0800003 	add	r0, r0, r3
   384d8:	e5840008 	str	r0, [r4, #8]
   384dc:	ebffef8e 	bl	3431c <operator new[](unsigned int)>
   384e0:	e5941004 	ldr	r1, [r4, #4]
   384e4:	e1a05000 	mov	r5, r0
   384e8:	e3510000 	cmp	r1, #0
   384ec:	05c01000 	strbeq	r1, [r0]
   384f0:	0a000004 	beq	38508 <CString::Append(char const*)+0x70>
   384f4:	ebfff364 	bl	3528c <strcpy>
   384f8:	e5940004 	ldr	r0, [r4, #4]
   384fc:	e3500000 	cmp	r0, #0
   38500:	0a000000 	beq	38508 <CString::Append(char const*)+0x70>
   38504:	ebffef86 	bl	34324 <operator delete[](void*)>
   38508:	e1a01006 	mov	r1, r6
   3850c:	e1a00005 	mov	r0, r5
   38510:	ebfff37a 	bl	35300 <strcat>
   38514:	e5845004 	str	r5, [r4, #4]
   38518:	e8bd8070 	pop	{r4, r5, r6, pc}

0003851c <CString::Compare(char const*) const>:
   3851c:	e5900004 	ldr	r0, [r0, #4]
   38520:	eafff33d 	b	3521c <strcmp>

00038524 <CString::Find(char) const>:
   38524:	e5902004 	ldr	r2, [r0, #4]
   38528:	e1d230d0 	ldrsb	r3, [r2]
   3852c:	e3530000 	cmp	r3, #0
   38530:	0a000009 	beq	3855c <CString::Find(char) const+0x38>
   38534:	e1510003 	cmp	r1, r3
   38538:	e3a00000 	mov	r0, #0
   3853c:	1a000002 	bne	3854c <CString::Find(char) const+0x28>
   38540:	e12fff1e 	bx	lr
   38544:	e1530001 	cmp	r3, r1
   38548:	012fff1e 	bxeq	lr
   3854c:	e1f230d1 	ldrsb	r3, [r2, #1]!
   38550:	e2800001 	add	r0, r0, #1
   38554:	e3530000 	cmp	r3, #0
   38558:	1afffff9 	bne	38544 <CString::Find(char) const+0x20>
   3855c:	e3e00000 	mvn	r0, #0
   38560:	e12fff1e 	bx	lr

00038564 <CString::PutChar(char, unsigned int)>:
   38564:	e92d4070 	push	{r4, r5, r6, lr}
   38568:	e2524000 	subs	r4, r2, #0
   3856c:	08bd8070 	popeq	{r4, r5, r6, pc}
   38570:	e1a06001 	mov	r6, r1
   38574:	e1a01004 	mov	r1, r4
   38578:	e1a05000 	mov	r5, r0
   3857c:	ebffff7a 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38580:	e2443001 	sub	r3, r4, #1
   38584:	e595200c 	ldr	r2, [r5, #12]
   38588:	e2433001 	sub	r3, r3, #1
   3858c:	e2820001 	add	r0, r2, #1
   38590:	e3730001 	cmn	r3, #1
   38594:	e585000c 	str	r0, [r5, #12]
   38598:	e5c26000 	strb	r6, [r2]
   3859c:	1afffff8 	bne	38584 <CString::PutChar(char, unsigned int)+0x20>
   385a0:	e8bd8070 	pop	{r4, r5, r6, pc}

000385a4 <CString::PutString(char const*)>:
   385a4:	e92d4070 	push	{r4, r5, r6, lr}
   385a8:	e1a04000 	mov	r4, r0
   385ac:	e1a00001 	mov	r0, r1
   385b0:	e1a05001 	mov	r5, r1
   385b4:	ebfff30e 	bl	351f4 <strlen>
   385b8:	e2506000 	subs	r6, r0, #0
   385bc:	0a000002 	beq	385cc <CString::PutString(char const*)+0x28>
   385c0:	e1a01006 	mov	r1, r6
   385c4:	e1a00004 	mov	r0, r4
   385c8:	ebffff67 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   385cc:	e1a01005 	mov	r1, r5
   385d0:	e594000c 	ldr	r0, [r4, #12]
   385d4:	ebfff32c 	bl	3528c <strcpy>
   385d8:	e594100c 	ldr	r1, [r4, #12]
   385dc:	e0811006 	add	r1, r1, r6
   385e0:	e584100c 	str	r1, [r4, #12]
   385e4:	e8bd8070 	pop	{r4, r5, r6, pc}

000385e8 <CString::ReserveSpace(unsigned int)>:
   385e8:	e3510000 	cmp	r1, #0
   385ec:	012fff1e 	bxeq	lr
   385f0:	eaffff5d 	b	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>

000385f4 <CString::ntoa(char*, unsigned long, unsigned int, int)>:
   385f4:	e1510002 	cmp	r1, r2
   385f8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   385fc:	e1a05001 	mov	r5, r1
   38600:	e1a06002 	mov	r6, r2
   38604:	e1a09000 	mov	r9, r0
   38608:	e1a07003 	mov	r7, r3
   3860c:	23a0a001 	movcs	sl, #1
   38610:	3a000024 	bcc	386a8 <CString::ntoa(char*, unsigned long, unsigned int, int)+0xb4>
   38614:	e00a0a96 	mul	sl, r6, sl
   38618:	e1a00005 	mov	r0, r5
   3861c:	e1a0100a 	mov	r1, sl
   38620:	ebffee26 	bl	33ec0 <__aeabi_uidiv>
   38624:	e1500006 	cmp	r0, r6
   38628:	e1a04000 	mov	r4, r0
   3862c:	2afffff8 	bcs	38614 <CString::ntoa(char*, unsigned long, unsigned int, int)+0x20>
   38630:	e3570000 	cmp	r7, #0
   38634:	13a08037 	movne	r8, #55	; 0x37
   38638:	03a08057 	moveq	r8, #87	; 0x57
   3863c:	e1a07009 	mov	r7, r9
   38640:	ea000004 	b	38658 <CString::ntoa(char*, unsigned long, unsigned int, int)+0x64>
   38644:	e1a0100a 	mov	r1, sl
   38648:	e1a00005 	mov	r0, r5
   3864c:	ebffee1b 	bl	33ec0 <__aeabi_uidiv>
   38650:	e1a0700b 	mov	r7, fp
   38654:	e1a04000 	mov	r4, r0
   38658:	e1a00005 	mov	r0, r5
   3865c:	e1a0100a 	mov	r1, sl
   38660:	ebffee1a 	bl	33ed0 <__aeabi_uidivmod>
   38664:	e1a0b007 	mov	fp, r7
   38668:	e3540009 	cmp	r4, #9
   3866c:	e6ef4074 	uxtb	r4, r4
   38670:	e2843030 	add	r3, r4, #48	; 0x30
   38674:	80844008 	addhi	r4, r4, r8
   38678:	96af4073 	sxtbls	r4, r3
   3867c:	86af4074 	sxtbhi	r4, r4
   38680:	e1a0000a 	mov	r0, sl
   38684:	e1a05001 	mov	r5, r1
   38688:	e4cb4001 	strb	r4, [fp], #1
   3868c:	e1a01006 	mov	r1, r6
   38690:	ebffee0a 	bl	33ec0 <__aeabi_uidiv>
   38694:	e250a000 	subs	sl, r0, #0
   38698:	1affffe9 	bne	38644 <CString::ntoa(char*, unsigned long, unsigned int, int)+0x50>
   3869c:	e5c7a001 	strb	sl, [r7, #1]
   386a0:	e1a00009 	mov	r0, r9
   386a4:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   386a8:	e1a04001 	mov	r4, r1
   386ac:	e3a0a001 	mov	sl, #1
   386b0:	eaffffde 	b	38630 <CString::ntoa(char*, unsigned long, unsigned int, int)+0x3c>

000386b4 <CString::ftoa(char*, double, unsigned int)>:
   386b4:	eeb50bc0 	vcmpe.f64	d0, #0.0
   386b8:	eef1fa10 	vmrs	APSR_nzcv, fpscr
   386bc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   386c0:	ed9f7b9c 	vldr	d7, [pc, #624]	; 38938 <CString::ftoa(char*, double, unsigned int)+0x284>
   386c4:	ed2d8b02 	vpush	{d8}
   386c8:	eeb08b40 	vmov.f64	d8, d0
   386cc:	4eb18b40 	vnegmi.f64	d8, d0
   386d0:	43a0302d 	movmi	r3, #45	; 0x2d
   386d4:	eeb48bc7 	vcmpe.f64	d8, d7
   386d8:	45c03000 	strbmi	r3, [r0]
   386dc:	42808001 	addmi	r8, r0, #1
   386e0:	51a08000 	movpl	r8, r0
   386e4:	eef1fa10 	vmrs	APSR_nzcv, fpscr
   386e8:	e24dd01c 	sub	sp, sp, #28
   386ec:	e1a07000 	mov	r7, r0
   386f0:	e58d1004 	str	r1, [sp, #4]
   386f4:	ca00007f 	bgt	388f8 <CString::ftoa(char*, double, unsigned int)+0x244>
   386f8:	eefc7bc8 	vcvt.u32.f64	s15, d8
   386fc:	ee175a90 	vmov	r5, s15
   38700:	e3550009 	cmp	r5, #9
   38704:	83a09001 	movhi	r9, #1
   38708:	9a000081 	bls	38914 <CString::ftoa(char*, double, unsigned int)+0x260>
   3870c:	e0892109 	add	r2, r9, r9, lsl #2
   38710:	e1a09082 	lsl	r9, r2, #1
   38714:	e1a01009 	mov	r1, r9
   38718:	e1a00005 	mov	r0, r5
   3871c:	ebffede7 	bl	33ec0 <__aeabi_uidiv>
   38720:	e3500009 	cmp	r0, #9
   38724:	e1a0a000 	mov	sl, r0
   38728:	8afffff7 	bhi	3870c <CString::ftoa(char*, double, unsigned int)+0x58>
   3872c:	e1a04008 	mov	r4, r8
   38730:	e1a0b005 	mov	fp, r5
   38734:	e59f620c 	ldr	r6, [pc, #524]	; 38948 <CString::ftoa(char*, double, unsigned int)+0x294>
   38738:	ea000004 	b	38750 <CString::ftoa(char*, double, unsigned int)+0x9c>
   3873c:	e1a01009 	mov	r1, r9
   38740:	e1a0000b 	mov	r0, fp
   38744:	e1a0400c 	mov	r4, ip
   38748:	ebffeddc 	bl	33ec0 <__aeabi_uidiv>
   3874c:	e1a0a000 	mov	sl, r0
   38750:	e1a0000b 	mov	r0, fp
   38754:	e1a01009 	mov	r1, r9
   38758:	ebffeddc 	bl	33ed0 <__aeabi_uidivmod>
   3875c:	e1a0c004 	mov	ip, r4
   38760:	e35a0009 	cmp	sl, #9
   38764:	e6efa07a 	uxtb	sl, sl
   38768:	e28a3030 	add	r3, sl, #48	; 0x30
   3876c:	96afa073 	sxtbls	sl, r3
   38770:	e0832699 	umull	r2, r3, r9, r6
   38774:	828aa057 	addhi	sl, sl, #87	; 0x57
   38778:	86afa07a 	sxtbhi	sl, sl
   3877c:	e1b091a3 	lsrs	r9, r3, #3
   38780:	e1a0b001 	mov	fp, r1
   38784:	e4cca001 	strb	sl, [ip], #1
   38788:	1affffeb 	bne	3873c <CString::ftoa(char*, double, unsigned int)+0x88>
   3878c:	e59d3004 	ldr	r3, [sp, #4]
   38790:	e5c49001 	strb	r9, [r4, #1]
   38794:	e3530000 	cmp	r3, #0
   38798:	1a000003 	bne	387ac <CString::ftoa(char*, double, unsigned int)+0xf8>
   3879c:	e1a00007 	mov	r0, r7
   387a0:	e28dd01c 	add	sp, sp, #28
   387a4:	ecbd8b02 	vpop	{d8}
   387a8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   387ac:	e1a00008 	mov	r0, r8
   387b0:	ebfff28f 	bl	351f4 <strlen>
   387b4:	e3a0302e 	mov	r3, #46	; 0x2e
   387b8:	e59d2004 	ldr	r2, [sp, #4]
   387bc:	e0881000 	add	r1, r8, r0
   387c0:	e3520009 	cmp	r2, #9
   387c4:	e7c83000 	strb	r3, [r8, r0]
   387c8:	31a08002 	movcc	r8, r2
   387cc:	23a08009 	movcs	r8, #9
   387d0:	e3520001 	cmp	r2, #1
   387d4:	e58d1004 	str	r1, [sp, #4]
   387d8:	e2819001 	add	r9, r1, #1
   387dc:	9a000052 	bls	3892c <CString::ftoa(char*, double, unsigned int)+0x278>
   387e0:	e3a02002 	mov	r2, #2
   387e4:	e3a0300a 	mov	r3, #10
   387e8:	e2822001 	add	r2, r2, #1
   387ec:	e0833103 	add	r3, r3, r3, lsl #2
   387f0:	e1520008 	cmp	r2, r8
   387f4:	e1a03083 	lsl	r3, r3, #1
   387f8:	9afffffa 	bls	387e8 <CString::ftoa(char*, double, unsigned int)+0x134>
   387fc:	ee073a90 	vmov	s15, r3
   38800:	eeb87b67 	vcvt.f64.u32	d7, s15
   38804:	ee065a90 	vmov	s13, r5
   38808:	eeb86b66 	vcvt.f64.u32	d6, s13
   3880c:	ee386b46 	vsub.f64	d6, d8, d6
   38810:	ee267b07 	vmul.f64	d7, d6, d7
   38814:	eefc7bc7 	vcvt.u32.f64	s15, d7
   38818:	ee17ba90 	vmov	fp, s15
   3881c:	e35b0009 	cmp	fp, #9
   38820:	83a06001 	movhi	r6, #1
   38824:	9a00003d 	bls	38920 <CString::ftoa(char*, double, unsigned int)+0x26c>
   38828:	e0862106 	add	r2, r6, r6, lsl #2
   3882c:	e1a06082 	lsl	r6, r2, #1
   38830:	e1a01006 	mov	r1, r6
   38834:	e1a0000b 	mov	r0, fp
   38838:	ebffeda0 	bl	33ec0 <__aeabi_uidiv>
   3883c:	e3500009 	cmp	r0, #9
   38840:	e1a0a000 	mov	sl, r0
   38844:	8afffff7 	bhi	38828 <CString::ftoa(char*, double, unsigned int)+0x174>
   38848:	e28d400c 	add	r4, sp, #12
   3884c:	e59f50f4 	ldr	r5, [pc, #244]	; 38948 <CString::ftoa(char*, double, unsigned int)+0x294>
   38850:	ea000004 	b	38868 <CString::ftoa(char*, double, unsigned int)+0x1b4>
   38854:	e1a01006 	mov	r1, r6
   38858:	e1a0000b 	mov	r0, fp
   3885c:	e1a0400c 	mov	r4, ip
   38860:	ebffed96 	bl	33ec0 <__aeabi_uidiv>
   38864:	e1a0a000 	mov	sl, r0
   38868:	e1a0000b 	mov	r0, fp
   3886c:	e1a01006 	mov	r1, r6
   38870:	ebffed96 	bl	33ed0 <__aeabi_uidivmod>
   38874:	e1a0c004 	mov	ip, r4
   38878:	e35a0009 	cmp	sl, #9
   3887c:	e6efa07a 	uxtb	sl, sl
   38880:	e28a3030 	add	r3, sl, #48	; 0x30
   38884:	96afa073 	sxtbls	sl, r3
   38888:	e0832596 	umull	r2, r3, r6, r5
   3888c:	828aa057 	addhi	sl, sl, #87	; 0x57
   38890:	86afa07a 	sxtbhi	sl, sl
   38894:	e1b061a3 	lsrs	r6, r3, #3
   38898:	e1a0b001 	mov	fp, r1
   3889c:	e4cca001 	strb	sl, [ip], #1
   388a0:	1affffeb 	bne	38854 <CString::ftoa(char*, double, unsigned int)+0x1a0>
   388a4:	e5c46001 	strb	r6, [r4, #1]
   388a8:	e28d000c 	add	r0, sp, #12
   388ac:	ebfff250 	bl	351f4 <strlen>
   388b0:	e0580000 	subs	r0, r8, r0
   388b4:	0a000008 	beq	388dc <CString::ftoa(char*, double, unsigned int)+0x228>
   388b8:	e1a03009 	mov	r3, r9
   388bc:	e3a02030 	mov	r2, #48	; 0x30
   388c0:	e59dc004 	ldr	ip, [sp, #4]
   388c4:	e2801001 	add	r1, r0, #1
   388c8:	e08c6001 	add	r6, ip, r1
   388cc:	e4c32001 	strb	r2, [r3], #1
   388d0:	e1530006 	cmp	r3, r6
   388d4:	1afffffc 	bne	388cc <CString::ftoa(char*, double, unsigned int)+0x218>
   388d8:	e0899000 	add	r9, r9, r0
   388dc:	e28d100c 	add	r1, sp, #12
   388e0:	e1a00009 	mov	r0, r9
   388e4:	ebfff268 	bl	3528c <strcpy>
   388e8:	e1a00007 	mov	r0, r7
   388ec:	e28dd01c 	add	sp, sp, #28
   388f0:	ecbd8b02 	vpop	{d8}
   388f4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   388f8:	e1a00008 	mov	r0, r8
   388fc:	e59f1048 	ldr	r1, [pc, #72]	; 3894c <CString::ftoa(char*, double, unsigned int)+0x298>
   38900:	ebfff261 	bl	3528c <strcpy>
   38904:	e1a00007 	mov	r0, r7
   38908:	e28dd01c 	add	sp, sp, #28
   3890c:	ecbd8b02 	vpop	{d8}
   38910:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38914:	ee17aa90 	vmov	sl, s15
   38918:	e3a09001 	mov	r9, #1
   3891c:	eaffff82 	b	3872c <CString::ftoa(char*, double, unsigned int)+0x78>
   38920:	ee17aa90 	vmov	sl, s15
   38924:	e3a06001 	mov	r6, #1
   38928:	eaffffc6 	b	38848 <CString::ftoa(char*, double, unsigned int)+0x194>
   3892c:	ed9f7b03 	vldr	d7, [pc, #12]	; 38940 <CString::ftoa(char*, double, unsigned int)+0x28c>
   38930:	eaffffb3 	b	38804 <CString::ftoa(char*, double, unsigned int)+0x150>
   38934:	e320f000 	nop	{0}
   38938:	ffe00000 	.word	0xffe00000
   3893c:	41efffff 	.word	0x41efffff
   38940:	00000000 	.word	0x00000000
   38944:	40240000 	.word	0x40240000
   38948:	cccccccd 	.word	0xcccccccd
   3894c:	0004f5bc 	.word	0x0004f5bc

00038950 <CString::FormatV(char const*, std::__va_list)>:
   38950:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38954:	e1a07000 	mov	r7, r0
   38958:	e5900004 	ldr	r0, [r0, #4]
   3895c:	e24dd034 	sub	sp, sp, #52	; 0x34
   38960:	e3500000 	cmp	r0, #0
   38964:	e1a05001 	mov	r5, r1
   38968:	e1a0b002 	mov	fp, r2
   3896c:	0a000000 	beq	38974 <CString::FormatV(char const*, std::__va_list)+0x24>
   38970:	ebffee6b 	bl	34324 <operator delete[](void*)>
   38974:	e3a00040 	mov	r0, #64	; 0x40
   38978:	e5870008 	str	r0, [r7, #8]
   3897c:	ebffee66 	bl	3431c <operator new[](unsigned int)>
   38980:	e5870004 	str	r0, [r7, #4]
   38984:	e587000c 	str	r0, [r7, #12]
   38988:	e1d540d0 	ldrsb	r4, [r5]
   3898c:	e3540000 	cmp	r4, #0
   38990:	0a00005e 	beq	38b10 <CString::FormatV(char const*, std::__va_list)+0x1c0>
   38994:	e3540025 	cmp	r4, #37	; 0x25
   38998:	e2858001 	add	r8, r5, #1
   3899c:	1a000050 	bne	38ae4 <CString::FormatV(char const*, std::__va_list)+0x194>
   389a0:	e1d560d1 	ldrsb	r6, [r5, #1]
   389a4:	e3560025 	cmp	r6, #37	; 0x25
   389a8:	0a000135 	beq	38e84 <CString::FormatV(char const*, std::__va_list)+0x534>
   389ac:	e356002d 	cmp	r6, #45	; 0x2d
   389b0:	03a03001 	moveq	r3, #1
   389b4:	13a03000 	movne	r3, #0
   389b8:	01d560d2 	ldrsbeq	r6, [r5, #2]
   389bc:	02858002 	addeq	r8, r5, #2
   389c0:	e3560030 	cmp	r6, #48	; 0x30
   389c4:	e58d3004 	str	r3, [sp, #4]
   389c8:	13a03000 	movne	r3, #0
   389cc:	03a02001 	moveq	r2, #1
   389d0:	01d860d1 	ldrsbeq	r6, [r8, #1]
   389d4:	02883002 	addeq	r3, r8, #2
   389d8:	e2885001 	add	r5, r8, #1
   389dc:	01a08005 	moveq	r8, r5
   389e0:	158d3008 	strne	r3, [sp, #8]
   389e4:	01a05003 	moveq	r5, r3
   389e8:	e2463030 	sub	r3, r6, #48	; 0x30
   389ec:	e6ef3073 	uxtb	r3, r3
   389f0:	058d2008 	streq	r2, [sp, #8]
   389f4:	e3530009 	cmp	r3, #9
   389f8:	93a04000 	movls	r4, #0
   389fc:	9a000001 	bls	38a08 <CString::FormatV(char const*, std::__va_list)+0xb8>
   38a00:	ea000059 	b	38b6c <CString::FormatV(char const*, std::__va_list)+0x21c>
   38a04:	e1a08003 	mov	r8, r3
   38a08:	e0844104 	add	r4, r4, r4, lsl #2
   38a0c:	e0864084 	add	r4, r6, r4, lsl #1
   38a10:	e1d860d1 	ldrsb	r6, [r8, #1]
   38a14:	e2444030 	sub	r4, r4, #48	; 0x30
   38a18:	e2463030 	sub	r3, r6, #48	; 0x30
   38a1c:	e6ef3073 	uxtb	r3, r3
   38a20:	e3530009 	cmp	r3, #9
   38a24:	e2883001 	add	r3, r8, #1
   38a28:	9afffff5 	bls	38a04 <CString::FormatV(char const*, std::__va_list)+0xb4>
   38a2c:	e2885002 	add	r5, r8, #2
   38a30:	e356002e 	cmp	r6, #46	; 0x2e
   38a34:	0a000039 	beq	38b20 <CString::FormatV(char const*, std::__va_list)+0x1d0>
   38a38:	e3a01006 	mov	r1, #6
   38a3c:	e1d390d0 	ldrsb	r9, [r3]
   38a40:	e359006c 	cmp	r9, #108	; 0x6c
   38a44:	01d390d1 	ldrsbeq	r9, [r3, #1]
   38a48:	01a03005 	moveq	r3, r5
   38a4c:	e2492058 	sub	r2, r9, #88	; 0x58
   38a50:	02855001 	addeq	r5, r5, #1
   38a54:	e3520020 	cmp	r2, #32
   38a58:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
   38a5c:	ea0000f5 	b	38e38 <CString::FormatV(char const*, std::__va_list)+0x4e8>
   38a60:	00038e30 	.word	0x00038e30
   38a64:	00038e38 	.word	0x00038e38
   38a68:	00038e38 	.word	0x00038e38
   38a6c:	00038e38 	.word	0x00038e38
   38a70:	00038e38 	.word	0x00038e38
   38a74:	00038e38 	.word	0x00038e38
   38a78:	00038e38 	.word	0x00038e38
   38a7c:	00038e38 	.word	0x00038e38
   38a80:	00038e38 	.word	0x00038e38
   38a84:	00038e38 	.word	0x00038e38
   38a88:	00038e38 	.word	0x00038e38
   38a8c:	00038df0 	.word	0x00038df0
   38a90:	00038d08 	.word	0x00038d08
   38a94:	00038e38 	.word	0x00038e38
   38a98:	00038c88 	.word	0x00038c88
   38a9c:	00038e38 	.word	0x00038e38
   38aa0:	00038e38 	.word	0x00038e38
   38aa4:	00038e38 	.word	0x00038e38
   38aa8:	00038e38 	.word	0x00038e38
   38aac:	00038e38 	.word	0x00038e38
   38ab0:	00038e38 	.word	0x00038e38
   38ab4:	00038e38 	.word	0x00038e38
   38ab8:	00038e38 	.word	0x00038e38
   38abc:	00038b78 	.word	0x00038b78
   38ac0:	00038e38 	.word	0x00038e38
   38ac4:	00038e38 	.word	0x00038e38
   38ac8:	00038e38 	.word	0x00038e38
   38acc:	00038cd0 	.word	0x00038cd0
   38ad0:	00038e38 	.word	0x00038e38
   38ad4:	00038c80 	.word	0x00038c80
   38ad8:	00038e38 	.word	0x00038e38
   38adc:	00038e38 	.word	0x00038e38
   38ae0:	00038e30 	.word	0x00038e30
   38ae4:	e1a05008 	mov	r5, r8
   38ae8:	e3a01001 	mov	r1, #1
   38aec:	e1a00007 	mov	r0, r7
   38af0:	ebfffe1d 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38af4:	e597300c 	ldr	r3, [r7, #12]
   38af8:	e2832001 	add	r2, r3, #1
   38afc:	e587200c 	str	r2, [r7, #12]
   38b00:	e5c34000 	strb	r4, [r3]
   38b04:	e1d540d0 	ldrsb	r4, [r5]
   38b08:	e3540000 	cmp	r4, #0
   38b0c:	1affffa0 	bne	38994 <CString::FormatV(char const*, std::__va_list)+0x44>
   38b10:	e597300c 	ldr	r3, [r7, #12]
   38b14:	e5c34000 	strb	r4, [r3]
   38b18:	e28dd034 	add	sp, sp, #52	; 0x34
   38b1c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38b20:	e1d390d1 	ldrsb	r9, [r3, #1]
   38b24:	e3a01000 	mov	r1, #0
   38b28:	e2493030 	sub	r3, r9, #48	; 0x30
   38b2c:	e6ef3073 	uxtb	r3, r3
   38b30:	e3530009 	cmp	r3, #9
   38b34:	9a000001 	bls	38b40 <CString::FormatV(char const*, std::__va_list)+0x1f0>
   38b38:	ea00014c 	b	39070 <CString::FormatV(char const*, std::__va_list)+0x720>
   38b3c:	e1a05003 	mov	r5, r3
   38b40:	e0811101 	add	r1, r1, r1, lsl #2
   38b44:	e0891081 	add	r1, r9, r1, lsl #1
   38b48:	e1d590d1 	ldrsb	r9, [r5, #1]
   38b4c:	e2411030 	sub	r1, r1, #48	; 0x30
   38b50:	e2493030 	sub	r3, r9, #48	; 0x30
   38b54:	e6ef3073 	uxtb	r3, r3
   38b58:	e3530009 	cmp	r3, #9
   38b5c:	e2853001 	add	r3, r5, #1
   38b60:	9afffff5 	bls	38b3c <CString::FormatV(char const*, std::__va_list)+0x1ec>
   38b64:	e2855002 	add	r5, r5, #2
   38b68:	eaffffb4 	b	38a40 <CString::FormatV(char const*, std::__va_list)+0xf0>
   38b6c:	e1a03008 	mov	r3, r8
   38b70:	e3a04000 	mov	r4, #0
   38b74:	eaffffad 	b	38a30 <CString::FormatV(char const*, std::__va_list)+0xe0>
   38b78:	e3a08008 	mov	r8, #8
   38b7c:	e59b6000 	ldr	r6, [fp]
   38b80:	e28b3004 	add	r3, fp, #4
   38b84:	e1560008 	cmp	r6, r8
   38b88:	e58d3014 	str	r3, [sp, #20]
   38b8c:	23a0b001 	movcs	fp, #1
   38b90:	3a000102 	bcc	38fa0 <CString::FormatV(char const*, std::__va_list)+0x650>
   38b94:	e00b0b98 	mul	fp, r8, fp
   38b98:	e1a00006 	mov	r0, r6
   38b9c:	e1a0100b 	mov	r1, fp
   38ba0:	ebffecc6 	bl	33ec0 <__aeabi_uidiv>
   38ba4:	e1580000 	cmp	r8, r0
   38ba8:	9afffff9 	bls	38b94 <CString::FormatV(char const*, std::__va_list)+0x244>
   38bac:	e1a0a000 	mov	sl, r0
   38bb0:	e3590058 	cmp	r9, #88	; 0x58
   38bb4:	e1a02005 	mov	r2, r5
   38bb8:	13a03057 	movne	r3, #87	; 0x57
   38bbc:	03a03037 	moveq	r3, #55	; 0x37
   38bc0:	e58d400c 	str	r4, [sp, #12]
   38bc4:	e1a0500b 	mov	r5, fp
   38bc8:	e28d9018 	add	r9, sp, #24
   38bcc:	e58d7010 	str	r7, [sp, #16]
   38bd0:	e1a04003 	mov	r4, r3
   38bd4:	e1a0b002 	mov	fp, r2
   38bd8:	ea000004 	b	38bf0 <CString::FormatV(char const*, std::__va_list)+0x2a0>
   38bdc:	e1a01005 	mov	r1, r5
   38be0:	e1a00006 	mov	r0, r6
   38be4:	ebffecb5 	bl	33ec0 <__aeabi_uidiv>
   38be8:	e1a09007 	mov	r9, r7
   38bec:	e1a0a000 	mov	sl, r0
   38bf0:	e1a00006 	mov	r0, r6
   38bf4:	e1a01005 	mov	r1, r5
   38bf8:	ebffecb4 	bl	33ed0 <__aeabi_uidivmod>
   38bfc:	e1a07009 	mov	r7, r9
   38c00:	e35a0009 	cmp	sl, #9
   38c04:	e6efa07a 	uxtb	sl, sl
   38c08:	e28a2030 	add	r2, sl, #48	; 0x30
   38c0c:	808aa004 	addhi	sl, sl, r4
   38c10:	96afa072 	sxtbls	sl, r2
   38c14:	86afa07a 	sxtbhi	sl, sl
   38c18:	e1a00005 	mov	r0, r5
   38c1c:	e1a06001 	mov	r6, r1
   38c20:	e4c7a001 	strb	sl, [r7], #1
   38c24:	e1a01008 	mov	r1, r8
   38c28:	ebffeca4 	bl	33ec0 <__aeabi_uidiv>
   38c2c:	e2505000 	subs	r5, r0, #0
   38c30:	1affffe9 	bne	38bdc <CString::FormatV(char const*, std::__va_list)+0x28c>
   38c34:	e1a0300b 	mov	r3, fp
   38c38:	e1a0b005 	mov	fp, r5
   38c3c:	e28d0018 	add	r0, sp, #24
   38c40:	e5c9b001 	strb	fp, [r9, #1]
   38c44:	e1a05003 	mov	r5, r3
   38c48:	e59d400c 	ldr	r4, [sp, #12]
   38c4c:	e59d7010 	ldr	r7, [sp, #16]
   38c50:	ebfff167 	bl	351f4 <strlen>
   38c54:	e59d3004 	ldr	r3, [sp, #4]
   38c58:	e1a06000 	mov	r6, r0
   38c5c:	e3530000 	cmp	r3, #0
   38c60:	1a000090 	bne	38ea8 <CString::FormatV(char const*, std::__va_list)+0x558>
   38c64:	e1500004 	cmp	r0, r4
   38c68:	3a000095 	bcc	38ec4 <CString::FormatV(char const*, std::__va_list)+0x574>
   38c6c:	e28d1018 	add	r1, sp, #24
   38c70:	e1a00007 	mov	r0, r7
   38c74:	e59db014 	ldr	fp, [sp, #20]
   38c78:	ebfffe49 	bl	385a4 <CString::PutString(char const*)>
   38c7c:	eaffff41 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38c80:	e3a0800a 	mov	r8, #10
   38c84:	eaffffbc 	b	38b7c <CString::FormatV(char const*, std::__va_list)+0x22c>
   38c88:	e28bb007 	add	fp, fp, #7
   38c8c:	e3cbb007 	bic	fp, fp, #7
   38c90:	ed9b0b00 	vldr	d0, [fp]
   38c94:	e28d0018 	add	r0, sp, #24
   38c98:	ebfffe85 	bl	386b4 <CString::ftoa(char*, double, unsigned int)>
   38c9c:	e28d0018 	add	r0, sp, #24
   38ca0:	ebfff153 	bl	351f4 <strlen>
   38ca4:	e59d3004 	ldr	r3, [sp, #4]
   38ca8:	e28bb008 	add	fp, fp, #8
   38cac:	e3530000 	cmp	r3, #0
   38cb0:	e1a06000 	mov	r6, r0
   38cb4:	1a0000bc 	bne	38fac <CString::FormatV(char const*, std::__va_list)+0x65c>
   38cb8:	e1500004 	cmp	r0, r4
   38cbc:	3a00010d 	bcc	390f8 <CString::FormatV(char const*, std::__va_list)+0x7a8>
   38cc0:	e28d1018 	add	r1, sp, #24
   38cc4:	e1a00007 	mov	r0, r7
   38cc8:	ebfffe35 	bl	385a4 <CString::PutString(char const*)>
   38ccc:	eaffff2d 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38cd0:	e59b8000 	ldr	r8, [fp]
   38cd4:	e28bb004 	add	fp, fp, #4
   38cd8:	e1a00008 	mov	r0, r8
   38cdc:	ebfff144 	bl	351f4 <strlen>
   38ce0:	e59d3004 	ldr	r3, [sp, #4]
   38ce4:	e1a06000 	mov	r6, r0
   38ce8:	e3530000 	cmp	r3, #0
   38cec:	1a0000cc 	bne	39024 <CString::FormatV(char const*, std::__va_list)+0x6d4>
   38cf0:	e1500004 	cmp	r0, r4
   38cf4:	3a0000f1 	bcc	390c0 <CString::FormatV(char const*, std::__va_list)+0x770>
   38cf8:	e1a01008 	mov	r1, r8
   38cfc:	e1a00007 	mov	r0, r7
   38d00:	ebfffe27 	bl	385a4 <CString::PutString(char const*)>
   38d04:	eaffff1f 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38d08:	e59b8000 	ldr	r8, [fp]
   38d0c:	e28b3004 	add	r3, fp, #4
   38d10:	e3580000 	cmp	r8, #0
   38d14:	b2688000 	rsblt	r8, r8, #0
   38d18:	b3a09001 	movlt	r9, #1
   38d1c:	a3a09000 	movge	r9, #0
   38d20:	e3580009 	cmp	r8, #9
   38d24:	e58d3008 	str	r3, [sp, #8]
   38d28:	e1a06008 	mov	r6, r8
   38d2c:	c3a0a001 	movgt	sl, #1
   38d30:	da0000df 	ble	390b4 <CString::FormatV(char const*, std::__va_list)+0x764>
   38d34:	e08aa10a 	add	sl, sl, sl, lsl #2
   38d38:	e1a0a08a 	lsl	sl, sl, #1
   38d3c:	e1a0100a 	mov	r1, sl
   38d40:	e1a00008 	mov	r0, r8
   38d44:	ebffec5d 	bl	33ec0 <__aeabi_uidiv>
   38d48:	e3500009 	cmp	r0, #9
   38d4c:	8afffff8 	bhi	38d34 <CString::FormatV(char const*, std::__va_list)+0x3e4>
   38d50:	e1a0b000 	mov	fp, r0
   38d54:	e28d8018 	add	r8, sp, #24
   38d58:	ea000004 	b	38d70 <CString::FormatV(char const*, std::__va_list)+0x420>
   38d5c:	e1a0100a 	mov	r1, sl
   38d60:	e1a00006 	mov	r0, r6
   38d64:	e1a0800c 	mov	r8, ip
   38d68:	ebffec54 	bl	33ec0 <__aeabi_uidiv>
   38d6c:	e1a0b000 	mov	fp, r0
   38d70:	e1a00006 	mov	r0, r6
   38d74:	e1a0100a 	mov	r1, sl
   38d78:	ebffec54 	bl	33ed0 <__aeabi_uidivmod>
   38d7c:	e1a0c008 	mov	ip, r8
   38d80:	e35b0009 	cmp	fp, #9
   38d84:	e6efb07b 	uxtb	fp, fp
   38d88:	e28b3030 	add	r3, fp, #48	; 0x30
   38d8c:	96afb073 	sxtbls	fp, r3
   38d90:	e59f3458 	ldr	r3, [pc, #1112]	; 391f0 <CString::FormatV(char const*, std::__va_list)+0x8a0>
   38d94:	828bb057 	addhi	fp, fp, #87	; 0x57
   38d98:	e083239a 	umull	r2, r3, sl, r3
   38d9c:	86afb07b 	sxtbhi	fp, fp
   38da0:	e1b0a1a3 	lsrs	sl, r3, #3
   38da4:	e1a06001 	mov	r6, r1
   38da8:	e4ccb001 	strb	fp, [ip], #1
   38dac:	1affffea 	bne	38d5c <CString::FormatV(char const*, std::__va_list)+0x40c>
   38db0:	e5c8a001 	strb	sl, [r8, #1]
   38db4:	e28d0018 	add	r0, sp, #24
   38db8:	ebfff10d 	bl	351f4 <strlen>
   38dbc:	e3590000 	cmp	r9, #0
   38dc0:	e1a06000 	mov	r6, r0
   38dc4:	e59d3004 	ldr	r3, [sp, #4]
   38dc8:	1a00004e 	bne	38f08 <CString::FormatV(char const*, std::__va_list)+0x5b8>
   38dcc:	e3530000 	cmp	r3, #0
   38dd0:	0a0000df 	beq	39154 <CString::FormatV(char const*, std::__va_list)+0x804>
   38dd4:	e28d1018 	add	r1, sp, #24
   38dd8:	e1a00007 	mov	r0, r7
   38ddc:	ebfffdf0 	bl	385a4 <CString::PutString(char const*)>
   38de0:	e1540006 	cmp	r4, r6
   38de4:	8a0000dd 	bhi	39160 <CString::FormatV(char const*, std::__va_list)+0x810>
   38de8:	e59db008 	ldr	fp, [sp, #8]
   38dec:	eafffee5 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38df0:	e59d3004 	ldr	r3, [sp, #4]
   38df4:	e28b8004 	add	r8, fp, #4
   38df8:	e3530000 	cmp	r3, #0
   38dfc:	e1db60d0 	ldrsb	r6, [fp]
   38e00:	1a00007c 	bne	38ff8 <CString::FormatV(char const*, std::__va_list)+0x6a8>
   38e04:	e3540001 	cmp	r4, #1
   38e08:	8a000057 	bhi	38f6c <CString::FormatV(char const*, std::__va_list)+0x61c>
   38e0c:	e3a01001 	mov	r1, #1
   38e10:	e1a00007 	mov	r0, r7
   38e14:	ebfffd54 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38e18:	e597300c 	ldr	r3, [r7, #12]
   38e1c:	e1a0b008 	mov	fp, r8
   38e20:	e2832001 	add	r2, r3, #1
   38e24:	e587200c 	str	r2, [r7, #12]
   38e28:	e5c36000 	strb	r6, [r3]
   38e2c:	eafffed5 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38e30:	e3a08010 	mov	r8, #16
   38e34:	eaffff50 	b	38b7c <CString::FormatV(char const*, std::__va_list)+0x22c>
   38e38:	e3a01001 	mov	r1, #1
   38e3c:	e1a00007 	mov	r0, r7
   38e40:	e58d3004 	str	r3, [sp, #4]
   38e44:	ebfffd48 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38e48:	e3a01025 	mov	r1, #37	; 0x25
   38e4c:	e597200c 	ldr	r2, [r7, #12]
   38e50:	e59d3004 	ldr	r3, [sp, #4]
   38e54:	e2820001 	add	r0, r2, #1
   38e58:	e587000c 	str	r0, [r7, #12]
   38e5c:	e5c21000 	strb	r1, [r2]
   38e60:	e1a00007 	mov	r0, r7
   38e64:	e3a01001 	mov	r1, #1
   38e68:	e1d340d0 	ldrsb	r4, [r3]
   38e6c:	ebfffd3e 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38e70:	e597300c 	ldr	r3, [r7, #12]
   38e74:	e2832001 	add	r2, r3, #1
   38e78:	e587200c 	str	r2, [r7, #12]
   38e7c:	e5c34000 	strb	r4, [r3]
   38e80:	eafffec0 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38e84:	e3a01001 	mov	r1, #1
   38e88:	e1a00007 	mov	r0, r7
   38e8c:	ebfffd36 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38e90:	e597300c 	ldr	r3, [r7, #12]
   38e94:	e2855002 	add	r5, r5, #2
   38e98:	e2832001 	add	r2, r3, #1
   38e9c:	e587200c 	str	r2, [r7, #12]
   38ea0:	e5c36000 	strb	r6, [r3]
   38ea4:	eafffeb7 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38ea8:	e28d1018 	add	r1, sp, #24
   38eac:	e1a00007 	mov	r0, r7
   38eb0:	ebfffdbb 	bl	385a4 <CString::PutString(char const*)>
   38eb4:	e1560004 	cmp	r6, r4
   38eb8:	3a00006f 	bcc	3907c <CString::FormatV(char const*, std::__va_list)+0x72c>
   38ebc:	e59db014 	ldr	fp, [sp, #20]
   38ec0:	eafffeb0 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38ec4:	e59d3008 	ldr	r3, [sp, #8]
   38ec8:	e0444000 	sub	r4, r4, r0
   38ecc:	e3530000 	cmp	r3, #0
   38ed0:	e1a01004 	mov	r1, r4
   38ed4:	e1a00007 	mov	r0, r7
   38ed8:	13a06030 	movne	r6, #48	; 0x30
   38edc:	03a06020 	moveq	r6, #32
   38ee0:	ebfffd21 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38ee4:	e2443001 	sub	r3, r4, #1
   38ee8:	e597200c 	ldr	r2, [r7, #12]
   38eec:	e2433001 	sub	r3, r3, #1
   38ef0:	e2821001 	add	r1, r2, #1
   38ef4:	e3730001 	cmn	r3, #1
   38ef8:	e587100c 	str	r1, [r7, #12]
   38efc:	e5c26000 	strb	r6, [r2]
   38f00:	1afffff8 	bne	38ee8 <CString::FormatV(char const*, std::__va_list)+0x598>
   38f04:	eaffff58 	b	38c6c <CString::FormatV(char const*, std::__va_list)+0x31c>
   38f08:	e3530000 	cmp	r3, #0
   38f0c:	e2806001 	add	r6, r0, #1
   38f10:	1a000086 	bne	39130 <CString::FormatV(char const*, std::__va_list)+0x7e0>
   38f14:	e1540006 	cmp	r4, r6
   38f18:	9a0000ab 	bls	391cc <CString::FormatV(char const*, std::__va_list)+0x87c>
   38f1c:	e0444006 	sub	r4, r4, r6
   38f20:	e1a00007 	mov	r0, r7
   38f24:	e1a01004 	mov	r1, r4
   38f28:	ebfffd0f 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38f2c:	e3a00020 	mov	r0, #32
   38f30:	e2443001 	sub	r3, r4, #1
   38f34:	e597200c 	ldr	r2, [r7, #12]
   38f38:	e2433001 	sub	r3, r3, #1
   38f3c:	e2821001 	add	r1, r2, #1
   38f40:	e3730001 	cmn	r3, #1
   38f44:	e587100c 	str	r1, [r7, #12]
   38f48:	e5c20000 	strb	r0, [r2]
   38f4c:	1afffff8 	bne	38f34 <CString::FormatV(char const*, std::__va_list)+0x5e4>
   38f50:	e3590000 	cmp	r9, #0
   38f54:	1a00009c 	bne	391cc <CString::FormatV(char const*, std::__va_list)+0x87c>
   38f58:	e28d1018 	add	r1, sp, #24
   38f5c:	e1a00007 	mov	r0, r7
   38f60:	e59db008 	ldr	fp, [sp, #8]
   38f64:	ebfffd8e 	bl	385a4 <CString::PutString(char const*)>
   38f68:	eafffe86 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38f6c:	e2441001 	sub	r1, r4, #1
   38f70:	e1a00007 	mov	r0, r7
   38f74:	ebfffcfc 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38f78:	e3a01020 	mov	r1, #32
   38f7c:	e2444002 	sub	r4, r4, #2
   38f80:	e597300c 	ldr	r3, [r7, #12]
   38f84:	e2444001 	sub	r4, r4, #1
   38f88:	e2832001 	add	r2, r3, #1
   38f8c:	e3740001 	cmn	r4, #1
   38f90:	e587200c 	str	r2, [r7, #12]
   38f94:	e5c31000 	strb	r1, [r3]
   38f98:	1afffff8 	bne	38f80 <CString::FormatV(char const*, std::__va_list)+0x630>
   38f9c:	eaffff9a 	b	38e0c <CString::FormatV(char const*, std::__va_list)+0x4bc>
   38fa0:	e1a0a006 	mov	sl, r6
   38fa4:	e3a0b001 	mov	fp, #1
   38fa8:	eaffff00 	b	38bb0 <CString::FormatV(char const*, std::__va_list)+0x260>
   38fac:	e28d1018 	add	r1, sp, #24
   38fb0:	e1a00007 	mov	r0, r7
   38fb4:	ebfffd7a 	bl	385a4 <CString::PutString(char const*)>
   38fb8:	e1560004 	cmp	r6, r4
   38fbc:	2afffe71 	bcs	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38fc0:	e0444006 	sub	r4, r4, r6
   38fc4:	e1a00007 	mov	r0, r7
   38fc8:	e1a01004 	mov	r1, r4
   38fcc:	ebfffce6 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   38fd0:	e3a00020 	mov	r0, #32
   38fd4:	e2443001 	sub	r3, r4, #1
   38fd8:	e597200c 	ldr	r2, [r7, #12]
   38fdc:	e2433001 	sub	r3, r3, #1
   38fe0:	e2821001 	add	r1, r2, #1
   38fe4:	e3730001 	cmn	r3, #1
   38fe8:	e587100c 	str	r1, [r7, #12]
   38fec:	e5c20000 	strb	r0, [r2]
   38ff0:	1afffff8 	bne	38fd8 <CString::FormatV(char const*, std::__va_list)+0x688>
   38ff4:	eafffe63 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   38ff8:	e3a01001 	mov	r1, #1
   38ffc:	e1a00007 	mov	r0, r7
   39000:	ebfffcd9 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   39004:	e597300c 	ldr	r3, [r7, #12]
   39008:	e3540001 	cmp	r4, #1
   3900c:	e2832001 	add	r2, r3, #1
   39010:	e587200c 	str	r2, [r7, #12]
   39014:	e5c36000 	strb	r6, [r3]
   39018:	8a00005e 	bhi	39198 <CString::FormatV(char const*, std::__va_list)+0x848>
   3901c:	e1a0b008 	mov	fp, r8
   39020:	eafffe58 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   39024:	e1a01008 	mov	r1, r8
   39028:	e1a00007 	mov	r0, r7
   3902c:	ebfffd5c 	bl	385a4 <CString::PutString(char const*)>
   39030:	e1560004 	cmp	r6, r4
   39034:	2afffe53 	bcs	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   39038:	e0444006 	sub	r4, r4, r6
   3903c:	e1a00007 	mov	r0, r7
   39040:	e1a01004 	mov	r1, r4
   39044:	ebfffcc8 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   39048:	e3a00020 	mov	r0, #32
   3904c:	e2443001 	sub	r3, r4, #1
   39050:	e597200c 	ldr	r2, [r7, #12]
   39054:	e2433001 	sub	r3, r3, #1
   39058:	e2821001 	add	r1, r2, #1
   3905c:	e3730001 	cmn	r3, #1
   39060:	e587100c 	str	r1, [r7, #12]
   39064:	e5c20000 	strb	r0, [r2]
   39068:	1afffff8 	bne	39050 <CString::FormatV(char const*, std::__va_list)+0x700>
   3906c:	eafffe45 	b	38988 <CString::FormatV(char const*, std::__va_list)+0x38>
   39070:	e1a03005 	mov	r3, r5
   39074:	e2855001 	add	r5, r5, #1
   39078:	eafffe70 	b	38a40 <CString::FormatV(char const*, std::__va_list)+0xf0>
   3907c:	e0444006 	sub	r4, r4, r6
   39080:	e1a00007 	mov	r0, r7
   39084:	e1a01004 	mov	r1, r4
   39088:	ebfffcb7 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   3908c:	e3a00020 	mov	r0, #32
   39090:	e2443001 	sub	r3, r4, #1
   39094:	e597200c 	ldr	r2, [r7, #12]
   39098:	e2433001 	sub	r3, r3, #1
   3909c:	e2821001 	add	r1, r2, #1
   390a0:	e3730001 	cmn	r3, #1
   390a4:	e587100c 	str	r1, [r7, #12]
   390a8:	e5c20000 	strb	r0, [r2]
   390ac:	1afffff8 	bne	39094 <CString::FormatV(char const*, std::__va_list)+0x744>
   390b0:	eaffff81 	b	38ebc <CString::FormatV(char const*, std::__va_list)+0x56c>
   390b4:	e1a0b008 	mov	fp, r8
   390b8:	e3a0a001 	mov	sl, #1
   390bc:	eaffff24 	b	38d54 <CString::FormatV(char const*, std::__va_list)+0x404>
   390c0:	e0444000 	sub	r4, r4, r0
   390c4:	e1a01004 	mov	r1, r4
   390c8:	e1a00007 	mov	r0, r7
   390cc:	ebfffca6 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   390d0:	e3a00020 	mov	r0, #32
   390d4:	e2443001 	sub	r3, r4, #1
   390d8:	e597200c 	ldr	r2, [r7, #12]
   390dc:	e2433001 	sub	r3, r3, #1
   390e0:	e2821001 	add	r1, r2, #1
   390e4:	e3730001 	cmn	r3, #1
   390e8:	e587100c 	str	r1, [r7, #12]
   390ec:	e5c20000 	strb	r0, [r2]
   390f0:	1afffff8 	bne	390d8 <CString::FormatV(char const*, std::__va_list)+0x788>
   390f4:	eafffeff 	b	38cf8 <CString::FormatV(char const*, std::__va_list)+0x3a8>
   390f8:	e0444000 	sub	r4, r4, r0
   390fc:	e1a01004 	mov	r1, r4
   39100:	e1a00007 	mov	r0, r7
   39104:	ebfffc98 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   39108:	e3a00020 	mov	r0, #32
   3910c:	e2443001 	sub	r3, r4, #1
   39110:	e597200c 	ldr	r2, [r7, #12]
   39114:	e2433001 	sub	r3, r3, #1
   39118:	e2821001 	add	r1, r2, #1
   3911c:	e3730001 	cmn	r3, #1
   39120:	e587100c 	str	r1, [r7, #12]
   39124:	e5c20000 	strb	r0, [r2]
   39128:	1afffff8 	bne	39110 <CString::FormatV(char const*, std::__va_list)+0x7c0>
   3912c:	eafffee3 	b	38cc0 <CString::FormatV(char const*, std::__va_list)+0x370>
   39130:	e3a01001 	mov	r1, #1
   39134:	e1a00007 	mov	r0, r7
   39138:	ebfffc8b 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   3913c:	e3a0202d 	mov	r2, #45	; 0x2d
   39140:	e597300c 	ldr	r3, [r7, #12]
   39144:	e2831001 	add	r1, r3, #1
   39148:	e587100c 	str	r1, [r7, #12]
   3914c:	e5c32000 	strb	r2, [r3]
   39150:	eaffff1f 	b	38dd4 <CString::FormatV(char const*, std::__va_list)+0x484>
   39154:	e1500004 	cmp	r0, r4
   39158:	2affff7e 	bcs	38f58 <CString::FormatV(char const*, std::__va_list)+0x608>
   3915c:	eaffff6e 	b	38f1c <CString::FormatV(char const*, std::__va_list)+0x5cc>
   39160:	e0444006 	sub	r4, r4, r6
   39164:	e1a00007 	mov	r0, r7
   39168:	e1a01004 	mov	r1, r4
   3916c:	ebfffc7e 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   39170:	e3a00020 	mov	r0, #32
   39174:	e2443001 	sub	r3, r4, #1
   39178:	e597200c 	ldr	r2, [r7, #12]
   3917c:	e2433001 	sub	r3, r3, #1
   39180:	e2821001 	add	r1, r2, #1
   39184:	e3730001 	cmn	r3, #1
   39188:	e587100c 	str	r1, [r7, #12]
   3918c:	e5c20000 	strb	r0, [r2]
   39190:	1afffff8 	bne	39178 <CString::FormatV(char const*, std::__va_list)+0x828>
   39194:	eaffff13 	b	38de8 <CString::FormatV(char const*, std::__va_list)+0x498>
   39198:	e2441001 	sub	r1, r4, #1
   3919c:	e1a00007 	mov	r0, r7
   391a0:	ebfffc71 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   391a4:	e3a01020 	mov	r1, #32
   391a8:	e2444002 	sub	r4, r4, #2
   391ac:	e597300c 	ldr	r3, [r7, #12]
   391b0:	e2444001 	sub	r4, r4, #1
   391b4:	e2832001 	add	r2, r3, #1
   391b8:	e3740001 	cmn	r4, #1
   391bc:	e587200c 	str	r2, [r7, #12]
   391c0:	e5c31000 	strb	r1, [r3]
   391c4:	1afffff8 	bne	391ac <CString::FormatV(char const*, std::__va_list)+0x85c>
   391c8:	eaffff93 	b	3901c <CString::FormatV(char const*, std::__va_list)+0x6cc>
   391cc:	e3a01001 	mov	r1, #1
   391d0:	e1a00007 	mov	r0, r7
   391d4:	ebfffc64 	bl	3836c <CString::ReserveSpace(unsigned int) [clone .part.0]>
   391d8:	e3a0202d 	mov	r2, #45	; 0x2d
   391dc:	e597300c 	ldr	r3, [r7, #12]
   391e0:	e2831001 	add	r1, r3, #1
   391e4:	e587100c 	str	r1, [r7, #12]
   391e8:	e5c32000 	strb	r2, [r3]
   391ec:	eaffff59 	b	38f58 <CString::FormatV(char const*, std::__va_list)+0x608>
   391f0:	cccccccd 	.word	0xcccccccd

000391f4 <CString::Format(char const*, ...)>:
   391f4:	e92d000e 	push	{r1, r2, r3}
   391f8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   391fc:	e24dd008 	sub	sp, sp, #8
   39200:	e28d3010 	add	r3, sp, #16
   39204:	e1a02003 	mov	r2, r3
   39208:	e59d100c 	ldr	r1, [sp, #12]
   3920c:	e58d3004 	str	r3, [sp, #4]
   39210:	ebfffdce 	bl	38950 <CString::FormatV(char const*, std::__va_list)>
   39214:	e28dd008 	add	sp, sp, #8
   39218:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   3921c:	e28dd00c 	add	sp, sp, #12
   39220:	e12fff1e 	bx	lr
   39224:	00000000 	andeq	r0, r0, r0

00039228 <DelayLoop>:
   39228:	e2500001 	subs	r0, r0, #1
   3922c:	8afffffd 	bhi	39228 <DelayLoop>
   39230:	e1a0f00e 	mov	pc, lr

00039234 <CExceptionHandler::CExceptionHandler()>:
   39234:	e92d4070 	push	{r4, r5, r6, lr}
   39238:	e59f5068 	ldr	r5, [pc, #104]	; 392a8 <CExceptionHandler::CExceptionHandler()+0x74>
   3923c:	e1a04000 	mov	r4, r0
   39240:	e5953000 	ldr	r3, [r5]
   39244:	e3530000 	cmp	r3, #0
   39248:	0a000003 	beq	3925c <CExceptionHandler::CExceptionHandler()+0x28>
   3924c:	e3a0202e 	mov	r2, #46	; 0x2e
   39250:	e59f1054 	ldr	r1, [pc, #84]	; 392ac <CExceptionHandler::CExceptionHandler()+0x78>
   39254:	e59f0054 	ldr	r0, [pc, #84]	; 392b0 <CExceptionHandler::CExceptionHandler()+0x7c>
   39258:	ebfff748 	bl	36f80 <assertion_failed>
   3925c:	e3a00000 	mov	r0, #0
   39260:	e59f104c 	ldr	r1, [pc, #76]	; 392b4 <CExceptionHandler::CExceptionHandler()+0x80>
   39264:	e59f204c 	ldr	r2, [pc, #76]	; 392b8 <CExceptionHandler::CExceptionHandler()+0x84>
   39268:	e59f304c 	ldr	r3, [pc, #76]	; 392bc <CExceptionHandler::CExceptionHandler()+0x88>
   3926c:	e1a01141 	asr	r1, r1, #2
   39270:	e1a02142 	asr	r2, r2, #2
   39274:	e1a03143 	asr	r3, r3, #2
   39278:	e2411002 	sub	r1, r1, #2
   3927c:	e2422002 	sub	r2, r2, #2
   39280:	e2433002 	sub	r3, r3, #2
   39284:	e38114ea 	orr	r1, r1, #-369098752	; 0xea000000
   39288:	e38224ea 	orr	r2, r2, #-369098752	; 0xea000000
   3928c:	e38334ea 	orr	r3, r3, #-369098752	; 0xea000000
   39290:	e5854000 	str	r4, [r5]
   39294:	e5801004 	str	r1, [r0, #4]
   39298:	e1c020fc 	strd	r2, [r0, #12]
   3929c:	ebffec79 	bl	34488 <SyncDataAndInstructionCache>
   392a0:	e1a00004 	mov	r0, r4
   392a4:	e8bd8070 	pop	{r4, r5, r6, pc}
   392a8:	0017af94 	.word	0x0017af94
   392ac:	0004f5d0 	.word	0x0004f5d0
   392b0:	0004a05c 	.word	0x0004a05c
   392b4:	00039488 	.word	0x00039488
   392b8:	000394c0 	.word	0x000394c0
   392bc:	000394fc 	.word	0x000394fc

000392c0 <CExceptionHandler::~CExceptionHandler()>:
   392c0:	e3a02000 	mov	r2, #0
   392c4:	e59f3004 	ldr	r3, [pc, #4]	; 392d0 <CExceptionHandler::~CExceptionHandler()+0x10>
   392c8:	e5832000 	str	r2, [r3]
   392cc:	e12fff1e 	bx	lr
   392d0:	0017af94 	.word	0x0017af94

000392d4 <CExceptionHandler::Throw(unsigned int)>:
   392d4:	e92d4010 	push	{r4, lr}
   392d8:	e1a04001 	mov	r4, r1
   392dc:	e24dd008 	sub	sp, sp, #8
   392e0:	ebfff8a2 	bl	37570 <CLogger::Get()>
   392e4:	e59f201c 	ldr	r2, [pc, #28]	; 39308 <CExceptionHandler::Throw(unsigned int)+0x34>
   392e8:	e59f301c 	ldr	r3, [pc, #28]	; 3930c <CExceptionHandler::Throw(unsigned int)+0x38>
   392ec:	e7921104 	ldr	r1, [r2, r4, lsl #2]
   392f0:	e3a02000 	mov	r2, #0
   392f4:	e58d1000 	str	r1, [sp]
   392f8:	e59f1010 	ldr	r1, [pc, #16]	; 39310 <CExceptionHandler::Throw(unsigned int)+0x3c>
   392fc:	ebfff97b 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   39300:	e28dd008 	add	sp, sp, #8
   39304:	e8bd8010 	pop	{r4, pc}
   39308:	00059040 	.word	0x00059040
   3930c:	0004f5e8 	.word	0x0004f5e8
   39310:	0004f5c8 	.word	0x0004f5c8

00039314 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)>:
   39314:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   39318:	e3510002 	cmp	r1, #2
   3931c:	e24dd024 	sub	sp, sp, #36	; 0x24
   39320:	e1a05001 	mov	r5, r1
   39324:	e1a04002 	mov	r4, r2
   39328:	0a000028 	beq	393d0 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0xbc>
   3932c:	e3510003 	cmp	r1, #3
   39330:	0a00001d 	beq	393ac <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0x98>
   39334:	e3a08000 	mov	r8, #0
   39338:	e1a09008 	mov	r9, r8
   3933c:	e3540000 	cmp	r4, #0
   39340:	0a00001d 	beq	393bc <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0xa8>
   39344:	e5943044 	ldr	r3, [r4, #68]	; 0x44
   39348:	e5947040 	ldr	r7, [r4, #64]	; 0x40
   3934c:	e203301f 	and	r3, r3, #31
   39350:	e3530012 	cmp	r3, #18
   39354:	e594603c 	ldr	r6, [r4, #60]	; 0x3c
   39358:	01c460d0 	ldrdeq	r6, [r4]
   3935c:	e59f1078 	ldr	r1, [pc, #120]	; 393dc <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0xc8>
   39360:	e1a00006 	mov	r0, r6
   39364:	ebfff794 	bl	371bc <debug_stacktrace(unsigned int const*, char const*)>
   39368:	ebfff880 	bl	37570 <CLogger::Get()>
   3936c:	e59f306c 	ldr	r3, [pc, #108]	; 393e0 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0xcc>
   39370:	e5942044 	ldr	r2, [r4, #68]	; 0x44
   39374:	e7931105 	ldr	r1, [r3, r5, lsl #2]
   39378:	e5943048 	ldr	r3, [r4, #72]	; 0x48
   3937c:	e58d1000 	str	r1, [sp]
   39380:	e58d2018 	str	r2, [sp, #24]
   39384:	e58d3004 	str	r3, [sp, #4]
   39388:	e1cd61f0 	strd	r6, [sp, #16]
   3938c:	e58d800c 	str	r8, [sp, #12]
   39390:	e58d9008 	str	r9, [sp, #8]
   39394:	e59f3048 	ldr	r3, [pc, #72]	; 393e4 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0xd0>
   39398:	e3a02000 	mov	r2, #0
   3939c:	e59f1038 	ldr	r1, [pc, #56]	; 393dc <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0xc8>
   393a0:	ebfff952 	bl	378f0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   393a4:	e28dd024 	add	sp, sp, #36	; 0x24
   393a8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   393ac:	ee159f10 	mrc	15, 0, r9, cr5, cr0, {0}
   393b0:	ee168f10 	mrc	15, 0, r8, cr6, cr0, {0}
   393b4:	e3540000 	cmp	r4, #0
   393b8:	1affffe1 	bne	39344 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0x30>
   393bc:	e3a02067 	mov	r2, #103	; 0x67
   393c0:	e59f1020 	ldr	r1, [pc, #32]	; 393e8 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0xd4>
   393c4:	e59f0020 	ldr	r0, [pc, #32]	; 393ec <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0xd8>
   393c8:	ebfff6ec 	bl	36f80 <assertion_failed>
   393cc:	eaffffdc 	b	39344 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0x30>
   393d0:	ee159f30 	mrc	15, 0, r9, cr5, cr0, {1}
   393d4:	ee168f50 	mrc	15, 0, r8, cr6, cr0, {2}
   393d8:	eaffffd7 	b	3933c <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0x28>
   393dc:	0004f5c8 	.word	0x0004f5c8
   393e0:	00059040 	.word	0x00059040
   393e4:	0004f604 	.word	0x0004f604
   393e8:	0004f5d0 	.word	0x0004f5d0
   393ec:	0004f5f8 	.word	0x0004f5f8

000393f0 <CExceptionHandler::Get()>:
   393f0:	e92d4010 	push	{r4, lr}
   393f4:	e59f4020 	ldr	r4, [pc, #32]	; 3941c <CExceptionHandler::Get()+0x2c>
   393f8:	e5940000 	ldr	r0, [r4]
   393fc:	e3500000 	cmp	r0, #0
   39400:	18bd8010 	popne	{r4, pc}
   39404:	e3a0207e 	mov	r2, #126	; 0x7e
   39408:	e59f1010 	ldr	r1, [pc, #16]	; 39420 <CExceptionHandler::Get()+0x30>
   3940c:	e59f0010 	ldr	r0, [pc, #16]	; 39424 <CExceptionHandler::Get()+0x34>
   39410:	ebfff6da 	bl	36f80 <assertion_failed>
   39414:	e5940000 	ldr	r0, [r4]
   39418:	e8bd8010 	pop	{r4, pc}
   3941c:	0017af94 	.word	0x0017af94
   39420:	0004f5d0 	.word	0x0004f5d0
   39424:	0004a034 	.word	0x0004a034

00039428 <ExceptionHandler>:
   39428:	e92d4070 	push	{r4, r5, r6, lr}
   3942c:	e3a03000 	mov	r3, #0
   39430:	e1a05000 	mov	r5, r0
   39434:	e1a06001 	mov	r6, r1
   39438:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3943c:	e59f403c 	ldr	r4, [pc, #60]	; 39480 <ExceptionHandler+0x58>
   39440:	e5940000 	ldr	r0, [r4]
   39444:	e1500003 	cmp	r0, r3
   39448:	0a000003 	beq	3945c <ExceptionHandler+0x34>
   3944c:	e1a02006 	mov	r2, r6
   39450:	e1a01005 	mov	r1, r5
   39454:	e8bd4070 	pop	{r4, r5, r6, lr}
   39458:	eaffffad 	b	39314 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)>
   3945c:	e3a0207e 	mov	r2, #126	; 0x7e
   39460:	e59f101c 	ldr	r1, [pc, #28]	; 39484 <ExceptionHandler+0x5c>
   39464:	e59f001c 	ldr	r0, [pc, #28]	; 39488 <ExceptionHandler+0x60>
   39468:	ebfff6c4 	bl	36f80 <assertion_failed>
   3946c:	e5940000 	ldr	r0, [r4]
   39470:	e1a02006 	mov	r2, r6
   39474:	e1a01005 	mov	r1, r5
   39478:	e8bd4070 	pop	{r4, r5, r6, lr}
   3947c:	eaffffa4 	b	39314 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)>
   39480:	0017af94 	.word	0x0017af94
   39484:	0004f5d0 	.word	0x0004f5d0
   39488:	0004a034 	.word	0x0004a034

0003948c <UndefinedInstructionStub>:
   3948c:	e24ee004 	sub	lr, lr, #4
   39490:	e92d4000 	stmfd	sp!, {lr}
   39494:	e14fe000 	mrs	lr, SPSR
   39498:	e92d4000 	stmfd	sp!, {lr}
   3949c:	e94d7fff 	stmdb	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   394a0:	e24dd03c 	sub	sp, sp, #60	; 0x3c
   394a4:	e1a0100d 	mov	r1, sp
   394a8:	f1020012 	cps	#18
   394ac:	e1a0200d 	mov	r2, sp
   394b0:	e1a0300e 	mov	r3, lr
   394b4:	f102001f 	cps	#31
   394b8:	e1a0d001 	mov	sp, r1
   394bc:	e92d000c 	push	{r2, r3}
   394c0:	e1a0100d 	mov	r1, sp
   394c4:	e3a00001 	mov	r0, #1
   394c8:	eaffffd6 	b	39428 <ExceptionHandler>

000394cc <PrefetchAbortStub>:
   394cc:	e24ee004 	sub	lr, lr, #4
   394d0:	e92d4000 	stmfd	sp!, {lr}
   394d4:	e14fe000 	mrs	lr, SPSR
   394d8:	e92d4000 	stmfd	sp!, {lr}
   394dc:	e94d7fff 	stmdb	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   394e0:	e24dd03c 	sub	sp, sp, #60	; 0x3c
   394e4:	e1a0100d 	mov	r1, sp
   394e8:	f1020012 	cps	#18
   394ec:	e1a0200d 	mov	r2, sp
   394f0:	e1a0300e 	mov	r3, lr
   394f4:	f102001f 	cps	#31
   394f8:	e1a0d001 	mov	sp, r1
   394fc:	e92d000c 	push	{r2, r3}
   39500:	e1a0100d 	mov	r1, sp
   39504:	e3a00002 	mov	r0, #2
   39508:	eaffffc6 	b	39428 <ExceptionHandler>

0003950c <DataAbortStub>:
   3950c:	e24ee008 	sub	lr, lr, #8
   39510:	e92d4000 	stmfd	sp!, {lr}
   39514:	e14fe000 	mrs	lr, SPSR
   39518:	e92d4000 	stmfd	sp!, {lr}
   3951c:	e94d7fff 	stmdb	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   39520:	e24dd03c 	sub	sp, sp, #60	; 0x3c
   39524:	e1a0100d 	mov	r1, sp
   39528:	f1020012 	cps	#18
   3952c:	e1a0200d 	mov	r2, sp
   39530:	e1a0300e 	mov	r3, lr
   39534:	f102001f 	cps	#31
   39538:	e1a0d001 	mov	sp, r1
   3953c:	e92d000c 	push	{r2, r3}
   39540:	e1a0100d 	mov	r1, sp
   39544:	e3a00003 	mov	r0, #3
   39548:	eaffffb6 	b	39428 <ExceptionHandler>

0003954c <IRQStub>:
   3954c:	e24ee004 	sub	lr, lr, #4
   39550:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   39554:	eb000169 	bl	39b00 <InterruptHandler>
   39558:	e8fd9fff 	ldm	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^

0003955c <FIQStub>:
   3955c:	e24ee004 	sub	lr, lr, #4
   39560:	e92d400f 	push	{r0, r1, r2, r3, lr}
   39564:	e3a03000 	mov	r3, #0
   39568:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3956c:	e59f2040 	ldr	r2, [pc, #64]	; 395b4 <FIQStub+0x58>
   39570:	e5921000 	ldr	r1, [r2]
   39574:	e3510000 	cmp	r1, #0
   39578:	0a000004 	beq	39590 <FIQStub+0x34>
   3957c:	e5920004 	ldr	r0, [r2, #4]
   39580:	e12fff31 	blx	r1
   39584:	e3a03000 	mov	r3, #0
   39588:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3958c:	e8fd800f 	ldm	sp!, {r0, r1, r2, r3, pc}^
   39590:	e3a03000 	mov	r3, #0
   39594:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   39598:	e59f1018 	ldr	r1, [pc, #24]	; 395b8 <FIQStub+0x5c>
   3959c:	e3a00000 	mov	r0, #0
   395a0:	e5810000 	str	r0, [r1]
   395a4:	e3a03000 	mov	r3, #0
   395a8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   395ac:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   395b0:	e8fd800f 	ldm	sp!, {r0, r1, r2, r3, pc}^
   395b4:	00059050 	.word	0x00059050
   395b8:	2000b20c 	.word	0x2000b20c

000395bc <CInterruptSystem::CInterruptSystem()>:
   395bc:	e1a0c000 	mov	ip, r0
   395c0:	e2802f47 	add	r2, r0, #284	; 0x11c
   395c4:	e1a00002 	mov	r0, r2
   395c8:	e3a01000 	mov	r1, #0
   395cc:	e24c3004 	sub	r3, ip, #4
   395d0:	e5a31004 	str	r1, [r3, #4]!
   395d4:	e1530000 	cmp	r3, r0
   395d8:	e5a21004 	str	r1, [r2, #4]!
   395dc:	1afffffb 	bne	395d0 <CInterruptSystem::CInterruptSystem()+0x14>
   395e0:	e59f3008 	ldr	r3, [pc, #8]	; 395f0 <CInterruptSystem::CInterruptSystem()+0x34>
   395e4:	e1a0000c 	mov	r0, ip
   395e8:	e583c000 	str	ip, [r3]
   395ec:	e12fff1e 	bx	lr
   395f0:	0017af98 	.word	0x0017af98

000395f4 <CInterruptSystem::~CInterruptSystem()>:
   395f4:	e3a02000 	mov	r2, #0
   395f8:	e59f3004 	ldr	r3, [pc, #4]	; 39604 <CInterruptSystem::~CInterruptSystem()+0x10>
   395fc:	e5832000 	str	r2, [r3]
   39600:	e12fff1e 	bx	lr
   39604:	0017af98 	.word	0x0017af98

00039608 <CInterruptSystem::Initialize()>:
   39608:	e92d4010 	push	{r4, lr}
   3960c:	e3a04000 	mov	r4, #0
   39610:	e59f204c 	ldr	r2, [pc, #76]	; 39664 <CInterruptSystem::Initialize()+0x5c>
   39614:	e59f304c 	ldr	r3, [pc, #76]	; 39668 <CInterruptSystem::Initialize()+0x60>
   39618:	e1a02142 	asr	r2, r2, #2
   3961c:	e1a03143 	asr	r3, r3, #2
   39620:	e2422002 	sub	r2, r2, #2
   39624:	e2433002 	sub	r3, r3, #2
   39628:	e38224ea 	orr	r2, r2, #-369098752	; 0xea000000
   3962c:	e38334ea 	orr	r3, r3, #-369098752	; 0xea000000
   39630:	e1c421f8 	strd	r2, [r4, #24]
   39634:	ebffeb93 	bl	34488 <SyncDataAndInstructionCache>
   39638:	ee074f9a 	mcr	15, 0, r4, cr7, cr10, {4}
   3963c:	e3e02000 	mvn	r2, #0
   39640:	e59f3024 	ldr	r3, [pc, #36]	; 3966c <CInterruptSystem::Initialize()+0x64>
   39644:	e583420c 	str	r4, [r3, #524]	; 0x20c
   39648:	e583221c 	str	r2, [r3, #540]	; 0x21c
   3964c:	e5832220 	str	r2, [r3, #544]	; 0x220
   39650:	e5832224 	str	r2, [r3, #548]	; 0x224
   39654:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   39658:	f1080080 	cpsie	i
   3965c:	e3a00001 	mov	r0, #1
   39660:	e8bd8010 	pop	{r4, pc}
   39664:	00039534 	.word	0x00039534
   39668:	00039540 	.word	0x00039540
   3966c:	2000b000 	.word	0x2000b000

00039670 <CInterruptSystem::DisconnectFIQ()>:
   39670:	e92d4010 	push	{r4, lr}
   39674:	e59f403c 	ldr	r4, [pc, #60]	; 396b8 <CInterruptSystem::DisconnectFIQ()+0x48>
   39678:	e5943000 	ldr	r3, [r4]
   3967c:	e3530000 	cmp	r3, #0
   39680:	0a000007 	beq	396a4 <CInterruptSystem::DisconnectFIQ()+0x34>
   39684:	e3a03000 	mov	r3, #0
   39688:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3968c:	e59f2028 	ldr	r2, [pc, #40]	; 396bc <CInterruptSystem::DisconnectFIQ()+0x4c>
   39690:	e582320c 	str	r3, [r2, #524]	; 0x20c
   39694:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   39698:	e5843000 	str	r3, [r4]
   3969c:	e5843004 	str	r3, [r4, #4]
   396a0:	e8bd8010 	pop	{r4, pc}
   396a4:	e3a02084 	mov	r2, #132	; 0x84
   396a8:	e59f1010 	ldr	r1, [pc, #16]	; 396c0 <CInterruptSystem::DisconnectFIQ()+0x50>
   396ac:	e59f0010 	ldr	r0, [pc, #16]	; 396c4 <CInterruptSystem::DisconnectFIQ()+0x54>
   396b0:	ebfff632 	bl	36f80 <assertion_failed>
   396b4:	eafffff2 	b	39684 <CInterruptSystem::DisconnectFIQ()+0x14>
   396b8:	00059050 	.word	0x00059050
   396bc:	2000b000 	.word	0x2000b000
   396c0:	0004f68c 	.word	0x0004f68c
   396c4:	0004f69c 	.word	0x0004f69c

000396c8 <CInterruptSystem::EnableIRQ(unsigned int)>:
   396c8:	e92d4010 	push	{r4, lr}
   396cc:	e3a03000 	mov	r3, #0
   396d0:	e1a04000 	mov	r4, r0
   396d4:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   396d8:	e3500047 	cmp	r0, #71	; 0x47
   396dc:	8a00000d 	bhi	39718 <CInterruptSystem::EnableIRQ(unsigned int)+0x50>
   396e0:	e350001f 	cmp	r0, #31
   396e4:	959f2044 	ldrls	r2, [pc, #68]	; 39730 <CInterruptSystem::EnableIRQ(unsigned int)+0x68>
   396e8:	8a000006 	bhi	39708 <CInterruptSystem::EnableIRQ(unsigned int)+0x40>
   396ec:	e3a03001 	mov	r3, #1
   396f0:	e204401f 	and	r4, r4, #31
   396f4:	e1a04413 	lsl	r4, r3, r4
   396f8:	e5824000 	str	r4, [r2]
   396fc:	e3a03000 	mov	r3, #0
   39700:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   39704:	e8bd8010 	pop	{r4, pc}
   39708:	e350003f 	cmp	r0, #63	; 0x3f
   3970c:	959f2020 	ldrls	r2, [pc, #32]	; 39734 <CInterruptSystem::EnableIRQ(unsigned int)+0x6c>
   39710:	9afffff5 	bls	396ec <CInterruptSystem::EnableIRQ(unsigned int)+0x24>
   39714:	ea000003 	b	39728 <CInterruptSystem::EnableIRQ(unsigned int)+0x60>
   39718:	e3a02090 	mov	r2, #144	; 0x90
   3971c:	e59f1014 	ldr	r1, [pc, #20]	; 39738 <CInterruptSystem::EnableIRQ(unsigned int)+0x70>
   39720:	e59f0014 	ldr	r0, [pc, #20]	; 3973c <CInterruptSystem::EnableIRQ(unsigned int)+0x74>
   39724:	ebfff615 	bl	36f80 <assertion_failed>
   39728:	e59f2010 	ldr	r2, [pc, #16]	; 39740 <CInterruptSystem::EnableIRQ(unsigned int)+0x78>
   3972c:	eaffffee 	b	396ec <CInterruptSystem::EnableIRQ(unsigned int)+0x24>
   39730:	2000b210 	.word	0x2000b210
   39734:	2000b214 	.word	0x2000b214
   39738:	0004f68c 	.word	0x0004f68c
   3973c:	0004f6b4 	.word	0x0004f6b4
   39740:	2000b218 	.word	0x2000b218

00039744 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>:
   39744:	e3510047 	cmp	r1, #71	; 0x47
   39748:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   3974c:	e1a04001 	mov	r4, r1
   39750:	e1a05000 	mov	r5, r0
   39754:	e1a08002 	mov	r8, r2
   39758:	e1a07003 	mov	r7, r3
   3975c:	8a00000c 	bhi	39794 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)+0x50>
   39760:	e7953104 	ldr	r3, [r5, r4, lsl #2]
   39764:	e0856104 	add	r6, r5, r4, lsl #2
   39768:	e3530000 	cmp	r3, #0
   3976c:	0a000003 	beq	39780 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)+0x3c>
   39770:	e3a02060 	mov	r2, #96	; 0x60
   39774:	e59f102c 	ldr	r1, [pc, #44]	; 397a8 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)+0x64>
   39778:	e59f002c 	ldr	r0, [pc, #44]	; 397ac <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)+0x68>
   3977c:	ebfff5ff 	bl	36f80 <assertion_failed>
   39780:	e7858104 	str	r8, [r5, r4, lsl #2]
   39784:	e1a00004 	mov	r0, r4
   39788:	e5867120 	str	r7, [r6, #288]	; 0x120
   3978c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   39790:	eaffffcc 	b	396c8 <CInterruptSystem::EnableIRQ(unsigned int)>
   39794:	e3a0205f 	mov	r2, #95	; 0x5f
   39798:	e59f1008 	ldr	r1, [pc, #8]	; 397a8 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)+0x64>
   3979c:	e59f000c 	ldr	r0, [pc, #12]	; 397b0 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)+0x6c>
   397a0:	ebfff5f6 	bl	36f80 <assertion_failed>
   397a4:	eaffffed 	b	39760 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)+0x1c>
   397a8:	0004f68c 	.word	0x0004f68c
   397ac:	0004f6c8 	.word	0x0004f6c8
   397b0:	0004f6b4 	.word	0x0004f6b4

000397b4 <CInterruptSystem::DisableIRQ(unsigned int)>:
   397b4:	e92d4010 	push	{r4, lr}
   397b8:	e3a03000 	mov	r3, #0
   397bc:	e1a04000 	mov	r4, r0
   397c0:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   397c4:	e3500047 	cmp	r0, #71	; 0x47
   397c8:	8a00000d 	bhi	39804 <CInterruptSystem::DisableIRQ(unsigned int)+0x50>
   397cc:	e350001f 	cmp	r0, #31
   397d0:	959f2044 	ldrls	r2, [pc, #68]	; 3981c <CInterruptSystem::DisableIRQ(unsigned int)+0x68>
   397d4:	8a000006 	bhi	397f4 <CInterruptSystem::DisableIRQ(unsigned int)+0x40>
   397d8:	e3a03001 	mov	r3, #1
   397dc:	e204401f 	and	r4, r4, #31
   397e0:	e1a04413 	lsl	r4, r3, r4
   397e4:	e5824000 	str	r4, [r2]
   397e8:	e3a03000 	mov	r3, #0
   397ec:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   397f0:	e8bd8010 	pop	{r4, pc}
   397f4:	e350003f 	cmp	r0, #63	; 0x3f
   397f8:	959f2020 	ldrls	r2, [pc, #32]	; 39820 <CInterruptSystem::DisableIRQ(unsigned int)+0x6c>
   397fc:	9afffff5 	bls	397d8 <CInterruptSystem::DisableIRQ(unsigned int)+0x24>
   39800:	ea000003 	b	39814 <CInterruptSystem::DisableIRQ(unsigned int)+0x60>
   39804:	e3a0209b 	mov	r2, #155	; 0x9b
   39808:	e59f1014 	ldr	r1, [pc, #20]	; 39824 <CInterruptSystem::DisableIRQ(unsigned int)+0x70>
   3980c:	e59f0014 	ldr	r0, [pc, #20]	; 39828 <CInterruptSystem::DisableIRQ(unsigned int)+0x74>
   39810:	ebfff5da 	bl	36f80 <assertion_failed>
   39814:	e59f2010 	ldr	r2, [pc, #16]	; 3982c <CInterruptSystem::DisableIRQ(unsigned int)+0x78>
   39818:	eaffffee 	b	397d8 <CInterruptSystem::DisableIRQ(unsigned int)+0x24>
   3981c:	2000b21c 	.word	0x2000b21c
   39820:	2000b220 	.word	0x2000b220
   39824:	0004f68c 	.word	0x0004f68c
   39828:	0004f6b4 	.word	0x0004f6b4
   3982c:	2000b224 	.word	0x2000b224

00039830 <CInterruptSystem::DisconnectIRQ(unsigned int)>:
   39830:	e3510047 	cmp	r1, #71	; 0x47
   39834:	e92d4070 	push	{r4, r5, r6, lr}
   39838:	e1a04001 	mov	r4, r1
   3983c:	e1a05000 	mov	r5, r0
   39840:	8a000009 	bhi	3986c <CInterruptSystem::DisconnectIRQ(unsigned int)+0x3c>
   39844:	e7953104 	ldr	r3, [r5, r4, lsl #2]
   39848:	e0856104 	add	r6, r5, r4, lsl #2
   3984c:	e3530000 	cmp	r3, #0
   39850:	0a00000d 	beq	3988c <CInterruptSystem::DisconnectIRQ(unsigned int)+0x5c>
   39854:	e1a00004 	mov	r0, r4
   39858:	ebffffd5 	bl	397b4 <CInterruptSystem::DisableIRQ(unsigned int)>
   3985c:	e3a03000 	mov	r3, #0
   39860:	e7853104 	str	r3, [r5, r4, lsl #2]
   39864:	e5863120 	str	r3, [r6, #288]	; 0x120
   39868:	e8bd8070 	pop	{r4, r5, r6, pc}
   3986c:	e3a0206a 	mov	r2, #106	; 0x6a
   39870:	e59f1028 	ldr	r1, [pc, #40]	; 398a0 <CInterruptSystem::DisconnectIRQ(unsigned int)+0x70>
   39874:	e59f0028 	ldr	r0, [pc, #40]	; 398a4 <CInterruptSystem::DisconnectIRQ(unsigned int)+0x74>
   39878:	ebfff5c0 	bl	36f80 <assertion_failed>
   3987c:	e7953104 	ldr	r3, [r5, r4, lsl #2]
   39880:	e0856104 	add	r6, r5, r4, lsl #2
   39884:	e3530000 	cmp	r3, #0
   39888:	1afffff1 	bne	39854 <CInterruptSystem::DisconnectIRQ(unsigned int)+0x24>
   3988c:	e3a0206b 	mov	r2, #107	; 0x6b
   39890:	e59f1008 	ldr	r1, [pc, #8]	; 398a0 <CInterruptSystem::DisconnectIRQ(unsigned int)+0x70>
   39894:	e59f000c 	ldr	r0, [pc, #12]	; 398a8 <CInterruptSystem::DisconnectIRQ(unsigned int)+0x78>
   39898:	ebfff5b8 	bl	36f80 <assertion_failed>
   3989c:	eaffffec 	b	39854 <CInterruptSystem::DisconnectIRQ(unsigned int)+0x24>
   398a0:	0004f68c 	.word	0x0004f68c
   398a4:	0004f6b4 	.word	0x0004f6b4
   398a8:	0004f6e4 	.word	0x0004f6e4

000398ac <CInterruptSystem::EnableFIQ(unsigned int)>:
   398ac:	e92d4010 	push	{r4, lr}
   398b0:	e3a03000 	mov	r3, #0
   398b4:	e1a04000 	mov	r4, r0
   398b8:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   398bc:	e3500047 	cmp	r0, #71	; 0x47
   398c0:	9a000003 	bls	398d4 <CInterruptSystem::EnableFIQ(unsigned int)+0x28>
   398c4:	e3a020a6 	mov	r2, #166	; 0xa6
   398c8:	e59f101c 	ldr	r1, [pc, #28]	; 398ec <CInterruptSystem::EnableFIQ(unsigned int)+0x40>
   398cc:	e59f001c 	ldr	r0, [pc, #28]	; 398f0 <CInterruptSystem::EnableFIQ(unsigned int)+0x44>
   398d0:	ebfff5aa 	bl	36f80 <assertion_failed>
   398d4:	e59f3018 	ldr	r3, [pc, #24]	; 398f4 <CInterruptSystem::EnableFIQ(unsigned int)+0x48>
   398d8:	e3844080 	orr	r4, r4, #128	; 0x80
   398dc:	e583420c 	str	r4, [r3, #524]	; 0x20c
   398e0:	e3a03000 	mov	r3, #0
   398e4:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   398e8:	e8bd8010 	pop	{r4, pc}
   398ec:	0004f68c 	.word	0x0004f68c
   398f0:	0004f700 	.word	0x0004f700
   398f4:	2000b000 	.word	0x2000b000

000398f8 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)>:
   398f8:	e3510047 	cmp	r1, #71	; 0x47
   398fc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   39900:	e1a06001 	mov	r6, r1
   39904:	e1a05002 	mov	r5, r2
   39908:	e1a07003 	mov	r7, r3
   3990c:	8a00000d 	bhi	39948 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x50>
   39910:	e3550000 	cmp	r5, #0
   39914:	0a000011 	beq	39960 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x68>
   39918:	e59f4054 	ldr	r4, [pc, #84]	; 39974 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x7c>
   3991c:	e5943000 	ldr	r3, [r4]
   39920:	e3530000 	cmp	r3, #0
   39924:	0a000003 	beq	39938 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x40>
   39928:	e3a0207a 	mov	r2, #122	; 0x7a
   3992c:	e59f1044 	ldr	r1, [pc, #68]	; 39978 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x80>
   39930:	e59f0044 	ldr	r0, [pc, #68]	; 3997c <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x84>
   39934:	ebfff591 	bl	36f80 <assertion_failed>
   39938:	e1a00006 	mov	r0, r6
   3993c:	e88400a0 	stm	r4, {r5, r7}
   39940:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   39944:	eaffffd8 	b	398ac <CInterruptSystem::EnableFIQ(unsigned int)>
   39948:	e3a02078 	mov	r2, #120	; 0x78
   3994c:	e59f1024 	ldr	r1, [pc, #36]	; 39978 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x80>
   39950:	e59f0028 	ldr	r0, [pc, #40]	; 39980 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x88>
   39954:	ebfff589 	bl	36f80 <assertion_failed>
   39958:	e3550000 	cmp	r5, #0
   3995c:	1affffed 	bne	39918 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x20>
   39960:	e3a02079 	mov	r2, #121	; 0x79
   39964:	e59f100c 	ldr	r1, [pc, #12]	; 39978 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x80>
   39968:	e59f0014 	ldr	r0, [pc, #20]	; 39984 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x8c>
   3996c:	ebfff583 	bl	36f80 <assertion_failed>
   39970:	eaffffe8 	b	39918 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x20>
   39974:	00059050 	.word	0x00059050
   39978:	0004f68c 	.word	0x0004f68c
   3997c:	0004f714 	.word	0x0004f714
   39980:	0004f700 	.word	0x0004f700
   39984:	0004f6a4 	.word	0x0004f6a4

00039988 <CInterruptSystem::DisableFIQ()>:
   39988:	e3a03000 	mov	r3, #0
   3998c:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   39990:	e59f2008 	ldr	r2, [pc, #8]	; 399a0 <CInterruptSystem::DisableFIQ()+0x18>
   39994:	e582320c 	str	r3, [r2, #524]	; 0x20c
   39998:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3999c:	e12fff1e 	bx	lr
   399a0:	2000b000 	.word	0x2000b000

000399a4 <CInterruptSystem::Get()>:
   399a4:	e92d4010 	push	{r4, lr}
   399a8:	e59f4020 	ldr	r4, [pc, #32]	; 399d0 <CInterruptSystem::Get()+0x2c>
   399ac:	e5940000 	ldr	r0, [r4]
   399b0:	e3500000 	cmp	r0, #0
   399b4:	18bd8010 	popne	{r4, pc}
   399b8:	e3a020b8 	mov	r2, #184	; 0xb8
   399bc:	e59f1010 	ldr	r1, [pc, #16]	; 399d4 <CInterruptSystem::Get()+0x30>
   399c0:	e59f0010 	ldr	r0, [pc, #16]	; 399d8 <CInterruptSystem::Get()+0x34>
   399c4:	ebfff56d 	bl	36f80 <assertion_failed>
   399c8:	e5940000 	ldr	r0, [r4]
   399cc:	e8bd8010 	pop	{r4, pc}
   399d0:	0017af98 	.word	0x0017af98
   399d4:	0004f68c 	.word	0x0004f68c
   399d8:	0004a034 	.word	0x0004a034

000399dc <CInterruptSystem::CallIRQHandler(unsigned int)>:
   399dc:	e3510047 	cmp	r1, #71	; 0x47
   399e0:	e92d4070 	push	{r4, r5, r6, lr}
   399e4:	e1a06001 	mov	r6, r1
   399e8:	e1a05000 	mov	r5, r0
   399ec:	8a000007 	bhi	39a10 <CInterruptSystem::CallIRQHandler(unsigned int)+0x34>
   399f0:	e7954106 	ldr	r4, [r5, r6, lsl #2]
   399f4:	e0855106 	add	r5, r5, r6, lsl #2
   399f8:	e3540000 	cmp	r4, #0
   399fc:	0a000008 	beq	39a24 <CInterruptSystem::CallIRQHandler(unsigned int)+0x48>
   39a00:	e5950120 	ldr	r0, [r5, #288]	; 0x120
   39a04:	e12fff34 	blx	r4
   39a08:	e3a00001 	mov	r0, #1
   39a0c:	e8bd8070 	pop	{r4, r5, r6, pc}
   39a10:	e3a020be 	mov	r2, #190	; 0xbe
   39a14:	e59f1018 	ldr	r1, [pc, #24]	; 39a34 <CInterruptSystem::CallIRQHandler(unsigned int)+0x58>
   39a18:	e59f0018 	ldr	r0, [pc, #24]	; 39a38 <CInterruptSystem::CallIRQHandler(unsigned int)+0x5c>
   39a1c:	ebfff557 	bl	36f80 <assertion_failed>
   39a20:	eafffff2 	b	399f0 <CInterruptSystem::CallIRQHandler(unsigned int)+0x14>
   39a24:	e1a00006 	mov	r0, r6
   39a28:	ebffff61 	bl	397b4 <CInterruptSystem::DisableIRQ(unsigned int)>
   39a2c:	e1a00004 	mov	r0, r4
   39a30:	e8bd8070 	pop	{r4, r5, r6, pc}
   39a34:	0004f68c 	.word	0x0004f68c
   39a38:	0004f6b4 	.word	0x0004f6b4

00039a3c <CInterruptSystem::InterruptHandler()>:
   39a3c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   39a40:	e59f70a8 	ldr	r7, [pc, #168]	; 39af0 <CInterruptSystem::InterruptHandler()+0xb4>
   39a44:	e24dd010 	sub	sp, sp, #16
   39a48:	e5973000 	ldr	r3, [r7]
   39a4c:	e3530000 	cmp	r3, #0
   39a50:	0a000021 	beq	39adc <CInterruptSystem::InterruptHandler()+0xa0>
   39a54:	e3a06000 	mov	r6, #0
   39a58:	ee076f9a 	mcr	15, 0, r6, cr7, cr10, {4}
   39a5c:	e59f3090 	ldr	r3, [pc, #144]	; 39af4 <CInterruptSystem::InterruptHandler()+0xb8>
   39a60:	e5932204 	ldr	r2, [r3, #516]	; 0x204
   39a64:	e58d2004 	str	r2, [sp, #4]
   39a68:	e5932208 	ldr	r2, [r3, #520]	; 0x208
   39a6c:	e58d2008 	str	r2, [sp, #8]
   39a70:	e5933200 	ldr	r3, [r3, #512]	; 0x200
   39a74:	e6ef3073 	uxtb	r3, r3
   39a78:	e58d300c 	str	r3, [sp, #12]
   39a7c:	ee076fba 	mcr	15, 0, r6, cr7, cr10, {5}
   39a80:	e28d8004 	add	r8, sp, #4
   39a84:	e7984106 	ldr	r4, [r8, r6, lsl #2]
   39a88:	e3540000 	cmp	r4, #0
   39a8c:	1a000004 	bne	39aa4 <CInterruptSystem::InterruptHandler()+0x68>
   39a90:	e2866001 	add	r6, r6, #1
   39a94:	e3560003 	cmp	r6, #3
   39a98:	1afffff9 	bne	39a84 <CInterruptSystem::InterruptHandler()+0x48>
   39a9c:	e28dd010 	add	sp, sp, #16
   39aa0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   39aa4:	e1a05286 	lsl	r5, r6, #5
   39aa8:	ea000002 	b	39ab8 <CInterruptSystem::InterruptHandler()+0x7c>
   39aac:	e1b040a4 	lsrs	r4, r4, #1
   39ab0:	e2855001 	add	r5, r5, #1
   39ab4:	0afffff5 	beq	39a90 <CInterruptSystem::InterruptHandler()+0x54>
   39ab8:	e3140001 	tst	r4, #1
   39abc:	0afffffa 	beq	39aac <CInterruptSystem::InterruptHandler()+0x70>
   39ac0:	e1a01005 	mov	r1, r5
   39ac4:	e5970000 	ldr	r0, [r7]
   39ac8:	ebffffc3 	bl	399dc <CInterruptSystem::CallIRQHandler(unsigned int)>
   39acc:	e3500000 	cmp	r0, #0
   39ad0:	0afffff5 	beq	39aac <CInterruptSystem::InterruptHandler()+0x70>
   39ad4:	e28dd010 	add	sp, sp, #16
   39ad8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   39adc:	e3a020d1 	mov	r2, #209	; 0xd1
   39ae0:	e59f1010 	ldr	r1, [pc, #16]	; 39af8 <CInterruptSystem::InterruptHandler()+0xbc>
   39ae4:	e59f0010 	ldr	r0, [pc, #16]	; 39afc <CInterruptSystem::InterruptHandler()+0xc0>
   39ae8:	ebfff524 	bl	36f80 <assertion_failed>
   39aec:	eaffffd8 	b	39a54 <CInterruptSystem::InterruptHandler()+0x18>
   39af0:	0017af98 	.word	0x0017af98
   39af4:	2000b000 	.word	0x2000b000
   39af8:	0004f68c 	.word	0x0004f68c
   39afc:	0004a034 	.word	0x0004a034

00039b00 <InterruptHandler>:
   39b00:	e92d4010 	push	{r4, lr}
   39b04:	e3a04000 	mov	r4, #0
   39b08:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   39b0c:	ebffffca 	bl	39a3c <CInterruptSystem::InterruptHandler()>
   39b10:	ee074f9a 	mcr	15, 0, r4, cr7, cr10, {4}
   39b14:	e8bd8010 	pop	{r4, pc}

00039b18 <CGPIOManager::CGPIOManager(CInterruptSystem*)>:
   39b18:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   39b1c:	e3a0e000 	mov	lr, #0
   39b20:	e1a03000 	mov	r3, r0
   39b24:	e1a0c00e 	mov	ip, lr
   39b28:	e5801000 	str	r1, [r0]
   39b2c:	e28020dc 	add	r2, r0, #220	; 0xdc
   39b30:	e5a3e004 	str	lr, [r3, #4]!
   39b34:	e5a3c004 	str	ip, [r3, #4]!
   39b38:	e1530002 	cmp	r3, r2
   39b3c:	1afffffc 	bne	39b34 <CGPIOManager::CGPIOManager(CInterruptSystem*)+0x1c>
   39b40:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00039b44 <CGPIOManager::~CGPIOManager()>:
   39b44:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   39b48:	e1a08000 	mov	r8, r0
   39b4c:	e59f706c 	ldr	r7, [pc, #108]	; 39bc0 <CGPIOManager::~CGPIOManager()+0x7c>
   39b50:	e59f606c 	ldr	r6, [pc, #108]	; 39bc4 <CGPIOManager::~CGPIOManager()+0x80>
   39b54:	e2804004 	add	r4, r0, #4
   39b58:	e28050dc 	add	r5, r0, #220	; 0xdc
   39b5c:	e5b43004 	ldr	r3, [r4, #4]!
   39b60:	e3530000 	cmp	r3, #0
   39b64:	0a000003 	beq	39b78 <CGPIOManager::~CGPIOManager()+0x34>
   39b68:	e3a0202c 	mov	r2, #44	; 0x2c
   39b6c:	e1a01007 	mov	r1, r7
   39b70:	e1a00006 	mov	r0, r6
   39b74:	ebfff501 	bl	36f80 <assertion_failed>
   39b78:	e1540005 	cmp	r4, r5
   39b7c:	1afffff6 	bne	39b5c <CGPIOManager::~CGPIOManager()+0x18>
   39b80:	e5983004 	ldr	r3, [r8, #4]
   39b84:	e3530000 	cmp	r3, #0
   39b88:	0a000004 	beq	39ba0 <CGPIOManager::~CGPIOManager()+0x5c>
   39b8c:	e5980000 	ldr	r0, [r8]
   39b90:	e3500000 	cmp	r0, #0
   39b94:	0a000003 	beq	39ba8 <CGPIOManager::~CGPIOManager()+0x64>
   39b98:	e3a01034 	mov	r1, #52	; 0x34
   39b9c:	ebffff23 	bl	39830 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   39ba0:	e1a00008 	mov	r0, r8
   39ba4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   39ba8:	e59f0018 	ldr	r0, [pc, #24]	; 39bc8 <CGPIOManager::~CGPIOManager()+0x84>
   39bac:	e3a02032 	mov	r2, #50	; 0x32
   39bb0:	e59f1008 	ldr	r1, [pc, #8]	; 39bc0 <CGPIOManager::~CGPIOManager()+0x7c>
   39bb4:	ebfff4f1 	bl	36f80 <assertion_failed>
   39bb8:	e5980000 	ldr	r0, [r8]
   39bbc:	eafffff5 	b	39b98 <CGPIOManager::~CGPIOManager()+0x54>
   39bc0:	0004f72c 	.word	0x0004f72c
   39bc4:	0004f73c 	.word	0x0004f73c
   39bc8:	0004f750 	.word	0x0004f750

00039bcc <CGPIOManager::Initialize()>:
   39bcc:	e5903004 	ldr	r3, [r0, #4]
   39bd0:	e92d4010 	push	{r4, lr}
   39bd4:	e3530000 	cmp	r3, #0
   39bd8:	e1a04000 	mov	r4, r0
   39bdc:	1a000009 	bne	39c08 <CGPIOManager::Initialize()+0x3c>
   39be0:	e5940000 	ldr	r0, [r4]
   39be4:	e3500000 	cmp	r0, #0
   39be8:	0a00000d 	beq	39c24 <CGPIOManager::Initialize()+0x58>
   39bec:	e1a03004 	mov	r3, r4
   39bf0:	e59f2044 	ldr	r2, [pc, #68]	; 39c3c <CGPIOManager::Initialize()+0x70>
   39bf4:	e3a01034 	mov	r1, #52	; 0x34
   39bf8:	ebfffed1 	bl	39744 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   39bfc:	e3a00001 	mov	r0, #1
   39c00:	e5840004 	str	r0, [r4, #4]
   39c04:	e8bd8010 	pop	{r4, pc}
   39c08:	e59f0030 	ldr	r0, [pc, #48]	; 39c40 <CGPIOManager::Initialize()+0x74>
   39c0c:	e3a0203b 	mov	r2, #59	; 0x3b
   39c10:	e59f102c 	ldr	r1, [pc, #44]	; 39c44 <CGPIOManager::Initialize()+0x78>
   39c14:	ebfff4d9 	bl	36f80 <assertion_failed>
   39c18:	e5940000 	ldr	r0, [r4]
   39c1c:	e3500000 	cmp	r0, #0
   39c20:	1afffff1 	bne	39bec <CGPIOManager::Initialize()+0x20>
   39c24:	e59f001c 	ldr	r0, [pc, #28]	; 39c48 <CGPIOManager::Initialize()+0x7c>
   39c28:	e3a0203c 	mov	r2, #60	; 0x3c
   39c2c:	e59f1010 	ldr	r1, [pc, #16]	; 39c44 <CGPIOManager::Initialize()+0x78>
   39c30:	ebfff4d2 	bl	36f80 <assertion_failed>
   39c34:	e5940000 	ldr	r0, [r4]
   39c38:	eaffffeb 	b	39bec <CGPIOManager::Initialize()+0x20>
   39c3c:	00039e74 	.word	0x00039e74
   39c40:	0004f764 	.word	0x0004f764
   39c44:	0004f72c 	.word	0x0004f72c
   39c48:	0004f750 	.word	0x0004f750

00039c4c <CGPIOManager::ConnectInterrupt(CGPIOPin*)>:
   39c4c:	e5903004 	ldr	r3, [r0, #4]
   39c50:	e92d4070 	push	{r4, r5, r6, lr}
   39c54:	e3530000 	cmp	r3, #0
   39c58:	e1a04000 	mov	r4, r0
   39c5c:	e1a05001 	mov	r5, r1
   39c60:	0a00000e 	beq	39ca0 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x54>
   39c64:	e3550000 	cmp	r5, #0
   39c68:	0a000012 	beq	39cb8 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x6c>
   39c6c:	e5956004 	ldr	r6, [r5, #4]
   39c70:	e3560035 	cmp	r6, #53	; 0x35
   39c74:	8a000016 	bhi	39cd4 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x88>
   39c78:	e0844106 	add	r4, r4, r6, lsl #2
   39c7c:	e5943008 	ldr	r3, [r4, #8]
   39c80:	e3530000 	cmp	r3, #0
   39c84:	0a000003 	beq	39c98 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x4c>
   39c88:	e3a0204b 	mov	r2, #75	; 0x4b
   39c8c:	e59f1054 	ldr	r1, [pc, #84]	; 39ce8 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x9c>
   39c90:	e59f0054 	ldr	r0, [pc, #84]	; 39cec <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0xa0>
   39c94:	ebfff4b9 	bl	36f80 <assertion_failed>
   39c98:	e5845008 	str	r5, [r4, #8]
   39c9c:	e8bd8070 	pop	{r4, r5, r6, pc}
   39ca0:	e3a02045 	mov	r2, #69	; 0x45
   39ca4:	e59f103c 	ldr	r1, [pc, #60]	; 39ce8 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x9c>
   39ca8:	e59f0040 	ldr	r0, [pc, #64]	; 39cf0 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0xa4>
   39cac:	ebfff4b3 	bl	36f80 <assertion_failed>
   39cb0:	e3550000 	cmp	r5, #0
   39cb4:	1affffec 	bne	39c6c <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x20>
   39cb8:	e3a02047 	mov	r2, #71	; 0x47
   39cbc:	e59f1024 	ldr	r1, [pc, #36]	; 39ce8 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x9c>
   39cc0:	e59f002c 	ldr	r0, [pc, #44]	; 39cf4 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0xa8>
   39cc4:	ebfff4ad 	bl	36f80 <assertion_failed>
   39cc8:	e5956004 	ldr	r6, [r5, #4]
   39ccc:	e3560035 	cmp	r6, #53	; 0x35
   39cd0:	9affffe8 	bls	39c78 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x2c>
   39cd4:	e3a02049 	mov	r2, #73	; 0x49
   39cd8:	e59f1008 	ldr	r1, [pc, #8]	; 39ce8 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x9c>
   39cdc:	e59f0014 	ldr	r0, [pc, #20]	; 39cf8 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0xac>
   39ce0:	ebfff4a6 	bl	36f80 <assertion_failed>
   39ce4:	eaffffe3 	b	39c78 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x2c>
   39ce8:	0004f72c 	.word	0x0004f72c
   39cec:	0004f73c 	.word	0x0004f73c
   39cf0:	0004f778 	.word	0x0004f778
   39cf4:	0004f788 	.word	0x0004f788
   39cf8:	0004e1f0 	.word	0x0004e1f0

00039cfc <CGPIOManager::DisconnectInterrupt(CGPIOPin*)>:
   39cfc:	e5903004 	ldr	r3, [r0, #4]
   39d00:	e92d4070 	push	{r4, r5, r6, lr}
   39d04:	e3530000 	cmp	r3, #0
   39d08:	e1a04000 	mov	r4, r0
   39d0c:	e1a05001 	mov	r5, r1
   39d10:	0a00000b 	beq	39d44 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x48>
   39d14:	e3550000 	cmp	r5, #0
   39d18:	0a00000f 	beq	39d5c <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x60>
   39d1c:	e5955004 	ldr	r5, [r5, #4]
   39d20:	e3550035 	cmp	r5, #53	; 0x35
   39d24:	8a000013 	bhi	39d78 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x7c>
   39d28:	e0844105 	add	r4, r4, r5, lsl #2
   39d2c:	e5943008 	ldr	r3, [r4, #8]
   39d30:	e3530000 	cmp	r3, #0
   39d34:	0a000017 	beq	39d98 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x9c>
   39d38:	e3a03000 	mov	r3, #0
   39d3c:	e5843008 	str	r3, [r4, #8]
   39d40:	e8bd8070 	pop	{r4, r5, r6, pc}
   39d44:	e3a02052 	mov	r2, #82	; 0x52
   39d48:	e59f105c 	ldr	r1, [pc, #92]	; 39dac <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0xb0>
   39d4c:	e59f005c 	ldr	r0, [pc, #92]	; 39db0 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0xb4>
   39d50:	ebfff48a 	bl	36f80 <assertion_failed>
   39d54:	e3550000 	cmp	r5, #0
   39d58:	1affffef 	bne	39d1c <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x20>
   39d5c:	e3a02054 	mov	r2, #84	; 0x54
   39d60:	e59f1044 	ldr	r1, [pc, #68]	; 39dac <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0xb0>
   39d64:	e59f0048 	ldr	r0, [pc, #72]	; 39db4 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0xb8>
   39d68:	ebfff484 	bl	36f80 <assertion_failed>
   39d6c:	e5955004 	ldr	r5, [r5, #4]
   39d70:	e3550035 	cmp	r5, #53	; 0x35
   39d74:	9affffeb 	bls	39d28 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x2c>
   39d78:	e3a02056 	mov	r2, #86	; 0x56
   39d7c:	e59f1028 	ldr	r1, [pc, #40]	; 39dac <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0xb0>
   39d80:	e59f0030 	ldr	r0, [pc, #48]	; 39db8 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0xbc>
   39d84:	e0844105 	add	r4, r4, r5, lsl #2
   39d88:	ebfff47c 	bl	36f80 <assertion_failed>
   39d8c:	e5943008 	ldr	r3, [r4, #8]
   39d90:	e3530000 	cmp	r3, #0
   39d94:	1affffe7 	bne	39d38 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x3c>
   39d98:	e3a02058 	mov	r2, #88	; 0x58
   39d9c:	e59f1008 	ldr	r1, [pc, #8]	; 39dac <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0xb0>
   39da0:	e59f0014 	ldr	r0, [pc, #20]	; 39dbc <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0xc0>
   39da4:	ebfff475 	bl	36f80 <assertion_failed>
   39da8:	eaffffe2 	b	39d38 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x3c>
   39dac:	0004f72c 	.word	0x0004f72c
   39db0:	0004f778 	.word	0x0004f778
   39db4:	0004f788 	.word	0x0004f788
   39db8:	0004e1f0 	.word	0x0004e1f0
   39dbc:	0004f794 	.word	0x0004f794

00039dc0 <CGPIOManager::InterruptHandler()>:
   39dc0:	e5903004 	ldr	r3, [r0, #4]
   39dc4:	e92d4070 	push	{r4, r5, r6, lr}
   39dc8:	e3530000 	cmp	r3, #0
   39dcc:	e1a05000 	mov	r5, r0
   39dd0:	0a00001b 	beq	39e44 <CGPIOManager::InterruptHandler()+0x84>
   39dd4:	e3a04000 	mov	r4, #0
   39dd8:	ee074f9a 	mcr	15, 0, r4, cr7, cr10, {4}
   39ddc:	e59f2080 	ldr	r2, [pc, #128]	; 39e64 <CGPIOManager::InterruptHandler()+0xa4>
   39de0:	e5923040 	ldr	r3, [r2, #64]	; 0x40
   39de4:	ea000005 	b	39e00 <CGPIOManager::InterruptHandler()+0x40>
   39de8:	e2844001 	add	r4, r4, #1
   39dec:	e314001f 	tst	r4, #31
   39df0:	11a030a3 	lsrne	r3, r3, #1
   39df4:	05923044 	ldreq	r3, [r2, #68]	; 0x44
   39df8:	e3540036 	cmp	r4, #54	; 0x36
   39dfc:	0a00000d 	beq	39e38 <CGPIOManager::InterruptHandler()+0x78>
   39e00:	e3130001 	tst	r3, #1
   39e04:	0afffff7 	beq	39de8 <CGPIOManager::InterruptHandler()+0x28>
   39e08:	e2843002 	add	r3, r4, #2
   39e0c:	e7950103 	ldr	r0, [r5, r3, lsl #2]
   39e10:	e3500000 	cmp	r0, #0
   39e14:	0a00000f 	beq	39e58 <CGPIOManager::InterruptHandler()+0x98>
   39e18:	ebffe7c8 	bl	33d40 <CGPIOPin::InterruptHandler()>
   39e1c:	e3a02001 	mov	r2, #1
   39e20:	e59f3040 	ldr	r3, [pc, #64]	; 39e68 <CGPIOManager::InterruptHandler()+0xa8>
   39e24:	e204101f 	and	r1, r4, #31
   39e28:	e08342a4 	add	r4, r3, r4, lsr #5
   39e2c:	e1a04104 	lsl	r4, r4, #2
   39e30:	e1a03112 	lsl	r3, r2, r1
   39e34:	e5843000 	str	r3, [r4]
   39e38:	e3a03000 	mov	r3, #0
   39e3c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   39e40:	e8bd8070 	pop	{r4, r5, r6, pc}
   39e44:	e3a0205e 	mov	r2, #94	; 0x5e
   39e48:	e59f101c 	ldr	r1, [pc, #28]	; 39e6c <CGPIOManager::InterruptHandler()+0xac>
   39e4c:	e59f001c 	ldr	r0, [pc, #28]	; 39e70 <CGPIOManager::InterruptHandler()+0xb0>
   39e50:	ebfff44a 	bl	36f80 <assertion_failed>
   39e54:	eaffffde 	b	39dd4 <CGPIOManager::InterruptHandler()+0x14>
   39e58:	e1a00004 	mov	r0, r4
   39e5c:	ebffe7e5 	bl	33df8 <CGPIOPin::DisableAllInterrupts(unsigned int)>
   39e60:	eaffffed 	b	39e1c <CGPIOManager::InterruptHandler()+0x5c>
   39e64:	20200000 	.word	0x20200000
   39e68:	08080010 	.word	0x08080010
   39e6c:	0004f72c 	.word	0x0004f72c
   39e70:	0004f778 	.word	0x0004f778

00039e74 <CGPIOManager::InterruptStub(void*)>:
   39e74:	e92d4010 	push	{r4, lr}
   39e78:	e2504000 	subs	r4, r0, #0
   39e7c:	0a000002 	beq	39e8c <CGPIOManager::InterruptStub(void*)+0x18>
   39e80:	e1a00004 	mov	r0, r4
   39e84:	e8bd4010 	pop	{r4, lr}
   39e88:	eaffffcc 	b	39dc0 <CGPIOManager::InterruptHandler()>
   39e8c:	e59f0014 	ldr	r0, [pc, #20]	; 39ea8 <CGPIOManager::InterruptStub(void*)+0x34>
   39e90:	e3a0208a 	mov	r2, #138	; 0x8a
   39e94:	e59f1010 	ldr	r1, [pc, #16]	; 39eac <CGPIOManager::InterruptStub(void*)+0x38>
   39e98:	ebfff438 	bl	36f80 <assertion_failed>
   39e9c:	e1a00004 	mov	r0, r4
   39ea0:	e8bd4010 	pop	{r4, lr}
   39ea4:	eaffffc5 	b	39dc0 <CGPIOManager::InterruptHandler()>
   39ea8:	0004a17c 	.word	0x0004a17c
   39eac:	0004f72c 	.word	0x0004f72c

00039eb0 <CPWMSoundBaseDevice::GetRange() const>:
   39eb0:	e590000c 	ldr	r0, [r0, #12]
   39eb4:	e12fff1e 	bx	lr

00039eb8 <CPWMSoundBaseDevice::Cancel()>:
   39eb8:	e5903088 	ldr	r3, [r0, #136]	; 0x88
   39ebc:	e3530000 	cmp	r3, #0
   39ec0:	1a000004 	bne	39ed8 <CPWMSoundBaseDevice::Cancel()+0x20>
   39ec4:	e5d03068 	ldrb	r3, [r0, #104]	; 0x68
   39ec8:	e3530001 	cmp	r3, #1
   39ecc:	03a03002 	moveq	r3, #2
   39ed0:	05c03068 	strbeq	r3, [r0, #104]	; 0x68
   39ed4:	e12fff1e 	bx	lr
   39ed8:	e92d4010 	push	{r4, lr}
   39edc:	e1a04000 	mov	r4, r0
   39ee0:	e1a00003 	mov	r0, r3
   39ee4:	ebffe917 	bl	34348 <EnterCritical>
   39ee8:	e5d43068 	ldrb	r3, [r4, #104]	; 0x68
   39eec:	e3530001 	cmp	r3, #1
   39ef0:	03a02002 	moveq	r2, #2
   39ef4:	15943088 	ldrne	r3, [r4, #136]	; 0x88
   39ef8:	05943088 	ldreq	r3, [r4, #136]	; 0x88
   39efc:	05c42068 	strbeq	r2, [r4, #104]	; 0x68
   39f00:	e3530000 	cmp	r3, #0
   39f04:	08bd8010 	popeq	{r4, pc}
   39f08:	e8bd4010 	pop	{r4, lr}
   39f0c:	eaffe939 	b	343f8 <LeaveCritical>

00039f10 <CPWMSoundBaseDevice::IsActive() const>:
   39f10:	e5d00068 	ldrb	r0, [r0, #104]	; 0x68
   39f14:	e2900000 	adds	r0, r0, #0
   39f18:	13a00001 	movne	r0, #1
   39f1c:	e12fff1e 	bx	lr

00039f20 <CPWMSoundBaseDevice::GetNextChunk()>:
   39f20:	e5903084 	ldr	r3, [r0, #132]	; 0x84
   39f24:	e92d4070 	push	{r4, r5, r6, lr}
   39f28:	e0803103 	add	r3, r0, r3, lsl #2
   39f2c:	e593106c 	ldr	r1, [r3, #108]	; 0x6c
   39f30:	e1a04000 	mov	r4, r0
   39f34:	e3510000 	cmp	r1, #0
   39f38:	0a000030 	beq	3a000 <CPWMSoundBaseDevice::GetNextChunk()+0xe0>
   39f3c:	e5943000 	ldr	r3, [r4]
   39f40:	e5942008 	ldr	r2, [r4, #8]
   39f44:	e5933008 	ldr	r3, [r3, #8]
   39f48:	e1a00004 	mov	r0, r4
   39f4c:	e12fff33 	blx	r3
   39f50:	e3500000 	cmp	r0, #0
   39f54:	08bd8070 	popeq	{r4, r5, r6, pc}
   39f58:	e1a05100 	lsl	r5, r0, #2
   39f5c:	e3750107 	cmn	r5, #-1073741823	; 0xc0000001
   39f60:	8a000019 	bhi	39fcc <CPWMSoundBaseDevice::GetNextChunk()+0xac>
   39f64:	e5942084 	ldr	r2, [r4, #132]	; 0x84
   39f68:	e0843102 	add	r3, r4, r2, lsl #2
   39f6c:	e593307c 	ldr	r3, [r3, #124]	; 0x7c
   39f70:	e3530000 	cmp	r3, #0
   39f74:	0a000019 	beq	39fe0 <CPWMSoundBaseDevice::GetNextChunk()+0xc0>
   39f78:	e0842102 	add	r2, r4, r2, lsl #2
   39f7c:	e592006c 	ldr	r0, [r2, #108]	; 0x6c
   39f80:	e1a0c425 	lsr	ip, r5, #8
   39f84:	e1a02c25 	lsr	r2, r5, #24
   39f88:	e1a01825 	lsr	r1, r5, #16
   39f8c:	e5c3c00d 	strb	ip, [r3, #13]
   39f90:	e5c3200f 	strb	r2, [r3, #15]
   39f94:	e5c3500c 	strb	r5, [r3, #12]
   39f98:	e5c3100e 	strb	r1, [r3, #14]
   39f9c:	e1a01005 	mov	r1, r5
   39fa0:	ebffe929 	bl	3444c <CleanAndInvalidateDataCacheRange>
   39fa4:	e5943084 	ldr	r3, [r4, #132]	; 0x84
   39fa8:	e3a01020 	mov	r1, #32
   39fac:	e0843103 	add	r3, r4, r3, lsl #2
   39fb0:	e593007c 	ldr	r0, [r3, #124]	; 0x7c
   39fb4:	ebffe924 	bl	3444c <CleanAndInvalidateDataCacheRange>
   39fb8:	e3a00001 	mov	r0, #1
   39fbc:	e5943084 	ldr	r3, [r4, #132]	; 0x84
   39fc0:	e0233000 	eor	r3, r3, r0
   39fc4:	e5843084 	str	r3, [r4, #132]	; 0x84
   39fc8:	e8bd8070 	pop	{r4, r5, r6, pc}
   39fcc:	e59f204c 	ldr	r2, [pc, #76]	; 3a020 <CPWMSoundBaseDevice::GetNextChunk()+0x100>
   39fd0:	e59f104c 	ldr	r1, [pc, #76]	; 3a024 <CPWMSoundBaseDevice::GetNextChunk()+0x104>
   39fd4:	e59f004c 	ldr	r0, [pc, #76]	; 3a028 <CPWMSoundBaseDevice::GetNextChunk()+0x108>
   39fd8:	ebfff3e8 	bl	36f80 <assertion_failed>
   39fdc:	eaffffe0 	b	39f64 <CPWMSoundBaseDevice::GetNextChunk()+0x44>
   39fe0:	e3a02f4b 	mov	r2, #300	; 0x12c
   39fe4:	e59f1038 	ldr	r1, [pc, #56]	; 3a024 <CPWMSoundBaseDevice::GetNextChunk()+0x104>
   39fe8:	e59f003c 	ldr	r0, [pc, #60]	; 3a02c <CPWMSoundBaseDevice::GetNextChunk()+0x10c>
   39fec:	ebfff3e3 	bl	36f80 <assertion_failed>
   39ff0:	e5942084 	ldr	r2, [r4, #132]	; 0x84
   39ff4:	e0843102 	add	r3, r4, r2, lsl #2
   39ff8:	e593307c 	ldr	r3, [r3, #124]	; 0x7c
   39ffc:	eaffffdd 	b	39f78 <CPWMSoundBaseDevice::GetNextChunk()+0x58>
   3a000:	e59f101c 	ldr	r1, [pc, #28]	; 3a024 <CPWMSoundBaseDevice::GetNextChunk()+0x104>
   3a004:	e59f2024 	ldr	r2, [pc, #36]	; 3a030 <CPWMSoundBaseDevice::GetNextChunk()+0x110>
   3a008:	e59f0024 	ldr	r0, [pc, #36]	; 3a034 <CPWMSoundBaseDevice::GetNextChunk()+0x114>
   3a00c:	ebfff3db 	bl	36f80 <assertion_failed>
   3a010:	e5943084 	ldr	r3, [r4, #132]	; 0x84
   3a014:	e0843103 	add	r3, r4, r3, lsl #2
   3a018:	e593106c 	ldr	r1, [r3, #108]	; 0x6c
   3a01c:	eaffffc6 	b	39f3c <CPWMSoundBaseDevice::GetNextChunk()+0x1c>
   3a020:	0000012a 	.word	0x0000012a
   3a024:	0004f7bc 	.word	0x0004f7bc
   3a028:	0004f7f8 	.word	0x0004f7f8
   3a02c:	0004f818 	.word	0x0004f818
   3a030:	00000122 	.word	0x00000122
   3a034:	0004f7d4 	.word	0x0004f7d4

0003a038 <CPWMSoundBaseDevice::Start()>:
   3a038:	e5d03068 	ldrb	r3, [r0, #104]	; 0x68
   3a03c:	e92d4010 	push	{r4, lr}
   3a040:	e3530000 	cmp	r3, #0
   3a044:	e1a04000 	mov	r4, r0
   3a048:	1a000046 	bne	3a168 <CPWMSoundBaseDevice::Start()+0x130>
   3a04c:	e3a03000 	mov	r3, #0
   3a050:	e1a00004 	mov	r0, r4
   3a054:	e5843084 	str	r3, [r4, #132]	; 0x84
   3a058:	ebffffb0 	bl	39f20 <CPWMSoundBaseDevice::GetNextChunk()>
   3a05c:	e3500000 	cmp	r0, #0
   3a060:	08bd8010 	popeq	{r4, pc}
   3a064:	e3a02001 	mov	r2, #1
   3a068:	e5943064 	ldr	r3, [r4, #100]	; 0x64
   3a06c:	e5c42068 	strb	r2, [r4, #104]	; 0x68
   3a070:	e3530000 	cmp	r3, #0
   3a074:	1a000008 	bne	3a09c <CPWMSoundBaseDevice::Start()+0x64>
   3a078:	e5940004 	ldr	r0, [r4, #4]
   3a07c:	e3500000 	cmp	r0, #0
   3a080:	0a000058 	beq	3a1e8 <CPWMSoundBaseDevice::Start()+0x1b0>
   3a084:	e1a03004 	mov	r3, r4
   3a088:	e59f2170 	ldr	r2, [pc, #368]	; 3a200 <CPWMSoundBaseDevice::Start()+0x1c8>
   3a08c:	e3a01010 	mov	r1, #16
   3a090:	ebfffdab 	bl	39744 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   3a094:	e3a03001 	mov	r3, #1
   3a098:	e5843064 	str	r3, [r4, #100]	; 0x64
   3a09c:	e3a02000 	mov	r2, #0
   3a0a0:	ee072f9a 	mcr	15, 0, r2, cr7, cr10, {4}
   3a0a4:	e59f1158 	ldr	r1, [pc, #344]	; 3a204 <CPWMSoundBaseDevice::Start()+0x1cc>
   3a0a8:	e59f3158 	ldr	r3, [pc, #344]	; 3a208 <CPWMSoundBaseDevice::Start()+0x1d0>
   3a0ac:	e5813008 	str	r3, [r1, #8]
   3a0b0:	e5913000 	ldr	r3, [r1]
   3a0b4:	e3c33b01 	bic	r3, r3, #1024	; 0x400
   3a0b8:	e3c33004 	bic	r3, r3, #4
   3a0bc:	e5813000 	str	r3, [r1]
   3a0c0:	ee072fba 	mcr	15, 0, r2, cr7, cr10, {5}
   3a0c4:	ee072f9a 	mcr	15, 0, r2, cr7, cr10, {4}
   3a0c8:	e59f313c 	ldr	r3, [pc, #316]	; 3a20c <CPWMSoundBaseDevice::Start()+0x1d4>
   3a0cc:	e5933000 	ldr	r3, [r3]
   3a0d0:	e3130004 	tst	r3, #4
   3a0d4:	1a000028 	bne	3a17c <CPWMSoundBaseDevice::Start()+0x144>
   3a0d8:	e59f312c 	ldr	r3, [pc, #300]	; 3a20c <CPWMSoundBaseDevice::Start()+0x1d4>
   3a0dc:	e5933fe0 	ldr	r3, [r3, #4064]	; 0xfe0
   3a0e0:	e3130001 	tst	r3, #1
   3a0e4:	1a00002c 	bne	3a19c <CPWMSoundBaseDevice::Start()+0x164>
   3a0e8:	e594307c 	ldr	r3, [r4, #124]	; 0x7c
   3a0ec:	e3530000 	cmp	r3, #0
   3a0f0:	0a000036 	beq	3a1d0 <CPWMSoundBaseDevice::Start()+0x198>
   3a0f4:	e59f2110 	ldr	r2, [pc, #272]	; 3a20c <CPWMSoundBaseDevice::Start()+0x1d4>
   3a0f8:	e59f1110 	ldr	r1, [pc, #272]	; 3a210 <CPWMSoundBaseDevice::Start()+0x1d8>
   3a0fc:	e2833101 	add	r3, r3, #1073741824	; 0x40000000
   3a100:	e5823004 	str	r3, [r2, #4]
   3a104:	e3a03000 	mov	r3, #0
   3a108:	e5821000 	str	r1, [r2]
   3a10c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3a110:	e1a00004 	mov	r0, r4
   3a114:	ebffff81 	bl	39f20 <CPWMSoundBaseDevice::GetNextChunk()>
   3a118:	e3500000 	cmp	r0, #0
   3a11c:	18bd8010 	popne	{r4, pc}
   3a120:	e5940088 	ldr	r0, [r4, #136]	; 0x88
   3a124:	e3500000 	cmp	r0, #0
   3a128:	1a000023 	bne	3a1bc <CPWMSoundBaseDevice::Start()+0x184>
   3a12c:	e5d43068 	ldrb	r3, [r4, #104]	; 0x68
   3a130:	e3530001 	cmp	r3, #1
   3a134:	18bd8010 	popne	{r4, pc}
   3a138:	e3a03000 	mov	r3, #0
   3a13c:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3a140:	e59f20c4 	ldr	r2, [pc, #196]	; 3a20c <CPWMSoundBaseDevice::Start()+0x1d4>
   3a144:	e582301c 	str	r3, [r2, #28]
   3a148:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3a14c:	e3a03003 	mov	r3, #3
   3a150:	e5c43068 	strb	r3, [r4, #104]	; 0x68
   3a154:	e5943088 	ldr	r3, [r4, #136]	; 0x88
   3a158:	e3530000 	cmp	r3, #0
   3a15c:	08bd8010 	popeq	{r4, pc}
   3a160:	e8bd4010 	pop	{r4, lr}
   3a164:	eaffe8a3 	b	343f8 <LeaveCritical>
   3a168:	e3a020cb 	mov	r2, #203	; 0xcb
   3a16c:	e59f10a0 	ldr	r1, [pc, #160]	; 3a214 <CPWMSoundBaseDevice::Start()+0x1dc>
   3a170:	e59f00a0 	ldr	r0, [pc, #160]	; 3a218 <CPWMSoundBaseDevice::Start()+0x1e0>
   3a174:	ebfff381 	bl	36f80 <assertion_failed>
   3a178:	eaffffb3 	b	3a04c <CPWMSoundBaseDevice::Start()+0x14>
   3a17c:	e3a020ef 	mov	r2, #239	; 0xef
   3a180:	e59f108c 	ldr	r1, [pc, #140]	; 3a214 <CPWMSoundBaseDevice::Start()+0x1dc>
   3a184:	e59f0090 	ldr	r0, [pc, #144]	; 3a21c <CPWMSoundBaseDevice::Start()+0x1e4>
   3a188:	ebfff37c 	bl	36f80 <assertion_failed>
   3a18c:	e59f3078 	ldr	r3, [pc, #120]	; 3a20c <CPWMSoundBaseDevice::Start()+0x1d4>
   3a190:	e5933fe0 	ldr	r3, [r3, #4064]	; 0xfe0
   3a194:	e3130001 	tst	r3, #1
   3a198:	0affffd2 	beq	3a0e8 <CPWMSoundBaseDevice::Start()+0xb0>
   3a19c:	e3a020f0 	mov	r2, #240	; 0xf0
   3a1a0:	e59f106c 	ldr	r1, [pc, #108]	; 3a214 <CPWMSoundBaseDevice::Start()+0x1dc>
   3a1a4:	e59f0074 	ldr	r0, [pc, #116]	; 3a220 <CPWMSoundBaseDevice::Start()+0x1e8>
   3a1a8:	ebfff374 	bl	36f80 <assertion_failed>
   3a1ac:	e594307c 	ldr	r3, [r4, #124]	; 0x7c
   3a1b0:	e3530000 	cmp	r3, #0
   3a1b4:	1affffce 	bne	3a0f4 <CPWMSoundBaseDevice::Start()+0xbc>
   3a1b8:	ea000004 	b	3a1d0 <CPWMSoundBaseDevice::Start()+0x198>
   3a1bc:	ebffe861 	bl	34348 <EnterCritical>
   3a1c0:	e5d43068 	ldrb	r3, [r4, #104]	; 0x68
   3a1c4:	e3530001 	cmp	r3, #1
   3a1c8:	1affffe1 	bne	3a154 <CPWMSoundBaseDevice::Start()+0x11c>
   3a1cc:	eaffffd9 	b	3a138 <CPWMSoundBaseDevice::Start()+0x100>
   3a1d0:	e3a020f2 	mov	r2, #242	; 0xf2
   3a1d4:	e59f1038 	ldr	r1, [pc, #56]	; 3a214 <CPWMSoundBaseDevice::Start()+0x1dc>
   3a1d8:	e59f0044 	ldr	r0, [pc, #68]	; 3a224 <CPWMSoundBaseDevice::Start()+0x1ec>
   3a1dc:	ebfff367 	bl	36f80 <assertion_failed>
   3a1e0:	e594307c 	ldr	r3, [r4, #124]	; 0x7c
   3a1e4:	eaffffc2 	b	3a0f4 <CPWMSoundBaseDevice::Start()+0xbc>
   3a1e8:	e59f0038 	ldr	r0, [pc, #56]	; 3a228 <CPWMSoundBaseDevice::Start()+0x1f0>
   3a1ec:	e3a020da 	mov	r2, #218	; 0xda
   3a1f0:	e59f101c 	ldr	r1, [pc, #28]	; 3a214 <CPWMSoundBaseDevice::Start()+0x1dc>
   3a1f4:	ebfff361 	bl	36f80 <assertion_failed>
   3a1f8:	e5940004 	ldr	r0, [r4, #4]
   3a1fc:	eaffffa0 	b	3a084 <CPWMSoundBaseDevice::Start()+0x4c>
   3a200:	0003a488 	.word	0x0003a488
   3a204:	2020c000 	.word	0x2020c000
   3a208:	80000707 	.word	0x80000707
   3a20c:	20007000 	.word	0x20007000
   3a210:	10f10001 	.word	0x10f10001
   3a214:	0004f7bc 	.word	0x0004f7bc
   3a218:	0004f83c 	.word	0x0004f83c
   3a21c:	0004f854 	.word	0x0004f854
   3a220:	0004f88c 	.word	0x0004f88c
   3a224:	0004f8c4 	.word	0x0004f8c4
   3a228:	0004a0f8 	.word	0x0004a0f8

0003a22c <CPWMSoundBaseDevice::RunPWM()>:
   3a22c:	e92d4010 	push	{r4, lr}
   3a230:	e3a03000 	mov	r3, #0
   3a234:	e1a04000 	mov	r4, r0
   3a238:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3a23c:	e3a01002 	mov	r1, #2
   3a240:	e1a02003 	mov	r2, r3
   3a244:	e2800060 	add	r0, r0, #96	; 0x60
   3a248:	eb00075a 	bl	3bfb8 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)>
   3a24c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
   3a250:	ebffeb80 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   3a254:	e594200c 	ldr	r2, [r4, #12]
   3a258:	e2423c01 	sub	r3, r2, #256	; 0x100
   3a25c:	e3530cff 	cmp	r3, #65280	; 0xff00
   3a260:	3a000004 	bcc	3a278 <CPWMSoundBaseDevice::RunPWM()+0x4c>
   3a264:	e59f2038 	ldr	r2, [pc, #56]	; 3a2a4 <CPWMSoundBaseDevice::RunPWM()+0x78>
   3a268:	e59f1038 	ldr	r1, [pc, #56]	; 3a2a8 <CPWMSoundBaseDevice::RunPWM()+0x7c>
   3a26c:	e59f0038 	ldr	r0, [pc, #56]	; 3a2ac <CPWMSoundBaseDevice::RunPWM()+0x80>
   3a270:	ebfff342 	bl	36f80 <assertion_failed>
   3a274:	e594200c 	ldr	r2, [r4, #12]
   3a278:	e59f3030 	ldr	r3, [pc, #48]	; 3a2b0 <CPWMSoundBaseDevice::RunPWM()+0x84>
   3a27c:	e59f1030 	ldr	r1, [pc, #48]	; 3a2b4 <CPWMSoundBaseDevice::RunPWM()+0x88>
   3a280:	e5832010 	str	r2, [r3, #16]
   3a284:	e594200c 	ldr	r2, [r4, #12]
   3a288:	e3a00e7d 	mov	r0, #2000	; 0x7d0
   3a28c:	e5832020 	str	r2, [r3, #32]
   3a290:	e5831000 	str	r1, [r3]
   3a294:	ebffeb6f 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   3a298:	e3a03000 	mov	r3, #0
   3a29c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3a2a0:	e8bd8010 	pop	{r4, pc}
   3a2a4:	0000013e 	.word	0x0000013e
   3a2a8:	0004f7bc 	.word	0x0004f7bc
   3a2ac:	0004f8dc 	.word	0x0004f8dc
   3a2b0:	2020c000 	.word	0x2020c000
   3a2b4:	00002161 	.word	0x00002161

0003a2b8 <CPWMSoundBaseDevice::StopPWM()>:
   3a2b8:	e92d4070 	push	{r4, r5, r6, lr}
   3a2bc:	e1a05000 	mov	r5, r0
   3a2c0:	e3a04000 	mov	r4, #0
   3a2c4:	ee074f9a 	mcr	15, 0, r4, cr7, cr10, {4}
   3a2c8:	e59f3024 	ldr	r3, [pc, #36]	; 3a2f4 <CPWMSoundBaseDevice::StopPWM()+0x3c>
   3a2cc:	e3a00e7d 	mov	r0, #2000	; 0x7d0
   3a2d0:	e5834008 	str	r4, [r3, #8]
   3a2d4:	e5834000 	str	r4, [r3]
   3a2d8:	ebffeb5e 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   3a2dc:	e2850060 	add	r0, r5, #96	; 0x60
   3a2e0:	eb000775 	bl	3c0bc <CGPIOClock::Stop()>
   3a2e4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
   3a2e8:	ebffeb5a 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   3a2ec:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   3a2f0:	e8bd8070 	pop	{r4, r5, r6, pc}
   3a2f4:	2020c000 	.word	0x2020c000

0003a2f8 <CPWMSoundBaseDevice::InterruptHandler()>:
   3a2f8:	e5d03068 	ldrb	r3, [r0, #104]	; 0x68
   3a2fc:	e92d4070 	push	{r4, r5, r6, lr}
   3a300:	e3530000 	cmp	r3, #0
   3a304:	e1a04000 	mov	r4, r0
   3a308:	0a000045 	beq	3a424 <CPWMSoundBaseDevice::InterruptHandler()+0x12c>
   3a30c:	e3a03000 	mov	r3, #0
   3a310:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3a314:	e59f3140 	ldr	r3, [pc, #320]	; 3a45c <CPWMSoundBaseDevice::InterruptHandler()+0x164>
   3a318:	e5933fe0 	ldr	r3, [r3, #4064]	; 0xfe0
   3a31c:	e3130001 	tst	r3, #1
   3a320:	0a00003a 	beq	3a410 <CPWMSoundBaseDevice::InterruptHandler()+0x118>
   3a324:	e3a02001 	mov	r2, #1
   3a328:	e59f312c 	ldr	r3, [pc, #300]	; 3a45c <CPWMSoundBaseDevice::InterruptHandler()+0x164>
   3a32c:	e5832fe0 	str	r2, [r3, #4064]	; 0xfe0
   3a330:	e5935000 	ldr	r5, [r3]
   3a334:	e3150004 	tst	r5, #4
   3a338:	0a00002f 	beq	3a3fc <CPWMSoundBaseDevice::InterruptHandler()+0x104>
   3a33c:	e59f2118 	ldr	r2, [pc, #280]	; 3a45c <CPWMSoundBaseDevice::InterruptHandler()+0x164>
   3a340:	e3a03000 	mov	r3, #0
   3a344:	e5825000 	str	r5, [r2]
   3a348:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3a34c:	e3150c01 	tst	r5, #256	; 0x100
   3a350:	1a000026 	bne	3a3f0 <CPWMSoundBaseDevice::InterruptHandler()+0xf8>
   3a354:	e5940088 	ldr	r0, [r4, #136]	; 0x88
   3a358:	e3500000 	cmp	r0, #0
   3a35c:	1a000035 	bne	3a438 <CPWMSoundBaseDevice::InterruptHandler()+0x140>
   3a360:	e5d43068 	ldrb	r3, [r4, #104]	; 0x68
   3a364:	e6ef3073 	uxtb	r3, r3
   3a368:	e3530002 	cmp	r3, #2
   3a36c:	0a00000c 	beq	3a3a4 <CPWMSoundBaseDevice::InterruptHandler()+0xac>
   3a370:	e3530003 	cmp	r3, #3
   3a374:	0a000035 	beq	3a450 <CPWMSoundBaseDevice::InterruptHandler()+0x158>
   3a378:	e3530001 	cmp	r3, #1
   3a37c:	0a000004 	beq	3a394 <CPWMSoundBaseDevice::InterruptHandler()+0x9c>
   3a380:	e59f20d8 	ldr	r2, [pc, #216]	; 3a460 <CPWMSoundBaseDevice::InterruptHandler()+0x168>
   3a384:	e59f10d8 	ldr	r1, [pc, #216]	; 3a464 <CPWMSoundBaseDevice::InterruptHandler()+0x16c>
   3a388:	e59f00d8 	ldr	r0, [pc, #216]	; 3a468 <CPWMSoundBaseDevice::InterruptHandler()+0x170>
   3a38c:	ebfff2fb 	bl	36f80 <assertion_failed>
   3a390:	ea000011 	b	3a3dc <CPWMSoundBaseDevice::InterruptHandler()+0xe4>
   3a394:	e1a00004 	mov	r0, r4
   3a398:	ebfffee0 	bl	39f20 <CPWMSoundBaseDevice::GetNextChunk()>
   3a39c:	e3500000 	cmp	r0, #0
   3a3a0:	1a00000d 	bne	3a3dc <CPWMSoundBaseDevice::InterruptHandler()+0xe4>
   3a3a4:	e3a03000 	mov	r3, #0
   3a3a8:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3a3ac:	e59f20a8 	ldr	r2, [pc, #168]	; 3a45c <CPWMSoundBaseDevice::InterruptHandler()+0x164>
   3a3b0:	e582301c 	str	r3, [r2, #28]
   3a3b4:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3a3b8:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3a3bc:	e59f10a8 	ldr	r1, [pc, #168]	; 3a46c <CPWMSoundBaseDevice::InterruptHandler()+0x174>
   3a3c0:	e5912000 	ldr	r2, [r1]
   3a3c4:	e3822b01 	orr	r2, r2, #1024	; 0x400
   3a3c8:	e3822004 	orr	r2, r2, #4
   3a3cc:	e5812000 	str	r2, [r1]
   3a3d0:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3a3d4:	e3a03003 	mov	r3, #3
   3a3d8:	e5c43068 	strb	r3, [r4, #104]	; 0x68
   3a3dc:	e5943088 	ldr	r3, [r4, #136]	; 0x88
   3a3e0:	e3530000 	cmp	r3, #0
   3a3e4:	08bd8070 	popeq	{r4, r5, r6, pc}
   3a3e8:	e8bd4070 	pop	{r4, r5, r6, lr}
   3a3ec:	eaffe801 	b	343f8 <LeaveCritical>
   3a3f0:	e3a03004 	mov	r3, #4
   3a3f4:	e5c43068 	strb	r3, [r4, #104]	; 0x68
   3a3f8:	e8bd8070 	pop	{r4, r5, r6, pc}
   3a3fc:	e59f206c 	ldr	r2, [pc, #108]	; 3a470 <CPWMSoundBaseDevice::InterruptHandler()+0x178>
   3a400:	e59f105c 	ldr	r1, [pc, #92]	; 3a464 <CPWMSoundBaseDevice::InterruptHandler()+0x16c>
   3a404:	e59f0068 	ldr	r0, [pc, #104]	; 3a474 <CPWMSoundBaseDevice::InterruptHandler()+0x17c>
   3a408:	ebfff2dc 	bl	36f80 <assertion_failed>
   3a40c:	eaffffca 	b	3a33c <CPWMSoundBaseDevice::InterruptHandler()+0x44>
   3a410:	e59f2060 	ldr	r2, [pc, #96]	; 3a478 <CPWMSoundBaseDevice::InterruptHandler()+0x180>
   3a414:	e59f1048 	ldr	r1, [pc, #72]	; 3a464 <CPWMSoundBaseDevice::InterruptHandler()+0x16c>
   3a418:	e59f005c 	ldr	r0, [pc, #92]	; 3a47c <CPWMSoundBaseDevice::InterruptHandler()+0x184>
   3a41c:	ebfff2d7 	bl	36f80 <assertion_failed>
   3a420:	eaffffbf 	b	3a324 <CPWMSoundBaseDevice::InterruptHandler()+0x2c>
   3a424:	e59f2054 	ldr	r2, [pc, #84]	; 3a480 <CPWMSoundBaseDevice::InterruptHandler()+0x188>
   3a428:	e59f1034 	ldr	r1, [pc, #52]	; 3a464 <CPWMSoundBaseDevice::InterruptHandler()+0x16c>
   3a42c:	e59f0050 	ldr	r0, [pc, #80]	; 3a484 <CPWMSoundBaseDevice::InterruptHandler()+0x18c>
   3a430:	ebfff2d2 	bl	36f80 <assertion_failed>
   3a434:	eaffffb4 	b	3a30c <CPWMSoundBaseDevice::InterruptHandler()+0x14>
   3a438:	ebffe7c2 	bl	34348 <EnterCritical>
   3a43c:	e5d43068 	ldrb	r3, [r4, #104]	; 0x68
   3a440:	e6ef3073 	uxtb	r3, r3
   3a444:	e3530002 	cmp	r3, #2
   3a448:	1affffc8 	bne	3a370 <CPWMSoundBaseDevice::InterruptHandler()+0x78>
   3a44c:	eaffffd4 	b	3a3a4 <CPWMSoundBaseDevice::InterruptHandler()+0xac>
   3a450:	e3a03000 	mov	r3, #0
   3a454:	e5c43068 	strb	r3, [r4, #104]	; 0x68
   3a458:	eaffffdf 	b	3a3dc <CPWMSoundBaseDevice::InterruptHandler()+0xe4>
   3a45c:	20007000 	.word	0x20007000
   3a460:	0000018f 	.word	0x0000018f
   3a464:	0004f7bc 	.word	0x0004f7bc
   3a468:	0004a8b8 	.word	0x0004a8b8
   3a46c:	2020c000 	.word	0x2020c000
   3a470:	00000166 	.word	0x00000166
   3a474:	0004f93c 	.word	0x0004f93c
   3a478:	00000162 	.word	0x00000162
   3a47c:	0004f924 	.word	0x0004f924
   3a480:	0000015a 	.word	0x0000015a
   3a484:	0004f90c 	.word	0x0004f90c

0003a488 <CPWMSoundBaseDevice::InterruptStub(void*)>:
   3a488:	e92d4010 	push	{r4, lr}
   3a48c:	e2504000 	subs	r4, r0, #0
   3a490:	0a000002 	beq	3a4a0 <CPWMSoundBaseDevice::InterruptStub(void*)+0x18>
   3a494:	e1a00004 	mov	r0, r4
   3a498:	e8bd4010 	pop	{r4, lr}
   3a49c:	eaffff95 	b	3a2f8 <CPWMSoundBaseDevice::InterruptHandler()>
   3a4a0:	e59f0014 	ldr	r0, [pc, #20]	; 3a4bc <CPWMSoundBaseDevice::InterruptStub(void*)+0x34>
   3a4a4:	e59f2014 	ldr	r2, [pc, #20]	; 3a4c0 <CPWMSoundBaseDevice::InterruptStub(void*)+0x38>
   3a4a8:	e59f1014 	ldr	r1, [pc, #20]	; 3a4c4 <CPWMSoundBaseDevice::InterruptStub(void*)+0x3c>
   3a4ac:	ebfff2b3 	bl	36f80 <assertion_failed>
   3a4b0:	e1a00004 	mov	r0, r4
   3a4b4:	e8bd4010 	pop	{r4, lr}
   3a4b8:	eaffff8e 	b	3a2f8 <CPWMSoundBaseDevice::InterruptHandler()>
   3a4bc:	0004a0c0 	.word	0x0004a0c0
   3a4c0:	00000199 	.word	0x00000199
   3a4c4:	0004f7bc 	.word	0x0004f7bc

0003a4c8 <CPWMSoundBaseDevice::SetupDMAControlBlock(unsigned int)>:
   3a4c8:	e3510001 	cmp	r1, #1
   3a4cc:	e92d4070 	push	{r4, r5, r6, lr}
   3a4d0:	e1a05001 	mov	r5, r1
   3a4d4:	e1a04000 	mov	r4, r0
   3a4d8:	9a000003 	bls	3a4ec <CPWMSoundBaseDevice::SetupDMAControlBlock(unsigned int)+0x24>
   3a4dc:	e3a02e1a 	mov	r2, #416	; 0x1a0
   3a4e0:	e59f1068 	ldr	r1, [pc, #104]	; 3a550 <CPWMSoundBaseDevice::SetupDMAControlBlock(unsigned int)+0x88>
   3a4e4:	e59f0068 	ldr	r0, [pc, #104]	; 3a554 <CPWMSoundBaseDevice::SetupDMAControlBlock(unsigned int)+0x8c>
   3a4e8:	ebfff2a4 	bl	36f80 <assertion_failed>
   3a4ec:	e5940008 	ldr	r0, [r4, #8]
   3a4f0:	e0844105 	add	r4, r4, r5, lsl #2
   3a4f4:	e370022e 	cmn	r0, #-536870910	; 0xe0000002
   3a4f8:	91a00100 	lslls	r0, r0, #2
   3a4fc:	83e00000 	mvnhi	r0, #0
   3a500:	ebffe785 	bl	3431c <operator new[](unsigned int)>
   3a504:	e584006c 	str	r0, [r4, #108]	; 0x6c
   3a508:	e3a0003f 	mov	r0, #63	; 0x3f
   3a50c:	ebffe782 	bl	3431c <operator new[](unsigned int)>
   3a510:	e3a02000 	mov	r2, #0
   3a514:	e594106c 	ldr	r1, [r4, #108]	; 0x6c
   3a518:	e5840074 	str	r0, [r4, #116]	; 0x74
   3a51c:	e280301f 	add	r3, r0, #31
   3a520:	e59fc030 	ldr	ip, [pc, #48]	; 3a558 <CPWMSoundBaseDevice::SetupDMAControlBlock(unsigned int)+0x90>
   3a524:	e59f0030 	ldr	r0, [pc, #48]	; 3a55c <CPWMSoundBaseDevice::SetupDMAControlBlock(unsigned int)+0x94>
   3a528:	e3c3301f 	bic	r3, r3, #31
   3a52c:	e2811101 	add	r1, r1, #1073741824	; 0x40000000
   3a530:	e584307c 	str	r3, [r4, #124]	; 0x7c
   3a534:	e5831004 	str	r1, [r3, #4]
   3a538:	e583c000 	str	ip, [r3]
   3a53c:	e5830008 	str	r0, [r3, #8]
   3a540:	e5832010 	str	r2, [r3, #16]
   3a544:	e5832018 	str	r2, [r3, #24]
   3a548:	e583201c 	str	r2, [r3, #28]
   3a54c:	e8bd8070 	pop	{r4, r5, r6, pc}
   3a550:	0004f7bc 	.word	0x0004f7bc
   3a554:	0004f94c 	.word	0x0004f94c
   3a558:	00050349 	.word	0x00050349
   3a55c:	7e20c018 	.word	0x7e20c018

0003a560 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)>:
   3a560:	e92d4070 	push	{r4, r5, r6, lr}
   3a564:	e1a04000 	mov	r4, r0
   3a568:	e59fc1a0 	ldr	ip, [pc, #416]	; 3a710 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1b0>
   3a56c:	e59f01a0 	ldr	r0, [pc, #416]	; 3a714 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1b4>
   3a570:	e584c000 	str	ip, [r4]
   3a574:	e984000a 	stmib	r4, {r1, r3}
   3a578:	e08000a2 	add	r0, r0, r2, lsr #1
   3a57c:	e1a01002 	mov	r1, r2
   3a580:	ebffe64e 	bl	33ec0 <__aeabi_uidiv>
   3a584:	e3a03000 	mov	r3, #0
   3a588:	e584000c 	str	r0, [r4, #12]
   3a58c:	e3a02004 	mov	r2, #4
   3a590:	e3a01036 	mov	r1, #54	; 0x36
   3a594:	e2840010 	add	r0, r4, #16
   3a598:	ebffe5bb 	bl	33c8c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>
   3a59c:	e3a03000 	mov	r3, #0
   3a5a0:	e3a02004 	mov	r2, #4
   3a5a4:	e3a01037 	mov	r1, #55	; 0x37
   3a5a8:	e2840038 	add	r0, r4, #56	; 0x38
   3a5ac:	ebffe5b6 	bl	33c8c <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>
   3a5b0:	e3a02006 	mov	r2, #6
   3a5b4:	e2840060 	add	r0, r4, #96	; 0x60
   3a5b8:	e1a01002 	mov	r1, r2
   3a5bc:	eb000657 	bl	3bf20 <CGPIOClock::CGPIOClock(TGPIOClock, TGPIOClockSource)>
   3a5c0:	e3a03000 	mov	r3, #0
   3a5c4:	e3a01001 	mov	r1, #1
   3a5c8:	e5942004 	ldr	r2, [r4, #4]
   3a5cc:	e5841088 	str	r1, [r4, #136]	; 0x88
   3a5d0:	e1520003 	cmp	r2, r3
   3a5d4:	e5843064 	str	r3, [r4, #100]	; 0x64
   3a5d8:	e5c43068 	strb	r3, [r4, #104]	; 0x68
   3a5dc:	0a000046 	beq	3a6fc <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x19c>
   3a5e0:	e5943008 	ldr	r3, [r4, #8]
   3a5e4:	e3530000 	cmp	r3, #0
   3a5e8:	0a000032 	beq	3a6b8 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x158>
   3a5ec:	e3130001 	tst	r3, #1
   3a5f0:	1a000037 	bne	3a6d4 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x174>
   3a5f4:	e1a00004 	mov	r0, r4
   3a5f8:	e3a01000 	mov	r1, #0
   3a5fc:	ebffffb1 	bl	3a4c8 <CPWMSoundBaseDevice::SetupDMAControlBlock(unsigned int)>
   3a600:	e1a00004 	mov	r0, r4
   3a604:	e3a01001 	mov	r1, #1
   3a608:	ebffffae 	bl	3a4c8 <CPWMSoundBaseDevice::SetupDMAControlBlock(unsigned int)>
   3a60c:	e5942080 	ldr	r2, [r4, #128]	; 0x80
   3a610:	e594107c 	ldr	r1, [r4, #124]	; 0x7c
   3a614:	e2823101 	add	r3, r2, #1073741824	; 0x40000000
   3a618:	e1a0c423 	lsr	ip, r3, #8
   3a61c:	e5c1c015 	strb	ip, [r1, #21]
   3a620:	e5c13014 	strb	r3, [r1, #20]
   3a624:	e2810101 	add	r0, r1, #1073741824	; 0x40000000
   3a628:	e1a0c823 	lsr	ip, r3, #16
   3a62c:	e1a03c23 	lsr	r3, r3, #24
   3a630:	e5c1c016 	strb	ip, [r1, #22]
   3a634:	e5c13017 	strb	r3, [r1, #23]
   3a638:	e1a0c420 	lsr	ip, r0, #8
   3a63c:	e1a01820 	lsr	r1, r0, #16
   3a640:	e1a03c20 	lsr	r3, r0, #24
   3a644:	e5c20014 	strb	r0, [r2, #20]
   3a648:	e5c23017 	strb	r3, [r2, #23]
   3a64c:	e5c2c015 	strb	ip, [r2, #21]
   3a650:	e5c21016 	strb	r1, [r2, #22]
   3a654:	e1a00004 	mov	r0, r4
   3a658:	ebfffef3 	bl	3a22c <CPWMSoundBaseDevice::RunPWM()>
   3a65c:	e3a03000 	mov	r3, #0
   3a660:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3a664:	e59f30ac 	ldr	r3, [pc, #172]	; 3a718 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1b8>
   3a668:	e5933020 	ldr	r3, [r3, #32]
   3a66c:	e3130201 	tst	r3, #268435456	; 0x10000000
   3a670:	1a00001c 	bne	3a6e8 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x188>
   3a674:	e59f509c 	ldr	r5, [pc, #156]	; 3a718 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1b8>
   3a678:	e5953ff0 	ldr	r3, [r5, #4080]	; 0xff0
   3a67c:	e3833001 	orr	r3, r3, #1
   3a680:	e5853ff0 	str	r3, [r5, #4080]	; 0xff0
   3a684:	ebffeaab 	bl	35138 <CTimer::Get()>
   3a688:	e3a00ffa 	mov	r0, #1000	; 0x3e8
   3a68c:	ebffea71 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   3a690:	e3a03102 	mov	r3, #-2147483648	; 0x80000000
   3a694:	e1a02005 	mov	r2, r5
   3a698:	e5853000 	str	r3, [r5]
   3a69c:	e5923000 	ldr	r3, [r2]
   3a6a0:	e3530000 	cmp	r3, #0
   3a6a4:	bafffffc 	blt	3a69c <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x13c>
   3a6a8:	e3a03000 	mov	r3, #0
   3a6ac:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3a6b0:	e1a00004 	mov	r0, r4
   3a6b4:	e8bd8070 	pop	{r4, r5, r6, pc}
   3a6b8:	e3a02089 	mov	r2, #137	; 0x89
   3a6bc:	e59f1058 	ldr	r1, [pc, #88]	; 3a71c <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1bc>
   3a6c0:	e59f0058 	ldr	r0, [pc, #88]	; 3a720 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1c0>
   3a6c4:	ebfff22d 	bl	36f80 <assertion_failed>
   3a6c8:	e5943008 	ldr	r3, [r4, #8]
   3a6cc:	e3130001 	tst	r3, #1
   3a6d0:	0affffc7 	beq	3a5f4 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x94>
   3a6d4:	e3a0208a 	mov	r2, #138	; 0x8a
   3a6d8:	e59f103c 	ldr	r1, [pc, #60]	; 3a71c <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1bc>
   3a6dc:	e59f0040 	ldr	r0, [pc, #64]	; 3a724 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1c4>
   3a6e0:	ebfff226 	bl	36f80 <assertion_failed>
   3a6e4:	eaffffc2 	b	3a5f4 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x94>
   3a6e8:	e3a02098 	mov	r2, #152	; 0x98
   3a6ec:	e59f1028 	ldr	r1, [pc, #40]	; 3a71c <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1bc>
   3a6f0:	e59f0030 	ldr	r0, [pc, #48]	; 3a728 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1c8>
   3a6f4:	ebfff221 	bl	36f80 <assertion_failed>
   3a6f8:	eaffffdd 	b	3a674 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x114>
   3a6fc:	e3a02088 	mov	r2, #136	; 0x88
   3a700:	e59f1014 	ldr	r1, [pc, #20]	; 3a71c <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1bc>
   3a704:	e59f0020 	ldr	r0, [pc, #32]	; 3a72c <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x1cc>
   3a708:	ebfff21c 	bl	36f80 <assertion_failed>
   3a70c:	eaffffb3 	b	3a5e0 <CPWMSoundBaseDevice::CPWMSoundBaseDevice(CInterruptSystem*, unsigned int, unsigned int)+0x80>
   3a710:	0004f7b0 	.word	0x0004f7b0
   3a714:	0ee6b280 	.word	0x0ee6b280
   3a718:	20007000 	.word	0x20007000
   3a71c:	0004f7bc 	.word	0x0004f7bc
   3a720:	0004f958 	.word	0x0004f958
   3a724:	0004f96c 	.word	0x0004f96c
   3a728:	0004f984 	.word	0x0004f984
   3a72c:	0004a0f8 	.word	0x0004a0f8

0003a730 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()>:
   3a730:	e5d02068 	ldrb	r2, [r0, #104]	; 0x68
   3a734:	e59f30f8 	ldr	r3, [pc, #248]	; 3a834 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x104>
   3a738:	e3520000 	cmp	r2, #0
   3a73c:	e92d4010 	push	{r4, lr}
   3a740:	e1a04000 	mov	r4, r0
   3a744:	e5803000 	str	r3, [r0]
   3a748:	1a00002b 	bne	3a7fc <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0xcc>
   3a74c:	e1a00004 	mov	r0, r4
   3a750:	ebfffed8 	bl	3a2b8 <CPWMSoundBaseDevice::StopPWM()>
   3a754:	e5943004 	ldr	r3, [r4, #4]
   3a758:	e3530000 	cmp	r3, #0
   3a75c:	0a00002f 	beq	3a820 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0xf0>
   3a760:	e5943064 	ldr	r3, [r4, #100]	; 0x64
   3a764:	e3530000 	cmp	r3, #0
   3a768:	1a000028 	bne	3a810 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0xe0>
   3a76c:	e3a03000 	mov	r3, #0
   3a770:	e5940074 	ldr	r0, [r4, #116]	; 0x74
   3a774:	e5843004 	str	r3, [r4, #4]
   3a778:	e1500003 	cmp	r0, r3
   3a77c:	e584307c 	str	r3, [r4, #124]	; 0x7c
   3a780:	e5843080 	str	r3, [r4, #128]	; 0x80
   3a784:	0a000000 	beq	3a78c <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x5c>
   3a788:	ebffe6e5 	bl	34324 <operator delete[](void*)>
   3a78c:	e3a03000 	mov	r3, #0
   3a790:	e5940078 	ldr	r0, [r4, #120]	; 0x78
   3a794:	e5843074 	str	r3, [r4, #116]	; 0x74
   3a798:	e1500003 	cmp	r0, r3
   3a79c:	0a000000 	beq	3a7a4 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x74>
   3a7a0:	ebffe6df 	bl	34324 <operator delete[](void*)>
   3a7a4:	e3a03000 	mov	r3, #0
   3a7a8:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
   3a7ac:	e5843078 	str	r3, [r4, #120]	; 0x78
   3a7b0:	e1500003 	cmp	r0, r3
   3a7b4:	0a000000 	beq	3a7bc <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x8c>
   3a7b8:	ebffe6d9 	bl	34324 <operator delete[](void*)>
   3a7bc:	e3a03000 	mov	r3, #0
   3a7c0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
   3a7c4:	e584306c 	str	r3, [r4, #108]	; 0x6c
   3a7c8:	e1500003 	cmp	r0, r3
   3a7cc:	0a000000 	beq	3a7d4 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0xa4>
   3a7d0:	ebffe6d3 	bl	34324 <operator delete[](void*)>
   3a7d4:	e3a03000 	mov	r3, #0
   3a7d8:	e2840060 	add	r0, r4, #96	; 0x60
   3a7dc:	e5843070 	str	r3, [r4, #112]	; 0x70
   3a7e0:	eb0005e5 	bl	3bf7c <CGPIOClock::~CGPIOClock()>
   3a7e4:	e2840038 	add	r0, r4, #56	; 0x38
   3a7e8:	ebffe287 	bl	3320c <CGPIOPin::~CGPIOPin()>
   3a7ec:	e2840010 	add	r0, r4, #16
   3a7f0:	ebffe285 	bl	3320c <CGPIOPin::~CGPIOPin()>
   3a7f4:	e1a00004 	mov	r0, r4
   3a7f8:	e8bd8010 	pop	{r4, pc}
   3a7fc:	e3a020a8 	mov	r2, #168	; 0xa8
   3a800:	e59f1030 	ldr	r1, [pc, #48]	; 3a838 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x108>
   3a804:	e59f0030 	ldr	r0, [pc, #48]	; 3a83c <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x10c>
   3a808:	ebfff1dc 	bl	36f80 <assertion_failed>
   3a80c:	eaffffce 	b	3a74c <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x1c>
   3a810:	e3a01010 	mov	r1, #16
   3a814:	e5940004 	ldr	r0, [r4, #4]
   3a818:	ebfffc04 	bl	39830 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   3a81c:	eaffffd2 	b	3a76c <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x3c>
   3a820:	e3a020ae 	mov	r2, #174	; 0xae
   3a824:	e59f100c 	ldr	r1, [pc, #12]	; 3a838 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x108>
   3a828:	e59f0010 	ldr	r0, [pc, #16]	; 3a840 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x110>
   3a82c:	ebfff1d3 	bl	36f80 <assertion_failed>
   3a830:	eaffffca 	b	3a760 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()+0x30>
   3a834:	0004f7b0 	.word	0x0004f7b0
   3a838:	0004f7bc 	.word	0x0004f7bc
   3a83c:	0004f83c 	.word	0x0004f83c
   3a840:	0004a0f8 	.word	0x0004a0f8

0003a844 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()>:
   3a844:	e92d4010 	push	{r4, lr}
   3a848:	e1a04000 	mov	r4, r0
   3a84c:	ebffffb7 	bl	3a730 <CPWMSoundBaseDevice::~CPWMSoundBaseDevice()>
   3a850:	e1a00004 	mov	r0, r4
   3a854:	e3a0108c 	mov	r1, #140	; 0x8c
   3a858:	ebffe6b2 	bl	34328 <operator delete(void*, unsigned int)>
   3a85c:	e1a00004 	mov	r0, r4
   3a860:	e8bd8010 	pop	{r4, pc}

0003a864 <CVirtualGPIOPin::~CVirtualGPIOPin()>:
   3a864:	e12fff1e 	bx	lr

0003a868 <CVirtualGPIOPin::~CVirtualGPIOPin()>:
   3a868:	e92d4010 	push	{r4, lr}
   3a86c:	e1a04000 	mov	r4, r0
   3a870:	e3a01010 	mov	r1, #16
   3a874:	ebffe6ab 	bl	34328 <operator delete(void*, unsigned int)>
   3a878:	e1a00004 	mov	r0, r4
   3a87c:	e8bd8010 	pop	{r4, pc}

0003a880 <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]>:
   3a880:	e92d4070 	push	{r4, r5, r6, lr}
   3a884:	e59f5098 	ldr	r5, [pc, #152]	; 3a924 <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]+0xa4>
   3a888:	e1a04000 	mov	r4, r0
   3a88c:	e5950000 	ldr	r0, [r5]
   3a890:	e1a06001 	mov	r6, r1
   3a894:	e3500000 	cmp	r0, #0
   3a898:	1a00001f 	bne	3a91c <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]+0x9c>
   3a89c:	e1d400bc 	ldrh	r0, [r4, #12]
   3a8a0:	e1d430be 	ldrh	r3, [r4, #14]
   3a8a4:	e5846008 	str	r6, [r4, #8]
   3a8a8:	e0402003 	sub	r2, r0, r3
   3a8ac:	e6bf2072 	sxth	r2, r2
   3a8b0:	e3520000 	cmp	r2, #0
   3a8b4:	da000012 	ble	3a904 <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]+0x84>
   3a8b8:	e3560000 	cmp	r6, #0
   3a8bc:	0a000004 	beq	3a8d4 <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]+0x54>
   3a8c0:	e5953000 	ldr	r3, [r5]
   3a8c4:	e3530000 	cmp	r3, #0
   3a8c8:	08bd8070 	popeq	{r4, r5, r6, pc}
   3a8cc:	e8bd4070 	pop	{r4, r5, r6, lr}
   3a8d0:	eaffe6c8 	b	343f8 <LeaveCritical>
   3a8d4:	e2833001 	add	r3, r3, #1
   3a8d8:	e6ff3073 	uxth	r3, r3
   3a8dc:	e1c430be 	strh	r3, [r4, #14]
   3a8e0:	e5941004 	ldr	r1, [r4, #4]
   3a8e4:	e5952004 	ldr	r2, [r5, #4]
   3a8e8:	e1833800 	orr	r3, r3, r0, lsl #16
   3a8ec:	e7823101 	str	r3, [r2, r1, lsl #2]
   3a8f0:	e5953000 	ldr	r3, [r5]
   3a8f4:	e3530000 	cmp	r3, #0
   3a8f8:	08bd8070 	popeq	{r4, r5, r6, pc}
   3a8fc:	e8bd4070 	pop	{r4, r5, r6, lr}
   3a900:	eaffe6bc 	b	343f8 <LeaveCritical>
   3a904:	e3560000 	cmp	r6, #0
   3a908:	0affffec 	beq	3a8c0 <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]+0x40>
   3a90c:	e2800001 	add	r0, r0, #1
   3a910:	e6ff0070 	uxth	r0, r0
   3a914:	e1c400bc 	strh	r0, [r4, #12]
   3a918:	eafffff0 	b	3a8e0 <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]+0x60>
   3a91c:	ebffe689 	bl	34348 <EnterCritical>
   3a920:	eaffffdd 	b	3a89c <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]+0x1c>
   3a924:	0017af9c 	.word	0x0017af9c

0003a928 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)>:
   3a928:	e3a03000 	mov	r3, #0
   3a92c:	e92d4030 	push	{r4, r5, lr}
   3a930:	e59f20d0 	ldr	r2, [pc, #208]	; 3aa08 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0xe0>
   3a934:	e3510001 	cmp	r1, #1
   3a938:	e24dd024 	sub	sp, sp, #36	; 0x24
   3a93c:	e1a04000 	mov	r4, r0
   3a940:	e5801004 	str	r1, [r0, #4]
   3a944:	e5802000 	str	r2, [r0]
   3a948:	e580300c 	str	r3, [r0, #12]
   3a94c:	9a000002 	bls	3a95c <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0x34>
   3a950:	e1a00004 	mov	r0, r4
   3a954:	e28dd024 	add	sp, sp, #36	; 0x24
   3a958:	e8bd8030 	pop	{r4, r5, pc}
   3a95c:	e59f50a8 	ldr	r5, [pc, #168]	; 3aa0c <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0xe4>
   3a960:	e5950000 	ldr	r0, [r5]
   3a964:	e1500003 	cmp	r0, r3
   3a968:	1a000009 	bne	3a994 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0x6c>
   3a96c:	e5953004 	ldr	r3, [r5, #4]
   3a970:	e3530000 	cmp	r3, #0
   3a974:	0a00000a 	beq	3a9a4 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0x7c>
   3a978:	e5953004 	ldr	r3, [r5, #4]
   3a97c:	e3530000 	cmp	r3, #0
   3a980:	0afffff2 	beq	3a950 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0x28>
   3a984:	e3a01000 	mov	r1, #0
   3a988:	e1a00004 	mov	r0, r4
   3a98c:	ebffffbb 	bl	3a880 <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]>
   3a990:	eaffffee 	b	3a950 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0x28>
   3a994:	ebffe66b 	bl	34348 <EnterCritical>
   3a998:	e5953004 	ldr	r3, [r5, #4]
   3a99c:	e3530000 	cmp	r3, #0
   3a9a0:	1a00000e 	bne	3a9e0 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0xb8>
   3a9a4:	e28d0008 	add	r0, sp, #8
   3a9a8:	ebffe1a5 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3a9ac:	e3a03000 	mov	r3, #0
   3a9b0:	e58d3000 	str	r3, [sp]
   3a9b4:	e3a03010 	mov	r3, #16
   3a9b8:	e28d0008 	add	r0, sp, #8
   3a9bc:	e08d2003 	add	r2, sp, r3
   3a9c0:	e59f1048 	ldr	r1, [pc, #72]	; 3aa10 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0xe8>
   3a9c4:	ebffe1e5 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   3a9c8:	e3500000 	cmp	r0, #0
   3a9cc:	159d301c 	ldrne	r3, [sp, #28]
   3a9d0:	e28d0008 	add	r0, sp, #8
   3a9d4:	13c33103 	bicne	r3, r3, #-1073741824	; 0xc0000000
   3a9d8:	15853004 	strne	r3, [r5, #4]
   3a9dc:	ebffe19e 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   3a9e0:	e5953000 	ldr	r3, [r5]
   3a9e4:	e3530000 	cmp	r3, #0
   3a9e8:	0a000000 	beq	3a9f0 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0xc8>
   3a9ec:	ebffe681 	bl	343f8 <LeaveCritical>
   3a9f0:	e5943004 	ldr	r3, [r4, #4]
   3a9f4:	e3530001 	cmp	r3, #1
   3a9f8:	9affffde 	bls	3a978 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)+0x50>
   3a9fc:	e1a00004 	mov	r0, r4
   3aa00:	e28dd024 	add	sp, sp, #36	; 0x24
   3aa04:	e8bd8030 	pop	{r4, r5, pc}
   3aa08:	0004f9cc 	.word	0x0004f9cc
   3aa0c:	0017af9c 	.word	0x0017af9c
   3aa10:	00040010 	.word	0x00040010

0003aa14 <CVirtualGPIOPin::Write(unsigned int)>:
   3aa14:	e5902004 	ldr	r2, [r0, #4]
   3aa18:	e1a03001 	mov	r3, r1
   3aa1c:	e3520001 	cmp	r2, #1
   3aa20:	812fff1e 	bxhi	lr
   3aa24:	e59f2020 	ldr	r2, [pc, #32]	; 3aa4c <CVirtualGPIOPin::Write(unsigned int)+0x38>
   3aa28:	e3510001 	cmp	r1, #1
   3aa2c:	e5922004 	ldr	r2, [r2, #4]
   3aa30:	93a03000 	movls	r3, #0
   3aa34:	83a03001 	movhi	r3, #1
   3aa38:	e3520000 	cmp	r2, #0
   3aa3c:	03a03001 	moveq	r3, #1
   3aa40:	e3530000 	cmp	r3, #0
   3aa44:	112fff1e 	bxne	lr
   3aa48:	eaffff8c 	b	3a880 <CVirtualGPIOPin::Write(unsigned int) [clone .part.0]>
   3aa4c:	0017af9c 	.word	0x0017af9c

0003aa50 <CVirtualGPIOPin::Invert()>:
   3aa50:	e5901008 	ldr	r1, [r0, #8]
   3aa54:	e2211001 	eor	r1, r1, #1
   3aa58:	eaffffed 	b	3aa14 <CVirtualGPIOPin::Write(unsigned int)>

0003aa5c <_GLOBAL__sub_I__ZN15CVirtualGPIOPin18s_nGPIOBaseAddressE>:
   3aa5c:	e3a02000 	mov	r2, #0
   3aa60:	e59f3004 	ldr	r3, [pc, #4]	; 3aa6c <_GLOBAL__sub_I__ZN15CVirtualGPIOPin18s_nGPIOBaseAddressE+0x10>
   3aa64:	e5832000 	str	r2, [r3]
   3aa68:	e12fff1e 	bx	lr
   3aa6c:	0017af9c 	.word	0x0017af9c

0003aa70 <CMachineInfo::CMachineInfo()>:
   3aa70:	e3a03000 	mov	r3, #0
   3aa74:	e92d4030 	push	{r4, r5, lr}
   3aa78:	e3a01003 	mov	r1, #3
   3aa7c:	e1a04000 	mov	r4, r0
   3aa80:	e3a0000c 	mov	r0, #12
   3aa84:	e59f21a0 	ldr	r2, [pc, #416]	; 3ac2c <CMachineInfo::CMachineInfo()+0x1bc>
   3aa88:	e24dd024 	sub	sp, sp, #36	; 0x24
   3aa8c:	e5925000 	ldr	r5, [r2]
   3aa90:	e5c40004 	strb	r0, [r4, #4]
   3aa94:	e1550003 	cmp	r5, r3
   3aa98:	e5c41010 	strb	r1, [r4, #16]
   3aa9c:	e5843000 	str	r3, [r4]
   3aaa0:	e5843008 	str	r3, [r4, #8]
   3aaa4:	e584300c 	str	r3, [r4, #12]
   3aaa8:	e5843014 	str	r3, [r4, #20]
   3aaac:	0a00000c 	beq	3aae4 <CMachineInfo::CMachineInfo()+0x74>
   3aab0:	e1c500d8 	ldrd	r0, [r5, #8]
   3aab4:	e5953000 	ldr	r3, [r5]
   3aab8:	e5d5c004 	ldrb	ip, [r5, #4]
   3aabc:	e5d52010 	ldrb	r2, [r5, #16]
   3aac0:	e5843000 	str	r3, [r4]
   3aac4:	e5953014 	ldr	r3, [r5, #20]
   3aac8:	e1c400f8 	strd	r0, [r4, #8]
   3aacc:	e1a00004 	mov	r0, r4
   3aad0:	e5c4c004 	strb	ip, [r4, #4]
   3aad4:	e5c42010 	strb	r2, [r4, #16]
   3aad8:	e5843014 	str	r3, [r4, #20]
   3aadc:	e28dd024 	add	sp, sp, #36	; 0x24
   3aae0:	e8bd8030 	pop	{r4, r5, pc}
   3aae4:	e28d0008 	add	r0, sp, #8
   3aae8:	e5824000 	str	r4, [r2]
   3aaec:	ebffe154 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3aaf0:	e3a03010 	mov	r3, #16
   3aaf4:	e58d5000 	str	r5, [sp]
   3aaf8:	e28d0008 	add	r0, sp, #8
   3aafc:	e08d2003 	add	r2, sp, r3
   3ab00:	e59f1128 	ldr	r1, [pc, #296]	; 3ac30 <CMachineInfo::CMachineInfo()+0x1c0>
   3ab04:	ebffe195 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   3ab08:	e3500000 	cmp	r0, #0
   3ab0c:	0a00000f 	beq	3ab50 <CMachineInfo::CMachineInfo()+0xe0>
   3ab10:	e59d201c 	ldr	r2, [sp, #28]
   3ab14:	e2123502 	ands	r3, r2, #8388608	; 0x800000
   3ab18:	e5842000 	str	r2, [r4]
   3ab1c:	0a000010 	beq	3ab64 <CMachineInfo::CMachineInfo()+0xf4>
   3ab20:	e1a00222 	lsr	r0, r2, #4
   3ab24:	e1a03005 	mov	r3, r5
   3ab28:	e59f1104 	ldr	r1, [pc, #260]	; 3ac34 <CMachineInfo::CMachineInfo()+0x1c4>
   3ab2c:	e6ef0070 	uxtb	r0, r0
   3ab30:	ea000000 	b	3ab38 <CMachineInfo::CMachineInfo()+0xc8>
   3ab34:	e511500c 	ldr	r5, [r1, #-12]
   3ab38:	e1550000 	cmp	r5, r0
   3ab3c:	0a00001d 	beq	3abb8 <CMachineInfo::CMachineInfo()+0x148>
   3ab40:	e2833001 	add	r3, r3, #1
   3ab44:	e353000a 	cmp	r3, #10
   3ab48:	e281100c 	add	r1, r1, #12
   3ab4c:	1afffff8 	bne	3ab34 <CMachineInfo::CMachineInfo()+0xc4>
   3ab50:	e28d0008 	add	r0, sp, #8
   3ab54:	ebffe140 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   3ab58:	e1a00004 	mov	r0, r4
   3ab5c:	e28dd024 	add	sp, sp, #36	; 0x24
   3ab60:	e8bd8030 	pop	{r4, r5, pc}
   3ab64:	e3a01002 	mov	r1, #2
   3ab68:	e59f00c8 	ldr	r0, [pc, #200]	; 3ac38 <CMachineInfo::CMachineInfo()+0x1c8>
   3ab6c:	ea000003 	b	3ab80 <CMachineInfo::CMachineInfo()+0x110>
   3ab70:	e2833001 	add	r3, r3, #1
   3ab74:	e3530011 	cmp	r3, #17
   3ab78:	0afffff4 	beq	3ab50 <CMachineInfo::CMachineInfo()+0xe0>
   3ab7c:	e7901203 	ldr	r1, [r0, r3, lsl #4]
   3ab80:	e1520001 	cmp	r2, r1
   3ab84:	1afffff9 	bne	3ab70 <CMachineInfo::CMachineInfo()+0x100>
   3ab88:	e3a00001 	mov	r0, #1
   3ab8c:	e3a01000 	mov	r1, #0
   3ab90:	e59f20a4 	ldr	r2, [pc, #164]	; 3ac3c <CMachineInfo::CMachineInfo()+0x1cc>
   3ab94:	e5840008 	str	r0, [r4, #8]
   3ab98:	e0823203 	add	r3, r2, r3, lsl #4
   3ab9c:	e5d3007c 	ldrb	r0, [r3, #124]	; 0x7c
   3aba0:	e5c41010 	strb	r1, [r4, #16]
   3aba4:	e1c328d0 	ldrd	r2, [r3, #128]	; 0x80
   3aba8:	e5c40004 	strb	r0, [r4, #4]
   3abac:	e584200c 	str	r2, [r4, #12]
   3abb0:	e5843014 	str	r3, [r4, #20]
   3abb4:	eaffffe5 	b	3ab50 <CMachineInfo::CMachineInfo()+0xe0>
   3abb8:	e59f107c 	ldr	r1, [pc, #124]	; 3ac3c <CMachineInfo::CMachineInfo()+0x1cc>
   3abbc:	e0833083 	add	r3, r3, r3, lsl #1
   3abc0:	e0811103 	add	r1, r1, r3, lsl #2
   3abc4:	e5d1c004 	ldrb	ip, [r1, #4]
   3abc8:	e591e008 	ldr	lr, [r1, #8]
   3abcc:	e1a01622 	lsr	r1, r2, #12
   3abd0:	e201100f 	and	r1, r1, #15
   3abd4:	e3510002 	cmp	r1, #2
   3abd8:	e5c41010 	strb	r1, [r4, #16]
   3abdc:	83a01003 	movhi	r1, #3
   3abe0:	e1a03a22 	lsr	r3, r2, #20
   3abe4:	e2033007 	and	r3, r3, #7
   3abe8:	e3a00c01 	mov	r0, #256	; 0x100
   3abec:	85c41010 	strbhi	r1, [r4, #16]
   3abf0:	e35c0003 	cmp	ip, #3
   3abf4:	03530000 	cmpeq	r3, #0
   3abf8:	e202200f 	and	r2, r2, #15
   3abfc:	e1a00310 	lsl	r0, r0, r3
   3ac00:	e2822001 	add	r2, r2, #1
   3ac04:	e5c4c004 	strb	ip, [r4, #4]
   3ac08:	e584e008 	str	lr, [r4, #8]
   3ac0c:	e5840014 	str	r0, [r4, #20]
   3ac10:	e584200c 	str	r2, [r4, #12]
   3ac14:	1affffcd 	bne	3ab50 <CMachineInfo::CMachineInfo()+0xe0>
   3ac18:	e3520001 	cmp	r2, #1
   3ac1c:	13a03002 	movne	r3, #2
   3ac20:	03a03001 	moveq	r3, #1
   3ac24:	e5c43004 	strb	r3, [r4, #4]
   3ac28:	eaffffc8 	b	3ab50 <CMachineInfo::CMachineInfo()+0xe0>
   3ac2c:	0017afa4 	.word	0x0017afa4
   3ac30:	00010002 	.word	0x00010002
   3ac34:	0004f9e0 	.word	0x0004f9e0
   3ac38:	0004fa4c 	.word	0x0004fa4c
   3ac3c:	0004f9d4 	.word	0x0004f9d4

0003ac40 <CMachineInfo::~CMachineInfo()>:
   3ac40:	e3a0200c 	mov	r2, #12
   3ac44:	e59f3014 	ldr	r3, [pc, #20]	; 3ac60 <CMachineInfo::~CMachineInfo()+0x20>
   3ac48:	e5c02004 	strb	r2, [r0, #4]
   3ac4c:	e5932000 	ldr	r2, [r3]
   3ac50:	e1520000 	cmp	r2, r0
   3ac54:	03a02000 	moveq	r2, #0
   3ac58:	05832000 	streq	r2, [r3]
   3ac5c:	e12fff1e 	bx	lr
   3ac60:	0017afa4 	.word	0x0017afa4

0003ac64 <CMachineInfo::GetMachineModel() const>:
   3ac64:	e5d00004 	ldrb	r0, [r0, #4]
   3ac68:	e12fff1e 	bx	lr

0003ac6c <CMachineInfo::GetMachineName() const>:
   3ac6c:	e5d02004 	ldrb	r2, [r0, #4]
   3ac70:	e59f3008 	ldr	r3, [pc, #8]	; 3ac80 <CMachineInfo::GetMachineName() const+0x14>
   3ac74:	e0833102 	add	r3, r3, r2, lsl #2
   3ac78:	e5930188 	ldr	r0, [r3, #392]	; 0x188
   3ac7c:	e12fff1e 	bx	lr
   3ac80:	0004f9d4 	.word	0x0004f9d4

0003ac84 <CMachineInfo::GetModelMajor() const>:
   3ac84:	e5900008 	ldr	r0, [r0, #8]
   3ac88:	e12fff1e 	bx	lr

0003ac8c <CMachineInfo::GetModelRevision() const>:
   3ac8c:	e590000c 	ldr	r0, [r0, #12]
   3ac90:	e12fff1e 	bx	lr

0003ac94 <CMachineInfo::GetSoCType() const>:
   3ac94:	e5d00010 	ldrb	r0, [r0, #16]
   3ac98:	e12fff1e 	bx	lr

0003ac9c <CMachineInfo::GetRAMSize() const>:
   3ac9c:	e5900014 	ldr	r0, [r0, #20]
   3aca0:	e12fff1e 	bx	lr

0003aca4 <CMachineInfo::GetSoCName() const>:
   3aca4:	e5d02010 	ldrb	r2, [r0, #16]
   3aca8:	e59f3008 	ldr	r3, [pc, #8]	; 3acb8 <CMachineInfo::GetSoCName() const+0x14>
   3acac:	e0833102 	add	r3, r3, r2, lsl #2
   3acb0:	e59301bc 	ldr	r0, [r3, #444]	; 0x1bc
   3acb4:	e12fff1e 	bx	lr
   3acb8:	0004f9d4 	.word	0x0004f9d4

0003acbc <CMachineInfo::GetRevisionRaw() const>:
   3acbc:	e5900000 	ldr	r0, [r0]
   3acc0:	e12fff1e 	bx	lr

0003acc4 <CMachineInfo::GetClockRate(unsigned int) const>:
   3acc4:	e92d4070 	push	{r4, r5, r6, lr}
   3acc8:	e24dd028 	sub	sp, sp, #40	; 0x28
   3accc:	e1a06000 	mov	r6, r0
   3acd0:	e28d000c 	add	r0, sp, #12
   3acd4:	e1a05001 	mov	r5, r1
   3acd8:	ebffe0d9 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3acdc:	e3a03004 	mov	r3, #4
   3ace0:	e58d3000 	str	r3, [sp]
   3ace4:	e3a03014 	mov	r3, #20
   3ace8:	e28d000c 	add	r0, sp, #12
   3acec:	e08d2003 	add	r2, sp, r3
   3acf0:	e59f1078 	ldr	r1, [pc, #120]	; 3ad70 <CMachineInfo::GetClockRate(unsigned int) const+0xac>
   3acf4:	e58d5020 	str	r5, [sp, #32]
   3acf8:	ebffe118 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   3acfc:	e2504000 	subs	r4, r0, #0
   3ad00:	1a00000a 	bne	3ad30 <CMachineInfo::GetClockRate(unsigned int) const+0x6c>
   3ad04:	e3550002 	cmp	r5, #2
   3ad08:	0a00000e 	beq	3ad48 <CMachineInfo::GetClockRate(unsigned int) const+0x84>
   3ad0c:	e3550004 	cmp	r5, #4
   3ad10:	0a000010 	beq	3ad58 <CMachineInfo::GetClockRate(unsigned int) const+0x94>
   3ad14:	e3550001 	cmp	r5, #1
   3ad18:	0a00000c 	beq	3ad50 <CMachineInfo::GetClockRate(unsigned int) const+0x8c>
   3ad1c:	e3a02e11 	mov	r2, #272	; 0x110
   3ad20:	e59f104c 	ldr	r1, [pc, #76]	; 3ad74 <CMachineInfo::GetClockRate(unsigned int) const+0xb0>
   3ad24:	e59f004c 	ldr	r0, [pc, #76]	; 3ad78 <CMachineInfo::GetClockRate(unsigned int) const+0xb4>
   3ad28:	ebfff094 	bl	36f80 <assertion_failed>
   3ad2c:	ea000000 	b	3ad34 <CMachineInfo::GetClockRate(unsigned int) const+0x70>
   3ad30:	e59d4024 	ldr	r4, [sp, #36]	; 0x24
   3ad34:	e28d000c 	add	r0, sp, #12
   3ad38:	ebffe0c7 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   3ad3c:	e1a00004 	mov	r0, r4
   3ad40:	e28dd028 	add	sp, sp, #40	; 0x28
   3ad44:	e8bd8070 	pop	{r4, r5, r6, pc}
   3ad48:	e59f402c 	ldr	r4, [pc, #44]	; 3ad7c <CMachineInfo::GetClockRate(unsigned int) const+0xb8>
   3ad4c:	eafffff8 	b	3ad34 <CMachineInfo::GetClockRate(unsigned int) const+0x70>
   3ad50:	e59f4028 	ldr	r4, [pc, #40]	; 3ad80 <CMachineInfo::GetClockRate(unsigned int) const+0xbc>
   3ad54:	eafffff6 	b	3ad34 <CMachineInfo::GetClockRate(unsigned int) const+0x70>
   3ad58:	e5962008 	ldr	r2, [r6, #8]
   3ad5c:	e59f3020 	ldr	r3, [pc, #32]	; 3ad84 <CMachineInfo::GetClockRate(unsigned int) const+0xc0>
   3ad60:	e3520002 	cmp	r2, #2
   3ad64:	e59f401c 	ldr	r4, [pc, #28]	; 3ad88 <CMachineInfo::GetClockRate(unsigned int) const+0xc4>
   3ad68:	81a04003 	movhi	r4, r3
   3ad6c:	eafffff0 	b	3ad34 <CMachineInfo::GetClockRate(unsigned int) const+0x70>
   3ad70:	00030002 	.word	0x00030002
   3ad74:	0004fba0 	.word	0x0004fba0
   3ad78:	0004a8b8 	.word	0x0004a8b8
   3ad7c:	02dc6c00 	.word	0x02dc6c00
   3ad80:	05f5e100 	.word	0x05f5e100
   3ad84:	11e1a300 	.word	0x11e1a300
   3ad88:	0ee6b280 	.word	0x0ee6b280

0003ad8c <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const>:
   3ad8c:	e3510036 	cmp	r1, #54	; 0x36
   3ad90:	0a00000d 	beq	3adcc <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const+0x40>
   3ad94:	e3510037 	cmp	r1, #55	; 0x37
   3ad98:	1a000004 	bne	3adb0 <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const+0x24>
   3ad9c:	e5d03004 	ldrb	r3, [r0, #4]
   3ada0:	e3530003 	cmp	r3, #3
   3ada4:	83a00028 	movhi	r0, #40	; 0x28
   3ada8:	93a0002d 	movls	r0, #45	; 0x2d
   3adac:	e12fff1e 	bx	lr
   3adb0:	e92d4010 	push	{r4, lr}
   3adb4:	e59f2038 	ldr	r2, [pc, #56]	; 3adf4 <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const+0x68>
   3adb8:	e59f1038 	ldr	r1, [pc, #56]	; 3adf8 <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const+0x6c>
   3adbc:	e59f0038 	ldr	r0, [pc, #56]	; 3adfc <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const+0x70>
   3adc0:	ebfff06e 	bl	36f80 <assertion_failed>
   3adc4:	e3a00000 	mov	r0, #0
   3adc8:	e8bd8010 	pop	{r4, pc}
   3adcc:	e5d03004 	ldrb	r3, [r0, #4]
   3add0:	e3530003 	cmp	r3, #3
   3add4:	9a000004 	bls	3adec <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const+0x60>
   3add8:	e5903008 	ldr	r3, [r0, #8]
   3addc:	e3530003 	cmp	r3, #3
   3ade0:	33a0002d 	movcc	r0, #45	; 0x2d
   3ade4:	23a00029 	movcs	r0, #41	; 0x29
   3ade8:	e12fff1e 	bx	lr
   3adec:	e3a00028 	mov	r0, #40	; 0x28
   3adf0:	e12fff1e 	bx	lr
   3adf4:	0000013b 	.word	0x0000013b
   3adf8:	0004fba0 	.word	0x0004fba0
   3adfc:	0004a8b8 	.word	0x0004a8b8

0003ae00 <CMachineInfo::GetDevice(TDeviceId) const>:
   3ae00:	e3510000 	cmp	r1, #0
   3ae04:	1a000003 	bne	3ae18 <CMachineInfo::GetDevice(TDeviceId) const+0x18>
   3ae08:	e5d00004 	ldrb	r0, [r0, #4]
   3ae0c:	e2500001 	subs	r0, r0, #1
   3ae10:	13a00001 	movne	r0, #1
   3ae14:	e12fff1e 	bx	lr
   3ae18:	e92d4010 	push	{r4, lr}
   3ae1c:	e3a02f55 	mov	r2, #340	; 0x154
   3ae20:	e59f100c 	ldr	r1, [pc, #12]	; 3ae34 <CMachineInfo::GetDevice(TDeviceId) const+0x34>
   3ae24:	e59f000c 	ldr	r0, [pc, #12]	; 3ae38 <CMachineInfo::GetDevice(TDeviceId) const+0x38>
   3ae28:	ebfff054 	bl	36f80 <assertion_failed>
   3ae2c:	e3a00000 	mov	r0, #0
   3ae30:	e8bd8010 	pop	{r4, pc}
   3ae34:	0004fba0 	.word	0x0004fba0
   3ae38:	0004a8b8 	.word	0x0004a8b8

0003ae3c <CMachineInfo::Get()>:
   3ae3c:	e92d4010 	push	{r4, lr}
   3ae40:	e59f4020 	ldr	r4, [pc, #32]	; 3ae68 <CMachineInfo::Get()+0x2c>
   3ae44:	e5940000 	ldr	r0, [r4]
   3ae48:	e3500000 	cmp	r0, #0
   3ae4c:	18bd8010 	popne	{r4, pc}
   3ae50:	e59f2014 	ldr	r2, [pc, #20]	; 3ae6c <CMachineInfo::Get()+0x30>
   3ae54:	e59f1014 	ldr	r1, [pc, #20]	; 3ae70 <CMachineInfo::Get()+0x34>
   3ae58:	e59f0014 	ldr	r0, [pc, #20]	; 3ae74 <CMachineInfo::Get()+0x38>
   3ae5c:	ebfff047 	bl	36f80 <assertion_failed>
   3ae60:	e5940000 	ldr	r0, [r4]
   3ae64:	e8bd8010 	pop	{r4, pc}
   3ae68:	0017afa4 	.word	0x0017afa4
   3ae6c:	0000015d 	.word	0x0000015d
   3ae70:	0004fba0 	.word	0x0004fba0
   3ae74:	0004a034 	.word	0x0004a034

0003ae78 <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()>:
   3ae78:	e92d4070 	push	{r4, r5, r6, lr}
   3ae7c:	e59f4068 	ldr	r4, [pc, #104]	; 3aeec <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()+0x74>
   3ae80:	e1a05000 	mov	r5, r0
   3ae84:	e5940000 	ldr	r0, [r4]
   3ae88:	e3500000 	cmp	r0, #0
   3ae8c:	1a000011 	bne	3aed8 <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()+0x60>
   3ae90:	e5943004 	ldr	r3, [r4, #4]
   3ae94:	e3530000 	cmp	r3, #0
   3ae98:	1a00000c 	bne	3aed0 <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()+0x58>
   3ae9c:	e3a01001 	mov	r1, #1
   3aea0:	e3a03000 	mov	r3, #0
   3aea4:	e5841004 	str	r1, [r4, #4]
   3aea8:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3aeac:	e3a00701 	mov	r0, #262144	; 0x40000
   3aeb0:	e59f2038 	ldr	r2, [pc, #56]	; 3aef0 <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()+0x78>
   3aeb4:	e5820004 	str	r0, [r2, #4]
   3aeb8:	e5821000 	str	r1, [r2]
   3aebc:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3aec0:	e5943000 	ldr	r3, [r4]
   3aec4:	e3530000 	cmp	r3, #0
   3aec8:	0a000000 	beq	3aed0 <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()+0x58>
   3aecc:	ebffe549 	bl	343f8 <LeaveCritical>
   3aed0:	e1a00005 	mov	r0, r5
   3aed4:	e8bd8070 	pop	{r4, r5, r6, pc}
   3aed8:	ebffe51a 	bl	34348 <EnterCritical>
   3aedc:	e5943004 	ldr	r3, [r4, #4]
   3aee0:	e3530000 	cmp	r3, #0
   3aee4:	1afffff5 	bne	3aec0 <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()+0x48>
   3aee8:	eaffffeb 	b	3ae9c <CBcmRandomNumberGenerator::CBcmRandomNumberGenerator()+0x24>
   3aeec:	0017afa8 	.word	0x0017afa8
   3aef0:	20104000 	.word	0x20104000

0003aef4 <CBcmRandomNumberGenerator::~CBcmRandomNumberGenerator()>:
   3aef4:	e12fff1e 	bx	lr

0003aef8 <CBcmRandomNumberGenerator::GetNumber()>:
   3aef8:	e92d4070 	push	{r4, r5, r6, lr}
   3aefc:	e59f404c 	ldr	r4, [pc, #76]	; 3af50 <CBcmRandomNumberGenerator::GetNumber()+0x58>
   3af00:	e5940000 	ldr	r0, [r4]
   3af04:	e3500000 	cmp	r0, #0
   3af08:	1a00000e 	bne	3af48 <CBcmRandomNumberGenerator::GetNumber()+0x50>
   3af0c:	e3a03000 	mov	r3, #0
   3af10:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3af14:	e59f2038 	ldr	r2, [pc, #56]	; 3af54 <CBcmRandomNumberGenerator::GetNumber()+0x5c>
   3af18:	e5923004 	ldr	r3, [r2, #4]
   3af1c:	e1b03c23 	lsrs	r3, r3, #24
   3af20:	0afffffc 	beq	3af18 <CBcmRandomNumberGenerator::GetNumber()+0x20>
   3af24:	e5925008 	ldr	r5, [r2, #8]
   3af28:	e3a03000 	mov	r3, #0
   3af2c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3af30:	e5943000 	ldr	r3, [r4]
   3af34:	e3530000 	cmp	r3, #0
   3af38:	0a000000 	beq	3af40 <CBcmRandomNumberGenerator::GetNumber()+0x48>
   3af3c:	ebffe52d 	bl	343f8 <LeaveCritical>
   3af40:	e1a00005 	mov	r0, r5
   3af44:	e8bd8070 	pop	{r4, r5, r6, pc}
   3af48:	ebffe4fe 	bl	34348 <EnterCritical>
   3af4c:	eaffffee 	b	3af0c <CBcmRandomNumberGenerator::GetNumber()+0x14>
   3af50:	0017afa8 	.word	0x0017afa8
   3af54:	20104000 	.word	0x20104000

0003af58 <_GLOBAL__sub_I__ZN25CBcmRandomNumberGenerator10s_SpinLockE>:
   3af58:	e3a02000 	mov	r2, #0
   3af5c:	e59f3004 	ldr	r3, [pc, #4]	; 3af68 <_GLOBAL__sub_I__ZN25CBcmRandomNumberGenerator10s_SpinLockE+0x10>
   3af60:	e5832000 	str	r2, [r3]
   3af64:	e12fff1e 	bx	lr
   3af68:	0017afa8 	.word	0x0017afa8

0003af6c <CPtrList::CPtrList()>:
   3af6c:	e3a02000 	mov	r2, #0
   3af70:	e5802000 	str	r2, [r0]
   3af74:	e12fff1e 	bx	lr

0003af78 <CPtrList::~CPtrList()>:
   3af78:	e5903000 	ldr	r3, [r0]
   3af7c:	e92d4010 	push	{r4, lr}
   3af80:	e3530000 	cmp	r3, #0
   3af84:	e1a04000 	mov	r4, r0
   3af88:	0a000003 	beq	3af9c <CPtrList::~CPtrList()+0x24>
   3af8c:	e3a0202a 	mov	r2, #42	; 0x2a
   3af90:	e59f100c 	ldr	r1, [pc, #12]	; 3afa4 <CPtrList::~CPtrList()+0x2c>
   3af94:	e59f000c 	ldr	r0, [pc, #12]	; 3afa8 <CPtrList::~CPtrList()+0x30>
   3af98:	ebffeff8 	bl	36f80 <assertion_failed>
   3af9c:	e1a00004 	mov	r0, r4
   3afa0:	e8bd8010 	pop	{r4, pc}
   3afa4:	0004fcbc 	.word	0x0004fcbc
   3afa8:	0004fcc8 	.word	0x0004fcc8

0003afac <CPtrList::GetFirst()>:
   3afac:	e5900000 	ldr	r0, [r0]
   3afb0:	e12fff1e 	bx	lr

0003afb4 <CPtrList::GetNext(TPtrListElement*)>:
   3afb4:	e92d4010 	push	{r4, lr}
   3afb8:	e2514000 	subs	r4, r1, #0
   3afbc:	0a000009 	beq	3afe8 <CPtrList::GetNext(TPtrListElement*)+0x34>
   3afc0:	e59f3034 	ldr	r3, [pc, #52]	; 3affc <CPtrList::GetNext(TPtrListElement*)+0x48>
   3afc4:	e5942000 	ldr	r2, [r4]
   3afc8:	e1520003 	cmp	r2, r3
   3afcc:	0a000003 	beq	3afe0 <CPtrList::GetNext(TPtrListElement*)+0x2c>
   3afd0:	e3a02035 	mov	r2, #53	; 0x35
   3afd4:	e59f1024 	ldr	r1, [pc, #36]	; 3b000 <CPtrList::GetNext(TPtrListElement*)+0x4c>
   3afd8:	e59f0024 	ldr	r0, [pc, #36]	; 3b004 <CPtrList::GetNext(TPtrListElement*)+0x50>
   3afdc:	ebffefe7 	bl	36f80 <assertion_failed>
   3afe0:	e5940008 	ldr	r0, [r4, #8]
   3afe4:	e8bd8010 	pop	{r4, pc}
   3afe8:	e3a02034 	mov	r2, #52	; 0x34
   3afec:	e59f100c 	ldr	r1, [pc, #12]	; 3b000 <CPtrList::GetNext(TPtrListElement*)+0x4c>
   3aff0:	e59f0010 	ldr	r0, [pc, #16]	; 3b008 <CPtrList::GetNext(TPtrListElement*)+0x54>
   3aff4:	ebffefe1 	bl	36f80 <assertion_failed>
   3aff8:	eafffff0 	b	3afc0 <CPtrList::GetNext(TPtrListElement*)+0xc>
   3affc:	504c4d43 	.word	0x504c4d43
   3b000:	0004fcbc 	.word	0x0004fcbc
   3b004:	0004fce8 	.word	0x0004fce8
   3b008:	0004fcd8 	.word	0x0004fcd8

0003b00c <CPtrList::GetPtr(TPtrListElement*)>:
   3b00c:	e92d4010 	push	{r4, lr}
   3b010:	e2514000 	subs	r4, r1, #0
   3b014:	0a000009 	beq	3b040 <CPtrList::GetPtr(TPtrListElement*)+0x34>
   3b018:	e59f3034 	ldr	r3, [pc, #52]	; 3b054 <CPtrList::GetPtr(TPtrListElement*)+0x48>
   3b01c:	e5942000 	ldr	r2, [r4]
   3b020:	e1520003 	cmp	r2, r3
   3b024:	0a000003 	beq	3b038 <CPtrList::GetPtr(TPtrListElement*)+0x2c>
   3b028:	e3a0203d 	mov	r2, #61	; 0x3d
   3b02c:	e59f1024 	ldr	r1, [pc, #36]	; 3b058 <CPtrList::GetPtr(TPtrListElement*)+0x4c>
   3b030:	e59f0024 	ldr	r0, [pc, #36]	; 3b05c <CPtrList::GetPtr(TPtrListElement*)+0x50>
   3b034:	ebffefd1 	bl	36f80 <assertion_failed>
   3b038:	e594000c 	ldr	r0, [r4, #12]
   3b03c:	e8bd8010 	pop	{r4, pc}
   3b040:	e3a0203c 	mov	r2, #60	; 0x3c
   3b044:	e59f100c 	ldr	r1, [pc, #12]	; 3b058 <CPtrList::GetPtr(TPtrListElement*)+0x4c>
   3b048:	e59f0010 	ldr	r0, [pc, #16]	; 3b060 <CPtrList::GetPtr(TPtrListElement*)+0x54>
   3b04c:	ebffefcb 	bl	36f80 <assertion_failed>
   3b050:	eafffff0 	b	3b018 <CPtrList::GetPtr(TPtrListElement*)+0xc>
   3b054:	504c4d43 	.word	0x504c4d43
   3b058:	0004fcbc 	.word	0x0004fcbc
   3b05c:	0004fce8 	.word	0x0004fce8
   3b060:	0004fcd8 	.word	0x0004fcd8

0003b064 <CPtrList::InsertBefore(TPtrListElement*, void*)>:
   3b064:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   3b068:	e1a06000 	mov	r6, r0
   3b06c:	e3a00010 	mov	r0, #16
   3b070:	e1a07002 	mov	r7, r2
   3b074:	e1a04001 	mov	r4, r1
   3b078:	ebffe4a6 	bl	34318 <operator new(unsigned int)>
   3b07c:	e5962000 	ldr	r2, [r6]
   3b080:	e59f30cc 	ldr	r3, [pc, #204]	; 3b154 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xf0>
   3b084:	e3520000 	cmp	r2, #0
   3b088:	e1a05000 	mov	r5, r0
   3b08c:	e580700c 	str	r7, [r0, #12]
   3b090:	e5803000 	str	r3, [r0]
   3b094:	0a000029 	beq	3b140 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xdc>
   3b098:	e3540000 	cmp	r4, #0
   3b09c:	0a000022 	beq	3b12c <CPtrList::InsertBefore(TPtrListElement*, void*)+0xc8>
   3b0a0:	e59f30ac 	ldr	r3, [pc, #172]	; 3b154 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xf0>
   3b0a4:	e5942000 	ldr	r2, [r4]
   3b0a8:	e1520003 	cmp	r2, r3
   3b0ac:	0a000003 	beq	3b0c0 <CPtrList::InsertBefore(TPtrListElement*, void*)+0x5c>
   3b0b0:	e3a0204e 	mov	r2, #78	; 0x4e
   3b0b4:	e59f109c 	ldr	r1, [pc, #156]	; 3b158 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xf4>
   3b0b8:	e59f009c 	ldr	r0, [pc, #156]	; 3b15c <CPtrList::InsertBefore(TPtrListElement*, void*)+0xf8>
   3b0bc:	ebffefaf 	bl	36f80 <assertion_failed>
   3b0c0:	e5963000 	ldr	r3, [r6]
   3b0c4:	e1530004 	cmp	r3, r4
   3b0c8:	0a000011 	beq	3b114 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xb0>
   3b0cc:	e5943004 	ldr	r3, [r4, #4]
   3b0d0:	e5854008 	str	r4, [r5, #8]
   3b0d4:	e3530000 	cmp	r3, #0
   3b0d8:	e5853004 	str	r3, [r5, #4]
   3b0dc:	0a000004 	beq	3b0f4 <CPtrList::InsertBefore(TPtrListElement*, void*)+0x90>
   3b0e0:	e59f206c 	ldr	r2, [pc, #108]	; 3b154 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xf0>
   3b0e4:	e5931000 	ldr	r1, [r3]
   3b0e8:	e1510002 	cmp	r1, r2
   3b0ec:	1a000002 	bne	3b0fc <CPtrList::InsertBefore(TPtrListElement*, void*)+0x98>
   3b0f0:	e5835008 	str	r5, [r3, #8]
   3b0f4:	e5845004 	str	r5, [r4, #4]
   3b0f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   3b0fc:	e3a02060 	mov	r2, #96	; 0x60
   3b100:	e59f1050 	ldr	r1, [pc, #80]	; 3b158 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xf4>
   3b104:	e59f0054 	ldr	r0, [pc, #84]	; 3b160 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xfc>
   3b108:	ebffef9c 	bl	36f80 <assertion_failed>
   3b10c:	e5943004 	ldr	r3, [r4, #4]
   3b110:	eafffff6 	b	3b0f0 <CPtrList::InsertBefore(TPtrListElement*, void*)+0x8c>
   3b114:	e3a03000 	mov	r3, #0
   3b118:	e5845004 	str	r5, [r4, #4]
   3b11c:	e5854008 	str	r4, [r5, #8]
   3b120:	e5865000 	str	r5, [r6]
   3b124:	e5853004 	str	r3, [r5, #4]
   3b128:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   3b12c:	e3a0204d 	mov	r2, #77	; 0x4d
   3b130:	e59f1020 	ldr	r1, [pc, #32]	; 3b158 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xf4>
   3b134:	e59f0028 	ldr	r0, [pc, #40]	; 3b164 <CPtrList::InsertBefore(TPtrListElement*, void*)+0x100>
   3b138:	ebffef90 	bl	36f80 <assertion_failed>
   3b13c:	eaffffd7 	b	3b0a0 <CPtrList::InsertBefore(TPtrListElement*, void*)+0x3c>
   3b140:	e3a0204c 	mov	r2, #76	; 0x4c
   3b144:	e59f100c 	ldr	r1, [pc, #12]	; 3b158 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xf4>
   3b148:	e59f0018 	ldr	r0, [pc, #24]	; 3b168 <CPtrList::InsertBefore(TPtrListElement*, void*)+0x104>
   3b14c:	ebffef8b 	bl	36f80 <assertion_failed>
   3b150:	eaffffd0 	b	3b098 <CPtrList::InsertBefore(TPtrListElement*, void*)+0x34>
   3b154:	504c4d43 	.word	0x504c4d43
   3b158:	0004fcbc 	.word	0x0004fcbc
   3b15c:	0004fd28 	.word	0x0004fd28
   3b160:	0004fd4c 	.word	0x0004fd4c
   3b164:	0004fd1c 	.word	0x0004fd1c
   3b168:	0004fd0c 	.word	0x0004fd0c

0003b16c <CPtrList::InsertAfter(TPtrListElement*, void*)>:
   3b16c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   3b170:	e1a06000 	mov	r6, r0
   3b174:	e1a05001 	mov	r5, r1
   3b178:	e3a00010 	mov	r0, #16
   3b17c:	e1a07002 	mov	r7, r2
   3b180:	ebffe464 	bl	34318 <operator new(unsigned int)>
   3b184:	e59f30c4 	ldr	r3, [pc, #196]	; 3b250 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xe4>
   3b188:	e3550000 	cmp	r5, #0
   3b18c:	e5803000 	str	r3, [r0]
   3b190:	e1a04000 	mov	r4, r0
   3b194:	e580700c 	str	r7, [r0, #12]
   3b198:	e5963000 	ldr	r3, [r6]
   3b19c:	0a00001b 	beq	3b210 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xa4>
   3b1a0:	e3530000 	cmp	r3, #0
   3b1a4:	0a000024 	beq	3b23c <CPtrList::InsertAfter(TPtrListElement*, void*)+0xd0>
   3b1a8:	e59f30a0 	ldr	r3, [pc, #160]	; 3b250 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xe4>
   3b1ac:	e5952000 	ldr	r2, [r5]
   3b1b0:	e1520003 	cmp	r2, r3
   3b1b4:	1a000010 	bne	3b1fc <CPtrList::InsertAfter(TPtrListElement*, void*)+0x90>
   3b1b8:	e5953008 	ldr	r3, [r5, #8]
   3b1bc:	e5845004 	str	r5, [r4, #4]
   3b1c0:	e3530000 	cmp	r3, #0
   3b1c4:	e5843008 	str	r3, [r4, #8]
   3b1c8:	0a000009 	beq	3b1f4 <CPtrList::InsertAfter(TPtrListElement*, void*)+0x88>
   3b1cc:	e59f207c 	ldr	r2, [pc, #124]	; 3b250 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xe4>
   3b1d0:	e5931000 	ldr	r1, [r3]
   3b1d4:	e1510002 	cmp	r1, r2
   3b1d8:	0a000004 	beq	3b1f0 <CPtrList::InsertAfter(TPtrListElement*, void*)+0x84>
   3b1dc:	e3a02085 	mov	r2, #133	; 0x85
   3b1e0:	e59f106c 	ldr	r1, [pc, #108]	; 3b254 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xe8>
   3b1e4:	e59f006c 	ldr	r0, [pc, #108]	; 3b258 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xec>
   3b1e8:	ebffef64 	bl	36f80 <assertion_failed>
   3b1ec:	e5953008 	ldr	r3, [r5, #8]
   3b1f0:	e5834004 	str	r4, [r3, #4]
   3b1f4:	e5854008 	str	r4, [r5, #8]
   3b1f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   3b1fc:	e3a0207e 	mov	r2, #126	; 0x7e
   3b200:	e59f104c 	ldr	r1, [pc, #76]	; 3b254 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xe8>
   3b204:	e59f0050 	ldr	r0, [pc, #80]	; 3b25c <CPtrList::InsertAfter(TPtrListElement*, void*)+0xf0>
   3b208:	ebffef5c 	bl	36f80 <assertion_failed>
   3b20c:	eaffffe9 	b	3b1b8 <CPtrList::InsertAfter(TPtrListElement*, void*)+0x4c>
   3b210:	e3530000 	cmp	r3, #0
   3b214:	0a000003 	beq	3b228 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xbc>
   3b218:	e3a02074 	mov	r2, #116	; 0x74
   3b21c:	e59f1030 	ldr	r1, [pc, #48]	; 3b254 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xe8>
   3b220:	e59f0038 	ldr	r0, [pc, #56]	; 3b260 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xf4>
   3b224:	ebffef55 	bl	36f80 <assertion_failed>
   3b228:	e3a03000 	mov	r3, #0
   3b22c:	e5864000 	str	r4, [r6]
   3b230:	e5843004 	str	r3, [r4, #4]
   3b234:	e5843008 	str	r3, [r4, #8]
   3b238:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   3b23c:	e3a0207d 	mov	r2, #125	; 0x7d
   3b240:	e59f100c 	ldr	r1, [pc, #12]	; 3b254 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xe8>
   3b244:	e59f0018 	ldr	r0, [pc, #24]	; 3b264 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xf8>
   3b248:	ebffef4c 	bl	36f80 <assertion_failed>
   3b24c:	eaffffd5 	b	3b1a8 <CPtrList::InsertAfter(TPtrListElement*, void*)+0x3c>
   3b250:	504c4d43 	.word	0x504c4d43
   3b254:	0004fcbc 	.word	0x0004fcbc
   3b258:	0004fd98 	.word	0x0004fd98
   3b25c:	0004fd74 	.word	0x0004fd74
   3b260:	0004fcc8 	.word	0x0004fcc8
   3b264:	0004fd0c 	.word	0x0004fd0c

0003b268 <CPtrList::Remove(TPtrListElement*)>:
   3b268:	e92d4070 	push	{r4, r5, r6, lr}
   3b26c:	e2514000 	subs	r4, r1, #0
   3b270:	e1a05000 	mov	r5, r0
   3b274:	0a00003e 	beq	3b374 <CPtrList::Remove(TPtrListElement*)+0x10c>
   3b278:	e59f3120 	ldr	r3, [pc, #288]	; 3b3a0 <CPtrList::Remove(TPtrListElement*)+0x138>
   3b27c:	e5942000 	ldr	r2, [r4]
   3b280:	e1520003 	cmp	r2, r3
   3b284:	0a000003 	beq	3b298 <CPtrList::Remove(TPtrListElement*)+0x30>
   3b288:	e3a02090 	mov	r2, #144	; 0x90
   3b28c:	e59f1110 	ldr	r1, [pc, #272]	; 3b3a4 <CPtrList::Remove(TPtrListElement*)+0x13c>
   3b290:	e59f0110 	ldr	r0, [pc, #272]	; 3b3a8 <CPtrList::Remove(TPtrListElement*)+0x140>
   3b294:	ebffef39 	bl	36f80 <assertion_failed>
   3b298:	e5953000 	ldr	r3, [r5]
   3b29c:	e1530004 	cmp	r3, r4
   3b2a0:	0a000023 	beq	3b334 <CPtrList::Remove(TPtrListElement*)+0xcc>
   3b2a4:	e5943004 	ldr	r3, [r4, #4]
   3b2a8:	e3530000 	cmp	r3, #0
   3b2ac:	0a000035 	beq	3b388 <CPtrList::Remove(TPtrListElement*)+0x120>
   3b2b0:	e59f20e8 	ldr	r2, [pc, #232]	; 3b3a0 <CPtrList::Remove(TPtrListElement*)+0x138>
   3b2b4:	e5931000 	ldr	r1, [r3]
   3b2b8:	e1510002 	cmp	r1, r2
   3b2bc:	1a00000f 	bne	3b300 <CPtrList::Remove(TPtrListElement*)+0x98>
   3b2c0:	e5942008 	ldr	r2, [r4, #8]
   3b2c4:	e5832008 	str	r2, [r3, #8]
   3b2c8:	e5942008 	ldr	r2, [r4, #8]
   3b2cc:	e3520000 	cmp	r2, #0
   3b2d0:	0a000004 	beq	3b2e8 <CPtrList::Remove(TPtrListElement*)+0x80>
   3b2d4:	e59f10c4 	ldr	r1, [pc, #196]	; 3b3a0 <CPtrList::Remove(TPtrListElement*)+0x138>
   3b2d8:	e5920000 	ldr	r0, [r2]
   3b2dc:	e1500001 	cmp	r0, r1
   3b2e0:	1a00000c 	bne	3b318 <CPtrList::Remove(TPtrListElement*)+0xb0>
   3b2e4:	e5823004 	str	r3, [r2, #4]
   3b2e8:	e3a03000 	mov	r3, #0
   3b2ec:	e1a00004 	mov	r0, r4
   3b2f0:	e5843000 	str	r3, [r4]
   3b2f4:	e3a01010 	mov	r1, #16
   3b2f8:	e8bd4070 	pop	{r4, r5, r6, lr}
   3b2fc:	eaffe409 	b	34328 <operator delete(void*, unsigned int)>
   3b300:	e3a0209f 	mov	r2, #159	; 0x9f
   3b304:	e59f1098 	ldr	r1, [pc, #152]	; 3b3a4 <CPtrList::Remove(TPtrListElement*)+0x13c>
   3b308:	e59f009c 	ldr	r0, [pc, #156]	; 3b3ac <CPtrList::Remove(TPtrListElement*)+0x144>
   3b30c:	ebffef1b 	bl	36f80 <assertion_failed>
   3b310:	e5943004 	ldr	r3, [r4, #4]
   3b314:	eaffffe9 	b	3b2c0 <CPtrList::Remove(TPtrListElement*)+0x58>
   3b318:	e3a020a4 	mov	r2, #164	; 0xa4
   3b31c:	e59f1080 	ldr	r1, [pc, #128]	; 3b3a4 <CPtrList::Remove(TPtrListElement*)+0x13c>
   3b320:	e59f0088 	ldr	r0, [pc, #136]	; 3b3b0 <CPtrList::Remove(TPtrListElement*)+0x148>
   3b324:	ebffef15 	bl	36f80 <assertion_failed>
   3b328:	e5942008 	ldr	r2, [r4, #8]
   3b32c:	e5943004 	ldr	r3, [r4, #4]
   3b330:	eaffffeb 	b	3b2e4 <CPtrList::Remove(TPtrListElement*)+0x7c>
   3b334:	e5943008 	ldr	r3, [r4, #8]
   3b338:	e3530000 	cmp	r3, #0
   3b33c:	e5853000 	str	r3, [r5]
   3b340:	0affffe8 	beq	3b2e8 <CPtrList::Remove(TPtrListElement*)+0x80>
   3b344:	e59f2054 	ldr	r2, [pc, #84]	; 3b3a0 <CPtrList::Remove(TPtrListElement*)+0x138>
   3b348:	e5931000 	ldr	r1, [r3]
   3b34c:	e1510002 	cmp	r1, r2
   3b350:	0a000004 	beq	3b368 <CPtrList::Remove(TPtrListElement*)+0x100>
   3b354:	e3a02098 	mov	r2, #152	; 0x98
   3b358:	e59f1044 	ldr	r1, [pc, #68]	; 3b3a4 <CPtrList::Remove(TPtrListElement*)+0x13c>
   3b35c:	e59f004c 	ldr	r0, [pc, #76]	; 3b3b0 <CPtrList::Remove(TPtrListElement*)+0x148>
   3b360:	ebffef06 	bl	36f80 <assertion_failed>
   3b364:	e5943008 	ldr	r3, [r4, #8]
   3b368:	e3a02000 	mov	r2, #0
   3b36c:	e5832004 	str	r2, [r3, #4]
   3b370:	eaffffdc 	b	3b2e8 <CPtrList::Remove(TPtrListElement*)+0x80>
   3b374:	e3a0208f 	mov	r2, #143	; 0x8f
   3b378:	e59f1024 	ldr	r1, [pc, #36]	; 3b3a4 <CPtrList::Remove(TPtrListElement*)+0x13c>
   3b37c:	e59f0030 	ldr	r0, [pc, #48]	; 3b3b4 <CPtrList::Remove(TPtrListElement*)+0x14c>
   3b380:	ebffeefe 	bl	36f80 <assertion_failed>
   3b384:	eaffffbb 	b	3b278 <CPtrList::Remove(TPtrListElement*)+0x10>
   3b388:	e3a0209e 	mov	r2, #158	; 0x9e
   3b38c:	e59f1010 	ldr	r1, [pc, #16]	; 3b3a4 <CPtrList::Remove(TPtrListElement*)+0x13c>
   3b390:	e59f0020 	ldr	r0, [pc, #32]	; 3b3b8 <CPtrList::Remove(TPtrListElement*)+0x150>
   3b394:	ebffeef9 	bl	36f80 <assertion_failed>
   3b398:	e5943004 	ldr	r3, [r4, #4]
   3b39c:	eaffffc3 	b	3b2b0 <CPtrList::Remove(TPtrListElement*)+0x48>
   3b3a0:	504c4d43 	.word	0x504c4d43
   3b3a4:	0004fcbc 	.word	0x0004fcbc
   3b3a8:	0004fce8 	.word	0x0004fce8
   3b3ac:	0004fe08 	.word	0x0004fe08
   3b3b0:	0004fdc4 	.word	0x0004fdc4
   3b3b4:	0004fcd8 	.word	0x0004fcd8
   3b3b8:	0004fdf0 	.word	0x0004fdf0

0003b3bc <CPtrList::Find(void*)>:
   3b3bc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   3b3c0:	e5904000 	ldr	r4, [r0]
   3b3c4:	e3540000 	cmp	r4, #0
   3b3c8:	0a000013 	beq	3b41c <CPtrList::Find(void*)+0x60>
   3b3cc:	e1a05001 	mov	r5, r1
   3b3d0:	e59f6050 	ldr	r6, [pc, #80]	; 3b428 <CPtrList::Find(void*)+0x6c>
   3b3d4:	e59f8050 	ldr	r8, [pc, #80]	; 3b42c <CPtrList::Find(void*)+0x70>
   3b3d8:	e59f7050 	ldr	r7, [pc, #80]	; 3b430 <CPtrList::Find(void*)+0x74>
   3b3dc:	ea000002 	b	3b3ec <CPtrList::Find(void*)+0x30>
   3b3e0:	e5944008 	ldr	r4, [r4, #8]
   3b3e4:	e3540000 	cmp	r4, #0
   3b3e8:	0a00000b 	beq	3b41c <CPtrList::Find(void*)+0x60>
   3b3ec:	e5943000 	ldr	r3, [r4]
   3b3f0:	e1530006 	cmp	r3, r6
   3b3f4:	0a000003 	beq	3b408 <CPtrList::Find(void*)+0x4c>
   3b3f8:	e3a020b3 	mov	r2, #179	; 0xb3
   3b3fc:	e1a01008 	mov	r1, r8
   3b400:	e1a00007 	mov	r0, r7
   3b404:	ebffeedd 	bl	36f80 <assertion_failed>
   3b408:	e594300c 	ldr	r3, [r4, #12]
   3b40c:	e1530005 	cmp	r3, r5
   3b410:	1afffff2 	bne	3b3e0 <CPtrList::Find(void*)+0x24>
   3b414:	e1a00004 	mov	r0, r4
   3b418:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   3b41c:	e3a04000 	mov	r4, #0
   3b420:	e1a00004 	mov	r0, r4
   3b424:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   3b428:	504c4d43 	.word	0x504c4d43
   3b42c:	0004fcbc 	.word	0x0004fcbc
   3b430:	0004fce8 	.word	0x0004fce8

0003b434 <mem_init>:
   3b434:	e3500605 	cmp	r0, #5242880	; 0x500000
   3b438:	21a0c000 	movcs	ip, r0
   3b43c:	33a0c605 	movcc	ip, #5242880	; 0x500000
   3b440:	e0801001 	add	r1, r0, r1
   3b444:	e24139ff 	sub	r3, r1, #4177920	; 0x3fc000
   3b448:	e2433a03 	sub	r3, r3, #12288	; 0x3000
   3b44c:	e59f2018 	ldr	r2, [pc, #24]	; 3b46c <mem_init+0x38>
   3b450:	e3c33eff 	bic	r3, r3, #4080	; 0xff0
   3b454:	e2410501 	sub	r0, r1, #4194304	; 0x400000
   3b458:	e3c3300f 	bic	r3, r3, #15
   3b45c:	e582c000 	str	ip, [r2]
   3b460:	e582100c 	str	r1, [r2, #12]
   3b464:	e9820009 	stmib	r2, {r0, r3}
   3b468:	e12fff1e 	bx	lr
   3b46c:	0017afb0 	.word	0x0017afb0

0003b470 <mem_get_size>:
   3b470:	e59f301c 	ldr	r3, [pc, #28]	; 3b494 <mem_get_size+0x24>
   3b474:	e5930004 	ldr	r0, [r3, #4]
   3b478:	e5931000 	ldr	r1, [r3]
   3b47c:	e593200c 	ldr	r2, [r3, #12]
   3b480:	e5933008 	ldr	r3, [r3, #8]
   3b484:	e0400001 	sub	r0, r0, r1
   3b488:	e0423003 	sub	r3, r2, r3
   3b48c:	e0800003 	add	r0, r0, r3
   3b490:	e12fff1e 	bx	lr
   3b494:	0017afb0 	.word	0x0017afb0

0003b498 <malloc>:
   3b498:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   3b49c:	e59f71a0 	ldr	r7, [pc, #416]	; 3b644 <malloc+0x1ac>
   3b4a0:	e1a06000 	mov	r6, r0
   3b4a4:	e5973000 	ldr	r3, [r7]
   3b4a8:	e3530000 	cmp	r3, #0
   3b4ac:	0a00005d 	beq	3b628 <malloc+0x190>
   3b4b0:	e5970010 	ldr	r0, [r7, #16]
   3b4b4:	e3500000 	cmp	r0, #0
   3b4b8:	1a000053 	bne	3b60c <malloc+0x174>
   3b4bc:	e59f4184 	ldr	r4, [pc, #388]	; 3b648 <malloc+0x1b0>
   3b4c0:	e5943000 	ldr	r3, [r4]
   3b4c4:	e3530000 	cmp	r3, #0
   3b4c8:	0a000007 	beq	3b4ec <malloc+0x54>
   3b4cc:	e1560003 	cmp	r6, r3
   3b4d0:	8a000002 	bhi	3b4e0 <malloc+0x48>
   3b4d4:	ea00002c 	b	3b58c <malloc+0xf4>
   3b4d8:	e1530006 	cmp	r3, r6
   3b4dc:	2a00002a 	bcs	3b58c <malloc+0xf4>
   3b4e0:	e5b43008 	ldr	r3, [r4, #8]!
   3b4e4:	e3530000 	cmp	r3, #0
   3b4e8:	1afffffa 	bne	3b4d8 <malloc+0x40>
   3b4ec:	e5975000 	ldr	r5, [r7]
   3b4f0:	e286301f 	add	r3, r6, #31
   3b4f4:	e3c3300f 	bic	r3, r3, #15
   3b4f8:	e5972004 	ldr	r2, [r7, #4]
   3b4fc:	e0853003 	add	r3, r5, r3
   3b500:	e1530002 	cmp	r3, r2
   3b504:	e5873000 	str	r3, [r7]
   3b508:	e5973010 	ldr	r3, [r7, #16]
   3b50c:	8a000039 	bhi	3b5f8 <malloc+0x160>
   3b510:	e3a0104d 	mov	r1, #77	; 0x4d
   3b514:	e3a0204c 	mov	r2, #76	; 0x4c
   3b518:	e3a0c043 	mov	ip, #67	; 0x43
   3b51c:	e3a00042 	mov	r0, #66	; 0x42
   3b520:	e5c56004 	strb	r6, [r5, #4]
   3b524:	e5c51001 	strb	r1, [r5, #1]
   3b528:	e5c52002 	strb	r2, [r5, #2]
   3b52c:	e1a01426 	lsr	r1, r6, #8
   3b530:	e1a02826 	lsr	r2, r6, #16
   3b534:	e3530000 	cmp	r3, #0
   3b538:	e1a06c26 	lsr	r6, r6, #24
   3b53c:	e5c5c000 	strb	ip, [r5]
   3b540:	e5c50003 	strb	r0, [r5, #3]
   3b544:	e5c51005 	strb	r1, [r5, #5]
   3b548:	e5c52006 	strb	r2, [r5, #6]
   3b54c:	e5c56007 	strb	r6, [r5, #7]
   3b550:	1a000026 	bne	3b5f0 <malloc+0x158>
   3b554:	e3a03000 	mov	r3, #0
   3b558:	e2854010 	add	r4, r5, #16
   3b55c:	e314000f 	tst	r4, #15
   3b560:	e5c53008 	strb	r3, [r5, #8]
   3b564:	e5c53009 	strb	r3, [r5, #9]
   3b568:	e5c5300a 	strb	r3, [r5, #10]
   3b56c:	e5c5300b 	strb	r3, [r5, #11]
   3b570:	0a000003 	beq	3b584 <malloc+0xec>
   3b574:	e3a020a1 	mov	r2, #161	; 0xa1
   3b578:	e59f10cc 	ldr	r1, [pc, #204]	; 3b64c <malloc+0x1b4>
   3b57c:	e59f00cc 	ldr	r0, [pc, #204]	; 3b650 <malloc+0x1b8>
   3b580:	ebffee7e 	bl	36f80 <assertion_failed>
   3b584:	e1a00004 	mov	r0, r4
   3b588:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   3b58c:	e5945004 	ldr	r5, [r4, #4]
   3b590:	e3550000 	cmp	r5, #0
   3b594:	01a06003 	moveq	r6, r3
   3b598:	0affffd3 	beq	3b4ec <malloc+0x54>
   3b59c:	e5d51001 	ldrb	r1, [r5, #1]
   3b5a0:	e5d53000 	ldrb	r3, [r5]
   3b5a4:	e5d52002 	ldrb	r2, [r5, #2]
   3b5a8:	e1833401 	orr	r3, r3, r1, lsl #8
   3b5ac:	e5d51003 	ldrb	r1, [r5, #3]
   3b5b0:	e1833802 	orr	r3, r3, r2, lsl #16
   3b5b4:	e59f2098 	ldr	r2, [pc, #152]	; 3b654 <malloc+0x1bc>
   3b5b8:	e1833c01 	orr	r3, r3, r1, lsl #24
   3b5bc:	e1530002 	cmp	r3, r2
   3b5c0:	1a000013 	bne	3b614 <malloc+0x17c>
   3b5c4:	e5d53009 	ldrb	r3, [r5, #9]
   3b5c8:	e5d52008 	ldrb	r2, [r5, #8]
   3b5cc:	e5d5100a 	ldrb	r1, [r5, #10]
   3b5d0:	e1822403 	orr	r2, r2, r3, lsl #8
   3b5d4:	e5d5300b 	ldrb	r3, [r5, #11]
   3b5d8:	e1822801 	orr	r2, r2, r1, lsl #16
   3b5dc:	e1822c03 	orr	r2, r2, r3, lsl #24
   3b5e0:	e5973010 	ldr	r3, [r7, #16]
   3b5e4:	e5842004 	str	r2, [r4, #4]
   3b5e8:	e3530000 	cmp	r3, #0
   3b5ec:	0affffd8 	beq	3b554 <malloc+0xbc>
   3b5f0:	ebffe380 	bl	343f8 <LeaveCritical>
   3b5f4:	eaffffd6 	b	3b554 <malloc+0xbc>
   3b5f8:	e3530000 	cmp	r3, #0
   3b5fc:	1a00000e 	bne	3b63c <malloc+0x1a4>
   3b600:	e3a04000 	mov	r4, #0
   3b604:	e1a00004 	mov	r0, r4
   3b608:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   3b60c:	ebffe34d 	bl	34348 <EnterCritical>
   3b610:	eaffffa9 	b	3b4bc <malloc+0x24>
   3b614:	e3a02089 	mov	r2, #137	; 0x89
   3b618:	e59f102c 	ldr	r1, [pc, #44]	; 3b64c <malloc+0x1b4>
   3b61c:	e59f0034 	ldr	r0, [pc, #52]	; 3b658 <malloc+0x1c0>
   3b620:	ebffee56 	bl	36f80 <assertion_failed>
   3b624:	eaffffe6 	b	3b5c4 <malloc+0x12c>
   3b628:	e3a0206f 	mov	r2, #111	; 0x6f
   3b62c:	e59f1018 	ldr	r1, [pc, #24]	; 3b64c <malloc+0x1b4>
   3b630:	e59f0024 	ldr	r0, [pc, #36]	; 3b65c <malloc+0x1c4>
   3b634:	ebffee51 	bl	36f80 <assertion_failed>
   3b638:	eaffff9c 	b	3b4b0 <malloc+0x18>
   3b63c:	ebffe36d 	bl	343f8 <LeaveCritical>
   3b640:	eaffffee 	b	3b600 <malloc+0x168>
   3b644:	0017afb0 	.word	0x0017afb0
   3b648:	00059058 	.word	0x00059058
   3b64c:	0004fe34 	.word	0x0004fe34
   3b650:	0004fe78 	.word	0x0004fe78
   3b654:	424c4d43 	.word	0x424c4d43
   3b658:	0004fe54 	.word	0x0004fe54
   3b65c:	0004fe40 	.word	0x0004fe40

0003b660 <free>:
   3b660:	e3500000 	cmp	r0, #0
   3b664:	012fff1e 	bxeq	lr
   3b668:	e92d4070 	push	{r4, r5, r6, lr}
   3b66c:	e2405010 	sub	r5, r0, #16
   3b670:	e5d51001 	ldrb	r1, [r5, #1]
   3b674:	e5503010 	ldrb	r3, [r0, #-16]
   3b678:	e5d52002 	ldrb	r2, [r5, #2]
   3b67c:	e1833401 	orr	r3, r3, r1, lsl #8
   3b680:	e5d51003 	ldrb	r1, [r5, #3]
   3b684:	e1833802 	orr	r3, r3, r2, lsl #16
   3b688:	e59f20d8 	ldr	r2, [pc, #216]	; 3b768 <free+0x108>
   3b68c:	e1833c01 	orr	r3, r3, r1, lsl #24
   3b690:	e1530002 	cmp	r3, r2
   3b694:	1a00001f 	bne	3b718 <free+0xb8>
   3b698:	e59f40cc 	ldr	r4, [pc, #204]	; 3b76c <free+0x10c>
   3b69c:	e5943000 	ldr	r3, [r4]
   3b6a0:	e3530000 	cmp	r3, #0
   3b6a4:	08bd8070 	popeq	{r4, r5, r6, pc}
   3b6a8:	e5d51005 	ldrb	r1, [r5, #5]
   3b6ac:	e5d52004 	ldrb	r2, [r5, #4]
   3b6b0:	e5d50006 	ldrb	r0, [r5, #6]
   3b6b4:	e1822401 	orr	r2, r2, r1, lsl #8
   3b6b8:	e5d51007 	ldrb	r1, [r5, #7]
   3b6bc:	e1822800 	orr	r2, r2, r0, lsl #16
   3b6c0:	e1822c01 	orr	r2, r2, r1, lsl #24
   3b6c4:	e1530002 	cmp	r3, r2
   3b6c8:	0a000004 	beq	3b6e0 <free+0x80>
   3b6cc:	e5b43008 	ldr	r3, [r4, #8]!
   3b6d0:	e3530000 	cmp	r3, #0
   3b6d4:	08bd8070 	popeq	{r4, r5, r6, pc}
   3b6d8:	e1530002 	cmp	r3, r2
   3b6dc:	1afffffa 	bne	3b6cc <free+0x6c>
   3b6e0:	e59f6088 	ldr	r6, [pc, #136]	; 3b770 <free+0x110>
   3b6e4:	e5960010 	ldr	r0, [r6, #16]
   3b6e8:	e3500000 	cmp	r0, #0
   3b6ec:	1a00000e 	bne	3b72c <free+0xcc>
   3b6f0:	e5943004 	ldr	r3, [r4, #4]
   3b6f4:	e1a00423 	lsr	r0, r3, #8
   3b6f8:	e1a01823 	lsr	r1, r3, #16
   3b6fc:	e1a02c23 	lsr	r2, r3, #24
   3b700:	e5c53008 	strb	r3, [r5, #8]
   3b704:	e5c50009 	strb	r0, [r5, #9]
   3b708:	e5c5100a 	strb	r1, [r5, #10]
   3b70c:	e5c5200b 	strb	r2, [r5, #11]
   3b710:	e5845004 	str	r5, [r4, #4]
   3b714:	e8bd8070 	pop	{r4, r5, r6, pc}
   3b718:	e3a020ae 	mov	r2, #174	; 0xae
   3b71c:	e59f1050 	ldr	r1, [pc, #80]	; 3b774 <free+0x114>
   3b720:	e59f0050 	ldr	r0, [pc, #80]	; 3b778 <free+0x118>
   3b724:	ebffee15 	bl	36f80 <assertion_failed>
   3b728:	eaffffda 	b	3b698 <free+0x38>
   3b72c:	ebffe305 	bl	34348 <EnterCritical>
   3b730:	e5943004 	ldr	r3, [r4, #4]
   3b734:	e5962010 	ldr	r2, [r6, #16]
   3b738:	e1a00423 	lsr	r0, r3, #8
   3b73c:	e3520000 	cmp	r2, #0
   3b740:	e1a01823 	lsr	r1, r3, #16
   3b744:	e1a02c23 	lsr	r2, r3, #24
   3b748:	e5c53008 	strb	r3, [r5, #8]
   3b74c:	e5c50009 	strb	r0, [r5, #9]
   3b750:	e5c5100a 	strb	r1, [r5, #10]
   3b754:	e5c5200b 	strb	r2, [r5, #11]
   3b758:	e5845004 	str	r5, [r4, #4]
   3b75c:	08bd8070 	popeq	{r4, r5, r6, pc}
   3b760:	e8bd4070 	pop	{r4, r5, r6, lr}
   3b764:	eaffe323 	b	343f8 <LeaveCritical>
   3b768:	424c4d43 	.word	0x424c4d43
   3b76c:	00059058 	.word	0x00059058
   3b770:	0017afb0 	.word	0x0017afb0
   3b774:	0004fe34 	.word	0x0004fe34
   3b778:	0004fe54 	.word	0x0004fe54

0003b77c <palloc>:
   3b77c:	e92d4070 	push	{r4, r5, r6, lr}
   3b780:	e59f40c4 	ldr	r4, [pc, #196]	; 3b84c <palloc+0xd0>
   3b784:	e5943008 	ldr	r3, [r4, #8]
   3b788:	e3530000 	cmp	r3, #0
   3b78c:	0a000029 	beq	3b838 <palloc+0xbc>
   3b790:	e5940014 	ldr	r0, [r4, #20]
   3b794:	e3500000 	cmp	r0, #0
   3b798:	1a000015 	bne	3b7f4 <palloc+0x78>
   3b79c:	e5945018 	ldr	r5, [r4, #24]
   3b7a0:	e3550000 	cmp	r5, #0
   3b7a4:	0a000016 	beq	3b804 <palloc+0x88>
   3b7a8:	e59f30a0 	ldr	r3, [pc, #160]	; 3b850 <palloc+0xd4>
   3b7ac:	e5952000 	ldr	r2, [r5]
   3b7b0:	e1520003 	cmp	r2, r3
   3b7b4:	1a000009 	bne	3b7e0 <palloc+0x64>
   3b7b8:	e3a02000 	mov	r2, #0
   3b7bc:	e5953004 	ldr	r3, [r5, #4]
   3b7c0:	e5852000 	str	r2, [r5]
   3b7c4:	e5843018 	str	r3, [r4, #24]
   3b7c8:	e5943014 	ldr	r3, [r4, #20]
   3b7cc:	e3530000 	cmp	r3, #0
   3b7d0:	0a000000 	beq	3b7d8 <palloc+0x5c>
   3b7d4:	ebffe307 	bl	343f8 <LeaveCritical>
   3b7d8:	e1a00005 	mov	r0, r5
   3b7dc:	e8bd8070 	pop	{r4, r5, r6, pc}
   3b7e0:	e3a020d4 	mov	r2, #212	; 0xd4
   3b7e4:	e59f1068 	ldr	r1, [pc, #104]	; 3b854 <palloc+0xd8>
   3b7e8:	e59f0068 	ldr	r0, [pc, #104]	; 3b858 <palloc+0xdc>
   3b7ec:	ebffede3 	bl	36f80 <assertion_failed>
   3b7f0:	eafffff0 	b	3b7b8 <palloc+0x3c>
   3b7f4:	ebffe2d3 	bl	34348 <EnterCritical>
   3b7f8:	e5945018 	ldr	r5, [r4, #24]
   3b7fc:	e3550000 	cmp	r5, #0
   3b800:	1affffe8 	bne	3b7a8 <palloc+0x2c>
   3b804:	e5945008 	ldr	r5, [r4, #8]
   3b808:	e594200c 	ldr	r2, [r4, #12]
   3b80c:	e2853a01 	add	r3, r5, #4096	; 0x1000
   3b810:	e1530002 	cmp	r3, r2
   3b814:	e5843008 	str	r3, [r4, #8]
   3b818:	e5943014 	ldr	r3, [r4, #20]
   3b81c:	9affffea 	bls	3b7cc <palloc+0x50>
   3b820:	e3530000 	cmp	r3, #0
   3b824:	01a05003 	moveq	r5, r3
   3b828:	0affffea 	beq	3b7d8 <palloc+0x5c>
   3b82c:	ebffe2f1 	bl	343f8 <LeaveCritical>
   3b830:	e3a05000 	mov	r5, #0
   3b834:	eaffffe7 	b	3b7d8 <palloc+0x5c>
   3b838:	e3a020c6 	mov	r2, #198	; 0xc6
   3b83c:	e59f1010 	ldr	r1, [pc, #16]	; 3b854 <palloc+0xd8>
   3b840:	e59f0014 	ldr	r0, [pc, #20]	; 3b85c <palloc+0xe0>
   3b844:	ebffedcd 	bl	36f80 <assertion_failed>
   3b848:	eaffffd0 	b	3b790 <palloc+0x14>
   3b84c:	0017afb0 	.word	0x0017afb0
   3b850:	50474d43 	.word	0x50474d43
   3b854:	0004fe34 	.word	0x0004fe34
   3b858:	0004feb8 	.word	0x0004feb8
   3b85c:	0004fea4 	.word	0x0004fea4

0003b860 <pfree>:
   3b860:	e92d4070 	push	{r4, r5, r6, lr}
   3b864:	e2504000 	subs	r4, r0, #0
   3b868:	08bd8070 	popeq	{r4, r5, r6, pc}
   3b86c:	e59f5044 	ldr	r5, [pc, #68]	; 3b8b8 <pfree+0x58>
   3b870:	e5950014 	ldr	r0, [r5, #20]
   3b874:	e3500000 	cmp	r0, #0
   3b878:	1a000004 	bne	3b890 <pfree+0x30>
   3b87c:	e5952018 	ldr	r2, [r5, #24]
   3b880:	e59f1034 	ldr	r1, [pc, #52]	; 3b8bc <pfree+0x5c>
   3b884:	e5854018 	str	r4, [r5, #24]
   3b888:	e8840006 	stm	r4, {r1, r2}
   3b88c:	e8bd8070 	pop	{r4, r5, r6, pc}
   3b890:	ebffe2ac 	bl	34348 <EnterCritical>
   3b894:	e5951014 	ldr	r1, [r5, #20]
   3b898:	e5953018 	ldr	r3, [r5, #24]
   3b89c:	e59f2018 	ldr	r2, [pc, #24]	; 3b8bc <pfree+0x5c>
   3b8a0:	e3510000 	cmp	r1, #0
   3b8a4:	e1c420f0 	strd	r2, [r4]
   3b8a8:	e5854018 	str	r4, [r5, #24]
   3b8ac:	08bd8070 	popeq	{r4, r5, r6, pc}
   3b8b0:	e8bd4070 	pop	{r4, r5, r6, lr}
   3b8b4:	eaffe2cf 	b	343f8 <LeaveCritical>
   3b8b8:	0017afb0 	.word	0x0017afb0
   3b8bc:	50474d43 	.word	0x50474d43

0003b8c0 <_GLOBAL__sub_I_mem_init>:
   3b8c0:	e3a02001 	mov	r2, #1
   3b8c4:	e59f3008 	ldr	r3, [pc, #8]	; 3b8d4 <_GLOBAL__sub_I_mem_init+0x14>
   3b8c8:	e5832010 	str	r2, [r3, #16]
   3b8cc:	e5832014 	str	r2, [r3, #20]
   3b8d0:	e12fff1e 	bx	lr
   3b8d4:	0017afb0 	.word	0x0017afb0

0003b8d8 <CBcmMailBox::CBcmMailBox(unsigned int)>:
   3b8d8:	e3a02000 	mov	r2, #0
   3b8dc:	e8800006 	stm	r0, {r1, r2}
   3b8e0:	e12fff1e 	bx	lr

0003b8e4 <CBcmMailBox::~CBcmMailBox()>:
   3b8e4:	e12fff1e 	bx	lr

0003b8e8 <CBcmMailBox::Flush()>:
   3b8e8:	e92d4010 	push	{r4, lr}
   3b8ec:	e59f4024 	ldr	r4, [pc, #36]	; 3b918 <CBcmMailBox::Flush()+0x30>
   3b8f0:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
   3b8f4:	e3130101 	tst	r3, #1073741824	; 0x40000000
   3b8f8:	18bd8010 	popne	{r4, pc}
   3b8fc:	e3a00014 	mov	r0, #20
   3b900:	e5943880 	ldr	r3, [r4, #2176]	; 0x880
   3b904:	ebffe5cc 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   3b908:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
   3b90c:	e3130101 	tst	r3, #1073741824	; 0x40000000
   3b910:	0afffff9 	beq	3b8fc <CBcmMailBox::Flush()+0x14>
   3b914:	e8bd8010 	pop	{r4, pc}
   3b918:	2000b000 	.word	0x2000b000

0003b91c <CBcmMailBox::Read()>:
   3b91c:	e5901000 	ldr	r1, [r0]
   3b920:	e59f2020 	ldr	r2, [pc, #32]	; 3b948 <CBcmMailBox::Read()+0x2c>
   3b924:	e5923898 	ldr	r3, [r2, #2200]	; 0x898
   3b928:	e3130101 	tst	r3, #1073741824	; 0x40000000
   3b92c:	1afffffc 	bne	3b924 <CBcmMailBox::Read()+0x8>
   3b930:	e5920880 	ldr	r0, [r2, #2176]	; 0x880
   3b934:	e200300f 	and	r3, r0, #15
   3b938:	e1530001 	cmp	r3, r1
   3b93c:	1afffff8 	bne	3b924 <CBcmMailBox::Read()+0x8>
   3b940:	e3c0000f 	bic	r0, r0, #15
   3b944:	e12fff1e 	bx	lr
   3b948:	2000b000 	.word	0x2000b000

0003b94c <CBcmMailBox::Write(unsigned int)>:
   3b94c:	e92d4070 	push	{r4, r5, r6, lr}
   3b950:	e1a05000 	mov	r5, r0
   3b954:	e1a04001 	mov	r4, r1
   3b958:	e59f2034 	ldr	r2, [pc, #52]	; 3b994 <CBcmMailBox::Write(unsigned int)+0x48>
   3b95c:	e59238b8 	ldr	r3, [r2, #2232]	; 0x8b8
   3b960:	e3530000 	cmp	r3, #0
   3b964:	bafffffc 	blt	3b95c <CBcmMailBox::Write(unsigned int)+0x10>
   3b968:	e314000f 	tst	r4, #15
   3b96c:	0a000003 	beq	3b980 <CBcmMailBox::Write(unsigned int)+0x34>
   3b970:	e3a0205a 	mov	r2, #90	; 0x5a
   3b974:	e59f101c 	ldr	r1, [pc, #28]	; 3b998 <CBcmMailBox::Write(unsigned int)+0x4c>
   3b978:	e59f001c 	ldr	r0, [pc, #28]	; 3b99c <CBcmMailBox::Write(unsigned int)+0x50>
   3b97c:	ebffed7f 	bl	36f80 <assertion_failed>
   3b980:	e5952000 	ldr	r2, [r5]
   3b984:	e59f3008 	ldr	r3, [pc, #8]	; 3b994 <CBcmMailBox::Write(unsigned int)+0x48>
   3b988:	e1844002 	orr	r4, r4, r2
   3b98c:	e58348a0 	str	r4, [r3, #2208]	; 0x8a0
   3b990:	e8bd8070 	pop	{r4, r5, r6, pc}
   3b994:	2000b000 	.word	0x2000b000
   3b998:	0004fedc 	.word	0x0004fedc
   3b99c:	0004feec 	.word	0x0004feec

0003b9a0 <CBcmMailBox::WriteRead(unsigned int)>:
   3b9a0:	e92d4070 	push	{r4, r5, r6, lr}
   3b9a4:	e3a03000 	mov	r3, #0
   3b9a8:	e1a05000 	mov	r5, r0
   3b9ac:	e1a06001 	mov	r6, r1
   3b9b0:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3b9b4:	e5900004 	ldr	r0, [r0, #4]
   3b9b8:	e1500003 	cmp	r0, r3
   3b9bc:	1a00001e 	bne	3ba3c <CBcmMailBox::WriteRead(unsigned int)+0x9c>
   3b9c0:	e59f407c 	ldr	r4, [pc, #124]	; 3ba44 <CBcmMailBox::WriteRead(unsigned int)+0xa4>
   3b9c4:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
   3b9c8:	e3130101 	tst	r3, #1073741824	; 0x40000000
   3b9cc:	1a000005 	bne	3b9e8 <CBcmMailBox::WriteRead(unsigned int)+0x48>
   3b9d0:	e3a00014 	mov	r0, #20
   3b9d4:	e5943880 	ldr	r3, [r4, #2176]	; 0x880
   3b9d8:	ebffe597 	bl	3503c <CTimer::SimpleMsDelay(unsigned int)>
   3b9dc:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
   3b9e0:	e3130101 	tst	r3, #1073741824	; 0x40000000
   3b9e4:	0afffff9 	beq	3b9d0 <CBcmMailBox::WriteRead(unsigned int)+0x30>
   3b9e8:	e1a01006 	mov	r1, r6
   3b9ec:	e1a00005 	mov	r0, r5
   3b9f0:	ebffffd5 	bl	3b94c <CBcmMailBox::Write(unsigned int)>
   3b9f4:	e5951000 	ldr	r1, [r5]
   3b9f8:	e59f2044 	ldr	r2, [pc, #68]	; 3ba44 <CBcmMailBox::WriteRead(unsigned int)+0xa4>
   3b9fc:	e5923898 	ldr	r3, [r2, #2200]	; 0x898
   3ba00:	e3130101 	tst	r3, #1073741824	; 0x40000000
   3ba04:	1afffffc 	bne	3b9fc <CBcmMailBox::WriteRead(unsigned int)+0x5c>
   3ba08:	e5920880 	ldr	r0, [r2, #2176]	; 0x880
   3ba0c:	e200300f 	and	r3, r0, #15
   3ba10:	e1530001 	cmp	r3, r1
   3ba14:	1afffff8 	bne	3b9fc <CBcmMailBox::WriteRead(unsigned int)+0x5c>
   3ba18:	e5953004 	ldr	r3, [r5, #4]
   3ba1c:	e3c0400f 	bic	r4, r0, #15
   3ba20:	e3530000 	cmp	r3, #0
   3ba24:	0a000000 	beq	3ba2c <CBcmMailBox::WriteRead(unsigned int)+0x8c>
   3ba28:	ebffe272 	bl	343f8 <LeaveCritical>
   3ba2c:	e3a03000 	mov	r3, #0
   3ba30:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3ba34:	e1a00004 	mov	r0, r4
   3ba38:	e8bd8070 	pop	{r4, r5, r6, pc}
   3ba3c:	ebffe241 	bl	34348 <EnterCritical>
   3ba40:	eaffffde 	b	3b9c0 <CBcmMailBox::WriteRead(unsigned int)+0x20>
   3ba44:	2000b000 	.word	0x2000b000

0003ba48 <__Divide>:
   3ba48:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   3ba4c:	e2514000 	subs	r4, r1, #0
   3ba50:	e1a06000 	mov	r6, r0
   3ba54:	e1a07002 	mov	r7, r2
   3ba58:	0a000022 	beq	3bae8 <__Divide+0xa0>
   3ba5c:	e3a03000 	mov	r3, #0
   3ba60:	e3a05000 	mov	r5, #0
   3ba64:	e1a02004 	mov	r2, r4
   3ba68:	e1530005 	cmp	r3, r5
   3ba6c:	01520006 	cmpeq	r2, r6
   3ba70:	e1a04006 	mov	r4, r6
   3ba74:	33a01001 	movcc	r1, #1
   3ba78:	3a000001 	bcc	3ba84 <__Divide+0x3c>
   3ba7c:	ea000021 	b	3bb08 <__Divide+0xc0>
   3ba80:	e1a01000 	mov	r1, r0
   3ba84:	e0922002 	adds	r2, r2, r2
   3ba88:	e0a33003 	adc	r3, r3, r3
   3ba8c:	e1530005 	cmp	r3, r5
   3ba90:	01520004 	cmpeq	r2, r4
   3ba94:	e2810001 	add	r0, r1, #1
   3ba98:	3afffff8 	bcc	3ba80 <__Divide+0x38>
   3ba9c:	e3500000 	cmp	r0, #0
   3baa0:	0a00000d 	beq	3badc <__Divide+0x94>
   3baa4:	e3a00000 	mov	r0, #0
   3baa8:	ea000001 	b	3bab4 <__Divide+0x6c>
   3baac:	e1a04006 	mov	r4, r6
   3bab0:	e3a05000 	mov	r5, #0
   3bab4:	e1550003 	cmp	r5, r3
   3bab8:	01540002 	cmpeq	r4, r2
   3babc:	e2411001 	sub	r1, r1, #1
   3bac0:	e1a00080 	lsl	r0, r0, #1
   3bac4:	23800001 	orrcs	r0, r0, #1
   3bac8:	20466002 	subcs	r6, r6, r2
   3bacc:	e1b030a3 	lsrs	r3, r3, #1
   3bad0:	e1a02062 	rrx	r2, r2
   3bad4:	e3710001 	cmn	r1, #1
   3bad8:	1afffff3 	bne	3baac <__Divide+0x64>
   3badc:	e3570000 	cmp	r7, #0
   3bae0:	15876000 	strne	r6, [r7]
   3bae4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   3bae8:	e3a0201f 	mov	r2, #31
   3baec:	e59f101c 	ldr	r1, [pc, #28]	; 3bb10 <__Divide+0xc8>
   3baf0:	e59f001c 	ldr	r0, [pc, #28]	; 3bb14 <__Divide+0xcc>
   3baf4:	ebffed21 	bl	36f80 <assertion_failed>
   3baf8:	ebfff63c 	bl	393f0 <CExceptionHandler::Get()>
   3bafc:	e1a01004 	mov	r1, r4
   3bb00:	ebfff5f3 	bl	392d4 <CExceptionHandler::Throw(unsigned int)>
   3bb04:	eaffffd4 	b	3ba5c <__Divide+0x14>
   3bb08:	e3a01000 	mov	r1, #0
   3bb0c:	eaffffe4 	b	3baa4 <__Divide+0x5c>
   3bb10:	0004ff00 	.word	0x0004ff00
   3bb14:	0004a8b8 	.word	0x0004a8b8

0003bb18 <__DivideInteger>:
   3bb18:	e2502000 	subs	r2, r0, #0
   3bb1c:	e92d4010 	push	{r4, lr}
   3bb20:	ba000009 	blt	3bb4c <__DivideInteger+0x34>
   3bb24:	e3510000 	cmp	r1, #0
   3bb28:	ba000002 	blt	3bb38 <__DivideInteger+0x20>
   3bb2c:	e8bd4010 	pop	{r4, lr}
   3bb30:	e3a02000 	mov	r2, #0
   3bb34:	eaffffc3 	b	3ba48 <__Divide>
   3bb38:	e2611000 	rsb	r1, r1, #0
   3bb3c:	e3a02000 	mov	r2, #0
   3bb40:	ebffffc0 	bl	3ba48 <__Divide>
   3bb44:	e2600000 	rsb	r0, r0, #0
   3bb48:	e8bd8010 	pop	{r4, pc}
   3bb4c:	e3510000 	cmp	r1, #0
   3bb50:	e2620000 	rsb	r0, r2, #0
   3bb54:	aafffff8 	bge	3bb3c <__DivideInteger+0x24>
   3bb58:	e8bd4010 	pop	{r4, lr}
   3bb5c:	e2611000 	rsb	r1, r1, #0
   3bb60:	e3a02000 	mov	r2, #0
   3bb64:	eaffffb7 	b	3ba48 <__Divide>

0003bb68 <CBcmFrameBuffer::UpdatePalette() [clone .part.0]>:
   3bb68:	e3a01000 	mov	r1, #0
   3bb6c:	e3a02c01 	mov	r2, #256	; 0x100
   3bb70:	e92d4010 	push	{r4, lr}
   3bb74:	e1a04000 	mov	r4, r0
   3bb78:	e5903020 	ldr	r3, [r0, #32]
   3bb7c:	e24dd010 	sub	sp, sp, #16
   3bb80:	e583100c 	str	r1, [r3, #12]
   3bb84:	e5832010 	str	r2, [r3, #16]
   3bb88:	e28d0008 	add	r0, sp, #8
   3bb8c:	ebffdd2c 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3bb90:	e59f3050 	ldr	r3, [pc, #80]	; 3bbe8 <CBcmFrameBuffer::UpdatePalette() [clone .part.0]+0x80>
   3bb94:	e5942020 	ldr	r2, [r4, #32]
   3bb98:	e28d0008 	add	r0, sp, #8
   3bb9c:	e58d3000 	str	r3, [sp]
   3bba0:	e59f1044 	ldr	r1, [pc, #68]	; 3bbec <CBcmFrameBuffer::UpdatePalette() [clone .part.0]+0x84>
   3bba4:	e283300c 	add	r3, r3, #12
   3bba8:	ebffdd6c 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   3bbac:	e3500000 	cmp	r0, #0
   3bbb0:	e28d0008 	add	r0, sp, #8
   3bbb4:	0a000003 	beq	3bbc8 <CBcmFrameBuffer::UpdatePalette() [clone .part.0]+0x60>
   3bbb8:	e5943020 	ldr	r3, [r4, #32]
   3bbbc:	e593300c 	ldr	r3, [r3, #12]
   3bbc0:	e3530000 	cmp	r3, #0
   3bbc4:	0a000003 	beq	3bbd8 <CBcmFrameBuffer::UpdatePalette() [clone .part.0]+0x70>
   3bbc8:	ebffdd23 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   3bbcc:	e3a00000 	mov	r0, #0
   3bbd0:	e28dd010 	add	sp, sp, #16
   3bbd4:	e8bd8010 	pop	{r4, pc}
   3bbd8:	ebffdd1f 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   3bbdc:	e3a00001 	mov	r0, #1
   3bbe0:	e28dd010 	add	sp, sp, #16
   3bbe4:	e8bd8010 	pop	{r4, pc}
   3bbe8:	00000408 	.word	0x00000408
   3bbec:	0004800b 	.word	0x0004800b

0003bbf0 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)>:
   3bbf0:	e92d4030 	push	{r4, r5, lr}
   3bbf4:	e1a04000 	mov	r4, r0
   3bbf8:	e3a05000 	mov	r5, #0
   3bbfc:	e3520000 	cmp	r2, #0
   3bc00:	13510000 	cmpne	r1, #0
   3bc04:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   3bc08:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
   3bc0c:	e5841000 	str	r1, [r4]
   3bc10:	e59d1038 	ldr	r1, [sp, #56]	; 0x38
   3bc14:	e5842004 	str	r2, [r4, #4]
   3bc18:	e5843010 	str	r3, [r4, #16]
   3bc1c:	e584000c 	str	r0, [r4, #12]
   3bc20:	e5841008 	str	r1, [r4, #8]
   3bc24:	e5845014 	str	r5, [r4, #20]
   3bc28:	e5845018 	str	r5, [r4, #24]
   3bc2c:	e584501c 	str	r5, [r4, #28]
   3bc30:	e5845020 	str	r5, [r4, #32]
   3bc34:	1a000010 	bne	3bc7c <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x8c>
   3bc38:	e28d000c 	add	r0, sp, #12
   3bc3c:	ebffdd00 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3bc40:	e3a03014 	mov	r3, #20
   3bc44:	e58d5000 	str	r5, [sp]
   3bc48:	e28d000c 	add	r0, sp, #12
   3bc4c:	e08d2003 	add	r2, sp, r3
   3bc50:	e59f10bc 	ldr	r1, [pc, #188]	; 3bd14 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x124>
   3bc54:	ebffdd41 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   3bc58:	e1500005 	cmp	r0, r5
   3bc5c:	1a000024 	bne	3bcf4 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x104>
   3bc60:	e3a02d0a 	mov	r2, #640	; 0x280
   3bc64:	e3a03e1e 	mov	r3, #480	; 0x1e0
   3bc68:	e1c420f0 	strd	r2, [r4]
   3bc6c:	e28d000c 	add	r0, sp, #12
   3bc70:	ebffdcf9 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   3bc74:	e5941008 	ldr	r1, [r4, #8]
   3bc78:	e5943010 	ldr	r3, [r4, #16]
   3bc7c:	e3510000 	cmp	r1, #0
   3bc80:	0a000017 	beq	3bce4 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0xf4>
   3bc84:	e594200c 	ldr	r2, [r4, #12]
   3bc88:	e3520000 	cmp	r2, #0
   3bc8c:	0a000014 	beq	3bce4 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0xf4>
   3bc90:	e3530008 	cmp	r3, #8
   3bc94:	8a000007 	bhi	3bcb8 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0xc8>
   3bc98:	e59f0078 	ldr	r0, [pc, #120]	; 3bd18 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x128>
   3bc9c:	ebffe19e 	bl	3431c <operator new[](unsigned int)>
   3bca0:	e3a02b01 	mov	r2, #1024	; 0x400
   3bca4:	e5840020 	str	r0, [r4, #32]
   3bca8:	e3a01000 	mov	r1, #0
   3bcac:	e2800014 	add	r0, r0, #20
   3bcb0:	ebffe52f 	bl	35174 <memset>
   3bcb4:	e5943010 	ldr	r3, [r4, #16]
   3bcb8:	e59f205c 	ldr	r2, [pc, #92]	; 3bd1c <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x12c>
   3bcbc:	e8941002 	ldm	r4, {r1, ip}
   3bcc0:	e5940008 	ldr	r0, [r4, #8]
   3bcc4:	e582100c 	str	r1, [r2, #12]
   3bcc8:	e594100c 	ldr	r1, [r4, #12]
   3bccc:	e582c010 	str	ip, [r2, #16]
   3bcd0:	e1c202f0 	strd	r0, [r2, #32]
   3bcd4:	e1a00004 	mov	r0, r4
   3bcd8:	e5823034 	str	r3, [r2, #52]	; 0x34
   3bcdc:	e28dd02c 	add	sp, sp, #44	; 0x2c
   3bce0:	e8bd8030 	pop	{r4, r5, pc}
   3bce4:	e8940006 	ldm	r4, {r1, r2}
   3bce8:	e5841008 	str	r1, [r4, #8]
   3bcec:	e584200c 	str	r2, [r4, #12]
   3bcf0:	eaffffe6 	b	3bc90 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0xa0>
   3bcf4:	e1cd22d0 	ldrd	r2, [sp, #32]
   3bcf8:	e2420d0a 	sub	r0, r2, #640	; 0x280
   3bcfc:	e2431e1e 	sub	r1, r3, #480	; 0x1e0
   3bd00:	e3510f96 	cmp	r1, #600	; 0x258
   3bd04:	93500c05 	cmpls	r0, #1280	; 0x500
   3bd08:	e1c420f0 	strd	r2, [r4]
   3bd0c:	8affffd3 	bhi	3bc60 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x70>
   3bd10:	eaffffd5 	b	3bc6c <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x7c>
   3bd14:	00040003 	.word	0x00040003
   3bd18:	00000414 	.word	0x00000414
   3bd1c:	00059090 	.word	0x00059090

0003bd20 <CBcmFrameBuffer::~CBcmFrameBuffer()>:
   3bd20:	e92d4010 	push	{r4, lr}
   3bd24:	e1a04000 	mov	r4, r0
   3bd28:	e3a01014 	mov	r1, #20
   3bd2c:	e5900020 	ldr	r0, [r0, #32]
   3bd30:	ebffe17c 	bl	34328 <operator delete(void*, unsigned int)>
   3bd34:	e1a00004 	mov	r0, r4
   3bd38:	e8bd8010 	pop	{r4, pc}

0003bd3c <CBcmFrameBuffer::SetPalette(unsigned char, unsigned short)>:
   3bd3c:	e5903010 	ldr	r3, [r0, #16]
   3bd40:	e3530008 	cmp	r3, #8
   3bd44:	812fff1e 	bxhi	lr
   3bd48:	e1a03982 	lsl	r3, r2, #19
   3bd4c:	e1a0c5a2 	lsr	ip, r2, #11
   3bd50:	e203373e 	and	r3, r3, #16252928	; 0xf80000
   3bd54:	e5900020 	ldr	r0, [r0, #32]
   3bd58:	e183318c 	orr	r3, r3, ip, lsl #3
   3bd5c:	e1a02282 	lsl	r2, r2, #5
   3bd60:	e38334ff 	orr	r3, r3, #-16777216	; 0xff000000
   3bd64:	e2022b3f 	and	r2, r2, #64512	; 0xfc00
   3bd68:	e0801101 	add	r1, r0, r1, lsl #2
   3bd6c:	e1822003 	orr	r2, r2, r3
   3bd70:	e5812014 	str	r2, [r1, #20]
   3bd74:	e12fff1e 	bx	lr

0003bd78 <CBcmFrameBuffer::SetPalette32(unsigned char, unsigned int)>:
   3bd78:	e5903010 	ldr	r3, [r0, #16]
   3bd7c:	e3530008 	cmp	r3, #8
   3bd80:	95903020 	ldrls	r3, [r0, #32]
   3bd84:	90831101 	addls	r1, r3, r1, lsl #2
   3bd88:	95812014 	strls	r2, [r1, #20]
   3bd8c:	e12fff1e 	bx	lr

0003bd90 <CBcmFrameBuffer::Initialize()>:
   3bd90:	e92d4070 	push	{r4, r5, r6, lr}
   3bd94:	e59f50b0 	ldr	r5, [pc, #176]	; 3be4c <CBcmFrameBuffer::Initialize()+0xbc>
   3bd98:	e24dd008 	sub	sp, sp, #8
   3bd9c:	e1a06000 	mov	r6, r0
   3bda0:	e1a0000d 	mov	r0, sp
   3bda4:	ebffdca6 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3bda8:	e1a0000d 	mov	r0, sp
   3bdac:	e1a01005 	mov	r1, r5
   3bdb0:	e3a02070 	mov	r2, #112	; 0x70
   3bdb4:	ebffdcad 	bl	33070 <CBcmPropertyTags::GetTags(void*, unsigned int)>
   3bdb8:	e2504000 	subs	r4, r0, #0
   3bdbc:	0a00001d 	beq	3be38 <CBcmFrameBuffer::Initialize()+0xa8>
   3bdc0:	e595400c 	ldr	r4, [r5, #12]
   3bdc4:	e3540000 	cmp	r4, #0
   3bdc8:	0a00001a 	beq	3be38 <CBcmFrameBuffer::Initialize()+0xa8>
   3bdcc:	e5954010 	ldr	r4, [r5, #16]
   3bdd0:	e3540000 	cmp	r4, #0
   3bdd4:	0a000017 	beq	3be38 <CBcmFrameBuffer::Initialize()+0xa8>
   3bdd8:	e5954020 	ldr	r4, [r5, #32]
   3bddc:	e3540000 	cmp	r4, #0
   3bde0:	0a000014 	beq	3be38 <CBcmFrameBuffer::Initialize()+0xa8>
   3bde4:	e5954024 	ldr	r4, [r5, #36]	; 0x24
   3bde8:	e3540000 	cmp	r4, #0
   3bdec:	0a000011 	beq	3be38 <CBcmFrameBuffer::Initialize()+0xa8>
   3bdf0:	e5954034 	ldr	r4, [r5, #52]	; 0x34
   3bdf4:	e3540000 	cmp	r4, #0
   3bdf8:	0a00000e 	beq	3be38 <CBcmFrameBuffer::Initialize()+0xa8>
   3bdfc:	e5954058 	ldr	r4, [r5, #88]	; 0x58
   3be00:	e3540000 	cmp	r4, #0
   3be04:	0a00000b 	beq	3be38 <CBcmFrameBuffer::Initialize()+0xa8>
   3be08:	e5961010 	ldr	r1, [r6, #16]
   3be0c:	e595205c 	ldr	r2, [r5, #92]	; 0x5c
   3be10:	e595306c 	ldr	r3, [r5, #108]	; 0x6c
   3be14:	e3c44103 	bic	r4, r4, #-1073741824	; 0xc0000000
   3be18:	e3510008 	cmp	r1, #8
   3be1c:	e5864014 	str	r4, [r6, #20]
   3be20:	e1c621f8 	strd	r2, [r6, #24]
   3be24:	83a04001 	movhi	r4, #1
   3be28:	8a000002 	bhi	3be38 <CBcmFrameBuffer::Initialize()+0xa8>
   3be2c:	e1a00006 	mov	r0, r6
   3be30:	ebffff4c 	bl	3bb68 <CBcmFrameBuffer::UpdatePalette() [clone .part.0]>
   3be34:	e1a04000 	mov	r4, r0
   3be38:	e1a0000d 	mov	r0, sp
   3be3c:	ebffdc86 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   3be40:	e1a00004 	mov	r0, r4
   3be44:	e28dd008 	add	sp, sp, #8
   3be48:	e8bd8070 	pop	{r4, r5, r6, pc}
   3be4c:	00059090 	.word	0x00059090

0003be50 <CBcmFrameBuffer::GetWidth() const>:
   3be50:	e5900000 	ldr	r0, [r0]
   3be54:	e12fff1e 	bx	lr

0003be58 <CBcmFrameBuffer::GetHeight() const>:
   3be58:	e5900004 	ldr	r0, [r0, #4]
   3be5c:	e12fff1e 	bx	lr

0003be60 <CBcmFrameBuffer::GetVirtWidth() const>:
   3be60:	e5900008 	ldr	r0, [r0, #8]
   3be64:	e12fff1e 	bx	lr

0003be68 <CBcmFrameBuffer::GetVirtHeight() const>:
   3be68:	e590000c 	ldr	r0, [r0, #12]
   3be6c:	e12fff1e 	bx	lr

0003be70 <CBcmFrameBuffer::GetPitch() const>:
   3be70:	e590001c 	ldr	r0, [r0, #28]
   3be74:	e12fff1e 	bx	lr

0003be78 <CBcmFrameBuffer::GetDepth() const>:
   3be78:	e5900010 	ldr	r0, [r0, #16]
   3be7c:	e12fff1e 	bx	lr

0003be80 <CBcmFrameBuffer::GetBuffer() const>:
   3be80:	e5900014 	ldr	r0, [r0, #20]
   3be84:	e12fff1e 	bx	lr

0003be88 <CBcmFrameBuffer::GetSize() const>:
   3be88:	e5900018 	ldr	r0, [r0, #24]
   3be8c:	e12fff1e 	bx	lr

0003be90 <CBcmFrameBuffer::UpdatePalette()>:
   3be90:	e5903010 	ldr	r3, [r0, #16]
   3be94:	e3530008 	cmp	r3, #8
   3be98:	9a000001 	bls	3bea4 <CBcmFrameBuffer::UpdatePalette()+0x14>
   3be9c:	e3a00001 	mov	r0, #1
   3bea0:	e12fff1e 	bx	lr
   3bea4:	eaffff2f 	b	3bb68 <CBcmFrameBuffer::UpdatePalette() [clone .part.0]>

0003bea8 <CBcmFrameBuffer::SetVirtualOffset(unsigned int, unsigned int)>:
   3bea8:	e92d4070 	push	{r4, r5, r6, lr}
   3beac:	e24dd028 	sub	sp, sp, #40	; 0x28
   3beb0:	e28d000c 	add	r0, sp, #12
   3beb4:	e1a05001 	mov	r5, r1
   3beb8:	e1a06002 	mov	r6, r2
   3bebc:	ebffdc60 	bl	33044 <CBcmPropertyTags::CBcmPropertyTags()>
   3bec0:	e3a03008 	mov	r3, #8
   3bec4:	e58d3000 	str	r3, [sp]
   3bec8:	e3a03014 	mov	r3, #20
   3becc:	e28d000c 	add	r0, sp, #12
   3bed0:	e08d2003 	add	r2, sp, r3
   3bed4:	e59f1040 	ldr	r1, [pc, #64]	; 3bf1c <CBcmFrameBuffer::SetVirtualOffset(unsigned int, unsigned int)+0x74>
   3bed8:	e58d5020 	str	r5, [sp, #32]
   3bedc:	e58d6024 	str	r6, [sp, #36]	; 0x24
   3bee0:	ebffdc9e 	bl	33160 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   3bee4:	e2504000 	subs	r4, r0, #0
   3bee8:	0a000006 	beq	3bf08 <CBcmFrameBuffer::SetVirtualOffset(unsigned int, unsigned int)+0x60>
   3beec:	e59d3020 	ldr	r3, [sp, #32]
   3bef0:	e1530005 	cmp	r3, r5
   3bef4:	059d4024 	ldreq	r4, [sp, #36]	; 0x24
   3bef8:	13a04000 	movne	r4, #0
   3befc:	00444006 	subeq	r4, r4, r6
   3bf00:	016f4f14 	clzeq	r4, r4
   3bf04:	01a042a4 	lsreq	r4, r4, #5
   3bf08:	e28d000c 	add	r0, sp, #12
   3bf0c:	ebffdc52 	bl	3305c <CBcmPropertyTags::~CBcmPropertyTags()>
   3bf10:	e1a00004 	mov	r0, r4
   3bf14:	e28dd028 	add	sp, sp, #40	; 0x28
   3bf18:	e8bd8070 	pop	{r4, r5, r6, pc}
   3bf1c:	00048009 	.word	0x00048009

0003bf20 <CGPIOClock::CGPIOClock(TGPIOClock, TGPIOClockSource)>:
   3bf20:	e3510006 	cmp	r1, #6
   3bf24:	e92d4010 	push	{r4, lr}
   3bf28:	e1a04000 	mov	r4, r0
   3bf2c:	e5c01000 	strb	r1, [r0]
   3bf30:	e5c02001 	strb	r2, [r0, #1]
   3bf34:	8a000007 	bhi	3bf58 <CGPIOClock::CGPIOClock(TGPIOClock, TGPIOClockSource)+0x38>
   3bf38:	e3520007 	cmp	r2, #7
   3bf3c:	9a000003 	bls	3bf50 <CGPIOClock::CGPIOClock(TGPIOClock, TGPIOClockSource)+0x30>
   3bf40:	e3a0201e 	mov	r2, #30
   3bf44:	e59f1024 	ldr	r1, [pc, #36]	; 3bf70 <CGPIOClock::CGPIOClock(TGPIOClock, TGPIOClockSource)+0x50>
   3bf48:	e59f0024 	ldr	r0, [pc, #36]	; 3bf74 <CGPIOClock::CGPIOClock(TGPIOClock, TGPIOClockSource)+0x54>
   3bf4c:	ebffec0b 	bl	36f80 <assertion_failed>
   3bf50:	e1a00004 	mov	r0, r4
   3bf54:	e8bd8010 	pop	{r4, pc}
   3bf58:	e3a0201d 	mov	r2, #29
   3bf5c:	e59f100c 	ldr	r1, [pc, #12]	; 3bf70 <CGPIOClock::CGPIOClock(TGPIOClock, TGPIOClockSource)+0x50>
   3bf60:	e59f0010 	ldr	r0, [pc, #16]	; 3bf78 <CGPIOClock::CGPIOClock(TGPIOClock, TGPIOClockSource)+0x58>
   3bf64:	ebffec05 	bl	36f80 <assertion_failed>
   3bf68:	e5d42001 	ldrb	r2, [r4, #1]
   3bf6c:	eafffff1 	b	3bf38 <CGPIOClock::CGPIOClock(TGPIOClock, TGPIOClockSource)+0x18>
   3bf70:	0004ff20 	.word	0x0004ff20
   3bf74:	0004ff48 	.word	0x0004ff48
   3bf78:	0004ff30 	.word	0x0004ff30

0003bf7c <CGPIOClock::~CGPIOClock()>:
   3bf7c:	e5d01000 	ldrb	r1, [r0]
   3bf80:	e59f2028 	ldr	r2, [pc, #40]	; 3bfb0 <CGPIOClock::~CGPIOClock()+0x34>
   3bf84:	e3a03000 	mov	r3, #0
   3bf88:	e0812002 	add	r2, r1, r2
   3bf8c:	e1a02182 	lsl	r2, r2, #3
   3bf90:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3bf94:	e59f3018 	ldr	r3, [pc, #24]	; 3bfb4 <CGPIOClock::~CGPIOClock()+0x38>
   3bf98:	e5823000 	str	r3, [r2]
   3bf9c:	e5923000 	ldr	r3, [r2]
   3bfa0:	e2133080 	ands	r3, r3, #128	; 0x80
   3bfa4:	1afffffc 	bne	3bf9c <CGPIOClock::~CGPIOClock()+0x20>
   3bfa8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3bfac:	e12fff1e 	bx	lr
   3bfb0:	0402020e 	.word	0x0402020e
   3bfb4:	5a000020 	.word	0x5a000020

0003bfb8 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)>:
   3bfb8:	e3530003 	cmp	r3, #3
   3bfbc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3bfc0:	e1a06003 	mov	r6, r3
   3bfc4:	e1a08000 	mov	r8, r0
   3bfc8:	e1a09001 	mov	r9, r1
   3bfcc:	e1a07002 	mov	r7, r2
   3bfd0:	8a000028 	bhi	3c078 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xc0>
   3bfd4:	e59f30c4 	ldr	r3, [pc, #196]	; 3c0a0 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xe8>
   3bfd8:	e7933106 	ldr	r3, [r3, r6, lsl #2]
   3bfdc:	e1530009 	cmp	r3, r9
   3bfe0:	93590a01 	cmpls	r9, #4096	; 0x1000
   3bfe4:	3a000003 	bcc	3bff8 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0x40>
   3bfe8:	e3a0202c 	mov	r2, #44	; 0x2c
   3bfec:	e59f10b0 	ldr	r1, [pc, #176]	; 3c0a4 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xec>
   3bff0:	e59f00b0 	ldr	r0, [pc, #176]	; 3c0a8 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xf0>
   3bff4:	ebffebe1 	bl	36f80 <assertion_failed>
   3bff8:	e3570a01 	cmp	r7, #4096	; 0x1000
   3bffc:	2a000022 	bcs	3c08c <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xd4>
   3c000:	e5d82000 	ldrb	r2, [r8]
   3c004:	e59f50a0 	ldr	r5, [pc, #160]	; 3c0ac <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xf4>
   3c008:	e3a03000 	mov	r3, #0
   3c00c:	e0825005 	add	r5, r2, r5
   3c010:	e1a05185 	lsl	r5, r5, #3
   3c014:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3c018:	e59f3090 	ldr	r3, [pc, #144]	; 3c0b0 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xf8>
   3c01c:	e5853000 	str	r3, [r5]
   3c020:	e5953000 	ldr	r3, [r5]
   3c024:	e2134080 	ands	r4, r3, #128	; 0x80
   3c028:	1afffffc 	bne	3c020 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0x68>
   3c02c:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   3c030:	e387745a 	orr	r7, r7, #1509949440	; 0x5a000000
   3c034:	e1877609 	orr	r7, r7, r9, lsl #12
   3c038:	e5857004 	str	r7, [r5, #4]
   3c03c:	e3a0000a 	mov	r0, #10
   3c040:	ebffe404 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   3c044:	e1a06486 	lsl	r6, r6, #9
   3c048:	e5d83001 	ldrb	r3, [r8, #1]
   3c04c:	e386645a 	orr	r6, r6, #1509949440	; 0x5a000000
   3c050:	e1866003 	orr	r6, r6, r3
   3c054:	e5856000 	str	r6, [r5]
   3c058:	e3a0000a 	mov	r0, #10
   3c05c:	ebffe3fd 	bl	35058 <CTimer::SimpleusDelay(unsigned int)>
   3c060:	e5953000 	ldr	r3, [r5]
   3c064:	e383345a 	orr	r3, r3, #1509949440	; 0x5a000000
   3c068:	e3833010 	orr	r3, r3, #16
   3c06c:	e5853000 	str	r3, [r5]
   3c070:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   3c074:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3c078:	e3a0202b 	mov	r2, #43	; 0x2b
   3c07c:	e59f1020 	ldr	r1, [pc, #32]	; 3c0a4 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xec>
   3c080:	e59f002c 	ldr	r0, [pc, #44]	; 3c0b4 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xfc>
   3c084:	ebffebbd 	bl	36f80 <assertion_failed>
   3c088:	eaffffd1 	b	3bfd4 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0x1c>
   3c08c:	e3a0202d 	mov	r2, #45	; 0x2d
   3c090:	e59f100c 	ldr	r1, [pc, #12]	; 3c0a4 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0xec>
   3c094:	e59f001c 	ldr	r0, [pc, #28]	; 3c0b8 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0x100>
   3c098:	ebffebb8 	bl	36f80 <assertion_failed>
   3c09c:	eaffffd7 	b	3c000 <CGPIOClock::Start(unsigned int, unsigned int, unsigned int)+0x48>
   3c0a0:	0004ff10 	.word	0x0004ff10
   3c0a4:	0004ff20 	.word	0x0004ff20
   3c0a8:	0004ff74 	.word	0x0004ff74
   3c0ac:	0402020e 	.word	0x0402020e
   3c0b0:	5a000020 	.word	0x5a000020
   3c0b4:	0004ff68 	.word	0x0004ff68
   3c0b8:	0004ffa0 	.word	0x0004ffa0

0003c0bc <CGPIOClock::Stop()>:
   3c0bc:	e5d01000 	ldrb	r1, [r0]
   3c0c0:	e59f2028 	ldr	r2, [pc, #40]	; 3c0f0 <CGPIOClock::Stop()+0x34>
   3c0c4:	e3a03000 	mov	r3, #0
   3c0c8:	e0812002 	add	r2, r1, r2
   3c0cc:	e1a02182 	lsl	r2, r2, #3
   3c0d0:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   3c0d4:	e59f3018 	ldr	r3, [pc, #24]	; 3c0f4 <CGPIOClock::Stop()+0x38>
   3c0d8:	e5823000 	str	r3, [r2]
   3c0dc:	e5923000 	ldr	r3, [r2]
   3c0e0:	e2133080 	ands	r3, r3, #128	; 0x80
   3c0e4:	1afffffc 	bne	3c0dc <CGPIOClock::Stop()+0x20>
   3c0e8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   3c0ec:	e12fff1e 	bx	lr
   3c0f0:	0402020e 	.word	0x0402020e
   3c0f4:	5a000020 	.word	0x5a000020
